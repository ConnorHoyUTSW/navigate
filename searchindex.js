Search.setIndex({"docnames": ["_autosummary/aslm.config", "_autosummary/aslm.config.config", "_autosummary/aslm.config.config.build_nested_dict", "_autosummary/aslm.config.config.get_configuration_paths", "_autosummary/aslm.config.config.load_configs", "_autosummary/aslm.config.config.update_config_dict", "_autosummary/aslm.controller", "_autosummary/aslm.controller.configuration_controller", "_autosummary/aslm.controller.configuration_controller.ConfigurationController", "_autosummary/aslm.controller.thread_pool", "_autosummary/aslm.controller.thread_pool.SelfLockThread", "_autosummary/aslm.controller.thread_pool.SynchronizedThreadPool", "_autosummary/aslm.controller.thread_pool.ThreadWaitlist", "_autosummary/aslm.model", "_autosummary/aslm.model.analysis", "_autosummary/aslm.model.analysis.boundary_detect", "_autosummary/aslm.model.analysis.boundary_detect.binary_detect", "_autosummary/aslm.model.analysis.boundary_detect.find_tissue_boundary_2d", "_autosummary/aslm.model.analysis.boundary_detect.has_tissue", "_autosummary/aslm.model.analysis.boundary_detect.map_boundary", "_autosummary/aslm.model.analysis.detection", "_autosummary/aslm.model.analysis.detection.add_median_border", "_autosummary/aslm.model.analysis.detection.combine_images", "_autosummary/aslm.model.analysis.detection.log_detection", "_autosummary/aslm.model.analysis.detection.make_inside_image", "_autosummary/aslm.model.analysis.detection.make_normalized_image", "_autosummary/aslm.model.analysis.detection.make_sphere_3D", "_autosummary/aslm.model.analysis.detection.multiscale_surface_filter_3D", "_autosummary/aslm.model.analysis.detection.surface_filter_gauss_3D", "_autosummary/aslm.model.analysis.detection.three_level_segmentation", "_autosummary/aslm.model.analysis.image_contrast", "_autosummary/aslm.model.analysis.image_contrast.estimate_and_correct_flatfield", "_autosummary/aslm.model.analysis.image_contrast.estimate_image_resolution", "_autosummary/aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy", "_autosummary/aslm.model.analysis.image_contrast.image_intensity", "_autosummary/aslm.model.analysis.image_contrast.normalized_dct_shannon_entropy", "_autosummary/aslm.model.analysis.image_decorrelation", "_autosummary/aslm.model.analysis.image_decorrelation.apodize_image", "_autosummary/aslm.model.analysis.image_decorrelation.get_correlation_coefficient", "_autosummary/aslm.model.analysis.image_decorrelation.get_decorrelation_local_maxima", "_autosummary/aslm.model.analysis.image_decorrelation.get_image_decorrelation", "_autosummary/aslm.model.analysis.image_decorrelation.get_radial_average", "_autosummary/aslm.model.analysis.image_decorrelation.image_to_polar", "_autosummary/aslm.model.analysis.image_decorrelation.linear_map", "_autosummary/aslm.model.analysis.image_decorrelation.main_image_decorr", "_autosummary/aslm.model.analysis.image_transform", "_autosummary/aslm.model.analysis.image_transform.deskew_image", "_autosummary/aslm.model.analysis.image_transform.initiate_gpu", "_autosummary/aslm.model.analysis.noise_model", "_autosummary/aslm.model.analysis.noise_model.compute_noise_sigma", "_autosummary/aslm.model.analysis.spectral_unmixing", "_autosummary/aslm.model.analysis.spectral_unmixing.to_do", "_autosummary/aslm.model.concurrency", "_autosummary/aslm.model.concurrency.concurrency_tools", "_autosummary/aslm.model.concurrency.concurrency_tools.CustodyThread", "_autosummary/aslm.model.concurrency.concurrency_tools.FancyThread", "_autosummary/aslm.model.concurrency.concurrency_tools.MyTestClass", "_autosummary/aslm.model.concurrency.concurrency_tools.ObjectInSubprocess", "_autosummary/aslm.model.concurrency.concurrency_tools.PoliteThread", "_autosummary/aslm.model.concurrency.concurrency_tools.ResultThread", "_autosummary/aslm.model.concurrency.concurrency_tools.SharedNDArray", "_autosummary/aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess", "_autosummary/aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread", "_autosummary/aslm.model.concurrency.concurrency_tools.TestSharedNDArray", "_autosummary/aslm.model.concurrency.proxy_objects", "_autosummary/aslm.model.concurrency.proxy_objects.ProxyManager", "_autosummary/aslm.model.concurrency.proxy_objects.ProxyObject", "_autosummary/aslm.model.concurrency.proxy_objects.launch_custody_thread", "_autosummary/aslm.model.concurrency.proxy_objects.launch_thread", "_autosummary/aslm.model.concurrency.shared_memory", "_autosummary/aslm.model.concurrency.write_parameters", "_autosummary/aslm.model.concurrency.write_parameters.write_Params", "_autosummary/aslm.model.data_sources", "_autosummary/aslm.model.data_sources.bdv_data_source", "_autosummary/aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource", "_autosummary/aslm.model.data_sources.data_source", "_autosummary/aslm.model.data_sources.data_source.DataSource", "_autosummary/aslm.model.data_sources.get_data_source", "_autosummary/aslm.model.data_sources.tiff_data_source", "_autosummary/aslm.model.data_sources.tiff_data_source.TiffDataSource", "_autosummary/aslm.model.data_sources.zarr_data_source", "_autosummary/aslm.model.data_sources.zarr_data_source.ZarrDataSource", "_autosummary/aslm.model.device_startup_functions", "_autosummary/aslm.model.device_startup_functions.DummyDeviceConnection", "_autosummary/aslm.model.device_startup_functions.auto_redial", "_autosummary/aslm.model.device_startup_functions.device_not_found", "_autosummary/aslm.model.device_startup_functions.load_camera_connection", "_autosummary/aslm.model.device_startup_functions.load_devices", "_autosummary/aslm.model.device_startup_functions.load_filter_wheel_connection", "_autosummary/aslm.model.device_startup_functions.load_stages", "_autosummary/aslm.model.device_startup_functions.load_zoom_connection", "_autosummary/aslm.model.device_startup_functions.start_camera", "_autosummary/aslm.model.device_startup_functions.start_daq", "_autosummary/aslm.model.device_startup_functions.start_filter_wheel", "_autosummary/aslm.model.device_startup_functions.start_galvo", "_autosummary/aslm.model.device_startup_functions.start_lasers", "_autosummary/aslm.model.device_startup_functions.start_remote_focus_device", "_autosummary/aslm.model.device_startup_functions.start_shutter", "_autosummary/aslm.model.device_startup_functions.start_stage", "_autosummary/aslm.model.device_startup_functions.start_zoom", "_autosummary/aslm.model.devices", "_autosummary/aslm.model.devices.APIs", "_autosummary/aslm.model.devices.APIs.coherent", "_autosummary/aslm.model.devices.APIs.dynamixel", "_autosummary/aslm.model.devices.APIs.logitech", "_autosummary/aslm.model.devices.APIs.omicron", "_autosummary/aslm.model.devices.camera", "_autosummary/aslm.model.devices.camera.camera_base", "_autosummary/aslm.model.devices.camera.camera_base.CameraBase", "_autosummary/aslm.model.devices.camera.camera_hamamatsu", "_autosummary/aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca", "_autosummary/aslm.model.devices.camera.camera_synthetic", "_autosummary/aslm.model.devices.camera.camera_synthetic.SyntheticCamera", "_autosummary/aslm.model.devices.camera.camera_synthetic.SyntheticCameraController", "_autosummary/aslm.model.devices.daq", "_autosummary/aslm.model.devices.daq.daq_base", "_autosummary/aslm.model.devices.daq.daq_base.DAQBase", "_autosummary/aslm.model.devices.daq.daq_synthetic", "_autosummary/aslm.model.devices.daq.daq_synthetic.SyntheticDAQ", "_autosummary/aslm.model.devices.filter_wheel", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_base", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_synthetic", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel", "_autosummary/aslm.model.devices.galvo", "_autosummary/aslm.model.devices.galvo.galvo_base", "_autosummary/aslm.model.devices.galvo.galvo_base.GalvoBase", "_autosummary/aslm.model.devices.joystick", "_autosummary/aslm.model.devices.joystick.joystick_base", "_autosummary/aslm.model.devices.joystick.joystick_base.JoystickBase", "_autosummary/aslm.model.devices.joystick.joystick_logitech", "_autosummary/aslm.model.devices.joystick.joystick_logitech.JoystickLogitech", "_autosummary/aslm.model.devices.joystick.joystick_synthetic", "_autosummary/aslm.model.devices.joystick.joystick_synthetic.SyntheticJoystick", "_autosummary/aslm.model.devices.lasers", "_autosummary/aslm.model.devices.lasers.laser_base", "_autosummary/aslm.model.devices.lasers.laser_base.LaserBase", "_autosummary/aslm.model.devices.lasers.laser_synthetic", "_autosummary/aslm.model.devices.lasers.laser_synthetic.SyntheticLaser", "_autosummary/aslm.model.devices.lasers.laser_trigger_base", "_autosummary/aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase", "_autosummary/aslm.model.devices.lasers.laser_trigger_synthetic", "_autosummary/aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers", "_autosummary/aslm.model.devices.objectives", "_autosummary/aslm.model.devices.objectives.Objective", "_autosummary/aslm.model.devices.remote_focus", "_autosummary/aslm.model.devices.remote_focus.remote_focus_base", "_autosummary/aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase", "_autosummary/aslm.model.devices.remote_focus.remote_focus_equipment_solutions", "_autosummary/aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions", "_autosummary/aslm.model.devices.shutter", "_autosummary/aslm.model.devices.shutter.laser_shutter_base", "_autosummary/aslm.model.devices.shutter.laser_shutter_base.ShutterBase", "_autosummary/aslm.model.devices.shutter.laser_shutter_synthetic", "_autosummary/aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter", "_autosummary/aslm.model.devices.stages", "_autosummary/aslm.model.devices.stages.stage_asi", "_autosummary/aslm.model.devices.stages.stage_asi.ASIStage", "_autosummary/aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection", "_autosummary/aslm.model.devices.stages.stage_base", "_autosummary/aslm.model.devices.stages.stage_base.StageBase", "_autosummary/aslm.model.devices.stages.stage_galvo", "_autosummary/aslm.model.devices.stages.stage_galvo.GalvoNIStage", "_autosummary/aslm.model.devices.stages.stage_mcl", "_autosummary/aslm.model.devices.stages.stage_mcl.MCLStage", "_autosummary/aslm.model.devices.stages.stage_mcl.build_MCLStage_connection", "_autosummary/aslm.model.devices.stages.stage_pi", "_autosummary/aslm.model.devices.stages.stage_pi.PIStage", "_autosummary/aslm.model.devices.stages.stage_pi.build_PIStage_connection", "_autosummary/aslm.model.devices.stages.stage_sutter", "_autosummary/aslm.model.devices.stages.stage_sutter.SutterStage", "_autosummary/aslm.model.devices.stages.stage_sutter.build_sutter_stage_connection", "_autosummary/aslm.model.devices.stages.stage_synthetic", "_autosummary/aslm.model.devices.stages.stage_synthetic.SyntheticStage", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection", "_autosummary/aslm.model.devices.zoom", "_autosummary/aslm.model.devices.zoom.zoom_base", "_autosummary/aslm.model.devices.zoom.zoom_base.ZoomBase", "_autosummary/aslm.model.devices.zoom.zoom_synthetic", "_autosummary/aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom", "_autosummary/aslm.model.dummy", "_autosummary/aslm.model.dummy.DummyDevice", "_autosummary/aslm.model.dummy.DummyModel", "_autosummary/aslm.model.features", "_autosummary/aslm.model.features.autofocus", "_autosummary/aslm.model.features.autofocus.Autofocus", "_autosummary/aslm.model.features.common_features", "_autosummary/aslm.model.features.common_features.ChangeResolution", "_autosummary/aslm.model.features.common_features.FindTissueSimple2D", "_autosummary/aslm.model.features.common_features.Snap", "_autosummary/aslm.model.features.common_features.WaitToContinue", "_autosummary/aslm.model.features.common_features.ZStackAcquisition", "_autosummary/aslm.model.features.dummy_detective", "_autosummary/aslm.model.features.dummy_detective.Dummy_Detective", "_autosummary/aslm.model.features.feature_container", "_autosummary/aslm.model.features.feature_container.Container", "_autosummary/aslm.model.features.feature_container.DataContainer", "_autosummary/aslm.model.features.feature_container.DataNode", "_autosummary/aslm.model.features.feature_container.SignalContainer", "_autosummary/aslm.model.features.feature_container.SignalNode", "_autosummary/aslm.model.features.feature_container.TreeNode", "_autosummary/aslm.model.features.feature_container.dummy_True", "_autosummary/aslm.model.features.feature_container.dummy_func", "_autosummary/aslm.model.features.feature_container.get_registered_funcs", "_autosummary/aslm.model.features.feature_container.load_features", "_autosummary/aslm.model.features.image_writer", "_autosummary/aslm.model.features.image_writer.ImageWriter", "_autosummary/aslm.model.features.restful_features", "_autosummary/aslm.model.features.restful_features.IlastikSegmentation", "_autosummary/aslm.model.features.restful_features.prepare_service", "_autosummary/aslm.model.features.volume_search", "_autosummary/aslm.model.features.volume_search.VolumeSearch", "_autosummary/aslm.model.metadata_sources", "_autosummary/aslm.model.metadata_sources.bdv_metadata", "_autosummary/aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata", "_autosummary/aslm.model.metadata_sources.metadata", "_autosummary/aslm.model.metadata_sources.metadata.Metadata", "_autosummary/aslm.model.metadata_sources.metadata.XMLMetadata", "_autosummary/aslm.model.metadata_sources.ome_tiff_metadata", "_autosummary/aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata", "_autosummary/aslm.model.microscope", "_autosummary/aslm.model.microscope.Microscope", "_autosummary/aslm.model.model", "_autosummary/aslm.model.model.Model", "_autosummary/aslm.model.waveforms", "_autosummary/aslm.model.waveforms.camera_exposure", "_autosummary/aslm.model.waveforms.dc_value", "_autosummary/aslm.model.waveforms.sawtooth", "_autosummary/aslm.model.waveforms.sine_wave", "_autosummary/aslm.model.waveforms.single_pulse", "_autosummary/aslm.model.waveforms.smooth_waveform", "_autosummary/aslm.model.waveforms.square", "_autosummary/aslm.model.waveforms.tunable_lens_ramp", "_autosummary/aslm.tools", "_autosummary/aslm.tools.beams", "_autosummary/aslm.tools.beams.fit_gaussian_beam_error", "_autosummary/aslm.tools.beams.fit_gaussian_beam_mse", "_autosummary/aslm.tools.beams.gaussian_beam", "_autosummary/aslm.tools.common_dict_tools", "_autosummary/aslm.tools.common_dict_tools.update_settings_common", "_autosummary/aslm.tools.common_dict_tools.update_stage_dict", "_autosummary/aslm.tools.common_functions", "_autosummary/aslm.tools.common_functions.build_ref_name", "_autosummary/aslm.tools.common_functions.combine_funcs", "_autosummary/aslm.tools.common_functions.copy_proxy_object", "_autosummary/aslm.tools.decorators", "_autosummary/aslm.tools.decorators.function_timer", "_autosummary/aslm.tools.file_functions", "_autosummary/aslm.tools.file_functions.create_save_path", "_autosummary/aslm.tools.file_functions.save_yaml_file", "_autosummary/aslm.tools.image", "_autosummary/aslm.tools.image.text_array", "_autosummary/aslm.tools.image_loaders", "_autosummary/aslm.tools.image_loaders.LazyTiff", "_autosummary/aslm.tools.multipos_table_tools", "_autosummary/aslm.tools.multipos_table_tools.calc_num_tiles", "_autosummary/aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box", "_autosummary/aslm.tools.multipos_table_tools.sign", "_autosummary/aslm.tools.multipos_table_tools.update_table", "_autosummary/aslm.tools.project_stats", "_autosummary/aslm.tools.project_stats.countlines", "_autosummary/aslm.tools.xml_tools", "_autosummary/aslm.tools.xml_tools.dict_to_xml", "_autosummary/aslm.tools.xml_tools.parse_xml", "_autosummary/aslm.view", "_autosummary/aslm.view.main_window_content", "_autosummary/aslm.view.main_window_content.acquire_bar_frame", "_autosummary/aslm.view.main_window_content.channel_settings", "_autosummary/aslm.view.main_window_content.channel_settings.channel_settings_frames", "_autosummary/aslm.view.main_window_content.stage_control", "_autosummary/aslm.view.main_window_content.stage_control.stage_control_frames", "_autosummary/aslm.view.menus", "_templates/custom_class", "_templates/custom_module", "api", "config", "contributing", "features", "hacking", "hardware", "implementations", "index", "installation", "userguide"], "filenames": ["_autosummary/aslm.config.rst", "_autosummary/aslm.config.config.rst", "_autosummary/aslm.config.config.build_nested_dict.rst", "_autosummary/aslm.config.config.get_configuration_paths.rst", "_autosummary/aslm.config.config.load_configs.rst", "_autosummary/aslm.config.config.update_config_dict.rst", "_autosummary/aslm.controller.rst", "_autosummary/aslm.controller.configuration_controller.rst", "_autosummary/aslm.controller.configuration_controller.ConfigurationController.rst", "_autosummary/aslm.controller.thread_pool.rst", "_autosummary/aslm.controller.thread_pool.SelfLockThread.rst", "_autosummary/aslm.controller.thread_pool.SynchronizedThreadPool.rst", "_autosummary/aslm.controller.thread_pool.ThreadWaitlist.rst", "_autosummary/aslm.model.rst", "_autosummary/aslm.model.analysis.rst", "_autosummary/aslm.model.analysis.boundary_detect.rst", "_autosummary/aslm.model.analysis.boundary_detect.binary_detect.rst", "_autosummary/aslm.model.analysis.boundary_detect.find_tissue_boundary_2d.rst", "_autosummary/aslm.model.analysis.boundary_detect.has_tissue.rst", "_autosummary/aslm.model.analysis.boundary_detect.map_boundary.rst", "_autosummary/aslm.model.analysis.detection.rst", "_autosummary/aslm.model.analysis.detection.add_median_border.rst", "_autosummary/aslm.model.analysis.detection.combine_images.rst", "_autosummary/aslm.model.analysis.detection.log_detection.rst", "_autosummary/aslm.model.analysis.detection.make_inside_image.rst", "_autosummary/aslm.model.analysis.detection.make_normalized_image.rst", "_autosummary/aslm.model.analysis.detection.make_sphere_3D.rst", "_autosummary/aslm.model.analysis.detection.multiscale_surface_filter_3D.rst", "_autosummary/aslm.model.analysis.detection.surface_filter_gauss_3D.rst", "_autosummary/aslm.model.analysis.detection.three_level_segmentation.rst", "_autosummary/aslm.model.analysis.image_contrast.rst", "_autosummary/aslm.model.analysis.image_contrast.estimate_and_correct_flatfield.rst", "_autosummary/aslm.model.analysis.image_contrast.estimate_image_resolution.rst", "_autosummary/aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy.rst", "_autosummary/aslm.model.analysis.image_contrast.image_intensity.rst", "_autosummary/aslm.model.analysis.image_contrast.normalized_dct_shannon_entropy.rst", "_autosummary/aslm.model.analysis.image_decorrelation.rst", "_autosummary/aslm.model.analysis.image_decorrelation.apodize_image.rst", "_autosummary/aslm.model.analysis.image_decorrelation.get_correlation_coefficient.rst", "_autosummary/aslm.model.analysis.image_decorrelation.get_decorrelation_local_maxima.rst", "_autosummary/aslm.model.analysis.image_decorrelation.get_image_decorrelation.rst", "_autosummary/aslm.model.analysis.image_decorrelation.get_radial_average.rst", "_autosummary/aslm.model.analysis.image_decorrelation.image_to_polar.rst", "_autosummary/aslm.model.analysis.image_decorrelation.linear_map.rst", "_autosummary/aslm.model.analysis.image_decorrelation.main_image_decorr.rst", "_autosummary/aslm.model.analysis.image_transform.rst", "_autosummary/aslm.model.analysis.image_transform.deskew_image.rst", "_autosummary/aslm.model.analysis.image_transform.initiate_gpu.rst", "_autosummary/aslm.model.analysis.noise_model.rst", "_autosummary/aslm.model.analysis.noise_model.compute_noise_sigma.rst", "_autosummary/aslm.model.analysis.spectral_unmixing.rst", "_autosummary/aslm.model.analysis.spectral_unmixing.to_do.rst", "_autosummary/aslm.model.concurrency.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.CustodyThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.FancyThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.MyTestClass.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.ObjectInSubprocess.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.PoliteThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.ResultThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.SharedNDArray.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.TestSharedNDArray.rst", "_autosummary/aslm.model.concurrency.proxy_objects.rst", "_autosummary/aslm.model.concurrency.proxy_objects.ProxyManager.rst", "_autosummary/aslm.model.concurrency.proxy_objects.ProxyObject.rst", "_autosummary/aslm.model.concurrency.proxy_objects.launch_custody_thread.rst", "_autosummary/aslm.model.concurrency.proxy_objects.launch_thread.rst", "_autosummary/aslm.model.concurrency.shared_memory.rst", "_autosummary/aslm.model.concurrency.write_parameters.rst", "_autosummary/aslm.model.concurrency.write_parameters.write_Params.rst", "_autosummary/aslm.model.data_sources.rst", "_autosummary/aslm.model.data_sources.bdv_data_source.rst", "_autosummary/aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.rst", "_autosummary/aslm.model.data_sources.data_source.rst", "_autosummary/aslm.model.data_sources.data_source.DataSource.rst", "_autosummary/aslm.model.data_sources.get_data_source.rst", "_autosummary/aslm.model.data_sources.tiff_data_source.rst", "_autosummary/aslm.model.data_sources.tiff_data_source.TiffDataSource.rst", "_autosummary/aslm.model.data_sources.zarr_data_source.rst", "_autosummary/aslm.model.data_sources.zarr_data_source.ZarrDataSource.rst", "_autosummary/aslm.model.device_startup_functions.rst", "_autosummary/aslm.model.device_startup_functions.DummyDeviceConnection.rst", "_autosummary/aslm.model.device_startup_functions.auto_redial.rst", "_autosummary/aslm.model.device_startup_functions.device_not_found.rst", "_autosummary/aslm.model.device_startup_functions.load_camera_connection.rst", "_autosummary/aslm.model.device_startup_functions.load_devices.rst", "_autosummary/aslm.model.device_startup_functions.load_filter_wheel_connection.rst", "_autosummary/aslm.model.device_startup_functions.load_stages.rst", "_autosummary/aslm.model.device_startup_functions.load_zoom_connection.rst", "_autosummary/aslm.model.device_startup_functions.start_camera.rst", "_autosummary/aslm.model.device_startup_functions.start_daq.rst", "_autosummary/aslm.model.device_startup_functions.start_filter_wheel.rst", "_autosummary/aslm.model.device_startup_functions.start_galvo.rst", "_autosummary/aslm.model.device_startup_functions.start_lasers.rst", "_autosummary/aslm.model.device_startup_functions.start_remote_focus_device.rst", "_autosummary/aslm.model.device_startup_functions.start_shutter.rst", "_autosummary/aslm.model.device_startup_functions.start_stage.rst", "_autosummary/aslm.model.device_startup_functions.start_zoom.rst", "_autosummary/aslm.model.devices.rst", "_autosummary/aslm.model.devices.APIs.rst", "_autosummary/aslm.model.devices.APIs.coherent.rst", "_autosummary/aslm.model.devices.APIs.dynamixel.rst", "_autosummary/aslm.model.devices.APIs.logitech.rst", "_autosummary/aslm.model.devices.APIs.omicron.rst", "_autosummary/aslm.model.devices.camera.rst", "_autosummary/aslm.model.devices.camera.camera_base.rst", "_autosummary/aslm.model.devices.camera.camera_base.CameraBase.rst", "_autosummary/aslm.model.devices.camera.camera_hamamatsu.rst", "_autosummary/aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.rst", "_autosummary/aslm.model.devices.camera.camera_synthetic.rst", "_autosummary/aslm.model.devices.camera.camera_synthetic.SyntheticCamera.rst", "_autosummary/aslm.model.devices.camera.camera_synthetic.SyntheticCameraController.rst", "_autosummary/aslm.model.devices.daq.rst", "_autosummary/aslm.model.devices.daq.daq_base.rst", "_autosummary/aslm.model.devices.daq.daq_base.DAQBase.rst", "_autosummary/aslm.model.devices.daq.daq_synthetic.rst", "_autosummary/aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.rst", "_autosummary/aslm.model.devices.filter_wheel.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_base.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_synthetic.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.rst", "_autosummary/aslm.model.devices.galvo.rst", "_autosummary/aslm.model.devices.galvo.galvo_base.rst", "_autosummary/aslm.model.devices.galvo.galvo_base.GalvoBase.rst", "_autosummary/aslm.model.devices.joystick.rst", "_autosummary/aslm.model.devices.joystick.joystick_base.rst", "_autosummary/aslm.model.devices.joystick.joystick_base.JoystickBase.rst", "_autosummary/aslm.model.devices.joystick.joystick_logitech.rst", "_autosummary/aslm.model.devices.joystick.joystick_logitech.JoystickLogitech.rst", "_autosummary/aslm.model.devices.joystick.joystick_synthetic.rst", "_autosummary/aslm.model.devices.joystick.joystick_synthetic.SyntheticJoystick.rst", "_autosummary/aslm.model.devices.lasers.rst", "_autosummary/aslm.model.devices.lasers.laser_base.rst", "_autosummary/aslm.model.devices.lasers.laser_base.LaserBase.rst", "_autosummary/aslm.model.devices.lasers.laser_synthetic.rst", "_autosummary/aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.rst", "_autosummary/aslm.model.devices.lasers.laser_trigger_base.rst", "_autosummary/aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase.rst", "_autosummary/aslm.model.devices.lasers.laser_trigger_synthetic.rst", "_autosummary/aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers.rst", "_autosummary/aslm.model.devices.objectives.rst", "_autosummary/aslm.model.devices.objectives.Objective.rst", "_autosummary/aslm.model.devices.remote_focus.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_base.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_equipment_solutions.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.rst", "_autosummary/aslm.model.devices.shutter.rst", "_autosummary/aslm.model.devices.shutter.laser_shutter_base.rst", "_autosummary/aslm.model.devices.shutter.laser_shutter_base.ShutterBase.rst", "_autosummary/aslm.model.devices.shutter.laser_shutter_synthetic.rst", "_autosummary/aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.rst", "_autosummary/aslm.model.devices.stages.rst", "_autosummary/aslm.model.devices.stages.stage_asi.rst", "_autosummary/aslm.model.devices.stages.stage_asi.ASIStage.rst", "_autosummary/aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection.rst", "_autosummary/aslm.model.devices.stages.stage_base.rst", "_autosummary/aslm.model.devices.stages.stage_base.StageBase.rst", "_autosummary/aslm.model.devices.stages.stage_galvo.rst", "_autosummary/aslm.model.devices.stages.stage_galvo.GalvoNIStage.rst", "_autosummary/aslm.model.devices.stages.stage_mcl.rst", "_autosummary/aslm.model.devices.stages.stage_mcl.MCLStage.rst", "_autosummary/aslm.model.devices.stages.stage_mcl.build_MCLStage_connection.rst", "_autosummary/aslm.model.devices.stages.stage_pi.rst", "_autosummary/aslm.model.devices.stages.stage_pi.PIStage.rst", "_autosummary/aslm.model.devices.stages.stage_pi.build_PIStage_connection.rst", "_autosummary/aslm.model.devices.stages.stage_sutter.rst", "_autosummary/aslm.model.devices.stages.stage_sutter.SutterStage.rst", "_autosummary/aslm.model.devices.stages.stage_sutter.build_sutter_stage_connection.rst", "_autosummary/aslm.model.devices.stages.stage_synthetic.rst", "_autosummary/aslm.model.devices.stages.stage_synthetic.SyntheticStage.rst", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.rst", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.rst", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection.rst", "_autosummary/aslm.model.devices.zoom.rst", "_autosummary/aslm.model.devices.zoom.zoom_base.rst", "_autosummary/aslm.model.devices.zoom.zoom_base.ZoomBase.rst", "_autosummary/aslm.model.devices.zoom.zoom_synthetic.rst", "_autosummary/aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.rst", "_autosummary/aslm.model.dummy.rst", "_autosummary/aslm.model.dummy.DummyDevice.rst", "_autosummary/aslm.model.dummy.DummyModel.rst", "_autosummary/aslm.model.features.rst", "_autosummary/aslm.model.features.autofocus.rst", "_autosummary/aslm.model.features.autofocus.Autofocus.rst", "_autosummary/aslm.model.features.common_features.rst", "_autosummary/aslm.model.features.common_features.ChangeResolution.rst", "_autosummary/aslm.model.features.common_features.FindTissueSimple2D.rst", "_autosummary/aslm.model.features.common_features.Snap.rst", "_autosummary/aslm.model.features.common_features.WaitToContinue.rst", "_autosummary/aslm.model.features.common_features.ZStackAcquisition.rst", "_autosummary/aslm.model.features.dummy_detective.rst", "_autosummary/aslm.model.features.dummy_detective.Dummy_Detective.rst", "_autosummary/aslm.model.features.feature_container.rst", "_autosummary/aslm.model.features.feature_container.Container.rst", "_autosummary/aslm.model.features.feature_container.DataContainer.rst", "_autosummary/aslm.model.features.feature_container.DataNode.rst", "_autosummary/aslm.model.features.feature_container.SignalContainer.rst", "_autosummary/aslm.model.features.feature_container.SignalNode.rst", "_autosummary/aslm.model.features.feature_container.TreeNode.rst", "_autosummary/aslm.model.features.feature_container.dummy_True.rst", "_autosummary/aslm.model.features.feature_container.dummy_func.rst", "_autosummary/aslm.model.features.feature_container.get_registered_funcs.rst", "_autosummary/aslm.model.features.feature_container.load_features.rst", "_autosummary/aslm.model.features.image_writer.rst", "_autosummary/aslm.model.features.image_writer.ImageWriter.rst", "_autosummary/aslm.model.features.restful_features.rst", "_autosummary/aslm.model.features.restful_features.IlastikSegmentation.rst", "_autosummary/aslm.model.features.restful_features.prepare_service.rst", "_autosummary/aslm.model.features.volume_search.rst", "_autosummary/aslm.model.features.volume_search.VolumeSearch.rst", "_autosummary/aslm.model.metadata_sources.rst", "_autosummary/aslm.model.metadata_sources.bdv_metadata.rst", "_autosummary/aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.rst", "_autosummary/aslm.model.metadata_sources.metadata.rst", "_autosummary/aslm.model.metadata_sources.metadata.Metadata.rst", "_autosummary/aslm.model.metadata_sources.metadata.XMLMetadata.rst", "_autosummary/aslm.model.metadata_sources.ome_tiff_metadata.rst", "_autosummary/aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.rst", "_autosummary/aslm.model.microscope.rst", "_autosummary/aslm.model.microscope.Microscope.rst", "_autosummary/aslm.model.model.rst", "_autosummary/aslm.model.model.Model.rst", "_autosummary/aslm.model.waveforms.rst", "_autosummary/aslm.model.waveforms.camera_exposure.rst", "_autosummary/aslm.model.waveforms.dc_value.rst", "_autosummary/aslm.model.waveforms.sawtooth.rst", "_autosummary/aslm.model.waveforms.sine_wave.rst", "_autosummary/aslm.model.waveforms.single_pulse.rst", "_autosummary/aslm.model.waveforms.smooth_waveform.rst", "_autosummary/aslm.model.waveforms.square.rst", "_autosummary/aslm.model.waveforms.tunable_lens_ramp.rst", "_autosummary/aslm.tools.rst", "_autosummary/aslm.tools.beams.rst", "_autosummary/aslm.tools.beams.fit_gaussian_beam_error.rst", "_autosummary/aslm.tools.beams.fit_gaussian_beam_mse.rst", "_autosummary/aslm.tools.beams.gaussian_beam.rst", "_autosummary/aslm.tools.common_dict_tools.rst", "_autosummary/aslm.tools.common_dict_tools.update_settings_common.rst", "_autosummary/aslm.tools.common_dict_tools.update_stage_dict.rst", "_autosummary/aslm.tools.common_functions.rst", "_autosummary/aslm.tools.common_functions.build_ref_name.rst", "_autosummary/aslm.tools.common_functions.combine_funcs.rst", "_autosummary/aslm.tools.common_functions.copy_proxy_object.rst", "_autosummary/aslm.tools.decorators.rst", "_autosummary/aslm.tools.decorators.function_timer.rst", "_autosummary/aslm.tools.file_functions.rst", "_autosummary/aslm.tools.file_functions.create_save_path.rst", "_autosummary/aslm.tools.file_functions.save_yaml_file.rst", "_autosummary/aslm.tools.image.rst", "_autosummary/aslm.tools.image.text_array.rst", "_autosummary/aslm.tools.image_loaders.rst", "_autosummary/aslm.tools.image_loaders.LazyTiff.rst", "_autosummary/aslm.tools.multipos_table_tools.rst", "_autosummary/aslm.tools.multipos_table_tools.calc_num_tiles.rst", "_autosummary/aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box.rst", "_autosummary/aslm.tools.multipos_table_tools.sign.rst", "_autosummary/aslm.tools.multipos_table_tools.update_table.rst", "_autosummary/aslm.tools.project_stats.rst", "_autosummary/aslm.tools.project_stats.countlines.rst", "_autosummary/aslm.tools.xml_tools.rst", "_autosummary/aslm.tools.xml_tools.dict_to_xml.rst", "_autosummary/aslm.tools.xml_tools.parse_xml.rst", "_autosummary/aslm.view.rst", "_autosummary/aslm.view.main_window_content.rst", "_autosummary/aslm.view.main_window_content.acquire_bar_frame.rst", "_autosummary/aslm.view.main_window_content.channel_settings.rst", "_autosummary/aslm.view.main_window_content.channel_settings.channel_settings_frames.rst", "_autosummary/aslm.view.main_window_content.stage_control.rst", "_autosummary/aslm.view.main_window_content.stage_control.stage_control_frames.rst", "_autosummary/aslm.view.menus.rst", "_templates/custom_class.rst", "_templates/custom_module.rst", "api.rst", "config.rst", "contributing.rst", "features.rst", "hacking.rst", "hardware.rst", "implementations.rst", "index.rst", "installation.rst", "userguide.rst"], "titles": ["aslm.config", "aslm.config.config", "aslm.config.config.build_nested_dict", "aslm.config.config.get_configuration_paths", "aslm.config.config.load_configs", "aslm.config.config.update_config_dict", "aslm.controller", "aslm.controller.configuration_controller", "aslm.controller.configuration_controller.ConfigurationController", "aslm.controller.thread_pool", "aslm.controller.thread_pool.SelfLockThread", "aslm.controller.thread_pool.SynchronizedThreadPool", "aslm.controller.thread_pool.ThreadWaitlist", "aslm.model", "aslm.model.analysis", "aslm.model.analysis.boundary_detect", "aslm.model.analysis.boundary_detect.binary_detect", "aslm.model.analysis.boundary_detect.find_tissue_boundary_2d", "aslm.model.analysis.boundary_detect.has_tissue", "aslm.model.analysis.boundary_detect.map_boundary", "aslm.model.analysis.detection", "aslm.model.analysis.detection.add_median_border", "aslm.model.analysis.detection.combine_images", "aslm.model.analysis.detection.log_detection", "aslm.model.analysis.detection.make_inside_image", "aslm.model.analysis.detection.make_normalized_image", "aslm.model.analysis.detection.make_sphere_3D", "aslm.model.analysis.detection.multiscale_surface_filter_3D", "aslm.model.analysis.detection.surface_filter_gauss_3D", "aslm.model.analysis.detection.three_level_segmentation", "aslm.model.analysis.image_contrast", "aslm.model.analysis.image_contrast.estimate_and_correct_flatfield", "aslm.model.analysis.image_contrast.estimate_image_resolution", "aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy", "aslm.model.analysis.image_contrast.image_intensity", "aslm.model.analysis.image_contrast.normalized_dct_shannon_entropy", "aslm.model.analysis.image_decorrelation", "aslm.model.analysis.image_decorrelation.apodize_image", "aslm.model.analysis.image_decorrelation.get_correlation_coefficient", "aslm.model.analysis.image_decorrelation.get_decorrelation_local_maxima", "aslm.model.analysis.image_decorrelation.get_image_decorrelation", "aslm.model.analysis.image_decorrelation.get_radial_average", "aslm.model.analysis.image_decorrelation.image_to_polar", "aslm.model.analysis.image_decorrelation.linear_map", "aslm.model.analysis.image_decorrelation.main_image_decorr", "aslm.model.analysis.image_transform", "aslm.model.analysis.image_transform.deskew_image", "aslm.model.analysis.image_transform.initiate_gpu", "aslm.model.analysis.noise_model", "aslm.model.analysis.noise_model.compute_noise_sigma", "aslm.model.analysis.spectral_unmixing", "aslm.model.analysis.spectral_unmixing.to_do", "aslm.model.concurrency", "aslm.model.concurrency.concurrency_tools", "aslm.model.concurrency.concurrency_tools.CustodyThread", "aslm.model.concurrency.concurrency_tools.FancyThread", "aslm.model.concurrency.concurrency_tools.MyTestClass", "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess", "aslm.model.concurrency.concurrency_tools.PoliteThread", "aslm.model.concurrency.concurrency_tools.ResultThread", "aslm.model.concurrency.concurrency_tools.SharedNDArray", "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess", "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread", "aslm.model.concurrency.concurrency_tools.TestSharedNDArray", "aslm.model.concurrency.proxy_objects", "aslm.model.concurrency.proxy_objects.ProxyManager", "aslm.model.concurrency.proxy_objects.ProxyObject", "aslm.model.concurrency.proxy_objects.launch_custody_thread", "aslm.model.concurrency.proxy_objects.launch_thread", "aslm.model.concurrency.shared_memory", "aslm.model.concurrency.write_parameters", "aslm.model.concurrency.write_parameters.write_Params", "aslm.model.data_sources", "aslm.model.data_sources.bdv_data_source", "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource", "aslm.model.data_sources.data_source", "aslm.model.data_sources.data_source.DataSource", "aslm.model.data_sources.get_data_source", "aslm.model.data_sources.tiff_data_source", "aslm.model.data_sources.tiff_data_source.TiffDataSource", "aslm.model.data_sources.zarr_data_source", "aslm.model.data_sources.zarr_data_source.ZarrDataSource", "aslm.model.device_startup_functions", "aslm.model.device_startup_functions.DummyDeviceConnection", "aslm.model.device_startup_functions.auto_redial", "aslm.model.device_startup_functions.device_not_found", "aslm.model.device_startup_functions.load_camera_connection", "aslm.model.device_startup_functions.load_devices", "aslm.model.device_startup_functions.load_filter_wheel_connection", "aslm.model.device_startup_functions.load_stages", "aslm.model.device_startup_functions.load_zoom_connection", "aslm.model.device_startup_functions.start_camera", "aslm.model.device_startup_functions.start_daq", "aslm.model.device_startup_functions.start_filter_wheel", "aslm.model.device_startup_functions.start_galvo", "aslm.model.device_startup_functions.start_lasers", "aslm.model.device_startup_functions.start_remote_focus_device", "aslm.model.device_startup_functions.start_shutter", "aslm.model.device_startup_functions.start_stage", "aslm.model.device_startup_functions.start_zoom", "aslm.model.devices", "aslm.model.devices.APIs", "aslm.model.devices.APIs.coherent", "aslm.model.devices.APIs.dynamixel", "aslm.model.devices.APIs.logitech", "aslm.model.devices.APIs.omicron", "aslm.model.devices.camera", "aslm.model.devices.camera.camera_base", "aslm.model.devices.camera.camera_base.CameraBase", "aslm.model.devices.camera.camera_hamamatsu", "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca", "aslm.model.devices.camera.camera_synthetic", "aslm.model.devices.camera.camera_synthetic.SyntheticCamera", "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController", "aslm.model.devices.daq", "aslm.model.devices.daq.daq_base", "aslm.model.devices.daq.daq_base.DAQBase", "aslm.model.devices.daq.daq_synthetic", "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ", "aslm.model.devices.filter_wheel", "aslm.model.devices.filter_wheel.filter_wheel_base", "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase", "aslm.model.devices.filter_wheel.filter_wheel_sutter", "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel", "aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection", "aslm.model.devices.filter_wheel.filter_wheel_synthetic", "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel", "aslm.model.devices.galvo", "aslm.model.devices.galvo.galvo_base", "aslm.model.devices.galvo.galvo_base.GalvoBase", "aslm.model.devices.joystick", "aslm.model.devices.joystick.joystick_base", "aslm.model.devices.joystick.joystick_base.JoystickBase", "aslm.model.devices.joystick.joystick_logitech", "aslm.model.devices.joystick.joystick_logitech.JoystickLogitech", "aslm.model.devices.joystick.joystick_synthetic", "aslm.model.devices.joystick.joystick_synthetic.SyntheticJoystick", "aslm.model.devices.lasers", "aslm.model.devices.lasers.laser_base", "aslm.model.devices.lasers.laser_base.LaserBase", "aslm.model.devices.lasers.laser_synthetic", "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser", "aslm.model.devices.lasers.laser_trigger_base", "aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase", "aslm.model.devices.lasers.laser_trigger_synthetic", "aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers", "aslm.model.devices.objectives", "aslm.model.devices.objectives.Objective", "aslm.model.devices.remote_focus", "aslm.model.devices.remote_focus.remote_focus_base", "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase", "aslm.model.devices.remote_focus.remote_focus_equipment_solutions", "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions", "aslm.model.devices.shutter", "aslm.model.devices.shutter.laser_shutter_base", "aslm.model.devices.shutter.laser_shutter_base.ShutterBase", "aslm.model.devices.shutter.laser_shutter_synthetic", "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter", "aslm.model.devices.stages", "aslm.model.devices.stages.stage_asi", "aslm.model.devices.stages.stage_asi.ASIStage", "aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection", "aslm.model.devices.stages.stage_base", "aslm.model.devices.stages.stage_base.StageBase", "aslm.model.devices.stages.stage_galvo", "aslm.model.devices.stages.stage_galvo.GalvoNIStage", "aslm.model.devices.stages.stage_mcl", "aslm.model.devices.stages.stage_mcl.MCLStage", "aslm.model.devices.stages.stage_mcl.build_MCLStage_connection", "aslm.model.devices.stages.stage_pi", "aslm.model.devices.stages.stage_pi.PIStage", "aslm.model.devices.stages.stage_pi.build_PIStage_connection", "aslm.model.devices.stages.stage_sutter", "aslm.model.devices.stages.stage_sutter.SutterStage", "aslm.model.devices.stages.stage_sutter.build_sutter_stage_connection", "aslm.model.devices.stages.stage_synthetic", "aslm.model.devices.stages.stage_synthetic.SyntheticStage", "aslm.model.devices.stages.stage_tl_kcube_inertial", "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage", "aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection", "aslm.model.devices.zoom", "aslm.model.devices.zoom.zoom_base", "aslm.model.devices.zoom.zoom_base.ZoomBase", "aslm.model.devices.zoom.zoom_synthetic", "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom", "aslm.model.dummy", "aslm.model.dummy.DummyDevice", "aslm.model.dummy.DummyModel", "aslm.model.features", "aslm.model.features.autofocus", "aslm.model.features.autofocus.Autofocus", "aslm.model.features.common_features", "aslm.model.features.common_features.ChangeResolution", "aslm.model.features.common_features.FindTissueSimple2D", "aslm.model.features.common_features.Snap", "aslm.model.features.common_features.WaitToContinue", "aslm.model.features.common_features.ZStackAcquisition", "aslm.model.features.dummy_detective", "aslm.model.features.dummy_detective.Dummy_Detective", "aslm.model.features.feature_container", "aslm.model.features.feature_container.Container", "aslm.model.features.feature_container.DataContainer", "aslm.model.features.feature_container.DataNode", "aslm.model.features.feature_container.SignalContainer", "aslm.model.features.feature_container.SignalNode", "aslm.model.features.feature_container.TreeNode", "aslm.model.features.feature_container.dummy_True", "aslm.model.features.feature_container.dummy_func", "aslm.model.features.feature_container.get_registered_funcs", "aslm.model.features.feature_container.load_features", "aslm.model.features.image_writer", "aslm.model.features.image_writer.ImageWriter", "aslm.model.features.restful_features", "aslm.model.features.restful_features.IlastikSegmentation", "aslm.model.features.restful_features.prepare_service", "aslm.model.features.volume_search", "aslm.model.features.volume_search.VolumeSearch", "aslm.model.metadata_sources", "aslm.model.metadata_sources.bdv_metadata", "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata", "aslm.model.metadata_sources.metadata", "aslm.model.metadata_sources.metadata.Metadata", "aslm.model.metadata_sources.metadata.XMLMetadata", "aslm.model.metadata_sources.ome_tiff_metadata", "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata", "aslm.model.microscope", "aslm.model.microscope.Microscope", "aslm.model.model", "aslm.model.model.Model", "aslm.model.waveforms", "aslm.model.waveforms.camera_exposure", "aslm.model.waveforms.dc_value", "aslm.model.waveforms.sawtooth", "aslm.model.waveforms.sine_wave", "aslm.model.waveforms.single_pulse", "aslm.model.waveforms.smooth_waveform", "aslm.model.waveforms.square", "aslm.model.waveforms.tunable_lens_ramp", "aslm.tools", "aslm.tools.beams", "aslm.tools.beams.fit_gaussian_beam_error", "aslm.tools.beams.fit_gaussian_beam_mse", "aslm.tools.beams.gaussian_beam", "aslm.tools.common_dict_tools", "aslm.tools.common_dict_tools.update_settings_common", "aslm.tools.common_dict_tools.update_stage_dict", "aslm.tools.common_functions", "aslm.tools.common_functions.build_ref_name", "aslm.tools.common_functions.combine_funcs", "aslm.tools.common_functions.copy_proxy_object", "aslm.tools.decorators", "aslm.tools.decorators.function_timer", "aslm.tools.file_functions", "aslm.tools.file_functions.create_save_path", "aslm.tools.file_functions.save_yaml_file", "aslm.tools.image", "aslm.tools.image.text_array", "aslm.tools.image_loaders", "aslm.tools.image_loaders.LazyTiff", "aslm.tools.multipos_table_tools", "aslm.tools.multipos_table_tools.calc_num_tiles", "aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box", "aslm.tools.multipos_table_tools.sign", "aslm.tools.multipos_table_tools.update_table", "aslm.tools.project_stats", "aslm.tools.project_stats.countlines", "aslm.tools.xml_tools", "aslm.tools.xml_tools.dict_to_xml", "aslm.tools.xml_tools.parse_xml", "aslm.view", "aslm.view.main_window_content", "aslm.view.main_window_content.acquire_bar_frame", "aslm.view.main_window_content.channel_settings", "aslm.view.main_window_content.channel_settings.channel_settings_frames", "aslm.view.main_window_content.stage_control", "aslm.view.main_window_content.stage_control.stage_control_frames", "aslm.view.menus", "&lt;no title&gt;", "&lt;no title&gt;", "API Reference", "Configuring ASLM", "Contributing Guidelines", "ASLM feature container", "Extending ASLM", "Hardware Setup", "Microscope Implementations", "<strong>ASLM Python Package</strong>", "Software Installation", "User Guide"], "terms": {"modul": [0, 6, 10, 13, 14, 52, 54, 59, 60, 67, 68, 72, 100, 101, 102, 103, 104, 105, 106, 114, 119, 127, 130, 137, 142, 144, 148, 153, 158, 175, 180, 188, 217, 228, 238, 269, 270, 271, 272, 273, 274, 275, 276, 278, 285], "function": [1, 10, 15, 20, 22, 24, 27, 28, 30, 36, 39, 45, 46, 48, 50, 51, 54, 56, 59, 60, 61, 62, 63, 64, 67, 68, 72, 82, 84, 110, 112, 122, 159, 166, 169, 172, 177, 199, 212, 228, 229, 232, 239, 243, 246, 248, 249, 250, 252, 253, 255, 259, 264, 266, 281, 282, 285], "manag": [2, 4, 5, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 108, 110, 112, 116, 118, 155, 157, 163, 182, 287], "parent_dict": [2, 5], "key_nam": 2, "dict_data": 2, "kwarg": [4, 10, 54, 56, 59, 60, 61, 62, 63, 67, 68, 84, 202, 204, 214, 228], "config_nam": 5, "new_config": 5, "bool": [5, 8, 56, 60, 61, 62, 63, 74, 76, 79, 81, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 110, 121, 123, 126, 152, 160, 165, 167, 170, 173, 176, 178, 182, 184, 219, 228, 242, 263], "class": [7, 8, 9, 10, 11, 12, 53, 54, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 122, 123, 125, 126, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 169, 170, 172, 173, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 257, 258, 281], "configur": [8, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 108, 110, 112, 116, 118, 121, 123, 126, 129, 139, 141, 143, 145, 150, 155, 157, 160, 163, 165, 167, 170, 173, 176, 178, 182, 184, 211, 219, 221, 222, 224, 226, 228, 281, 282, 286, 287, 288], "base": [8, 10, 11, 12, 40, 54, 56, 57, 59, 60, 61, 62, 63, 65, 66, 71, 74, 76, 79, 81, 83, 108, 110, 112, 113, 116, 118, 121, 123, 126, 129, 132, 134, 136, 138, 139, 141, 143, 145, 147, 150, 152, 155, 157, 160, 163, 165, 167, 170, 173, 176, 178, 182, 184, 186, 187, 190, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 205, 211, 213, 216, 219, 221, 222, 224, 226, 228, 256, 258, 261, 263, 281, 284, 287], "object": [8, 10, 11, 12, 54, 56, 57, 59, 60, 61, 65, 66, 67, 71, 76, 83, 84, 91, 93, 94, 95, 96, 97, 98, 99, 108, 110, 112, 113, 116, 121, 129, 132, 139, 143, 150, 155, 157, 163, 182, 186, 187, 190, 192, 193, 194, 195, 196, 198, 200, 205, 211, 213, 216, 221, 226, 228, 244, 258, 263, 280, 285], "__init__": [8, 10, 11, 12, 54, 56, 57, 59, 60, 61, 62, 63, 65, 66, 71, 74, 76, 79, 81, 83, 84, 108, 110, 112, 113, 116, 118, 121, 123, 126, 129, 132, 134, 136, 139, 141, 143, 145, 147, 150, 152, 155, 157, 160, 163, 165, 167, 170, 173, 176, 178, 182, 184, 186, 187, 190, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 205, 211, 213, 216, 219, 221, 222, 224, 226, 228, 258, 282], "method": [8, 10, 11, 12, 54, 56, 57, 59, 60, 61, 62, 63, 65, 66, 71, 74, 76, 79, 81, 83, 108, 110, 112, 113, 116, 118, 121, 123, 126, 129, 132, 134, 136, 139, 141, 143, 145, 147, 150, 152, 155, 157, 160, 163, 165, 167, 170, 173, 176, 178, 182, 184, 186, 187, 190, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 205, 211, 213, 216, 219, 221, 222, 224, 226, 228, 258, 282], "attribut": [8, 10, 54, 59, 60, 61, 74, 76, 79, 81, 110, 124, 134, 155, 157, 219, 221, 222, 224, 258], "change_microscop": 8, "get": [8, 59, 60, 110, 112, 160, 190, 226, 228, 287], "new": [8, 43, 60, 79, 160, 165, 167, 170, 173, 176, 178, 248, 253, 263, 281, 284, 287], "microscop": [8, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 108, 110, 112, 116, 118, 155, 157, 163, 182, 184, 190, 228, 281, 282, 284, 286], "dict": [8, 87, 116, 118, 121, 123, 126, 147, 160, 163, 165, 167, 170, 173, 176, 178, 182, 184, 190, 228, 249, 253, 254, 267, 268], "accord": [8, 60, 110, 112, 143, 145], "name": [8, 10, 20, 45, 50, 54, 56, 57, 59, 60, 61, 62, 63, 74, 76, 79, 81, 91, 93, 94, 95, 96, 97, 98, 99, 108, 110, 112, 113, 116, 118, 121, 123, 125, 126, 131, 133, 135, 142, 144, 147, 155, 157, 159, 162, 163, 169, 172, 173, 175, 182, 197, 226, 228, 229, 254, 255, 280, 281, 284], "return": [8, 10, 28, 31, 35, 38, 39, 41, 46, 49, 54, 56, 57, 59, 60, 66, 74, 76, 79, 81, 84, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 108, 110, 112, 113, 116, 118, 121, 123, 126, 147, 152, 157, 160, 163, 165, 167, 170, 173, 176, 178, 182, 184, 190, 219, 221, 222, 224, 226, 228, 231, 232, 233, 234, 236, 237, 242, 249, 253, 260, 261, 263, 267, 268], "result": [8, 59, 60, 68, 84, 110, 249], "type": [8, 31, 49, 60, 74, 76, 79, 81, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 110, 113, 116, 118, 121, 123, 124, 126, 147, 152, 155, 157, 160, 163, 165, 167, 170, 173, 174, 176, 178, 182, 184, 219, 221, 222, 224, 226, 228, 237, 242, 249, 253, 256, 260, 261, 263, 267, 268, 280, 286], "get_microscope_configuration_dict": 8, "microscope_configuration_dict": 8, "get_stage_position_limit": 8, "suffix": 8, "posit": [8, 39, 60, 79, 121, 123, 126, 160, 163, 165, 167, 170, 173, 176, 178, 182, 184, 190, 219, 228, 260, 261, 263, 280], "limit": [8, 20, 45, 50, 56, 60, 61, 62, 63, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "stage": [8, 89, 98, 219, 228, 280, 282], "paramet": [8, 31, 49, 56, 60, 61, 62, 63, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 108, 110, 112, 113, 116, 118, 121, 123, 126, 147, 152, 160, 163, 165, 167, 170, 173, 176, 178, 182, 184, 190, 211, 228, 237, 242, 253, 254, 256, 258, 260, 261, 263, 267, 268, 280], "str": [8, 56, 60, 61, 62, 63, 74, 76, 79, 81, 91, 93, 94, 95, 96, 97, 98, 99, 108, 110, 112, 113, 116, 118, 121, 123, 124, 126, 134, 147, 152, 155, 157, 160, 163, 165, 167, 170, 173, 174, 176, 178, 182, 211, 219, 222, 224, 228, 242, 253, 254, 256, 258, 267], "_min": 8, "_max": 8, "position_limit": 8, "depend": [8, 60, 261, 282, 286, 288], "min": [8, 60, 163, 280], "max": [8, 60, 163, 280, 284], "e": [8, 49, 60, 79, 110, 112, 121, 123, 124, 126, 160, 163, 165, 167, 170, 173, 174, 176, 178, 211, 222, 258, 260, 282, 284, 287], "g": [8, 60, 79, 110, 112, 121, 123, 124, 126, 147, 160, 163, 165, 167, 170, 173, 174, 176, 178, 211, 222, 258, 260, 282, 284], "x": [8, 18, 35, 60, 160, 163, 165, 167, 170, 173, 176, 178, 219, 228, 240, 241, 256, 258, 260, 261, 262, 263, 280], "2000": [8, 60, 280], "y": [8, 18, 28, 35, 60, 163, 173, 219, 228, 256, 258, 261, 263, 280], "z": [8, 28, 60, 79, 147, 160, 163, 173, 219, 228, 242, 261, 263, 280, 282], "theta": [8, 160, 163, 165, 167, 170, 173, 176, 178, 219, 261, 280], "0": [8, 23, 40, 49, 60, 86, 94, 95, 98, 110, 112, 121, 123, 124, 126, 129, 134, 160, 163, 165, 167, 170, 173, 176, 178, 182, 184, 186, 190, 193, 224, 228, 230, 231, 232, 233, 234, 236, 237, 242, 256, 260, 265, 280, 285], "f": [8, 59, 60, 160, 219, 261, 263, 280, 285], "properti": [8, 10, 54, 59, 60, 74, 76, 79, 81, 110, 112, 147, 219, 221, 222, 224, 282], "camera_config_dict": 8, "camera": [8, 60, 81, 86, 91, 116, 118, 197, 226, 228, 230, 280, 284, 285, 286], "camera_set": 8, "set": [8, 10, 54, 56, 59, 60, 108, 110, 112, 118, 123, 126, 139, 141, 142, 143, 144, 145, 173, 175, 228, 263, 280, 282, 287], "camera_pixel": 8, "default": [8, 10, 31, 40, 54, 56, 59, 60, 110, 112, 121, 123, 126, 228, 254, 256], "pixel": [8, 37, 49, 228, 242, 256], "valu": [8, 10, 35, 43, 54, 59, 60, 110, 113, 134, 142, 144, 160, 163, 165, 167, 170, 173, 175, 176, 178, 182, 184, 222, 231, 260, 280, 282, 287], "from": [8, 10, 20, 25, 31, 42, 43, 45, 50, 51, 54, 56, 59, 60, 61, 65, 67, 68, 74, 76, 79, 81, 84, 110, 112, 123, 125, 126, 131, 133, 135, 142, 144, 147, 152, 157, 159, 162, 169, 172, 173, 175, 197, 219, 221, 222, 224, 226, 228, 229, 237, 253, 255, 256, 260, 267, 281, 286, 287], "x_pixel": 8, "int": [8, 56, 60, 61, 62, 63, 74, 76, 79, 81, 84, 86, 94, 95, 98, 108, 110, 112, 113, 118, 121, 123, 124, 126, 152, 160, 165, 167, 170, 173, 174, 176, 178, 182, 184, 211, 219, 224, 228, 242, 256, 260, 261], "number": [8, 10, 37, 40, 54, 59, 60, 84, 110, 112, 123, 126, 152, 160, 165, 167, 170, 173, 176, 178, 190, 228, 260, 261, 286], "y_pixel": 8, "channels_info": 8, "popul": 8, "channel": [8, 79, 81, 118, 211, 228, 280], "combobox": 8, "ar": [8, 10, 20, 45, 50, 54, 59, 60, 61, 79, 81, 97, 110, 112, 116, 118, 125, 131, 133, 135, 142, 144, 152, 159, 160, 162, 169, 170, 172, 175, 190, 197, 211, 222, 226, 228, 229, 243, 255, 258, 280, 281, 282, 284, 285, 287], "avail": [8, 10, 54, 59, 60, 67, 182, 184, 256, 287], "laser": [8, 95, 118, 155, 175, 228, 234, 236, 282, 285], "488nm": 8, "561nm": 8, "642nm": 8, "filter": [8, 40, 88, 93, 121, 123, 124, 125, 126, 173, 174, 228, 285], "empti": [8, 60, 123, 126, 173], "align": [8, 60, 123, 126, 258], "gfp": [8, 121, 123, 126, 173], "ff01": 8, "515": 8, "30": [8, 60, 280], "32": [8, 31, 60], "lasers_info": 8, "laser_list": 8, "list": [8, 20, 27, 45, 50, 60, 95, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 209, 219, 224, 228, 229, 248, 249, 255, 263, 280, 286], "remote_focus_dict": 8, "delay_perc": 8, "pulse_perc": 8, "remote_focus_paramet": 8, "dictionari": [8, 10, 54, 59, 60, 94, 95, 116, 118, 121, 123, 126, 160, 163, 165, 167, 170, 173, 176, 178, 182, 184, 219, 222, 224, 228, 243, 244, 253, 254, 267, 268, 280, 282], "remot": [8, 96, 237, 285], "focu": [8, 96, 163, 190, 219, 261, 282], "percent": [8, 234, 237], "delai": [8, 182, 184, 234, 237], "puls": [8, 234], "stage_default_posit": 8, "current": [8, 10, 54, 59, 60, 110, 112, 113, 157, 182, 184, 190, 228, 261, 280], "stage_step": 8, "step": [8, 60, 152, 173, 190, 202, 204, 205, 280, 282, 287], "size": [8, 60, 74, 76, 79, 81, 110, 112, 190, 219, 221, 222, 224, 242, 256, 260, 280], "same": [8, 10, 54, 59, 60, 152, 224, 254, 258], "group": [10, 54, 59], "none": [10, 23, 38, 40, 43, 54, 56, 57, 59, 60, 61, 62, 63, 65, 66, 67, 68, 74, 76, 79, 81, 110, 112, 134, 136, 200, 201, 203, 219, 221, 222, 224, 228, 263, 265, 267], "target": [10, 54, 59, 67, 68, 228, 244, 245], "arg": [10, 54, 56, 59, 60, 61, 62, 63, 67, 68, 84, 85, 190, 206, 207, 228, 244, 247], "daemon": [10, 54, 59], "thread": [10, 54, 57, 59, 61, 67, 68, 88, 89, 90, 92, 93, 95, 97, 99, 228], "thi": [10, 20, 45, 46, 50, 51, 54, 56, 57, 59, 60, 61, 62, 63, 66, 67, 68, 74, 76, 79, 81, 110, 112, 118, 125, 131, 133, 135, 142, 144, 159, 160, 162, 163, 165, 167, 169, 170, 172, 173, 175, 176, 178, 197, 222, 226, 228, 229, 242, 243, 244, 248, 249, 253, 255, 259, 260, 261, 280, 281, 282, 284, 285, 286, 287], "constructor": [10, 54, 59], "should": [10, 54, 59, 60, 67, 68, 81, 110, 112, 152, 160, 260, 280, 281], "alwai": [10, 54, 59, 60], "call": [10, 54, 56, 57, 59, 60, 67, 68, 118, 160, 165, 167, 170, 176, 178, 228, 280, 287], "keyword": [10, 54, 59, 60, 67], "argument": [10, 54, 56, 57, 59, 60, 61, 62, 63, 66, 67, 84, 123, 126, 282], "reserv": [10, 20, 45, 50, 54, 59, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "futur": [10, 54, 59, 60, 281, 286], "extens": [10, 54, 59], "when": [10, 54, 57, 59, 60, 68, 134, 173, 226, 280, 282, 287], "threadgroup": [10, 54, 59], "i": [10, 20, 21, 45, 46, 49, 50, 51, 54, 56, 59, 60, 61, 63, 67, 68, 79, 81, 85, 86, 110, 112, 118, 125, 131, 133, 134, 135, 142, 143, 144, 145, 152, 159, 160, 162, 163, 165, 167, 169, 170, 172, 173, 175, 176, 178, 182, 184, 197, 222, 226, 228, 229, 237, 242, 254, 255, 258, 261, 263, 280, 281, 282, 284, 285, 286, 287], "implement": [10, 45, 54, 59, 60, 74, 76, 79, 81, 160, 165, 167, 170, 173, 176, 178, 222], "callabl": [10, 54, 56, 57, 59, 61, 62, 63, 66], "invok": [10, 54, 59, 60], "run": [10, 54, 56, 59, 61, 62, 63, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 118, 190, 228, 280, 282, 284, 287], "mean": [10, 54, 59, 60], "noth": [10, 54, 59], "By": [10, 54, 56, 59, 60], "uniqu": [10, 54, 59], "construct": [10, 54, 59, 60], "form": [10, 20, 45, 50, 54, 59, 60, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255, 281], "n": [10, 54, 59, 60, 79, 134, 192, 193, 216, 240, 241, 242, 287], "where": [10, 54, 59, 60, 211, 228, 282], "small": [10, 54, 59], "decim": [10, 54, 59, 60, 173], "tupl": [10, 54, 59, 60, 74, 76, 79, 81, 84, 219, 221, 222, 224, 256], "invoc": [10, 54, 59], "If": [10, 35, 54, 56, 57, 59, 60, 61, 62, 63, 65, 66, 68, 81, 118, 152, 173, 228, 280, 281, 287], "subclass": [10, 54, 56, 59, 60], "overrid": [10, 54, 59], "must": [10, 20, 45, 50, 54, 59, 60, 67, 123, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255, 281, 282, 284], "make": [10, 26, 54, 57, 59, 60, 66, 81, 261, 280, 281], "sure": [10, 54, 59, 60, 280], "befor": [10, 54, 59, 60, 139, 141, 263, 282, 287], "do": [10, 51, 54, 59, 60, 110, 118, 160, 167, 178, 219, 222, 224, 280, 281, 287], "anyth": [10, 54, 59], "els": [10, 54, 59], "getnam": [10, 54, 59], "string": [10, 54, 56, 57, 59, 60, 79, 121, 123, 126, 211, 254, 267], "us": [10, 20, 31, 32, 45, 49, 50, 51, 54, 56, 59, 60, 61, 62, 63, 65, 66, 67, 68, 113, 125, 131, 133, 135, 142, 144, 152, 159, 162, 169, 172, 175, 197, 222, 224, 228, 229, 230, 231, 232, 234, 236, 237, 255, 258, 259, 280, 281, 282, 284, 287], "identif": [10, 54, 59], "purpos": [10, 20, 45, 50, 54, 59, 60, 68, 116, 118, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255, 287], "onli": [10, 20, 45, 50, 54, 59, 60, 81, 118, 125, 131, 133, 134, 135, 142, 144, 159, 160, 162, 169, 172, 175, 197, 228, 229, 230, 255, 280, 281, 287], "deprec": [10, 54, 59, 60], "instead": [10, 54, 59, 60, 68], "isdaemon": [10, 54, 59], "whether": [10, 20, 45, 50, 54, 59, 60, 86, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 228, 229, 255], "is_al": [10, 54, 59], "aliv": [10, 54, 59], "true": [10, 19, 54, 56, 59, 60, 61, 62, 63, 123, 126, 163, 228, 240, 265, 282], "just": [10, 54, 59, 60, 61, 287], "start": [10, 49, 54, 56, 59, 60, 118, 134, 160, 228, 237, 261, 265, 281, 282, 287], "until": [10, 54, 59, 67, 118, 160, 165, 167, 170, 173, 176, 178, 228], "after": [10, 54, 59, 60, 113, 173, 182, 184, 228, 284, 287], "termin": [10, 54, 59, 173, 284, 287], "see": [10, 54, 56, 59, 60, 67, 68, 121, 123, 222, 268, 281, 286, 287], "also": [10, 54, 59, 60, 287], "enumer": [10, 54, 59], "join": [10, 54, 59, 68], "timeout": [10, 54, 59, 124, 152], "wait": [10, 54, 59, 67, 110, 112, 118, 123, 126, 152, 228, 282], "block": [10, 54, 59, 60, 160, 165, 167, 170, 173, 176, 178, 278], "whose": [10, 54, 59, 60], "either": [10, 54, 59, 60, 280], "normal": [10, 22, 25, 38, 40, 54, 59, 60, 108, 110, 112, 116, 118, 226], "through": [10, 35, 54, 59, 60, 244], "an": [10, 32, 42, 46, 54, 56, 57, 59, 60, 61, 62, 63, 66, 67, 68, 84, 108, 110, 112, 160, 163, 165, 167, 170, 173, 176, 178, 219, 222, 228, 260, 263, 268, 280, 282, 284], "unhandl": [10, 54, 59], "except": [10, 54, 56, 59, 60, 61, 62, 63, 68, 84, 160, 163, 165, 167, 170, 173, 176, 178], "option": [10, 54, 57, 59, 60, 74, 81, 219, 222, 224, 282], "occur": [10, 54, 59, 60, 173], "present": [10, 54, 59], "float": [10, 31, 49, 54, 56, 59, 60, 61, 62, 63, 74, 76, 79, 81, 108, 110, 112, 116, 118, 123, 126, 147, 152, 160, 163, 165, 170, 173, 176, 190, 219, 226, 237, 242, 260, 261], "point": [10, 54, 56, 59, 60, 79], "specifi": [10, 54, 59, 60, 123, 126, 152, 253, 254, 280, 282], "oper": [10, 54, 57, 59, 63, 66, 116, 118, 282, 285, 287], "second": [10, 54, 59, 60, 110, 112, 116, 118, 123, 226, 234, 237, 280], "fraction": [10, 54, 59, 260, 261], "thereof": [10, 54, 59], "As": [10, 54, 57, 59, 60, 66, 282], "you": [10, 54, 57, 59, 60, 65, 66, 67, 68, 280, 281, 284, 287], "decid": [10, 54, 59, 280], "happen": [10, 54, 59, 282], "still": [10, 54, 59, 60, 280, 282, 287], "time": [10, 54, 59, 60, 79, 84, 108, 110, 112, 116, 118, 123, 126, 152, 226, 228, 230, 251, 284, 287], "out": [10, 20, 45, 50, 54, 56, 59, 60, 110, 125, 131, 133, 134, 135, 142, 144, 159, 162, 169, 172, 175, 190, 193, 197, 229, 234, 255, 260, 261, 280, 284], "A": [10, 20, 45, 50, 54, 59, 60, 67, 68, 125, 131, 133, 135, 142, 144, 159, 160, 162, 163, 165, 167, 169, 170, 172, 173, 175, 176, 178, 192, 193, 197, 216, 229, 255, 260, 281, 282, 287], "can": [10, 54, 57, 59, 60, 61, 65, 68, 74, 76, 79, 81, 152, 222, 228, 281, 282, 286, 287], "ed": [10, 54, 59], "mani": [10, 54, 59, 60, 81, 190, 282], "rais": [10, 54, 56, 59, 60, 61, 62, 63, 68, 85], "runtimeerror": [10, 54, 59, 60, 61], "attempt": [10, 54, 59, 60, 84], "made": [10, 54, 59, 60, 284], "would": [10, 54, 56, 59, 60, 280, 284], "caus": [10, 20, 45, 50, 54, 59, 60, 125, 131, 133, 134, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "deadlock": [10, 54, 59], "It": [10, 54, 59, 60, 253, 280, 284, 286, 287], "error": [10, 54, 59, 60, 68, 85], "ha": [10, 54, 59, 60, 65, 134, 152, 160, 165, 167, 170, 173, 176, 178, 260, 280, 282, 285, 287], "been": [10, 54, 59], "so": [10, 54, 59, 60, 68, 118, 286], "repres": [10, 54, 59, 280], "": [10, 20, 45, 49, 50, 54, 57, 59, 60, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255, 281, 282, 287], "activ": [10, 54, 59, 110, 112, 116, 118, 228, 286, 287], "mai": [10, 20, 45, 50, 54, 59, 60, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255, 282, 287], "The": [10, 20, 45, 50, 54, 59, 60, 67, 68, 84, 118, 125, 131, 133, 134, 135, 142, 144, 152, 159, 160, 162, 165, 167, 169, 170, 172, 173, 175, 176, 178, 197, 229, 237, 255, 260, 280, 284, 286, 287], "standard": [10, 25, 54, 59, 60, 286], "pass": [10, 40, 54, 59, 60, 65, 66, 116, 118], "ani": [10, 20, 45, 50, 54, 56, 59, 60, 74, 76, 79, 81, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255, 282], "sequenti": [10, 54, 59], "taken": [10, 54, 59, 152], "respect": [10, 54, 59, 60, 280], "setdaemon": [10, 54, 59], "setnam": [10, 54, 59], "most": [10, 54, 59, 60, 280, 281, 284], "onc": [10, 54, 59, 60, 152, 282, 287], "per": [10, 54, 59, 60, 74, 81, 282, 284], "arrang": [10, 54, 59], "separ": [10, 54, 59, 60, 222, 247, 281, 285], "more": [10, 54, 59, 60, 81, 160, 163, 165, 167, 170, 173, 176, 178, 280], "than": [10, 54, 59, 60, 74, 81, 110, 112], "boolean": [10, 54, 59, 60], "indic": [10, 54, 59, 60, 173, 211, 226, 260, 282], "otherwis": [10, 20, 45, 50, 54, 59, 60, 116, 118, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "Its": [10, 54, 59], "initi": [10, 54, 57, 59, 60, 65, 66, 74, 76, 79, 81, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 110, 112, 118, 139, 141, 152, 163, 173, 228], "inherit": [10, 54, 59, 60, 84], "creat": [10, 54, 56, 59, 60, 68, 118, 160, 163, 165, 167, 170, 173, 176, 178, 228, 231, 232, 234, 236, 253, 256, 261, 281, 284, 287], "main": [10, 54, 59, 68, 281, 282], "therefor": [10, 54, 59, 60], "all": [10, 20, 45, 50, 54, 56, 59, 60, 61, 62, 63, 79, 110, 112, 116, 118, 125, 131, 133, 135, 142, 144, 159, 160, 162, 163, 165, 167, 169, 170, 172, 173, 175, 176, 178, 197, 228, 229, 255, 258, 260, 280, 281, 282, 284, 287], "fals": [10, 35, 54, 56, 57, 59, 60, 61, 62, 63, 79, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 110, 112, 160, 165, 167, 170, 173, 176, 178, 182, 184, 202, 204, 205, 226, 228, 263], "entir": [10, 54, 59], "python": [10, 54, 57, 59, 60, 66, 74, 76, 79, 81, 219, 221, 222, 224, 267, 280, 287], "program": [10, 54, 59], "exit": [10, 54, 57, 59, 139, 141, 282], "left": [10, 54, 59, 60, 157, 237, 256, 260, 287], "ident": [10, 54, 59], "identifi": [10, 27, 28, 54, 59, 123, 284], "nonzero": [10, 54, 59, 60], "integ": [10, 54, 59, 60, 234, 237], "get_id": [10, 54, 59], "recycl": [10, 54, 59], "anoth": [10, 54, 56, 59, 60, 68, 280, 281, 287], "even": [10, 20, 45, 50, 54, 59, 60, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "semant": [10, 54, 59], "multipl": [10, 27, 54, 59, 60, 61, 173, 222, 284], "given": [10, 49, 54, 59, 60, 110, 121, 123, 126, 263], "native_id": [10, 54, 59], "nativ": [10, 54, 59, 60], "integr": [10, 54, 59], "id": [10, 54, 59, 85, 86, 94, 95, 98], "non": [10, 54, 59, 60], "neg": [10, 54, 59], "get_native_id": [10, 54, 59], "report": [10, 54, 59, 160, 167, 170, 173, 178, 228, 281], "kernel": [10, 54, 59], "img_data": 16, "boundari": [16, 19, 260], "width": [16, 18, 60, 110, 112, 242], "1": [16, 38, 40, 49, 59, 60, 86, 113, 116, 118, 160, 170, 173, 190, 193, 203, 226, 228, 231, 232, 233, 234, 236, 237, 242, 260, 280, 284, 287], "image_data": [17, 18, 21, 23, 25, 28, 29, 31, 46], "mag_ratio": 17, "direct": [19, 20, 28, 45, 50, 60, 108, 110, 112, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 242, 255, 287], "protocol": 20, "copyright": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "c": [20, 45, 50, 60, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 224, 229, 255, 280, 287], "2021": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "2022": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255, 258], "univers": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "texa": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "southwestern": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255, 286], "medic": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "center": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "right": [20, 45, 50, 125, 131, 133, 135, 142, 144, 157, 159, 162, 169, 172, 175, 197, 229, 237, 255, 260, 284], "redistribut": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255, 287], "sourc": [20, 45, 50, 74, 76, 79, 81, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 211, 229, 255, 284, 285], "binari": [20, 45, 50, 60, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255, 256], "without": [20, 45, 50, 56, 57, 59, 60, 61, 65, 66, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255, 280, 281], "modif": [20, 45, 50, 60, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255, 281], "permit": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "academ": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "research": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "subject": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "disclaim": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "below": [20, 45, 50, 60, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255, 280, 281, 282, 285, 287], "provid": [20, 45, 50, 60, 113, 125, 131, 133, 135, 142, 144, 159, 160, 162, 169, 172, 175, 197, 229, 255, 284], "follow": [20, 24, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 173, 175, 197, 229, 255, 281, 282, 287], "condit": [20, 45, 50, 60, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "met": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "code": [20, 45, 50, 59, 60, 74, 76, 79, 81, 113, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 219, 221, 222, 224, 229, 255, 280, 286, 287], "retain": [20, 45, 50, 60, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "abov": [20, 45, 50, 60, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255, 280], "notic": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255, 280, 287], "reproduc": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "document": [20, 45, 49, 50, 60, 110, 112, 125, 131, 133, 135, 142, 144, 159, 160, 162, 169, 172, 175, 197, 229, 255, 281, 286], "other": [20, 45, 50, 60, 65, 118, 125, 131, 133, 135, 142, 144, 147, 152, 159, 162, 169, 172, 175, 197, 229, 255, 280, 281], "materi": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "distribut": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "neither": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "holder": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "nor": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "its": [20, 45, 50, 60, 125, 131, 133, 135, 142, 144, 159, 160, 162, 165, 167, 169, 170, 172, 173, 175, 176, 178, 197, 229, 255, 282, 287], "contributor": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "endors": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "promot": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "product": [20, 45, 50, 60, 125, 131, 133, 135, 142, 144, 159, 160, 162, 169, 172, 175, 197, 229, 255, 286], "deriv": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "softwar": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 160, 162, 163, 165, 167, 169, 170, 172, 173, 175, 176, 178, 197, 228, 229, 255, 280, 281, 284, 285, 286, 288], "specif": [20, 45, 50, 56, 60, 61, 62, 63, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255, 280], "prior": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255, 281], "written": [20, 45, 50, 56, 60, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255, 281], "permiss": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "NO": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "express": [20, 38, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "OR": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "impli": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "licens": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "TO": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "parti": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "patent": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "grant": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "BY": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "THE": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "AND": [20, 45, 50, 60, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "AS": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "warranti": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "includ": [20, 45, 50, 60, 125, 131, 133, 135, 142, 144, 159, 160, 162, 163, 165, 167, 169, 170, 172, 173, 175, 176, 178, 197, 219, 222, 224, 229, 255, 280, 282, 284, 287], "BUT": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "NOT": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "OF": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "merchant": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "fit": [20, 45, 50, 60, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "FOR": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "particular": [20, 45, 50, 60, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "IN": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "event": [20, 45, 50, 125, 131, 133, 134, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "shall": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "BE": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "liabl": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "indirect": [20, 45, 50, 60, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "incident": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "special": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "exemplari": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "consequenti": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "damag": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "procur": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "substitut": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "good": [20, 45, 50, 60, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255, 281], "servic": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "loss": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "data": [20, 31, 45, 46, 50, 60, 74, 76, 79, 81, 92, 110, 112, 116, 118, 125, 131, 133, 135, 142, 144, 152, 159, 162, 169, 172, 173, 175, 197, 211, 228, 229, 253, 254, 255, 263, 282, 285], "profit": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "busi": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "interrupt": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 173, 175, 197, 229, 255], "howev": [20, 45, 50, 60, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255, 281, 284], "ON": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "theori": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "liabil": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "contract": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "strict": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "tort": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "neglig": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "aris": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "wai": [20, 45, 50, 60, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 228, 229, 255, 260, 280, 281], "IF": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "advis": [20, 45, 50, 125, 131, 133, 135, 142, 144, 152, 159, 162, 169, 172, 175, 197, 229, 255], "possibl": [20, 45, 50, 57, 60, 66, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 237, 255], "SUCH": [20, 45, 50, 125, 131, 133, 135, 142, 144, 159, 162, 169, 172, 175, 197, 229, 255], "add": [21, 56, 280, 287], "border": 21, "imag": [21, 22, 25, 28, 31, 32, 35, 37, 38, 40, 41, 42, 46, 60, 110, 112, 118, 147, 193, 228, 240, 241, 242, 261, 282, 284, 285], "median": 21, "requir": [21, 51, 60, 97, 160, 163, 165, 167, 170, 173, 176, 178, 228, 285, 287], "3d": [21, 26, 35], "inside_imag": 22, "normalized_cel": 22, "surface_cel": 22, "combin": [22, 248], "insid": [22, 60], "cell": [22, 24], "surfac": [22, 27, 28], "image_threshold": 23, "pixel_s": [23, 32, 240, 241, 242], "206": 23, "padded_image_data": 24, "insidegamma": 24, "insideblur": 24, "insidedilateradiu": 24, "insideeroderadiu": 24, "tri": [24, 84], "fill": [24, 60], "interior": 24, "gaussian": [24, 242], "blur": 24, "otsu": [24, 25], "threshold": [24, 25], "dilat": 24, "hole": 24, "eros": 24, "subtract": 25, "deviat": [25, 60], "radiu": 26, "structur": [26, 60, 224, 228], "element": [26, 60, 268], "shape": [26, 60, 63, 65, 74, 76, 79, 81, 219, 221, 222, 224], "sphere": 26, "input": [27, 31, 37, 38, 39, 40, 41, 42, 43, 60, 152, 253], "scale": 27, "sigma": [28, 49], "each": [28, 35, 60, 65, 74, 76, 79, 81, 84, 118, 160, 163, 165, 167, 170, 173, 176, 178, 228, 244, 260, 261, 263, 280, 281, 282, 284], "ndarrai": [31, 60, 63, 123, 242], "calcul": [31, 60, 108, 110, 112, 116, 118, 123, 126, 147, 190, 228, 230, 260, 284], "flat": [31, 60], "dark_field": 31, "correct": [31, 60, 143, 145, 287], "bit": [31, 60, 152, 222], "16": [31, 60, 256], "param": 31, "flat_field": 31, "input_arrai": [32, 33, 34, 35], "number_high_pass_filt": 32, "10": [32, 40, 60, 84, 160, 173, 230, 232, 233, 234, 235, 236, 237, 280, 287], "fourier_sampl": [32, 40], "50": [32, 40, 173, 232, 236], "apodization_pixel": 32, "20": [32, 60], "estim": [32, 40, 49], "resolut": [32, 74, 143, 145, 173, 228, 285], "decorrel": [32, 39, 40], "http": [32, 49, 74, 76, 79, 81, 123, 152, 160, 219, 221, 222, 224, 287], "github": [32, 74, 76, 79, 81, 219, 221, 222, 224, 284, 286, 287], "com": [32, 49, 74, 76, 79, 81, 123, 152, 160, 219, 221, 222, 224, 287], "ades91": 32, "imdecorr": 32, "blob": 32, "master": [32, 118], "main_imagedecorr": 32, "m": [32, 49, 147, 173, 280, 287], "psf_support_diameter_xi": [33, 34, 35], "use_gpu": [35, 228], "2d": [35, 37, 40, 60, 242], "iter": [35, 60], "plane": [35, 282], "otf_support_x": 35, "support": [35, 60], "otf": 35, "dimens": [35, 60, 228, 260, 261], "otf_support_i": 35, "entropi": 35, "input_imag": [37, 40, 41, 42], "number_pixel": 37, "apod": 37, "edg": 37, "output": [37, 38, 39, 40, 41, 42, 43, 56, 60, 95, 97, 118, 234], "output_imag": 37, "image_1": 38, "image_2": 38, "c1": 38, "c2": 38, "correl": 38, "coeffici": 38, "fourier": [38, 40], "space": [38, 40, 60, 193, 260, 261], "complex": [38, 60, 74, 76, 79, 81, 219, 242], "transform": [38, 42, 45, 282], "2": [38, 59, 60, 134, 173, 186, 237, 280, 285, 287], "correlation_coeffici": 38, "cross": 38, "decorrelation_funct": 39, "local": [39, 40, 60, 280, 284, 287], "maxima": [39, 40], "max_index": 39, "max_amplitud": 39, "amplitud": [39, 40, 231, 232, 233, 234, 236, 237], "number_highpass_filt": 40, "cut": 40, "off": [40, 142, 144, 175, 282], "frequenc": [40, 232, 233, 236], "analyz": 40, "sampl": [40, 234, 242, 282, 285], "linspac": 40, "high": [40, 173, 192, 228, 260, 285], "kcmax": 40, "a0": 40, "d0": 40, "radial": [41, 242], "averag": [41, 56, 60, 61, 62, 63], "squar": 41, "im": 41, "r": [41, 263], "imp": 42, "im2pol": 42, "imc": 42, "carthesian": 42, "polar": 42, "coordin": 42, "input_valu": 43, "minimum_valu": 43, "maximum_valu": 43, "mapped_minimum_valu": 43, "mapped_maximum_valu": 43, "perform": [43, 56, 61, 62, 63, 123, 282, 286], "linear": 43, "map": [43, 60, 222], "rang": [43, 190], "minimum": [43, 60, 110, 112, 280, 285], "maximum": [43, 60, 110, 139, 141, 280, 286], "rescaled_valu": 43, "rescal": 43, "affin": [45, 219], "shear_angl": 46, "z_pixel_s": 46, "xy_pixel_s": 46, "design": [46, 121, 123, 126], "deskew": 46, "uint16": [46, 60], "save": [46, 59, 211, 253, 254, 287], "tiff": [46, 222, 224, 258], "fn": 49, "qe": 49, "82": 49, "ib": 49, "100": [49, 110, 112, 280, 285], "nr": 49, "4": [49, 60, 147, 230, 231, 232, 233, 234, 236, 285, 287], "sloppi": 49, "www": [49, 123], "hamamatsu": [49, 110, 284, 285], "content": [49, 60, 249, 254], "dam": 49, "photon": 49, "site": 49, "99_sales_librari": 49, "sy": [49, 60], "scas0134e_c13440": 49, "20cu_tec": 49, "pdf": [49, 123], "nois": 49, "excess": 49, "factor": [49, 160], "unitless": 49, "quantum": 49, "effici": 49, "np": [49, 59, 60, 123, 232, 237, 242, 261, 263], "arrai": [49, 60, 63, 65, 74, 76, 79, 81, 231, 232, 233, 234, 235, 236, 237, 242, 256, 261, 263], "signal": [49, 118, 142, 144, 175, 208, 228, 232, 282], "frame": [49, 81, 110, 112, 190, 284, 285], "background": [49, 242], "readout": [49, 108, 110, 112, 116, 118, 226], "rm": 49, "em": 49, "gain": 49, "spectral": [50, 51], "unmix": [50, 51], "workflow": 50, "need": [51, 60, 68, 110, 123, 190, 226, 228, 260, 280, 282, 284, 287], "move": [51, 60, 81, 123, 126, 160, 163, 165, 167, 170, 173, 176, 178, 182, 184, 228, 280, 282], "file": [51, 60, 74, 76, 79, 81, 219, 221, 222, 224, 228, 254, 258, 268, 280, 281, 287], "repo": [51, 287], "here": [51, 110, 237, 280, 281, 287], "signific": 51, "organ": [51, 116, 118, 287], "overhaul": 51, "first_resourc": [54, 67], "resultthread": [54, 55, 62], "access": [54, 59, 60, 61, 65, 74, 76, 79, 81, 287], "share": [54, 60, 65, 66, 67, 118, 228], "resourc": [54, 61, 67], "order": [54, 60, 61, 173, 280], "thei": [54, 57, 60, 66, 118, 280, 287], "were": [54, 60], "launch": [54, 59, 68], "docstr": [54, 67, 68, 281], "top": [54, 67, 68, 108, 110, 112, 280], "exampl": [54, 59, 60, 67, 68, 81, 160, 163, 165, 167, 170, 173, 176, 178, 232, 234, 280, 281, 282, 287], "get_result": [54, 59], "accept": [54, 59, 60, 67, 160, 282], "timeouterror": [54, 56, 59, 61, 62, 63], "control": [54, 59, 60, 86, 121, 123, 152, 173, 184, 211, 228, 243, 244, 280, 281, 282, 286], "alia": [55, 58, 60], "homemad": 56, "test": [56, 60, 61, 62, 63], "mostli": 56, "curios": 56, "what": [56, 60, 242, 260, 280, 282], "featur": [56, 59, 228, 281, 283, 286], "we": [56, 57, 59, 60, 63, 66, 74, 76, 79, 81, 110, 116, 118, 123, 126, 211, 219, 222, 224, 226, 280, 281, 282, 284, 287], "want": [56, 60, 65, 123, 126, 280], "could": [56, 60], "done": [56, 60, 228, 280, 284, 287], "easili": 56, "ad": [56, 59, 60, 160, 263], "import": [56, 60, 284, 286, 287], "Not": [56, 113, 160, 173, 222, 230, 256], "real": [56, 60, 228], "packag": [56, 287], "wasn": 56, "t": [56, 57, 59, 60, 66, 110, 118, 167, 178, 224], "To": [56, 60, 134, 152, 160, 170, 222, 280, 284], "test_": [56, 61, 62, 63], "expect": [56, 59, 61, 62, 67, 74, 76, 79, 81, 160, 163, 165, 167, 170, 173, 176, 178, 280, 281], "gener": [56, 60, 79, 112, 211, 224, 242, 282], "print": [56, 59, 60, 110, 112, 152], "stdout": 56, "test_prefix": [56, 61, 62, 63], "fail": [56, 60, 61, 62, 63, 280, 282], "fail_fast": [56, 61, 62, 63], "begin": [56, 60, 61, 62, 63], "time_it": [56, 61, 62, 63], "n_loop": [56, 61, 62, 63], "func": [56, 61, 62, 63, 84, 251], "timeout_u": [56, 61, 62, 63], "allow": [56, 60, 61, 62, 63, 228, 280, 282, 286, 287], "durat": [56, 61, 62, 63, 108, 110, 112, 118, 123, 126, 152, 230, 251], "exce": [56, 61, 62, 63], "bar": [56, 61, 62, 63], "format": [56, 60, 61, 62, 63, 116, 118, 173, 222, 280], "progress": [56, 61, 62, 63, 173], "initarg": [57, 65, 66], "custom_loop": [57, 65, 66], "close_method_nam": [57, 66], "closearg": [57, 66], "closekwarg": [57, 66], "with_lock": 57, "initkwarg": [57, 65, 66], "child": [57, 59, 66, 209], "process": [57, 60, 65, 66, 68, 152, 228, 281, 282], "act": [57, 60, 66, 286], "like": [57, 60, 66, 67, 68, 260, 280, 284], "isn": [57, 66], "much": [57, 66], "try": [57, 59, 66, 287], "instanc": [57, 60, 66, 67, 263, 280], "behav": [57, 60, 63, 66, 280, 281], "re": [57, 59, 66], "live": [57, 60, 66, 228, 281], "parent": [57, 59, 65, 66, 108, 116, 121, 129, 134, 136, 150, 155, 163, 182], "cours": [57, 66], "have": [57, 60, 66, 118, 222, 280, 281, 282, 284, 287], "spare": [57, 66], "core": [57, 60, 66], "your": [57, 60, 65, 66, 68, 280, 284, 287], "machin": [57, 60, 66, 284, 287], "turn": [57, 66, 142, 144, 175, 209, 280, 282], "cpu": [57, 60, 66], "bound": [57, 66, 160, 163, 165, 167, 170, 173, 176, 178, 280], "which": [57, 60, 67, 74, 76, 79, 81, 134, 143, 145, 160, 163, 165, 167, 170, 173, 176, 178, 228, 280, 282, 284, 285], "parallel": [57, 284], "io": [57, 66, 152], "too": [57, 66, 134, 285], "mental": [57, 66], "overhead": [57, 61, 66, 228], "coder": [57, 66, 281], "our": [57, 59, 60, 65, 110, 112, 219, 222, 224, 280, 281, 286, 287], "automat": 57, "close_method": 57, "custodythread": [58, 61, 62], "simpl": [59, 60], "wish": 59, "had": 59, "chang": [59, 60, 110, 112, 123, 126, 134, 160, 182, 184, 228, 244, 261, 284, 287], "self": [59, 60, 110, 116, 118, 123, 170, 173, 211, 282], "trivial": 59, "u": [59, 60, 244, 284], "line": [59, 60, 67, 108, 110, 112, 265, 280, 281], "def": 59, "doe": [59, 60, 268, 280, 284, 287], "someth": [59, 60, 280, 281], "sum": [59, 60], "ones": 59, "dtype": [59, 60, 63, 65, 74, 76, 79, 81, 219, 242], "uint8": [59, 60, 65], "problem": [59, 60], "th": [59, 60, 134], "redefin": 59, "solut": 59, "res_th": 59, "assert": 59, "handl": [59, 134, 280], "idea": 59, "attributeerror": [59, 60], "wa": [59, 60, 160, 165, 167, 170, 173, 176, 178, 228, 256], "assertionerror": 59, "dure": [59, 74, 76, 79, 81, 190, 228, 237], "evalu": [59, 60, 143, 145, 251, 281], "rerais": 59, "traceback": [59, 60], "stderr": 59, "don": [59, 110, 167, 178], "affect": [59, 60], "yet": 59, "note": [59, 60, 160], "modifi": [59, 281, 282], "excepthook": 59, "copi": [59, 60, 244, 284], "past": 59, "definit": [59, 67, 68], "work": [59, 60, 118, 281], "shared_memory_nam": 60, "offset": [60, 160, 163, 165, 167, 170, 173, 176, 178, 232, 233, 234, 236, 237, 242, 256], "stride": 60, "numpi": [60, 65, 231, 232, 233, 234, 235, 236, 237], "memori": [60, 65, 66, 228], "objectinsubprocess": [60, 61], "serial": [60, 63, 65, 110, 123, 124, 126, 173, 174, 249], "pretti": 60, "fast": 60, "larg": 60, "regularli": 60, "deal": [60, 134, 222], "sens": 60, "via": [60, 97, 118, 235], "avoid": [60, 134, 152, 284], "slow": [60, 65], "mayb": [60, 67, 68], "write": [60, 74, 76, 79, 81, 118, 152, 211, 219, 222, 224, 228, 281], "look": [60, 113, 260, 280], "data_buf": 60, "zero": [60, 242], "400": 60, "display_buf": 60, "preprocessor": 60, "displai": [60, 85, 116, 118], "record": 60, "num_imag": 60, "show": 60, "payoff": 60, "own": 60, "between": [60, 260, 280, 284], "realli": 60, "memmap": 60, "templat": 60, "axi": [60, 134, 160, 163, 165, 167, 170, 173, 176, 178, 260], "keepdim": 60, "refer": [60, 237, 283, 286], "full": [60, 280], "equival": [60, 284, 287], "argmax": 60, "along": [60, 67, 68, 160, 165, 167, 170, 173, 176, 178, 228, 260, 261], "argmin": 60, "detail": [60, 123, 160], "argpartit": 60, "kth": 60, "kind": 60, "introselect": 60, "partit": 60, "version": [60, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 285, 287], "8": [60, 123, 287], "argsort": 60, "sort": 60, "astyp": 60, "k": 60, "cast": 60, "unsaf": 60, "subok": 60, "typecod": 60, "layout": 60, "fortran": 60, "contigu": 60, "close": [60, 74, 76, 79, 81, 110, 112, 118, 123, 126, 139, 141, 152, 157, 173, 211, 228, 260, 282], "appear": 60, "equiv": 60, "safe": 60, "same_kind": 60, "backward": 60, "compat": 60, "byte": [60, 74, 76, 79, 81, 123, 126, 152, 173, 219, 242], "preserv": 60, "within": [60, 68, 160, 163, 165, 170, 173, 176, 287], "float64": 60, "float32": 60, "convers": 60, "sub": [60, 211], "forc": 60, "newli": 60, "alloc": [60, 65], "satisfi": 60, "arr_t": 60, "unless": [60, 281], "descript": 60, "17": 60, "one": [60, 67, 68, 79, 81, 160, 163, 165, 167, 170, 173, 176, 178, 202, 204, 205, 228, 282], "field": [60, 280], "9": [60, 287], "numer": [60, 242], "mode": [60, 74, 76, 79, 81, 108, 110, 112, 116, 118, 134, 139, 141, 143, 145, 152, 226, 228, 285], "length": [60, 260, 261], "long": 60, "enough": 60, "store": [60, 74, 76, 79, 81, 219, 221, 222, 224, 243, 281], "convert": [60, 108, 110, 112, 160, 170, 173, 219, 221, 222, 224, 256, 263], "complexwarn": 60, "5": [60, 134, 234, 237, 280, 285], "byteswap": 60, "inplac": 60, "swap": 60, "toggl": 60, "low": [60, 173, 228, 260, 285], "endian": [60, 173], "big": 60, "represent": [60, 74, 76, 79, 81, 219, 221, 222, 224, 268], "place": [60, 280], "imaginari": 60, "part": [60, 281], "individu": 60, "view": [60, 65, 71, 219, 224, 228, 281, 286], "256": 60, "8755": 60, "int16": 60, "hex": 60, "0x1": 60, "0x100": 60, "0x2233": 60, "13090": 60, "0x3322": 60, "b": 60, "ceg": 60, "fac": 60, "s3": 60, "newbyteord": 60, "produc": [60, 134, 267], "differ": [60, 280, 284, 286, 287], "3": [60, 81, 134, 232, 236, 287], "choos": 60, "choic": 60, "index": [60, 94, 95, 118, 143, 145, 211, 228, 242], "clip": 60, "One": [60, 79], "compress": 60, "select": [60, 81, 143, 145, 284], "slice": [60, 63, 258], "conj": 60, "conjug": 60, "wise": 60, "match": [60, 242], "veri": 60, "similar": [60, 280, 281], "behavior": [60, 62, 261, 281, 282, 284], "copyto": 60, "prefer": 60, "6": [60, 134], "flag": [60, 110, 112, 121, 123, 126, 228, 261, 287], "c_contigu": 60, "cumprod": 60, "cumul": 60, "cumsum": 60, "diagon": 60, "axis1": 60, "axis2": 60, "In": [60, 222, 280], "read": [60, 74, 76, 79, 81, 123, 126, 152, 173, 182, 184], "previou": 60, "restrict": 60, "remov": [60, 280], "dump": 60, "pickl": 60, "back": [60, 152, 173, 222, 237], "load": [60, 228, 258], "path": [60, 143, 145, 228, 253, 258, 287], "pathlib": 60, "now": [60, 219, 286, 287], "scalar": 60, "assign": 60, "flatten": 60, "collaps": 60, "row": [60, 263], "major": [60, 244], "style": [60, 284], "column": 60, "ravel": [60, 240], "d": [60, 267, 268], "over": [60, 287], "getfield": 60, "certain": 60, "determin": 60, "complex128": 60, "take": [60, 81, 261], "12": 60, "larger": 60, "itself": 60, "skip": 60, "diag": 60, "j": [60, 147], "item": [60, 278, 280], "variabl": [60, 147, 281, 287], "case": 60, "int_typ": 60, "interpret": [60, 173], "singl": [60, 81, 147, 152, 160, 165, 167, 170, 176, 178, 228, 234, 258, 260], "nd": 60, "suitabl": 60, "longdoubl": 60, "clongdoubl": 60, "becaus": 60, "lose": 60, "inform": [60, 110, 112, 123, 173, 253, 254, 260, 280, 281], "void": 60, "buffer": [60, 110, 112, 152, 173, 228], "defin": [60, 84, 222], "speed": [60, 123, 173, 281, 285], "up": [60, 74, 76, 79, 81, 113, 118, 134, 280, 284, 286], "arithmet": 60, "optim": 60, "math": 60, "random": [60, 63], "seed": 60, "123": 60, "randint": 60, "7": [60, 237, 285, 287], "itemset": 60, "insert": 60, "There": [60, 222, 284], "least": 60, "last": [60, 173, 260, 287], "Then": 60, "faster": 60, "two": [60, 228, 280], "first": [60, 65, 222, 260, 280, 284, 287], "locat": [60, 123, 163, 182, 184, 280, 287], "compar": 60, "syntax": 60, "some": [60, 65, 74, 76, 79, 81, 219, 221, 222, 224, 281, 282, 284, 287], "increas": 60, "discourag": 60, "among": 60, "complic": 60, "loop": 60, "amax": 60, "amin": 60, "new_ord": 60, "arr": 60, "newbytord": 60, "opposit": 60, "littl": [60, 173], "byteord": 60, "ignor": [60, 219], "new_arr": 60, "reflect": [60, 280, 287], "rearrang": 60, "smaller": 60, "equal": 60, "greater": 60, "behind": 60, "undefin": 60, "sequenc": [60, 173, 258, 282], "final": [60, 280, 287], "them": [60, 287], "sinc": [60, 261], "22": 60, "algorithm": 60, "etc": [60, 74, 76, 79, 81, 160, 163, 165, 167, 170, 173, 176, 178, 219, 221, 222, 224, 260, 284, 286], "unspecifi": 60, "come": [60, 134], "break": [60, 281], "ti": 60, "paritit": 60, "prod": 60, "ptp": 60, "peak": [60, 237, 242], "put": [60, 61], "repeat": [60, 285], "reshap": 60, "contain": [60, 173, 201, 203, 228, 253, 258, 263, 280, 283, 286], "unlik": 60, "free": 60, "For": [60, 81, 118, 160, 163, 165, 167, 170, 173, 176, 178, 280, 284], "11": [60, 287], "resiz": 60, "new_shap": 60, "refcheck": 60, "count": [60, 280], "check": [60, 84, 121, 123, 126, 152, 167, 178, 182, 184, 228], "valueerror": 60, "exist": [60, 121, 123, 126, 182, 184, 281, 282], "pypi": 60, "reliabl": 60, "systemerror": 60, "behaviour": 60, "bug": [60, 281], "realloc": 60, "area": 60, "necessari": [60, 116, 118, 123, 126, 152, 251, 253, 280, 281, 284, 287], "consecut": 60, "shrink": 60, "enlarg": 60, "miss": 60, "entri": [60, 244, 280, 282], "doesn": 60, "referenc": 60, "prevent": 60, "recent": 60, "cannot": 60, "round": 60, "around": [60, 67, 68], "searchsort": 60, "v": [60, 147], "side": [60, 260], "sorter": 60, "find": [60, 280, 282, 284, 287], "maintain": 60, "setfield": 60, "val": [60, 84], "ey": 60, "int32": 60, "0e": 60, "000": 60, "5e": 60, "323": 60, "setflag": 60, "uic": 60, "writeabl": 60, "writebackifcopi": 60, "updateifcopi": 60, "These": [60, 284], "how": [60, 63, 190, 280], "actual": [60, 74, 76, 79, 81, 110, 230, 260], "never": 60, "ultim": 60, "owner": 60, "expos": 60, "interfac": 60, "unpickl": 60, "describ": [60, 282], "properli": [60, 280, 284], "about": [60, 254, 260], "four": [60, 173], "user": [60, 152, 253, 280, 284, 286, 287], "w": [60, 74, 76, 79, 81], "appropri": [60, 281, 287], "hardwar": [60, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 108, 110, 112, 155, 157, 160, 163, 165, 167, 170, 173, 176, 178, 182, 211, 282, 286, 287, 288], "compil": 60, "replac": [60, 280], "api": [60, 86, 110, 113, 160, 170, 280, 283, 286], "pyarray_resolvewritebackifcopi": 60, "updat": [60, 160, 173, 228, 243, 244, 263, 280, 286, 287], "upper": [60, 256], "letter": 60, "well": [60, 286], "f_contigu": 60, "owndata": 60, "stdin": 60, "quicksort": 60, "mergesort": 60, "heapsort": 60, "stabl": 60, "both": [60, 97, 157, 160, 222, 282, 287], "timsort": 60, "under": [60, 280, 282, 284, 286], "cover": [60, 260], "vari": 60, "datatyp": 60, "15": [60, 242, 287], "lexsort": 60, "kei": [60, 267], "partial": 60, "s1": 60, "i8": 60, "squeez": 60, "ax": [60, 134, 160, 163, 165, 167, 170, 173, 176, 178, 280], "std": 60, "ddof": 60, "swapax": 60, "interchang": 60, "tobyt": 60, "raw": 60, "short": 60, "exhibit": 60, "u2": 60, "x00": 60, "x01": 60, "x02": 60, "x03": 60, "tofil": 60, "fid": 60, "sep": 60, "text": [60, 256], "independ": 60, "recov": 60, "fromfil": 60, "open": [60, 74, 76, 79, 81, 157, 228, 284, 287], "filenam": [60, 79, 211, 228, 254], "closest": 60, "conveni": 60, "quick": [60, 160], "storag": 60, "precis": 60, "lost": 60, "intend": 60, "archiv": [60, 258], "transport": 60, "overcom": 60, "expens": 60, "directli": [60, 67, 68, 110], "bypass": 60, "gzipfil": 60, "fileno": 60, "bytesio": 60, "tolist": 60, "ndim": 60, "level": [60, 287], "deep": 60, "nest": [60, 219, 222, 224], "nearest": 60, "builtin": [60, 287], "depth": 60, "possibli": 60, "recreat": 60, "although": 60, "sometim": 60, "1d": 60, "almost": [60, 67], "uint32": 60, "a_list": 60, "a_tolist": 60, "addition": 60, "appli": 60, "recurs": 60, "0d": [60, 173], "typeerror": 60, "tostr": 60, "exactli": 60, "despit": 60, "19": 60, "trace": 60, "transpos": 60, "effect": [60, 242], "vector": 60, "simpli": 60, "addit": [60, 228], "atleast2d": 60, "achiev": 60, "newaxi": 60, "matrix": [60, 123, 219], "permut": 60, "revers": 60, "becom": 60, "altern": [60, 219, 221, 222, 224], "give": 60, "var": 60, "varianc": 60, "omit": 60, "former": 60, "float_": 60, "descriptor": 60, "again": 60, "omiss": 60, "some_dtyp": 60, "reinterpret": 60, "ndarray_subclass": 60, "regular": [60, 281], "predict": 60, "superfici": 60, "shown": [60, 282], "versu": 60, "int8": 60, "513": 60, "xv": 60, "underli": 60, "i1": 60, "recarrai": 60, "i2": 60, "ctype": 60, "simplifi": 60, "interact": [60, 259], "easier": 60, "librari": [60, 281, 286], "themselv": [60, 282], "possess": 60, "ctypeslib": 60, "public": 60, "guid": [60, 160, 281, 286], "undocu": 60, "privat": 60, "_ctype": 60, "pointer": [60, 74, 76, 79, 81, 282], "arbitrari": [60, 74, 76, 79, 81], "troubl": 60, "crash": 60, "bewar": 60, "_array_interface_": 60, "data_a": 60, "kept": 60, "c_void_p": 60, "dealloc": 60, "spelt": 60, "basetyp": 60, "correspond": [60, 160, 163, 165, 167, 170, 173, 176, 178, 284], "p": 60, "platform": 60, "c_intp": 60, "c_int": 60, "c_long": 60, "c_longlong": 60, "jump": 60, "next": [60, 152, 282], "obj": 60, "_as_parameter_": 60, "perhap": 60, "c_doubl": 60, "keep": [60, 281], "shape_a": 60, "c_short": 60, "strides_a": 60, "as_paramet": 60, "31962608": 60, "c_uint32": 60, "__main__": 60, "lp_c_uint": 60, "0x7ff2fc1fc200": 60, "c_uint": 60, "c_uint64": 60, "c_ulong": 60, "4294967296": 60, "_intern": 60, "c_long_array_2": 60, "0x7ff2fc1fce60": 60, "0x7ff2fc1ff320": 60, "segment": 60, "o": [60, 173, 287], "borrow": [60, 74, 76, 79, 81, 219, 221, 222, 224], "lock": 60, "creation": 60, "subsequ": 60, "while": [60, 61, 152, 163], "remain": [60, 160], "alreadi": [60, 281, 287], "circumst": 60, "alter": [60, 160], "previous": 60, "onto": 60, "fnc": 60, "carrai": 60, "ca": 60, "farrai": 60, "fa": 60, "lowercas": 60, "arbitrarili": 60, "truli": 60, "simultan": [60, 79], "clear": [60, 228], "dimension": 60, "higher": 60, "dim": [60, 258], "hold": [60, 254, 259], "items": 60, "flatit": 60, "similarli": [60, 222], "built": 60, "arang": 60, "sqrt": 60, "0j": 60, "1j": 60, "70710678": 60, "nbyte": 60, "total": [60, 260], "consum": 60, "480": 60, "usual": 60, "infer": 60, "unchang": 60, "incompat": 60, "desir": [60, 110, 112, 228], "obtain": 60, "suggest": 60, "int_": 60, "relev": 60, "further": 60, "overflow": [60, 152], "fix": [60, 281], "travers": 60, "explan": 60, "found": [60, 85, 134, 281, 287], "rst": 60, "imagin": 60, "40": 60, "known": 60, "tell": 60, "lib": 60, "stride_trick": 60, "as_strid": 60, "13": [60, 173], "14": [60, 173], "18": 60, "21": 60, "23": 60, "48": 60, "224": 60, "1344": 60, "813": 60, "mytestclass": [61, 62, 63], "testclass": 61, "toi": 61, "subprocess": 61, "test_incorrect_thread_manag": 61, "custodi": [61, 67, 68], "test_lock_with_waitlist": 61, "stai": [61, 237, 287], "objectsinsubprocess": 61, "mock": 61, "_waitinglist": [61, 67], "test_object_in_subprocess_overhead": 61, "test_sending_shared_arrai": 61, "send": [61, 152, 173], "sharedndarrai": [61, 63, 228], "variou": [62, 63, 280], "test_ndarraylike_behavior": 63, "broke": 63, "suppos": 63, "test_seri": 63, "deseri": 63, "test_serializing_and_deseri": 63, "shared_memory_s": 65, "spawn": 65, "proxi": [65, 66, 249, 287], "proxyobject": [65, 67, 68], "multiprocess": [65, 86, 89, 91], "shared_numpy_arrai": 65, "which_mp_arrai": 65, "shared_mp_arrai": 66, "proxymanag": [66, 67, 68], "thin": [67, 68], "wrapper": [67, 68], "few": [67, 68, 282], "usag": [67, 68, 258], "_custodi": 67, "switch_from": 67, "_wait_in_lin": 67, "immedi": 67, "acquir": [68, 211, 228, 282], "releas": 68, "launch_custody_thread": 68, "feel": 68, "detect": [68, 193], "occour": 68, "file_nam": [74, 76, 79, 81, 219, 222, 224], "datasourc": [74, 79, 81], "metdata": [74, 76, 79, 81], "metadata": [74, 76, 79, 81, 219, 224], "concept": [74, 76, 79, 81, 219, 221, 222, 224], "microscopi": [74, 76, 79, 81, 147, 219, 221, 222, 224], "clean": [74, 76, 79, 81, 286], "leftov": [74, 76, 79, 81], "union": [74, 76, 79, 81, 219, 224, 242], "_supportsarrai": [74, 76, 79, 81, 219, 242], "_nestedsequ": [74, 76, 79, 81, 219, 242], "kw": [74, 76, 79, 81, 219, 222, 224], "xyz": [74, 160], "bdv": 74, "spec": 74, "xyczt": [74, 76, 79, 81, 219, 221, 222, 224], "zyx": 74, "rather": 74, "subdivis": 74, "voxel_s": [74, 76, 79, 81, 219, 221, 222, 224], "voxel": [74, 76, 79, 81, 219, 221, 222, 224], "file_typ": [77, 219, 222, 224], "is_bigtiff": 79, "generate_image_nam": [79, 211], "current_channel": [79, 211], "current_time_point": 79, "ch00_000000": [79, 211], "tif": [79, 211, 258], "timepoint": [79, 280], "stack": [79, 190, 228, 282], "At": 79, "copy_to_zarr": 81, "frame_id": [81, 211], "zarr": 81, "Will": [81, 222], "fom": 81, "sharednd": 81, "three": [81, 173], "assumpt": 81, "acquisit": [81, 92, 108, 110, 112, 116, 118, 228, 282, 285], "dummi": 83, "devic": [83, 84, 85, 86, 91, 93, 94, 95, 96, 97, 98, 99, 256, 280, 284, 285, 287], "n_tri": 84, "retri": 84, "connect": [84, 91, 93, 94, 95, 96, 97, 98, 99, 108, 110, 112, 118, 124, 152, 155, 157, 163, 174, 182, 228, 280, 284], "startup": [84, 280], "redial": 84, "baseexcept": 84, "messag": [85, 152], "incorrect": 85, "microscope_nam": [85, 91, 93, 94, 95, 96, 97, 98, 99, 108, 110, 112, 116, 118, 121, 123, 126, 129, 139, 141, 150, 155, 157, 160, 163, 165, 167, 170, 173, 176, 178, 182, 184], "camera_id": 86, "is_synthet": [86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 226], "dictproxi": [86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 108, 110, 112, 116, 118, 155, 157, 163, 182], "global": [86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 108, 110, 112, 116, 118, 155, 157, 163, 182, 228], "synthet": [86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 112, 113, 140, 157, 228, 280], "wheel": [88, 93, 121, 123, 124, 125, 126, 173, 174, 228, 285], "dedic": [88, 89, 90, 92, 93, 95, 97, 99], "multiproces": [88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 108, 110, 112, 116, 118, 155, 157, 163, 182], "zoom": [90, 99, 280], "device_connect": [91, 93, 94, 95, 96, 97, 98, 99, 108, 110, 112, 121, 123, 126, 129, 139, 141, 150, 155, 157, 160, 163, 165, 167, 170, 173, 176, 178, 182, 184], "daq": [92, 95, 97, 143, 145, 226, 228, 280], "filterwheel": 93, "galvo": [94, 116, 118, 231, 232], "scan": [94, 285], "trigger": [95, 97, 118, 142, 143, 144, 145, 157, 230, 284], "switch": [95, 123, 228, 237, 256, 280], "analog": [95, 118, 142, 144, 175, 234, 236, 284, 285], "digit": [95, 97, 142, 144, 175, 284], "focus": [96, 163, 237, 285], "shutter": [97, 228], "thorlabsshutt": 97, "syntheticshutt": 97, "ni": [97, 280, 284], "card": [97, 228], "thu": 97, "enabl": [97, 123, 126, 152, 285], "calculate_light_sheet_exposure_tim": [108, 110, 112], "full_chip_exposure_tim": [108, 110, 112], "shutter_width": [108, 110, 112], "exposur": [108, 110, 112, 118, 228, 230], "light": [108, 110, 112], "sheet": [108, 110, 112], "exposure_tim": [108, 110, 112, 118, 237, 280], "camera_line_interv": [108, 110, 112], "hamamatsuorca": [108, 112, 280], "interv": [108, 110, 112], "set_readout_direct": [108, 110, 112], "bottom": [108, 110, 112], "bytrigg": [108, 110, 112], "diverg": [108, 110, 112], "camerabas": [110, 112], "calculate_readout_tim": 110, "rate": [110, 123, 124, 126, 152, 173, 174], "assum": [110, 219, 222, 224, 258, 287], "c13440": 110, "link": 110, "commun": [110, 123, 124, 125, 126, 131, 133, 135, 152, 173, 174, 175, 197, 280], "pull": [110, 281, 284], "readout_tim": [110, 116, 118, 226], "max_frame_r": 110, "framer": 110, "todo": [110, 167, 178, 219, 222, 228, 261, 268], "think": 110, "camera_control": 110, "get_property_valu": [110, 113], "close_camera": [110, 112], "close_image_seri": [110, 112], "seri": [110, 112], "stop": [110, 112, 118, 152, 160, 163, 165, 167, 170, 173, 176, 178, 228], "is_acquir": [110, 112], "get_minimum_waiting_tim": [110, 112], "cyclic_trigger_period": [110, 112], "minimum_trigger_blank": [110, 112], "minimum_trigger_interv": [110, 112], "trigger_blank": [110, 112], "bigger": [110, 112], "trigger_interv": [110, 112], "get_new_fram": [110, 112], "initialize_image_seri": [110, 112], "data_buff": [110, 112, 211, 228], "number_of_fram": [110, 112], "report_set": [110, 112], "set_roi": [110, 112], "roi_height": [110, 112], "2048": [110, 112], "roi_width": [110, 112], "region": [110, 112, 260], "height": [110, 112], "set_bin": [110, 112], "binning_str": [110, 112], "bin": [110, 112], "1x1": 110, "2x2": [110, 112], "4x4": [110, 112], "8x8": [110, 112], "16x16": 110, "1x2": 110, "2x4": 110, "set_exposure_tim": [110, 112], "unit": [110, 112, 160, 234, 237, 285], "millisecond": [110, 112], "set_line_interv": [110, 112], "line_interval_tim": [110, 112], "set_sensor_mod": [110, 112], "sensor": [110, 112, 228], "serial_numb": [110, 280], "generate_new_fram": 112, "idprop": 113, "property_dict": 113, "property_valu": 113, "hard": 113, "calculate_all_waveform": [116, 118, 226], "pre": [116, 118, 282], "waveform": [116, 118, 228, 284], "waveform_dict": [116, 118], "etl": [116, 118, 237], "plu": [116, 118], "daqbas": 118, "add_camera": 118, "close_task": 118, "task": [118, 173, 284, 287], "counter": [118, 284], "create_camera_task": 118, "create_galvo_etl_task": 118, "create_master_trigger_task": 118, "prepare_acquisit": [118, 228], "channel_kei": [118, 228], "prepar": [118, 228], "run_acquisit": [118, 228], "start_task": 118, "won": 118, "run_task": 118, "stop_acquisit": 118, "stop_task": 118, "write_waveforms_to_task": 118, "filter_dictionari": [121, 123, 126, 173], "instal": [121, 123, 126, 173, 286, 288], "wheel_posit": [121, 123, 126], "check_if_filter_in_filter_dictionari": [121, 123, 126], "filter_nam": [121, 123, 126], "filter_exist": [121, 123, 126], "filterwheelbas": [123, 126], "sutter": [123, 173], "lambda": 123, "manual": 123, "lb10": 123, "3_opman": 123, "comport": [123, 124, 126, 152, 173, 174], "com1": [123, 124, 126, 173, 174], "baudrat": [123, 124, 126, 173, 174, 280], "baud": [123, 124, 126, 152, 173, 174], "9600": [123, 124, 126, 173, 174, 280], "number_of_filter_wheel": [123, 126], "wait_until_done_delai": [123, 126], "wait_until_don": [123, 126, 160, 165, 167, 170, 173, 176, 178, 182, 184, 228], "period": [123, 126, 237], "delay_matrix": 123, "movement": [123, 134, 160, 163, 165, 167, 170, 173, 176, 178, 280], "fastest": 123, "slowest": 123, "filter_change_delai": [123, 126], "occupi": 123, "num_byt": [123, 126, 152, 173], "port": [123, 124, 126, 139, 141, 152, 173, 174, 280, 284], "retriev": [123, 253], "page": [123, 147], "38": 123, "set_filt": [123, 126], "25": [124, 234], "build": [124, 174, 253], "sutterfilterwheel": [124, 280], "galvo_id": 129, "voic": [129, 150, 152], "coil": [129, 150, 152], "joi": [131, 133, 135], "stick": [131, 133, 135], "joystickbas": [134, 136], "axis_handl": 134, "axis_id": 134, "handler": 134, "farmsimulatorsidepanel": 134, "blue": 134, "led": 134, "grei": 134, "button": 134, "red": 134, "unknown": 134, "regist": 134, "decrease_slid": 134, "slider": 134, "event_devid": 134, "quickli": 134, "everi": 134, "mode_handl": 134, "helper": 134, "cfg": 134, "window": [134, 253, 280, 284, 287], "laser_id": [139, 141], "initialize_las": [139, 141], "power": [139, 141], "cw": [139, 141], "apc": [139, 141], "laserbas": 141, "mix": [142, 144, 175, 228, 285], "goal": [142, 144, 175], "dc": [142, 144, 175, 231], "intens": [142, 143, 144, 145, 175, 228, 234, 242], "voltag": [142, 143, 144, 145, 175, 231, 236, 237], "rapidli": [142, 144, 175], "enable_high_resolution_las": [143, 145], "experi": [143, 145, 211, 219, 221, 222, 224, 228, 254, 281], "enable_low_resolution_las": [143, 145], "set_laser_analog_voltag": [143, 145], "current_laser_index": [143, 145], "current_laser_intens": [143, 145], "constant": [143, 145], "percentag": [143, 145], "lasertriggerbas": 145, "calculate_entrance_pupil": 147, "entranc": 147, "pupil": 147, "incid": 147, "angl": 147, "fluoresc": 147, "interfer": 147, "contrast": 147, "carolin": 147, "ajo": 147, "franklin": 147, "prasad": 147, "ganesan": 147, "steven": 147, "boxer": 147, "biophi": 147, "volum": 147, "89": 147, "issu": [147, 287], "octob": 147, "2005": 147, "2759": 147, "2769": 147, "entrance_pupil_diamet": 147, "diamet": 147, "millimet": [147, 170], "remotefocusbas": 152, "sca814": 152, "charact": 152, "proper": [152, 284, 287], "echo": 152, "verifi": 152, "receiv": [152, 173, 228], "sent": 152, "pyseri": 152, "readthedoc": 152, "en": 152, "latest": 152, "pyserial_api": 152, "html": 152, "baud_rat": [152, 161, 174], "byte_s": 152, "pariti": 152, "stop_bit": 152, "read_on_init": 152, "establish": 152, "upon": [152, 284, 287], "debug": [152, 228], "statement": [152, 251], "read_byt": 152, "send_command": 152, "command": [152, 160, 173, 182, 184, 228, 287], "close_connect": 152, "received_byt": 152, "bytearrai": 152, "shutdown": 152, "shutterbas": 157, "deliv": [157, 284], "open_left": 157, "open_right": 157, "close_shutt": 157, "state": [157, 190, 228, 280, 282], "device_id": [160, 163, 165, 167, 170, 173, 176, 178], "stagebas": [160, 165, 167, 170, 173, 176, 178], "asiimag": 160, "doc": 160, "serial_command": 160, "command_quick_start": 160, "distanc": [160, 173, 190, 260], "10th": 160, "micron": [160, 173, 285], "divis": 160, "ever": 160, "rel": [160, 170], "ftp": 160, "stilt": 160, "strain": 160, "system": [160, 242, 280, 281, 285, 287], "stimultan": 160, "create_internal_position_dict": [160, 163, 165, 167, 170, 173, 176, 178], "intern": [160, 163, 165, 167, 170, 173, 176, 178, 219, 221, 222, 224], "int_x_po": [160, 163, 165, 167, 170, 173, 176, 178], "x_po": [160, 163, 165, 167, 170, 173, 176, 178, 280], "int_x_pos_offset": [160, 163, 165, 167, 170, 173, 176, 178], "create_position_dict": [160, 163, 165, 167, 170, 173, 176, 178], "get_abs_posit": [160, 163, 165, 167, 170, 173, 176, 178], "move_dictionari": [160, 163, 165, 167, 170, 173, 176, 178], "ensur": [160, 163, 165, 170, 173, 176, 281], "request": [160, 163, 165, 170, 173, 176, 281], "prefix": [160, 163, 165, 167, 170, 173, 176, 178], "x_ab": [160, 163, 165, 167, 170, 173, 176, 178], "x_min": [160, 163, 165, 167, 170, 173, 176, 178, 280], "micromet": [160, 163, 165, 167, 170, 173, 176, 178], "degre": [160, 163, 165, 167, 170, 173, 176, 178], "move_absolut": [160, 165, 167, 170, 173, 176, 178], "asi": [160, 173, 280], "absolut": [160, 170, 281], "spot": [160, 165, 167, 170, 173, 176, 178], "success": [160, 165, 167, 170, 173, 176, 178, 228], "move_axis_absolut": [160, 165, 167, 170, 173, 176, 178], "axis_num": [160, 165, 167, 170, 173, 176, 178], "logic": [160, 165, 167, 170, 173, 176, 178], "movrel": 160, "pi": [160, 165, 167, 170, 173, 176, 178, 232, 280], "applic": [160, 173, 281], "report_posit": [160, 167, 170, 173, 178], "abruptli": [160, 163, 165, 167, 170, 176, 178], "com_port": [161, 174], "attribiut": 163, "y_po": [163, 280], "z_po": [163, 280], "f_po": [163, 280], "theta_po": [163, 280], "rotat": [163, 261], "position_dict": 163, "int_y_po": 163, "int_z_po": 163, "int_f_po": 163, "int_theta_po": 163, "int_position_dict": 163, "int_y_pos_offset": 163, "int_z_pos_offset": 163, "int_f_pos_offset": 163, "int_theta_pos_offset": 163, "x_max": [163, 280], "y_max": [163, 280], "z_max": [163, 280], "f_max": [163, 280], "positoin": 163, "theta_max": [163, 280], "y_min": [163, 280], "z_min": [163, 280], "f_min": [163, 280], "theta_min": [163, 280], "x_rot_posit": [163, 280], "specimen": 163, "y_rot_posit": [163, 280], "z_rot_posit": [163, 280], "startfocu": [163, 280], "hack": [167, 178], "lack": [167, 178], "serialnum": [168, 171, 179], "xyzf": 170, "pidevic": 170, "mvr": 170, "x_rel": 170, "controllernam": [171, 280], "refmod": [171, 280], "mp": 173, "285": 173, "ascii": 173, "cr": 173, "carriag": 173, "hexadecim": 173, "associ": 173, "complet": [173, 282], "host": 173, "comput": [173, 280, 287], "readi": 173, "check_byte_ord": 173, "confirm": [173, 182, 184, 282, 287], "respons": [173, 286], "static": [173, 190], "convert_microns_to_microstep": 173, "microstep": 173, "convert_microsteps_to_micron": 173, "flush_buff": 173, "flush": 173, "consist": 173, "end": [173, 228, 282], "set_stage_speed_and_resolut": 173, "3000": 173, "sec": 173, "1310": 173, "04": 173, "origin": [173, 256], "sutterstag": 174, "device_control": 182, "servo": [182, 184], "read_posit": [182, 184], "cur_posit": [182, 184], "set_zoom": [182, 184], "tha": [182, 184], "zoomdict": [182, 184], "zoombas": 184, "dynamixelzoom": [184, 280], "timecost": 186, "get_autofocus_frame_num": 190, "best": [190, 281], "get_step": 190, "step_siz": [190, 280], "autofocus": 190, "routin": [190, 228, 286], "travel": 190, "pos_offset": 190, "figur": 190, "resolution_mod": 192, "zoom_valu": 192, "overlap": [193, 260, 261], "target_resolut": [193, 216], "nanoscal": [193, 216], "target_zoom": [193, 216], "tissu": 193, "grid": [193, 261], "root": [200, 201, 203, 219, 222, 224, 267, 268], "cleanup_list": [200, 201, 203], "feature_nam": [202, 204, 205], "func_dict": [202, 204, 205], "node_typ": [202, 204, 205, 282], "device_rel": [202, 204, 205, 282], "need_respons": [202, 204, 205, 282], "treenod": [202, 204], "number_of_execut": 203, "feature_modul": 208, "func_typ": 208, "feature_list": 209, "sibl": 209, "tree": [209, 282], "sub_dir": 211, "disk": [211, 254], "acqusit": [211, 282], "directori": [211, 222, 253, 254, 287], "save_directori": [211, 253], "ext": 211, "microscopest": [211, 228], "color": 211, "save_imag": 211, "service_url": 214, "xmlmetadata": [219, 224], "parse_bdv_xml": 219, "pars": [219, 222, 267, 268], "bigdataview": [219, 222], "xml": [219, 222, 224, 267, 268], "incomplet": 219, "stage_positions_to_affine_matrix": 219, "to_xml": [219, 222, 224], "write_xml": [219, 222, 224], "header": [219, 222, 224, 265], "om": [222, 224, 268], "proprietari": 222, "address": 222, "file_type_xml_dict": 222, "ome_tiff_xml_dict": [222, 224], "xml_tool": 222, "parse_xml": 222, "uid": 224, "heirarch": 224, "ome_dict": 224, "devices_dict": 226, "get_readout_tim": [226, 228], "event_queu": 228, "architectur": [228, 281, 285, 286], "leverag": 228, "cuda": [228, 285, 287], "analysi": [228, 282], "engin": 228, "configuration_path": 228, "experiment_path": 228, "update_data_buff": 228, "get_data_buff": 228, "create_pip": 228, "release_pip": 228, "run_command": 228, "move_stag": 228, "end_acquisit": 228, "run_data_process": 228, "run_single_channel_acquisit": 228, "run_single_acquisit": 228, "snap_imag": 228, "run_live_acquisit": 228, "run_z_stack_acquisit": 228, "run_single_channel_acquisition_with_featur": 228, "change_resolut": 228, "resolution_valu": 228, "pipe_nam": 228, "pipe": 228, "pair": 228, "duplex": 228, "end1": 228, "disconnect": 228, "img_width": 228, "512": 228, "img_height": 228, "get_stage_posit": 228, "ret_pos_dict": 228, "load_imag": 228, "unload": 228, "pos_dict": [228, 245], "turn_off_flag": 228, "project": [228, 286], "update_set": 228, "autofocu": [228, 282], "num_of_fram": 228, "data_func": 228, "stream": 228, "gui": [228, 259, 263], "recalcul": 228, "therebi": 228, "peopl": 228, "adjust": 228, "target_channel": 228, "due": 228, "cleanup": [228, 282], "stop_stag": 228, "sample_r": [230, 231, 232, 233, 234, 236, 237], "100000": [230, 231, 232, 233, 234, 236, 237, 280], "sweep_tim": [230, 231, 232, 233, 234, 236, 237], "camera_delai": [230, 237], "meant": 230, "visual": [230, 287], "reson": 231, "drive": [231, 236, 286], "duty_cycl": [232, 236], "phase": [232, 233, 236], "5707963267948966": 232, "galvosign": 232, "199": 232, "67": 232, "sine": 233, "pulse_width": 234, "ttl": 234, "volt": [234, 237], "typical_ttl_puls": 234, "typical_laser_puls": 234, "80": [234, 287], "percent_smooth": 235, "smooth": 235, "convolut": 235, "141592653589793": 236, "24": 237, "etl_delai": 237, "fall": 237, "sawtooth": 237, "ramp": 237, "typic": 237, "rise": 237, "linearli": 237, "2x": [237, 285], "drop": 237, "down": 237, "exchang": 237, "hz": 237, "na": [240, 241, 242], "wvl": [240, 241, 242], "r0": [240, 242], "z0": [240, 242], "w0": [240, 242], "i0": [240, 242], "bg0": 240, "rl": 242, "zl": 242, "33": 242, "488": [242, 285], "bg": 242, "waist": 242, "nm": [242, 285], "apertur": 242, "optic": 242, "refract": 242, "wavelength": 242, "common": [243, 244, 284], "model": [243, 244, 281, 282, 286], "help": [244, 280], "percol": 244, "funclist": 248, "execut": [251, 282], "saving_set": 253, "popup": 253, "file_directori": 254, "content_dict": 254, "yml": 254, "yaml": [254, 281], "font_siz": 256, "piec": 256, "font": 256, "arial": 256, "ttf": 256, "darwin": 256, "cambriab": 256, "fp": 258, "lazi": 258, "folder": [258, 281, 287], "pil": 258, "low_res_fp": 258, "endosom": 258, "mil": 258, "marin": 258, "zach": 258, "lung": 258, "antirfp": 258, "07": 258, "02": [258, 287], "cell_001": 258, "low_r": 258, "imshow": 258, "500": [258, 280], "containt": 258, "commonli": [259, 284], "multiposit": [259, 263], "panda": [259, 263], "tabl": [259, 263], "dist": 260, "roi_length": 260, "tile": [260, 261], "divid": 260, "roi": [260, 261], "watch": 260, "sign": [260, 261], "measur": 260, "num_til": 260, "x_start": 261, "x_tile": 261, "x_length": 261, "x_overlap": 261, "y_start": 261, "y_tile": 261, "y_length": 261, "y_overlap": 261, "z_start": 261, "z_tile": 261, "z_length": 261, "z_overlap": 261, "theta_start": 261, "theta_til": 261, "theta_length": 261, "theta_overlap": 261, "f_start": 261, "f_tile": 261, "f_length": 261, "f_overlap": 261, "fov": 261, "track": 261, "n_posit": 261, "po": 263, "append": 263, "redraw": 263, "datafram": 263, "multi_position_t": 263, "begin_start": 265, "tag": 267, "elementtre": 268, "account": 268, "namespac": 268, "etre": 268, "fullnam": [277, 278], "escap": [277, 278], "underlin": [277, 278], "rubric": 278, "endfor": 278, "endif": 278, "endblock": 278, "appdata": [280, 284], "mac": [280, 284, 287], "linux": [280, 284, 287], "302158": 280, "302352": 280, "filter_wheel": 280, "com19": 280, "number_of_wheel": 280, "884": 280, "l": [280, 285], "509": [280, 285], "20dg10": [280, 285], "40dg10": 280, "060": 280, "dg": 280, "406": 280, "4pd": 280, "nostag": 280, "frf": 280, "119060508": 280, "thorlab": [280, 285], "74000375": 280, "servo_id": 280, "com18": 280, "1000000": 280, "manufactur": 280, "123456789": 280, "com7": 280, "115200": 280, "instanti": 280, "eg": 280, "setup": [280, 286, 287, 288], "emploi": 280, "syntheticstag": 280, "987654321": 280, "syntheticzoom": 280, "abbrevi": 280, "y_unload_posit": 280, "10000": 280, "y_load_posit": 280, "90000": 280, "75000": 280, "33500": 280, "16000": 280, "50000": 280, "25000": 280, "360": 280, "x_step": 280, "y_step": 280, "z_step": 280, "theta_step": 280, "f_step": 280, "25250": 280, "40000": 280, "70000": 280, "veloc": 280, "1000": 280, "x_offset": 280, "y_offset": 280, "z_offset": 280, "f_offset": 280, "theta_offset": 280, "explicil": 280, "earlier": 280, "rest": 280, "relat": 280, "physic": 280, "third": 280, "laser_pow": 280, "interval_tim": 280, "stack_acquisit": 280, "200": 280, "start_po": 280, "5000": 280, "end_po": 280, "stack_paus": 280, "widget": 280, "spinbox": 280, "develop": [280, 281, 282, 286], "plan": 280, "go": [280, 287], "forward": 280, "manner": 280, "welcom": 281, "pleas": [281, 287], "fork": 281, "branch": 281, "review": 281, "practic": 281, "outlin": 281, "consid": 281, "refactor": 281, "reach": 281, "happi": 281, "bring": 281, "discuss": 281, "meet": 281, "strong": 281, "especi": 281, "disrupt": 281, "improv": 281, "clariti": 281, "team": 281, "advanc": 281, "merg": 281, "pep8": 281, "importantli": 281, "camelcas": 281, "lowercase_and_separated_by_underscor": 281, "numpydoc": 281, "ideal": [281, 282], "alert": 281, "pytest": 281, "reconfigur": 282, "snap": 282, "pictur": 282, "common_featur": 282, "zstackacquisit": 282, "discret": 282, "cosin": 282, "dictat": 282, "config_t": 282, "init": 282, "pre_func_sign": 282, "in_func_sign": 282, "end_func_sign": 282, "cleanup_func_sign": 282, "pre_func_data": 282, "in_func_data": 282, "end_func_data": 282, "cleanup_func_data": 282, "node": 282, "multi": 282, "primari": 282, "failsaf": 282, "latter": 282, "inde": 282, "proceed": 282, "section": 282, "contribut": [283, 286], "guidelin": [283, 286], "sever": 284, "pcie": 284, "6738": 284, "pxie": [284, 285], "6259": 284, "6733": 284, "pinout": 284, "click": 284, "aspect": 284, "wire": 284, "queue": 284, "board": 284, "receipt": 284, "determinist": 284, "basi": 284, "aslm": [284, 287, 288], "jitter": 284, "anticip": 284, "usernam": [284, 287], "config": [284, 287], "conflict": 284, "dev1": 284, "dev2": 284, "camera_trigger_out_lin": 284, "extern": 284, "pxi6259": [284, 285], "ctr0": 284, "master_trigger_out_lin": 284, "trigger_sourc": 284, "port0": 284, "line1": 284, "pfi0": 284, "p0": 284, "pin": 284, "pfio": 284, "gate": 284, "omicron": 285, "lighthub": 285, "ultra": 285, "acc": 285, "642": 285, "561": 285, "obi": 285, "unidirect": 285, "bidirect": 285, "repeatablil": 285, "increment": 285, "motion": 285, "borderlin": 285, "coars": 285, "gpu": [285, 286, 288], "nvidia": [285, 287], "titan": 285, "rtx": 285, "driver": [285, 287], "456": 285, "71": 285, "flash": 285, "framegrabb": 285, "optotun": 285, "electrotun": 285, "len": 285, "blink": 285, "nation": 285, "instrument": 285, "1073": 285, "chassi": 285, "equip": 285, "pxi6733": 285, "32mm": 285, "position": 285, "mad": 285, "citi": 285, "lab": 285, "nano": 285, "grabber": 285, "ut": 286, "ecosystem": 286, "aim": 286, "abstract": 286, "custom": 286, "recip": 286, "maker": 286, "autom": 286, "repositori": 286, "philosophi": 286, "minim": 286, "priorit": 286, "stabil": 286, "layer": 286, "brutal": 286, "obviou": 286, "understood": 286, "year": 286, "maxim": 286, "biolog": 286, "troubleshoot": [286, 288], "extend": 286, "enviorn": 287, "head": 287, "miniconda": 287, "websit": 287, "handi": 287, "conda": 287, "cheatsheet": 287, "accustom": 287, "search": 287, "anaconda": 287, "prompt": 287, "mycomput": 287, "pip": 287, "upgrad": 287, "far": 287, "environ": 287, "mkdir": 287, "myfoldernam": 287, "cd": 287, "easi": 287, "git": 287, "clone": 287, "advancedimagingutsw": 287, "download": 287, "finish": 287, "sh": 287, "completet": 287, "tensorflow": 287, "pytorch": 287, "cupi": 287, "excel": 287, "cudnn": 287, "sdk": 287, "graphic": 287, "450": 287, "tensorrt": 287, "microsoft": 287, "studio": 287, "2015": 287, "2017": 287, "2019": 287, "campu": 287, "utsw": 287, "http_proxi": 287, "swmed": 287, "edu": 287, "3128": 287, "https_proxi": 287, "typo": 287, "continu": 287, "perspect": 287, "onlin": 287, "usersuserprofil": 287, "condarc": 287, "usersuserprofilepippip": 287, "ini": 287, "password": 287, "8080": 287}, "objects": {"aslm": [[0, 0, 0, "-", "config"], [6, 0, 0, "-", "controller"], [13, 0, 0, "-", "model"], [238, 0, 0, "-", "tools"], [269, 0, 0, "-", "view"]], "aslm.config": [[1, 0, 0, "-", "config"]], "aslm.config.config": [[2, 1, 1, "", "build_nested_dict"], [3, 1, 1, "", "get_configuration_paths"], [4, 1, 1, "", "load_configs"], [5, 1, 1, "", "update_config_dict"]], "aslm.controller": [[7, 0, 0, "-", "configuration_controller"], [9, 0, 0, "-", "thread_pool"]], "aslm.controller.configuration_controller": [[8, 2, 1, "", "ConfigurationController"]], "aslm.controller.configuration_controller.ConfigurationController": [[8, 3, 1, "", "__init__"], [8, 4, 1, "", "camera_config_dict"], [8, 4, 1, "", "camera_pixels"], [8, 3, 1, "", "change_microscope"], [8, 4, 1, "", "channels_info"], [8, 3, 1, "", "get_microscope_configuration_dict"], [8, 3, 1, "", "get_stage_position_limits"], [8, 4, 1, "", "lasers_info"], [8, 4, 1, "", "remote_focus_dict"], [8, 4, 1, "", "stage_default_position"], [8, 4, 1, "", "stage_step"]], "aslm.controller.thread_pool": [[10, 2, 1, "", "SelfLockThread"], [11, 2, 1, "", "SynchronizedThreadPool"], [12, 2, 1, "", "ThreadWaitlist"]], "aslm.controller.thread_pool.SelfLockThread": [[10, 3, 1, "", "__init__"], [10, 4, 1, "", "daemon"], [10, 3, 1, "", "getName"], [10, 4, 1, "", "ident"], [10, 3, 1, "", "isDaemon"], [10, 3, 1, "", "is_alive"], [10, 3, 1, "", "join"], [10, 4, 1, "", "name"], [10, 4, 1, "", "native_id"], [10, 3, 1, "", "run"], [10, 3, 1, "", "setDaemon"], [10, 3, 1, "", "setName"], [10, 3, 1, "", "start"]], "aslm.controller.thread_pool.SynchronizedThreadPool": [[11, 3, 1, "", "__init__"]], "aslm.controller.thread_pool.ThreadWaitlist": [[12, 3, 1, "", "__init__"]], "aslm.model": [[14, 0, 0, "-", "analysis"], [52, 0, 0, "-", "concurrency"], [72, 0, 0, "-", "data_sources"], [82, 0, 0, "-", "device_startup_functions"], [100, 0, 0, "-", "devices"], [185, 0, 0, "-", "dummy"], [188, 0, 0, "-", "features"], [217, 0, 0, "-", "metadata_sources"], [225, 0, 0, "-", "microscope"], [227, 0, 0, "-", "model"], [229, 0, 0, "-", "waveforms"]], "aslm.model.analysis": [[15, 0, 0, "-", "boundary_detect"], [20, 0, 0, "-", "detection"], [30, 0, 0, "-", "image_contrast"], [36, 0, 0, "-", "image_decorrelation"], [45, 0, 0, "-", "image_transform"], [48, 0, 0, "-", "noise_model"], [50, 0, 0, "-", "spectral_unmixing"]], "aslm.model.analysis.boundary_detect": [[16, 1, 1, "", "binary_detect"], [17, 1, 1, "", "find_tissue_boundary_2d"], [18, 1, 1, "", "has_tissue"], [19, 1, 1, "", "map_boundary"]], "aslm.model.analysis.detection": [[21, 1, 1, "", "add_median_border"], [22, 1, 1, "", "combine_images"], [23, 1, 1, "", "log_detection"], [24, 1, 1, "", "make_inside_image"], [25, 1, 1, "", "make_normalized_image"], [26, 1, 1, "", "make_sphere_3D"], [27, 1, 1, "", "multiscale_surface_filter_3D"], [28, 1, 1, "", "surface_filter_gauss_3D"], [29, 1, 1, "", "three_level_segmentation"]], "aslm.model.analysis.image_contrast": [[31, 1, 1, "", "estimate_and_correct_flatfield"], [32, 1, 1, "", "estimate_image_resolution"], [33, 1, 1, "", "fast_normalized_dct_shannon_entropy"], [34, 1, 1, "", "image_intensity"], [35, 1, 1, "", "normalized_dct_shannon_entropy"]], "aslm.model.analysis.image_decorrelation": [[37, 1, 1, "", "apodize_image"], [38, 1, 1, "", "get_correlation_coefficient"], [39, 1, 1, "", "get_decorrelation_local_maxima"], [40, 1, 1, "", "get_image_decorrelation"], [41, 1, 1, "", "get_radial_average"], [42, 1, 1, "", "image_to_polar"], [43, 1, 1, "", "linear_map"], [44, 1, 1, "", "main_image_decorr"]], "aslm.model.analysis.image_transform": [[46, 1, 1, "", "deskew_image"], [47, 1, 1, "", "initiate_gpu"]], "aslm.model.analysis.noise_model": [[49, 1, 1, "", "compute_noise_sigma"]], "aslm.model.analysis.spectral_unmixing": [[51, 1, 1, "", "to_do"]], "aslm.model.concurrency": [[53, 0, 0, "-", "concurrency_tools"], [64, 0, 0, "-", "proxy_objects"], [69, 0, 0, "-", "shared_memory"], [70, 0, 0, "-", "write_parameters"]], "aslm.model.concurrency.concurrency_tools": [[54, 2, 1, "", "CustodyThread"], [55, 5, 1, "", "FancyThread"], [56, 2, 1, "", "MyTestClass"], [57, 2, 1, "", "ObjectInSubprocess"], [58, 5, 1, "", "PoliteThread"], [59, 2, 1, "", "ResultThread"], [60, 2, 1, "", "SharedNDArray"], [61, 2, 1, "", "TestObjectInSubprocess"], [62, 2, 1, "", "TestResultThreadAndCustodyThread"], [63, 2, 1, "", "TestSharedNDArray"]], "aslm.model.concurrency.concurrency_tools.CustodyThread": [[54, 3, 1, "", "__init__"], [54, 4, 1, "", "daemon"], [54, 3, 1, "", "getName"], [54, 3, 1, "", "get_result"], [54, 4, 1, "", "ident"], [54, 3, 1, "", "isDaemon"], [54, 3, 1, "", "is_alive"], [54, 3, 1, "", "join"], [54, 4, 1, "", "name"], [54, 4, 1, "", "native_id"], [54, 3, 1, "", "run"], [54, 3, 1, "", "setDaemon"], [54, 3, 1, "", "setName"], [54, 3, 1, "", "start"]], "aslm.model.concurrency.concurrency_tools.MyTestClass": [[56, 3, 1, "", "__init__"], [56, 3, 1, "", "run"], [56, 3, 1, "", "time_it"]], "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess": [[57, 3, 1, "", "__init__"]], "aslm.model.concurrency.concurrency_tools.ResultThread": [[59, 3, 1, "", "__init__"], [59, 4, 1, "", "daemon"], [59, 3, 1, "", "getName"], [59, 3, 1, "", "get_result"], [59, 4, 1, "", "ident"], [59, 3, 1, "", "isDaemon"], [59, 3, 1, "", "is_alive"], [59, 3, 1, "", "join"], [59, 4, 1, "", "name"], [59, 4, 1, "", "native_id"], [59, 3, 1, "", "run"], [59, 3, 1, "", "setDaemon"], [59, 3, 1, "", "setName"], [59, 3, 1, "", "start"]], "aslm.model.concurrency.concurrency_tools.SharedNDArray": [[60, 5, 1, "", "ALIGNED"], [60, 5, 1, "", "BEHAVED"], [60, 5, 1, "", "CARRAY"], [60, 5, 1, "", "C_CONTIGUOUS"], [60, 5, 1, "", "FARRAY"], [60, 5, 1, "", "FNC"], [60, 5, 1, "", "FORC"], [60, 5, 1, "", "F_CONTIGUOUS"], [60, 5, 1, "", "OWNDATA"], [60, 5, 1, "", "T"], [60, 5, 1, "", "UPDATEIFCOPY"], [60, 5, 1, "", "WRITEABLE"], [60, 5, 1, "", "WRITEBACKIFCOPY"], [60, 3, 1, "", "__init__"], [60, 3, 1, "", "all"], [60, 3, 1, "", "any"], [60, 3, 1, "", "argmax"], [60, 3, 1, "", "argmin"], [60, 3, 1, "", "argpartition"], [60, 3, 1, "", "argsort"], [60, 3, 1, "", "astype"], [60, 5, 1, "", "base"], [60, 3, 1, "", "byteswap"], [60, 3, 1, "", "choose"], [60, 3, 1, "", "clip"], [60, 3, 1, "", "compress"], [60, 3, 1, "", "conj"], [60, 3, 1, "", "conjugate"], [60, 3, 1, "", "copy"], [60, 5, 1, "", "ctypes"], [60, 3, 1, "", "cumprod"], [60, 3, 1, "", "cumsum"], [60, 5, 1, "", "data"], [60, 3, 1, "", "diagonal"], [60, 5, 1, "", "dtype"], [60, 3, 1, "", "dump"], [60, 3, 1, "", "dumps"], [60, 3, 1, "", "fill"], [60, 5, 1, "", "flags"], [60, 5, 1, "", "flat"], [60, 3, 1, "", "flatten"], [60, 3, 1, "", "getfield"], [60, 5, 1, "", "imag"], [60, 3, 1, "", "item"], [60, 3, 1, "", "itemset"], [60, 5, 1, "", "itemsize"], [60, 3, 1, "", "max"], [60, 3, 1, "", "mean"], [60, 3, 1, "", "min"], [60, 5, 1, "", "nbytes"], [60, 5, 1, "", "ndim"], [60, 3, 1, "", "newbyteorder"], [60, 3, 1, "", "nonzero"], [60, 3, 1, "", "partition"], [60, 3, 1, "", "prod"], [60, 3, 1, "", "ptp"], [60, 3, 1, "", "put"], [60, 3, 1, "", "ravel"], [60, 5, 1, "", "real"], [60, 3, 1, "", "repeat"], [60, 3, 1, "", "reshape"], [60, 3, 1, "", "resize"], [60, 3, 1, "", "round"], [60, 3, 1, "", "searchsorted"], [60, 3, 1, "", "setfield"], [60, 3, 1, "", "setflags"], [60, 5, 1, "", "shape"], [60, 5, 1, "", "size"], [60, 3, 1, "", "sort"], [60, 3, 1, "", "squeeze"], [60, 3, 1, "", "std"], [60, 5, 1, "", "strides"], [60, 3, 1, "", "sum"], [60, 3, 1, "", "swapaxes"], [60, 3, 1, "", "take"], [60, 3, 1, "", "tobytes"], [60, 3, 1, "", "tofile"], [60, 3, 1, "", "tolist"], [60, 3, 1, "", "tostring"], [60, 3, 1, "", "trace"], [60, 3, 1, "", "transpose"], [60, 3, 1, "", "var"], [60, 3, 1, "", "view"]], "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess": [[61, 2, 1, "", "TestClass"], [61, 3, 1, "", "__init__"], [61, 3, 1, "", "run"], [61, 3, 1, "", "test_incorrect_thread_management"], [61, 3, 1, "", "test_lock_with_waitlist"], [61, 3, 1, "", "test_object_in_subprocess_overhead"], [61, 3, 1, "", "test_sending_shared_arrays"], [61, 3, 1, "", "time_it"]], "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread": [[62, 3, 1, "", "__init__"], [62, 3, 1, "", "run"], [62, 3, 1, "", "time_it"]], "aslm.model.concurrency.concurrency_tools.TestSharedNDArray": [[63, 3, 1, "", "__init__"], [63, 3, 1, "", "run"], [63, 3, 1, "", "test_ndarraylike_behavior"], [63, 3, 1, "", "test_serialization"], [63, 3, 1, "", "test_serializing_and_deserializing"], [63, 3, 1, "", "time_it"]], "aslm.model.concurrency.proxy_objects": [[65, 2, 1, "", "ProxyManager"], [66, 2, 1, "", "ProxyObject"], [67, 1, 1, "", "launch_custody_thread"], [68, 1, 1, "", "launch_thread"]], "aslm.model.concurrency.proxy_objects.ProxyManager": [[65, 3, 1, "", "__init__"], [65, 3, 1, "", "proxy_object"], [65, 3, 1, "", "shared_numpy_array"]], "aslm.model.concurrency.proxy_objects.ProxyObject": [[66, 3, 1, "", "__init__"]], "aslm.model.concurrency.write_parameters": [[71, 2, 1, "", "write_Params"]], "aslm.model.concurrency.write_parameters.write_Params": [[71, 3, 1, "", "__init__"]], "aslm.model.data_sources": [[73, 0, 0, "-", "bdv_data_source"], [75, 0, 0, "-", "data_source"], [77, 1, 1, "", "get_data_source"], [78, 0, 0, "-", "tiff_data_source"], [80, 0, 0, "-", "zarr_data_source"]], "aslm.model.data_sources.bdv_data_source": [[74, 2, 1, "", "BigDataViewerDataSource"]], "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource": [[74, 3, 1, "", "__init__"], [74, 3, 1, "", "close"], [74, 4, 1, "", "data"], [74, 3, 1, "", "read"], [74, 4, 1, "", "resolutions"], [74, 4, 1, "", "shape"], [74, 4, 1, "", "shapes"], [74, 4, 1, "", "subdivisions"], [74, 4, 1, "", "voxel_size"], [74, 3, 1, "", "write"]], "aslm.model.data_sources.data_source": [[76, 2, 1, "", "DataSource"]], "aslm.model.data_sources.data_source.DataSource": [[76, 3, 1, "", "__init__"], [76, 3, 1, "", "close"], [76, 4, 1, "", "data"], [76, 3, 1, "", "read"], [76, 4, 1, "", "shape"], [76, 4, 1, "", "voxel_size"], [76, 3, 1, "", "write"]], "aslm.model.data_sources.tiff_data_source": [[79, 2, 1, "", "TiffDataSource"]], "aslm.model.data_sources.tiff_data_source.TiffDataSource": [[79, 3, 1, "", "__init__"], [79, 3, 1, "", "close"], [79, 4, 1, "", "data"], [79, 3, 1, "", "generate_image_name"], [79, 3, 1, "", "read"], [79, 4, 1, "", "shape"], [79, 4, 1, "", "voxel_size"], [79, 3, 1, "", "write"]], "aslm.model.data_sources.zarr_data_source": [[81, 2, 1, "", "ZarrDataSource"]], "aslm.model.data_sources.zarr_data_source.ZarrDataSource": [[81, 3, 1, "", "__init__"], [81, 3, 1, "", "close"], [81, 3, 1, "", "copy_to_zarr"], [81, 4, 1, "", "data"], [81, 3, 1, "", "read"], [81, 4, 1, "", "shape"], [81, 4, 1, "", "voxel_size"], [81, 3, 1, "", "write"]], "aslm.model.device_startup_functions": [[83, 2, 1, "", "DummyDeviceConnection"], [84, 1, 1, "", "auto_redial"], [85, 1, 1, "", "device_not_found"], [86, 1, 1, "", "load_camera_connection"], [87, 1, 1, "", "load_devices"], [88, 1, 1, "", "load_filter_wheel_connection"], [89, 1, 1, "", "load_stages"], [90, 1, 1, "", "load_zoom_connection"], [91, 1, 1, "", "start_camera"], [92, 1, 1, "", "start_daq"], [93, 1, 1, "", "start_filter_wheel"], [94, 1, 1, "", "start_galvo"], [95, 1, 1, "", "start_lasers"], [96, 1, 1, "", "start_remote_focus_device"], [97, 1, 1, "", "start_shutter"], [98, 1, 1, "", "start_stage"], [99, 1, 1, "", "start_zoom"]], "aslm.model.device_startup_functions.DummyDeviceConnection": [[83, 3, 1, "", "__init__"]], "aslm.model.devices": [[101, 0, 0, "-", "APIs"], [106, 0, 0, "-", "camera"], [114, 0, 0, "-", "daq"], [119, 0, 0, "-", "filter_wheel"], [127, 0, 0, "-", "galvo"], [130, 0, 0, "-", "joystick"], [137, 0, 0, "-", "lasers"], [146, 0, 0, "-", "objectives"], [148, 0, 0, "-", "remote_focus"], [153, 0, 0, "-", "shutter"], [158, 0, 0, "-", "stages"], [180, 0, 0, "-", "zoom"]], "aslm.model.devices.APIs": [[102, 0, 0, "-", "coherent"], [103, 0, 0, "-", "dynamixel"], [104, 0, 0, "-", "logitech"], [105, 0, 0, "-", "omicron"]], "aslm.model.devices.camera": [[107, 0, 0, "-", "camera_base"], [109, 0, 0, "-", "camera_hamamatsu"], [111, 0, 0, "-", "camera_synthetic"]], "aslm.model.devices.camera.camera_base": [[108, 2, 1, "", "CameraBase"]], "aslm.model.devices.camera.camera_base.CameraBase": [[108, 3, 1, "", "__init__"], [108, 3, 1, "", "calculate_light_sheet_exposure_time"], [108, 3, 1, "", "set_readout_direction"]], "aslm.model.devices.camera.camera_hamamatsu": [[110, 2, 1, "", "HamamatsuOrca"]], "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca": [[110, 3, 1, "", "__init__"], [110, 3, 1, "", "calculate_light_sheet_exposure_time"], [110, 3, 1, "", "calculate_readout_time"], [110, 3, 1, "", "close_camera"], [110, 3, 1, "", "close_image_series"], [110, 3, 1, "", "get_minimum_waiting_time"], [110, 3, 1, "", "get_new_frame"], [110, 3, 1, "", "initialize_image_series"], [110, 3, 1, "", "report_settings"], [110, 4, 1, "", "serial_number"], [110, 3, 1, "", "set_ROI"], [110, 3, 1, "", "set_binning"], [110, 3, 1, "", "set_exposure_time"], [110, 3, 1, "", "set_line_interval"], [110, 3, 1, "", "set_readout_direction"], [110, 3, 1, "", "set_sensor_mode"]], "aslm.model.devices.camera.camera_synthetic": [[112, 2, 1, "", "SyntheticCamera"], [113, 2, 1, "", "SyntheticCameraController"]], "aslm.model.devices.camera.camera_synthetic.SyntheticCamera": [[112, 3, 1, "", "__init__"], [112, 3, 1, "", "calculate_light_sheet_exposure_time"], [112, 3, 1, "", "close_camera"], [112, 3, 1, "", "close_image_series"], [112, 3, 1, "", "generate_new_frame"], [112, 3, 1, "", "get_minimum_waiting_time"], [112, 3, 1, "", "get_new_frame"], [112, 3, 1, "", "initialize_image_series"], [112, 3, 1, "", "report_settings"], [112, 3, 1, "", "set_ROI"], [112, 3, 1, "", "set_binning"], [112, 3, 1, "", "set_exposure_time"], [112, 3, 1, "", "set_line_interval"], [112, 3, 1, "", "set_readout_direction"], [112, 3, 1, "", "set_sensor_mode"]], "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController": [[113, 3, 1, "", "__init__"], [113, 3, 1, "", "get_property_value"]], "aslm.model.devices.daq": [[115, 0, 0, "-", "daq_base"], [117, 0, 0, "-", "daq_synthetic"]], "aslm.model.devices.daq.daq_base": [[116, 2, 1, "", "DAQBase"]], "aslm.model.devices.daq.daq_base.DAQBase": [[116, 3, 1, "", "__init__"], [116, 3, 1, "", "calculate_all_waveforms"], [116, 5, 1, "", "configuration"]], "aslm.model.devices.daq.daq_synthetic": [[118, 2, 1, "", "SyntheticDAQ"]], "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ": [[118, 3, 1, "", "__init__"], [118, 3, 1, "", "add_camera"], [118, 3, 1, "", "calculate_all_waveforms"], [118, 3, 1, "", "close_tasks"], [118, 5, 1, "", "configuration"], [118, 3, 1, "", "create_camera_task"], [118, 3, 1, "", "create_galvo_etl_task"], [118, 3, 1, "", "create_master_trigger_task"], [118, 3, 1, "", "prepare_acquisition"], [118, 3, 1, "", "run_acquisition"], [118, 3, 1, "", "start_tasks"], [118, 3, 1, "", "stop_acquisition"], [118, 3, 1, "", "stop_tasks"], [118, 3, 1, "", "write_waveforms_to_tasks"]], "aslm.model.devices.filter_wheel": [[120, 0, 0, "-", "filter_wheel_base"], [122, 0, 0, "-", "filter_wheel_sutter"], [125, 0, 0, "-", "filter_wheel_synthetic"]], "aslm.model.devices.filter_wheel.filter_wheel_base": [[121, 2, 1, "", "FilterWheelBase"]], "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase": [[121, 3, 1, "", "__init__"], [121, 3, 1, "id0", "check_if_filter_in_filter_dictionary"], [121, 5, 1, "", "filter_dictionary"], [121, 5, 1, "", "wheel_position"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter": [[123, 2, 1, "", "SutterFilterWheel"], [124, 5, 1, "", "baudrate"], [124, 1, 1, "", "build_filter_wheel_connection"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel": [[123, 3, 1, "", "__init__"], [123, 5, 1, "", "baudrate"], [123, 3, 1, "id0", "check_if_filter_in_filter_dictionary"], [123, 3, 1, "id1", "close"], [123, 5, 1, "", "comport"], [123, 3, 1, "id2", "filter_change_delay"], [123, 5, 1, "", "filter_dictionary"], [123, 5, 1, "", "number_of_filter_wheels"], [123, 3, 1, "id3", "read"], [123, 3, 1, "", "set_filter"], [123, 5, 1, "", "wheel_position"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic": [[126, 2, 1, "", "SyntheticFilterWheel"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel": [[126, 3, 1, "", "__init__"], [126, 5, 1, "", "baudrate"], [126, 3, 1, "", "check_if_filter_in_filter_dictionary"], [126, 3, 1, "", "close"], [126, 5, 1, "", "comport"], [126, 3, 1, "", "filter_change_delay"], [126, 5, 1, "", "filter_dictionary"], [126, 5, 1, "", "number_of_filter_wheels"], [126, 3, 1, "", "read"], [126, 3, 1, "", "set_filter"], [126, 5, 1, "", "wheel_position"]], "aslm.model.devices.galvo": [[128, 0, 0, "-", "galvo_base"]], "aslm.model.devices.galvo.galvo_base": [[129, 2, 1, "", "GalvoBase"]], "aslm.model.devices.galvo.galvo_base.GalvoBase": [[129, 3, 1, "", "__init__"]], "aslm.model.devices.joystick": [[131, 0, 0, "-", "joystick_base"], [133, 0, 0, "-", "joystick_logitech"], [135, 0, 0, "-", "joystick_synthetic"]], "aslm.model.devices.joystick.joystick_base": [[132, 2, 1, "", "JoystickBase"]], "aslm.model.devices.joystick.joystick_base.JoystickBase": [[132, 3, 1, "", "__init__"]], "aslm.model.devices.joystick.joystick_logitech": [[134, 2, 1, "", "JoystickLogitech"]], "aslm.model.devices.joystick.joystick_logitech.JoystickLogitech": [[134, 3, 1, "", "__init__"], [134, 3, 1, "", "axis_handler"], [134, 5, 1, "", "cfg"], [134, 3, 1, "", "decrease_slider"], [134, 3, 1, "", "mode_handler"]], "aslm.model.devices.joystick.joystick_synthetic": [[136, 2, 1, "", "SyntheticJoystick"]], "aslm.model.devices.joystick.joystick_synthetic.SyntheticJoystick": [[136, 3, 1, "", "__init__"]], "aslm.model.devices.lasers": [[138, 0, 0, "-", "laser_base"], [140, 0, 0, "-", "laser_synthetic"], [142, 0, 0, "-", "laser_trigger_base"], [144, 0, 0, "-", "laser_trigger_synthetic"]], "aslm.model.devices.lasers.laser_base": [[139, 2, 1, "", "LaserBase"]], "aslm.model.devices.lasers.laser_base.LaserBase": [[139, 3, 1, "", "__init__"], [139, 3, 1, "", "close"], [139, 3, 1, "", "initialize_laser"]], "aslm.model.devices.lasers.laser_synthetic": [[141, 2, 1, "", "SyntheticLaser"]], "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser": [[141, 3, 1, "", "__init__"], [141, 3, 1, "", "close"], [141, 3, 1, "", "initialize_laser"]], "aslm.model.devices.lasers.laser_trigger_base": [[143, 2, 1, "", "LaserTriggerBase"]], "aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase": [[143, 3, 1, "", "__init__"], [143, 3, 1, "", "enable_high_resolution_laser"], [143, 3, 1, "", "enable_low_resolution_laser"], [143, 3, 1, "", "set_laser_analog_voltage"]], "aslm.model.devices.lasers.laser_trigger_synthetic": [[145, 2, 1, "", "SyntheticLaserTriggers"]], "aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers": [[145, 3, 1, "", "__init__"], [145, 3, 1, "", "enable_high_resolution_laser"], [145, 3, 1, "", "enable_low_resolution_laser"], [145, 3, 1, "", "set_laser_analog_voltage"]], "aslm.model.devices.objectives": [[147, 2, 1, "", "Objective"]], "aslm.model.devices.objectives.Objective": [[147, 3, 1, "", "__init__"], [147, 3, 1, "", "calculate_entrance_pupil"]], "aslm.model.devices.remote_focus": [[149, 0, 0, "-", "remote_focus_base"], [151, 0, 0, "-", "remote_focus_equipment_solutions"]], "aslm.model.devices.remote_focus.remote_focus_base": [[150, 2, 1, "", "RemoteFocusBase"]], "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase": [[150, 3, 1, "", "__init__"]], "aslm.model.devices.remote_focus.remote_focus_equipment_solutions": [[152, 2, 1, "", "RemoteFocusEquipmentSolutions"]], "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions": [[152, 3, 1, "", "__init__"], [152, 5, 1, "", "baud_rate"], [152, 5, 1, "", "byte_size"], [152, 3, 1, "id0", "close_connection"], [152, 5, 1, "", "comport"], [152, 5, 1, "", "debug"], [152, 5, 1, "", "parity"], [152, 3, 1, "id1", "read_bytes"], [152, 5, 1, "", "read_on_init"], [152, 3, 1, "id2", "send_command"], [152, 5, 1, "", "stop_bits"], [152, 5, 1, "", "timeout"]], "aslm.model.devices.shutter": [[154, 0, 0, "-", "laser_shutter_base"], [156, 0, 0, "-", "laser_shutter_synthetic"]], "aslm.model.devices.shutter.laser_shutter_base": [[155, 2, 1, "", "ShutterBase"]], "aslm.model.devices.shutter.laser_shutter_base.ShutterBase": [[155, 3, 1, "", "__init__"], [155, 5, 1, "", "configuration"], [155, 5, 1, "", "device_connection"], [155, 5, 1, "", "microscope_name"]], "aslm.model.devices.shutter.laser_shutter_synthetic": [[157, 2, 1, "", "SyntheticShutter"]], "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter": [[157, 3, 1, "", "__init__"], [157, 3, 1, "", "close_shutters"], [157, 5, 1, "", "configuration"], [157, 5, 1, "", "device_connection"], [157, 5, 1, "", "microscope_name"], [157, 3, 1, "", "open_left"], [157, 3, 1, "", "open_right"], [157, 3, 1, "", "state"]], "aslm.model.devices.stages": [[159, 0, 0, "-", "stage_asi"], [162, 0, 0, "-", "stage_base"], [164, 0, 0, "-", "stage_galvo"], [166, 0, 0, "-", "stage_mcl"], [169, 0, 0, "-", "stage_pi"], [172, 0, 0, "-", "stage_sutter"], [175, 0, 0, "-", "stage_synthetic"], [177, 0, 0, "-", "stage_tl_kcube_inertial"]], "aslm.model.devices.stages.stage_asi": [[160, 2, 1, "", "ASIStage"], [161, 1, 1, "", "build_ASI_Stage_connection"]], "aslm.model.devices.stages.stage_asi.ASIStage": [[160, 3, 1, "", "__init__"], [160, 3, 1, "", "create_internal_position_dict"], [160, 3, 1, "", "create_position_dict"], [160, 3, 1, "", "get_abs_position"], [160, 3, 1, "", "move_absolute"], [160, 3, 1, "", "move_axis_absolute"], [160, 3, 1, "", "report_position"], [160, 3, 1, "", "stop"]], "aslm.model.devices.stages.stage_base": [[163, 2, 1, "", "StageBase"]], "aslm.model.devices.stages.stage_base.StageBase": [[163, 3, 1, "", "__init__"], [163, 3, 1, "id0", "create_internal_position_dict"], [163, 3, 1, "id1", "create_position_dict"], [163, 3, 1, "", "get_abs_position"], [163, 3, 1, "", "stop"]], "aslm.model.devices.stages.stage_galvo": [[165, 2, 1, "", "GalvoNIStage"]], "aslm.model.devices.stages.stage_galvo.GalvoNIStage": [[165, 3, 1, "", "__init__"], [165, 3, 1, "", "create_internal_position_dict"], [165, 3, 1, "", "create_position_dict"], [165, 3, 1, "", "get_abs_position"], [165, 3, 1, "", "move_absolute"], [165, 3, 1, "", "move_axis_absolute"], [165, 3, 1, "", "stop"]], "aslm.model.devices.stages.stage_mcl": [[167, 2, 1, "", "MCLStage"], [168, 1, 1, "", "build_MCLStage_connection"]], "aslm.model.devices.stages.stage_mcl.MCLStage": [[167, 3, 1, "", "__init__"], [167, 3, 1, "", "create_internal_position_dict"], [167, 3, 1, "", "create_position_dict"], [167, 3, 1, "", "get_abs_position"], [167, 3, 1, "", "move_absolute"], [167, 3, 1, "", "move_axis_absolute"], [167, 3, 1, "", "report_position"], [167, 3, 1, "", "stop"]], "aslm.model.devices.stages.stage_pi": [[170, 2, 1, "", "PIStage"], [171, 1, 1, "", "build_PIStage_connection"]], "aslm.model.devices.stages.stage_pi.PIStage": [[170, 3, 1, "", "__init__"], [170, 3, 1, "", "create_internal_position_dict"], [170, 3, 1, "", "create_position_dict"], [170, 3, 1, "", "get_abs_position"], [170, 3, 1, "", "move_absolute"], [170, 3, 1, "", "move_axis_absolute"], [170, 3, 1, "", "report_position"], [170, 3, 1, "", "stop"]], "aslm.model.devices.stages.stage_sutter": [[173, 2, 1, "", "SutterStage"], [174, 5, 1, "", "baudrate"], [174, 1, 1, "", "build_sutter_stage_connection"], [174, 5, 1, "", "comport"]], "aslm.model.devices.stages.stage_sutter.SutterStage": [[173, 3, 1, "", "__init__"], [173, 5, 1, "", "baudrate"], [173, 3, 1, "", "check_byte_order"], [173, 3, 1, "id0", "close"], [173, 5, 1, "", "comport"], [173, 3, 1, "", "convert_microns_to_microsteps"], [173, 3, 1, "", "convert_microsteps_to_microns"], [173, 3, 1, "", "create_internal_position_dict"], [173, 3, 1, "", "create_position_dict"], [173, 5, 1, "", "filter_dictionary"], [173, 3, 1, "", "flush_buffers"], [173, 3, 1, "", "get_abs_position"], [173, 3, 1, "", "move_absolute"], [173, 3, 1, "", "move_axis_absolute"], [173, 3, 1, "", "read"], [173, 3, 1, "", "report_position"], [173, 3, 1, "", "set_stage_speed_and_resolution"], [173, 3, 1, "", "stop"]], "aslm.model.devices.stages.stage_synthetic": [[176, 2, 1, "", "SyntheticStage"]], "aslm.model.devices.stages.stage_synthetic.SyntheticStage": [[176, 3, 1, "", "__init__"], [176, 3, 1, "", "create_internal_position_dict"], [176, 3, 1, "", "create_position_dict"], [176, 3, 1, "", "get_abs_position"], [176, 3, 1, "", "move_absolute"], [176, 3, 1, "", "move_axis_absolute"], [176, 3, 1, "", "stop"]], "aslm.model.devices.stages.stage_tl_kcube_inertial": [[178, 2, 1, "", "TLKIMStage"], [179, 1, 1, "", "build_TLKIMStage_connection"]], "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage": [[178, 3, 1, "", "__init__"], [178, 3, 1, "", "create_internal_position_dict"], [178, 3, 1, "", "create_position_dict"], [178, 3, 1, "", "get_abs_position"], [178, 3, 1, "", "move_absolute"], [178, 3, 1, "", "move_axis_absolute"], [178, 3, 1, "", "report_position"], [178, 3, 1, "", "stop"]], "aslm.model.devices.zoom": [[181, 0, 0, "-", "zoom_base"], [183, 0, 0, "-", "zoom_synthetic"]], "aslm.model.devices.zoom.zoom_base": [[182, 2, 1, "", "ZoomBase"]], "aslm.model.devices.zoom.zoom_base.ZoomBase": [[182, 3, 1, "", "__init__"], [182, 3, 1, "", "move"], [182, 3, 1, "", "read_position"], [182, 3, 1, "", "set_zoom"]], "aslm.model.devices.zoom.zoom_synthetic": [[184, 2, 1, "", "SyntheticZoom"]], "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom": [[184, 3, 1, "", "__init__"], [184, 3, 1, "id0", "move"], [184, 3, 1, "id1", "read_position"], [184, 3, 1, "id2", "set_zoom"]], "aslm.model.dummy": [[186, 2, 1, "", "DummyDevice"], [187, 2, 1, "", "DummyModel"]], "aslm.model.dummy.DummyDevice": [[186, 3, 1, "", "__init__"]], "aslm.model.dummy.DummyModel": [[187, 3, 1, "", "__init__"]], "aslm.model.features": [[189, 0, 0, "-", "autofocus"], [191, 0, 0, "-", "common_features"], [197, 0, 0, "-", "dummy_detective"], [199, 0, 0, "-", "feature_container"], [210, 0, 0, "-", "image_writer"], [212, 0, 0, "-", "restful_features"], [215, 0, 0, "-", "volume_search"]], "aslm.model.features.autofocus": [[190, 2, 1, "", "Autofocus"]], "aslm.model.features.autofocus.Autofocus": [[190, 3, 1, "", "__init__"], [190, 3, 1, "", "get_autofocus_frame_num"], [190, 3, 1, "", "get_steps"], [190, 3, 1, "", "run"]], "aslm.model.features.common_features": [[192, 2, 1, "", "ChangeResolution"], [193, 2, 1, "", "FindTissueSimple2D"], [194, 2, 1, "", "Snap"], [195, 2, 1, "", "WaitToContinue"], [196, 2, 1, "", "ZStackAcquisition"]], "aslm.model.features.common_features.ChangeResolution": [[192, 3, 1, "", "__init__"]], "aslm.model.features.common_features.FindTissueSimple2D": [[193, 3, 1, "", "__init__"]], "aslm.model.features.common_features.Snap": [[194, 3, 1, "", "__init__"]], "aslm.model.features.common_features.WaitToContinue": [[195, 3, 1, "", "__init__"]], "aslm.model.features.common_features.ZStackAcquisition": [[196, 3, 1, "", "__init__"]], "aslm.model.features.dummy_detective": [[198, 2, 1, "", "Dummy_Detective"]], "aslm.model.features.dummy_detective.Dummy_Detective": [[198, 3, 1, "", "__init__"]], "aslm.model.features.feature_container": [[200, 2, 1, "", "Container"], [201, 2, 1, "", "DataContainer"], [202, 2, 1, "", "DataNode"], [203, 2, 1, "", "SignalContainer"], [204, 2, 1, "", "SignalNode"], [205, 2, 1, "", "TreeNode"], [206, 1, 1, "", "dummy_True"], [207, 1, 1, "", "dummy_func"], [208, 1, 1, "", "get_registered_funcs"], [209, 1, 1, "", "load_features"]], "aslm.model.features.feature_container.Container": [[200, 3, 1, "", "__init__"]], "aslm.model.features.feature_container.DataContainer": [[201, 3, 1, "", "__init__"]], "aslm.model.features.feature_container.DataNode": [[202, 3, 1, "", "__init__"]], "aslm.model.features.feature_container.SignalContainer": [[203, 3, 1, "", "__init__"]], "aslm.model.features.feature_container.SignalNode": [[204, 3, 1, "", "__init__"]], "aslm.model.features.feature_container.TreeNode": [[205, 3, 1, "", "__init__"]], "aslm.model.features.image_writer": [[211, 2, 1, "", "ImageWriter"]], "aslm.model.features.image_writer.ImageWriter": [[211, 3, 1, "", "__init__"], [211, 3, 1, "", "close"], [211, 3, 1, "", "generate_image_name"], [211, 3, 1, "", "save_image"]], "aslm.model.features.restful_features": [[213, 2, 1, "", "IlastikSegmentation"], [214, 1, 1, "", "prepare_service"]], "aslm.model.features.restful_features.IlastikSegmentation": [[213, 3, 1, "", "__init__"]], "aslm.model.features.volume_search": [[216, 2, 1, "", "VolumeSearch"]], "aslm.model.features.volume_search.VolumeSearch": [[216, 3, 1, "", "__init__"]], "aslm.model.metadata_sources": [[218, 0, 0, "-", "bdv_metadata"], [220, 0, 0, "-", "metadata"], [223, 0, 0, "-", "ome_tiff_metadata"]], "aslm.model.metadata_sources.bdv_metadata": [[219, 2, 1, "", "BigDataViewerMetadata"]], "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata": [[219, 3, 1, "", "__init__"], [219, 3, 1, "", "parse_bdv_xml"], [219, 4, 1, "", "shape"], [219, 3, 1, "", "stage_positions_to_affine_matrix"], [219, 3, 1, "", "to_xml"], [219, 4, 1, "", "voxel_size"], [219, 3, 1, "", "write_xml"]], "aslm.model.metadata_sources.metadata": [[221, 2, 1, "", "Metadata"], [222, 2, 1, "", "XMLMetadata"]], "aslm.model.metadata_sources.metadata.Metadata": [[221, 3, 1, "", "__init__"], [221, 4, 1, "", "shape"], [221, 4, 1, "", "voxel_size"]], "aslm.model.metadata_sources.metadata.XMLMetadata": [[222, 3, 1, "", "__init__"], [222, 4, 1, "", "shape"], [222, 3, 1, "", "to_xml"], [222, 4, 1, "", "voxel_size"], [222, 3, 1, "", "write_xml"]], "aslm.model.metadata_sources.ome_tiff_metadata": [[224, 2, 1, "", "OMETIFFMetadata"]], "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata": [[224, 3, 1, "", "__init__"], [224, 3, 1, "", "ome_tiff_xml_dict"], [224, 4, 1, "", "shape"], [224, 3, 1, "", "to_xml"], [224, 4, 1, "", "voxel_size"], [224, 3, 1, "", "write_xml"]], "aslm.model.microscope": [[226, 2, 1, "", "Microscope"]], "aslm.model.microscope.Microscope": [[226, 3, 1, "", "__init__"], [226, 3, 1, "", "get_readout_time"]], "aslm.model.model": [[228, 2, 1, "", "Model"]], "aslm.model.model.Model": [[228, 5, 1, "", "USE_GPU"], [228, 3, 1, "", "__init__"], [228, 5, 1, "", "args"], [228, 3, 1, "", "change_resolution"], [228, 5, 1, "", "configuration_path"], [228, 3, 1, "id0", "create_pipe"], [228, 3, 1, "id1", "end_acquisition"], [228, 5, 1, "", "event_queue"], [228, 5, 1, "", "experiment_path"], [228, 3, 1, "id2", "get_data_buffer"], [228, 3, 1, "", "get_readout_time"], [228, 3, 1, "", "get_stage_position"], [228, 3, 1, "", "load_images"], [228, 3, 1, "id3", "move_stage"], [228, 3, 1, "id4", "prepare_acquisition"], [228, 3, 1, "id5", "release_pipe"], [228, 3, 1, "", "run_acquisition"], [228, 3, 1, "id6", "run_command"], [228, 3, 1, "id7", "run_data_process"], [228, 3, 1, "id8", "run_live_acquisition"], [228, 3, 1, "id9", "run_single_acquisition"], [228, 3, 1, "id10", "run_single_channel_acquisition"], [228, 3, 1, "id11", "run_single_channel_acquisition_with_features"], [228, 3, 1, "", "run_z_stack_acquisition"], [228, 3, 1, "id12", "snap_image"], [228, 3, 1, "", "stop_stage"], [228, 3, 1, "id13", "update_data_buffer"]], "aslm.model.waveforms": [[230, 1, 1, "", "camera_exposure"], [231, 1, 1, "", "dc_value"], [232, 1, 1, "", "sawtooth"], [233, 1, 1, "", "sine_wave"], [234, 1, 1, "", "single_pulse"], [235, 1, 1, "", "smooth_waveform"], [236, 1, 1, "", "square"], [237, 1, 1, "", "tunable_lens_ramp"]], "aslm.tools": [[239, 0, 0, "-", "beams"], [243, 0, 0, "-", "common_dict_tools"], [246, 0, 0, "-", "common_functions"], [250, 0, 0, "-", "decorators"], [252, 0, 0, "-", "file_functions"], [255, 0, 0, "-", "image"], [257, 0, 0, "-", "image_loaders"], [259, 0, 0, "-", "multipos_table_tools"], [264, 0, 0, "-", "project_stats"], [266, 0, 0, "-", "xml_tools"]], "aslm.tools.beams": [[240, 1, 1, "", "fit_gaussian_beam_error"], [241, 1, 1, "", "fit_gaussian_beam_mse"], [242, 1, 1, "", "gaussian_beam"]], "aslm.tools.common_dict_tools": [[244, 1, 1, "", "update_settings_common"], [245, 1, 1, "", "update_stage_dict"]], "aslm.tools.common_functions": [[247, 1, 1, "", "build_ref_name"], [248, 1, 1, "", "combine_funcs"], [249, 1, 1, "", "copy_proxy_object"]], "aslm.tools.decorators": [[251, 1, 1, "", "function_timer"]], "aslm.tools.file_functions": [[253, 1, 1, "", "create_save_path"], [254, 1, 1, "", "save_yaml_file"]], "aslm.tools.image": [[256, 1, 1, "", "text_array"]], "aslm.tools.image_loaders": [[258, 2, 1, "", "LazyTiff"]], "aslm.tools.image_loaders.LazyTiff": [[258, 3, 1, "", "__init__"]], "aslm.tools.multipos_table_tools": [[260, 1, 1, "", "calc_num_tiles"], [261, 1, 1, "", "compute_tiles_from_bounding_box"], [262, 1, 1, "", "sign"], [263, 1, 1, "", "update_table"]], "aslm.tools.project_stats": [[265, 1, 1, "", "countlines"]], "aslm.tools.xml_tools": [[267, 1, 1, "", "dict_to_xml"], [268, 1, 1, "", "parse_xml"]], "aslm.view": [[270, 0, 0, "-", "main_window_content"], [276, 0, 0, "-", "menus"]], "aslm.view.main_window_content": [[271, 0, 0, "-", "acquire_bar_frame"], [272, 0, 0, "-", "channel_settings"], [274, 0, 0, "-", "stage_control"]], "aslm.view.main_window_content.channel_settings": [[273, 0, 0, "-", "channel_settings_frames"]], "aslm.view.main_window_content.stage_control": [[275, 0, 0, "-", "stage_control_frames"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:property", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"aslm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 280, 282, 283, 285, 286], "config": [0, 1, 2, 3, 4, 5], "build_nested_dict": 2, "get_configuration_path": 3, "load_config": 4, "update_config_dict": 5, "control": [6, 7, 8, 9, 10, 11, 12], "configuration_control": [7, 8], "configurationcontrol": 8, "thread_pool": [9, 10, 11, 12], "selflockthread": 10, "synchronizedthreadpool": 11, "threadwaitlist": 12, "model": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237], "analysi": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "boundary_detect": [15, 16, 17, 18, 19], "binary_detect": 16, "find_tissue_boundary_2d": 17, "has_tissu": 18, "map_boundari": 19, "detect": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "add_median_bord": 21, "combine_imag": 22, "log_detect": 23, "make_inside_imag": 24, "make_normalized_imag": 25, "make_sphere_3d": 26, "multiscale_surface_filter_3d": 27, "surface_filter_gauss_3d": 28, "three_level_segment": 29, "image_contrast": [30, 31, 32, 33, 34, 35], "estimate_and_correct_flatfield": 31, "estimate_image_resolut": 32, "fast_normalized_dct_shannon_entropi": 33, "image_intens": 34, "normalized_dct_shannon_entropi": 35, "image_decorrel": [36, 37, 38, 39, 40, 41, 42, 43, 44], "apodize_imag": 37, "get_correlation_coeffici": 38, "get_decorrelation_local_maxima": 39, "get_image_decorrel": 40, "get_radial_averag": 41, "image_to_polar": 42, "linear_map": 43, "main_image_decorr": 44, "image_transform": [45, 46, 47], "deskew_imag": 46, "initiate_gpu": 47, "noise_model": [48, 49], "compute_noise_sigma": 49, "spectral_unmix": [50, 51], "to_do": 51, "concurr": [52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "concurrency_tool": [53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "custodythread": 54, "fancythread": 55, "mytestclass": 56, "objectinsubprocess": 57, "politethread": 58, "resultthread": 59, "sharedndarrai": 60, "testobjectinsubprocess": 61, "testresultthreadandcustodythread": 62, "testsharedndarrai": 63, "proxy_object": [64, 65, 66, 67, 68], "proxymanag": 65, "proxyobject": 66, "launch_custody_thread": 67, "launch_thread": 68, "shared_memori": 69, "write_paramet": [70, 71], "write_param": 71, "data_sourc": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "bdv_data_sourc": [73, 74], "bigdataviewerdatasourc": 74, "datasourc": 76, "get_data_sourc": 77, "tiff_data_sourc": [78, 79], "tiffdatasourc": 79, "zarr_data_sourc": [80, 81], "zarrdatasourc": 81, "device_startup_funct": [82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99], "dummydeviceconnect": 83, "auto_redi": 84, "device_not_found": 85, "load_camera_connect": 86, "load_devic": 87, "load_filter_wheel_connect": 88, "load_stag": 89, "load_zoom_connect": 90, "start_camera": 91, "start_daq": 92, "start_filter_wheel": 93, "start_galvo": 94, "start_las": 95, "start_remote_focus_devic": 96, "start_shutt": 97, "start_stag": 98, "start_zoom": 99, "devic": [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184], "api": [101, 102, 103, 104, 105, 279], "coher": 102, "dynamixel": 103, "logitech": 104, "omicron": 105, "camera": [106, 107, 108, 109, 110, 111, 112, 113], "camera_bas": [107, 108], "camerabas": 108, "camera_hamamatsu": [109, 110], "hamamatsuorca": 110, "camera_synthet": [111, 112, 113], "syntheticcamera": 112, "syntheticcameracontrol": 113, "daq": [114, 115, 116, 117, 118], "daq_bas": [115, 116], "daqbas": 116, "daq_synthet": [117, 118], "syntheticdaq": 118, "filter_wheel": [119, 120, 121, 122, 123, 124, 125, 126], "filter_wheel_bas": [120, 121], "filterwheelbas": 121, "filter_wheel_sutt": [122, 123, 124], "sutterfilterwheel": 123, "build_filter_wheel_connect": 124, "filter_wheel_synthet": [125, 126], "syntheticfilterwheel": 126, "galvo": [127, 128, 129], "galvo_bas": [128, 129], "galvobas": 129, "joystick": [130, 131, 132, 133, 134, 135, 136], "joystick_bas": [131, 132], "joystickbas": 132, "joystick_logitech": [133, 134], "joysticklogitech": 134, "joystick_synthet": [135, 136], "syntheticjoystick": 136, "laser": [137, 138, 139, 140, 141, 142, 143, 144, 145], "laser_bas": [138, 139], "laserbas": 139, "laser_synthet": [140, 141], "syntheticlas": 141, "laser_trigger_bas": [142, 143], "lasertriggerbas": 143, "laser_trigger_synthet": [144, 145], "syntheticlasertrigg": 145, "object": [146, 147, 282], "remote_focu": [148, 149, 150, 151, 152], "remote_focus_bas": [149, 150], "remotefocusbas": 150, "remote_focus_equipment_solut": [151, 152], "remotefocusequipmentsolut": 152, "shutter": [153, 154, 155, 156, 157], "laser_shutter_bas": [154, 155], "shutterbas": 155, "laser_shutter_synthet": [156, 157], "syntheticshutt": 157, "stage": [158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], "stage_asi": [159, 160, 161], "asistag": 160, "build_asi_stage_connect": 161, "stage_bas": [162, 163], "stagebas": 163, "stage_galvo": [164, 165], "galvonistag": 165, "stage_mcl": [166, 167, 168], "mclstage": 167, "build_mclstage_connect": 168, "stage_pi": [169, 170, 171], "pistag": 170, "build_pistage_connect": 171, "stage_sutt": [172, 173, 174], "sutterstag": 173, "build_sutter_stage_connect": 174, "stage_synthet": [175, 176], "syntheticstag": 176, "stage_tl_kcube_inerti": [177, 178, 179], "tlkimstag": 178, "build_tlkimstage_connect": 179, "zoom": [180, 181, 182, 183, 184], "zoom_bas": [181, 182], "zoombas": 182, "zoom_synthet": [183, 184], "syntheticzoom": 184, "dummi": [185, 186, 187], "dummydevic": 186, "dummymodel": 187, "featur": [188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 282], "autofocu": [189, 190], "common_featur": [191, 192, 193, 194, 195, 196], "changeresolut": 192, "findtissuesimple2d": 193, "snap": 194, "waittocontinu": 195, "zstackacquisit": 196, "dummy_detect": [197, 198], "feature_contain": [199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209], "contain": [200, 282], "datacontain": 201, "datanod": 202, "signalcontain": 203, "signalnod": 204, "treenod": 205, "dummy_tru": 206, "dummy_func": 207, "get_registered_func": 208, "load_featur": 209, "image_writ": [210, 211], "imagewrit": 211, "restful_featur": [212, 213, 214], "ilastiksegment": 213, "prepare_servic": 214, "volume_search": [215, 216], "volumesearch": 216, "metadata_sourc": [217, 218, 219, 220, 221, 222, 223, 224], "bdv_metadata": [218, 219], "bigdataviewermetadata": 219, "metadata": [220, 221, 222], "xmlmetadata": 222, "ome_tiff_metadata": [223, 224], "ometiffmetadata": 224, "microscop": [225, 226, 280, 285], "waveform": [229, 230, 231, 232, 233, 234, 235, 236, 237], "camera_exposur": 230, "dc_valu": 231, "sawtooth": 232, "sine_wav": 233, "single_puls": 234, "smooth_waveform": 235, "squar": 236, "tunable_lens_ramp": 237, "tool": [238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268], "beam": [239, 240, 241, 242], "fit_gaussian_beam_error": 240, "fit_gaussian_beam_ms": 241, "gaussian_beam": 242, "common_dict_tool": [243, 244, 245], "update_settings_common": 244, "update_stage_dict": 245, "common_funct": [246, 247, 248, 249], "build_ref_nam": 247, "combine_func": 248, "copy_proxy_object": 249, "decor": [250, 251], "function_tim": 251, "file_funct": [252, 253, 254], "create_save_path": 253, "save_yaml_fil": 254, "imag": [255, 256], "text_arrai": 256, "image_load": [257, 258], "lazytiff": 258, "multipos_table_tool": [259, 260, 261, 262, 263], "calc_num_til": 260, "compute_tiles_from_bounding_box": 261, "sign": 262, "update_t": 263, "project_stat": [264, 265], "countlin": 265, "xml_tool": [266, 267, 268], "dict_to_xml": 267, "parse_xml": 268, "view": [269, 270, 271, 272, 273, 274, 275, 276], "main_window_cont": [270, 271, 272, 273, 274, 275], "acquire_bar_fram": 271, "channel_set": [272, 273], "channel_settings_fram": 273, "stage_control": [274, 275], "stage_control_fram": 275, "menu": 276, "refer": 279, "configur": [280, 284], "yaml": 280, "hardwar": [280, 284], "section": 280, "gui": 280, "contribut": 281, "guidelin": 281, "gener": 281, "principl": 281, "code": 281, "style": 281, "unit": 281, "test": 281, "The": 282, "write": 282, "custom": 282, "extend": 283, "setup": 284, "data": 284, "acquisit": 284, "card": 284, "file": 284, "direct": 284, "implement": 285, "multiscal": 285, "upright": 285, "ct": 285, "v2": 285, "opm": 285, "python": 286, "packag": 286, "content": 286, "index": 286, "search": 286, "softwar": 287, "instal": 287, "gpu": 287, "depend": 287, "troubleshoot": 287, "user": 288, "guid": 288}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"aslm.config": [[0, "module-aslm.config"]], "aslm.config.config": [[1, "module-aslm.config.config"]], "aslm.config.config.build_nested_dict": [[2, "aslm-config-config-build-nested-dict"]], "aslm.config.config.get_configuration_paths": [[3, "aslm-config-config-get-configuration-paths"]], "aslm.config.config.load_configs": [[4, "aslm-config-config-load-configs"]], "aslm.config.config.update_config_dict": [[5, "aslm-config-config-update-config-dict"]], "aslm.controller": [[6, "module-aslm.controller"]], "aslm.controller.configuration_controller": [[7, "module-aslm.controller.configuration_controller"]], "aslm.controller.configuration_controller.ConfigurationController": [[8, "aslm-controller-configuration-controller-configurationcontroller"]], "aslm.controller.thread_pool": [[9, "module-aslm.controller.thread_pool"]], "aslm.controller.thread_pool.SelfLockThread": [[10, "aslm-controller-thread-pool-selflockthread"]], "aslm.controller.thread_pool.SynchronizedThreadPool": [[11, "aslm-controller-thread-pool-synchronizedthreadpool"]], "aslm.controller.thread_pool.ThreadWaitlist": [[12, "aslm-controller-thread-pool-threadwaitlist"]], "aslm.model": [[13, "module-aslm.model"]], "aslm.model.analysis": [[14, "module-aslm.model.analysis"]], "aslm.model.analysis.boundary_detect": [[15, "module-aslm.model.analysis.boundary_detect"]], "aslm.model.analysis.boundary_detect.binary_detect": [[16, "aslm-model-analysis-boundary-detect-binary-detect"]], "aslm.model.analysis.boundary_detect.find_tissue_boundary_2d": [[17, "aslm-model-analysis-boundary-detect-find-tissue-boundary-2d"]], "aslm.model.analysis.boundary_detect.has_tissue": [[18, "aslm-model-analysis-boundary-detect-has-tissue"]], "aslm.model.analysis.boundary_detect.map_boundary": [[19, "aslm-model-analysis-boundary-detect-map-boundary"]], "aslm.model.analysis.detection": [[20, "module-aslm.model.analysis.detection"]], "aslm.model.analysis.detection.add_median_border": [[21, "aslm-model-analysis-detection-add-median-border"]], "aslm.model.analysis.detection.combine_images": [[22, "aslm-model-analysis-detection-combine-images"]], "aslm.model.analysis.detection.log_detection": [[23, "aslm-model-analysis-detection-log-detection"]], "aslm.model.analysis.detection.make_inside_image": [[24, "aslm-model-analysis-detection-make-inside-image"]], "aslm.model.analysis.detection.make_normalized_image": [[25, "aslm-model-analysis-detection-make-normalized-image"]], "aslm.model.analysis.detection.make_sphere_3D": [[26, "aslm-model-analysis-detection-make-sphere-3d"]], "aslm.model.analysis.detection.multiscale_surface_filter_3D": [[27, "aslm-model-analysis-detection-multiscale-surface-filter-3d"]], "aslm.model.analysis.detection.surface_filter_gauss_3D": [[28, "aslm-model-analysis-detection-surface-filter-gauss-3d"]], "aslm.model.analysis.detection.three_level_segmentation": [[29, "aslm-model-analysis-detection-three-level-segmentation"]], "aslm.model.analysis.image_contrast": [[30, "module-aslm.model.analysis.image_contrast"]], "aslm.model.analysis.image_contrast.estimate_and_correct_flatfield": [[31, "aslm-model-analysis-image-contrast-estimate-and-correct-flatfield"]], "aslm.model.analysis.image_contrast.estimate_image_resolution": [[32, "aslm-model-analysis-image-contrast-estimate-image-resolution"]], "aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy": [[33, "aslm-model-analysis-image-contrast-fast-normalized-dct-shannon-entropy"]], "aslm.model.analysis.image_contrast.image_intensity": [[34, "aslm-model-analysis-image-contrast-image-intensity"]], "aslm.model.analysis.image_contrast.normalized_dct_shannon_entropy": [[35, "aslm-model-analysis-image-contrast-normalized-dct-shannon-entropy"]], "aslm.model.analysis.image_decorrelation": [[36, "module-aslm.model.analysis.image_decorrelation"]], "aslm.model.analysis.image_decorrelation.apodize_image": [[37, "aslm-model-analysis-image-decorrelation-apodize-image"]], "aslm.model.analysis.image_decorrelation.get_correlation_coefficient": [[38, "aslm-model-analysis-image-decorrelation-get-correlation-coefficient"]], "aslm.model.analysis.image_decorrelation.get_decorrelation_local_maxima": [[39, "aslm-model-analysis-image-decorrelation-get-decorrelation-local-maxima"]], "aslm.model.analysis.image_decorrelation.get_image_decorrelation": [[40, "aslm-model-analysis-image-decorrelation-get-image-decorrelation"]], "aslm.model.analysis.image_decorrelation.get_radial_average": [[41, "aslm-model-analysis-image-decorrelation-get-radial-average"]], "aslm.model.analysis.image_decorrelation.image_to_polar": [[42, "aslm-model-analysis-image-decorrelation-image-to-polar"]], "aslm.model.analysis.image_decorrelation.linear_map": [[43, "aslm-model-analysis-image-decorrelation-linear-map"]], "aslm.model.analysis.image_decorrelation.main_image_decorr": [[44, "aslm-model-analysis-image-decorrelation-main-image-decorr"]], "aslm.model.analysis.image_transform": [[45, "module-aslm.model.analysis.image_transform"]], "aslm.model.analysis.image_transform.deskew_image": [[46, "aslm-model-analysis-image-transform-deskew-image"]], "aslm.model.analysis.image_transform.initiate_gpu": [[47, "aslm-model-analysis-image-transform-initiate-gpu"]], "aslm.model.analysis.noise_model": [[48, "module-aslm.model.analysis.noise_model"]], "aslm.model.analysis.noise_model.compute_noise_sigma": [[49, "aslm-model-analysis-noise-model-compute-noise-sigma"]], "aslm.model.analysis.spectral_unmixing": [[50, "module-aslm.model.analysis.spectral_unmixing"]], "aslm.model.analysis.spectral_unmixing.to_do": [[51, "aslm-model-analysis-spectral-unmixing-to-do"]], "aslm.model.concurrency": [[52, "module-aslm.model.concurrency"]], "aslm.model.concurrency.concurrency_tools": [[53, "module-aslm.model.concurrency.concurrency_tools"]], "aslm.model.concurrency.concurrency_tools.CustodyThread": [[54, "aslm-model-concurrency-concurrency-tools-custodythread"]], "aslm.model.concurrency.concurrency_tools.FancyThread": [[55, "aslm-model-concurrency-concurrency-tools-fancythread"]], "aslm.model.concurrency.concurrency_tools.MyTestClass": [[56, "aslm-model-concurrency-concurrency-tools-mytestclass"]], "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess": [[57, "aslm-model-concurrency-concurrency-tools-objectinsubprocess"]], "aslm.model.concurrency.concurrency_tools.PoliteThread": [[58, "aslm-model-concurrency-concurrency-tools-politethread"]], "aslm.model.concurrency.concurrency_tools.ResultThread": [[59, "aslm-model-concurrency-concurrency-tools-resultthread"]], "aslm.model.concurrency.concurrency_tools.SharedNDArray": [[60, "aslm-model-concurrency-concurrency-tools-sharedndarray"]], "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess": [[61, "aslm-model-concurrency-concurrency-tools-testobjectinsubprocess"]], "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread": [[62, "aslm-model-concurrency-concurrency-tools-testresultthreadandcustodythread"]], "aslm.model.concurrency.concurrency_tools.TestSharedNDArray": [[63, "aslm-model-concurrency-concurrency-tools-testsharedndarray"]], "aslm.model.concurrency.proxy_objects": [[64, "module-aslm.model.concurrency.proxy_objects"]], "aslm.model.concurrency.proxy_objects.ProxyManager": [[65, "aslm-model-concurrency-proxy-objects-proxymanager"]], "aslm.model.concurrency.proxy_objects.ProxyObject": [[66, "aslm-model-concurrency-proxy-objects-proxyobject"]], "aslm.model.concurrency.proxy_objects.launch_custody_thread": [[67, "aslm-model-concurrency-proxy-objects-launch-custody-thread"]], "aslm.model.concurrency.proxy_objects.launch_thread": [[68, "aslm-model-concurrency-proxy-objects-launch-thread"]], "aslm.model.concurrency.shared_memory": [[69, "module-aslm.model.concurrency.shared_memory"]], "aslm.model.concurrency.write_parameters": [[70, "module-aslm.model.concurrency.write_parameters"]], "aslm.model.concurrency.write_parameters.write_Params": [[71, "aslm-model-concurrency-write-parameters-write-params"]], "aslm.model.data_sources": [[72, "module-aslm.model.data_sources"]], "aslm.model.data_sources.bdv_data_source": [[73, "module-aslm.model.data_sources.bdv_data_source"]], "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource": [[74, "aslm-model-data-sources-bdv-data-source-bigdataviewerdatasource"]], "aslm.model.data_sources.data_source": [[75, "module-aslm.model.data_sources.data_source"]], "aslm.model.data_sources.data_source.DataSource": [[76, "aslm-model-data-sources-data-source-datasource"]], "aslm.model.data_sources.get_data_source": [[77, "aslm-model-data-sources-get-data-source"]], "aslm.model.data_sources.tiff_data_source": [[78, "module-aslm.model.data_sources.tiff_data_source"]], "aslm.model.data_sources.tiff_data_source.TiffDataSource": [[79, "aslm-model-data-sources-tiff-data-source-tiffdatasource"]], "aslm.model.data_sources.zarr_data_source": [[80, "module-aslm.model.data_sources.zarr_data_source"]], "aslm.model.data_sources.zarr_data_source.ZarrDataSource": [[81, "aslm-model-data-sources-zarr-data-source-zarrdatasource"]], "aslm.model.device_startup_functions": [[82, "module-aslm.model.device_startup_functions"]], "aslm.model.device_startup_functions.DummyDeviceConnection": [[83, "aslm-model-device-startup-functions-dummydeviceconnection"]], "aslm.model.device_startup_functions.auto_redial": [[84, "aslm-model-device-startup-functions-auto-redial"]], "aslm.model.device_startup_functions.device_not_found": [[85, "aslm-model-device-startup-functions-device-not-found"]], "aslm.model.device_startup_functions.load_camera_connection": [[86, "aslm-model-device-startup-functions-load-camera-connection"]], "aslm.model.device_startup_functions.load_devices": [[87, "aslm-model-device-startup-functions-load-devices"]], "aslm.model.device_startup_functions.load_filter_wheel_connection": [[88, "aslm-model-device-startup-functions-load-filter-wheel-connection"]], "aslm.model.device_startup_functions.load_stages": [[89, "aslm-model-device-startup-functions-load-stages"]], "aslm.model.device_startup_functions.load_zoom_connection": [[90, "aslm-model-device-startup-functions-load-zoom-connection"]], "aslm.model.device_startup_functions.start_camera": [[91, "aslm-model-device-startup-functions-start-camera"]], "aslm.model.device_startup_functions.start_daq": [[92, "aslm-model-device-startup-functions-start-daq"]], "aslm.model.device_startup_functions.start_filter_wheel": [[93, "aslm-model-device-startup-functions-start-filter-wheel"]], "aslm.model.device_startup_functions.start_galvo": [[94, "aslm-model-device-startup-functions-start-galvo"]], "aslm.model.device_startup_functions.start_lasers": [[95, "aslm-model-device-startup-functions-start-lasers"]], "aslm.model.device_startup_functions.start_remote_focus_device": [[96, "aslm-model-device-startup-functions-start-remote-focus-device"]], "aslm.model.device_startup_functions.start_shutter": [[97, "aslm-model-device-startup-functions-start-shutter"]], "aslm.model.device_startup_functions.start_stage": [[98, "aslm-model-device-startup-functions-start-stage"]], "aslm.model.device_startup_functions.start_zoom": [[99, "aslm-model-device-startup-functions-start-zoom"]], "aslm.model.devices": [[100, "module-aslm.model.devices"]], "aslm.model.devices.APIs": [[101, "module-aslm.model.devices.APIs"]], "aslm.model.devices.APIs.coherent": [[102, "module-aslm.model.devices.APIs.coherent"]], "aslm.model.devices.APIs.dynamixel": [[103, "module-aslm.model.devices.APIs.dynamixel"]], "aslm.model.devices.APIs.logitech": [[104, "module-aslm.model.devices.APIs.logitech"]], "aslm.model.devices.APIs.omicron": [[105, "module-aslm.model.devices.APIs.omicron"]], "aslm.model.devices.camera": [[106, "module-aslm.model.devices.camera"]], "aslm.model.devices.camera.camera_base": [[107, "module-aslm.model.devices.camera.camera_base"]], "aslm.model.devices.camera.camera_base.CameraBase": [[108, "aslm-model-devices-camera-camera-base-camerabase"]], "aslm.model.devices.camera.camera_hamamatsu": [[109, "module-aslm.model.devices.camera.camera_hamamatsu"]], "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca": [[110, "aslm-model-devices-camera-camera-hamamatsu-hamamatsuorca"]], "aslm.model.devices.camera.camera_synthetic": [[111, "module-aslm.model.devices.camera.camera_synthetic"]], "aslm.model.devices.camera.camera_synthetic.SyntheticCamera": [[112, "aslm-model-devices-camera-camera-synthetic-syntheticcamera"]], "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController": [[113, "aslm-model-devices-camera-camera-synthetic-syntheticcameracontroller"]], "aslm.model.devices.daq": [[114, "module-aslm.model.devices.daq"]], "aslm.model.devices.daq.daq_base": [[115, "module-aslm.model.devices.daq.daq_base"]], "aslm.model.devices.daq.daq_base.DAQBase": [[116, "aslm-model-devices-daq-daq-base-daqbase"]], "aslm.model.devices.daq.daq_synthetic": [[117, "module-aslm.model.devices.daq.daq_synthetic"]], "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ": [[118, "aslm-model-devices-daq-daq-synthetic-syntheticdaq"]], "aslm.model.devices.filter_wheel": [[119, "module-aslm.model.devices.filter_wheel"]], "aslm.model.devices.filter_wheel.filter_wheel_base": [[120, "module-aslm.model.devices.filter_wheel.filter_wheel_base"]], "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase": [[121, "aslm-model-devices-filter-wheel-filter-wheel-base-filterwheelbase"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter": [[122, "module-aslm.model.devices.filter_wheel.filter_wheel_sutter"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel": [[123, "aslm-model-devices-filter-wheel-filter-wheel-sutter-sutterfilterwheel"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection": [[124, "aslm-model-devices-filter-wheel-filter-wheel-sutter-build-filter-wheel-connection"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic": [[125, "module-aslm.model.devices.filter_wheel.filter_wheel_synthetic"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel": [[126, "aslm-model-devices-filter-wheel-filter-wheel-synthetic-syntheticfilterwheel"]], "aslm.model.devices.galvo": [[127, "module-aslm.model.devices.galvo"]], "aslm.model.devices.galvo.galvo_base": [[128, "module-aslm.model.devices.galvo.galvo_base"]], "aslm.model.devices.galvo.galvo_base.GalvoBase": [[129, "aslm-model-devices-galvo-galvo-base-galvobase"]], "aslm.model.devices.joystick": [[130, "module-aslm.model.devices.joystick"]], "aslm.model.devices.joystick.joystick_base": [[131, "module-aslm.model.devices.joystick.joystick_base"]], "aslm.model.devices.joystick.joystick_base.JoystickBase": [[132, "aslm-model-devices-joystick-joystick-base-joystickbase"]], "aslm.model.devices.joystick.joystick_logitech": [[133, "module-aslm.model.devices.joystick.joystick_logitech"]], "aslm.model.devices.joystick.joystick_logitech.JoystickLogitech": [[134, "aslm-model-devices-joystick-joystick-logitech-joysticklogitech"]], "aslm.model.devices.joystick.joystick_synthetic": [[135, "module-aslm.model.devices.joystick.joystick_synthetic"]], "aslm.model.devices.joystick.joystick_synthetic.SyntheticJoystick": [[136, "aslm-model-devices-joystick-joystick-synthetic-syntheticjoystick"]], "aslm.model.devices.lasers": [[137, "module-aslm.model.devices.lasers"]], "aslm.model.devices.lasers.laser_base": [[138, "module-aslm.model.devices.lasers.laser_base"]], "aslm.model.devices.lasers.laser_base.LaserBase": [[139, "aslm-model-devices-lasers-laser-base-laserbase"]], "aslm.model.devices.lasers.laser_synthetic": [[140, "module-aslm.model.devices.lasers.laser_synthetic"]], "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser": [[141, "aslm-model-devices-lasers-laser-synthetic-syntheticlaser"]], "aslm.model.devices.lasers.laser_trigger_base": [[142, "module-aslm.model.devices.lasers.laser_trigger_base"]], "aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase": [[143, "aslm-model-devices-lasers-laser-trigger-base-lasertriggerbase"]], "aslm.model.devices.lasers.laser_trigger_synthetic": [[144, "module-aslm.model.devices.lasers.laser_trigger_synthetic"]], "aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers": [[145, "aslm-model-devices-lasers-laser-trigger-synthetic-syntheticlasertriggers"]], "aslm.model.devices.objectives": [[146, "module-aslm.model.devices.objectives"]], "aslm.model.devices.objectives.Objective": [[147, "aslm-model-devices-objectives-objective"]], "aslm.model.devices.remote_focus": [[148, "module-aslm.model.devices.remote_focus"]], "aslm.model.devices.remote_focus.remote_focus_base": [[149, "module-aslm.model.devices.remote_focus.remote_focus_base"]], "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase": [[150, "aslm-model-devices-remote-focus-remote-focus-base-remotefocusbase"]], "aslm.model.devices.remote_focus.remote_focus_equipment_solutions": [[151, "module-aslm.model.devices.remote_focus.remote_focus_equipment_solutions"]], "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions": [[152, "aslm-model-devices-remote-focus-remote-focus-equipment-solutions-remotefocusequipmentsolutions"]], "aslm.model.devices.shutter": [[153, "module-aslm.model.devices.shutter"]], "aslm.model.devices.shutter.laser_shutter_base": [[154, "module-aslm.model.devices.shutter.laser_shutter_base"]], "aslm.model.devices.shutter.laser_shutter_base.ShutterBase": [[155, "aslm-model-devices-shutter-laser-shutter-base-shutterbase"]], "aslm.model.devices.shutter.laser_shutter_synthetic": [[156, "module-aslm.model.devices.shutter.laser_shutter_synthetic"]], "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter": [[157, "aslm-model-devices-shutter-laser-shutter-synthetic-syntheticshutter"]], "aslm.model.devices.stages": [[158, "module-aslm.model.devices.stages"]], "aslm.model.devices.stages.stage_asi": [[159, "module-aslm.model.devices.stages.stage_asi"]], "aslm.model.devices.stages.stage_asi.ASIStage": [[160, "aslm-model-devices-stages-stage-asi-asistage"]], "aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection": [[161, "aslm-model-devices-stages-stage-asi-build-asi-stage-connection"]], "aslm.model.devices.stages.stage_base": [[162, "module-aslm.model.devices.stages.stage_base"]], "aslm.model.devices.stages.stage_base.StageBase": [[163, "aslm-model-devices-stages-stage-base-stagebase"]], "aslm.model.devices.stages.stage_galvo": [[164, "module-aslm.model.devices.stages.stage_galvo"]], "aslm.model.devices.stages.stage_galvo.GalvoNIStage": [[165, "aslm-model-devices-stages-stage-galvo-galvonistage"]], "aslm.model.devices.stages.stage_mcl": [[166, "module-aslm.model.devices.stages.stage_mcl"]], "aslm.model.devices.stages.stage_mcl.MCLStage": [[167, "aslm-model-devices-stages-stage-mcl-mclstage"]], "aslm.model.devices.stages.stage_mcl.build_MCLStage_connection": [[168, "aslm-model-devices-stages-stage-mcl-build-mclstage-connection"]], "aslm.model.devices.stages.stage_pi": [[169, "module-aslm.model.devices.stages.stage_pi"]], "aslm.model.devices.stages.stage_pi.PIStage": [[170, "aslm-model-devices-stages-stage-pi-pistage"]], "aslm.model.devices.stages.stage_pi.build_PIStage_connection": [[171, "aslm-model-devices-stages-stage-pi-build-pistage-connection"]], "aslm.model.devices.stages.stage_sutter": [[172, "module-aslm.model.devices.stages.stage_sutter"]], "aslm.model.devices.stages.stage_sutter.SutterStage": [[173, "aslm-model-devices-stages-stage-sutter-sutterstage"]], "aslm.model.devices.stages.stage_sutter.build_sutter_stage_connection": [[174, "aslm-model-devices-stages-stage-sutter-build-sutter-stage-connection"]], "aslm.model.devices.stages.stage_synthetic": [[175, "module-aslm.model.devices.stages.stage_synthetic"]], "aslm.model.devices.stages.stage_synthetic.SyntheticStage": [[176, "aslm-model-devices-stages-stage-synthetic-syntheticstage"]], "aslm.model.devices.stages.stage_tl_kcube_inertial": [[177, "module-aslm.model.devices.stages.stage_tl_kcube_inertial"]], "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage": [[178, "aslm-model-devices-stages-stage-tl-kcube-inertial-tlkimstage"]], "aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection": [[179, "aslm-model-devices-stages-stage-tl-kcube-inertial-build-tlkimstage-connection"]], "aslm.model.devices.zoom": [[180, "module-aslm.model.devices.zoom"]], "aslm.model.devices.zoom.zoom_base": [[181, "module-aslm.model.devices.zoom.zoom_base"]], "aslm.model.devices.zoom.zoom_base.ZoomBase": [[182, "aslm-model-devices-zoom-zoom-base-zoombase"]], "aslm.model.devices.zoom.zoom_synthetic": [[183, "module-aslm.model.devices.zoom.zoom_synthetic"]], "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom": [[184, "aslm-model-devices-zoom-zoom-synthetic-syntheticzoom"]], "aslm.model.dummy": [[185, "module-aslm.model.dummy"]], "aslm.model.dummy.DummyDevice": [[186, "aslm-model-dummy-dummydevice"]], "aslm.model.dummy.DummyModel": [[187, "aslm-model-dummy-dummymodel"]], "aslm.model.features": [[188, "module-aslm.model.features"]], "aslm.model.features.autofocus": [[189, "module-aslm.model.features.autofocus"]], "aslm.model.features.autofocus.Autofocus": [[190, "aslm-model-features-autofocus-autofocus"]], "aslm.model.features.common_features": [[191, "module-aslm.model.features.common_features"]], "aslm.model.features.common_features.ChangeResolution": [[192, "aslm-model-features-common-features-changeresolution"]], "aslm.model.features.common_features.FindTissueSimple2D": [[193, "aslm-model-features-common-features-findtissuesimple2d"]], "aslm.model.features.common_features.Snap": [[194, "aslm-model-features-common-features-snap"]], "aslm.model.features.common_features.WaitToContinue": [[195, "aslm-model-features-common-features-waittocontinue"]], "aslm.model.features.common_features.ZStackAcquisition": [[196, "aslm-model-features-common-features-zstackacquisition"]], "aslm.model.features.dummy_detective": [[197, "module-aslm.model.features.dummy_detective"]], "aslm.model.features.dummy_detective.Dummy_Detective": [[198, "aslm-model-features-dummy-detective-dummy-detective"]], "aslm.model.features.feature_container": [[199, "module-aslm.model.features.feature_container"]], "aslm.model.features.feature_container.Container": [[200, "aslm-model-features-feature-container-container"]], "aslm.model.features.feature_container.DataContainer": [[201, "aslm-model-features-feature-container-datacontainer"]], "aslm.model.features.feature_container.DataNode": [[202, "aslm-model-features-feature-container-datanode"]], "aslm.model.features.feature_container.SignalContainer": [[203, "aslm-model-features-feature-container-signalcontainer"]], "aslm.model.features.feature_container.SignalNode": [[204, "aslm-model-features-feature-container-signalnode"]], "aslm.model.features.feature_container.TreeNode": [[205, "aslm-model-features-feature-container-treenode"]], "aslm.model.features.feature_container.dummy_True": [[206, "aslm-model-features-feature-container-dummy-true"]], "aslm.model.features.feature_container.dummy_func": [[207, "aslm-model-features-feature-container-dummy-func"]], "aslm.model.features.feature_container.get_registered_funcs": [[208, "aslm-model-features-feature-container-get-registered-funcs"]], "aslm.model.features.feature_container.load_features": [[209, "aslm-model-features-feature-container-load-features"]], "aslm.model.features.image_writer": [[210, "module-aslm.model.features.image_writer"]], "aslm.model.features.image_writer.ImageWriter": [[211, "aslm-model-features-image-writer-imagewriter"]], "aslm.model.features.restful_features": [[212, "module-aslm.model.features.restful_features"]], "aslm.model.features.restful_features.IlastikSegmentation": [[213, "aslm-model-features-restful-features-ilastiksegmentation"]], "aslm.model.features.restful_features.prepare_service": [[214, "aslm-model-features-restful-features-prepare-service"]], "aslm.model.features.volume_search": [[215, "module-aslm.model.features.volume_search"]], "aslm.model.features.volume_search.VolumeSearch": [[216, "aslm-model-features-volume-search-volumesearch"]], "aslm.model.metadata_sources": [[217, "module-aslm.model.metadata_sources"]], "aslm.model.metadata_sources.bdv_metadata": [[218, "module-aslm.model.metadata_sources.bdv_metadata"]], "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata": [[219, "aslm-model-metadata-sources-bdv-metadata-bigdataviewermetadata"]], "aslm.model.metadata_sources.metadata": [[220, "module-aslm.model.metadata_sources.metadata"]], "aslm.model.metadata_sources.metadata.Metadata": [[221, "aslm-model-metadata-sources-metadata-metadata"]], "aslm.model.metadata_sources.metadata.XMLMetadata": [[222, "aslm-model-metadata-sources-metadata-xmlmetadata"]], "aslm.model.metadata_sources.ome_tiff_metadata": [[223, "module-aslm.model.metadata_sources.ome_tiff_metadata"]], "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata": [[224, "aslm-model-metadata-sources-ome-tiff-metadata-ometiffmetadata"]], "aslm.model.microscope": [[225, "module-aslm.model.microscope"]], "aslm.model.microscope.Microscope": [[226, "aslm-model-microscope-microscope"]], "aslm.model.model": [[227, "module-aslm.model.model"]], "aslm.model.model.Model": [[228, "aslm-model-model-model"]], "aslm.model.waveforms": [[229, "module-aslm.model.waveforms"]], "aslm.model.waveforms.camera_exposure": [[230, "aslm-model-waveforms-camera-exposure"]], "aslm.model.waveforms.dc_value": [[231, "aslm-model-waveforms-dc-value"]], "aslm.model.waveforms.sawtooth": [[232, "aslm-model-waveforms-sawtooth"]], "aslm.model.waveforms.sine_wave": [[233, "aslm-model-waveforms-sine-wave"]], "aslm.model.waveforms.single_pulse": [[234, "aslm-model-waveforms-single-pulse"]], "aslm.model.waveforms.smooth_waveform": [[235, "aslm-model-waveforms-smooth-waveform"]], "aslm.model.waveforms.square": [[236, "aslm-model-waveforms-square"]], "aslm.model.waveforms.tunable_lens_ramp": [[237, "aslm-model-waveforms-tunable-lens-ramp"]], "aslm.tools": [[238, "module-aslm.tools"]], "aslm.tools.beams": [[239, "module-aslm.tools.beams"]], "aslm.tools.beams.fit_gaussian_beam_error": [[240, "aslm-tools-beams-fit-gaussian-beam-error"]], "aslm.tools.beams.fit_gaussian_beam_mse": [[241, "aslm-tools-beams-fit-gaussian-beam-mse"]], "aslm.tools.beams.gaussian_beam": [[242, "aslm-tools-beams-gaussian-beam"]], "aslm.tools.common_dict_tools": [[243, "module-aslm.tools.common_dict_tools"]], "aslm.tools.common_dict_tools.update_settings_common": [[244, "aslm-tools-common-dict-tools-update-settings-common"]], "aslm.tools.common_dict_tools.update_stage_dict": [[245, "aslm-tools-common-dict-tools-update-stage-dict"]], "aslm.tools.common_functions": [[246, "module-aslm.tools.common_functions"]], "aslm.tools.common_functions.build_ref_name": [[247, "aslm-tools-common-functions-build-ref-name"]], "aslm.tools.common_functions.combine_funcs": [[248, "aslm-tools-common-functions-combine-funcs"]], "aslm.tools.common_functions.copy_proxy_object": [[249, "aslm-tools-common-functions-copy-proxy-object"]], "aslm.tools.decorators": [[250, "module-aslm.tools.decorators"]], "aslm.tools.decorators.function_timer": [[251, "aslm-tools-decorators-function-timer"]], "aslm.tools.file_functions": [[252, "module-aslm.tools.file_functions"]], "aslm.tools.file_functions.create_save_path": [[253, "aslm-tools-file-functions-create-save-path"]], "aslm.tools.file_functions.save_yaml_file": [[254, "aslm-tools-file-functions-save-yaml-file"]], "aslm.tools.image": [[255, "module-aslm.tools.image"]], "aslm.tools.image.text_array": [[256, "aslm-tools-image-text-array"]], "aslm.tools.image_loaders": [[257, "module-aslm.tools.image_loaders"]], "aslm.tools.image_loaders.LazyTiff": [[258, "aslm-tools-image-loaders-lazytiff"]], "aslm.tools.multipos_table_tools": [[259, "module-aslm.tools.multipos_table_tools"]], "aslm.tools.multipos_table_tools.calc_num_tiles": [[260, "aslm-tools-multipos-table-tools-calc-num-tiles"]], "aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box": [[261, "aslm-tools-multipos-table-tools-compute-tiles-from-bounding-box"]], "aslm.tools.multipos_table_tools.sign": [[262, "aslm-tools-multipos-table-tools-sign"]], "aslm.tools.multipos_table_tools.update_table": [[263, "aslm-tools-multipos-table-tools-update-table"]], "aslm.tools.project_stats": [[264, "module-aslm.tools.project_stats"]], "aslm.tools.project_stats.countlines": [[265, "aslm-tools-project-stats-countlines"]], "aslm.tools.xml_tools": [[266, "module-aslm.tools.xml_tools"]], "aslm.tools.xml_tools.dict_to_xml": [[267, "aslm-tools-xml-tools-dict-to-xml"]], "aslm.tools.xml_tools.parse_xml": [[268, "aslm-tools-xml-tools-parse-xml"]], "aslm.view": [[269, "module-aslm.view"]], "aslm.view.main_window_content": [[270, "module-aslm.view.main_window_content"]], "aslm.view.main_window_content.acquire_bar_frame": [[271, "module-aslm.view.main_window_content.acquire_bar_frame"]], "aslm.view.main_window_content.channel_settings": [[272, "module-aslm.view.main_window_content.channel_settings"]], "aslm.view.main_window_content.channel_settings.channel_settings_frames": [[273, "module-aslm.view.main_window_content.channel_settings.channel_settings_frames"]], "aslm.view.main_window_content.stage_control": [[274, "module-aslm.view.main_window_content.stage_control"]], "aslm.view.main_window_content.stage_control.stage_control_frames": [[275, "module-aslm.view.main_window_content.stage_control.stage_control_frames"]], "aslm.view.menus": [[276, "module-aslm.view.menus"]], "API Reference": [[279, "api-reference"]], "Configuring ASLM": [[280, "configuring-aslm"]], "Configuration.yaml": [[280, "configuration-yaml"]], "Hardware Section": [[280, "hardware-section"]], "Microscope Section": [[280, "microscope-section"]], "GUI Section": [[280, "gui-section"]], "Contributing Guidelines": [[281, "contributing-guidelines"]], "General principles": [[281, "general-principles"]], "Coding style": [[281, "coding-style"]], "Unit tests": [[281, "unit-tests"]], "ASLM feature container": [[282, "aslm-feature-container"]], "The feature object": [[282, "the-feature-object"]], "Writing custom features": [[282, "writing-custom-features"]], "Extending ASLM": [[283, "extending-aslm"]], "Hardware Setup": [[284, "hardware-setup"]], "Data Acquisition Card": [[284, "data-acquisition-card"]], "Configuration File": [[284, "configuration-file"]], "Directions": [[284, "directions"]], "Microscope Implementations": [[285, "microscope-implementations"]], "Multiscale Microscope": [[285, "multiscale-microscope"]], "Upright CT-ASLM-V2": [[285, "upright-ct-aslm-v2"]], "OPM-V2": [[285, "opm-v2"]], "ASLM Python Package": [[286, "aslm-python-package"]], "Contents": [[286, "contents"]], "Index and search": [[286, "index-and-search"]], "Software Installation": [[287, "software-installation"]], "GPU Dependencies": [[287, "gpu-dependencies"]], "Troubleshooting": [[287, "troubleshooting"]], "User Guide": [[288, "user-guide"]]}, "indexentries": {"aslm.config": [[0, "module-aslm.config"]], "module": [[0, "module-aslm.config"], [1, "module-aslm.config.config"], [6, "module-aslm.controller"], [7, "module-aslm.controller.configuration_controller"], [9, "module-aslm.controller.thread_pool"], [13, "module-aslm.model"], [14, "module-aslm.model.analysis"], [15, "module-aslm.model.analysis.boundary_detect"], [20, "module-aslm.model.analysis.detection"], [30, "module-aslm.model.analysis.image_contrast"], [36, "module-aslm.model.analysis.image_decorrelation"], [45, "module-aslm.model.analysis.image_transform"], [48, "module-aslm.model.analysis.noise_model"], [50, "module-aslm.model.analysis.spectral_unmixing"], [52, "module-aslm.model.concurrency"], [53, "module-aslm.model.concurrency.concurrency_tools"], [64, "module-aslm.model.concurrency.proxy_objects"], [69, "module-aslm.model.concurrency.shared_memory"], [70, "module-aslm.model.concurrency.write_parameters"], [72, "module-aslm.model.data_sources"], [73, "module-aslm.model.data_sources.bdv_data_source"], [75, "module-aslm.model.data_sources.data_source"], [78, "module-aslm.model.data_sources.tiff_data_source"], [80, "module-aslm.model.data_sources.zarr_data_source"], [82, "module-aslm.model.device_startup_functions"], [100, "module-aslm.model.devices"], [101, "module-aslm.model.devices.APIs"], [102, "module-aslm.model.devices.APIs.coherent"], [103, "module-aslm.model.devices.APIs.dynamixel"], [104, "module-aslm.model.devices.APIs.logitech"], [105, "module-aslm.model.devices.APIs.omicron"], [106, "module-aslm.model.devices.camera"], [107, "module-aslm.model.devices.camera.camera_base"], [109, "module-aslm.model.devices.camera.camera_hamamatsu"], [111, "module-aslm.model.devices.camera.camera_synthetic"], [114, "module-aslm.model.devices.daq"], [115, "module-aslm.model.devices.daq.daq_base"], [117, "module-aslm.model.devices.daq.daq_synthetic"], [119, "module-aslm.model.devices.filter_wheel"], [120, "module-aslm.model.devices.filter_wheel.filter_wheel_base"], [122, "module-aslm.model.devices.filter_wheel.filter_wheel_sutter"], [125, "module-aslm.model.devices.filter_wheel.filter_wheel_synthetic"], [127, "module-aslm.model.devices.galvo"], [128, "module-aslm.model.devices.galvo.galvo_base"], [130, "module-aslm.model.devices.joystick"], [131, "module-aslm.model.devices.joystick.joystick_base"], [133, "module-aslm.model.devices.joystick.joystick_logitech"], [135, "module-aslm.model.devices.joystick.joystick_synthetic"], [137, "module-aslm.model.devices.lasers"], [138, "module-aslm.model.devices.lasers.laser_base"], [140, "module-aslm.model.devices.lasers.laser_synthetic"], [142, "module-aslm.model.devices.lasers.laser_trigger_base"], [144, "module-aslm.model.devices.lasers.laser_trigger_synthetic"], [146, "module-aslm.model.devices.objectives"], [148, "module-aslm.model.devices.remote_focus"], [149, "module-aslm.model.devices.remote_focus.remote_focus_base"], [151, "module-aslm.model.devices.remote_focus.remote_focus_equipment_solutions"], [153, "module-aslm.model.devices.shutter"], [154, "module-aslm.model.devices.shutter.laser_shutter_base"], [156, "module-aslm.model.devices.shutter.laser_shutter_synthetic"], [158, "module-aslm.model.devices.stages"], [159, "module-aslm.model.devices.stages.stage_asi"], [162, "module-aslm.model.devices.stages.stage_base"], [164, "module-aslm.model.devices.stages.stage_galvo"], [166, "module-aslm.model.devices.stages.stage_mcl"], [169, "module-aslm.model.devices.stages.stage_pi"], [172, "module-aslm.model.devices.stages.stage_sutter"], [175, "module-aslm.model.devices.stages.stage_synthetic"], [177, "module-aslm.model.devices.stages.stage_tl_kcube_inertial"], [180, "module-aslm.model.devices.zoom"], [181, "module-aslm.model.devices.zoom.zoom_base"], [183, "module-aslm.model.devices.zoom.zoom_synthetic"], [185, "module-aslm.model.dummy"], [188, "module-aslm.model.features"], [189, "module-aslm.model.features.autofocus"], [191, "module-aslm.model.features.common_features"], [197, "module-aslm.model.features.dummy_detective"], [199, "module-aslm.model.features.feature_container"], [210, "module-aslm.model.features.image_writer"], [212, "module-aslm.model.features.restful_features"], [215, "module-aslm.model.features.volume_search"], [217, "module-aslm.model.metadata_sources"], [218, "module-aslm.model.metadata_sources.bdv_metadata"], [220, "module-aslm.model.metadata_sources.metadata"], [223, "module-aslm.model.metadata_sources.ome_tiff_metadata"], [225, "module-aslm.model.microscope"], [227, "module-aslm.model.model"], [229, "module-aslm.model.waveforms"], [238, "module-aslm.tools"], [239, "module-aslm.tools.beams"], [243, "module-aslm.tools.common_dict_tools"], [246, "module-aslm.tools.common_functions"], [250, "module-aslm.tools.decorators"], [252, "module-aslm.tools.file_functions"], [255, "module-aslm.tools.image"], [257, "module-aslm.tools.image_loaders"], [259, "module-aslm.tools.multipos_table_tools"], [264, "module-aslm.tools.project_stats"], [266, "module-aslm.tools.xml_tools"], [269, "module-aslm.view"], [270, "module-aslm.view.main_window_content"], [271, "module-aslm.view.main_window_content.acquire_bar_frame"], [272, "module-aslm.view.main_window_content.channel_settings"], [273, "module-aslm.view.main_window_content.channel_settings.channel_settings_frames"], [274, "module-aslm.view.main_window_content.stage_control"], [275, "module-aslm.view.main_window_content.stage_control.stage_control_frames"], [276, "module-aslm.view.menus"]], "aslm.config.config": [[1, "module-aslm.config.config"]], "build_nested_dict() (in module aslm.config.config)": [[2, "aslm.config.config.build_nested_dict"]], "get_configuration_paths() (in module aslm.config.config)": [[3, "aslm.config.config.get_configuration_paths"]], "load_configs() (in module aslm.config.config)": [[4, "aslm.config.config.load_configs"]], "update_config_dict() (in module aslm.config.config)": [[5, "aslm.config.config.update_config_dict"]], "aslm.controller": [[6, "module-aslm.controller"]], "aslm.controller.configuration_controller": [[7, "module-aslm.controller.configuration_controller"]], "configurationcontroller (class in aslm.controller.configuration_controller)": [[8, "aslm.controller.configuration_controller.ConfigurationController"]], "__init__() (aslm.controller.configuration_controller.configurationcontroller method)": [[8, "aslm.controller.configuration_controller.ConfigurationController.__init__"]], "camera_config_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[8, "aslm.controller.configuration_controller.ConfigurationController.camera_config_dict"]], "camera_pixels (aslm.controller.configuration_controller.configurationcontroller property)": [[8, "aslm.controller.configuration_controller.ConfigurationController.camera_pixels"]], "change_microscope() (aslm.controller.configuration_controller.configurationcontroller method)": [[8, "aslm.controller.configuration_controller.ConfigurationController.change_microscope"]], "channels_info (aslm.controller.configuration_controller.configurationcontroller property)": [[8, "aslm.controller.configuration_controller.ConfigurationController.channels_info"]], "get_microscope_configuration_dict() (aslm.controller.configuration_controller.configurationcontroller method)": [[8, "aslm.controller.configuration_controller.ConfigurationController.get_microscope_configuration_dict"]], "get_stage_position_limits() (aslm.controller.configuration_controller.configurationcontroller method)": [[8, "aslm.controller.configuration_controller.ConfigurationController.get_stage_position_limits"]], "lasers_info (aslm.controller.configuration_controller.configurationcontroller property)": [[8, "aslm.controller.configuration_controller.ConfigurationController.lasers_info"]], "remote_focus_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[8, "aslm.controller.configuration_controller.ConfigurationController.remote_focus_dict"]], "stage_default_position (aslm.controller.configuration_controller.configurationcontroller property)": [[8, "aslm.controller.configuration_controller.ConfigurationController.stage_default_position"]], "stage_step (aslm.controller.configuration_controller.configurationcontroller property)": [[8, "aslm.controller.configuration_controller.ConfigurationController.stage_step"]], "aslm.controller.thread_pool": [[9, "module-aslm.controller.thread_pool"]], "selflockthread (class in aslm.controller.thread_pool)": [[10, "aslm.controller.thread_pool.SelfLockThread"]], "__init__() (aslm.controller.thread_pool.selflockthread method)": [[10, "aslm.controller.thread_pool.SelfLockThread.__init__"]], "daemon (aslm.controller.thread_pool.selflockthread property)": [[10, "aslm.controller.thread_pool.SelfLockThread.daemon"]], "getname() (aslm.controller.thread_pool.selflockthread method)": [[10, "aslm.controller.thread_pool.SelfLockThread.getName"]], "ident (aslm.controller.thread_pool.selflockthread property)": [[10, "aslm.controller.thread_pool.SelfLockThread.ident"]], "isdaemon() (aslm.controller.thread_pool.selflockthread method)": [[10, "aslm.controller.thread_pool.SelfLockThread.isDaemon"]], "is_alive() (aslm.controller.thread_pool.selflockthread method)": [[10, "aslm.controller.thread_pool.SelfLockThread.is_alive"]], "join() (aslm.controller.thread_pool.selflockthread method)": [[10, "aslm.controller.thread_pool.SelfLockThread.join"]], "name (aslm.controller.thread_pool.selflockthread property)": [[10, "aslm.controller.thread_pool.SelfLockThread.name"]], "native_id (aslm.controller.thread_pool.selflockthread property)": [[10, "aslm.controller.thread_pool.SelfLockThread.native_id"]], "run() (aslm.controller.thread_pool.selflockthread method)": [[10, "aslm.controller.thread_pool.SelfLockThread.run"]], "setdaemon() (aslm.controller.thread_pool.selflockthread method)": [[10, "aslm.controller.thread_pool.SelfLockThread.setDaemon"]], "setname() (aslm.controller.thread_pool.selflockthread method)": [[10, "aslm.controller.thread_pool.SelfLockThread.setName"]], "start() (aslm.controller.thread_pool.selflockthread method)": [[10, "aslm.controller.thread_pool.SelfLockThread.start"]], "synchronizedthreadpool (class in aslm.controller.thread_pool)": [[11, "aslm.controller.thread_pool.SynchronizedThreadPool"]], "__init__() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[11, "aslm.controller.thread_pool.SynchronizedThreadPool.__init__"]], "threadwaitlist (class in aslm.controller.thread_pool)": [[12, "aslm.controller.thread_pool.ThreadWaitlist"]], "__init__() (aslm.controller.thread_pool.threadwaitlist method)": [[12, "aslm.controller.thread_pool.ThreadWaitlist.__init__"]], "aslm.model": [[13, "module-aslm.model"]], "aslm.model.analysis": [[14, "module-aslm.model.analysis"]], "aslm.model.analysis.boundary_detect": [[15, "module-aslm.model.analysis.boundary_detect"]], "binary_detect() (in module aslm.model.analysis.boundary_detect)": [[16, "aslm.model.analysis.boundary_detect.binary_detect"]], "find_tissue_boundary_2d() (in module aslm.model.analysis.boundary_detect)": [[17, "aslm.model.analysis.boundary_detect.find_tissue_boundary_2d"]], "has_tissue() (in module aslm.model.analysis.boundary_detect)": [[18, "aslm.model.analysis.boundary_detect.has_tissue"]], "map_boundary() (in module aslm.model.analysis.boundary_detect)": [[19, "aslm.model.analysis.boundary_detect.map_boundary"]], "aslm.model.analysis.detection": [[20, "module-aslm.model.analysis.detection"]], "add_median_border() (in module aslm.model.analysis.detection)": [[21, "aslm.model.analysis.detection.add_median_border"]], "combine_images() (in module aslm.model.analysis.detection)": [[22, "aslm.model.analysis.detection.combine_images"]], "log_detection() (in module aslm.model.analysis.detection)": [[23, "aslm.model.analysis.detection.log_detection"]], "make_inside_image() (in module aslm.model.analysis.detection)": [[24, "aslm.model.analysis.detection.make_inside_image"]], "make_normalized_image() (in module aslm.model.analysis.detection)": [[25, "aslm.model.analysis.detection.make_normalized_image"]], "make_sphere_3d() (in module aslm.model.analysis.detection)": [[26, "aslm.model.analysis.detection.make_sphere_3D"]], "multiscale_surface_filter_3d() (in module aslm.model.analysis.detection)": [[27, "aslm.model.analysis.detection.multiscale_surface_filter_3D"]], "surface_filter_gauss_3d() (in module aslm.model.analysis.detection)": [[28, "aslm.model.analysis.detection.surface_filter_gauss_3D"]], "three_level_segmentation() (in module aslm.model.analysis.detection)": [[29, "aslm.model.analysis.detection.three_level_segmentation"]], "aslm.model.analysis.image_contrast": [[30, "module-aslm.model.analysis.image_contrast"]], "estimate_and_correct_flatfield() (in module aslm.model.analysis.image_contrast)": [[31, "aslm.model.analysis.image_contrast.estimate_and_correct_flatfield"]], "estimate_image_resolution() (in module aslm.model.analysis.image_contrast)": [[32, "aslm.model.analysis.image_contrast.estimate_image_resolution"]], "fast_normalized_dct_shannon_entropy() (in module aslm.model.analysis.image_contrast)": [[33, "aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy"]], "image_intensity() (in module aslm.model.analysis.image_contrast)": [[34, "aslm.model.analysis.image_contrast.image_intensity"]], "normalized_dct_shannon_entropy() (in module aslm.model.analysis.image_contrast)": [[35, "aslm.model.analysis.image_contrast.normalized_dct_shannon_entropy"]], "aslm.model.analysis.image_decorrelation": [[36, "module-aslm.model.analysis.image_decorrelation"]], "apodize_image() (in module aslm.model.analysis.image_decorrelation)": [[37, "aslm.model.analysis.image_decorrelation.apodize_image"]], "get_correlation_coefficient() (in module aslm.model.analysis.image_decorrelation)": [[38, "aslm.model.analysis.image_decorrelation.get_correlation_coefficient"]], "get_decorrelation_local_maxima() (in module aslm.model.analysis.image_decorrelation)": [[39, "aslm.model.analysis.image_decorrelation.get_decorrelation_local_maxima"]], "get_image_decorrelation() (in module aslm.model.analysis.image_decorrelation)": [[40, "aslm.model.analysis.image_decorrelation.get_image_decorrelation"]], "get_radial_average() (in module aslm.model.analysis.image_decorrelation)": [[41, "aslm.model.analysis.image_decorrelation.get_radial_average"]], "image_to_polar() (in module aslm.model.analysis.image_decorrelation)": [[42, "aslm.model.analysis.image_decorrelation.image_to_polar"]], "linear_map() (in module aslm.model.analysis.image_decorrelation)": [[43, "aslm.model.analysis.image_decorrelation.linear_map"]], "main_image_decorr() (in module aslm.model.analysis.image_decorrelation)": [[44, "aslm.model.analysis.image_decorrelation.main_image_decorr"]], "aslm.model.analysis.image_transform": [[45, "module-aslm.model.analysis.image_transform"]], "deskew_image() (in module aslm.model.analysis.image_transform)": [[46, "aslm.model.analysis.image_transform.deskew_image"]], "initiate_gpu() (in module aslm.model.analysis.image_transform)": [[47, "aslm.model.analysis.image_transform.initiate_gpu"]], "aslm.model.analysis.noise_model": [[48, "module-aslm.model.analysis.noise_model"]], "compute_noise_sigma() (in module aslm.model.analysis.noise_model)": [[49, "aslm.model.analysis.noise_model.compute_noise_sigma"]], "aslm.model.analysis.spectral_unmixing": [[50, "module-aslm.model.analysis.spectral_unmixing"]], "to_do() (in module aslm.model.analysis.spectral_unmixing)": [[51, "aslm.model.analysis.spectral_unmixing.to_do"]], "aslm.model.concurrency": [[52, "module-aslm.model.concurrency"]], "aslm.model.concurrency.concurrency_tools": [[53, "module-aslm.model.concurrency.concurrency_tools"]], "custodythread (class in aslm.model.concurrency.concurrency_tools)": [[54, "aslm.model.concurrency.concurrency_tools.CustodyThread"]], "__init__() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[54, "aslm.model.concurrency.concurrency_tools.CustodyThread.__init__"]], "daemon (aslm.model.concurrency.concurrency_tools.custodythread property)": [[54, "aslm.model.concurrency.concurrency_tools.CustodyThread.daemon"]], "getname() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[54, "aslm.model.concurrency.concurrency_tools.CustodyThread.getName"]], "get_result() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[54, "aslm.model.concurrency.concurrency_tools.CustodyThread.get_result"]], "ident (aslm.model.concurrency.concurrency_tools.custodythread property)": [[54, "aslm.model.concurrency.concurrency_tools.CustodyThread.ident"]], "isdaemon() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[54, "aslm.model.concurrency.concurrency_tools.CustodyThread.isDaemon"]], "is_alive() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[54, "aslm.model.concurrency.concurrency_tools.CustodyThread.is_alive"]], "join() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[54, "aslm.model.concurrency.concurrency_tools.CustodyThread.join"]], "name (aslm.model.concurrency.concurrency_tools.custodythread property)": [[54, "aslm.model.concurrency.concurrency_tools.CustodyThread.name"]], "native_id (aslm.model.concurrency.concurrency_tools.custodythread property)": [[54, "aslm.model.concurrency.concurrency_tools.CustodyThread.native_id"]], "run() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[54, "aslm.model.concurrency.concurrency_tools.CustodyThread.run"]], "setdaemon() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[54, "aslm.model.concurrency.concurrency_tools.CustodyThread.setDaemon"]], "setname() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[54, "aslm.model.concurrency.concurrency_tools.CustodyThread.setName"]], "start() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[54, "aslm.model.concurrency.concurrency_tools.CustodyThread.start"]], "fancythread (in module aslm.model.concurrency.concurrency_tools)": [[55, "aslm.model.concurrency.concurrency_tools.FancyThread"]], "mytestclass (class in aslm.model.concurrency.concurrency_tools)": [[56, "aslm.model.concurrency.concurrency_tools.MyTestClass"]], "__init__() (aslm.model.concurrency.concurrency_tools.mytestclass method)": [[56, "aslm.model.concurrency.concurrency_tools.MyTestClass.__init__"]], "run() (aslm.model.concurrency.concurrency_tools.mytestclass method)": [[56, "aslm.model.concurrency.concurrency_tools.MyTestClass.run"]], "time_it() (aslm.model.concurrency.concurrency_tools.mytestclass method)": [[56, "aslm.model.concurrency.concurrency_tools.MyTestClass.time_it"]], "objectinsubprocess (class in aslm.model.concurrency.concurrency_tools)": [[57, "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess"]], "__init__() (aslm.model.concurrency.concurrency_tools.objectinsubprocess method)": [[57, "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess.__init__"]], "politethread (in module aslm.model.concurrency.concurrency_tools)": [[58, "aslm.model.concurrency.concurrency_tools.PoliteThread"]], "resultthread (class in aslm.model.concurrency.concurrency_tools)": [[59, "aslm.model.concurrency.concurrency_tools.ResultThread"]], "__init__() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[59, "aslm.model.concurrency.concurrency_tools.ResultThread.__init__"]], "daemon (aslm.model.concurrency.concurrency_tools.resultthread property)": [[59, "aslm.model.concurrency.concurrency_tools.ResultThread.daemon"]], "getname() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[59, "aslm.model.concurrency.concurrency_tools.ResultThread.getName"]], "get_result() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[59, "aslm.model.concurrency.concurrency_tools.ResultThread.get_result"]], "ident (aslm.model.concurrency.concurrency_tools.resultthread property)": [[59, "aslm.model.concurrency.concurrency_tools.ResultThread.ident"]], "isdaemon() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[59, "aslm.model.concurrency.concurrency_tools.ResultThread.isDaemon"]], "is_alive() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[59, "aslm.model.concurrency.concurrency_tools.ResultThread.is_alive"]], "join() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[59, "aslm.model.concurrency.concurrency_tools.ResultThread.join"]], "name (aslm.model.concurrency.concurrency_tools.resultthread property)": [[59, "aslm.model.concurrency.concurrency_tools.ResultThread.name"]], "native_id (aslm.model.concurrency.concurrency_tools.resultthread property)": [[59, "aslm.model.concurrency.concurrency_tools.ResultThread.native_id"]], "run() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[59, "aslm.model.concurrency.concurrency_tools.ResultThread.run"]], "setdaemon() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[59, "aslm.model.concurrency.concurrency_tools.ResultThread.setDaemon"]], "setname() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[59, "aslm.model.concurrency.concurrency_tools.ResultThread.setName"]], "start() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[59, "aslm.model.concurrency.concurrency_tools.ResultThread.start"]], "aligned (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ALIGNED"]], "behaved (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.BEHAVED"]], "carray (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.CARRAY"]], "c_contiguous (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.C_CONTIGUOUS"]], "farray (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.FARRAY"]], "fnc (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.FNC"]], "forc (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.FORC"]], "f_contiguous (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.F_CONTIGUOUS"]], "owndata (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.OWNDATA"]], "sharedndarray (class in aslm.model.concurrency.concurrency_tools)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray"]], "t (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.T"]], "updateifcopy (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.UPDATEIFCOPY"]], "writeable (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.WRITEABLE"]], "writebackifcopy (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.WRITEBACKIFCOPY"]], "__init__() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.__init__"]], "all() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.all"]], "any() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.any"]], "argmax() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.argmax"]], "argmin() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.argmin"]], "argpartition() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.argpartition"]], "argsort() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.argsort"]], "astype() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.astype"]], "base (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.base"]], "byteswap() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.byteswap"]], "choose() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.choose"]], "clip() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.clip"]], "compress() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.compress"]], "conj() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.conj"]], "conjugate() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.conjugate"]], "copy() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.copy"]], "ctypes (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ctypes"]], "cumprod() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.cumprod"]], "cumsum() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.cumsum"]], "data (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.data"]], "diagonal() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.diagonal"]], "dtype (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.dtype"]], "dump() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.dump"]], "dumps() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.dumps"]], "fill() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.fill"]], "flags (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.flags"]], "flat (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.flat"]], "flatten() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.flatten"]], "getfield() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.getfield"]], "imag (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.imag"]], "item() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.item"]], "itemset() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.itemset"]], "itemsize (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.itemsize"]], "max() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.max"]], "mean() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.mean"]], "min() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.min"]], "nbytes (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.nbytes"]], "ndim (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ndim"]], "newbyteorder() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.newbyteorder"]], "nonzero() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.nonzero"]], "partition() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.partition"]], "prod() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.prod"]], "ptp() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ptp"]], "put() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.put"]], "ravel() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ravel"]], "real (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.real"]], "repeat() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.repeat"]], "reshape() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.reshape"]], "resize() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.resize"]], "round() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.round"]], "searchsorted() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.searchsorted"]], "setfield() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.setfield"]], "setflags() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.setflags"]], "shape (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.shape"]], "size (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.size"]], "sort() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.sort"]], "squeeze() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.squeeze"]], "std() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.std"]], "strides (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.strides"]], "sum() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.sum"]], "swapaxes() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.swapaxes"]], "take() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.take"]], "tobytes() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.tobytes"]], "tofile() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.tofile"]], "tolist() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.tolist"]], "tostring() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.tostring"]], "trace() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.trace"]], "transpose() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.transpose"]], "var() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.var"]], "view() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.SharedNDArray.view"]], "testobjectinsubprocess (class in aslm.model.concurrency.concurrency_tools)": [[61, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess"]], "testobjectinsubprocess.testclass (class in aslm.model.concurrency.concurrency_tools)": [[61, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.TestClass"]], "__init__() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[61, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.__init__"]], "run() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[61, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.run"]], "test_incorrect_thread_management() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[61, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.test_incorrect_thread_management"]], "test_lock_with_waitlist() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[61, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.test_lock_with_waitlist"]], "test_object_in_subprocess_overhead() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[61, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.test_object_in_subprocess_overhead"]], "test_sending_shared_arrays() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[61, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.test_sending_shared_arrays"]], "time_it() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[61, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.time_it"]], "testresultthreadandcustodythread (class in aslm.model.concurrency.concurrency_tools)": [[62, "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread"]], "__init__() (aslm.model.concurrency.concurrency_tools.testresultthreadandcustodythread method)": [[62, "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread.__init__"]], "run() (aslm.model.concurrency.concurrency_tools.testresultthreadandcustodythread method)": [[62, "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread.run"]], "time_it() (aslm.model.concurrency.concurrency_tools.testresultthreadandcustodythread method)": [[62, "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread.time_it"]], "testsharedndarray (class in aslm.model.concurrency.concurrency_tools)": [[63, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray"]], "__init__() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[63, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.__init__"]], "run() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[63, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.run"]], "test_ndarraylike_behavior() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[63, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.test_ndarraylike_behavior"]], "test_serialization() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[63, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.test_serialization"]], "test_serializing_and_deserializing() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[63, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.test_serializing_and_deserializing"]], "time_it() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[63, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.time_it"]], "aslm.model.concurrency.proxy_objects": [[64, "module-aslm.model.concurrency.proxy_objects"]], "proxymanager (class in aslm.model.concurrency.proxy_objects)": [[65, "aslm.model.concurrency.proxy_objects.ProxyManager"]], "__init__() (aslm.model.concurrency.proxy_objects.proxymanager method)": [[65, "aslm.model.concurrency.proxy_objects.ProxyManager.__init__"]], "proxy_object() (aslm.model.concurrency.proxy_objects.proxymanager method)": [[65, "aslm.model.concurrency.proxy_objects.ProxyManager.proxy_object"]], "shared_numpy_array() (aslm.model.concurrency.proxy_objects.proxymanager method)": [[65, "aslm.model.concurrency.proxy_objects.ProxyManager.shared_numpy_array"]], "proxyobject (class in aslm.model.concurrency.proxy_objects)": [[66, "aslm.model.concurrency.proxy_objects.ProxyObject"]], "__init__() (aslm.model.concurrency.proxy_objects.proxyobject method)": [[66, "aslm.model.concurrency.proxy_objects.ProxyObject.__init__"]], "launch_custody_thread() (in module aslm.model.concurrency.proxy_objects)": [[67, "aslm.model.concurrency.proxy_objects.launch_custody_thread"]], "launch_thread() (in module aslm.model.concurrency.proxy_objects)": [[68, "aslm.model.concurrency.proxy_objects.launch_thread"]], "aslm.model.concurrency.shared_memory": [[69, "module-aslm.model.concurrency.shared_memory"]], "aslm.model.concurrency.write_parameters": [[70, "module-aslm.model.concurrency.write_parameters"]], "__init__() (aslm.model.concurrency.write_parameters.write_params method)": [[71, "aslm.model.concurrency.write_parameters.write_Params.__init__"]], "write_params (class in aslm.model.concurrency.write_parameters)": [[71, "aslm.model.concurrency.write_parameters.write_Params"]], "aslm.model.data_sources": [[72, "module-aslm.model.data_sources"]], "aslm.model.data_sources.bdv_data_source": [[73, "module-aslm.model.data_sources.bdv_data_source"]], "bigdataviewerdatasource (class in aslm.model.data_sources.bdv_data_source)": [[74, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource"]], "__init__() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[74, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.__init__"]], "close() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[74, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.close"]], "data (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[74, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.data"]], "read() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[74, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.read"]], "resolutions (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[74, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.resolutions"]], "shape (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[74, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.shape"]], "shapes (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[74, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.shapes"]], "subdivisions (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[74, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.subdivisions"]], "voxel_size (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[74, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.voxel_size"]], "write() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[74, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.write"]], "aslm.model.data_sources.data_source": [[75, "module-aslm.model.data_sources.data_source"]], "datasource (class in aslm.model.data_sources.data_source)": [[76, "aslm.model.data_sources.data_source.DataSource"]], "__init__() (aslm.model.data_sources.data_source.datasource method)": [[76, "aslm.model.data_sources.data_source.DataSource.__init__"]], "close() (aslm.model.data_sources.data_source.datasource method)": [[76, "aslm.model.data_sources.data_source.DataSource.close"]], "data (aslm.model.data_sources.data_source.datasource property)": [[76, "aslm.model.data_sources.data_source.DataSource.data"]], "read() (aslm.model.data_sources.data_source.datasource method)": [[76, "aslm.model.data_sources.data_source.DataSource.read"]], "shape (aslm.model.data_sources.data_source.datasource property)": [[76, "aslm.model.data_sources.data_source.DataSource.shape"]], "voxel_size (aslm.model.data_sources.data_source.datasource property)": [[76, "aslm.model.data_sources.data_source.DataSource.voxel_size"]], "write() (aslm.model.data_sources.data_source.datasource method)": [[76, "aslm.model.data_sources.data_source.DataSource.write"]], "get_data_source() (in module aslm.model.data_sources)": [[77, "aslm.model.data_sources.get_data_source"]], "aslm.model.data_sources.tiff_data_source": [[78, "module-aslm.model.data_sources.tiff_data_source"]], "tiffdatasource (class in aslm.model.data_sources.tiff_data_source)": [[79, "aslm.model.data_sources.tiff_data_source.TiffDataSource"]], "__init__() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[79, "aslm.model.data_sources.tiff_data_source.TiffDataSource.__init__"]], "close() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[79, "aslm.model.data_sources.tiff_data_source.TiffDataSource.close"]], "data (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[79, "aslm.model.data_sources.tiff_data_source.TiffDataSource.data"]], "generate_image_name() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[79, "aslm.model.data_sources.tiff_data_source.TiffDataSource.generate_image_name"]], "read() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[79, "aslm.model.data_sources.tiff_data_source.TiffDataSource.read"]], "shape (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[79, "aslm.model.data_sources.tiff_data_source.TiffDataSource.shape"]], "voxel_size (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[79, "aslm.model.data_sources.tiff_data_source.TiffDataSource.voxel_size"]], "write() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[79, "aslm.model.data_sources.tiff_data_source.TiffDataSource.write"]], "aslm.model.data_sources.zarr_data_source": [[80, "module-aslm.model.data_sources.zarr_data_source"]], "zarrdatasource (class in aslm.model.data_sources.zarr_data_source)": [[81, "aslm.model.data_sources.zarr_data_source.ZarrDataSource"]], "__init__() (aslm.model.data_sources.zarr_data_source.zarrdatasource method)": [[81, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.__init__"]], "close() (aslm.model.data_sources.zarr_data_source.zarrdatasource method)": [[81, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.close"]], "copy_to_zarr() (aslm.model.data_sources.zarr_data_source.zarrdatasource method)": [[81, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.copy_to_zarr"]], "data (aslm.model.data_sources.zarr_data_source.zarrdatasource property)": [[81, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.data"]], "read() (aslm.model.data_sources.zarr_data_source.zarrdatasource method)": [[81, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.read"]], "shape (aslm.model.data_sources.zarr_data_source.zarrdatasource property)": [[81, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.shape"]], "voxel_size (aslm.model.data_sources.zarr_data_source.zarrdatasource property)": [[81, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.voxel_size"]], "write() (aslm.model.data_sources.zarr_data_source.zarrdatasource method)": [[81, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.write"]], "aslm.model.device_startup_functions": [[82, "module-aslm.model.device_startup_functions"]], "dummydeviceconnection (class in aslm.model.device_startup_functions)": [[83, "aslm.model.device_startup_functions.DummyDeviceConnection"]], "__init__() (aslm.model.device_startup_functions.dummydeviceconnection method)": [[83, "aslm.model.device_startup_functions.DummyDeviceConnection.__init__"]], "auto_redial() (in module aslm.model.device_startup_functions)": [[84, "aslm.model.device_startup_functions.auto_redial"]], "device_not_found() (in module aslm.model.device_startup_functions)": [[85, "aslm.model.device_startup_functions.device_not_found"]], "load_camera_connection() (in module aslm.model.device_startup_functions)": [[86, "aslm.model.device_startup_functions.load_camera_connection"]], "load_devices() (in module aslm.model.device_startup_functions)": [[87, "aslm.model.device_startup_functions.load_devices"]], "load_filter_wheel_connection() (in module aslm.model.device_startup_functions)": [[88, "aslm.model.device_startup_functions.load_filter_wheel_connection"]], "load_stages() (in module aslm.model.device_startup_functions)": [[89, "aslm.model.device_startup_functions.load_stages"]], "load_zoom_connection() (in module aslm.model.device_startup_functions)": [[90, "aslm.model.device_startup_functions.load_zoom_connection"]], "start_camera() (in module aslm.model.device_startup_functions)": [[91, "aslm.model.device_startup_functions.start_camera"]], "start_daq() (in module aslm.model.device_startup_functions)": [[92, "aslm.model.device_startup_functions.start_daq"]], "start_filter_wheel() (in module aslm.model.device_startup_functions)": [[93, "aslm.model.device_startup_functions.start_filter_wheel"]], "start_galvo() (in module aslm.model.device_startup_functions)": [[94, "aslm.model.device_startup_functions.start_galvo"]], "start_lasers() (in module aslm.model.device_startup_functions)": [[95, "aslm.model.device_startup_functions.start_lasers"]], "start_remote_focus_device() (in module aslm.model.device_startup_functions)": [[96, "aslm.model.device_startup_functions.start_remote_focus_device"]], "start_shutter() (in module aslm.model.device_startup_functions)": [[97, "aslm.model.device_startup_functions.start_shutter"]], "start_stage() (in module aslm.model.device_startup_functions)": [[98, "aslm.model.device_startup_functions.start_stage"]], "start_zoom() (in module aslm.model.device_startup_functions)": [[99, "aslm.model.device_startup_functions.start_zoom"]], "aslm.model.devices": [[100, "module-aslm.model.devices"]], "aslm.model.devices.apis": [[101, "module-aslm.model.devices.APIs"]], "aslm.model.devices.apis.coherent": [[102, "module-aslm.model.devices.APIs.coherent"]], "aslm.model.devices.apis.dynamixel": [[103, "module-aslm.model.devices.APIs.dynamixel"]], "aslm.model.devices.apis.logitech": [[104, "module-aslm.model.devices.APIs.logitech"]], "aslm.model.devices.apis.omicron": [[105, "module-aslm.model.devices.APIs.omicron"]], "aslm.model.devices.camera": [[106, "module-aslm.model.devices.camera"]], "aslm.model.devices.camera.camera_base": [[107, "module-aslm.model.devices.camera.camera_base"]], "camerabase (class in aslm.model.devices.camera.camera_base)": [[108, "aslm.model.devices.camera.camera_base.CameraBase"]], "__init__() (aslm.model.devices.camera.camera_base.camerabase method)": [[108, "aslm.model.devices.camera.camera_base.CameraBase.__init__"]], "calculate_light_sheet_exposure_time() (aslm.model.devices.camera.camera_base.camerabase method)": [[108, "aslm.model.devices.camera.camera_base.CameraBase.calculate_light_sheet_exposure_time"]], "set_readout_direction() (aslm.model.devices.camera.camera_base.camerabase method)": [[108, "aslm.model.devices.camera.camera_base.CameraBase.set_readout_direction"]], "aslm.model.devices.camera.camera_hamamatsu": [[109, "module-aslm.model.devices.camera.camera_hamamatsu"]], "hamamatsuorca (class in aslm.model.devices.camera.camera_hamamatsu)": [[110, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca"]], "__init__() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[110, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.__init__"]], "calculate_light_sheet_exposure_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[110, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.calculate_light_sheet_exposure_time"]], "calculate_readout_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[110, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.calculate_readout_time"]], "close_camera() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[110, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.close_camera"]], "close_image_series() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[110, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.close_image_series"]], "get_minimum_waiting_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[110, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.get_minimum_waiting_time"]], "get_new_frame() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[110, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.get_new_frame"]], "initialize_image_series() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[110, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.initialize_image_series"]], "report_settings() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[110, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.report_settings"]], "serial_number (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[110, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.serial_number"]], "set_roi() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[110, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_ROI"]], "set_binning() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[110, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_binning"]], "set_exposure_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[110, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_exposure_time"]], "set_line_interval() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[110, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_line_interval"]], "set_readout_direction() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[110, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_readout_direction"]], "set_sensor_mode() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[110, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_sensor_mode"]], "aslm.model.devices.camera.camera_synthetic": [[111, "module-aslm.model.devices.camera.camera_synthetic"]], "syntheticcamera (class in aslm.model.devices.camera.camera_synthetic)": [[112, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera"]], "__init__() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[112, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.__init__"]], "calculate_light_sheet_exposure_time() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[112, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.calculate_light_sheet_exposure_time"]], "close_camera() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[112, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.close_camera"]], "close_image_series() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[112, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.close_image_series"]], "generate_new_frame() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[112, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.generate_new_frame"]], "get_minimum_waiting_time() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[112, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.get_minimum_waiting_time"]], "get_new_frame() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[112, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.get_new_frame"]], "initialize_image_series() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[112, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.initialize_image_series"]], "report_settings() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[112, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.report_settings"]], "set_roi() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[112, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_ROI"]], "set_binning() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[112, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_binning"]], "set_exposure_time() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[112, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_exposure_time"]], "set_line_interval() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[112, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_line_interval"]], "set_readout_direction() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[112, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_readout_direction"]], "set_sensor_mode() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[112, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_sensor_mode"]], "syntheticcameracontroller (class in aslm.model.devices.camera.camera_synthetic)": [[113, "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController"]], "__init__() (aslm.model.devices.camera.camera_synthetic.syntheticcameracontroller method)": [[113, "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController.__init__"]], "get_property_value() (aslm.model.devices.camera.camera_synthetic.syntheticcameracontroller method)": [[113, "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController.get_property_value"]], "aslm.model.devices.daq": [[114, "module-aslm.model.devices.daq"]], "aslm.model.devices.daq.daq_base": [[115, "module-aslm.model.devices.daq.daq_base"]], "daqbase (class in aslm.model.devices.daq.daq_base)": [[116, "aslm.model.devices.daq.daq_base.DAQBase"]], "__init__() (aslm.model.devices.daq.daq_base.daqbase method)": [[116, "aslm.model.devices.daq.daq_base.DAQBase.__init__"]], "calculate_all_waveforms() (aslm.model.devices.daq.daq_base.daqbase method)": [[116, "aslm.model.devices.daq.daq_base.DAQBase.calculate_all_waveforms"]], "configuration (aslm.model.devices.daq.daq_base.daqbase attribute)": [[116, "aslm.model.devices.daq.daq_base.DAQBase.configuration"]], "aslm.model.devices.daq.daq_synthetic": [[117, "module-aslm.model.devices.daq.daq_synthetic"]], "syntheticdaq (class in aslm.model.devices.daq.daq_synthetic)": [[118, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ"]], "__init__() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[118, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.__init__"]], "add_camera() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[118, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.add_camera"]], "calculate_all_waveforms() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[118, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.calculate_all_waveforms"]], "close_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[118, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.close_tasks"]], "configuration (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[118, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.configuration"]], "create_camera_task() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[118, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.create_camera_task"]], "create_galvo_etl_task() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[118, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.create_galvo_etl_task"]], "create_master_trigger_task() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[118, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.create_master_trigger_task"]], "prepare_acquisition() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[118, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.prepare_acquisition"]], "run_acquisition() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[118, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.run_acquisition"]], "start_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[118, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.start_tasks"]], "stop_acquisition() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[118, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.stop_acquisition"]], "stop_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[118, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.stop_tasks"]], "write_waveforms_to_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[118, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.write_waveforms_to_tasks"]], "aslm.model.devices.filter_wheel": [[119, "module-aslm.model.devices.filter_wheel"]], "aslm.model.devices.filter_wheel.filter_wheel_base": [[120, "module-aslm.model.devices.filter_wheel.filter_wheel_base"]], "filterwheelbase (class in aslm.model.devices.filter_wheel.filter_wheel_base)": [[121, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase"]], "__init__() (aslm.model.devices.filter_wheel.filter_wheel_base.filterwheelbase method)": [[121, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.__init__"]], "check_if_filter_in_filter_dictionary() (aslm.model.devices.filter_wheel.filter_wheel_base.filterwheelbase method)": [[121, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.check_if_filter_in_filter_dictionary"], [121, "id0"]], "filter_dictionary (aslm.model.devices.filter_wheel.filter_wheel_base.filterwheelbase attribute)": [[121, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.filter_dictionary"]], "wheel_position (aslm.model.devices.filter_wheel.filter_wheel_base.filterwheelbase attribute)": [[121, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.wheel_position"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter": [[122, "module-aslm.model.devices.filter_wheel.filter_wheel_sutter"]], "sutterfilterwheel (class in aslm.model.devices.filter_wheel.filter_wheel_sutter)": [[123, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel"]], "__init__() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[123, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.__init__"]], "baudrate (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[123, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.baudrate"]], "check_if_filter_in_filter_dictionary() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[123, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.check_if_filter_in_filter_dictionary"], [123, "id0"]], "close() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[123, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.close"], [123, "id1"]], "comport (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[123, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.comport"]], "filter_change_delay() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[123, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.filter_change_delay"], [123, "id2"]], "filter_dictionary (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[123, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.filter_dictionary"]], "number_of_filter_wheels (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[123, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.number_of_filter_wheels"]], "read() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[123, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.read"], [123, "id3"]], "set_filter() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[123, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.set_filter"]], "wheel_position (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[123, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.wheel_position"]], "baudrate (in module aslm.model.devices.filter_wheel.filter_wheel_sutter)": [[124, "aslm.model.devices.filter_wheel.filter_wheel_sutter.baudrate"]], "build_filter_wheel_connection() (in module aslm.model.devices.filter_wheel.filter_wheel_sutter)": [[124, "aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic": [[125, "module-aslm.model.devices.filter_wheel.filter_wheel_synthetic"]], "syntheticfilterwheel (class in aslm.model.devices.filter_wheel.filter_wheel_synthetic)": [[126, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel"]], "__init__() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[126, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.__init__"]], "baudrate (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[126, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.baudrate"]], "check_if_filter_in_filter_dictionary() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[126, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.check_if_filter_in_filter_dictionary"]], "close() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[126, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.close"]], "comport (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[126, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.comport"]], "filter_change_delay() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[126, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.filter_change_delay"]], "filter_dictionary (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[126, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.filter_dictionary"]], "number_of_filter_wheels (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[126, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.number_of_filter_wheels"]], "read() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[126, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.read"]], "set_filter() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[126, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.set_filter"]], "wheel_position (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[126, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.wheel_position"]], "aslm.model.devices.galvo": [[127, "module-aslm.model.devices.galvo"]], "aslm.model.devices.galvo.galvo_base": [[128, "module-aslm.model.devices.galvo.galvo_base"]], "galvobase (class in aslm.model.devices.galvo.galvo_base)": [[129, "aslm.model.devices.galvo.galvo_base.GalvoBase"]], "__init__() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[129, "aslm.model.devices.galvo.galvo_base.GalvoBase.__init__"]], "aslm.model.devices.joystick": [[130, "module-aslm.model.devices.joystick"]], "aslm.model.devices.joystick.joystick_base": [[131, "module-aslm.model.devices.joystick.joystick_base"]], "joystickbase (class in aslm.model.devices.joystick.joystick_base)": [[132, "aslm.model.devices.joystick.joystick_base.JoystickBase"]], "__init__() (aslm.model.devices.joystick.joystick_base.joystickbase method)": [[132, "aslm.model.devices.joystick.joystick_base.JoystickBase.__init__"]], "aslm.model.devices.joystick.joystick_logitech": [[133, "module-aslm.model.devices.joystick.joystick_logitech"]], "joysticklogitech (class in aslm.model.devices.joystick.joystick_logitech)": [[134, "aslm.model.devices.joystick.joystick_logitech.JoystickLogitech"]], "__init__() (aslm.model.devices.joystick.joystick_logitech.joysticklogitech method)": [[134, "aslm.model.devices.joystick.joystick_logitech.JoystickLogitech.__init__"]], "axis_handler() (aslm.model.devices.joystick.joystick_logitech.joysticklogitech method)": [[134, "aslm.model.devices.joystick.joystick_logitech.JoystickLogitech.axis_handler"]], "cfg (aslm.model.devices.joystick.joystick_logitech.joysticklogitech attribute)": [[134, "aslm.model.devices.joystick.joystick_logitech.JoystickLogitech.cfg"]], "decrease_slider() (aslm.model.devices.joystick.joystick_logitech.joysticklogitech method)": [[134, "aslm.model.devices.joystick.joystick_logitech.JoystickLogitech.decrease_slider"]], "mode_handler() (aslm.model.devices.joystick.joystick_logitech.joysticklogitech method)": [[134, "aslm.model.devices.joystick.joystick_logitech.JoystickLogitech.mode_handler"]], "aslm.model.devices.joystick.joystick_synthetic": [[135, "module-aslm.model.devices.joystick.joystick_synthetic"]], "syntheticjoystick (class in aslm.model.devices.joystick.joystick_synthetic)": [[136, "aslm.model.devices.joystick.joystick_synthetic.SyntheticJoystick"]], "__init__() (aslm.model.devices.joystick.joystick_synthetic.syntheticjoystick method)": [[136, "aslm.model.devices.joystick.joystick_synthetic.SyntheticJoystick.__init__"]], "aslm.model.devices.lasers": [[137, "module-aslm.model.devices.lasers"]], "aslm.model.devices.lasers.laser_base": [[138, "module-aslm.model.devices.lasers.laser_base"]], "laserbase (class in aslm.model.devices.lasers.laser_base)": [[139, "aslm.model.devices.lasers.laser_base.LaserBase"]], "__init__() (aslm.model.devices.lasers.laser_base.laserbase method)": [[139, "aslm.model.devices.lasers.laser_base.LaserBase.__init__"]], "close() (aslm.model.devices.lasers.laser_base.laserbase method)": [[139, "aslm.model.devices.lasers.laser_base.LaserBase.close"]], "initialize_laser() (aslm.model.devices.lasers.laser_base.laserbase method)": [[139, "aslm.model.devices.lasers.laser_base.LaserBase.initialize_laser"]], "aslm.model.devices.lasers.laser_synthetic": [[140, "module-aslm.model.devices.lasers.laser_synthetic"]], "syntheticlaser (class in aslm.model.devices.lasers.laser_synthetic)": [[141, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser"]], "__init__() (aslm.model.devices.lasers.laser_synthetic.syntheticlaser method)": [[141, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.__init__"]], "close() (aslm.model.devices.lasers.laser_synthetic.syntheticlaser method)": [[141, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.close"]], "initialize_laser() (aslm.model.devices.lasers.laser_synthetic.syntheticlaser method)": [[141, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.initialize_laser"]], "aslm.model.devices.lasers.laser_trigger_base": [[142, "module-aslm.model.devices.lasers.laser_trigger_base"]], "lasertriggerbase (class in aslm.model.devices.lasers.laser_trigger_base)": [[143, "aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase"]], "__init__() (aslm.model.devices.lasers.laser_trigger_base.lasertriggerbase method)": [[143, "aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase.__init__"]], "enable_high_resolution_laser() (aslm.model.devices.lasers.laser_trigger_base.lasertriggerbase method)": [[143, "aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase.enable_high_resolution_laser"]], "enable_low_resolution_laser() (aslm.model.devices.lasers.laser_trigger_base.lasertriggerbase method)": [[143, "aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase.enable_low_resolution_laser"]], "set_laser_analog_voltage() (aslm.model.devices.lasers.laser_trigger_base.lasertriggerbase method)": [[143, "aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase.set_laser_analog_voltage"]], "aslm.model.devices.lasers.laser_trigger_synthetic": [[144, "module-aslm.model.devices.lasers.laser_trigger_synthetic"]], "syntheticlasertriggers (class in aslm.model.devices.lasers.laser_trigger_synthetic)": [[145, "aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers"]], "__init__() (aslm.model.devices.lasers.laser_trigger_synthetic.syntheticlasertriggers method)": [[145, "aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers.__init__"]], "enable_high_resolution_laser() (aslm.model.devices.lasers.laser_trigger_synthetic.syntheticlasertriggers method)": [[145, "aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers.enable_high_resolution_laser"]], "enable_low_resolution_laser() (aslm.model.devices.lasers.laser_trigger_synthetic.syntheticlasertriggers method)": [[145, "aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers.enable_low_resolution_laser"]], "set_laser_analog_voltage() (aslm.model.devices.lasers.laser_trigger_synthetic.syntheticlasertriggers method)": [[145, "aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers.set_laser_analog_voltage"]], "aslm.model.devices.objectives": [[146, "module-aslm.model.devices.objectives"]], "objective (class in aslm.model.devices.objectives)": [[147, "aslm.model.devices.objectives.Objective"]], "__init__() (aslm.model.devices.objectives.objective method)": [[147, "aslm.model.devices.objectives.Objective.__init__"]], "calculate_entrance_pupil() (aslm.model.devices.objectives.objective method)": [[147, "aslm.model.devices.objectives.Objective.calculate_entrance_pupil"]], "aslm.model.devices.remote_focus": [[148, "module-aslm.model.devices.remote_focus"]], "aslm.model.devices.remote_focus.remote_focus_base": [[149, "module-aslm.model.devices.remote_focus.remote_focus_base"]], "remotefocusbase (class in aslm.model.devices.remote_focus.remote_focus_base)": [[150, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase"]], "__init__() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[150, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.__init__"]], "aslm.model.devices.remote_focus.remote_focus_equipment_solutions": [[151, "module-aslm.model.devices.remote_focus.remote_focus_equipment_solutions"]], "remotefocusequipmentsolutions (class in aslm.model.devices.remote_focus.remote_focus_equipment_solutions)": [[152, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions"]], "__init__() (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions method)": [[152, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.__init__"]], "baud_rate (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions attribute)": [[152, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.baud_rate"]], "byte_size (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions attribute)": [[152, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.byte_size"]], "close_connection() (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions method)": [[152, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.close_connection"], [152, "id0"]], "comport (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions attribute)": [[152, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.comport"]], "debug (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions attribute)": [[152, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.debug"]], "parity (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions attribute)": [[152, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.parity"]], "read_bytes() (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions method)": [[152, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.read_bytes"], [152, "id1"]], "read_on_init (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions attribute)": [[152, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.read_on_init"]], "send_command() (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions method)": [[152, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.send_command"], [152, "id2"]], "stop_bits (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions attribute)": [[152, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.stop_bits"]], "timeout (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions attribute)": [[152, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.timeout"]], "aslm.model.devices.shutter": [[153, "module-aslm.model.devices.shutter"]], "aslm.model.devices.shutter.laser_shutter_base": [[154, "module-aslm.model.devices.shutter.laser_shutter_base"]], "shutterbase (class in aslm.model.devices.shutter.laser_shutter_base)": [[155, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase"]], "__init__() (aslm.model.devices.shutter.laser_shutter_base.shutterbase method)": [[155, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.__init__"]], "configuration (aslm.model.devices.shutter.laser_shutter_base.shutterbase attribute)": [[155, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.configuration"]], "device_connection (aslm.model.devices.shutter.laser_shutter_base.shutterbase attribute)": [[155, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.device_connection"]], "microscope_name (aslm.model.devices.shutter.laser_shutter_base.shutterbase attribute)": [[155, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.microscope_name"]], "aslm.model.devices.shutter.laser_shutter_synthetic": [[156, "module-aslm.model.devices.shutter.laser_shutter_synthetic"]], "syntheticshutter (class in aslm.model.devices.shutter.laser_shutter_synthetic)": [[157, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter"]], "__init__() (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter method)": [[157, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.__init__"]], "close_shutters() (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter method)": [[157, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.close_shutters"]], "configuration (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter attribute)": [[157, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.configuration"]], "device_connection (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter attribute)": [[157, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.device_connection"]], "microscope_name (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter attribute)": [[157, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.microscope_name"]], "open_left() (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter method)": [[157, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.open_left"]], "open_right() (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter method)": [[157, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.open_right"]], "state() (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter method)": [[157, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.state"]], "aslm.model.devices.stages": [[158, "module-aslm.model.devices.stages"]], "aslm.model.devices.stages.stage_asi": [[159, "module-aslm.model.devices.stages.stage_asi"]], "asistage (class in aslm.model.devices.stages.stage_asi)": [[160, "aslm.model.devices.stages.stage_asi.ASIStage"]], "__init__() (aslm.model.devices.stages.stage_asi.asistage method)": [[160, "aslm.model.devices.stages.stage_asi.ASIStage.__init__"]], "create_internal_position_dict() (aslm.model.devices.stages.stage_asi.asistage method)": [[160, "aslm.model.devices.stages.stage_asi.ASIStage.create_internal_position_dict"]], "create_position_dict() (aslm.model.devices.stages.stage_asi.asistage method)": [[160, "aslm.model.devices.stages.stage_asi.ASIStage.create_position_dict"]], "get_abs_position() (aslm.model.devices.stages.stage_asi.asistage method)": [[160, "aslm.model.devices.stages.stage_asi.ASIStage.get_abs_position"]], "move_absolute() (aslm.model.devices.stages.stage_asi.asistage method)": [[160, "aslm.model.devices.stages.stage_asi.ASIStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_asi.asistage method)": [[160, "aslm.model.devices.stages.stage_asi.ASIStage.move_axis_absolute"]], "report_position() (aslm.model.devices.stages.stage_asi.asistage method)": [[160, "aslm.model.devices.stages.stage_asi.ASIStage.report_position"]], "stop() (aslm.model.devices.stages.stage_asi.asistage method)": [[160, "aslm.model.devices.stages.stage_asi.ASIStage.stop"]], "build_asi_stage_connection() (in module aslm.model.devices.stages.stage_asi)": [[161, "aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection"]], "aslm.model.devices.stages.stage_base": [[162, "module-aslm.model.devices.stages.stage_base"]], "stagebase (class in aslm.model.devices.stages.stage_base)": [[163, "aslm.model.devices.stages.stage_base.StageBase"]], "__init__() (aslm.model.devices.stages.stage_base.stagebase method)": [[163, "aslm.model.devices.stages.stage_base.StageBase.__init__"]], "create_internal_position_dict() (aslm.model.devices.stages.stage_base.stagebase method)": [[163, "aslm.model.devices.stages.stage_base.StageBase.create_internal_position_dict"], [163, "id0"]], "create_position_dict() (aslm.model.devices.stages.stage_base.stagebase method)": [[163, "aslm.model.devices.stages.stage_base.StageBase.create_position_dict"], [163, "id1"]], "get_abs_position() (aslm.model.devices.stages.stage_base.stagebase method)": [[163, "aslm.model.devices.stages.stage_base.StageBase.get_abs_position"]], "stop() (aslm.model.devices.stages.stage_base.stagebase method)": [[163, "aslm.model.devices.stages.stage_base.StageBase.stop"]], "aslm.model.devices.stages.stage_galvo": [[164, "module-aslm.model.devices.stages.stage_galvo"]], "galvonistage (class in aslm.model.devices.stages.stage_galvo)": [[165, "aslm.model.devices.stages.stage_galvo.GalvoNIStage"]], "__init__() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[165, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.__init__"]], "create_internal_position_dict() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[165, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.create_internal_position_dict"]], "create_position_dict() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[165, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.create_position_dict"]], "get_abs_position() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[165, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.get_abs_position"]], "move_absolute() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[165, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[165, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.move_axis_absolute"]], "stop() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[165, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.stop"]], "aslm.model.devices.stages.stage_mcl": [[166, "module-aslm.model.devices.stages.stage_mcl"]], "mclstage (class in aslm.model.devices.stages.stage_mcl)": [[167, "aslm.model.devices.stages.stage_mcl.MCLStage"]], "__init__() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[167, "aslm.model.devices.stages.stage_mcl.MCLStage.__init__"]], "create_internal_position_dict() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[167, "aslm.model.devices.stages.stage_mcl.MCLStage.create_internal_position_dict"]], "create_position_dict() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[167, "aslm.model.devices.stages.stage_mcl.MCLStage.create_position_dict"]], "get_abs_position() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[167, "aslm.model.devices.stages.stage_mcl.MCLStage.get_abs_position"]], "move_absolute() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[167, "aslm.model.devices.stages.stage_mcl.MCLStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[167, "aslm.model.devices.stages.stage_mcl.MCLStage.move_axis_absolute"]], "report_position() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[167, "aslm.model.devices.stages.stage_mcl.MCLStage.report_position"]], "stop() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[167, "aslm.model.devices.stages.stage_mcl.MCLStage.stop"]], "build_mclstage_connection() (in module aslm.model.devices.stages.stage_mcl)": [[168, "aslm.model.devices.stages.stage_mcl.build_MCLStage_connection"]], "aslm.model.devices.stages.stage_pi": [[169, "module-aslm.model.devices.stages.stage_pi"]], "pistage (class in aslm.model.devices.stages.stage_pi)": [[170, "aslm.model.devices.stages.stage_pi.PIStage"]], "__init__() (aslm.model.devices.stages.stage_pi.pistage method)": [[170, "aslm.model.devices.stages.stage_pi.PIStage.__init__"]], "create_internal_position_dict() (aslm.model.devices.stages.stage_pi.pistage method)": [[170, "aslm.model.devices.stages.stage_pi.PIStage.create_internal_position_dict"]], "create_position_dict() (aslm.model.devices.stages.stage_pi.pistage method)": [[170, "aslm.model.devices.stages.stage_pi.PIStage.create_position_dict"]], "get_abs_position() (aslm.model.devices.stages.stage_pi.pistage method)": [[170, "aslm.model.devices.stages.stage_pi.PIStage.get_abs_position"]], "move_absolute() (aslm.model.devices.stages.stage_pi.pistage method)": [[170, "aslm.model.devices.stages.stage_pi.PIStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_pi.pistage method)": [[170, "aslm.model.devices.stages.stage_pi.PIStage.move_axis_absolute"]], "report_position() (aslm.model.devices.stages.stage_pi.pistage method)": [[170, "aslm.model.devices.stages.stage_pi.PIStage.report_position"]], "stop() (aslm.model.devices.stages.stage_pi.pistage method)": [[170, "aslm.model.devices.stages.stage_pi.PIStage.stop"]], "build_pistage_connection() (in module aslm.model.devices.stages.stage_pi)": [[171, "aslm.model.devices.stages.stage_pi.build_PIStage_connection"]], "aslm.model.devices.stages.stage_sutter": [[172, "module-aslm.model.devices.stages.stage_sutter"]], "sutterstage (class in aslm.model.devices.stages.stage_sutter)": [[173, "aslm.model.devices.stages.stage_sutter.SutterStage"]], "__init__() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[173, "aslm.model.devices.stages.stage_sutter.SutterStage.__init__"]], "baudrate (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[173, "aslm.model.devices.stages.stage_sutter.SutterStage.baudrate"]], "check_byte_order() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[173, "aslm.model.devices.stages.stage_sutter.SutterStage.check_byte_order"]], "close() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[173, "aslm.model.devices.stages.stage_sutter.SutterStage.close"], [173, "id0"]], "comport (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[173, "aslm.model.devices.stages.stage_sutter.SutterStage.comport"]], "convert_microns_to_microsteps() (aslm.model.devices.stages.stage_sutter.sutterstage static method)": [[173, "aslm.model.devices.stages.stage_sutter.SutterStage.convert_microns_to_microsteps"]], "convert_microsteps_to_microns() (aslm.model.devices.stages.stage_sutter.sutterstage static method)": [[173, "aslm.model.devices.stages.stage_sutter.SutterStage.convert_microsteps_to_microns"]], "create_internal_position_dict() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[173, "aslm.model.devices.stages.stage_sutter.SutterStage.create_internal_position_dict"]], "create_position_dict() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[173, "aslm.model.devices.stages.stage_sutter.SutterStage.create_position_dict"]], "filter_dictionary (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[173, "aslm.model.devices.stages.stage_sutter.SutterStage.filter_dictionary"]], "flush_buffers() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[173, "aslm.model.devices.stages.stage_sutter.SutterStage.flush_buffers"]], "get_abs_position() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[173, "aslm.model.devices.stages.stage_sutter.SutterStage.get_abs_position"]], "move_absolute() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[173, "aslm.model.devices.stages.stage_sutter.SutterStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[173, "aslm.model.devices.stages.stage_sutter.SutterStage.move_axis_absolute"]], "read() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[173, "aslm.model.devices.stages.stage_sutter.SutterStage.read"]], "report_position() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[173, "aslm.model.devices.stages.stage_sutter.SutterStage.report_position"]], "set_stage_speed_and_resolution() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[173, "aslm.model.devices.stages.stage_sutter.SutterStage.set_stage_speed_and_resolution"]], "stop() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[173, "aslm.model.devices.stages.stage_sutter.SutterStage.stop"]], "baudrate (in module aslm.model.devices.stages.stage_sutter)": [[174, "aslm.model.devices.stages.stage_sutter.baudrate"]], "build_sutter_stage_connection() (in module aslm.model.devices.stages.stage_sutter)": [[174, "aslm.model.devices.stages.stage_sutter.build_sutter_stage_connection"]], "comport (in module aslm.model.devices.stages.stage_sutter)": [[174, "aslm.model.devices.stages.stage_sutter.comport"]], "aslm.model.devices.stages.stage_synthetic": [[175, "module-aslm.model.devices.stages.stage_synthetic"]], "syntheticstage (class in aslm.model.devices.stages.stage_synthetic)": [[176, "aslm.model.devices.stages.stage_synthetic.SyntheticStage"]], "__init__() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[176, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.__init__"]], "create_internal_position_dict() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[176, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.create_internal_position_dict"]], "create_position_dict() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[176, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.create_position_dict"]], "get_abs_position() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[176, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.get_abs_position"]], "move_absolute() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[176, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[176, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.move_axis_absolute"]], "stop() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[176, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.stop"]], "aslm.model.devices.stages.stage_tl_kcube_inertial": [[177, "module-aslm.model.devices.stages.stage_tl_kcube_inertial"]], "tlkimstage (class in aslm.model.devices.stages.stage_tl_kcube_inertial)": [[178, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage"]], "__init__() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[178, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.__init__"]], "create_internal_position_dict() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[178, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.create_internal_position_dict"]], "create_position_dict() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[178, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.create_position_dict"]], "get_abs_position() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[178, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.get_abs_position"]], "move_absolute() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[178, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[178, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.move_axis_absolute"]], "report_position() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[178, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.report_position"]], "stop() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[178, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.stop"]], "build_tlkimstage_connection() (in module aslm.model.devices.stages.stage_tl_kcube_inertial)": [[179, "aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection"]], "aslm.model.devices.zoom": [[180, "module-aslm.model.devices.zoom"]], "aslm.model.devices.zoom.zoom_base": [[181, "module-aslm.model.devices.zoom.zoom_base"]], "zoombase (class in aslm.model.devices.zoom.zoom_base)": [[182, "aslm.model.devices.zoom.zoom_base.ZoomBase"]], "__init__() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[182, "aslm.model.devices.zoom.zoom_base.ZoomBase.__init__"]], "move() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[182, "aslm.model.devices.zoom.zoom_base.ZoomBase.move"]], "read_position() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[182, "aslm.model.devices.zoom.zoom_base.ZoomBase.read_position"]], "set_zoom() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[182, "aslm.model.devices.zoom.zoom_base.ZoomBase.set_zoom"]], "aslm.model.devices.zoom.zoom_synthetic": [[183, "module-aslm.model.devices.zoom.zoom_synthetic"]], "syntheticzoom (class in aslm.model.devices.zoom.zoom_synthetic)": [[184, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom"]], "__init__() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[184, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.__init__"]], "move() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[184, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.move"], [184, "id0"]], "read_position() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[184, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.read_position"], [184, "id1"]], "set_zoom() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[184, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.set_zoom"], [184, "id2"]], "aslm.model.dummy": [[185, "module-aslm.model.dummy"]], "dummydevice (class in aslm.model.dummy)": [[186, "aslm.model.dummy.DummyDevice"]], "__init__() (aslm.model.dummy.dummydevice method)": [[186, "aslm.model.dummy.DummyDevice.__init__"]], "dummymodel (class in aslm.model.dummy)": [[187, "aslm.model.dummy.DummyModel"]], "__init__() (aslm.model.dummy.dummymodel method)": [[187, "aslm.model.dummy.DummyModel.__init__"]], "aslm.model.features": [[188, "module-aslm.model.features"]], "aslm.model.features.autofocus": [[189, "module-aslm.model.features.autofocus"]], "autofocus (class in aslm.model.features.autofocus)": [[190, "aslm.model.features.autofocus.Autofocus"]], "__init__() (aslm.model.features.autofocus.autofocus method)": [[190, "aslm.model.features.autofocus.Autofocus.__init__"]], "get_autofocus_frame_num() (aslm.model.features.autofocus.autofocus method)": [[190, "aslm.model.features.autofocus.Autofocus.get_autofocus_frame_num"]], "get_steps() (aslm.model.features.autofocus.autofocus static method)": [[190, "aslm.model.features.autofocus.Autofocus.get_steps"]], "run() (aslm.model.features.autofocus.autofocus method)": [[190, "aslm.model.features.autofocus.Autofocus.run"]], "aslm.model.features.common_features": [[191, "module-aslm.model.features.common_features"]], "changeresolution (class in aslm.model.features.common_features)": [[192, "aslm.model.features.common_features.ChangeResolution"]], "__init__() (aslm.model.features.common_features.changeresolution method)": [[192, "aslm.model.features.common_features.ChangeResolution.__init__"]], "findtissuesimple2d (class in aslm.model.features.common_features)": [[193, "aslm.model.features.common_features.FindTissueSimple2D"]], "__init__() (aslm.model.features.common_features.findtissuesimple2d method)": [[193, "aslm.model.features.common_features.FindTissueSimple2D.__init__"]], "snap (class in aslm.model.features.common_features)": [[194, "aslm.model.features.common_features.Snap"]], "__init__() (aslm.model.features.common_features.snap method)": [[194, "aslm.model.features.common_features.Snap.__init__"]], "waittocontinue (class in aslm.model.features.common_features)": [[195, "aslm.model.features.common_features.WaitToContinue"]], "__init__() (aslm.model.features.common_features.waittocontinue method)": [[195, "aslm.model.features.common_features.WaitToContinue.__init__"]], "zstackacquisition (class in aslm.model.features.common_features)": [[196, "aslm.model.features.common_features.ZStackAcquisition"]], "__init__() (aslm.model.features.common_features.zstackacquisition method)": [[196, "aslm.model.features.common_features.ZStackAcquisition.__init__"]], "aslm.model.features.dummy_detective": [[197, "module-aslm.model.features.dummy_detective"]], "dummy_detective (class in aslm.model.features.dummy_detective)": [[198, "aslm.model.features.dummy_detective.Dummy_Detective"]], "__init__() (aslm.model.features.dummy_detective.dummy_detective method)": [[198, "aslm.model.features.dummy_detective.Dummy_Detective.__init__"]], "aslm.model.features.feature_container": [[199, "module-aslm.model.features.feature_container"]], "container (class in aslm.model.features.feature_container)": [[200, "aslm.model.features.feature_container.Container"]], "__init__() (aslm.model.features.feature_container.container method)": [[200, "aslm.model.features.feature_container.Container.__init__"]], "datacontainer (class in aslm.model.features.feature_container)": [[201, "aslm.model.features.feature_container.DataContainer"]], "__init__() (aslm.model.features.feature_container.datacontainer method)": [[201, "aslm.model.features.feature_container.DataContainer.__init__"]], "datanode (class in aslm.model.features.feature_container)": [[202, "aslm.model.features.feature_container.DataNode"]], "__init__() (aslm.model.features.feature_container.datanode method)": [[202, "aslm.model.features.feature_container.DataNode.__init__"]], "signalcontainer (class in aslm.model.features.feature_container)": [[203, "aslm.model.features.feature_container.SignalContainer"]], "__init__() (aslm.model.features.feature_container.signalcontainer method)": [[203, "aslm.model.features.feature_container.SignalContainer.__init__"]], "signalnode (class in aslm.model.features.feature_container)": [[204, "aslm.model.features.feature_container.SignalNode"]], "__init__() (aslm.model.features.feature_container.signalnode method)": [[204, "aslm.model.features.feature_container.SignalNode.__init__"]], "treenode (class in aslm.model.features.feature_container)": [[205, "aslm.model.features.feature_container.TreeNode"]], "__init__() (aslm.model.features.feature_container.treenode method)": [[205, "aslm.model.features.feature_container.TreeNode.__init__"]], "dummy_true() (in module aslm.model.features.feature_container)": [[206, "aslm.model.features.feature_container.dummy_True"]], "dummy_func() (in module aslm.model.features.feature_container)": [[207, "aslm.model.features.feature_container.dummy_func"]], "get_registered_funcs() (in module aslm.model.features.feature_container)": [[208, "aslm.model.features.feature_container.get_registered_funcs"]], "load_features() (in module aslm.model.features.feature_container)": [[209, "aslm.model.features.feature_container.load_features"]], "aslm.model.features.image_writer": [[210, "module-aslm.model.features.image_writer"]], "imagewriter (class in aslm.model.features.image_writer)": [[211, "aslm.model.features.image_writer.ImageWriter"]], "__init__() (aslm.model.features.image_writer.imagewriter method)": [[211, "aslm.model.features.image_writer.ImageWriter.__init__"]], "close() (aslm.model.features.image_writer.imagewriter method)": [[211, "aslm.model.features.image_writer.ImageWriter.close"]], "generate_image_name() (aslm.model.features.image_writer.imagewriter method)": [[211, "aslm.model.features.image_writer.ImageWriter.generate_image_name"]], "save_image() (aslm.model.features.image_writer.imagewriter method)": [[211, "aslm.model.features.image_writer.ImageWriter.save_image"]], "aslm.model.features.restful_features": [[212, "module-aslm.model.features.restful_features"]], "ilastiksegmentation (class in aslm.model.features.restful_features)": [[213, "aslm.model.features.restful_features.IlastikSegmentation"]], "__init__() (aslm.model.features.restful_features.ilastiksegmentation method)": [[213, "aslm.model.features.restful_features.IlastikSegmentation.__init__"]], "prepare_service() (in module aslm.model.features.restful_features)": [[214, "aslm.model.features.restful_features.prepare_service"]], "aslm.model.features.volume_search": [[215, "module-aslm.model.features.volume_search"]], "volumesearch (class in aslm.model.features.volume_search)": [[216, "aslm.model.features.volume_search.VolumeSearch"]], "__init__() (aslm.model.features.volume_search.volumesearch method)": [[216, "aslm.model.features.volume_search.VolumeSearch.__init__"]], "aslm.model.metadata_sources": [[217, "module-aslm.model.metadata_sources"]], "aslm.model.metadata_sources.bdv_metadata": [[218, "module-aslm.model.metadata_sources.bdv_metadata"]], "bigdataviewermetadata (class in aslm.model.metadata_sources.bdv_metadata)": [[219, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata"]], "__init__() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[219, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.__init__"]], "parse_bdv_xml() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[219, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.parse_bdv_xml"]], "shape (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata property)": [[219, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.shape"]], "stage_positions_to_affine_matrix() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[219, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.stage_positions_to_affine_matrix"]], "to_xml() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[219, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.to_xml"]], "voxel_size (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata property)": [[219, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.voxel_size"]], "write_xml() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[219, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.write_xml"]], "aslm.model.metadata_sources.metadata": [[220, "module-aslm.model.metadata_sources.metadata"]], "metadata (class in aslm.model.metadata_sources.metadata)": [[221, "aslm.model.metadata_sources.metadata.Metadata"]], "__init__() (aslm.model.metadata_sources.metadata.metadata method)": [[221, "aslm.model.metadata_sources.metadata.Metadata.__init__"]], "shape (aslm.model.metadata_sources.metadata.metadata property)": [[221, "aslm.model.metadata_sources.metadata.Metadata.shape"]], "voxel_size (aslm.model.metadata_sources.metadata.metadata property)": [[221, "aslm.model.metadata_sources.metadata.Metadata.voxel_size"]], "xmlmetadata (class in aslm.model.metadata_sources.metadata)": [[222, "aslm.model.metadata_sources.metadata.XMLMetadata"]], "__init__() (aslm.model.metadata_sources.metadata.xmlmetadata method)": [[222, "aslm.model.metadata_sources.metadata.XMLMetadata.__init__"]], "shape (aslm.model.metadata_sources.metadata.xmlmetadata property)": [[222, "aslm.model.metadata_sources.metadata.XMLMetadata.shape"]], "to_xml() (aslm.model.metadata_sources.metadata.xmlmetadata method)": [[222, "aslm.model.metadata_sources.metadata.XMLMetadata.to_xml"]], "voxel_size (aslm.model.metadata_sources.metadata.xmlmetadata property)": [[222, "aslm.model.metadata_sources.metadata.XMLMetadata.voxel_size"]], "write_xml() (aslm.model.metadata_sources.metadata.xmlmetadata method)": [[222, "aslm.model.metadata_sources.metadata.XMLMetadata.write_xml"]], "aslm.model.metadata_sources.ome_tiff_metadata": [[223, "module-aslm.model.metadata_sources.ome_tiff_metadata"]], "ometiffmetadata (class in aslm.model.metadata_sources.ome_tiff_metadata)": [[224, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata"]], "__init__() (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata method)": [[224, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.__init__"]], "ome_tiff_xml_dict() (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata method)": [[224, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.ome_tiff_xml_dict"]], "shape (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata property)": [[224, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.shape"]], "to_xml() (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata method)": [[224, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.to_xml"]], "voxel_size (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata property)": [[224, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.voxel_size"]], "write_xml() (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata method)": [[224, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.write_xml"]], "aslm.model.microscope": [[225, "module-aslm.model.microscope"]], "microscope (class in aslm.model.microscope)": [[226, "aslm.model.microscope.Microscope"]], "__init__() (aslm.model.microscope.microscope method)": [[226, "aslm.model.microscope.Microscope.__init__"]], "get_readout_time() (aslm.model.microscope.microscope method)": [[226, "aslm.model.microscope.Microscope.get_readout_time"]], "aslm.model.model": [[227, "module-aslm.model.model"]], "model (class in aslm.model.model)": [[228, "aslm.model.model.Model"]], "use_gpu (aslm.model.model.model attribute)": [[228, "aslm.model.model.Model.USE_GPU"]], "__init__() (aslm.model.model.model method)": [[228, "aslm.model.model.Model.__init__"]], "args (aslm.model.model.model attribute)": [[228, "aslm.model.model.Model.args"]], "change_resolution() (aslm.model.model.model method)": [[228, "aslm.model.model.Model.change_resolution"]], "configuration_path (aslm.model.model.model attribute)": [[228, "aslm.model.model.Model.configuration_path"]], "create_pipe() (aslm.model.model.model method)": [[228, "aslm.model.model.Model.create_pipe"], [228, "id0"]], "end_acquisition() (aslm.model.model.model method)": [[228, "aslm.model.model.Model.end_acquisition"], [228, "id1"]], "event_queue (aslm.model.model.model attribute)": [[228, "aslm.model.model.Model.event_queue"]], "experiment_path (aslm.model.model.model attribute)": [[228, "aslm.model.model.Model.experiment_path"]], "get_data_buffer() (aslm.model.model.model method)": [[228, "aslm.model.model.Model.get_data_buffer"], [228, "id2"]], "get_readout_time() (aslm.model.model.model method)": [[228, "aslm.model.model.Model.get_readout_time"]], "get_stage_position() (aslm.model.model.model method)": [[228, "aslm.model.model.Model.get_stage_position"]], "load_images() (aslm.model.model.model method)": [[228, "aslm.model.model.Model.load_images"]], "move_stage() (aslm.model.model.model method)": [[228, "aslm.model.model.Model.move_stage"], [228, "id3"]], "prepare_acquisition() (aslm.model.model.model method)": [[228, "aslm.model.model.Model.prepare_acquisition"], [228, "id4"]], "release_pipe() (aslm.model.model.model method)": [[228, "aslm.model.model.Model.release_pipe"], [228, "id5"]], "run_acquisition() (aslm.model.model.model method)": [[228, "aslm.model.model.Model.run_acquisition"]], "run_command() (aslm.model.model.model method)": [[228, "aslm.model.model.Model.run_command"], [228, "id6"]], "run_data_process() (aslm.model.model.model method)": [[228, "aslm.model.model.Model.run_data_process"], [228, "id7"]], "run_live_acquisition() (aslm.model.model.model method)": [[228, "aslm.model.model.Model.run_live_acquisition"], [228, "id8"]], "run_single_acquisition() (aslm.model.model.model method)": [[228, "aslm.model.model.Model.run_single_acquisition"], [228, "id9"]], "run_single_channel_acquisition() (aslm.model.model.model method)": [[228, "aslm.model.model.Model.run_single_channel_acquisition"], [228, "id10"]], "run_single_channel_acquisition_with_features() (aslm.model.model.model method)": [[228, "aslm.model.model.Model.run_single_channel_acquisition_with_features"], [228, "id11"]], "run_z_stack_acquisition() (aslm.model.model.model method)": [[228, "aslm.model.model.Model.run_z_stack_acquisition"]], "snap_image() (aslm.model.model.model method)": [[228, "aslm.model.model.Model.snap_image"], [228, "id12"]], "stop_stage() (aslm.model.model.model method)": [[228, "aslm.model.model.Model.stop_stage"]], "update_data_buffer() (aslm.model.model.model method)": [[228, "aslm.model.model.Model.update_data_buffer"], [228, "id13"]], "aslm.model.waveforms": [[229, "module-aslm.model.waveforms"]], "camera_exposure() (in module aslm.model.waveforms)": [[230, "aslm.model.waveforms.camera_exposure"]], "dc_value() (in module aslm.model.waveforms)": [[231, "aslm.model.waveforms.dc_value"]], "sawtooth() (in module aslm.model.waveforms)": [[232, "aslm.model.waveforms.sawtooth"]], "sine_wave() (in module aslm.model.waveforms)": [[233, "aslm.model.waveforms.sine_wave"]], "single_pulse() (in module aslm.model.waveforms)": [[234, "aslm.model.waveforms.single_pulse"]], "smooth_waveform() (in module aslm.model.waveforms)": [[235, "aslm.model.waveforms.smooth_waveform"]], "square() (in module aslm.model.waveforms)": [[236, "aslm.model.waveforms.square"]], "tunable_lens_ramp() (in module aslm.model.waveforms)": [[237, "aslm.model.waveforms.tunable_lens_ramp"]], "aslm.tools": [[238, "module-aslm.tools"]], "aslm.tools.beams": [[239, "module-aslm.tools.beams"]], "fit_gaussian_beam_error() (in module aslm.tools.beams)": [[240, "aslm.tools.beams.fit_gaussian_beam_error"]], "fit_gaussian_beam_mse() (in module aslm.tools.beams)": [[241, "aslm.tools.beams.fit_gaussian_beam_mse"]], "gaussian_beam() (in module aslm.tools.beams)": [[242, "aslm.tools.beams.gaussian_beam"]], "aslm.tools.common_dict_tools": [[243, "module-aslm.tools.common_dict_tools"]], "update_settings_common() (in module aslm.tools.common_dict_tools)": [[244, "aslm.tools.common_dict_tools.update_settings_common"]], "update_stage_dict() (in module aslm.tools.common_dict_tools)": [[245, "aslm.tools.common_dict_tools.update_stage_dict"]], "aslm.tools.common_functions": [[246, "module-aslm.tools.common_functions"]], "build_ref_name() (in module aslm.tools.common_functions)": [[247, "aslm.tools.common_functions.build_ref_name"]], "combine_funcs() (in module aslm.tools.common_functions)": [[248, "aslm.tools.common_functions.combine_funcs"]], "copy_proxy_object() (in module aslm.tools.common_functions)": [[249, "aslm.tools.common_functions.copy_proxy_object"]], "aslm.tools.decorators": [[250, "module-aslm.tools.decorators"]], "function_timer() (in module aslm.tools.decorators)": [[251, "aslm.tools.decorators.function_timer"]], "aslm.tools.file_functions": [[252, "module-aslm.tools.file_functions"]], "create_save_path() (in module aslm.tools.file_functions)": [[253, "aslm.tools.file_functions.create_save_path"]], "save_yaml_file() (in module aslm.tools.file_functions)": [[254, "aslm.tools.file_functions.save_yaml_file"]], "aslm.tools.image": [[255, "module-aslm.tools.image"]], "text_array() (in module aslm.tools.image)": [[256, "aslm.tools.image.text_array"]], "aslm.tools.image_loaders": [[257, "module-aslm.tools.image_loaders"]], "lazytiff (class in aslm.tools.image_loaders)": [[258, "aslm.tools.image_loaders.LazyTiff"]], "__init__() (aslm.tools.image_loaders.lazytiff method)": [[258, "aslm.tools.image_loaders.LazyTiff.__init__"]], "aslm.tools.multipos_table_tools": [[259, "module-aslm.tools.multipos_table_tools"]], "calc_num_tiles() (in module aslm.tools.multipos_table_tools)": [[260, "aslm.tools.multipos_table_tools.calc_num_tiles"]], "compute_tiles_from_bounding_box() (in module aslm.tools.multipos_table_tools)": [[261, "aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box"]], "sign() (in module aslm.tools.multipos_table_tools)": [[262, "aslm.tools.multipos_table_tools.sign"]], "update_table() (in module aslm.tools.multipos_table_tools)": [[263, "aslm.tools.multipos_table_tools.update_table"]], "aslm.tools.project_stats": [[264, "module-aslm.tools.project_stats"]], "countlines() (in module aslm.tools.project_stats)": [[265, "aslm.tools.project_stats.countlines"]], "aslm.tools.xml_tools": [[266, "module-aslm.tools.xml_tools"]], "dict_to_xml() (in module aslm.tools.xml_tools)": [[267, "aslm.tools.xml_tools.dict_to_xml"]], "parse_xml() (in module aslm.tools.xml_tools)": [[268, "aslm.tools.xml_tools.parse_xml"]], "aslm.view": [[269, "module-aslm.view"]], "aslm.view.main_window_content": [[270, "module-aslm.view.main_window_content"]], "aslm.view.main_window_content.acquire_bar_frame": [[271, "module-aslm.view.main_window_content.acquire_bar_frame"]], "aslm.view.main_window_content.channel_settings": [[272, "module-aslm.view.main_window_content.channel_settings"]], "aslm.view.main_window_content.channel_settings.channel_settings_frames": [[273, "module-aslm.view.main_window_content.channel_settings.channel_settings_frames"]], "aslm.view.main_window_content.stage_control": [[274, "module-aslm.view.main_window_content.stage_control"]], "aslm.view.main_window_content.stage_control.stage_control_frames": [[275, "module-aslm.view.main_window_content.stage_control.stage_control_frames"]], "aslm.view.menus": [[276, "module-aslm.view.menus"]]}})