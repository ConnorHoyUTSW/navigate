Search.setIndex({"docnames": ["_autosummary/aslm.config", "_autosummary/aslm.config.config", "_autosummary/aslm.config.config.build_nested_dict", "_autosummary/aslm.config.config.get_aslm_path", "_autosummary/aslm.config.config.get_configuration_paths", "_autosummary/aslm.config.config.load_configs", "_autosummary/aslm.config.config.update_config_dict", "_autosummary/aslm.config.config.verify_configuration", "_autosummary/aslm.controller", "_autosummary/aslm.controller.configuration_controller", "_autosummary/aslm.controller.configuration_controller.ConfigurationController", "_autosummary/aslm.controller.thread_pool", "_autosummary/aslm.controller.thread_pool.SelfLockThread", "_autosummary/aslm.controller.thread_pool.SynchronizedThreadPool", "_autosummary/aslm.controller.thread_pool.ThreadWaitlist", "_autosummary/aslm.model", "_autosummary/aslm.model.analysis", "_autosummary/aslm.model.analysis.boundary_detect", "_autosummary/aslm.model.analysis.boundary_detect.binary_detect", "_autosummary/aslm.model.analysis.boundary_detect.find_tissue_boundary_2d", "_autosummary/aslm.model.analysis.boundary_detect.has_tissue", "_autosummary/aslm.model.analysis.boundary_detect.map_boundary", "_autosummary/aslm.model.analysis.camera", "_autosummary/aslm.model.analysis.camera.compute_flatfield_map", "_autosummary/aslm.model.analysis.camera.compute_noise_sigma", "_autosummary/aslm.model.analysis.camera.compute_scmos_offset_and_variance_map", "_autosummary/aslm.model.analysis.camera.compute_signal_to_noise", "_autosummary/aslm.model.analysis.detection", "_autosummary/aslm.model.analysis.detection.add_median_border", "_autosummary/aslm.model.analysis.detection.combine_images", "_autosummary/aslm.model.analysis.detection.log_detection", "_autosummary/aslm.model.analysis.detection.make_inside_image", "_autosummary/aslm.model.analysis.detection.make_normalized_image", "_autosummary/aslm.model.analysis.detection.make_sphere_3D", "_autosummary/aslm.model.analysis.detection.multiscale_surface_filter_3D", "_autosummary/aslm.model.analysis.detection.surface_filter_gauss_3D", "_autosummary/aslm.model.analysis.detection.three_level_segmentation", "_autosummary/aslm.model.analysis.image_contrast", "_autosummary/aslm.model.analysis.image_contrast.estimate_and_correct_flatfield", "_autosummary/aslm.model.analysis.image_contrast.estimate_image_resolution", "_autosummary/aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy", "_autosummary/aslm.model.analysis.image_contrast.image_intensity", "_autosummary/aslm.model.analysis.image_contrast.normalized_dct_shannon_entropy", "_autosummary/aslm.model.analysis.image_decorrelation", "_autosummary/aslm.model.analysis.image_decorrelation.apodize_image", "_autosummary/aslm.model.analysis.image_decorrelation.get_correlation_coefficient", "_autosummary/aslm.model.analysis.image_decorrelation.get_decorrelation_local_maxima", "_autosummary/aslm.model.analysis.image_decorrelation.get_image_decorrelation", "_autosummary/aslm.model.analysis.image_decorrelation.get_radial_average", "_autosummary/aslm.model.analysis.image_decorrelation.image_to_polar", "_autosummary/aslm.model.analysis.image_decorrelation.linear_map", "_autosummary/aslm.model.analysis.image_decorrelation.main_image_decorr", "_autosummary/aslm.model.analysis.image_transform", "_autosummary/aslm.model.analysis.image_transform.deskew_image", "_autosummary/aslm.model.analysis.image_transform.initiate_gpu", "_autosummary/aslm.model.analysis.spectral_unmixing", "_autosummary/aslm.model.analysis.spectral_unmixing.to_do", "_autosummary/aslm.model.concurrency", "_autosummary/aslm.model.concurrency.concurrency_tools", "_autosummary/aslm.model.concurrency.concurrency_tools.CustodyThread", "_autosummary/aslm.model.concurrency.concurrency_tools.FancyThread", "_autosummary/aslm.model.concurrency.concurrency_tools.MyTestClass", "_autosummary/aslm.model.concurrency.concurrency_tools.ObjectInSubprocess", "_autosummary/aslm.model.concurrency.concurrency_tools.PoliteThread", "_autosummary/aslm.model.concurrency.concurrency_tools.ResultThread", "_autosummary/aslm.model.concurrency.concurrency_tools.SharedNDArray", "_autosummary/aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess", "_autosummary/aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread", "_autosummary/aslm.model.concurrency.concurrency_tools.TestSharedNDArray", "_autosummary/aslm.model.concurrency.proxy_objects", "_autosummary/aslm.model.concurrency.proxy_objects.ProxyManager", "_autosummary/aslm.model.concurrency.proxy_objects.ProxyObject", "_autosummary/aslm.model.concurrency.proxy_objects.launch_custody_thread", "_autosummary/aslm.model.concurrency.proxy_objects.launch_thread", "_autosummary/aslm.model.concurrency.write_parameters", "_autosummary/aslm.model.concurrency.write_parameters.write_Params", "_autosummary/aslm.model.data_sources", "_autosummary/aslm.model.data_sources.bdv_data_source", "_autosummary/aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource", "_autosummary/aslm.model.data_sources.data_source", "_autosummary/aslm.model.data_sources.data_source.DataSource", "_autosummary/aslm.model.data_sources.get_data_source", "_autosummary/aslm.model.data_sources.tiff_data_source", "_autosummary/aslm.model.data_sources.tiff_data_source.TiffDataSource", "_autosummary/aslm.model.data_sources.zarr_data_source", "_autosummary/aslm.model.data_sources.zarr_data_source.ZarrDataSource", "_autosummary/aslm.model.device_startup_functions", "_autosummary/aslm.model.device_startup_functions.DummyDeviceConnection", "_autosummary/aslm.model.device_startup_functions.auto_redial", "_autosummary/aslm.model.device_startup_functions.device_not_found", "_autosummary/aslm.model.device_startup_functions.load_camera_connection", "_autosummary/aslm.model.device_startup_functions.load_devices", "_autosummary/aslm.model.device_startup_functions.load_filter_wheel_connection", "_autosummary/aslm.model.device_startup_functions.load_stages", "_autosummary/aslm.model.device_startup_functions.load_zoom_connection", "_autosummary/aslm.model.device_startup_functions.start_camera", "_autosummary/aslm.model.device_startup_functions.start_daq", "_autosummary/aslm.model.device_startup_functions.start_filter_wheel", "_autosummary/aslm.model.device_startup_functions.start_galvo", "_autosummary/aslm.model.device_startup_functions.start_lasers", "_autosummary/aslm.model.device_startup_functions.start_remote_focus_device", "_autosummary/aslm.model.device_startup_functions.start_shutter", "_autosummary/aslm.model.device_startup_functions.start_stage", "_autosummary/aslm.model.device_startup_functions.start_zoom", "_autosummary/aslm.model.devices", "_autosummary/aslm.model.devices.APIs", "_autosummary/aslm.model.devices.APIs.coherent", "_autosummary/aslm.model.devices.APIs.dynamixel", "_autosummary/aslm.model.devices.APIs.logitech", "_autosummary/aslm.model.devices.APIs.omicron", "_autosummary/aslm.model.devices.camera", "_autosummary/aslm.model.devices.camera.camera_base", "_autosummary/aslm.model.devices.camera.camera_base.CameraBase", "_autosummary/aslm.model.devices.camera.camera_hamamatsu", "_autosummary/aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca", "_autosummary/aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning", "_autosummary/aslm.model.devices.camera.camera_photometrics", "_autosummary/aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix", "_autosummary/aslm.model.devices.camera.camera_synthetic", "_autosummary/aslm.model.devices.camera.camera_synthetic.SyntheticCamera", "_autosummary/aslm.model.devices.camera.camera_synthetic.SyntheticCameraController", "_autosummary/aslm.model.devices.daq", "_autosummary/aslm.model.devices.daq.daq_base", "_autosummary/aslm.model.devices.daq.daq_base.DAQBase", "_autosummary/aslm.model.devices.daq.daq_synthetic", "_autosummary/aslm.model.devices.daq.daq_synthetic.SyntheticDAQ", "_autosummary/aslm.model.devices.filter_wheel", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_asi", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_asi.build_filter_wheel_connection", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_base", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_synthetic", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel", "_autosummary/aslm.model.devices.galvo", "_autosummary/aslm.model.devices.galvo.galvo_base", "_autosummary/aslm.model.devices.galvo.galvo_base.GalvoBase", "_autosummary/aslm.model.devices.galvo.galvo_synthetic", "_autosummary/aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo", "_autosummary/aslm.model.devices.joystick", "_autosummary/aslm.model.devices.joystick.joystick_base", "_autosummary/aslm.model.devices.joystick.joystick_base.JoystickBase", "_autosummary/aslm.model.devices.joystick.joystick_synthetic", "_autosummary/aslm.model.devices.joystick.joystick_synthetic.SyntheticJoystick", "_autosummary/aslm.model.devices.lasers", "_autosummary/aslm.model.devices.lasers.laser_base", "_autosummary/aslm.model.devices.lasers.laser_base.LaserBase", "_autosummary/aslm.model.devices.lasers.laser_synthetic", "_autosummary/aslm.model.devices.lasers.laser_synthetic.SyntheticLaser", "_autosummary/aslm.model.devices.lasers.laser_trigger_base", "_autosummary/aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase", "_autosummary/aslm.model.devices.lasers.laser_trigger_synthetic", "_autosummary/aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers", "_autosummary/aslm.model.devices.objectives", "_autosummary/aslm.model.devices.objectives.Objective", "_autosummary/aslm.model.devices.remote_focus", "_autosummary/aslm.model.devices.remote_focus.remote_focus_base", "_autosummary/aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase", "_autosummary/aslm.model.devices.remote_focus.remote_focus_synthetic", "_autosummary/aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus", "_autosummary/aslm.model.devices.shutter", "_autosummary/aslm.model.devices.shutter.laser_shutter_base", "_autosummary/aslm.model.devices.shutter.laser_shutter_base.ShutterBase", "_autosummary/aslm.model.devices.shutter.laser_shutter_synthetic", "_autosummary/aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter", "_autosummary/aslm.model.devices.stages", "_autosummary/aslm.model.devices.stages.stage_asi", "_autosummary/aslm.model.devices.stages.stage_asi.ASIStage", "_autosummary/aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection", "_autosummary/aslm.model.devices.stages.stage_base", "_autosummary/aslm.model.devices.stages.stage_base.StageBase", "_autosummary/aslm.model.devices.stages.stage_galvo", "_autosummary/aslm.model.devices.stages.stage_galvo.GalvoNIStage", "_autosummary/aslm.model.devices.stages.stage_mcl", "_autosummary/aslm.model.devices.stages.stage_mcl.MCLStage", "_autosummary/aslm.model.devices.stages.stage_mcl.build_MCLStage_connection", "_autosummary/aslm.model.devices.stages.stage_pi", "_autosummary/aslm.model.devices.stages.stage_pi.PIStage", "_autosummary/aslm.model.devices.stages.stage_pi.build_PIStage_connection", "_autosummary/aslm.model.devices.stages.stage_sutter", "_autosummary/aslm.model.devices.stages.stage_sutter.SutterStage", "_autosummary/aslm.model.devices.stages.stage_sutter.build_MP285_connection", "_autosummary/aslm.model.devices.stages.stage_synthetic", "_autosummary/aslm.model.devices.stages.stage_synthetic.SyntheticStage", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection", "_autosummary/aslm.model.devices.zoom", "_autosummary/aslm.model.devices.zoom.zoom_base", "_autosummary/aslm.model.devices.zoom.zoom_base.ZoomBase", "_autosummary/aslm.model.devices.zoom.zoom_synthetic", "_autosummary/aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom", "_autosummary/aslm.model.dummy", "_autosummary/aslm.model.dummy.DummyController", "_autosummary/aslm.model.dummy.DummyDevice", "_autosummary/aslm.model.dummy.DummyMicroscope", "_autosummary/aslm.model.dummy.DummyModel", "_autosummary/aslm.model.features", "_autosummary/aslm.model.features.auto_tile_scan", "_autosummary/aslm.model.features.auto_tile_scan.CalculateFocusRange", "_autosummary/aslm.model.features.autofocus", "_autosummary/aslm.model.features.autofocus.Autofocus", "_autosummary/aslm.model.features.autofocus.power_tent", "_autosummary/aslm.model.features.common_features", "_autosummary/aslm.model.features.common_features.ChangeResolution", "_autosummary/aslm.model.features.common_features.ConProAcquisition", "_autosummary/aslm.model.features.common_features.FindTissueSimple2D", "_autosummary/aslm.model.features.common_features.LoopByCount", "_autosummary/aslm.model.features.common_features.MoveToNextPositionInMultiPostionTable", "_autosummary/aslm.model.features.common_features.PrepareNextChannel", "_autosummary/aslm.model.features.common_features.Snap", "_autosummary/aslm.model.features.common_features.StackPause", "_autosummary/aslm.model.features.common_features.WaitToContinue", "_autosummary/aslm.model.features.common_features.ZStackAcquisition", "_autosummary/aslm.model.features.constant_velocity_acquisition", "_autosummary/aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition", "_autosummary/aslm.model.features.dummy_detective", "_autosummary/aslm.model.features.dummy_detective.Dummy_Detective", "_autosummary/aslm.model.features.feature_container", "_autosummary/aslm.model.features.feature_container.Container", "_autosummary/aslm.model.features.feature_container.DataContainer", "_autosummary/aslm.model.features.feature_container.DataNode", "_autosummary/aslm.model.features.feature_container.SignalContainer", "_autosummary/aslm.model.features.feature_container.SignalNode", "_autosummary/aslm.model.features.feature_container.TreeNode", "_autosummary/aslm.model.features.feature_container.dummy_True", "_autosummary/aslm.model.features.feature_container.dummy_func", "_autosummary/aslm.model.features.feature_container.get_registered_funcs", "_autosummary/aslm.model.features.feature_container.load_features", "_autosummary/aslm.model.features.feature_related_functions", "_autosummary/aslm.model.features.feature_related_functions.convert_feature_list_to_str", "_autosummary/aslm.model.features.feature_related_functions.convert_str_to_feature_list", "_autosummary/aslm.model.features.image_writer", "_autosummary/aslm.model.features.image_writer.ImageWriter", "_autosummary/aslm.model.features.restful_features", "_autosummary/aslm.model.features.restful_features.IlastikSegmentation", "_autosummary/aslm.model.features.restful_features.prepare_service", "_autosummary/aslm.model.features.volume_search", "_autosummary/aslm.model.features.volume_search.VolumeSearch", "_autosummary/aslm.model.features.volume_search.draw_box", "_autosummary/aslm.model.metadata_sources", "_autosummary/aslm.model.metadata_sources.bdv_metadata", "_autosummary/aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata", "_autosummary/aslm.model.metadata_sources.metadata", "_autosummary/aslm.model.metadata_sources.metadata.Metadata", "_autosummary/aslm.model.metadata_sources.metadata.XMLMetadata", "_autosummary/aslm.model.metadata_sources.ome_tiff_metadata", "_autosummary/aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata", "_autosummary/aslm.model.microscope", "_autosummary/aslm.model.microscope.Microscope", "_autosummary/aslm.model.model", "_autosummary/aslm.model.model.Model", "_autosummary/aslm.model.waveforms", "_autosummary/aslm.model.waveforms.camera_exposure", "_autosummary/aslm.model.waveforms.dc_value", "_autosummary/aslm.model.waveforms.remote_focus_ramp", "_autosummary/aslm.model.waveforms.sawtooth", "_autosummary/aslm.model.waveforms.sine_wave", "_autosummary/aslm.model.waveforms.single_pulse", "_autosummary/aslm.model.waveforms.smooth_waveform", "_autosummary/aslm.model.waveforms.square", "_autosummary/aslm.tools", "_autosummary/aslm.tools.beams", "_autosummary/aslm.tools.beams.fit_gaussian_beam_error", "_autosummary/aslm.tools.beams.fit_gaussian_beam_mse", "_autosummary/aslm.tools.beams.gaussian_beam", "_autosummary/aslm.tools.common_dict_tools", "_autosummary/aslm.tools.common_dict_tools.update_stage_dict", "_autosummary/aslm.tools.common_functions", "_autosummary/aslm.tools.common_functions.VariableWithLock", "_autosummary/aslm.tools.common_functions.build_ref_name", "_autosummary/aslm.tools.common_functions.combine_funcs", "_autosummary/aslm.tools.common_functions.copy_proxy_object", "_autosummary/aslm.tools.common_functions.load_module_from_file", "_autosummary/aslm.tools.decorators", "_autosummary/aslm.tools.decorators.FeatureList", "_autosummary/aslm.tools.decorators.function_timer", "_autosummary/aslm.tools.file_functions", "_autosummary/aslm.tools.file_functions.create_save_path", "_autosummary/aslm.tools.file_functions.delete_folder", "_autosummary/aslm.tools.file_functions.load_yaml_file", "_autosummary/aslm.tools.file_functions.save_yaml_file", "_autosummary/aslm.tools.image", "_autosummary/aslm.tools.image.create_arrow_image", "_autosummary/aslm.tools.image.text_array", "_autosummary/aslm.tools.image_loaders", "_autosummary/aslm.tools.image_loaders.LazyTiff", "_autosummary/aslm.tools.main_functions", "_autosummary/aslm.tools.main_functions.create_parser", "_autosummary/aslm.tools.main_functions.evaluate_parser_input_arguments", "_autosummary/aslm.tools.main_functions.identify_gpu", "_autosummary/aslm.tools.multipos_table_tools", "_autosummary/aslm.tools.multipos_table_tools.calc_num_tiles", "_autosummary/aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box", "_autosummary/aslm.tools.multipos_table_tools.sign", "_autosummary/aslm.tools.multipos_table_tools.update_table", "_autosummary/aslm.tools.project_stats", "_autosummary/aslm.tools.project_stats.countlines", "_autosummary/aslm.tools.sdf", "_autosummary/aslm.tools.sdf.box", "_autosummary/aslm.tools.sdf.sphere", "_autosummary/aslm.tools.sdf.volume_from_sdf", "_autosummary/aslm.tools.waveform_template_funcs", "_autosummary/aslm.tools.waveform_template_funcs.get_waveform_template_parameters", "_autosummary/aslm.tools.xml_tools", "_autosummary/aslm.tools.xml_tools.dict_to_xml", "_autosummary/aslm.tools.xml_tools.parse_xml", "_autosummary/aslm.view", "_autosummary/aslm.view.main_window_content", "_autosummary/aslm.view.popups", "_templates/custom_class", "_templates/custom_module", "api", "config", "contributing_feature_container", "contributing_guidelines", "contributing_hardware", "contributing_home", "contributing_model", "implementations", "index", "software_configuration", "software_installation", "supported_hardware", "userguide"], "filenames": ["_autosummary/aslm.config.rst", "_autosummary/aslm.config.config.rst", "_autosummary/aslm.config.config.build_nested_dict.rst", "_autosummary/aslm.config.config.get_aslm_path.rst", "_autosummary/aslm.config.config.get_configuration_paths.rst", "_autosummary/aslm.config.config.load_configs.rst", "_autosummary/aslm.config.config.update_config_dict.rst", "_autosummary/aslm.config.config.verify_configuration.rst", "_autosummary/aslm.controller.rst", "_autosummary/aslm.controller.configuration_controller.rst", "_autosummary/aslm.controller.configuration_controller.ConfigurationController.rst", "_autosummary/aslm.controller.thread_pool.rst", "_autosummary/aslm.controller.thread_pool.SelfLockThread.rst", "_autosummary/aslm.controller.thread_pool.SynchronizedThreadPool.rst", "_autosummary/aslm.controller.thread_pool.ThreadWaitlist.rst", "_autosummary/aslm.model.rst", "_autosummary/aslm.model.analysis.rst", "_autosummary/aslm.model.analysis.boundary_detect.rst", "_autosummary/aslm.model.analysis.boundary_detect.binary_detect.rst", "_autosummary/aslm.model.analysis.boundary_detect.find_tissue_boundary_2d.rst", "_autosummary/aslm.model.analysis.boundary_detect.has_tissue.rst", "_autosummary/aslm.model.analysis.boundary_detect.map_boundary.rst", "_autosummary/aslm.model.analysis.camera.rst", "_autosummary/aslm.model.analysis.camera.compute_flatfield_map.rst", "_autosummary/aslm.model.analysis.camera.compute_noise_sigma.rst", "_autosummary/aslm.model.analysis.camera.compute_scmos_offset_and_variance_map.rst", "_autosummary/aslm.model.analysis.camera.compute_signal_to_noise.rst", "_autosummary/aslm.model.analysis.detection.rst", "_autosummary/aslm.model.analysis.detection.add_median_border.rst", "_autosummary/aslm.model.analysis.detection.combine_images.rst", "_autosummary/aslm.model.analysis.detection.log_detection.rst", "_autosummary/aslm.model.analysis.detection.make_inside_image.rst", "_autosummary/aslm.model.analysis.detection.make_normalized_image.rst", "_autosummary/aslm.model.analysis.detection.make_sphere_3D.rst", "_autosummary/aslm.model.analysis.detection.multiscale_surface_filter_3D.rst", "_autosummary/aslm.model.analysis.detection.surface_filter_gauss_3D.rst", "_autosummary/aslm.model.analysis.detection.three_level_segmentation.rst", "_autosummary/aslm.model.analysis.image_contrast.rst", "_autosummary/aslm.model.analysis.image_contrast.estimate_and_correct_flatfield.rst", "_autosummary/aslm.model.analysis.image_contrast.estimate_image_resolution.rst", "_autosummary/aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy.rst", "_autosummary/aslm.model.analysis.image_contrast.image_intensity.rst", "_autosummary/aslm.model.analysis.image_contrast.normalized_dct_shannon_entropy.rst", "_autosummary/aslm.model.analysis.image_decorrelation.rst", "_autosummary/aslm.model.analysis.image_decorrelation.apodize_image.rst", "_autosummary/aslm.model.analysis.image_decorrelation.get_correlation_coefficient.rst", "_autosummary/aslm.model.analysis.image_decorrelation.get_decorrelation_local_maxima.rst", "_autosummary/aslm.model.analysis.image_decorrelation.get_image_decorrelation.rst", "_autosummary/aslm.model.analysis.image_decorrelation.get_radial_average.rst", "_autosummary/aslm.model.analysis.image_decorrelation.image_to_polar.rst", "_autosummary/aslm.model.analysis.image_decorrelation.linear_map.rst", "_autosummary/aslm.model.analysis.image_decorrelation.main_image_decorr.rst", "_autosummary/aslm.model.analysis.image_transform.rst", "_autosummary/aslm.model.analysis.image_transform.deskew_image.rst", "_autosummary/aslm.model.analysis.image_transform.initiate_gpu.rst", "_autosummary/aslm.model.analysis.spectral_unmixing.rst", "_autosummary/aslm.model.analysis.spectral_unmixing.to_do.rst", "_autosummary/aslm.model.concurrency.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.CustodyThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.FancyThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.MyTestClass.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.ObjectInSubprocess.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.PoliteThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.ResultThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.SharedNDArray.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.TestSharedNDArray.rst", "_autosummary/aslm.model.concurrency.proxy_objects.rst", "_autosummary/aslm.model.concurrency.proxy_objects.ProxyManager.rst", "_autosummary/aslm.model.concurrency.proxy_objects.ProxyObject.rst", "_autosummary/aslm.model.concurrency.proxy_objects.launch_custody_thread.rst", "_autosummary/aslm.model.concurrency.proxy_objects.launch_thread.rst", "_autosummary/aslm.model.concurrency.write_parameters.rst", "_autosummary/aslm.model.concurrency.write_parameters.write_Params.rst", "_autosummary/aslm.model.data_sources.rst", "_autosummary/aslm.model.data_sources.bdv_data_source.rst", "_autosummary/aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.rst", "_autosummary/aslm.model.data_sources.data_source.rst", "_autosummary/aslm.model.data_sources.data_source.DataSource.rst", "_autosummary/aslm.model.data_sources.get_data_source.rst", "_autosummary/aslm.model.data_sources.tiff_data_source.rst", "_autosummary/aslm.model.data_sources.tiff_data_source.TiffDataSource.rst", "_autosummary/aslm.model.data_sources.zarr_data_source.rst", "_autosummary/aslm.model.data_sources.zarr_data_source.ZarrDataSource.rst", "_autosummary/aslm.model.device_startup_functions.rst", "_autosummary/aslm.model.device_startup_functions.DummyDeviceConnection.rst", "_autosummary/aslm.model.device_startup_functions.auto_redial.rst", "_autosummary/aslm.model.device_startup_functions.device_not_found.rst", "_autosummary/aslm.model.device_startup_functions.load_camera_connection.rst", "_autosummary/aslm.model.device_startup_functions.load_devices.rst", "_autosummary/aslm.model.device_startup_functions.load_filter_wheel_connection.rst", "_autosummary/aslm.model.device_startup_functions.load_stages.rst", "_autosummary/aslm.model.device_startup_functions.load_zoom_connection.rst", "_autosummary/aslm.model.device_startup_functions.start_camera.rst", "_autosummary/aslm.model.device_startup_functions.start_daq.rst", "_autosummary/aslm.model.device_startup_functions.start_filter_wheel.rst", "_autosummary/aslm.model.device_startup_functions.start_galvo.rst", "_autosummary/aslm.model.device_startup_functions.start_lasers.rst", "_autosummary/aslm.model.device_startup_functions.start_remote_focus_device.rst", "_autosummary/aslm.model.device_startup_functions.start_shutter.rst", "_autosummary/aslm.model.device_startup_functions.start_stage.rst", "_autosummary/aslm.model.device_startup_functions.start_zoom.rst", "_autosummary/aslm.model.devices.rst", "_autosummary/aslm.model.devices.APIs.rst", "_autosummary/aslm.model.devices.APIs.coherent.rst", "_autosummary/aslm.model.devices.APIs.dynamixel.rst", "_autosummary/aslm.model.devices.APIs.logitech.rst", "_autosummary/aslm.model.devices.APIs.omicron.rst", "_autosummary/aslm.model.devices.camera.rst", "_autosummary/aslm.model.devices.camera.camera_base.rst", "_autosummary/aslm.model.devices.camera.camera_base.CameraBase.rst", "_autosummary/aslm.model.devices.camera.camera_hamamatsu.rst", "_autosummary/aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.rst", "_autosummary/aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.rst", "_autosummary/aslm.model.devices.camera.camera_photometrics.rst", "_autosummary/aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.rst", "_autosummary/aslm.model.devices.camera.camera_synthetic.rst", "_autosummary/aslm.model.devices.camera.camera_synthetic.SyntheticCamera.rst", "_autosummary/aslm.model.devices.camera.camera_synthetic.SyntheticCameraController.rst", "_autosummary/aslm.model.devices.daq.rst", "_autosummary/aslm.model.devices.daq.daq_base.rst", "_autosummary/aslm.model.devices.daq.daq_base.DAQBase.rst", "_autosummary/aslm.model.devices.daq.daq_synthetic.rst", "_autosummary/aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.rst", "_autosummary/aslm.model.devices.filter_wheel.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_asi.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_asi.build_filter_wheel_connection.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_base.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_synthetic.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.rst", "_autosummary/aslm.model.devices.galvo.rst", "_autosummary/aslm.model.devices.galvo.galvo_base.rst", "_autosummary/aslm.model.devices.galvo.galvo_base.GalvoBase.rst", "_autosummary/aslm.model.devices.galvo.galvo_synthetic.rst", "_autosummary/aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.rst", "_autosummary/aslm.model.devices.joystick.rst", "_autosummary/aslm.model.devices.joystick.joystick_base.rst", "_autosummary/aslm.model.devices.joystick.joystick_base.JoystickBase.rst", "_autosummary/aslm.model.devices.joystick.joystick_synthetic.rst", "_autosummary/aslm.model.devices.joystick.joystick_synthetic.SyntheticJoystick.rst", "_autosummary/aslm.model.devices.lasers.rst", "_autosummary/aslm.model.devices.lasers.laser_base.rst", "_autosummary/aslm.model.devices.lasers.laser_base.LaserBase.rst", "_autosummary/aslm.model.devices.lasers.laser_synthetic.rst", "_autosummary/aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.rst", "_autosummary/aslm.model.devices.lasers.laser_trigger_base.rst", "_autosummary/aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase.rst", "_autosummary/aslm.model.devices.lasers.laser_trigger_synthetic.rst", "_autosummary/aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers.rst", "_autosummary/aslm.model.devices.objectives.rst", "_autosummary/aslm.model.devices.objectives.Objective.rst", "_autosummary/aslm.model.devices.remote_focus.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_base.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_synthetic.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.rst", "_autosummary/aslm.model.devices.shutter.rst", "_autosummary/aslm.model.devices.shutter.laser_shutter_base.rst", "_autosummary/aslm.model.devices.shutter.laser_shutter_base.ShutterBase.rst", "_autosummary/aslm.model.devices.shutter.laser_shutter_synthetic.rst", "_autosummary/aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.rst", "_autosummary/aslm.model.devices.stages.rst", "_autosummary/aslm.model.devices.stages.stage_asi.rst", "_autosummary/aslm.model.devices.stages.stage_asi.ASIStage.rst", "_autosummary/aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection.rst", "_autosummary/aslm.model.devices.stages.stage_base.rst", "_autosummary/aslm.model.devices.stages.stage_base.StageBase.rst", "_autosummary/aslm.model.devices.stages.stage_galvo.rst", "_autosummary/aslm.model.devices.stages.stage_galvo.GalvoNIStage.rst", "_autosummary/aslm.model.devices.stages.stage_mcl.rst", "_autosummary/aslm.model.devices.stages.stage_mcl.MCLStage.rst", "_autosummary/aslm.model.devices.stages.stage_mcl.build_MCLStage_connection.rst", "_autosummary/aslm.model.devices.stages.stage_pi.rst", "_autosummary/aslm.model.devices.stages.stage_pi.PIStage.rst", "_autosummary/aslm.model.devices.stages.stage_pi.build_PIStage_connection.rst", "_autosummary/aslm.model.devices.stages.stage_sutter.rst", "_autosummary/aslm.model.devices.stages.stage_sutter.SutterStage.rst", "_autosummary/aslm.model.devices.stages.stage_sutter.build_MP285_connection.rst", "_autosummary/aslm.model.devices.stages.stage_synthetic.rst", "_autosummary/aslm.model.devices.stages.stage_synthetic.SyntheticStage.rst", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.rst", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.rst", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection.rst", "_autosummary/aslm.model.devices.zoom.rst", "_autosummary/aslm.model.devices.zoom.zoom_base.rst", "_autosummary/aslm.model.devices.zoom.zoom_base.ZoomBase.rst", "_autosummary/aslm.model.devices.zoom.zoom_synthetic.rst", "_autosummary/aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.rst", "_autosummary/aslm.model.dummy.rst", "_autosummary/aslm.model.dummy.DummyController.rst", "_autosummary/aslm.model.dummy.DummyDevice.rst", "_autosummary/aslm.model.dummy.DummyMicroscope.rst", "_autosummary/aslm.model.dummy.DummyModel.rst", "_autosummary/aslm.model.features.rst", "_autosummary/aslm.model.features.auto_tile_scan.rst", "_autosummary/aslm.model.features.auto_tile_scan.CalculateFocusRange.rst", "_autosummary/aslm.model.features.autofocus.rst", "_autosummary/aslm.model.features.autofocus.Autofocus.rst", "_autosummary/aslm.model.features.autofocus.power_tent.rst", "_autosummary/aslm.model.features.common_features.rst", "_autosummary/aslm.model.features.common_features.ChangeResolution.rst", "_autosummary/aslm.model.features.common_features.ConProAcquisition.rst", "_autosummary/aslm.model.features.common_features.FindTissueSimple2D.rst", "_autosummary/aslm.model.features.common_features.LoopByCount.rst", "_autosummary/aslm.model.features.common_features.MoveToNextPositionInMultiPostionTable.rst", "_autosummary/aslm.model.features.common_features.PrepareNextChannel.rst", "_autosummary/aslm.model.features.common_features.Snap.rst", "_autosummary/aslm.model.features.common_features.StackPause.rst", "_autosummary/aslm.model.features.common_features.WaitToContinue.rst", "_autosummary/aslm.model.features.common_features.ZStackAcquisition.rst", "_autosummary/aslm.model.features.constant_velocity_acquisition.rst", "_autosummary/aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition.rst", "_autosummary/aslm.model.features.dummy_detective.rst", "_autosummary/aslm.model.features.dummy_detective.Dummy_Detective.rst", "_autosummary/aslm.model.features.feature_container.rst", "_autosummary/aslm.model.features.feature_container.Container.rst", "_autosummary/aslm.model.features.feature_container.DataContainer.rst", "_autosummary/aslm.model.features.feature_container.DataNode.rst", "_autosummary/aslm.model.features.feature_container.SignalContainer.rst", "_autosummary/aslm.model.features.feature_container.SignalNode.rst", "_autosummary/aslm.model.features.feature_container.TreeNode.rst", "_autosummary/aslm.model.features.feature_container.dummy_True.rst", "_autosummary/aslm.model.features.feature_container.dummy_func.rst", "_autosummary/aslm.model.features.feature_container.get_registered_funcs.rst", "_autosummary/aslm.model.features.feature_container.load_features.rst", "_autosummary/aslm.model.features.feature_related_functions.rst", "_autosummary/aslm.model.features.feature_related_functions.convert_feature_list_to_str.rst", "_autosummary/aslm.model.features.feature_related_functions.convert_str_to_feature_list.rst", "_autosummary/aslm.model.features.image_writer.rst", "_autosummary/aslm.model.features.image_writer.ImageWriter.rst", "_autosummary/aslm.model.features.restful_features.rst", "_autosummary/aslm.model.features.restful_features.IlastikSegmentation.rst", "_autosummary/aslm.model.features.restful_features.prepare_service.rst", "_autosummary/aslm.model.features.volume_search.rst", "_autosummary/aslm.model.features.volume_search.VolumeSearch.rst", "_autosummary/aslm.model.features.volume_search.draw_box.rst", "_autosummary/aslm.model.metadata_sources.rst", "_autosummary/aslm.model.metadata_sources.bdv_metadata.rst", "_autosummary/aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.rst", "_autosummary/aslm.model.metadata_sources.metadata.rst", "_autosummary/aslm.model.metadata_sources.metadata.Metadata.rst", "_autosummary/aslm.model.metadata_sources.metadata.XMLMetadata.rst", "_autosummary/aslm.model.metadata_sources.ome_tiff_metadata.rst", "_autosummary/aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.rst", "_autosummary/aslm.model.microscope.rst", "_autosummary/aslm.model.microscope.Microscope.rst", "_autosummary/aslm.model.model.rst", "_autosummary/aslm.model.model.Model.rst", "_autosummary/aslm.model.waveforms.rst", "_autosummary/aslm.model.waveforms.camera_exposure.rst", "_autosummary/aslm.model.waveforms.dc_value.rst", "_autosummary/aslm.model.waveforms.remote_focus_ramp.rst", "_autosummary/aslm.model.waveforms.sawtooth.rst", "_autosummary/aslm.model.waveforms.sine_wave.rst", "_autosummary/aslm.model.waveforms.single_pulse.rst", "_autosummary/aslm.model.waveforms.smooth_waveform.rst", "_autosummary/aslm.model.waveforms.square.rst", "_autosummary/aslm.tools.rst", "_autosummary/aslm.tools.beams.rst", "_autosummary/aslm.tools.beams.fit_gaussian_beam_error.rst", "_autosummary/aslm.tools.beams.fit_gaussian_beam_mse.rst", "_autosummary/aslm.tools.beams.gaussian_beam.rst", "_autosummary/aslm.tools.common_dict_tools.rst", "_autosummary/aslm.tools.common_dict_tools.update_stage_dict.rst", "_autosummary/aslm.tools.common_functions.rst", "_autosummary/aslm.tools.common_functions.VariableWithLock.rst", "_autosummary/aslm.tools.common_functions.build_ref_name.rst", "_autosummary/aslm.tools.common_functions.combine_funcs.rst", "_autosummary/aslm.tools.common_functions.copy_proxy_object.rst", "_autosummary/aslm.tools.common_functions.load_module_from_file.rst", "_autosummary/aslm.tools.decorators.rst", "_autosummary/aslm.tools.decorators.FeatureList.rst", "_autosummary/aslm.tools.decorators.function_timer.rst", "_autosummary/aslm.tools.file_functions.rst", "_autosummary/aslm.tools.file_functions.create_save_path.rst", "_autosummary/aslm.tools.file_functions.delete_folder.rst", "_autosummary/aslm.tools.file_functions.load_yaml_file.rst", "_autosummary/aslm.tools.file_functions.save_yaml_file.rst", "_autosummary/aslm.tools.image.rst", "_autosummary/aslm.tools.image.create_arrow_image.rst", "_autosummary/aslm.tools.image.text_array.rst", "_autosummary/aslm.tools.image_loaders.rst", "_autosummary/aslm.tools.image_loaders.LazyTiff.rst", "_autosummary/aslm.tools.main_functions.rst", "_autosummary/aslm.tools.main_functions.create_parser.rst", "_autosummary/aslm.tools.main_functions.evaluate_parser_input_arguments.rst", "_autosummary/aslm.tools.main_functions.identify_gpu.rst", "_autosummary/aslm.tools.multipos_table_tools.rst", "_autosummary/aslm.tools.multipos_table_tools.calc_num_tiles.rst", "_autosummary/aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box.rst", "_autosummary/aslm.tools.multipos_table_tools.sign.rst", "_autosummary/aslm.tools.multipos_table_tools.update_table.rst", "_autosummary/aslm.tools.project_stats.rst", "_autosummary/aslm.tools.project_stats.countlines.rst", "_autosummary/aslm.tools.sdf.rst", "_autosummary/aslm.tools.sdf.box.rst", "_autosummary/aslm.tools.sdf.sphere.rst", "_autosummary/aslm.tools.sdf.volume_from_sdf.rst", "_autosummary/aslm.tools.waveform_template_funcs.rst", "_autosummary/aslm.tools.waveform_template_funcs.get_waveform_template_parameters.rst", "_autosummary/aslm.tools.xml_tools.rst", "_autosummary/aslm.tools.xml_tools.dict_to_xml.rst", "_autosummary/aslm.tools.xml_tools.parse_xml.rst", "_autosummary/aslm.view.rst", "_autosummary/aslm.view.main_window_content.rst", "_autosummary/aslm.view.popups.rst", "_templates/custom_class.rst", "_templates/custom_module.rst", "api.rst", "config.rst", "contributing_feature_container.rst", "contributing_guidelines.rst", "contributing_hardware.rst", "contributing_home.rst", "contributing_model.rst", "implementations.rst", "index.rst", "software_configuration.rst", "software_installation.rst", "supported_hardware.rst", "userguide.rst"], "titles": ["aslm.config", "aslm.config.config", "aslm.config.config.build_nested_dict", "aslm.config.config.get_aslm_path", "aslm.config.config.get_configuration_paths", "aslm.config.config.load_configs", "aslm.config.config.update_config_dict", "aslm.config.config.verify_configuration", "aslm.controller", "aslm.controller.configuration_controller", "aslm.controller.configuration_controller.ConfigurationController", "aslm.controller.thread_pool", "aslm.controller.thread_pool.SelfLockThread", "aslm.controller.thread_pool.SynchronizedThreadPool", "aslm.controller.thread_pool.ThreadWaitlist", "aslm.model", "aslm.model.analysis", "aslm.model.analysis.boundary_detect", "aslm.model.analysis.boundary_detect.binary_detect", "aslm.model.analysis.boundary_detect.find_tissue_boundary_2d", "aslm.model.analysis.boundary_detect.has_tissue", "aslm.model.analysis.boundary_detect.map_boundary", "aslm.model.analysis.camera", "aslm.model.analysis.camera.compute_flatfield_map", "aslm.model.analysis.camera.compute_noise_sigma", "aslm.model.analysis.camera.compute_scmos_offset_and_variance_map", "aslm.model.analysis.camera.compute_signal_to_noise", "aslm.model.analysis.detection", "aslm.model.analysis.detection.add_median_border", "aslm.model.analysis.detection.combine_images", "aslm.model.analysis.detection.log_detection", "aslm.model.analysis.detection.make_inside_image", "aslm.model.analysis.detection.make_normalized_image", "aslm.model.analysis.detection.make_sphere_3D", "aslm.model.analysis.detection.multiscale_surface_filter_3D", "aslm.model.analysis.detection.surface_filter_gauss_3D", "aslm.model.analysis.detection.three_level_segmentation", "aslm.model.analysis.image_contrast", "aslm.model.analysis.image_contrast.estimate_and_correct_flatfield", "aslm.model.analysis.image_contrast.estimate_image_resolution", "aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy", "aslm.model.analysis.image_contrast.image_intensity", "aslm.model.analysis.image_contrast.normalized_dct_shannon_entropy", "aslm.model.analysis.image_decorrelation", "aslm.model.analysis.image_decorrelation.apodize_image", "aslm.model.analysis.image_decorrelation.get_correlation_coefficient", "aslm.model.analysis.image_decorrelation.get_decorrelation_local_maxima", "aslm.model.analysis.image_decorrelation.get_image_decorrelation", "aslm.model.analysis.image_decorrelation.get_radial_average", "aslm.model.analysis.image_decorrelation.image_to_polar", "aslm.model.analysis.image_decorrelation.linear_map", "aslm.model.analysis.image_decorrelation.main_image_decorr", "aslm.model.analysis.image_transform", "aslm.model.analysis.image_transform.deskew_image", "aslm.model.analysis.image_transform.initiate_gpu", "aslm.model.analysis.spectral_unmixing", "aslm.model.analysis.spectral_unmixing.to_do", "aslm.model.concurrency", "aslm.model.concurrency.concurrency_tools", "aslm.model.concurrency.concurrency_tools.CustodyThread", "aslm.model.concurrency.concurrency_tools.FancyThread", "aslm.model.concurrency.concurrency_tools.MyTestClass", "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess", "aslm.model.concurrency.concurrency_tools.PoliteThread", "aslm.model.concurrency.concurrency_tools.ResultThread", "aslm.model.concurrency.concurrency_tools.SharedNDArray", "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess", "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread", "aslm.model.concurrency.concurrency_tools.TestSharedNDArray", "aslm.model.concurrency.proxy_objects", "aslm.model.concurrency.proxy_objects.ProxyManager", "aslm.model.concurrency.proxy_objects.ProxyObject", "aslm.model.concurrency.proxy_objects.launch_custody_thread", "aslm.model.concurrency.proxy_objects.launch_thread", "aslm.model.concurrency.write_parameters", "aslm.model.concurrency.write_parameters.write_Params", "aslm.model.data_sources", "aslm.model.data_sources.bdv_data_source", "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource", "aslm.model.data_sources.data_source", "aslm.model.data_sources.data_source.DataSource", "aslm.model.data_sources.get_data_source", "aslm.model.data_sources.tiff_data_source", "aslm.model.data_sources.tiff_data_source.TiffDataSource", "aslm.model.data_sources.zarr_data_source", "aslm.model.data_sources.zarr_data_source.ZarrDataSource", "aslm.model.device_startup_functions", "aslm.model.device_startup_functions.DummyDeviceConnection", "aslm.model.device_startup_functions.auto_redial", "aslm.model.device_startup_functions.device_not_found", "aslm.model.device_startup_functions.load_camera_connection", "aslm.model.device_startup_functions.load_devices", "aslm.model.device_startup_functions.load_filter_wheel_connection", "aslm.model.device_startup_functions.load_stages", "aslm.model.device_startup_functions.load_zoom_connection", "aslm.model.device_startup_functions.start_camera", "aslm.model.device_startup_functions.start_daq", "aslm.model.device_startup_functions.start_filter_wheel", "aslm.model.device_startup_functions.start_galvo", "aslm.model.device_startup_functions.start_lasers", "aslm.model.device_startup_functions.start_remote_focus_device", "aslm.model.device_startup_functions.start_shutter", "aslm.model.device_startup_functions.start_stage", "aslm.model.device_startup_functions.start_zoom", "aslm.model.devices", "aslm.model.devices.APIs", "aslm.model.devices.APIs.coherent", "aslm.model.devices.APIs.dynamixel", "aslm.model.devices.APIs.logitech", "aslm.model.devices.APIs.omicron", "aslm.model.devices.camera", "aslm.model.devices.camera.camera_base", "aslm.model.devices.camera.camera_base.CameraBase", "aslm.model.devices.camera.camera_hamamatsu", "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca", "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning", "aslm.model.devices.camera.camera_photometrics", "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix", "aslm.model.devices.camera.camera_synthetic", "aslm.model.devices.camera.camera_synthetic.SyntheticCamera", "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController", "aslm.model.devices.daq", "aslm.model.devices.daq.daq_base", "aslm.model.devices.daq.daq_base.DAQBase", "aslm.model.devices.daq.daq_synthetic", "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ", "aslm.model.devices.filter_wheel", "aslm.model.devices.filter_wheel.filter_wheel_asi", "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel", "aslm.model.devices.filter_wheel.filter_wheel_asi.build_filter_wheel_connection", "aslm.model.devices.filter_wheel.filter_wheel_base", "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase", "aslm.model.devices.filter_wheel.filter_wheel_sutter", "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel", "aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection", "aslm.model.devices.filter_wheel.filter_wheel_synthetic", "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel", "aslm.model.devices.galvo", "aslm.model.devices.galvo.galvo_base", "aslm.model.devices.galvo.galvo_base.GalvoBase", "aslm.model.devices.galvo.galvo_synthetic", "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo", "aslm.model.devices.joystick", "aslm.model.devices.joystick.joystick_base", "aslm.model.devices.joystick.joystick_base.JoystickBase", "aslm.model.devices.joystick.joystick_synthetic", "aslm.model.devices.joystick.joystick_synthetic.SyntheticJoystick", "aslm.model.devices.lasers", "aslm.model.devices.lasers.laser_base", "aslm.model.devices.lasers.laser_base.LaserBase", "aslm.model.devices.lasers.laser_synthetic", "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser", "aslm.model.devices.lasers.laser_trigger_base", "aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase", "aslm.model.devices.lasers.laser_trigger_synthetic", "aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers", "aslm.model.devices.objectives", "aslm.model.devices.objectives.Objective", "aslm.model.devices.remote_focus", "aslm.model.devices.remote_focus.remote_focus_base", "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase", "aslm.model.devices.remote_focus.remote_focus_synthetic", "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus", "aslm.model.devices.shutter", "aslm.model.devices.shutter.laser_shutter_base", "aslm.model.devices.shutter.laser_shutter_base.ShutterBase", "aslm.model.devices.shutter.laser_shutter_synthetic", "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter", "aslm.model.devices.stages", "aslm.model.devices.stages.stage_asi", "aslm.model.devices.stages.stage_asi.ASIStage", "aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection", "aslm.model.devices.stages.stage_base", "aslm.model.devices.stages.stage_base.StageBase", "aslm.model.devices.stages.stage_galvo", "aslm.model.devices.stages.stage_galvo.GalvoNIStage", "aslm.model.devices.stages.stage_mcl", "aslm.model.devices.stages.stage_mcl.MCLStage", "aslm.model.devices.stages.stage_mcl.build_MCLStage_connection", "aslm.model.devices.stages.stage_pi", "aslm.model.devices.stages.stage_pi.PIStage", "aslm.model.devices.stages.stage_pi.build_PIStage_connection", "aslm.model.devices.stages.stage_sutter", "aslm.model.devices.stages.stage_sutter.SutterStage", "aslm.model.devices.stages.stage_sutter.build_MP285_connection", "aslm.model.devices.stages.stage_synthetic", "aslm.model.devices.stages.stage_synthetic.SyntheticStage", "aslm.model.devices.stages.stage_tl_kcube_inertial", "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage", "aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection", "aslm.model.devices.zoom", "aslm.model.devices.zoom.zoom_base", "aslm.model.devices.zoom.zoom_base.ZoomBase", "aslm.model.devices.zoom.zoom_synthetic", "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom", "aslm.model.dummy", "aslm.model.dummy.DummyController", "aslm.model.dummy.DummyDevice", "aslm.model.dummy.DummyMicroscope", "aslm.model.dummy.DummyModel", "aslm.model.features", "aslm.model.features.auto_tile_scan", "aslm.model.features.auto_tile_scan.CalculateFocusRange", "aslm.model.features.autofocus", "aslm.model.features.autofocus.Autofocus", "aslm.model.features.autofocus.power_tent", "aslm.model.features.common_features", "aslm.model.features.common_features.ChangeResolution", "aslm.model.features.common_features.ConProAcquisition", "aslm.model.features.common_features.FindTissueSimple2D", "aslm.model.features.common_features.LoopByCount", "aslm.model.features.common_features.MoveToNextPositionInMultiPostionTable", "aslm.model.features.common_features.PrepareNextChannel", "aslm.model.features.common_features.Snap", "aslm.model.features.common_features.StackPause", "aslm.model.features.common_features.WaitToContinue", "aslm.model.features.common_features.ZStackAcquisition", "aslm.model.features.constant_velocity_acquisition", "aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition", "aslm.model.features.dummy_detective", "aslm.model.features.dummy_detective.Dummy_Detective", "aslm.model.features.feature_container", "aslm.model.features.feature_container.Container", "aslm.model.features.feature_container.DataContainer", "aslm.model.features.feature_container.DataNode", "aslm.model.features.feature_container.SignalContainer", "aslm.model.features.feature_container.SignalNode", "aslm.model.features.feature_container.TreeNode", "aslm.model.features.feature_container.dummy_True", "aslm.model.features.feature_container.dummy_func", "aslm.model.features.feature_container.get_registered_funcs", "aslm.model.features.feature_container.load_features", "aslm.model.features.feature_related_functions", "aslm.model.features.feature_related_functions.convert_feature_list_to_str", "aslm.model.features.feature_related_functions.convert_str_to_feature_list", "aslm.model.features.image_writer", "aslm.model.features.image_writer.ImageWriter", "aslm.model.features.restful_features", "aslm.model.features.restful_features.IlastikSegmentation", "aslm.model.features.restful_features.prepare_service", "aslm.model.features.volume_search", "aslm.model.features.volume_search.VolumeSearch", "aslm.model.features.volume_search.draw_box", "aslm.model.metadata_sources", "aslm.model.metadata_sources.bdv_metadata", "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata", "aslm.model.metadata_sources.metadata", "aslm.model.metadata_sources.metadata.Metadata", "aslm.model.metadata_sources.metadata.XMLMetadata", "aslm.model.metadata_sources.ome_tiff_metadata", "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata", "aslm.model.microscope", "aslm.model.microscope.Microscope", "aslm.model.model", "aslm.model.model.Model", "aslm.model.waveforms", "aslm.model.waveforms.camera_exposure", "aslm.model.waveforms.dc_value", "aslm.model.waveforms.remote_focus_ramp", "aslm.model.waveforms.sawtooth", "aslm.model.waveforms.sine_wave", "aslm.model.waveforms.single_pulse", "aslm.model.waveforms.smooth_waveform", "aslm.model.waveforms.square", "aslm.tools", "aslm.tools.beams", "aslm.tools.beams.fit_gaussian_beam_error", "aslm.tools.beams.fit_gaussian_beam_mse", "aslm.tools.beams.gaussian_beam", "aslm.tools.common_dict_tools", "aslm.tools.common_dict_tools.update_stage_dict", "aslm.tools.common_functions", "aslm.tools.common_functions.VariableWithLock", "aslm.tools.common_functions.build_ref_name", "aslm.tools.common_functions.combine_funcs", "aslm.tools.common_functions.copy_proxy_object", "aslm.tools.common_functions.load_module_from_file", "aslm.tools.decorators", "aslm.tools.decorators.FeatureList", "aslm.tools.decorators.function_timer", "aslm.tools.file_functions", "aslm.tools.file_functions.create_save_path", "aslm.tools.file_functions.delete_folder", "aslm.tools.file_functions.load_yaml_file", "aslm.tools.file_functions.save_yaml_file", "aslm.tools.image", "aslm.tools.image.create_arrow_image", "aslm.tools.image.text_array", "aslm.tools.image_loaders", "aslm.tools.image_loaders.LazyTiff", "aslm.tools.main_functions", "aslm.tools.main_functions.create_parser", "aslm.tools.main_functions.evaluate_parser_input_arguments", "aslm.tools.main_functions.identify_gpu", "aslm.tools.multipos_table_tools", "aslm.tools.multipos_table_tools.calc_num_tiles", "aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box", "aslm.tools.multipos_table_tools.sign", "aslm.tools.multipos_table_tools.update_table", "aslm.tools.project_stats", "aslm.tools.project_stats.countlines", "aslm.tools.sdf", "aslm.tools.sdf.box", "aslm.tools.sdf.sphere", "aslm.tools.sdf.volume_from_sdf", "aslm.tools.waveform_template_funcs", "aslm.tools.waveform_template_funcs.get_waveform_template_parameters", "aslm.tools.xml_tools", "aslm.tools.xml_tools.dict_to_xml", "aslm.tools.xml_tools.parse_xml", "aslm.view", "aslm.view.main_window_content", "aslm.view.popups", "&lt;no title&gt;", "&lt;no title&gt;", "API Reference", "Configuring ASLM", "ASLM Feature Container", "Contributing Guidelines", "Adding New Hardware", "Contributing to ASLM", "Adding New Model Features", "Microscope Implementations", "<strong>Autonomous Software for Light Microscopy</strong>", "Software Configuration", "Software Installation", "Supported Hardware", "User Guide"], "terms": {"modul": [0, 8, 12, 15, 16, 57, 59, 64, 65, 72, 73, 76, 104, 105, 106, 107, 108, 109, 110, 121, 126, 137, 142, 147, 158, 163, 168, 190, 200, 243, 264, 276, 310, 311, 312, 314, 322], "function": [1, 12, 13, 17, 22, 27, 29, 31, 34, 35, 37, 43, 46, 52, 53, 55, 56, 59, 61, 64, 65, 66, 67, 68, 69, 72, 73, 76, 86, 88, 114, 115, 117, 119, 127, 132, 169, 176, 179, 182, 187, 199, 203, 204, 205, 221, 232, 236, 237, 240, 254, 255, 259, 263, 265, 266, 267, 269, 271, 273, 274, 275, 276, 277, 279, 280, 281, 285, 290, 294, 299, 301, 302, 303, 304, 305, 306, 307, 317, 318, 322, 324, 326], "manag": [2, 5, 6, 7, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 112, 114, 117, 119, 123, 125, 165, 167, 170, 173, 175, 180, 192, 325, 326], "parent_dict": [2, 6], "key_nam": 2, "dict_data": 2, "nest": [2, 65, 245, 248, 250], "dictionari": [2, 5, 6, 10, 12, 59, 64, 65, 91, 98, 99, 123, 125, 128, 131, 133, 136, 139, 141, 160, 162, 170, 173, 175, 177, 180, 181, 183, 186, 188, 192, 194, 236, 245, 248, 250, 252, 254, 270, 281, 283, 284, 292, 306, 308, 309, 316, 317, 324], "recurs": [2, 65], "paramet": [2, 4, 5, 6, 10, 13, 18, 19, 20, 23, 24, 25, 38, 61, 65, 66, 67, 68, 78, 80, 81, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 112, 114, 115, 117, 119, 120, 123, 125, 128, 131, 133, 136, 139, 141, 157, 160, 162, 170, 171, 173, 175, 177, 180, 181, 183, 184, 186, 188, 192, 194, 196, 197, 199, 204, 205, 218, 233, 234, 236, 241, 252, 254, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 270, 273, 274, 275, 276, 279, 281, 282, 283, 284, 286, 287, 289, 291, 292, 293, 295, 296, 297, 298, 300, 302, 303, 304, 306, 308, 309, 316, 324], "multiprocess": [2, 5, 6, 70, 90, 93, 95, 170, 173, 175, 180], "share": [2, 5, 6, 59, 65, 70, 71, 72, 125, 254, 318, 326], "object": [2, 5, 6, 10, 12, 13, 14, 59, 61, 62, 64, 65, 66, 70, 71, 72, 75, 80, 87, 88, 95, 97, 98, 99, 100, 101, 102, 103, 112, 114, 117, 119, 120, 123, 131, 139, 144, 149, 153, 160, 165, 167, 170, 171, 173, 175, 180, 181, 183, 192, 194, 196, 197, 198, 199, 202, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 220, 222, 227, 236, 238, 241, 247, 252, 254, 270, 272, 275, 278, 286, 289, 291, 292, 293, 298, 304, 316, 318, 322, 324, 326], "e": [2, 4, 5, 6, 10, 24, 65, 83, 114, 115, 117, 119, 129, 131, 133, 134, 136, 171, 181, 192, 194, 236, 248, 295, 316, 317, 325, 326], "g": [2, 5, 6, 10, 65, 83, 114, 115, 117, 119, 129, 131, 133, 134, 136, 157, 171, 181, 192, 194, 236, 248, 295, 316, 317, 325, 326], "dict": [2, 5, 6, 10, 13, 18, 78, 80, 83, 85, 91, 123, 125, 131, 133, 136, 139, 141, 157, 160, 162, 170, 173, 175, 177, 180, 181, 183, 186, 188, 192, 194, 204, 236, 252, 254, 270, 275, 281, 283, 284, 306, 308, 309, 316], "between": [2, 5, 6, 19, 65, 117, 192, 194, 241, 266, 267, 273, 295, 316, 324, 326], "process": [2, 5, 6, 62, 65, 70, 71, 73, 204, 254, 317, 318], "we": [2, 6, 61, 62, 64, 65, 68, 71, 78, 80, 83, 85, 114, 115, 133, 136, 236, 245, 248, 250, 252, 316, 317, 318, 319, 320, 324, 325, 326], "ar": [2, 6, 10, 12, 59, 64, 65, 66, 83, 85, 101, 114, 115, 117, 119, 125, 170, 173, 175, 177, 180, 183, 186, 188, 204, 218, 236, 241, 248, 252, 254, 266, 267, 282, 289, 316, 317, 318, 322, 324, 325, 326], "ad": [2, 6, 61, 64, 65, 170, 241, 291, 298, 320, 323], "str": [2, 3, 4, 6, 10, 13, 18, 19, 20, 23, 25, 61, 65, 66, 67, 68, 78, 80, 81, 83, 85, 95, 97, 98, 99, 100, 101, 102, 103, 112, 114, 115, 117, 119, 120, 123, 125, 128, 129, 131, 133, 134, 136, 139, 141, 157, 160, 162, 165, 167, 170, 171, 173, 175, 177, 180, 181, 183, 184, 186, 188, 192, 196, 233, 234, 236, 241, 245, 248, 250, 252, 254, 268, 273, 276, 281, 282, 283, 284, 286, 287, 289, 292, 300, 306, 308], "name": [2, 6, 10, 12, 13, 59, 61, 62, 64, 65, 66, 67, 68, 78, 80, 83, 85, 95, 97, 98, 99, 100, 101, 102, 103, 112, 114, 117, 119, 120, 123, 125, 128, 131, 133, 136, 139, 141, 157, 160, 162, 165, 167, 170, 173, 175, 180, 181, 183, 192, 198, 236, 241, 252, 254, 273, 276, 282, 284, 306, 316, 318, 324, 326], "insert": [2, 65, 326], "return": [2, 3, 4, 5, 6, 10, 12, 18, 19, 20, 24, 35, 38, 42, 45, 46, 48, 53, 59, 61, 62, 64, 65, 71, 78, 80, 81, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 112, 114, 115, 117, 119, 120, 123, 125, 128, 131, 133, 136, 139, 141, 157, 160, 162, 167, 170, 171, 173, 175, 177, 180, 181, 183, 184, 186, 188, 192, 194, 196, 197, 199, 204, 205, 218, 233, 234, 236, 245, 247, 248, 250, 252, 254, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 270, 273, 274, 275, 276, 279, 281, 283, 284, 286, 287, 289, 291, 292, 293, 295, 296, 297, 298, 302, 303, 304, 306, 308, 309, 318], "type": [2, 3, 5, 6, 10, 19, 20, 24, 25, 38, 65, 78, 80, 81, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 114, 115, 117, 120, 123, 125, 128, 129, 131, 133, 134, 136, 139, 141, 157, 160, 162, 165, 167, 170, 171, 173, 175, 177, 180, 181, 183, 184, 186, 188, 192, 194, 196, 197, 198, 199, 204, 205, 218, 233, 234, 236, 245, 247, 248, 250, 252, 254, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 270, 273, 274, 275, 276, 279, 281, 283, 284, 286, 287, 289, 291, 293, 295, 296, 297, 298, 302, 303, 304, 308, 309, 316, 323, 324], "none": [2, 12, 13, 18, 19, 20, 30, 45, 47, 50, 59, 61, 62, 64, 65, 66, 67, 68, 70, 71, 72, 73, 78, 80, 83, 85, 114, 115, 117, 119, 139, 141, 146, 160, 162, 180, 183, 196, 197, 199, 204, 218, 222, 223, 225, 234, 236, 245, 247, 248, 250, 252, 254, 270, 283, 286, 289, 291, 298, 300, 308, 324], "exampl": [2, 3, 6, 59, 64, 65, 72, 73, 78, 80, 81, 83, 85, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 139, 141, 160, 162, 170, 175, 177, 180, 183, 186, 188, 196, 197, 198, 199, 236, 256, 257, 258, 259, 260, 261, 263, 266, 282, 289, 293, 304, 317, 318, 319, 324, 325, 326], "establish": 3, "program": [3, 12, 59, 64, 318], "home": [3, 128], "directori": [3, 236, 248, 281, 282, 284, 300, 324, 325], "appdata": [3, 316, 324], "local": [3, 13, 23, 46, 47, 65, 316, 324, 325], "window": [3, 281, 316, 324, 325, 326], "mac": [3, 316, 324, 325], "linux": [3, 316, 324, 325], "path": [3, 4, 5, 65, 153, 155, 254, 276, 281, 282, 283, 289, 292, 300, 318, 325], "c": [3, 65, 181, 250, 316, 324, 325], "user": [3, 65, 254, 281, 293, 316, 320, 323, 324, 325, 326], "usernam": [3, 325], "get": [4, 10, 13, 64, 65, 78, 80, 81, 83, 85, 114, 115, 117, 119, 170, 204, 252, 254, 306, 318, 325], "variou": [4, 67, 68, 316, 324, 326], "configur": [4, 5, 6, 7, 10, 78, 80, 83, 85, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 112, 114, 115, 117, 119, 123, 125, 128, 131, 133, 136, 139, 141, 149, 151, 153, 155, 160, 162, 165, 167, 170, 173, 175, 177, 180, 183, 186, 188, 192, 194, 198, 199, 236, 241, 245, 247, 248, 250, 252, 254, 292, 317, 318, 323, 325, 326, 327], "file": [4, 5, 6, 56, 65, 78, 80, 81, 83, 85, 119, 236, 245, 247, 248, 250, 254, 276, 282, 283, 284, 289, 292, 300, 309, 316, 318, 323, 325, 326], "us": [4, 10, 12, 24, 38, 39, 56, 59, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 117, 120, 141, 196, 197, 198, 199, 205, 218, 236, 241, 248, 250, 252, 254, 256, 257, 258, 259, 260, 261, 263, 287, 289, 300, 316, 317, 318, 319, 324, 325, 326], "configuration_path": [4, 292], "contain": [4, 5, 18, 19, 20, 65, 180, 181, 183, 199, 204, 223, 225, 254, 281, 289, 298, 316, 320, 323, 324], "global": [4, 13, 23, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 112, 114, 117, 119, 123, 125, 165, 167, 170, 173, 175, 180, 192, 254], "microscop": [4, 10, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 112, 114, 117, 119, 123, 125, 139, 141, 160, 162, 165, 167, 170, 173, 175, 180, 183, 192, 194, 198, 241, 254, 306, 317, 318, 323, 325, 326], "i": [4, 10, 12, 20, 24, 28, 53, 56, 59, 61, 64, 65, 66, 68, 72, 73, 83, 85, 89, 90, 114, 115, 117, 119, 125, 128, 141, 153, 155, 170, 173, 175, 177, 180, 183, 186, 188, 192, 194, 196, 197, 198, 199, 204, 218, 236, 241, 248, 252, 254, 258, 266, 267, 268, 270, 282, 284, 292, 293, 296, 298, 300, 304, 316, 317, 318, 319, 322, 323, 324, 325, 326], "hardwar": [4, 65, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 112, 114, 117, 119, 165, 167, 170, 173, 175, 177, 180, 188, 192, 236, 252, 317, 320, 323, 325, 327], "setup": [4, 197, 198, 316, 323, 324, 326], "experiment_path": [4, 292], "per": [4, 12, 59, 64, 65, 78, 85, 128, 170, 218, 317, 326], "experi": [4, 78, 80, 83, 85, 153, 155, 214, 236, 241, 245, 247, 248, 250, 284, 292, 318, 325], "waveform_constants_path": [4, 292], "remot": [4, 10, 100, 125, 139, 160, 162, 258, 292, 322, 326], "focu": [4, 10, 100, 125, 139, 160, 162, 170, 173, 192, 194, 204, 245, 252, 258, 296, 316, 317, 326], "all": [4, 12, 13, 19, 59, 61, 64, 65, 66, 67, 68, 83, 114, 115, 117, 119, 123, 125, 170, 173, 175, 177, 180, 183, 186, 188, 218, 252, 254, 282, 289, 295, 316, 317, 318, 324, 326], "magnif": [4, 192, 194], "rest_api_path": [4, 292], "rest": [4, 117, 292, 316, 323], "api": [4, 65, 90, 114, 115, 117, 120, 170, 180, 292, 316, 320, 323, 326], "waveform_templates_path": [4, 292], "waveform": [4, 123, 125, 139, 141, 160, 162, 252, 254, 292, 306, 318, 323, 326], "templat": [4, 65, 292, 306, 323], "kwarg": [5, 12, 13, 59, 61, 64, 65, 66, 67, 68, 72, 73, 88, 224, 226, 239, 254], "load": [5, 65, 91, 117, 128, 252, 254, 276, 283, 289, 318], "list": [5, 10, 18, 19, 34, 65, 99, 180, 183, 196, 199, 204, 231, 233, 234, 241, 245, 250, 252, 254, 273, 274, 275, 283, 286, 298, 316, 323, 324], "config_dict": 5, "amalgam": 5, "input": [5, 34, 38, 44, 45, 46, 47, 48, 49, 50, 65, 281, 291, 292, 304, 326], "config_nam": 6, "new_config": 6, "bool": [6, 10, 18, 19, 20, 23, 25, 61, 65, 66, 67, 68, 78, 80, 83, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 114, 115, 117, 128, 131, 133, 136, 170, 175, 177, 180, 183, 186, 188, 192, 194, 199, 241, 245, 252, 254, 266, 268, 284, 293, 298, 300], "read": [6, 65, 78, 80, 83, 85, 133, 136, 183, 192, 194, 324], "new": [6, 10, 50, 65, 83, 170, 175, 177, 180, 183, 186, 188, 218, 241, 274, 281, 286, 298, 318, 320, 323, 324, 325], "updat": [6, 65, 252, 254, 270, 286, 298, 316, 323, 325], "info": [6, 10], "subdictionari": 6, "replac": [6, 65, 316, 324], "valu": [6, 10, 12, 18, 42, 50, 59, 64, 65, 114, 115, 117, 120, 170, 173, 175, 177, 180, 183, 186, 188, 192, 194, 204, 205, 234, 241, 248, 257, 295, 304, 316, 317, 318, 324, 325], "true": [6, 12, 21, 59, 61, 64, 65, 66, 67, 68, 128, 133, 136, 170, 173, 175, 177, 180, 183, 186, 188, 252, 254, 266, 284, 293, 300, 317], "fals": [6, 12, 23, 42, 59, 61, 62, 64, 65, 66, 67, 68, 83, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 114, 115, 117, 119, 170, 173, 175, 177, 180, 183, 186, 188, 192, 194, 198, 216, 224, 226, 227, 241, 252, 254, 266, 284, 298], "class": [9, 10, 11, 12, 13, 14, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 127, 128, 130, 131, 132, 133, 135, 136, 138, 139, 140, 141, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 179, 180, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 235, 236, 237, 238, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 271, 272, 276, 277, 278, 288, 289, 318, 319], "base": [10, 12, 13, 14, 19, 47, 59, 61, 62, 64, 65, 66, 67, 68, 70, 71, 75, 78, 80, 83, 85, 87, 112, 114, 115, 117, 119, 120, 123, 125, 128, 131, 133, 136, 139, 141, 144, 146, 148, 149, 151, 153, 155, 157, 160, 162, 165, 167, 170, 173, 175, 177, 180, 183, 186, 188, 192, 194, 196, 197, 198, 199, 202, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 220, 222, 223, 224, 225, 226, 227, 236, 238, 241, 245, 247, 248, 250, 252, 254, 272, 278, 289, 296, 298, 316, 318, 319, 325, 326], "thi": [10, 12, 53, 56, 59, 61, 62, 64, 65, 66, 67, 68, 71, 72, 73, 78, 80, 83, 85, 114, 115, 117, 119, 125, 141, 170, 173, 175, 177, 180, 183, 186, 188, 192, 194, 196, 197, 198, 199, 204, 236, 248, 252, 254, 268, 273, 274, 275, 276, 281, 282, 295, 296, 300, 306, 316, 317, 318, 319, 322, 323, 324, 325, 326], "The": [10, 12, 13, 59, 64, 65, 72, 73, 88, 125, 141, 162, 192, 194, 196, 197, 198, 199, 204, 233, 258, 262, 270, 279, 295, 297, 300, 304, 316, 318, 323, 324, 325, 326], "microscope_nam": [10, 89, 95, 97, 98, 99, 100, 101, 102, 103, 112, 114, 115, 117, 119, 123, 125, 128, 131, 133, 136, 139, 141, 149, 151, 160, 162, 165, 167, 170, 173, 175, 177, 180, 183, 186, 188, 192, 194, 252], "microscope_config": 10, "change_microscop": 10, "accord": [10, 65, 114, 115, 117, 119, 153, 155], "get_microscope_configuration_dict": 10, "get_stage_position_limit": 10, "suffix": 10, "posit": [10, 18, 20, 46, 65, 83, 128, 131, 133, 136, 170, 173, 175, 177, 180, 183, 186, 188, 192, 194, 204, 241, 245, 252, 254, 270, 295, 296, 298, 316, 324, 326], "limit": [10, 61, 65, 66, 67, 68, 170, 173, 175, 180, 318], "stage": [10, 93, 102, 192, 194, 204, 218, 241, 245, 252, 254, 317, 318, 319, 323], "__init__": [10, 12, 13, 14, 59, 61, 62, 64, 65, 66, 67, 68, 70, 71, 75, 78, 80, 83, 85, 87, 88, 112, 114, 115, 117, 119, 120, 123, 125, 128, 131, 133, 136, 139, 141, 144, 146, 149, 151, 153, 155, 157, 160, 162, 165, 167, 170, 173, 175, 177, 180, 183, 186, 188, 192, 194, 196, 197, 198, 199, 202, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 220, 222, 223, 224, 225, 226, 227, 236, 238, 241, 245, 247, 248, 250, 252, 254, 272, 278, 289, 317], "method": [10, 12, 13, 14, 59, 61, 62, 64, 65, 66, 67, 68, 70, 71, 75, 78, 80, 83, 85, 87, 112, 114, 115, 117, 119, 120, 123, 125, 128, 131, 133, 136, 139, 141, 144, 146, 149, 151, 153, 155, 157, 160, 162, 165, 167, 170, 173, 175, 177, 180, 183, 186, 188, 192, 194, 196, 197, 198, 199, 202, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 220, 222, 223, 224, 225, 226, 227, 236, 238, 241, 245, 247, 248, 250, 252, 254, 272, 278, 289, 317], "attribut": [10, 12, 59, 64, 65, 66, 78, 80, 83, 85, 112, 114, 115, 117, 119, 129, 134, 165, 167, 170, 173, 175, 177, 180, 183, 186, 188, 245, 247, 248, 250, 289], "result": [10, 64, 65, 73, 88, 114, 115, 117, 192, 194, 233, 275, 318], "microscope_configuration_dict": 10, "_min": 10, "_max": 10, "position_limit": 10, "depend": [10, 65, 128, 296, 317, 323], "min": [10, 18, 20, 65, 170, 173, 175, 180, 316, 324], "max": [10, 65, 170, 173, 175, 180, 316, 324, 326], "x": [10, 20, 42, 65, 78, 80, 83, 85, 170, 173, 175, 177, 180, 183, 186, 188, 205, 241, 245, 254, 266, 267, 286, 287, 289, 295, 296, 297, 298, 304, 316, 324], "2000": [10, 65, 316, 326], "y": [10, 20, 35, 42, 65, 78, 80, 83, 85, 170, 173, 175, 177, 180, 183, 186, 188, 205, 241, 245, 254, 286, 287, 289, 296, 298, 304, 316, 324], "z": [10, 35, 65, 78, 80, 83, 85, 157, 170, 173, 175, 177, 180, 183, 186, 188, 216, 218, 241, 245, 266, 267, 268, 296, 298, 304, 316, 317, 324], "theta": [10, 170, 173, 175, 177, 180, 183, 186, 188, 245, 296, 316, 324], "0": [10, 19, 20, 24, 30, 47, 65, 88, 90, 98, 99, 102, 114, 115, 117, 119, 129, 131, 133, 134, 136, 139, 141, 160, 162, 170, 173, 175, 177, 180, 183, 184, 186, 188, 192, 194, 197, 209, 236, 241, 250, 254, 256, 257, 258, 259, 260, 261, 263, 266, 267, 268, 287, 295, 300, 304, 316, 322, 324], "f": [10, 64, 65, 170, 173, 175, 177, 180, 183, 186, 188, 192, 194, 204, 245, 296, 298, 316, 318, 322, 324, 326], "properti": [10, 12, 59, 64, 65, 78, 80, 83, 85, 114, 115, 117, 119, 157, 245, 247, 248, 250, 289, 317, 318], "camera_config_dict": 10, "camera": [10, 18, 20, 65, 85, 90, 95, 123, 125, 139, 141, 160, 252, 254, 256, 316, 322, 323], "camera_set": 10, "set": [10, 12, 23, 59, 61, 64, 65, 78, 80, 83, 85, 112, 114, 115, 117, 119, 125, 128, 133, 136, 149, 151, 153, 155, 170, 173, 175, 177, 180, 183, 186, 188, 197, 198, 254, 298, 316, 317, 319, 324, 325], "camera_pixel": 10, "default": [10, 12, 13, 38, 47, 59, 61, 64, 65, 114, 115, 117, 119, 131, 133, 136, 139, 170, 218, 236, 252, 254, 260, 284, 287, 292, 316, 318, 324, 326], "pixel": [10, 18, 19, 20, 24, 44, 254, 266, 267, 268, 287, 304], "from": [10, 12, 13, 23, 26, 32, 38, 49, 50, 56, 59, 61, 64, 65, 66, 70, 72, 73, 78, 80, 83, 85, 88, 91, 114, 115, 117, 119, 133, 136, 141, 157, 167, 180, 183, 204, 245, 247, 248, 250, 252, 254, 258, 276, 281, 282, 283, 287, 295, 300, 302, 303, 304, 308, 316, 318, 319, 323, 325, 326], "x_pixel": [10, 324], "int": [10, 18, 19, 20, 23, 25, 61, 65, 66, 67, 68, 78, 80, 83, 85, 88, 90, 98, 99, 102, 112, 114, 115, 117, 119, 120, 125, 129, 131, 133, 134, 136, 139, 141, 160, 171, 183, 184, 192, 194, 199, 204, 236, 245, 250, 252, 254, 260, 262, 268, 286, 287, 295, 296, 297, 300, 304, 306, 316], "number": [10, 12, 44, 47, 59, 64, 65, 88, 114, 115, 117, 119, 133, 136, 139, 160, 170, 181, 204, 236, 252, 254, 295, 296, 297, 300, 306, 316, 318, 323], "y_pixel": [10, 324], "channels_info": 10, "channel": [10, 83, 85, 123, 125, 139, 141, 160, 162, 188, 204, 236, 252, 254, 324, 326], "popul": [10, 119], "combobox": 10, "avail": [10, 12, 59, 64, 65, 72, 192, 194, 236, 293, 316, 318, 325, 326], "laser": [10, 99, 125, 165, 260, 261, 263, 316, 317, 322, 323], "488nm": [10, 324], "561nm": 10, "642nm": [10, 324], "filter": [10, 47, 92, 97, 128, 129, 131, 133, 134, 136, 183, 322, 323], "empti": [10, 65, 133, 136, 183, 204, 324], "align": [10, 65, 133, 136, 324], "gfp": [10, 131, 133, 136, 324], "ff01": [10, 324], "515": [10, 324], "30": [10, 65, 304, 316, 324], "32": [10, 38, 65, 324], "daq_sample_r": 10, "daq": [10, 96, 99, 101, 153, 155, 252, 254, 316], "sampl": [10, 47, 139, 160, 266, 267, 268, 317, 322, 326], "rate": [10, 114, 115, 117, 119, 129, 134, 136, 139, 160, 171, 184], "float": [10, 12, 18, 19, 20, 23, 24, 25, 38, 59, 61, 64, 65, 66, 67, 68, 78, 80, 83, 85, 112, 114, 115, 117, 119, 125, 133, 136, 139, 141, 157, 160, 170, 173, 175, 177, 180, 183, 184, 186, 188, 196, 204, 205, 241, 245, 252, 256, 257, 258, 259, 260, 261, 263, 266, 267, 268, 295, 296, 297, 303, 304, 316], "filter_wheel_setting_dict": 10, "wheel": [10, 92, 97, 128, 129, 131, 133, 134, 136, 183, 322, 323], "galvo_parameter_dict": 10, "galvo": [10, 89, 98, 123, 125, 175, 257, 259, 292, 318], "lasers_info": 10, "laser_list": 10, "number_of_channel": 10, "remote_focus_dict": 10, "delay_perc": [10, 324], "pulse_perc": [10, 324], "remote_focus_paramet": 10, "percent": [10, 139, 160, 241, 256, 258, 259, 261, 263, 316], "delai": [10, 139, 160, 192, 194, 258, 261], "puls": [10, 170, 261, 324, 326], "stage_default_posit": 10, "current": [10, 12, 19, 59, 64, 65, 114, 115, 117, 119, 120, 167, 170, 180, 192, 194, 204, 218, 236, 241, 254, 296, 316, 324], "stage_setting_dict": 10, "stage_step": 10, "step": [10, 65, 204, 210, 218, 224, 226, 227, 316, 317, 324, 325], "size": [10, 18, 19, 20, 65, 78, 80, 83, 85, 114, 115, 117, 119, 204, 218, 236, 245, 247, 248, 250, 254, 266, 267, 268, 287, 295, 316, 324], "same": [10, 12, 18, 20, 59, 64, 65, 192, 194, 250, 284, 289], "group": [12, 59, 64], "target": [12, 13, 19, 59, 64, 72, 73, 180, 192, 194, 254, 270], "arg": [12, 13, 59, 61, 64, 65, 66, 67, 68, 72, 73, 88, 89, 196, 228, 229, 254, 273, 292, 293], "daemon": [12, 59, 64], "thread": [12, 13, 59, 62, 64, 66, 72, 73, 92, 93, 94, 96, 97, 99, 101, 103, 199, 204, 254], "constructor": [12, 59, 64], "should": [12, 59, 64, 65, 72, 73, 85, 114, 115, 117, 119, 170, 295, 316, 318, 324, 325, 326], "alwai": [12, 59, 64, 65], "call": [12, 59, 61, 62, 64, 65, 72, 73, 117, 125, 175, 177, 183, 186, 188, 204, 236, 254, 316, 324, 325], "keyword": [12, 13, 59, 64, 65, 72, 78, 80, 83, 85, 254], "argument": [12, 13, 59, 61, 62, 64, 65, 66, 67, 68, 71, 72, 78, 80, 83, 85, 88, 128, 133, 136, 254, 273, 291, 292, 317], "reserv": [12, 59, 64], "futur": [12, 59, 64, 65, 318], "extens": [12, 59, 64, 236, 318], "when": [12, 59, 62, 64, 65, 73, 170, 252, 254, 316, 317, 318, 324, 325, 326], "threadgroup": [12, 59, 64], "implement": [12, 59, 64, 65, 78, 80, 83, 85, 117, 175, 177, 183, 186, 188, 248, 316, 326], "callabl": [12, 13, 59, 61, 62, 64, 66, 67, 68, 71], "invok": [12, 59, 64, 65], "run": [12, 13, 59, 61, 64, 66, 67, 68, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 125, 204, 254, 316, 317, 318, 324, 325, 326], "mean": [12, 24, 59, 64, 65, 267], "noth": [12, 59, 64], "By": [12, 59, 61, 64, 65, 324, 326], "uniqu": [12, 59, 64, 326], "construct": [12, 59, 64, 65, 192, 194, 241], "form": [12, 59, 64, 65, 318, 326], "n": [12, 59, 64, 65, 83, 207, 209, 241, 266, 267, 268, 302, 303, 304, 318, 324, 325], "where": [12, 59, 64, 65, 236, 254, 316, 317, 319, 324, 325], "small": [12, 59, 64, 318], "decim": [12, 59, 64, 65], "tupl": [12, 13, 25, 59, 64, 65, 78, 80, 83, 85, 88, 245, 247, 248, 250, 287, 289, 302], "invoc": [12, 59, 64], "If": [12, 42, 59, 61, 62, 64, 65, 66, 67, 68, 70, 71, 73, 85, 125, 204, 234, 236, 254, 266, 289, 292, 316, 318, 324, 325, 326], "subclass": [12, 59, 61, 64, 65], "overrid": [12, 59, 64, 78], "must": [12, 18, 20, 59, 64, 65, 72, 133, 304, 317, 318, 326], "make": [12, 33, 59, 62, 64, 65, 71, 85, 170, 173, 175, 180, 296, 316, 318, 320, 324], "sure": [12, 59, 64, 65, 170, 173, 175, 180, 316, 324], "befor": [12, 59, 64, 65, 149, 151, 183, 196, 298, 317, 325], "do": [12, 56, 59, 64, 65, 114, 115, 125, 170, 245, 248, 250, 316, 318, 324, 325, 326], "anyth": [12, 59, 64], "els": [12, 59, 64], "getnam": [12, 59, 64], "string": [12, 59, 61, 62, 64, 65, 83, 128, 131, 133, 136, 141, 233, 234, 236, 254, 283, 284, 308], "identif": [12, 59, 64], "purpos": [12, 59, 64, 65, 73, 123, 125, 141, 325], "onli": [12, 59, 64, 65, 85, 125, 170, 175, 218, 256, 304, 316, 318, 324, 325, 326], "deprec": [12, 59, 64, 65], "instead": [12, 59, 64, 65, 73, 316, 324], "isdaemon": [12, 59, 64], "whether": [12, 59, 64, 65, 90, 117, 170, 173, 175, 177, 180, 183, 186, 188, 254, 300], "islock": 12, "check": [12, 65, 88, 128, 131, 133, 136, 192, 194, 254], "lock": [12, 65], "is_al": [12, 59, 64], "aliv": [12, 59, 64], "just": [12, 59, 64, 65, 66], "start": [12, 20, 59, 61, 64, 65, 117, 125, 139, 141, 160, 162, 170, 199, 252, 254, 258, 296, 300, 316, 317, 318, 325, 326], "until": [12, 59, 64, 72, 125, 170, 175, 177, 180, 183, 186, 188, 252, 254], "after": [12, 59, 64, 65, 120, 170, 192, 194, 254, 318, 324, 325], "termin": [12, 59, 64, 252, 318, 324, 325, 326], "see": [12, 59, 61, 64, 65, 72, 73, 131, 133, 248, 309, 318, 323, 325], "also": [12, 59, 64, 65, 318, 325, 326], "enumer": [12, 59, 64], "join": [12, 59, 64, 73], "timeout": [12, 59, 64, 129, 134, 171, 184, 197], "wait": [12, 59, 64, 72, 114, 115, 117, 119, 125, 128, 133, 136, 171, 180, 183, 196, 252, 254, 317], "block": [12, 59, 64, 65, 170, 175, 177, 180, 183, 186, 188, 314], "whose": [12, 59, 64, 65], "either": [12, 59, 64, 65, 119, 316, 324], "normal": [12, 29, 32, 45, 47, 59, 64, 65, 112, 114, 115, 117, 119, 252, 324], "through": [12, 42, 59, 64, 65, 241], "an": [12, 18, 19, 20, 23, 25, 26, 39, 49, 53, 59, 61, 62, 64, 65, 66, 67, 68, 71, 72, 73, 88, 112, 114, 115, 117, 119, 170, 173, 175, 177, 180, 183, 186, 188, 245, 248, 254, 286, 292, 295, 298, 304, 309, 316, 317, 318, 319, 324, 326], "unhandl": [12, 59, 64], "except": [12, 59, 61, 64, 65, 66, 67, 68, 73, 88, 170, 173, 175, 177, 180, 183, 186, 188], "option": [12, 13, 19, 59, 62, 64, 65, 117, 139, 252, 260, 316, 317, 318], "occur": [12, 59, 64, 65, 170, 319], "present": [12, 20, 59, 64], "point": [12, 59, 61, 64, 65, 83, 236, 286, 302, 303, 304, 316], "specifi": [12, 59, 64, 65, 133, 136, 236, 281, 284, 316, 317, 324], "oper": [12, 59, 62, 64, 68, 71, 170, 173, 175, 180, 218, 252, 317, 319, 322, 324, 325, 326], "second": [12, 59, 64, 65, 114, 115, 117, 119, 133, 139, 141, 170, 252, 256, 257, 258, 259, 260, 261, 263, 316, 324], "fraction": [12, 59, 64, 295, 296], "thereof": [12, 59, 64], "As": [12, 59, 62, 64, 65, 71, 317, 326], "you": [12, 59, 62, 64, 65, 70, 71, 72, 73, 316, 318, 324, 325, 326], "decid": [12, 59, 64, 316, 324], "happen": [12, 59, 64, 317], "still": [12, 59, 64, 65, 316, 317, 324, 325, 326], "time": [12, 59, 64, 65, 83, 88, 112, 114, 115, 117, 119, 123, 125, 128, 133, 136, 139, 141, 160, 162, 171, 184, 196, 218, 236, 252, 254, 256, 279, 316, 319, 324, 326], "out": [12, 59, 61, 64, 65, 114, 115, 197, 204, 209, 241, 261, 295, 296, 316, 318, 324, 326], "A": [12, 59, 64, 65, 72, 73, 170, 173, 175, 177, 180, 183, 186, 188, 207, 209, 233, 234, 241, 283, 289, 295, 304, 317, 318, 324, 326], "can": [12, 59, 62, 64, 65, 66, 70, 73, 78, 80, 83, 85, 119, 170, 234, 248, 254, 289, 316, 317, 318, 319, 324, 325, 326], "ed": [12, 59, 64], "mani": [12, 59, 64, 65, 85, 204, 317, 318, 324], "rais": [12, 59, 61, 64, 65, 66, 67, 68, 73, 89, 289], "runtimeerror": [12, 59, 64, 65, 66], "attempt": [12, 59, 64, 65, 88], "made": [12, 59, 64, 65], "would": [12, 59, 61, 64, 65, 316, 324, 326], "caus": [12, 59, 64, 65], "deadlock": [12, 59, 64], "It": [12, 59, 64, 65, 204, 218, 281, 316, 323, 324, 325, 326], "error": [12, 59, 64, 65, 73, 89, 266, 267, 283, 287, 318, 325], "ha": [12, 59, 64, 65, 70, 170, 175, 177, 180, 183, 186, 188, 218, 283, 293, 295, 316, 317, 322, 324], "been": [12, 59, 64], "so": [12, 59, 64, 65, 73, 125, 218, 316, 325, 326], "setdaemon": [12, 59, 64], "setnam": [12, 59, 64], "": [12, 24, 59, 62, 64, 65, 112, 114, 115, 119, 184, 236, 316, 317, 318, 325], "activ": [12, 59, 64, 114, 115, 117, 119, 123, 125, 254, 318, 323, 324, 325, 326], "most": [12, 59, 64, 65, 318, 324, 326], "onc": [12, 59, 64, 65, 317, 325, 326], "arrang": [12, 59, 64], "separ": [12, 59, 64, 65, 248, 273, 318, 322], "more": [12, 59, 64, 65, 85, 170, 173, 175, 177, 180, 183, 186, 188, 316, 318, 323, 325], "than": [12, 18, 20, 59, 64, 65, 78, 85, 114, 115, 117, 119, 318, 326], "unlock": 12, "finish": [12, 183, 204], "boolean": [12, 59, 64, 65], "indic": [12, 18, 59, 64, 65, 236, 241, 252, 295, 317], "otherwis": [12, 59, 64, 65, 252, 284], "Its": [12, 59, 64], "initi": [12, 14, 59, 62, 64, 65, 70, 71, 78, 80, 83, 85, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 114, 115, 117, 119, 125, 149, 151, 170, 171, 173, 175, 177, 180, 183, 186, 188, 196, 204, 254, 324], "inherit": [12, 59, 64, 65, 88], "creat": [12, 13, 59, 61, 64, 65, 73, 125, 170, 175, 177, 180, 183, 188, 254, 257, 259, 260, 261, 263, 281, 286, 287, 296, 318, 325, 326], "main": [12, 59, 64, 73, 317, 318], "therefor": [12, 59, 64, 65], "entir": [12, 59, 64, 241], "python": [12, 59, 62, 64, 65, 71, 78, 80, 83, 85, 245, 247, 248, 250, 276, 282, 308, 316, 323, 324], "exit": [12, 59, 62, 64, 149, 151, 317], "left": [12, 59, 64, 65, 167, 258, 286, 287, 295, 325], "ident": [12, 59, 64, 324], "identifi": [12, 34, 35, 59, 64, 133, 326], "nonzero": [12, 59, 64, 65], "integ": [12, 59, 64, 65, 256, 257, 258, 259, 261, 263, 318], "get_id": [12, 59, 64], "mai": [12, 59, 64, 65, 317, 318, 325, 326], "recycl": [12, 59, 64], "anoth": [12, 59, 61, 64, 65, 73, 316, 318, 324, 325], "even": [12, 23, 59, 64, 65], "semant": [12, 59, 64], "multipl": [12, 23, 25, 34, 59, 64, 65, 66, 248, 326], "given": [12, 24, 59, 64, 65, 81, 114, 115, 117, 119, 128, 131, 133, 136, 139, 141, 162, 298, 325], "native_id": [12, 59, 64], "nativ": [12, 59, 64, 65], "integr": [12, 59, 64, 326], "id": [12, 59, 64, 89, 90, 98, 99, 102, 117, 139, 141, 199, 204], "non": [12, 59, 64, 65, 292], "neg": [12, 59, 64], "get_native_id": [12, 59, 64], "repres": [12, 59, 64, 234, 316, 324], "report": [12, 59, 64, 170, 175, 177, 180, 183, 188, 254, 318], "kernel": [12, 59, 64], "clear": [13, 65, 196, 197, 254], "pool": 13, "createthread": 13, "resourcenam": 13, "callback": 13, "cbarg": 13, "cbkarg": 13, "add": [13, 28, 61, 291, 292, 316, 318, 324, 325], "waitlist": 13, "resourc": [13, 59, 66, 72], "getrunningthread": 13, "globaltrac": 13, "frame": [13, 23, 24, 25, 85, 114, 115, 117, 119, 199, 204, 241, 252, 254, 322, 326], "event": 13, "trace": [13, 65], "ani": [13, 59, 61, 64, 65, 78, 80, 83, 85, 317, 326], "killthreadinlist": 13, "threadlist": 13, "kill": 13, "localtrac": 13, "movetodelet": 13, "taskthread": 13, "move": [13, 56, 65, 85, 128, 133, 136, 170, 173, 175, 177, 180, 183, 186, 188, 192, 194, 204, 241, 252, 254, 316, 317, 324, 326], "todeletelist": 13, "selflockthread": 13, "registerresourc": 13, "regist": [13, 326], "removethread": 13, "remov": [13, 65, 316, 324], "threadtaskwrap": 13, "wrap": [13, 279], "img_data": 18, "_supportsarrai": [18, 19, 20, 23, 25, 78, 80, 83, 85, 245, 268], "dtype": [18, 19, 20, 23, 25, 64, 65, 68, 70, 78, 80, 83, 85, 245, 268], "_nestedsequ": [18, 19, 20, 23, 25, 78, 80, 83, 85, 245, 268], "complex": [18, 19, 20, 23, 25, 45, 65, 78, 80, 83, 85, 245, 268], "byte": [18, 19, 20, 23, 25, 65, 78, 80, 83, 85, 133, 136, 183, 245, 268], "boundari": [18, 19, 21, 241, 295], "width": [18, 20, 65, 112, 114, 115, 117, 119, 252, 266, 267, 268, 286, 302], "1": [18, 19, 20, 24, 45, 47, 64, 65, 78, 80, 83, 85, 90, 117, 120, 160, 162, 170, 196, 209, 210, 218, 225, 241, 250, 252, 254, 257, 258, 259, 260, 261, 263, 266, 267, 268, 295, 304, 316, 324, 325, 326], "offset": [18, 20, 23, 25, 26, 65, 160, 162, 192, 194, 204, 205, 252, 254, 258, 259, 260, 261, 263, 266, 267, 268, 287, 324], "varianc": [18, 20, 25, 26, 65, 254], "perform": [18, 50, 61, 66, 67, 68, 133, 317, 323, 326], "binari": [18, 65, 287], "search": [18, 325], "tissu": [18, 19, 20, 209, 241], "imag": [18, 19, 20, 23, 25, 26, 28, 29, 32, 35, 38, 39, 42, 44, 45, 47, 48, 49, 53, 65, 114, 115, 117, 119, 125, 157, 204, 209, 236, 241, 252, 254, 266, 267, 268, 289, 296, 304, 317, 322, 326], "locat": [18, 65, 133, 192, 194, 292, 316, 325, 326], "image_data": [18, 19, 20, 28, 30, 32, 35, 36, 38, 53], "npt": [18, 19, 20, 23, 25, 78, 80, 83, 85, 302, 303, 304], "arraylik": [18, 19, 20, 23, 25, 78, 80, 83, 85, 302, 303, 304], "xy": [18, 23, 286], "presenc": 18, "subimag": [18, 20], "smaller": [18, 20, 65], "shape": [18, 20, 33, 65, 68, 70, 78, 80, 83, 85, 245, 247, 248, 250, 289], "map": [18, 20, 23, 25, 26, 50, 65, 248, 254, 316, 324], "mag_ratio": 19, "find": [19, 65, 241, 316, 317, 324, 325, 326], "otsu": [19, 31, 32], "threshold": [19, 31, 32], "space": [19, 45, 47, 65, 209, 236, 295, 296], "resampl": 19, "ratio": 19, "over": [19, 65, 325], "tile": [19, 241, 295, 296], "row": [19, 65, 298, 316], "downsampl": 19, "determin": [20, 65], "direct": [21, 35, 65, 112, 114, 115, 117, 119, 241, 266, 267, 268, 286, 318, 325, 326], "offset_map": [23, 26], "comput": [23, 25, 26, 316, 324, 325, 326], "flatfield": 23, "evenli": 23, "illumin": 23, "scmo": [23, 24, 25], "zyx": [23, 25, 78], "defocus": 23, "signal": [23, 24, 125, 197, 198, 199, 230, 254, 259, 317, 326], "np": [23, 24, 64, 65, 133, 236, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 287, 296, 298], "absenc": 23, "oppos": 23, "fn": 24, "qe": 24, "82": 24, "ib": 24, "nr": 24, "4": [24, 65, 114, 157, 256, 257, 259, 260, 261, 263, 266, 267, 322, 324, 325], "m": [24, 39, 112, 114, 115, 119, 157, 181, 316, 324, 325], "http": [24, 39, 78, 80, 83, 85, 128, 133, 170, 245, 247, 248, 250, 282, 324, 325, 326], "www": [24, 133, 326], "hamamatsu": [24, 114, 115, 117, 322], "com": [24, 39, 78, 80, 83, 85, 128, 133, 170, 184, 245, 247, 248, 250, 325, 326], "content": [24, 65, 234, 275, 283, 284], "dam": 24, "photon": 24, "site": 24, "document": [24, 65, 114, 115, 117, 119, 170, 318, 323, 325], "99_sales_librari": 24, "sy": [24, 65], "scas0134e_c13440": 24, "20cu_tec": 24, "pdf": [24, 133], "nois": 24, "sigma": [24, 35, 204, 205], "excess": 24, "factor": [24, 170, 318], "unitless": 24, "quantum": 24, "effici": 24, "arrai": [24, 65, 68, 70, 78, 80, 83, 85, 257, 258, 259, 260, 261, 262, 263, 266, 268, 287, 289, 296, 298, 302, 303], "background": [24, 266, 267, 268], "readout": [24, 112, 114, 115, 117, 119, 139, 141, 160, 162, 252], "rm": 24, "em": 24, "gain": 24, "estim": [24, 39, 47, 128, 236], "electron": 24, "union": 25, "numpi": [25, 65, 70, 119, 160, 162, 252, 257, 258, 259, 260, 261, 262, 263, 289], "_array_lik": 25, "_nested_sequ": 25, "dark": 25, "taken": [25, 59, 64, 192, 194], "sequenti": [25, 59, 64], "variance_map": 26, "snr": 26, "border": 28, "median": 28, "requir": [28, 56, 65, 101, 170, 173, 175, 177, 180, 183, 186, 188, 254, 322, 325, 326], "3d": [28, 33, 42], "inside_imag": 29, "normalized_cel": 29, "surface_cel": 29, "combin": [29, 274], "insid": [29, 65, 325], "cell": [29, 31], "surfac": [29, 34, 35], "image_threshold": 30, "pixel_s": [30, 39, 266, 267, 268, 304, 324], "206": 30, "padded_image_data": 31, "insidegamma": 31, "insideblur": 31, "insidedilateradiu": 31, "insideeroderadiu": 31, "tri": [31, 88, 318], "fill": [31, 65, 204, 242], "interior": 31, "gaussian": [31, 266, 267, 268], "blur": 31, "follow": [31, 192, 194, 317, 318, 324, 325], "dilat": 31, "hole": 31, "eros": 31, "subtract": 32, "standard": [32, 59, 64, 65, 323], "deviat": [32, 65, 319], "radiu": [33, 303], "structur": [33, 65, 250, 254], "element": [33, 65, 196, 309], "sphere": 33, "scale": [34, 304], "each": [35, 42, 65, 70, 78, 80, 83, 85, 88, 123, 125, 160, 162, 170, 192, 194, 204, 236, 254, 273, 295, 296, 298, 304, 316, 317, 318, 319, 324, 326], "ndarrai": [38, 65, 68, 133, 160, 162, 236, 252, 266, 267, 268], "calcul": [38, 65, 112, 114, 115, 117, 119, 123, 125, 133, 136, 157, 204, 218, 252, 254, 256, 295, 326], "flat": [38, 65], "dark_field": 38, "correct": [38, 65, 153, 155], "bit": [38, 65, 236, 248], "data": [38, 53, 65, 78, 80, 81, 83, 85, 96, 114, 115, 117, 119, 123, 125, 197, 198, 199, 204, 218, 236, 252, 254, 281, 284, 298, 316, 317, 322, 323], "16": [38, 65, 236], "param": [38, 117], "flat_field": 38, "input_arrai": [39, 40, 41, 42], "number_high_pass_filt": 39, "10": [39, 47, 65, 88, 170, 256, 258, 259, 260, 261, 262, 263, 316, 324, 325], "fourier_sampl": [39, 47], "50": [39, 47, 259, 263, 324], "apodization_pixel": 39, "20": [39, 65, 324], "resolut": [39, 78, 153, 155, 183, 218, 241, 254, 322], "decorrel": [39, 46, 47], "github": [39, 78, 80, 83, 85, 245, 247, 248, 250, 323, 324, 325], "ades91": 39, "imdecorr": 39, "blob": 39, "master": [39, 125], "main_imagedecorr": 39, "psf_support_diameter_xi": [40, 41, 42], "use_gpu": [42, 254, 293], "2d": [42, 44, 47, 65, 266, 268], "iter": [42, 65], "plane": [42, 317, 326], "otf_support_x": 42, "support": [42, 65, 175, 323, 327], "otf": 42, "dimens": [42, 65, 78, 80, 83, 85, 254, 295, 296, 324], "otf_support_i": 42, "entropi": [42, 204], "input_imag": [44, 47, 48, 49], "number_pixel": 44, "apod": 44, "edg": 44, "output": [44, 45, 46, 47, 48, 49, 50, 61, 65, 99, 101, 125, 170, 261, 326], "output_imag": 44, "image_1": 45, "image_2": 45, "c1": 45, "c2": 45, "correl": 45, "coeffici": 45, "express": 45, "fourier": [45, 47], "transform": [45, 49, 317], "2": [45, 64, 65, 117, 197, 245, 258, 259, 266, 267, 304, 316, 322, 324, 325, 326], "correlation_coeffici": 45, "cross": 45, "decorrelation_funct": 46, "maxima": [46, 47], "max_index": 46, "max_amplitud": 46, "amplitud": [46, 47, 204, 205, 257, 258, 259, 260, 261, 263, 324], "number_highpass_filt": 47, "cut": 47, "off": [47, 196, 254, 317], "frequenc": [47, 259, 260, 263, 324], "analyz": 47, "linspac": 47, "high": [47, 207, 295, 322], "pass": [47, 59, 64, 65, 70, 71, 83, 123, 125, 254, 316, 319], "kcmax": 47, "a0": 47, "d0": 47, "radial": [48, 266, 267, 268], "averag": [48, 61, 65, 66, 67, 68], "squar": [48, 267], "im": 48, "r": [48, 78, 80, 83, 85, 298, 303], "imp": 49, "im2pol": 49, "imc": 49, "carthesian": 49, "polar": 49, "coordin": [49, 324], "input_valu": 50, "minimum_valu": 50, "maximum_valu": 50, "mapped_minimum_valu": 50, "mapped_maximum_valu": 50, "linear": [50, 326], "rang": [50, 170, 204], "minimum": [50, 65, 114, 115, 117, 119, 139, 160, 218, 316, 322, 324], "maximum": [50, 65, 114, 115, 117, 119, 139, 149, 151, 160, 204, 236, 316, 323, 324], "rescaled_valu": 50, "rescal": [50, 304], "shear_angl": 53, "z_pixel_s": 53, "xy_pixel_s": 53, "design": [53, 128, 131, 133, 136, 326], "deskew": 53, "uint16": [53, 65], "save": [53, 64, 117, 170, 173, 175, 177, 180, 183, 186, 188, 204, 236, 281, 284], "tiff": [53, 83, 119, 248, 250, 289], "spectral": 56, "unmix": 56, "need": [56, 65, 73, 114, 115, 117, 119, 133, 204, 218, 252, 254, 295, 316, 317, 324, 325, 326], "repo": [56, 325], "here": [56, 114, 115, 117, 258, 316, 318, 319, 324], "signific": 56, "organ": [56, 123, 125], "overhaul": 56, "first_resourc": [59, 72], "resultthread": [59, 60, 67], "access": [59, 64, 65, 66, 70, 78, 80, 83, 85, 316, 325], "order": [59, 65, 66, 316, 324], "thei": [59, 62, 65, 71, 125, 316, 324, 325, 326], "were": [59, 65, 325], "launch": [59, 64, 73, 324], "docstr": [59, 72, 73, 318], "top": [59, 72, 73, 112, 114, 115, 117, 119, 282, 316, 324], "get_result": [59, 64], "accept": [59, 64, 65, 72, 170, 292, 304, 317], "timeouterror": [59, 61, 64, 66, 67, 68], "respect": [59, 64, 65, 324], "control": [59, 64, 65, 90, 128, 131, 133, 171, 181, 194, 196, 197, 198, 199, 236, 252, 254, 270, 316, 317, 318, 323, 324], "alia": [60, 63, 65], "homemad": 61, "test": [61, 65, 66, 67, 68, 141, 196, 197, 198, 199], "mostli": 61, "written": [61, 65, 236, 318], "curios": 61, "what": [61, 65, 268, 295, 316, 317, 324], "featur": [61, 64, 199, 254, 318, 320, 323], "want": [61, 65, 70, 133, 136, 316, 320, 324, 325, 326], "could": [61, 65, 282, 318, 326], "done": [61, 65, 252, 254, 316, 324, 325, 326], "easili": 61, "without": [61, 62, 64, 65, 66, 70, 71, 236, 316, 318, 324, 326], "import": [61, 65, 141, 318, 323, 324, 326], "Not": [61, 120, 248, 256], "real": [61, 65, 254], "packag": [61, 325], "wasn": 61, "t": [61, 62, 64, 65, 71, 114, 115, 125, 250, 326], "To": [61, 65, 170, 248, 316, 318, 320, 324, 326], "test_": [61, 66, 67, 68], "expect": [61, 64, 66, 67, 72, 78, 80, 83, 85, 170, 173, 175, 177, 180, 183, 186, 188, 316, 318, 324], "gener": [61, 65, 83, 119, 197, 236, 250, 266, 267, 268, 304, 317], "specif": [61, 65, 66, 67, 68, 170, 316, 324, 326], "print": [61, 64, 65, 114, 115, 117, 119, 300], "stdout": 61, "test_prefix": [61, 66, 67, 68], "fail": [61, 65, 66, 67, 68, 316, 317, 324], "fail_fast": [61, 66, 67, 68], "begin": [61, 65, 66, 67, 68], "time_it": [61, 66, 67, 68], "n_loop": [61, 66, 67, 68], "func": [61, 66, 67, 68, 88, 278, 279], "timeout_u": [61, 66, 67, 68], "allow": [61, 65, 66, 67, 68, 254, 316, 317, 318, 323, 324, 325, 326], "durat": [61, 66, 67, 68, 112, 114, 115, 117, 119, 125, 128, 133, 136, 184, 256, 279], "exce": [61, 66, 67, 68], "bar": [61, 66, 67, 68], "format": [61, 65, 66, 67, 68, 78, 80, 83, 85, 123, 125, 248, 316, 318, 324], "progress": [61, 66, 67, 68, 324, 326], "initarg": [62, 70, 71], "custom_loop": [62, 70, 71], "close_method_nam": [62, 71], "closearg": [62, 71], "closekwarg": [62, 71], "with_lock": 62, "initkwarg": [62, 70, 71], "child": [62, 64, 71, 231], "act": [62, 65, 71, 323], "like": [62, 65, 71, 72, 73, 289, 295, 316, 324, 325, 326], "isn": [62, 71], "much": [62, 71, 326], "possibl": [62, 65, 71, 258, 320], "try": [62, 64, 71, 318, 325], "instanc": [62, 65, 71, 72, 298, 316, 324], "behav": [62, 65, 68, 71, 316, 318, 324], "re": [62, 64, 71], "live": [62, 65, 71, 254, 318], "parent": [62, 64, 70, 71, 112, 123, 131, 139, 146, 160, 165, 173, 192], "cours": [62, 71], "have": [62, 65, 71, 125, 248, 316, 317, 318, 324, 325, 326], "spare": [62, 71], "core": [62, 65, 71], "your": [62, 65, 70, 71, 73, 282, 316, 318, 323, 324, 326], "machin": [62, 65, 71, 170, 318, 325], "turn": [62, 71, 231, 254, 316, 317, 324, 326], "cpu": [62, 65, 71], "bound": [62, 71, 170, 173, 175, 177, 180, 183, 186, 188, 316, 324], "which": [62, 65, 72, 78, 80, 83, 85, 153, 155, 170, 173, 175, 177, 180, 183, 186, 188, 241, 254, 302, 303, 316, 317, 318, 322, 324, 326], "parallel": [62, 326], "io": [62, 71], "too": [62, 71, 322], "mental": [62, 71], "overhead": [62, 66, 71, 254], "coder": [62, 71, 318], "our": [62, 64, 65, 70, 114, 115, 117, 119, 245, 248, 250, 316, 318, 323, 324, 325, 326], "automat": 62, "close_method": 62, "custodythread": [63, 66, 67], "simpl": [64, 65], "wish": 64, "had": 64, "chang": [64, 65, 114, 115, 117, 119, 128, 133, 136, 170, 192, 194, 254, 296, 324, 325, 326], "self": [64, 65, 114, 115, 123, 125, 133, 170, 173, 175, 177, 180, 183, 186, 188, 192, 194, 204, 236, 241, 317, 318], "trivial": 64, "u": [64, 65, 318, 326], "line": [64, 65, 72, 112, 114, 115, 117, 119, 286, 300, 318, 324], "code": [64, 65, 78, 80, 83, 85, 117, 120, 196, 204, 245, 247, 248, 250, 300, 316, 320, 323, 324, 325], "def": 64, "doe": [64, 65, 141, 309, 316, 324, 325, 326], "someth": [64, 65, 318, 324], "sum": [64, 65], "ones": 64, "uint8": [64, 65, 70], "problem": [64, 65, 325], "th": [64, 65], "redefin": 64, "solut": 64, "res_th": 64, "assert": 64, "handl": [64, 316, 324], "idea": 64, "attributeerror": [64, 65], "wa": [64, 65, 170, 175, 177, 180, 183, 186, 188, 254, 284], "assertionerror": 64, "dure": [64, 78, 80, 83, 85, 204, 258], "evalu": [64, 65, 153, 155, 279, 293, 302, 303, 304, 318, 324], "rerais": 64, "traceback": [64, 65], "stderr": 64, "don": [64, 114, 115, 326], "affect": [64, 65], "yet": [64, 316], "note": [64, 65, 170], "modifi": [64, 317, 318, 324], "excepthook": 64, "copi": [64, 65, 324], "past": 64, "definit": [64, 72, 73], "work": [64, 65, 125, 318, 325], "shared_memory_nam": 65, "stride": 65, "memori": [65, 70, 71, 254, 318], "objectinsubprocess": [65, 66], "serial": [65, 68, 70, 114, 115, 117, 128, 129, 133, 134, 136, 181, 183, 184, 275], "pretti": 65, "fast": [65, 170], "larg": [65, 318], "regularli": 65, "deal": [65, 248], "sens": 65, "provid": [65, 120, 170, 292, 316, 318, 319, 324, 326], "wai": [65, 254, 295, 316, 318, 324], "via": [65, 101, 125, 196, 262, 316], "avoid": [65, 287, 318, 324], "slow": [65, 70], "mayb": [65, 72, 73], "write": [65, 78, 80, 83, 85, 125, 236, 245, 248, 250, 254, 318], "look": [65, 120, 295, 316, 324, 326], "data_buf": 65, "zero": [65, 170, 173, 175, 177, 180, 183, 186, 188, 268], "400": 65, "display_buf": 65, "preprocessor": 65, "displai": [65, 89, 123, 125, 254], "record": 65, "num_imag": 65, "show": [65, 325, 326], "payoff": 65, "its": [65, 170, 175, 177, 180, 183, 186, 188, 317], "own": [65, 324], "AND": 65, "realli": 65, "memmap": 65, "axi": [65, 170, 173, 175, 177, 180, 183, 186, 188, 192, 194, 218, 295, 304, 316, 324], "keepdim": 65, "refer": [65, 181, 252, 258, 273, 320, 323], "full": [65, 316, 326], "equival": [65, 325, 326], "argmax": 65, "along": [65, 72, 73, 170, 175, 177, 180, 183, 186, 188, 254, 295, 296], "argmin": 65, "detail": [65, 133, 170], "argpartit": 65, "kth": 65, "kind": 65, "introselect": 65, "partit": 65, "version": [65, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 322, 324, 325], "8": [65, 133, 324, 325], "argsort": 65, "sort": 65, "astyp": 65, "k": 65, "cast": 65, "unsaf": 65, "subok": 65, "typecod": 65, "layout": 65, "fortran": 65, "contigu": 65, "close": [65, 78, 80, 83, 85, 114, 115, 117, 119, 125, 128, 133, 136, 139, 141, 149, 151, 160, 162, 167, 183, 236, 252, 254, 295, 317], "appear": 65, "equiv": 65, "safe": 65, "same_kind": 65, "backward": 65, "compat": [65, 325], "preserv": 65, "within": [65, 73, 170, 173, 175, 177, 180, 183, 186, 188, 304, 324, 325, 326], "float64": 65, "float32": 65, "convers": 65, "sub": [65, 236, 282], "forc": 65, "newli": [65, 254], "alloc": [65, 70], "satisfi": 65, "arr_t": 65, "unless": [65, 318], "other": [65, 70, 125, 157, 316, 318, 326], "condit": 65, "descript": 65, "17": 65, "one": [65, 72, 73, 83, 85, 170, 173, 175, 177, 180, 183, 186, 188, 224, 226, 227, 254, 316, 317, 326], "field": [65, 316, 324], "9": [65, 324, 325], "numer": [65, 266, 267, 268, 323], "mode": [65, 78, 80, 83, 85, 112, 114, 115, 117, 119, 149, 151, 153, 155, 181, 218, 252, 254, 322, 324, 326], "length": [65, 295, 296, 304], "long": 65, "enough": 65, "store": [65, 78, 80, 83, 85, 245, 247, 248, 250, 318], "convert": [65, 112, 114, 115, 117, 119, 170, 180, 183, 233, 234, 245, 247, 248, 250, 287, 298], "complexwarn": 65, "5": [65, 258, 316, 322, 324, 326], "byteswap": 65, "inplac": 65, "swap": 65, "toggl": 65, "low": [65, 295, 322], "endian": 65, "big": 65, "represent": [65, 78, 80, 83, 85, 245, 247, 248, 250, 309], "place": [65, 316, 324], "imaginari": 65, "part": [65, 318], "individu": [65, 323], "view": [65, 70, 75, 196, 197, 198, 199, 245, 250, 254, 318, 323], "256": 65, "8755": 65, "int16": 65, "hex": 65, "0x1": 65, "0x100": 65, "0x2233": 65, "13090": 65, "0x3322": 65, "b": 65, "ceg": 65, "fac": 65, "s3": 65, "newbyteord": 65, "produc": [65, 308], "differ": [65, 192, 194, 316, 319, 323, 324, 325, 326], "3": [65, 85, 245, 250, 263, 266, 267, 282, 302, 303, 304, 324, 325], "choos": 65, "choic": 65, "index": [65, 98, 99, 125, 153, 155, 192, 194, 236, 250, 252, 254, 266, 267, 268, 289, 316, 324], "clip": 65, "One": [65, 83], "compress": [65, 236], "select": [65, 85, 123, 125, 153, 155, 160, 162, 326], "slice": [65, 68, 289, 304], "conj": 65, "conjug": 65, "wise": 65, "match": [65, 268, 304, 316, 326], "veri": 65, "similar": [65, 316, 318, 324], "behavior": [65, 67, 296, 317, 318, 326], "copyto": 65, "prefer": 65, "6": [65, 250, 324], "flag": [65, 114, 115, 117, 119, 128, 131, 133, 136, 199, 254, 296, 325], "c_contigu": 65, "cumprod": 65, "cumul": 65, "product": [65, 170, 318, 323, 326], "cumsum": 65, "diagon": 65, "axis1": 65, "axis2": 65, "In": [65, 248, 316, 318, 324, 326], "previou": 65, "restrict": 65, "dump": 65, "pickl": 65, "back": [65, 248, 258, 326], "pathlib": 65, "now": [65, 245, 325], "scalar": 65, "assign": 65, "flatten": [65, 266], "collaps": 65, "major": 65, "style": [65, 326], "column": 65, "ravel": [65, 266], "d": [65, 119, 308, 309], "getfield": 65, "certain": 65, "fit": [65, 204, 205, 266, 267], "complex128": 65, "take": [65, 85, 296], "12": [65, 324], "larger": 65, "itself": 65, "skip": 65, "diag": 65, "j": [65, 157], "item": [65, 314, 316, 324], "variabl": [65, 157, 318, 325], "case": [65, 318], "int_typ": 65, "interpret": 65, "singl": [65, 85, 157, 170, 175, 177, 180, 183, 186, 188, 261, 289, 295], "nd": 65, "suitabl": 65, "longdoubl": 65, "clongdoubl": 65, "becaus": [65, 316], "lose": 65, "inform": [65, 114, 115, 117, 119, 133, 254, 281, 284, 295, 316, 318, 324, 325], "void": 65, "buffer": [65, 114, 115, 117, 119, 236, 252, 254], "defin": [65, 88, 248, 304, 316, 324], "speed": [65, 133, 170, 183, 318, 322], "up": [65, 78, 80, 83, 85, 117, 120, 125, 197, 198, 218, 286, 324, 326], "arithmet": 65, "optim": [65, 326], "math": 65, "random": [65, 68], "seed": 65, "123": 65, "randint": 65, "7": [65, 258, 322, 324, 325], "itemset": 65, "There": [65, 248, 326], "least": 65, "last": [65, 295, 325], "Then": 65, "faster": 65, "two": [65, 254, 316, 324], "first": [65, 70, 192, 194, 196, 248, 295, 316, 324, 325, 326], "compar": [65, 204], "syntax": 65, "some": [65, 70, 78, 80, 83, 85, 245, 247, 248, 250, 317, 318, 325, 326], "increas": [65, 318], "particular": [65, 326], "howev": [65, 318, 326], "discourag": 65, "among": 65, "complic": 65, "loop": 65, "amax": 65, "amin": 65, "new_ord": 65, "arr": 65, "newbytord": 65, "below": [65, 316, 317, 318, 322, 324, 325], "opposit": 65, "littl": 65, "byteord": 65, "ignor": [65, 245, 318], "new_arr": 65, "reflect": [65, 324], "rearrang": 65, "equal": 65, "greater": 65, "behind": 65, "undefin": 65, "sequenc": [65, 289, 317], "final": [65, 316, 324], "them": [65, 318, 325], "sinc": [65, 296, 326], "22": [65, 218], "algorithm": 65, "etc": [65, 78, 80, 83, 85, 117, 170, 173, 175, 177, 180, 183, 186, 188, 245, 247, 248, 250, 292, 295, 323], "unspecifi": 65, "come": [65, 119], "break": [65, 318], "ti": 65, "paritit": 65, "indirect": 65, "prod": 65, "ptp": 65, "peak": [65, 258, 266, 267, 268], "put": [65, 66], "repeat": [65, 306, 322, 324], "reshap": 65, "unlik": 65, "free": [65, 326], "For": [65, 85, 125, 170, 175, 177, 180, 183, 186, 188, 282, 316, 318, 324, 326], "11": [65, 181, 324, 325], "resiz": 65, "new_shap": 65, "refcheck": 65, "count": [65, 170, 218, 300, 316, 324], "valueerror": 65, "exist": [65, 128, 131, 133, 136, 192, 194, 254, 283, 286, 317, 318], "pypi": 65, "reliabl": 65, "systemerror": 65, "behaviour": 65, "bug": [65, 318], "realloc": 65, "area": 65, "necessari": [65, 123, 125, 128, 133, 136, 279, 281, 316, 318, 319, 324, 326], "consecut": 65, "shrink": 65, "enlarg": 65, "abov": [65, 324], "miss": 65, "entri": [65, 270, 316, 317, 324], "doesn": 65, "referenc": 65, "prevent": 65, "recent": 65, "cannot": 65, "round": 65, "around": [65, 72, 73], "searchsort": 65, "v": [65, 157], "side": [65, 295], "sorter": 65, "maintain": 65, "setfield": 65, "val": [65, 88], "ey": 65, "int32": 65, "0e": 65, "000": 65, "5e": 65, "323": 65, "setflag": 65, "uic": 65, "writeabl": 65, "writebackifcopi": 65, "updateifcopi": 65, "These": [65, 316, 325, 326], "how": [65, 68, 204, 316, 318, 324, 325], "actual": [65, 78, 80, 83, 85, 114, 115, 256, 295, 318], "never": 65, "ultim": [65, 318], "owner": 65, "expos": 65, "interfac": [65, 117], "unpickl": 65, "describ": [65, 317], "properli": [65, 316, 326], "about": [65, 284, 295, 318], "four": [65, 326], "w": [65, 78, 80, 83, 85, 302], "appropri": [65, 318, 325], "compil": 65, "pyarray_resolvewritebackifcopi": 65, "upper": [65, 287], "letter": 65, "well": [65, 323], "f_contigu": 65, "owndata": 65, "stdin": 65, "quicksort": 65, "mergesort": 65, "heapsort": 65, "stabl": 65, "both": [65, 101, 167, 170, 248, 317, 325], "timsort": 65, "under": [65, 316, 317, 323, 324, 326], "cover": [65, 295, 326], "vari": 65, "datatyp": 65, "retain": 65, "15": [65, 268, 304, 325], "lexsort": 65, "kei": [65, 139, 141, 160, 162, 192, 194, 308, 318, 323], "partial": 65, "s1": 65, "i8": 65, "squeez": 65, "ax": [65, 170, 173, 175, 177, 180, 183, 186, 188, 316], "std": 65, "ddof": 65, "swapax": 65, "interchang": 65, "tobyt": 65, "raw": 65, "short": 65, "exhibit": 65, "u2": 65, "x00": 65, "x01": 65, "x02": 65, "x03": 65, "tofil": 65, "fid": 65, "sep": 65, "text": [65, 287, 325], "independ": [65, 326], "recov": 65, "fromfil": 65, "open": [65, 78, 80, 83, 85, 167, 254, 318, 325, 326], "filenam": [65, 83, 119, 236, 254, 284], "closest": 65, "conveni": 65, "quick": [65, 170], "storag": 65, "precis": [65, 326], "lost": 65, "good": [65, 318], "intend": 65, "archiv": 65, "transport": 65, "overcom": 65, "expens": 65, "directli": [65, 72, 73, 114, 115, 117], "bypass": 65, "gzipfil": 65, "fileno": 65, "bytesio": 65, "tolist": 65, "ndim": 65, "level": 65, "deep": 65, "nearest": 65, "builtin": 65, "depth": 65, "possibli": 65, "recreat": 65, "although": 65, "sometim": 65, "1d": 65, "almost": [65, 72], "uint32": 65, "a_list": 65, "a_tolist": 65, "addition": 65, "appli": 65, "0d": 65, "typeerror": 65, "tostr": 65, "exactli": 65, "despit": 65, "19": 65, "transpos": 65, "effect": [65, 266, 267, 268], "vector": 65, "simpli": [65, 318], "addit": [65, 78, 80, 85, 254], "atleast2d": 65, "achiev": 65, "newaxi": 65, "matrix": [65, 133, 245], "permut": 65, "revers": 65, "becom": 65, "altern": [65, 117, 245, 247, 248, 250, 318], "give": [65, 316], "var": 65, "omit": 65, "former": [65, 252], "float_": 65, "descriptor": 65, "again": 65, "omiss": 65, "some_dtyp": 65, "reinterpret": 65, "ndarray_subclass": 65, "regular": [65, 318], "predict": 65, "superfici": 65, "shown": [65, 317, 325], "versu": 65, "int8": 65, "513": 65, "xv": 65, "underli": 65, "i1": 65, "recarrai": 65, "i2": 65, "ctype": 65, "simplifi": 65, "interact": 65, "easier": 65, "librari": [65, 282, 318, 323], "themselv": [65, 317], "possess": 65, "ctypeslib": 65, "public": 65, "guid": [65, 170, 318], "undocu": 65, "privat": 65, "_ctype": 65, "pointer": [65, 78, 80, 83, 85, 317], "arbitrari": [65, 78, 80, 83, 85], "troubl": 65, "includ": [65, 170, 173, 175, 177, 180, 183, 186, 188, 245, 248, 250, 316, 317, 323, 324, 325, 326], "crash": [65, 318], "bewar": 65, "_array_interface_": 65, "data_a": 65, "kept": 65, "c_void_p": 65, "dealloc": 65, "spelt": 65, "basetyp": 65, "correspond": [65, 170, 175, 316, 324, 326], "p": [65, 302, 303, 304], "platform": 65, "c_intp": 65, "c_int": 65, "c_long": 65, "c_longlong": 65, "jump": 65, "next": [65, 196, 204, 252, 317, 326], "obj": 65, "_as_parameter_": 65, "perhap": 65, "c_doubl": 65, "keep": [65, 318], "shape_a": 65, "c_short": 65, "strides_a": 65, "as_paramet": 65, "31962608": 65, "c_uint32": 65, "__main__": 65, "lp_c_uint": 65, "0x7ff2fc1fc200": 65, "c_uint": 65, "c_uint64": 65, "c_ulong": 65, "4294967296": 65, "_intern": 65, "c_long_array_2": 65, "0x7ff2fc1fce60": 65, "0x7ff2fc1ff320": 65, "segment": [65, 254], "o": [65, 276, 282, 283, 287, 325], "borrow": [65, 78, 80, 83, 85, 245, 247, 248, 250], "creation": 65, "subsequ": [65, 324], "while": [65, 66, 316], "remain": [65, 170], "alreadi": [65, 318, 325], "circumst": 65, "alter": [65, 170], "previous": 65, "onto": [65, 326], "fnc": 65, "carrai": 65, "ca": 65, "farrai": 65, "fa": 65, "lowercas": 65, "arbitrarili": 65, "truli": [65, 326], "simultan": [65, 83, 170, 318, 326], "dimension": 65, "higher": [65, 204], "dim": [65, 289], "hold": [65, 284], "items": 65, "flatit": 65, "similarli": [65, 248], "built": [65, 319], "arang": 65, "sqrt": 65, "0j": 65, "1j": 65, "70710678": 65, "nbyte": 65, "total": [65, 204, 295, 316], "consum": 65, "480": 65, "usual": 65, "infer": 65, "unchang": 65, "incompat": 65, "modif": [65, 318], "desir": [65, 114, 115, 117, 119, 254, 292], "obtain": 65, "suggest": 65, "int_": 65, "relev": 65, "further": 65, "overflow": 65, "fix": [65, 318], "travers": 65, "explan": 65, "found": [65, 89, 316, 318, 324, 325], "rst": 65, "imagin": 65, "40": 65, "known": [65, 326], "tell": [65, 316, 318], "lib": 65, "stride_trick": 65, "as_strid": 65, "13": 65, "14": [65, 304, 324], "18": 65, "21": 65, "23": 65, "48": 65, "224": 65, "1344": 65, "813": 65, "mytestclass": [66, 67, 68], "testclass": 66, "toi": 66, "subprocess": 66, "test_incorrect_thread_manag": 66, "custodi": [66, 72, 73], "test_lock_with_waitlist": 66, "stai": [66, 258], "objectsinsubprocess": 66, "mock": 66, "_waitinglist": [66, 72], "test_object_in_subprocess_overhead": 66, "test_sending_shared_arrai": 66, "send": [66, 197, 198, 199], "sharedndarrai": [66, 68, 236, 254, 318], "test_ndarraylike_behavior": 68, "broke": 68, "suppos": 68, "test_seri": 68, "deseri": 68, "test_serializing_and_deseri": 68, "shared_memory_s": 70, "spawn": 70, "proxi": [70, 71, 275, 325], "proxyobject": [70, 72, 73], "shared_numpy_arrai": 70, "which_mp_arrai": 70, "shared_mp_arrai": 71, "proxymanag": [71, 72, 73], "thin": [72, 73], "wrapper": [72, 73], "few": [72, 73, 317], "usag": [72, 73], "_custodi": 72, "switch_from": 72, "_wait_in_lin": 72, "immedi": 72, "acquir": [73, 218, 236, 252, 254, 316, 317, 326], "releas": 73, "launch_custody_thread": 73, "feel": 73, "detect": [73, 209], "occour": 73, "file_nam": [78, 80, 83, 85, 245, 248, 250], "datasourc": [78, 81, 83, 85, 236], "sourc": [78, 80, 81, 83, 85, 218, 236, 322, 326], "metdata": [78, 80, 83, 85], "metadata": [78, 80, 83, 85, 245, 250], "concept": [78, 80, 83, 85, 245, 247, 248, 250], "microscopi": [78, 80, 83, 85, 157, 245, 247, 248, 250], "clean": [78, 80, 83, 85, 218, 323], "leftov": [78, 80, 83, 85], "set_metadata_from_configuration_experi": [78, 80, 83, 85], "dictproxi": [78, 80, 83, 85, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 112, 114, 117, 119, 123, 125, 165, 167, 170, 173, 175, 180, 192], "kw": [78, 80, 83, 85, 245, 248, 250], "xyz": [78, 170], "bdv": 78, "spec": [78, 245, 250], "xyczt": [78, 80, 83, 85, 245, 247, 248, 250], "rather": [78, 326], "subdivis": 78, "voxel_s": [78, 80, 83, 85, 245, 247, 248, 250], "voxel": [78, 80, 83, 85, 245, 247, 248, 250], "file_typ": [81, 236, 245, 248, 250], "tif": [81, 83, 236, 289], "tifdatasourc": 81, "is_bigtiff": 83, "intern": [83, 218, 245, 247, 248, 250], "generate_image_nam": [83, 236], "current_channel": [83, 236], "current_time_point": [83, 236], "ch00_000000": [83, 236], "timepoint": [83, 214, 324], "stack": [83, 117, 119, 204, 216, 218, 317, 326], "At": 83, "tifffil": 83, "imsav": 83, "copy_to_zarr": 85, "frame_id": [85, 199, 204, 236], "zarr": 85, "Will": [85, 248, 319], "fom": 85, "sharednd": 85, "three": 85, "assumpt": 85, "acquisit": [85, 96, 112, 114, 115, 117, 119, 123, 125, 218, 236, 252, 254, 317, 322, 323], "dummi": 87, "devic": [87, 88, 89, 90, 91, 95, 97, 98, 99, 100, 101, 102, 103, 197, 198, 204, 218, 252, 254, 316, 322, 324, 325, 326], "n_tri": 88, "retri": 88, "connect": [88, 95, 97, 98, 99, 100, 101, 102, 103, 112, 114, 117, 119, 125, 129, 134, 139, 141, 162, 165, 167, 170, 171, 173, 175, 180, 181, 184, 192, 252, 254, 316, 324, 326], "startup": [88, 316, 324], "redial": 88, "baseexcept": 88, "dcam": [88, 326], "messag": [89, 197], "incorrect": 89, "device_typ": 89, "camera_id": 90, "is_synthet": [90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 198, 252, 318], "synthet": [90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 119, 120, 141, 150, 167, 254, 316, 319, 324], "dedic": [92, 93, 94, 96, 97, 99, 101, 103], "multiproces": [92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 112, 114, 117, 119, 123, 125, 165, 167, 192], "zoom": [94, 103, 241, 316, 323], "device_connect": [95, 97, 98, 99, 100, 101, 102, 103, 112, 114, 115, 117, 119, 128, 131, 133, 136, 139, 141, 149, 151, 160, 162, 165, 167, 170, 173, 175, 177, 180, 183, 186, 188, 192, 194, 252, 318], "filterwheel": 97, "scan": [98, 117, 170, 218, 322, 326], "trigger": [99, 101, 125, 153, 155, 167, 184, 218, 256, 326], "switch": [99, 133, 254, 258, 316, 324, 326], "analog": [99, 125, 260, 261, 263, 322], "digit": [99, 101, 326], "focus": [100, 160, 258, 292, 322, 326], "shutter": [101, 112, 114, 115, 119, 254, 323], "thorlabsshutt": 101, "syntheticshutt": 101, "ni": [101, 316, 324], "card": [101, 254, 323], "thu": [101, 324, 326], "enabl": [101, 133, 136, 318, 319, 322, 326], "calculate_light_sheet_exposure_tim": [112, 114, 115, 117, 119], "full_chip_exposure_tim": [112, 114, 115, 117, 119], "shutter_width": [112, 114, 115, 117, 119], "exposur": [112, 114, 115, 117, 119, 123, 125, 160, 162, 218, 252, 256, 316], "light": [112, 114, 115, 117, 119, 324, 326], "sheet": [112, 114, 115, 117, 119, 324, 326], "roll": [112, 114, 115, 119], "exposure_tim": [112, 114, 115, 117, 119, 123, 125, 139, 141, 160, 162, 258, 316, 324], "camera_line_interv": [112, 114, 115, 117, 119], "hamamatsuorca": [112, 115, 117, 119, 316, 324], "interv": [112, 114, 115, 117, 119, 316, 326], "set_readout_direct": [112, 114, 115, 117, 119], "bottom": [112, 114, 115, 117, 119, 324], "bytrigg": [112, 114, 115, 119], "diverg": [112, 114, 115, 119], "camerabas": [114, 117, 119], "orca": 114, "flash": [114, 322], "calculate_readout_tim": [114, 115, 117, 119], "assum": [114, 115, 117, 128, 192, 194, 218, 236, 241, 245, 248, 250, 282, 289, 316, 325], "c13440": [114, 115, 117], "link": [114, 115, 117, 282], "commun": [114, 115, 117, 129, 133, 134, 136, 171, 183, 316, 324], "pull": [114, 115, 117, 318, 324], "readout_tim": [114, 115, 117, 119, 139, 141, 252], "max_frame_r": [114, 115, 117, 119], "framer": [114, 115, 117, 119], "todo": [114, 115, 204, 236, 245, 248, 254, 296, 309, 321], "think": [114, 115], "camera_control": [114, 115, 117], "get_property_valu": [114, 115, 120], "close_camera": [114, 115, 117, 119], "close_image_seri": [114, 115, 117, 119], "seri": [114, 115, 117, 119], "stop": [114, 115, 117, 119, 125, 139, 141, 160, 162, 170, 173, 175, 177, 180, 183, 186, 188, 199, 252, 254], "is_acquir": [114, 115, 117, 119], "get_minimum_waiting_tim": [114, 115, 117, 119], "cyclic_trigger_period": [114, 115, 117, 119], "minimum_trigger_blank": [114, 115, 117, 119], "minimum_trigger_interv": [114, 115, 117, 119], "trigger_blank": [114, 115, 117, 119], "bigger": [114, 115, 117, 119], "trigger_interv": [114, 115, 117, 119], "get_new_fram": [114, 115, 117, 119], "initialize_image_seri": [114, 115, 117, 119], "data_buff": [114, 115, 117, 119, 236, 252, 254], "number_of_fram": [114, 115, 117, 119, 252], "100": [114, 115, 117, 119, 197, 316, 322, 324], "report_set": [114, 115, 117, 119], "set_roi": [114, 115, 117, 119], "roi_height": [114, 115, 117, 119], "2048": [114, 115, 119, 324], "roi_width": [114, 115, 117, 119], "region": [114, 115, 117, 119, 295], "height": [114, 115, 117, 119, 252, 286], "set_bin": [114, 115, 117, 119], "binning_str": [114, 115, 117, 119], "bin": [114, 115, 117, 119, 324], "1x1": [114, 115, 117, 324], "2x2": [114, 115, 117, 119], "4x4": [114, 115, 117, 119], "8x8": [114, 115, 117, 119], "16x16": [114, 115, 117], "1x2": [114, 115, 117], "2x4": [114, 115, 117], "set_exposure_tim": [114, 115, 117, 119], "unit": [114, 115, 117, 119, 170, 256, 257, 258, 259, 260, 261, 263, 322, 326], "millisecond": [114, 115, 117, 119, 171, 316, 319, 324], "set_line_interv": [114, 115, 117, 119], "line_interval_tim": [114, 115, 117, 119], "set_sensor_mod": [114, 115, 117, 119], "sensor": [114, 115, 117, 119, 254], "serial_numb": [114, 115, 117, 181, 316, 324], "photometr": 117, "kinetix": 117, "mainli": 117, "navig": [117, 325], "right": [117, 167, 258, 286, 295, 325, 326], "mesoscal": [117, 324], "nanoscal": [117, 209, 241, 324], "3200": 117, "down": [117, 258, 286], "programm": 117, "static": [117, 204], "generate_new_fram": 119, "load_imag": [119, 254], "pre": [119, 123, 125, 317, 318], "idprop": 120, "property_dict": 120, "property_valu": 120, "hard": [120, 204], "calculate_all_waveform": [123, 125, 252], "sweep_tim": [123, 125, 139, 141, 160, 162, 256, 257, 258, 259, 260, 261, 263, 324], "sweep": [123, 125, 139, 160, 162, 252], "waveform_dict": [123, 125, 139, 160], "etl": [123, 125, 292], "plu": [123, 125], "daqbas": 125, "add_camera": 125, "close_task": [125, 139, 141, 160, 162], "task": [125, 139, 141, 160, 162, 218, 326], "counter": [125, 326], "create_camera_task": 125, "create_galvo_remote_focus_task": 125, "create_master_trigger_task": 125, "prepare_acquisit": [125, 252, 254], "channel_kei": [125, 139, 141, 160, 162], "prepar": [125, 139, 141, 160, 162, 204, 218, 252, 254], "run_acquisit": [125, 254], "start_task": [125, 139, 141, 160, 162], "won": 125, "run_task": 125, "stop_acquisit": 125, "stop_task": [125, 139, 141, 160, 162], "write_waveforms_to_task": 125, "filterwheelbas": [128, 133, 136], "asi": [128, 170, 171, 218, 316, 324], "asiimag": [128, 170], "doc": [128, 170, 250, 282], "fw_1000": 128, "fw": 128, "1000_ascii_command_set": 128, "check_if_filter_in_filter_dictionari": [128, 131, 133, 136], "filter_nam": [128, 131, 133, 136], "filter_exist": [128, 131, 133, 136], "port": [128, 129, 133, 134, 136, 149, 151, 171, 183, 184, 316, 324, 326], "filter_change_delai": [128, 133, 136], "40m": 128, "adjac": 128, "set_filt": [128, 133, 136], "wait_until_don": [128, 133, 136, 170, 175, 177, 180, 183, 186, 188, 192, 194, 252, 254], "comport": [129, 134, 136], "baudrat": [129, 134, 136, 316, 324], "115200": [129, 171, 316, 324], "25": [129, 134, 184], "build": [129, 134, 184, 273, 281], "asifilterwheel": 129, "com1": [129, 134, 136, 171], "baud": [129, 134, 136, 171, 184], "9600": [129, 134, 136, 171, 316, 324], "filter_dictionari": [131, 133, 136], "instal": [131, 133, 136, 254, 318, 323, 326, 327], "wheel_posit": [131, 133, 136], "sutter": [133, 319], "lambda": [133, 304], "manual": 133, "lb10": 133, "3_opman": 133, "number_of_filter_wheel": [133, 136], "wait_until_done_delai": [133, 136], "period": [133, 136, 258], "delay_matrix": 133, "movement": [133, 170, 173, 175, 177, 180, 183, 186, 188, 316, 324], "fastest": 133, "slowest": 133, "occupi": 133, "num_byt": [133, 136, 183], "retriev": [133, 281, 292, 318], "page": [133, 157], "38": [133, 324], "sutterfilterwheel": [134, 316, 324], "galvo_id": [139, 141], "galvanomet": [139, 323], "galvo_nam": 139, "device_config": [139, 160, 318], "sample_r": [139, 160, 256, 257, 258, 259, 260, 261, 263, 324], "camera_delay_perc": [139, 160], "galvo_max_voltag": 139, "voltag": [139, 153, 155, 160, 257, 258, 260, 263], "galvo_min_voltag": 139, "remote_focus_ramp_fal": [139, 160], "ramp": [139, 160, 258], "fall": [139, 160, 258], "prepare_task": [139, 141, 160, 162], "adjust": [139, 141, 160, 162, 254, 316, 326], "account": [139, 141, 309], "488": [139, 141, 160, 268, 322, 324], "galvobas": 141, "joystickbas": 146, "laser_id": [149, 151], "initialize_las": [149, 151], "power": [149, 151, 205, 316, 320, 324], "cw": [149, 151], "apc": [149, 151], "laserbas": 151, "enable_high_resolution_las": [153, 155], "enable_low_resolution_las": [153, 155], "set_laser_analog_voltag": [153, 155], "current_laser_index": [153, 155], "current_laser_intens": [153, 155], "constant": [153, 155, 218, 292, 323, 326], "intens": [153, 155, 236, 261, 266, 267, 268], "percentag": [153, 155, 262], "lasertriggerbas": 155, "calculate_entrance_pupil": 157, "entranc": 157, "pupil": 157, "incid": 157, "angl": 157, "fluoresc": 157, "interfer": 157, "contrast": 157, "carolin": 157, "ajo": 157, "franklin": 157, "prasad": 157, "ganesan": 157, "steven": 157, "boxer": 157, "biophi": 157, "volum": [157, 304], "89": 157, "issu": [157, 318, 325], "octob": 157, "2005": 157, "2759": 157, "2769": 157, "entrance_pupil_diamet": 157, "diamet": 157, "millimet": [157, 170, 180], "remote_focus_delai": [160, 258], "remote_focus_max_voltag": 160, "remote_focus_min_voltag": 160, "nidaqmx": [160, 162], "remotefocusbas": 162, "deviceconnect": 162, "shutterbas": 167, "deliv": [167, 326], "open_left": 167, "open_right": 167, "close_shutt": 167, "state": [167, 170, 254, 306, 316, 317, 324], "device_id": [170, 173, 175, 177, 180, 183, 186, 188], "stagebas": [170, 175, 177, 180, 183, 186, 188], "serial_command": 170, "command_quick_start": 170, "distanc": [170, 204, 295, 302, 303, 304, 319], "10th": 170, "micron": [170, 183, 322], "divis": 170, "ever": 170, "rel": [170, 218, 300, 326], "ftp": [170, 326], "stilt": 170, "strain": 170, "system": [170, 254, 266, 267, 268, 316, 318, 322, 324, 325, 326], "x_po": [170, 173, 175, 177, 180, 183, 186, 188, 316], "y_po": [170, 173, 175, 177, 180, 183, 186, 188, 316], "z_po": [170, 173, 316], "f_po": [170, 173, 204, 316], "theta_po": [170, 173, 316], "rotat": [170, 173, 296, 324], "position_dict": [170, 180, 183], "x_max": [170, 173, 316, 324], "y_max": [170, 173, 316, 324], "z_max": [170, 173, 316, 324], "f_max": [170, 173, 316, 324], "theta_max": [170, 173, 316, 324], "x_min": [170, 173, 175, 183, 316, 324], "y_min": [170, 173, 316, 324], "z_min": [170, 173, 316, 324], "f_min": [170, 173, 316, 324], "theta_min": [170, 173, 316, 324], "default_spe": 170, "get_position_dict": [170, 173, 175, 177, 180, 183, 186, 188], "get_abs_posit": [170, 173, 175, 177, 180, 183, 186, 188], "emerg": [170, 173, 175, 180], "halt": [170, 173, 175, 180], "get_axis_posit": 170, "move_axis_absolut": [170, 175, 177, 180, 183, 186, 188], "move_absolut": [170, 175, 177, 180, 183, 186, 188], "set_spe": 170, "veloc": [170, 218, 316, 324, 326], "get_spe": 170, "report_posit": [170, 175, 177, 180, 183, 188], "scanr": 170, "end": [170, 204, 252, 254, 316, 317, 318], "enc_divid": 170, "start_scan": 170, "stop_scan": 170, "verify_abs_posit": [170, 173, 175, 177, 180, 183, 186, 188], "axis_ab": [170, 173, 175, 177, 180, 183, 186, 188], "ensur": [170, 173, 175, 177, 180, 183, 186, 188, 318], "request": [170, 173, 175, 177, 180, 183, 186, 188, 293, 318], "absolut": [170, 173, 175, 177, 180, 183, 186, 188, 318], "axo": 170, "move_dictionari": [170, 173, 175, 177, 180, 183, 186, 188], "x_ab": [170, 173, 175, 177, 180, 183, 186, 188], "micromet": [170, 173, 175, 177, 180, 183, 186, 188, 319], "degre": [170, 173, 175, 177, 180, 183, 186, 188, 218], "spot": [170, 175, 177, 180, 183, 186, 188], "success": [170, 175, 177, 180, 183, 186, 188, 254], "abs_po": [170, 175, 177, 180, 183, 186, 188], "command": [170, 192, 194, 196, 254, 318, 325], "prefix": [170, 175], "start_position_mm": 170, "end_position_mm": 170, "everi": [170, 304, 316, 324, 326], "encod": [170, 218, 326], "velocity_dict": 170, "abruptli": [170, 173, 175, 177, 180, 183, 186], "is_strict": [170, 173, 175, 177, 180, 183, 186, 188], "y_ab": [170, 173, 175, 177, 180, 183, 186, 188], "verifi": [170, 173, 175, 177, 180, 183, 186, 188], "abs_posit": [170, 173, 175, 177, 180, 183, 186, 188], "axes_map": [170, 173, 175, 177, 180, 183, 186, 188, 316], "matter": [170, 173, 175, 177, 180, 183, 186, 188], "com_port": [171, 184], "baud_rat": [171, 184], "1000": [171, 316, 318, 324], "tiger": 171, "asi_stag": 171, "successfulli": [171, 284, 326], "positoin": 173, "create_position_dict": 175, "logic": [175, 177, 183, 186, 188], "serialnum": [178, 189], "physik": [180, 181], "instrument": [180, 181, 316, 322], "pi_tool": [180, 181], "tool": [180, 326], "pi_devic": [180, 181], "pi_ax": 180, "xyzf": 180, "pi": [180, 259, 263, 316, 324], "wait_on_target": 180, "controller_nam": 181, "reference_mod": 181, "863": 181, "0112345678": 181, "111": 181, "1dg": 181, "frf": [181, 316, 324], "stage_connect": 181, "mp": [183, 319], "285": [183, 319], "mp285": [183, 184], "sutter_ax": 183, "sutterstag": 184, "device_control": 192, "build_stage_dict": [192, 194], "stage_posit": [192, 194, 252, 324], "ideal": [192, 194, 317, 318], "solvent": [192, 194], "babb": [192, 194, 324], "63x": [192, 194, 324], "1x": [192, 194, 324], "70775": [192, 194], "2x": [192, 194, 258, 322, 324], "72455": [192, 194], "3x": [192, 194, 324], "72710": [192, 194], "4x": [192, 194, 324], "72795": [192, 194], "5x": [192, 194, 324], "72850": [192, 194], "6x": [192, 194, 324], "72880": [192, 194], "refract": [192, 194, 266, 267, 268], "servo": [192, 194, 326], "read_posit": [192, 194], "cur_posit": [192, 194], "set_zoom": [192, 194], "confirm": [192, 194, 236, 317, 326], "tha": [192, 194], "zoomdict": [192, 194], "zoombas": 194, "dynamixelzoom": [194, 316, 324], "dummyview": 196, "execut": [196, 279, 317], "sec": 196, "append": [196, 254, 298], "sent": 196, "oldest": 196, "pop": 196, "move_stag": [196, 252, 254], "grab": 196, "timecost": 197, "signal_pip": [197, 198, 199], "pipe": [197, 198, 199, 254], "data_pip": [197, 198, 199], "shutdown": [197, 198, 326], "generate_messag": 197, "listen": 197, "sendout": 197, "devices_dict": [198, 252], "signal_contain": 199, "signalcontain": 199, "data_contain": 199, "datacontain": 199, "signal_thread": 199, "data_thread": 199, "stop_flag": 199, "signal_func": 199, "data_func": [199, 254], "feature_list": [199, 231, 233, 234, 254], "device_ref": 204, "autofocus_frame_queu": 204, "autofocus_pos_queu": 204, "queue": [204, 326], "max_entropi": 204, "f_frame_id": 204, "frame_num": 204, "init_po": 204, "focus_po": 204, "target_frame_id": 204, "get_frames_num": 204, "plot_data": 204, "total_frame_num": 204, "fine_step_s": 204, "fine": [204, 318], "fine_pos_offset": 204, "coarse_step_s": 204, "coars": [204, 322], "coarse_step": 204, "signal_id": 204, "target_channel": 204, "end_func_data": [204, 317], "routin": [204, 205, 293, 323, 325], "end_func_sign": [204, 317], "get_autofocus_frame_num": 204, "best": [204, 318], "get_step": 204, "step_siz": [204, 316, 324], "autofocus": 204, "travel": 204, "pos_offset": 204, "figur": [204, 318], "in_func_data": [204, 317], "in_func_sign": [204, 317], "pre_func_data": [204, 317], "pre_func_sign": [204, 218, 317], "robust_autofocu": 204, "robust": 204, "alpha": [204, 205], "unfortun": 204, "unstabl": 204, "x_offset": [205, 316, 324], "y_offset": [205, 316, 324], "tent": 205, "respons": [205, 323], "curv": 205, "resolution_mod": 207, "zoom_valu": 207, "overlap": [209, 241, 295, 296], "target_resolut": [209, 241], "target_zoom": [209, 241], "grid": [209, 296], "pause_num": 214, "microscopest": [214, 236, 241], "get_origin": 216, "saving_flag": 216, "saving_dir": 216, "cleanup": [218, 254, 317], "reset": 218, "inject": 218, "divid": [218, 295], "rotari": 218, "45": 218, "396": 218, "mm": 218, "nm": [218, 266, 267, 268, 322], "quadratur": 218, "88": 218, "motion": [218, 322], "optic": [218, 266, 267, 268, 324], "root": [222, 223, 225, 245, 248, 250, 308, 309], "cleanup_list": [222, 223, 225], "feature_nam": [224, 226, 227], "func_dict": [224, 226, 227], "node_typ": [224, 226, 227, 317], "device_rel": [224, 226, 227, 317], "need_respons": [224, 226, 227, 317], "treenod": [224, 226], "number_of_execut": 225, "feature_modul": 230, "func_typ": 230, "sibl": 231, "tree": [231, 317], "valid": [233, 234], "sub_dir": 236, "image_nam": 236, "disk": [236, 282, 283, 284], "save_directori": [236, 281], "ext": 236, "generate_meta_data": 236, "meta": 236, "save_imag": 236, "config_t": [236, 317], "data_sourc": 236, "mip": 236, "project": [236, 324], "mip_directori": 236, "num_of_channel": 236, "calculate_and_check_disk_spac": 236, "suffici": 236, "color": 236, "vestigi": 236, "delet": [236, 282], "service_url": 239, "flipx": 241, "flipi": 241, "debug": 241, "outer": 241, "active_microscope_nam": 241, "flip": 241, "img": 242, "xl": 242, "yl": 242, "xu": 242, "yu": 242, "65535": 242, "xmlmetadata": [245, 250], "bigdataview": [245, 248], "xml": [245, 248, 250, 308, 309], "section": [245, 317, 323, 325], "arxiv": 245, "org": [245, 250, 282], "ab": 245, "1412": 245, "0488": 245, "parse_bdv_xml": 245, "pars": [245, 248, 292, 308, 309], "incomplet": 245, "stage_positions_to_affine_matrix": 245, "affin": 245, "to_xml": [245, 248, 250], "write_xml": [245, 248, 250], "header": [245, 248, 250, 300], "om": [248, 250, 309], "proprietari": 248, "address": [248, 325], "_xml_dict": 248, "ome_tiff_xml_dict": [248, 250], "xml_tool": 248, "parse_xml": 248, "openmicroscopi": 250, "html": [250, 282], "uid": 250, "heirarch": 250, "ome_dict": 250, "is_virtu": 252, "listproxi": 252, "update_data_buff": [252, 254], "img_width": [252, 254], "img_height": [252, 254], "move_stage_offset": 252, "former_microscop": 252, "end_acquisit": [252, 254], "get_readout_tim": [252, 254], "assemble_device_config_list": 252, "device_nam": [252, 318], "device_name_dict": 252, "assembl": 252, "config": [252, 324, 325], "device_config_list": 252, "device_name_list": 252, "calculate_exposure_sweep_tim": 252, "get_stage_posit": [252, 254], "load_and_start_devic": 252, "is_list": 252, "device_ref_nam": 252, "pos_dict": [252, 254, 270], "update_focu": 252, "central": 252, "prepare_next_channel": 252, "stop_stag": [252, 254], "explicitli": 252, "event_queu": 254, "softwar": [254, 316, 318, 320, 322, 326, 327], "architectur": [254, 318, 322, 323], "leverag": [254, 318], "cuda": [254, 293, 322, 325], "analysi": [254, 293, 317], "engin": 254, "get_data_buff": 254, "create_pip": 254, "release_pip": 254, "run_command": 254, "run_data_process": 254, "run_single_channel_acquisit": 254, "run_single_acquisit": 254, "snap_imag": 254, "run_live_acquisit": 254, "run_z_stack_acquisit": 254, "run_single_channel_acquisition_with_featur": 254, "change_resolut": 254, "resolution_valu": 254, "pipe_nam": 254, "pair": 254, "duplex": 254, "end1": 254, "disconnect": 254, "get_active_microscop": 254, "512": 254, "get_feature_list": 254, "idx": 254, "feature_list_str": 254, "get_microscope_info": 254, "get_offset_variance_map": 254, "offset_variance_map": 254, "ret_pos_dict": 254, "load_feature_list_from_str": 254, "load_feature_record": 254, "folder": [254, 282, 289, 318, 325], "unload": 254, "pause_data_thread": 254, "paus": [254, 316], "turn_off_flag": 254, "resume_data_thread": 254, "resum": 254, "receiv": 254, "num_of_fram": 254, "stream": 254, "gui": [254, 298, 323], "recalcul": 254, "therebi": 254, "peopl": 254, "due": 254, "update_ilastik_set": 254, "display_segment": 254, "mark_posit": 254, "target_label": 254, "ilastik": [254, 324], "mark": 254, "label": 254, "100000": [256, 257, 258, 259, 260, 261, 263, 316, 324], "camera_delai": [256, 258], "meant": 256, "visual": [256, 325], "hz": [256, 257, 258, 259, 260, 261, 263], "exposure_start": 256, "exposure_end": 256, "dc": 257, "reson": 257, "drive": [257, 260, 263, 323], "volt": [257, 258, 259, 260, 261, 263, 326], "typical_galvo": [257, 259], "24": 258, "sawtooth": [258, 318], "typic": [258, 318], "rise": 258, "linearli": 258, "drop": 258, "exchang": 258, "etl_ramp": 258, "tunable_lens_ramp": 258, "etl_delai": 258, "duty_cycl": [259, 263, 324], "phase": [259, 260, 263, 324], "5707963267948966": 259, "radian": [259, 260, 263], "sine": [260, 324], "typical_las": [260, 263], "pulse_width": 261, "ttl": 261, "typical_ttl_puls": 261, "percent_smooth": [262, 324], "smooth": [262, 324], "convolut": 262, "smoothed_waveform": 262, "141592653589793": 263, "na": [266, 267, 268], "wvl": [266, 267, 268], "waist": [266, 267, 268], "apertur": [266, 267, 268], "wavelength": [266, 267, 268, 324], "r0": [266, 268], "z0": [266, 268], "w0": [266, 268], "i0": [266, 268], "bg0": 266, "rl": 268, "zl": 268, "33": 268, "bg": 268, "common": [270, 326], "model": [270, 317, 318, 320, 323], "being": 270, "variabletyp": 272, "ref_nam": 273, "funclist": 274, "new_func": 274, "module_nam": 276, "file_path": [276, 283], "statement": [279, 318], "wrap_func": 279, "saving_set": 281, "popup": 281, "walk": 282, "everyth": 282, "reachabl": 282, "symbol": 282, "caution": 282, "danger": 282, "yaml": [283, 284, 318, 324], "config_data": 283, "file_directori": 284, "content_dict": 284, "yml": 284, "image_width": 286, "300": 286, "image_height": 286, "200": [286, 316, 324], "draw": 286, "arrow": 286, "ojbect": 286, "piec": [287, 319], "font": 287, "relat": [287, 316, 324], "font_siz": 287, "fp": 289, "lazi": 289, "pil": 289, "containt": 289, "filenotfounderror": 289, "low_res_fp": 289, "2022": 289, "07": 289, "02": [289, 325], "cell_001": 289, "low_r": 289, "imshow": 289, "500": [289, 316, 324], "parser": [291, 292], "argumentpars": [291, 292], "argumentparserobject": 291, "argpars": [292, 293], "namespac": [292, 293, 309], "logging_path": 292, "log": 292, "gpu": [293, 322, 323], "statu": 293, "dist": 295, "roi_length": 295, "roi": [295, 296], "watch": 295, "sign": [295, 296, 302, 303], "measur": 295, "num_til": 295, "x_start": 296, "x_tile": 296, "x_length": 296, "x_overlap": 296, "y_start": 296, "y_tile": 296, "y_length": 296, "y_overlap": 296, "z_start": 296, "z_tile": 296, "z_length": 296, "z_overlap": 296, "theta_start": 296, "theta_til": 296, "theta_length": 296, "theta_overlap": 296, "f_start": 296, "f_tile": 296, "f_length": 296, "f_overlap": 296, "fov": 296, "track": 296, "n_posit": 296, "tabl": 298, "po": 298, "redraw": 298, "panda": 298, "datafram": 298, "multi_position_t": 298, "multiposit": 298, "begin_start": 300, "half": 302, "subsample_z": 304, "nxnxn": 304, "euclidean": 304, "subsampl": [304, 324], "box": [304, 325, 326], "128": 304, "29": 304, "waveform_template_nam": 306, "waveform_template_dict": 306, "microscope_state_dict": 306, "repeat_num": 306, "expand_num": 306, "expand": [306, 324], "tag": 308, "elementtre": 309, "etre": 309, "fullnam": [313, 314], "escap": [313, 314], "underlin": [313, 314], "rubric": 314, "endfor": 314, "endif": 314, "endblock": 314, "302158": [316, 324], "302352": [316, 324], "filter_wheel": [316, 324], "com19": [316, 324], "number_of_wheel": [316, 324], "controllernam": [316, 324], "884": [316, 324], "l": [316, 322, 324], "509": [316, 322, 324], "20dg10": [316, 322, 324], "40dg10": [316, 324], "060": [316, 324], "dg": [316, 324], "406": [316, 324], "4pd": [316, 324], "nostag": [316, 324], "refmod": [316, 324], "119060508": [316, 324], "thorlab": [316, 322, 324], "74000375": [316, 324], "servo_id": [316, 324], "com18": [316, 324], "1000000": [316, 324], "manufactur": [316, 319, 324, 326], "123456789": [316, 324], "com7": [316, 324], "instanti": [316, 324], "eg": [316, 324], "help": [316, 318, 324], "emploi": [316, 324], "syntheticstag": [316, 324], "987654321": [316, 324], "notic": [316, 324], "syntheticzoom": [316, 324], "abbrevi": 316, "y_unload_posit": 316, "10000": [316, 324], "y_load_posit": 316, "90000": 316, "startfocu": 316, "75000": 316, "33500": 316, "16000": 316, "50000": 316, "25000": 316, "360": [316, 324], "x_rot_posit": 316, "y_rot_posit": 316, "z_rot_posit": 316, "x_step": [316, 324], "y_step": [316, 324], "z_step": [316, 324], "theta_step": [316, 324], "f_step": [316, 324], "25250": 316, "40000": 316, "70000": 316, "z_offset": [316, 324], "f_offset": [316, 324], "theta_offset": [316, 324], "explicil": [316, 324], "explictli": 316, "consist": [316, 318], "fashion": 316, "queri": 316, "awar": 316, "advanc": [316, 318], "pimikromov": 316, "physic": [316, 324], "third": [316, 324], "spinbox": [316, 324], "develop": [316, 317, 323, 324, 326], "plan": [316, 324], "go": [316, 324, 325], "forward": [316, 324], "widget": [316, 324], "manner": [316, 324], "tab": 316, "interval_tim": [316, 324], "eventu": 316, "frequent": [316, 325], "ch00": 316, "ch01": 316, "ch02": 316, "laser_pow": [316, 324], "increment": [316, 322], "inclus": 316, "stack_acquisit": [316, 324], "start_po": [316, 324], "end_po": [316, 324], "stack_paus": [316, 324], "5000": [316, 324], "reconfigur": 317, "snap": 317, "pictur": 317, "common_featur": 317, "zstackacquisit": 317, "autofocu": 317, "discret": 317, "cosin": 317, "dictat": 317, "complet": 317, "init": 317, "cleanup_func_sign": 317, "cleanup_func_data": 317, "node": 317, "multi": [317, 326], "primari": 317, "acqusit": 317, "failsaf": 317, "latter": 317, "inde": 317, "proceed": 317, "welcom": 318, "pleas": [318, 325], "fork": 318, "branch": 318, "review": 318, "practic": 318, "outlin": 318, "consid": 318, "refactor": 318, "reach": 318, "prior": [318, 326], "happi": 318, "bring": 318, "discuss": 318, "meet": 318, "strong": 318, "especi": 318, "disrupt": 318, "improv": 318, "clariti": 318, "team": 318, "merg": 318, "pep8": 318, "importantli": 318, "camelcas": 318, "lowercase_and_separated_by_underscor": 318, "numpydoc": 318, "commit": 318, "workflow": 318, "enforc": 318, "ruff": 318, "linter": 318, "black": 318, "formatt": 318, "vscode": 318, "whatev": [318, 326], "conda": [318, 325], "aslm": [318, 319, 323, 324, 325, 326, 327], "pip": [318, 325], "cd": [318, 325], "rare": 318, "complain": 318, "start_stag": 318, "exec": 318, "device_startup_funct": 318, "start_": 318, "noqa": 318, "comment": 318, "easi": [318, 325], "opportun": 318, "galvo_waveform": 318, "associ": 318, "alert": 318, "applic": 318, "pytest": 318, "lab": [318, 322, 325], "appl": 318, "encount": 318, "resolv": 318, "oserror": 318, "ulimit": 318, "hand": 318, "abstract": [319, 323], "layer": [319, 323], "divers": [319, 326], "equip": [319, 322], "accompani": 319, "contribut": [319, 323, 327], "encourag": 320, "engag": 320, "collabor": 320, "guidelin": [320, 323], "omicron": 322, "lighthub": 322, "ultra": 322, "acc": 322, "642": 322, "561": 322, "mix": [322, 326], "obi": 322, "unidirect": 322, "bidirect": 322, "repeatablil": 322, "borderlin": 322, "nvidia": [322, 325], "titan": 322, "rtx": 322, "driver": [322, 325, 326], "456": 322, "71": 322, "framegrabb": [322, 326], "optotun": 322, "electrotun": 322, "len": [322, 326], "blink": 322, "nation": 322, "pxie": [322, 326], "1073": 322, "chassi": 322, "pxi6733": [322, 324], "pxi6259": [322, 324, 326], "32mm": 322, "position": 322, "mad": 322, "citi": 322, "nano": 322, "grabber": [322, 326], "ut": 323, "southwestern": 323, "ecosystem": 323, "aim": 323, "custom": [323, 326], "recip": 323, "maker": 323, "autom": 323, "repositori": [323, 325], "minim": 323, "priorit": 323, "stabil": 323, "brutal": 323, "obviou": 323, "maxim": 323, "biolog": 323, "download": [323, 326], "git": 323, "environ": [323, 324], "troubleshoot": 323, "voicecoil": 323, "deform": 323, "mirror": 323, "mechan": [323, 324], "zach": 323, "marin": 323, "anni": 323, "wang": 323, "dax": 323, "collison": 323, "kevin": 323, "dean": [323, 325], "sampath": 323, "rapuri": 323, "renil": 323, "gupta": 323, "samir": 323, "mamtani": 323, "andrew": 323, "jamieson": 323, "york": 323, "nathaniel": 323, "thayer": 323, "confus": 324, "recommend": [324, 325], "anaconda": [324, 325], "prompt": [324, 325, 326], "sh": [324, 325], "thereaft": 324, "conflict": 324, "master_trigger_out_lin": [324, 326], "camera_trigger_out_lin": [324, 326], "trigger_sourc": [324, 326], "laser_port_switch": 324, "laser_switch_st": 324, "pixel_size_in_micron": 324, "sensor_mod": 324, "readout_direct": 324, "lightsheet_rolling_shutter_width": 324, "608": 324, "defect_correct_mod": 324, "readout_spe": 324, "trigger_act": 324, "trigger_mod": 324, "extern": [324, 326], "trigger_polar": 324, "throughout": 324, "line_interv": 324, "000075": 324, "display_acquisition_subsampl": 324, "average_frame_r": 324, "969": 324, "frames_to_averag": 324, "exposure_time_rang": 324, "remote_focus_devic": 324, "ao2": [324, 326], "ramp_rising_perc": 324, "85": 324, "ramp_falling_perc": 324, "ao0": [324, 326], "99": 324, "57079": 324, "wheel_numb": 324, "filter_wheel_delai": 324, "030": 324, "available_filt": 324, "rfp": 324, "595": 324, "31": 324, "far": [324, 325], "red": 324, "blp01": 324, "647r": 324, "blocked1": 324, "blocked2": 324, "blocked3": 324, "blocked4": 324, "blocked5": 324, "blocked6": 324, "earlier": 324, "volts_per_micron": 324, "axes_channel": 324, "agre": [324, 326], "vertic": 324, "wherea": 324, "often": 324, "vice": 324, "versa": 324, "627": 324, "1711": 324, "2301": 324, "2710": 324, "3079": 324, "3383": 324, "609": 324, "255": 324, "044": 324, "port0": [324, 326], "line0": 324, "onoff": 324, "line2": 324, "luxx": 324, "87": 324, "remote_focus_const": 324, "336": 324, "percent_delai": 324, "562nm": 324, "galvo_const": 324, "other_const": 324, "duty_wait_dur": 324, "confoc": 324, "n_plane": 324, "url": 324, "127": 324, "desktop": 325, "friendli": 325, "head": 325, "miniconda": 325, "websit": 325, "handi": 325, "cheatsheet": 325, "accustom": 325, "pin": [325, 326], "taskbar": 325, "mycomput": 325, "firewal": 325, "utsw": 325, "campu": 325, "circumv": 325, "parenthes": 325, "origin": 325, "activatin": 325, "upgrad": 325, "clone": 325, "mkdir": 325, "myfoldernam": 325, "thedeanlab": 325, "completet": 325, "upon": [325, 326], "shortcut": 325, "click": [325, 326], "enter": 325, "windir": 325, "system32": 325, "cmd": 325, "ex": 325, "script": 325, "bat": 325, "feedback": 325, "acceler": 325, "tensorflow": 325, "pytorch": 325, "cupi": 325, "excel": 325, "cudnn": 325, "sdk": [325, 326], "graphic": 325, "450": 325, "80": 325, "tensorrt": 325, "microsoft": 325, "redistribut": 325, "studio": 325, "2015": 325, "2017": 325, "2019": 325, "proper": [325, 326], "http_proxi": 325, "swmed": 325, "edu": 325, "3128": 325, "https_proxi": 325, "typo": 325, "continu": [325, 326], "perspect": 325, "onlin": 325, "usersuserprofil": 325, "condarc": 325, "usersuserprofilepippip": 325, "ini": 325, "password": 325, "8080": 325, "sever": 326, "6733": 326, "daqmx": 326, "recogn": 326, "visibl": 326, "pinout": 326, "scb": 326, "68a": 326, "breakout": 326, "mislead": 326, "aspect": 326, "wire": 326, "board": 326, "receipt": 326, "determinist": 326, "basi": 326, "jitter": 326, "anticip": 326, "dev1": 326, "dev2": 326, "commonli": 326, "line1": 326, "pfi0": 326, "p0": 326, "pfio": 326, "gate": 326, "attach": 326, "outsid": 326, "bank": 326, "ao6": 326, "ao8": 326, "ao9": 326, "ao10": 326, "compet": 326, "ao": 326, "distribut": 326, "across": 326, "ao14": 326, "ao19": 326, "usb": 326, "came": 326, "hcimagel": 326, "intal": 326, "silicon": 326, "firebird": 326, "button": 326, "apporpri": 326, "x16": 326, "slot": 326, "motherboard": 326, "excap": 326, "ctr0": 326, "pvcam": 326, "term": 326, "unknown": 326, "broadcom": 326, "pci": 326, "kit": 326, "bridg": 326, "dev": 326, "_": 326, "abl": 326, "pvcamtest": 326, "voic": 326, "coil": 326, "actuat": 326, "plai": 326, "crucial": 326, "role": 326, "aberr": 326, "electromagnet": 326, "axial": 326, "focal": 326, "shift": 326, "sca814": 326, "lfa": 326, "2010": 326, "empow": 326, "flexibl": 326, "cater": 326, "modal": 326, "suit": 326, "approach": 326, "seamless": 326, "compon": 326, "versatil": 326, "tailor": 326, "research": 326, "sync": 326, "synchron": 326, "less": 326, "perz": 326, "damag": 326}, "objects": {"aslm": [[0, 0, 0, "-", "config"], [8, 0, 0, "-", "controller"], [15, 0, 0, "-", "model"], [264, 0, 0, "-", "tools"], [310, 0, 0, "-", "view"]], "aslm.config": [[1, 0, 0, "-", "config"]], "aslm.config.config": [[2, 1, 1, "", "build_nested_dict"], [3, 1, 1, "", "get_aslm_path"], [4, 1, 1, "", "get_configuration_paths"], [5, 1, 1, "", "load_configs"], [6, 1, 1, "", "update_config_dict"], [7, 1, 1, "", "verify_configuration"]], "aslm.controller": [[9, 0, 0, "-", "configuration_controller"], [11, 0, 0, "-", "thread_pool"]], "aslm.controller.configuration_controller": [[10, 2, 1, "", "ConfigurationController"]], "aslm.controller.configuration_controller.ConfigurationController": [[10, 3, 1, "", "__init__"], [10, 4, 1, "", "camera_config_dict"], [10, 4, 1, "", "camera_pixels"], [10, 3, 1, "id0", "change_microscope"], [10, 4, 1, "", "channels_info"], [10, 4, 1, "", "daq_sample_rate"], [10, 4, 1, "", "filter_wheel_setting_dict"], [10, 4, 1, "", "galvo_parameter_dict"], [10, 3, 1, "id1", "get_microscope_configuration_dict"], [10, 3, 1, "id2", "get_stage_position_limits"], [10, 4, 1, "", "lasers_info"], [10, 4, 1, "", "number_of_channels"], [10, 4, 1, "", "remote_focus_dict"], [10, 4, 1, "", "stage_default_position"], [10, 4, 1, "", "stage_setting_dict"], [10, 4, 1, "", "stage_step"]], "aslm.controller.thread_pool": [[12, 2, 1, "", "SelfLockThread"], [13, 2, 1, "", "SynchronizedThreadPool"], [14, 2, 1, "", "ThreadWaitlist"]], "aslm.controller.thread_pool.SelfLockThread": [[12, 3, 1, "", "__init__"], [12, 4, 1, "", "daemon"], [12, 3, 1, "", "getName"], [12, 4, 1, "", "ident"], [12, 3, 1, "", "isDaemon"], [12, 3, 1, "", "isLocked"], [12, 3, 1, "", "is_alive"], [12, 3, 1, "", "join"], [12, 4, 1, "", "name"], [12, 4, 1, "", "native_id"], [12, 3, 1, "", "run"], [12, 3, 1, "", "setDaemon"], [12, 3, 1, "", "setName"], [12, 3, 1, "", "start"], [12, 3, 1, "", "unlock"], [12, 3, 1, "", "wait"]], "aslm.controller.thread_pool.SynchronizedThreadPool": [[13, 3, 1, "", "__init__"], [13, 3, 1, "", "clear"], [13, 3, 1, "", "createThread"], [13, 3, 1, "", "getRunningThread"], [13, 3, 1, "", "globaltrace"], [13, 3, 1, "", "killThreadInList"], [13, 3, 1, "", "localtrace"], [13, 3, 1, "", "moveToDelete"], [13, 3, 1, "", "registerResource"], [13, 3, 1, "", "removeThread"], [13, 3, 1, "", "threadTaskWrapping"]], "aslm.controller.thread_pool.ThreadWaitlist": [[14, 3, 1, "", "__init__"]], "aslm.model": [[16, 0, 0, "-", "analysis"], [57, 0, 0, "-", "concurrency"], [76, 0, 0, "-", "data_sources"], [86, 0, 0, "-", "device_startup_functions"], [104, 0, 0, "-", "devices"], [195, 0, 0, "-", "dummy"], [200, 0, 0, "-", "features"], [243, 0, 0, "-", "metadata_sources"], [251, 0, 0, "-", "microscope"], [253, 0, 0, "-", "model"], [255, 0, 0, "-", "waveforms"]], "aslm.model.analysis": [[17, 0, 0, "-", "boundary_detect"], [22, 0, 0, "-", "camera"], [27, 0, 0, "-", "detection"], [37, 0, 0, "-", "image_contrast"], [43, 0, 0, "-", "image_decorrelation"], [52, 0, 0, "-", "image_transform"], [55, 0, 0, "-", "spectral_unmixing"]], "aslm.model.analysis.boundary_detect": [[18, 1, 1, "", "binary_detect"], [19, 1, 1, "", "find_tissue_boundary_2d"], [20, 1, 1, "", "has_tissue"], [21, 1, 1, "", "map_boundary"]], "aslm.model.analysis.camera": [[23, 1, 1, "", "compute_flatfield_map"], [24, 1, 1, "", "compute_noise_sigma"], [25, 1, 1, "", "compute_scmos_offset_and_variance_map"], [26, 1, 1, "", "compute_signal_to_noise"]], "aslm.model.analysis.detection": [[28, 1, 1, "", "add_median_border"], [29, 1, 1, "", "combine_images"], [30, 1, 1, "", "log_detection"], [31, 1, 1, "", "make_inside_image"], [32, 1, 1, "", "make_normalized_image"], [33, 1, 1, "", "make_sphere_3D"], [34, 1, 1, "", "multiscale_surface_filter_3D"], [35, 1, 1, "", "surface_filter_gauss_3D"], [36, 1, 1, "", "three_level_segmentation"]], "aslm.model.analysis.image_contrast": [[38, 1, 1, "", "estimate_and_correct_flatfield"], [39, 1, 1, "", "estimate_image_resolution"], [40, 1, 1, "", "fast_normalized_dct_shannon_entropy"], [41, 1, 1, "", "image_intensity"], [42, 1, 1, "", "normalized_dct_shannon_entropy"]], "aslm.model.analysis.image_decorrelation": [[44, 1, 1, "", "apodize_image"], [45, 1, 1, "", "get_correlation_coefficient"], [46, 1, 1, "", "get_decorrelation_local_maxima"], [47, 1, 1, "", "get_image_decorrelation"], [48, 1, 1, "", "get_radial_average"], [49, 1, 1, "", "image_to_polar"], [50, 1, 1, "", "linear_map"], [51, 1, 1, "", "main_image_decorr"]], "aslm.model.analysis.image_transform": [[53, 1, 1, "", "deskew_image"], [54, 1, 1, "", "initiate_gpu"]], "aslm.model.analysis.spectral_unmixing": [[56, 1, 1, "", "to_do"]], "aslm.model.concurrency": [[58, 0, 0, "-", "concurrency_tools"], [69, 0, 0, "-", "proxy_objects"], [74, 0, 0, "-", "write_parameters"]], "aslm.model.concurrency.concurrency_tools": [[59, 2, 1, "", "CustodyThread"], [60, 5, 1, "", "FancyThread"], [61, 2, 1, "", "MyTestClass"], [62, 2, 1, "", "ObjectInSubprocess"], [63, 5, 1, "", "PoliteThread"], [64, 2, 1, "", "ResultThread"], [65, 2, 1, "", "SharedNDArray"], [66, 2, 1, "", "TestObjectInSubprocess"], [67, 2, 1, "", "TestResultThreadAndCustodyThread"], [68, 2, 1, "", "TestSharedNDArray"]], "aslm.model.concurrency.concurrency_tools.CustodyThread": [[59, 3, 1, "", "__init__"], [59, 4, 1, "", "daemon"], [59, 3, 1, "", "getName"], [59, 3, 1, "", "get_result"], [59, 4, 1, "", "ident"], [59, 3, 1, "", "isDaemon"], [59, 3, 1, "", "is_alive"], [59, 3, 1, "", "join"], [59, 4, 1, "", "name"], [59, 4, 1, "", "native_id"], [59, 3, 1, "", "run"], [59, 3, 1, "", "setDaemon"], [59, 3, 1, "", "setName"], [59, 3, 1, "", "start"]], "aslm.model.concurrency.concurrency_tools.MyTestClass": [[61, 3, 1, "", "__init__"], [61, 3, 1, "", "run"], [61, 3, 1, "", "time_it"]], "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess": [[62, 3, 1, "", "__init__"]], "aslm.model.concurrency.concurrency_tools.ResultThread": [[64, 3, 1, "", "__init__"], [64, 4, 1, "", "daemon"], [64, 3, 1, "", "getName"], [64, 3, 1, "", "get_result"], [64, 4, 1, "", "ident"], [64, 3, 1, "", "isDaemon"], [64, 3, 1, "", "is_alive"], [64, 3, 1, "", "join"], [64, 4, 1, "", "name"], [64, 4, 1, "", "native_id"], [64, 3, 1, "", "run"], [64, 3, 1, "", "setDaemon"], [64, 3, 1, "", "setName"], [64, 3, 1, "", "start"]], "aslm.model.concurrency.concurrency_tools.SharedNDArray": [[65, 5, 1, "", "ALIGNED"], [65, 5, 1, "", "BEHAVED"], [65, 5, 1, "", "CARRAY"], [65, 5, 1, "", "C_CONTIGUOUS"], [65, 5, 1, "", "FARRAY"], [65, 5, 1, "", "FNC"], [65, 5, 1, "", "FORC"], [65, 5, 1, "", "F_CONTIGUOUS"], [65, 5, 1, "", "OWNDATA"], [65, 5, 1, "", "T"], [65, 5, 1, "", "UPDATEIFCOPY"], [65, 5, 1, "", "WRITEABLE"], [65, 5, 1, "", "WRITEBACKIFCOPY"], [65, 3, 1, "", "__init__"], [65, 3, 1, "", "all"], [65, 3, 1, "", "any"], [65, 3, 1, "", "argmax"], [65, 3, 1, "", "argmin"], [65, 3, 1, "", "argpartition"], [65, 3, 1, "", "argsort"], [65, 3, 1, "", "astype"], [65, 5, 1, "", "base"], [65, 3, 1, "", "byteswap"], [65, 3, 1, "", "choose"], [65, 3, 1, "", "clip"], [65, 3, 1, "", "compress"], [65, 3, 1, "", "conj"], [65, 3, 1, "", "conjugate"], [65, 3, 1, "", "copy"], [65, 5, 1, "", "ctypes"], [65, 3, 1, "", "cumprod"], [65, 3, 1, "", "cumsum"], [65, 5, 1, "", "data"], [65, 3, 1, "", "diagonal"], [65, 5, 1, "", "dtype"], [65, 3, 1, "", "dump"], [65, 3, 1, "", "dumps"], [65, 3, 1, "", "fill"], [65, 5, 1, "", "flags"], [65, 5, 1, "", "flat"], [65, 3, 1, "", "flatten"], [65, 3, 1, "", "getfield"], [65, 5, 1, "", "imag"], [65, 3, 1, "", "item"], [65, 3, 1, "", "itemset"], [65, 5, 1, "", "itemsize"], [65, 3, 1, "", "max"], [65, 3, 1, "", "mean"], [65, 3, 1, "", "min"], [65, 5, 1, "", "nbytes"], [65, 5, 1, "", "ndim"], [65, 3, 1, "", "newbyteorder"], [65, 3, 1, "", "nonzero"], [65, 3, 1, "", "partition"], [65, 3, 1, "", "prod"], [65, 3, 1, "", "ptp"], [65, 3, 1, "", "put"], [65, 3, 1, "", "ravel"], [65, 5, 1, "", "real"], [65, 3, 1, "", "repeat"], [65, 3, 1, "", "reshape"], [65, 3, 1, "", "resize"], [65, 3, 1, "", "round"], [65, 3, 1, "", "searchsorted"], [65, 3, 1, "", "setfield"], [65, 3, 1, "", "setflags"], [65, 5, 1, "", "shape"], [65, 5, 1, "", "size"], [65, 3, 1, "", "sort"], [65, 3, 1, "", "squeeze"], [65, 3, 1, "", "std"], [65, 5, 1, "", "strides"], [65, 3, 1, "", "sum"], [65, 3, 1, "", "swapaxes"], [65, 3, 1, "", "take"], [65, 3, 1, "", "tobytes"], [65, 3, 1, "", "tofile"], [65, 3, 1, "", "tolist"], [65, 3, 1, "", "tostring"], [65, 3, 1, "", "trace"], [65, 3, 1, "", "transpose"], [65, 3, 1, "", "var"], [65, 3, 1, "", "view"]], "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess": [[66, 2, 1, "", "TestClass"], [66, 3, 1, "", "__init__"], [66, 3, 1, "", "run"], [66, 3, 1, "", "test_incorrect_thread_management"], [66, 3, 1, "", "test_lock_with_waitlist"], [66, 3, 1, "", "test_object_in_subprocess_overhead"], [66, 3, 1, "", "test_sending_shared_arrays"], [66, 3, 1, "", "time_it"]], "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread": [[67, 3, 1, "", "__init__"], [67, 3, 1, "", "run"], [67, 3, 1, "", "time_it"]], "aslm.model.concurrency.concurrency_tools.TestSharedNDArray": [[68, 3, 1, "", "__init__"], [68, 3, 1, "", "run"], [68, 3, 1, "", "test_ndarraylike_behavior"], [68, 3, 1, "", "test_serialization"], [68, 3, 1, "", "test_serializing_and_deserializing"], [68, 3, 1, "", "time_it"]], "aslm.model.concurrency.proxy_objects": [[70, 2, 1, "", "ProxyManager"], [71, 2, 1, "", "ProxyObject"], [72, 1, 1, "", "launch_custody_thread"], [73, 1, 1, "", "launch_thread"]], "aslm.model.concurrency.proxy_objects.ProxyManager": [[70, 3, 1, "", "__init__"], [70, 3, 1, "", "proxy_object"], [70, 3, 1, "", "shared_numpy_array"]], "aslm.model.concurrency.proxy_objects.ProxyObject": [[71, 3, 1, "", "__init__"]], "aslm.model.concurrency.write_parameters": [[75, 2, 1, "", "write_Params"]], "aslm.model.concurrency.write_parameters.write_Params": [[75, 3, 1, "", "__init__"]], "aslm.model.data_sources": [[77, 0, 0, "-", "bdv_data_source"], [79, 0, 0, "-", "data_source"], [81, 1, 1, "", "get_data_source"], [82, 0, 0, "-", "tiff_data_source"], [84, 0, 0, "-", "zarr_data_source"]], "aslm.model.data_sources.bdv_data_source": [[78, 2, 1, "", "BigDataViewerDataSource"]], "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource": [[78, 3, 1, "", "__init__"], [78, 3, 1, "", "close"], [78, 4, 1, "id3", "data"], [78, 5, 1, "id0", "file_name"], [78, 5, 1, "id2", "metadata"], [78, 4, 1, "", "mode"], [78, 3, 1, "", "read"], [78, 4, 1, "", "resolutions"], [78, 3, 1, "", "set_metadata_from_configuration_experiment"], [78, 4, 1, "", "shape"], [78, 4, 1, "", "shapes"], [78, 4, 1, "", "size"], [78, 4, 1, "", "subdivisions"], [78, 4, 1, "", "voxel_size"], [78, 3, 1, "", "write"]], "aslm.model.data_sources.data_source": [[80, 2, 1, "", "DataSource"]], "aslm.model.data_sources.data_source.DataSource": [[80, 3, 1, "", "__init__"], [80, 3, 1, "", "close"], [80, 4, 1, "id3", "data"], [80, 5, 1, "id0", "file_name"], [80, 5, 1, "id2", "metadata"], [80, 4, 1, "", "mode"], [80, 3, 1, "", "read"], [80, 3, 1, "", "set_metadata_from_configuration_experiment"], [80, 4, 1, "", "shape"], [80, 4, 1, "", "size"], [80, 4, 1, "", "voxel_size"], [80, 3, 1, "", "write"]], "aslm.model.data_sources.tiff_data_source": [[83, 2, 1, "", "TiffDataSource"]], "aslm.model.data_sources.tiff_data_source.TiffDataSource": [[83, 3, 1, "", "__init__"], [83, 3, 1, "", "close"], [83, 4, 1, "id3", "data"], [83, 5, 1, "id0", "file_name"], [83, 3, 1, "", "generate_image_name"], [83, 5, 1, "id2", "metadata"], [83, 4, 1, "", "mode"], [83, 3, 1, "", "read"], [83, 3, 1, "", "set_metadata_from_configuration_experiment"], [83, 4, 1, "", "shape"], [83, 4, 1, "", "size"], [83, 4, 1, "", "voxel_size"], [83, 3, 1, "", "write"]], "aslm.model.data_sources.zarr_data_source": [[85, 2, 1, "", "ZarrDataSource"]], "aslm.model.data_sources.zarr_data_source.ZarrDataSource": [[85, 3, 1, "", "__init__"], [85, 3, 1, "", "close"], [85, 3, 1, "", "copy_to_zarr"], [85, 4, 1, "id3", "data"], [85, 5, 1, "id0", "file_name"], [85, 5, 1, "id2", "metadata"], [85, 4, 1, "", "mode"], [85, 3, 1, "", "read"], [85, 3, 1, "", "set_metadata_from_configuration_experiment"], [85, 4, 1, "", "shape"], [85, 4, 1, "", "size"], [85, 4, 1, "", "voxel_size"], [85, 3, 1, "", "write"]], "aslm.model.device_startup_functions": [[87, 2, 1, "", "DummyDeviceConnection"], [88, 1, 1, "", "auto_redial"], [89, 1, 1, "", "device_not_found"], [90, 1, 1, "", "load_camera_connection"], [91, 1, 1, "", "load_devices"], [92, 1, 1, "", "load_filter_wheel_connection"], [93, 1, 1, "", "load_stages"], [94, 1, 1, "", "load_zoom_connection"], [95, 1, 1, "", "start_camera"], [96, 1, 1, "", "start_daq"], [97, 1, 1, "", "start_filter_wheel"], [98, 1, 1, "", "start_galvo"], [99, 1, 1, "", "start_lasers"], [100, 1, 1, "", "start_remote_focus_device"], [101, 1, 1, "", "start_shutter"], [102, 1, 1, "", "start_stage"], [103, 1, 1, "", "start_zoom"]], "aslm.model.device_startup_functions.DummyDeviceConnection": [[87, 3, 1, "", "__init__"]], "aslm.model.devices": [[105, 0, 0, "-", "APIs"], [110, 0, 0, "-", "camera"], [121, 0, 0, "-", "daq"], [126, 0, 0, "-", "filter_wheel"], [137, 0, 0, "-", "galvo"], [142, 0, 0, "-", "joystick"], [147, 0, 0, "-", "lasers"], [156, 0, 0, "-", "objectives"], [158, 0, 0, "-", "remote_focus"], [163, 0, 0, "-", "shutter"], [168, 0, 0, "-", "stages"], [190, 0, 0, "-", "zoom"]], "aslm.model.devices.APIs": [[106, 0, 0, "-", "coherent"], [107, 0, 0, "-", "dynamixel"], [108, 0, 0, "-", "logitech"], [109, 0, 0, "-", "omicron"]], "aslm.model.devices.camera": [[111, 0, 0, "-", "camera_base"], [113, 0, 0, "-", "camera_hamamatsu"], [116, 0, 0, "-", "camera_photometrics"], [118, 0, 0, "-", "camera_synthetic"]], "aslm.model.devices.camera.camera_base": [[112, 2, 1, "", "CameraBase"]], "aslm.model.devices.camera.camera_base.CameraBase": [[112, 3, 1, "", "__init__"], [112, 3, 1, "", "calculate_light_sheet_exposure_time"], [112, 3, 1, "", "set_readout_direction"]], "aslm.model.devices.camera.camera_hamamatsu": [[114, 2, 1, "", "HamamatsuOrca"], [115, 2, 1, "", "HamamatsuOrcaLightning"]], "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca": [[114, 3, 1, "", "__init__"], [114, 3, 1, "", "calculate_light_sheet_exposure_time"], [114, 3, 1, "", "calculate_readout_time"], [114, 3, 1, "", "close_camera"], [114, 3, 1, "", "close_image_series"], [114, 3, 1, "", "get_minimum_waiting_time"], [114, 3, 1, "", "get_new_frame"], [114, 3, 1, "", "initialize_image_series"], [114, 3, 1, "", "report_settings"], [114, 4, 1, "", "serial_number"], [114, 3, 1, "", "set_ROI"], [114, 3, 1, "", "set_binning"], [114, 3, 1, "", "set_exposure_time"], [114, 3, 1, "", "set_line_interval"], [114, 3, 1, "", "set_readout_direction"], [114, 3, 1, "", "set_sensor_mode"]], "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning": [[115, 3, 1, "", "__init__"], [115, 3, 1, "", "calculate_light_sheet_exposure_time"], [115, 3, 1, "", "calculate_readout_time"], [115, 3, 1, "", "close_camera"], [115, 3, 1, "", "close_image_series"], [115, 3, 1, "", "get_minimum_waiting_time"], [115, 3, 1, "", "get_new_frame"], [115, 3, 1, "", "initialize_image_series"], [115, 3, 1, "", "report_settings"], [115, 4, 1, "", "serial_number"], [115, 3, 1, "", "set_ROI"], [115, 3, 1, "", "set_binning"], [115, 3, 1, "", "set_exposure_time"], [115, 3, 1, "", "set_line_interval"], [115, 3, 1, "", "set_readout_direction"], [115, 3, 1, "", "set_sensor_mode"]], "aslm.model.devices.camera.camera_photometrics": [[117, 2, 1, "", "PhotometricsKinetix"]], "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix": [[117, 3, 1, "", "__init__"], [117, 3, 1, "", "calculate_light_sheet_exposure_time"], [117, 3, 1, "", "calculate_readout_time"], [117, 3, 1, "", "close_camera"], [117, 3, 1, "", "close_image_series"], [117, 3, 1, "", "get_minimum_waiting_time"], [117, 3, 1, "", "get_new_frame"], [117, 3, 1, "", "initialize_image_series"], [117, 3, 1, "", "report_settings"], [117, 4, 1, "", "serial_number"], [117, 3, 1, "", "set_ROI"], [117, 3, 1, "", "set_binning"], [117, 3, 1, "", "set_exposure_time"], [117, 3, 1, "", "set_line_interval"], [117, 3, 1, "", "set_readout_direction"], [117, 3, 1, "", "set_sensor_mode"]], "aslm.model.devices.camera.camera_synthetic": [[119, 2, 1, "", "SyntheticCamera"], [120, 2, 1, "", "SyntheticCameraController"]], "aslm.model.devices.camera.camera_synthetic.SyntheticCamera": [[119, 3, 1, "", "__init__"], [119, 3, 1, "", "calculate_light_sheet_exposure_time"], [119, 3, 1, "", "calculate_readout_time"], [119, 3, 1, "", "close_camera"], [119, 3, 1, "", "close_image_series"], [119, 3, 1, "", "generate_new_frame"], [119, 3, 1, "", "get_minimum_waiting_time"], [119, 3, 1, "", "get_new_frame"], [119, 3, 1, "", "initialize_image_series"], [119, 3, 1, "", "load_images"], [119, 3, 1, "", "report_settings"], [119, 3, 1, "", "set_ROI"], [119, 3, 1, "", "set_binning"], [119, 3, 1, "", "set_exposure_time"], [119, 3, 1, "", "set_line_interval"], [119, 3, 1, "", "set_readout_direction"], [119, 3, 1, "", "set_sensor_mode"]], "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController": [[120, 3, 1, "", "__init__"], [120, 3, 1, "", "get_property_value"]], "aslm.model.devices.daq": [[122, 0, 0, "-", "daq_base"], [124, 0, 0, "-", "daq_synthetic"]], "aslm.model.devices.daq.daq_base": [[123, 2, 1, "", "DAQBase"]], "aslm.model.devices.daq.daq_base.DAQBase": [[123, 3, 1, "", "__init__"], [123, 3, 1, "", "calculate_all_waveforms"], [123, 5, 1, "", "configuration"]], "aslm.model.devices.daq.daq_synthetic": [[125, 2, 1, "", "SyntheticDAQ"]], "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ": [[125, 3, 1, "", "__init__"], [125, 3, 1, "", "add_camera"], [125, 3, 1, "", "calculate_all_waveforms"], [125, 3, 1, "", "close_tasks"], [125, 5, 1, "", "configuration"], [125, 3, 1, "", "create_camera_task"], [125, 3, 1, "", "create_galvo_remote_focus_tasks"], [125, 3, 1, "", "create_master_trigger_task"], [125, 3, 1, "", "prepare_acquisition"], [125, 3, 1, "", "run_acquisition"], [125, 3, 1, "", "start_tasks"], [125, 3, 1, "", "stop_acquisition"], [125, 3, 1, "", "stop_tasks"], [125, 3, 1, "", "write_waveforms_to_tasks"]], "aslm.model.devices.filter_wheel": [[127, 0, 0, "-", "filter_wheel_asi"], [130, 0, 0, "-", "filter_wheel_base"], [132, 0, 0, "-", "filter_wheel_sutter"], [135, 0, 0, "-", "filter_wheel_synthetic"]], "aslm.model.devices.filter_wheel.filter_wheel_asi": [[128, 2, 1, "", "ASIFilterWheel"], [129, 5, 1, "", "baudrate"], [129, 1, 1, "", "build_filter_wheel_connection"]], "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel": [[128, 3, 1, "", "__init__"], [128, 3, 1, "", "check_if_filter_in_filter_dictionary"], [128, 3, 1, "", "close"], [128, 3, 1, "", "filter_change_delay"], [128, 3, 1, "", "set_filter"]], "aslm.model.devices.filter_wheel.filter_wheel_base": [[131, 2, 1, "", "FilterWheelBase"]], "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase": [[131, 3, 1, "", "__init__"], [131, 3, 1, "id0", "check_if_filter_in_filter_dictionary"], [131, 5, 1, "", "filter_dictionary"], [131, 5, 1, "", "wheel_position"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter": [[133, 2, 1, "", "SutterFilterWheel"], [134, 5, 1, "", "baudrate"], [134, 1, 1, "", "build_filter_wheel_connection"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel": [[133, 3, 1, "", "__init__"], [133, 3, 1, "id0", "check_if_filter_in_filter_dictionary"], [133, 3, 1, "id1", "close"], [133, 3, 1, "id2", "filter_change_delay"], [133, 5, 1, "", "filter_dictionary"], [133, 5, 1, "", "number_of_filter_wheels"], [133, 3, 1, "id3", "read"], [133, 3, 1, "", "set_filter"], [133, 5, 1, "", "wheel_position"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic": [[136, 2, 1, "", "SyntheticFilterWheel"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel": [[136, 3, 1, "", "__init__"], [136, 5, 1, "", "baudrate"], [136, 3, 1, "", "check_if_filter_in_filter_dictionary"], [136, 3, 1, "", "close"], [136, 5, 1, "", "comport"], [136, 3, 1, "", "filter_change_delay"], [136, 5, 1, "", "filter_dictionary"], [136, 5, 1, "", "number_of_filter_wheels"], [136, 3, 1, "", "read"], [136, 3, 1, "", "set_filter"], [136, 5, 1, "", "wheel_position"]], "aslm.model.devices.galvo": [[138, 0, 0, "-", "galvo_base"], [140, 0, 0, "-", "galvo_synthetic"]], "aslm.model.devices.galvo.galvo_base": [[139, 2, 1, "", "GalvoBase"]], "aslm.model.devices.galvo.galvo_base.GalvoBase": [[139, 3, 1, "", "__init__"], [139, 3, 1, "", "adjust"], [139, 5, 1, "", "camera_delay_percent"], [139, 3, 1, "id0", "close_task"], [139, 5, 1, "", "configuration"], [139, 5, 1, "", "device_config"], [139, 5, 1, "", "galvo_max_voltage"], [139, 5, 1, "", "galvo_min_voltage"], [139, 5, 1, "", "galvo_name"], [139, 5, 1, "", "microscope_name"], [139, 3, 1, "id1", "prepare_task"], [139, 5, 1, "", "remote_focus_ramp_falling"], [139, 5, 1, "", "sample_rate"], [139, 5, 1, "", "samples"], [139, 3, 1, "id2", "start_task"], [139, 3, 1, "id3", "stop_task"], [139, 5, 1, "", "sweep_time"], [139, 5, 1, "", "waveform_dict"]], "aslm.model.devices.galvo.galvo_synthetic": [[141, 2, 1, "", "SyntheticGalvo"]], "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo": [[141, 5, 1, "", "None"], [141, 3, 1, "", "__init__"], [141, 3, 1, "", "adjust"], [141, 3, 1, "id0", "close_task"], [141, 3, 1, "id1", "prepare_task"], [141, 3, 1, "id2", "start_task"], [141, 3, 1, "id3", "stop_task"]], "aslm.model.devices.joystick": [[143, 0, 0, "-", "joystick_base"], [145, 0, 0, "-", "joystick_synthetic"]], "aslm.model.devices.joystick.joystick_base": [[144, 2, 1, "", "JoystickBase"]], "aslm.model.devices.joystick.joystick_base.JoystickBase": [[144, 3, 1, "", "__init__"]], "aslm.model.devices.joystick.joystick_synthetic": [[146, 2, 1, "", "SyntheticJoystick"]], "aslm.model.devices.joystick.joystick_synthetic.SyntheticJoystick": [[146, 3, 1, "", "__init__"]], "aslm.model.devices.lasers": [[148, 0, 0, "-", "laser_base"], [150, 0, 0, "-", "laser_synthetic"], [152, 0, 0, "-", "laser_trigger_base"], [154, 0, 0, "-", "laser_trigger_synthetic"]], "aslm.model.devices.lasers.laser_base": [[149, 2, 1, "", "LaserBase"]], "aslm.model.devices.lasers.laser_base.LaserBase": [[149, 3, 1, "", "__init__"], [149, 3, 1, "", "close"], [149, 3, 1, "", "initialize_laser"]], "aslm.model.devices.lasers.laser_synthetic": [[151, 2, 1, "", "SyntheticLaser"]], "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser": [[151, 3, 1, "", "__init__"], [151, 3, 1, "", "close"], [151, 3, 1, "", "initialize_laser"]], "aslm.model.devices.lasers.laser_trigger_base": [[153, 2, 1, "", "LaserTriggerBase"]], "aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase": [[153, 3, 1, "", "__init__"], [153, 3, 1, "", "enable_high_resolution_laser"], [153, 3, 1, "", "enable_low_resolution_laser"], [153, 3, 1, "", "set_laser_analog_voltage"]], "aslm.model.devices.lasers.laser_trigger_synthetic": [[155, 2, 1, "", "SyntheticLaserTriggers"]], "aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers": [[155, 3, 1, "", "__init__"], [155, 3, 1, "", "enable_high_resolution_laser"], [155, 3, 1, "", "enable_low_resolution_laser"], [155, 3, 1, "", "set_laser_analog_voltage"]], "aslm.model.devices.objectives": [[157, 2, 1, "", "Objective"]], "aslm.model.devices.objectives.Objective": [[157, 3, 1, "", "__init__"], [157, 3, 1, "", "calculate_entrance_pupil"]], "aslm.model.devices.remote_focus": [[159, 0, 0, "-", "remote_focus_base"], [161, 0, 0, "-", "remote_focus_synthetic"]], "aslm.model.devices.remote_focus.remote_focus_base": [[160, 2, 1, "", "RemoteFocusBase"]], "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase": [[160, 3, 1, "", "__init__"], [160, 3, 1, "", "adjust"], [160, 5, 1, "", "camera_delay_percent"], [160, 3, 1, "", "close_task"], [160, 5, 1, "", "configuration"], [160, 5, 1, "", "device_config"], [160, 5, 1, "", "microscope_name"], [160, 3, 1, "id0", "prepare_task"], [160, 5, 1, "", "remote_focus_delay"], [160, 5, 1, "", "remote_focus_max_voltage"], [160, 5, 1, "", "remote_focus_min_voltage"], [160, 5, 1, "", "remote_focus_ramp_falling"], [160, 5, 1, "", "sample_rate"], [160, 5, 1, "", "samples"], [160, 3, 1, "id1", "start_task"], [160, 3, 1, "id2", "stop_task"], [160, 5, 1, "", "sweep_time"], [160, 5, 1, "", "waveform_dict"]], "aslm.model.devices.remote_focus.remote_focus_synthetic": [[162, 2, 1, "", "SyntheticRemoteFocus"]], "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus": [[162, 3, 1, "", "__init__"], [162, 3, 1, "", "adjust"], [162, 3, 1, "id0", "close_task"], [162, 5, 1, "", "configuration"], [162, 5, 1, "", "device_connection"], [162, 5, 1, "", "microscope_name"], [162, 3, 1, "id1", "prepare_task"], [162, 3, 1, "id2", "start_task"], [162, 3, 1, "id3", "stop_task"]], "aslm.model.devices.shutter": [[164, 0, 0, "-", "laser_shutter_base"], [166, 0, 0, "-", "laser_shutter_synthetic"]], "aslm.model.devices.shutter.laser_shutter_base": [[165, 2, 1, "", "ShutterBase"]], "aslm.model.devices.shutter.laser_shutter_base.ShutterBase": [[165, 3, 1, "", "__init__"], [165, 5, 1, "", "configuration"], [165, 5, 1, "", "device_connection"], [165, 5, 1, "", "microscope_name"]], "aslm.model.devices.shutter.laser_shutter_synthetic": [[167, 2, 1, "", "SyntheticShutter"]], "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter": [[167, 3, 1, "", "__init__"], [167, 3, 1, "", "close_shutters"], [167, 5, 1, "", "configuration"], [167, 5, 1, "", "device_connection"], [167, 5, 1, "", "microscope_name"], [167, 3, 1, "", "open_left"], [167, 3, 1, "", "open_right"], [167, 3, 1, "", "state"]], "aslm.model.devices.stages": [[169, 0, 0, "-", "stage_asi"], [172, 0, 0, "-", "stage_base"], [174, 0, 0, "-", "stage_galvo"], [176, 0, 0, "-", "stage_mcl"], [179, 0, 0, "-", "stage_pi"], [182, 0, 0, "-", "stage_sutter"], [185, 0, 0, "-", "stage_synthetic"], [187, 0, 0, "-", "stage_tl_kcube_inertial"]], "aslm.model.devices.stages.stage_asi": [[170, 2, 1, "", "ASIStage"], [171, 1, 1, "", "build_ASI_Stage_connection"]], "aslm.model.devices.stages.stage_asi.ASIStage": [[170, 3, 1, "", "__init__"], [170, 5, 1, "", "axes_mapping"], [170, 5, 1, "", "default_speed"], [170, 5, 1, "", "f_max"], [170, 5, 1, "", "f_min"], [170, 5, 1, "", "f_pos"], [170, 3, 1, "id0", "get_abs_position"], [170, 3, 1, "id1", "get_axis_position"], [170, 3, 1, "id2", "get_position_dict"], [170, 3, 1, "id3", "get_speed"], [170, 3, 1, "id4", "move_absolute"], [170, 3, 1, "id5", "move_axis_absolute"], [170, 5, 1, "", "position_dict"], [170, 3, 1, "id6", "report_position"], [170, 3, 1, "id7", "scanr"], [170, 3, 1, "id8", "set_speed"], [170, 3, 1, "id9", "start_scan"], [170, 3, 1, "id10", "stop"], [170, 3, 1, "id11", "stop_scan"], [170, 5, 1, "", "theta_max"], [170, 5, 1, "", "theta_min"], [170, 5, 1, "", "theta_pos"], [170, 3, 1, "id12", "verify_abs_position"], [170, 5, 1, "", "x_max"], [170, 5, 1, "", "x_min"], [170, 5, 1, "", "x_pos"], [170, 5, 1, "", "y_max"], [170, 5, 1, "", "y_min"], [170, 5, 1, "", "y_pos"], [170, 5, 1, "", "z_max"], [170, 5, 1, "", "z_min"], [170, 5, 1, "", "z_pos"]], "aslm.model.devices.stages.stage_base": [[173, 2, 1, "", "StageBase"]], "aslm.model.devices.stages.stage_base.StageBase": [[173, 3, 1, "", "__init__"], [173, 5, 1, "", "axes_mapping"], [173, 5, 1, "", "f_max"], [173, 5, 1, "", "f_min"], [173, 5, 1, "", "f_pos"], [173, 3, 1, "id0", "get_abs_position"], [173, 3, 1, "id1", "get_position_dict"], [173, 3, 1, "id2", "stop"], [173, 5, 1, "", "theta_max"], [173, 5, 1, "", "theta_min"], [173, 5, 1, "", "theta_pos"], [173, 3, 1, "id3", "verify_abs_position"], [173, 5, 1, "", "x_max"], [173, 5, 1, "", "x_min"], [173, 5, 1, "", "x_pos"], [173, 5, 1, "", "y_max"], [173, 5, 1, "", "y_min"], [173, 5, 1, "", "y_pos"], [173, 5, 1, "", "z_max"], [173, 5, 1, "", "z_min"], [173, 5, 1, "", "z_pos"]], "aslm.model.devices.stages.stage_galvo": [[175, 2, 1, "", "GalvoNIStage"]], "aslm.model.devices.stages.stage_galvo.GalvoNIStage": [[175, 3, 1, "", "__init__"], [175, 5, 1, "", "axes_mapping"], [175, 3, 1, "", "create_position_dict"], [175, 3, 1, "id0", "get_abs_position"], [175, 3, 1, "", "get_position_dict"], [175, 3, 1, "", "move_absolute"], [175, 3, 1, "", "move_axis_absolute"], [175, 3, 1, "", "report_position"], [175, 3, 1, "id1", "stop"], [175, 3, 1, "", "verify_abs_position"]], "aslm.model.devices.stages.stage_mcl": [[177, 2, 1, "", "MCLStage"], [178, 1, 1, "", "build_MCLStage_connection"]], "aslm.model.devices.stages.stage_mcl.MCLStage": [[177, 3, 1, "", "__init__"], [177, 5, 1, "", "axes_mapping"], [177, 3, 1, "", "get_abs_position"], [177, 3, 1, "", "get_position_dict"], [177, 3, 1, "", "move_absolute"], [177, 3, 1, "", "move_axis_absolute"], [177, 3, 1, "", "report_position"], [177, 3, 1, "", "stop"], [177, 3, 1, "", "verify_abs_position"]], "aslm.model.devices.stages.stage_pi": [[180, 2, 1, "", "PIStage"], [181, 1, 1, "", "build_PIStage_connection"]], "aslm.model.devices.stages.stage_pi.PIStage": [[180, 3, 1, "", "__init__"], [180, 5, 1, "", "axes_mapping"], [180, 3, 1, "id0", "get_abs_position"], [180, 3, 1, "id1", "get_position_dict"], [180, 3, 1, "id2", "move_absolute"], [180, 3, 1, "id3", "move_axis_absolute"], [180, 5, 1, "", "pi_axes"], [180, 5, 1, "", "pi_device"], [180, 5, 1, "", "pi_tools"], [180, 3, 1, "id4", "report_position"], [180, 3, 1, "id5", "stop"], [180, 3, 1, "", "verify_abs_position"], [180, 3, 1, "", "wait_on_target"]], "aslm.model.devices.stages.stage_sutter": [[183, 2, 1, "", "SutterStage"], [184, 1, 1, "", "build_MP285_connection"]], "aslm.model.devices.stages.stage_sutter.SutterStage": [[183, 3, 1, "", "__init__"], [183, 5, 1, "", "axes_mapping"], [183, 3, 1, "", "close"], [183, 3, 1, "", "get_abs_position"], [183, 3, 1, "", "get_position_dict"], [183, 3, 1, "", "move_absolute"], [183, 3, 1, "", "move_axis_absolute"], [183, 3, 1, "", "read"], [183, 3, 1, "", "report_position"], [183, 5, 1, "", "resolution"], [183, 5, 1, "", "speed"], [183, 5, 1, "", "stage"], [183, 3, 1, "", "stop"], [183, 5, 1, "", "sutter_axes"], [183, 3, 1, "", "verify_abs_position"]], "aslm.model.devices.stages.stage_synthetic": [[186, 2, 1, "", "SyntheticStage"]], "aslm.model.devices.stages.stage_synthetic.SyntheticStage": [[186, 3, 1, "", "__init__"], [186, 5, 1, "", "axes_mapping"], [186, 3, 1, "", "get_abs_position"], [186, 3, 1, "", "get_position_dict"], [186, 3, 1, "", "move_absolute"], [186, 3, 1, "", "move_axis_absolute"], [186, 3, 1, "", "stop"], [186, 3, 1, "", "verify_abs_position"]], "aslm.model.devices.stages.stage_tl_kcube_inertial": [[188, 2, 1, "", "TLKIMStage"], [189, 1, 1, "", "build_TLKIMStage_connection"]], "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage": [[188, 3, 1, "", "__init__"], [188, 5, 1, "", "axes_mapping"], [188, 3, 1, "", "get_abs_position"], [188, 3, 1, "", "get_position_dict"], [188, 3, 1, "", "move_absolute"], [188, 3, 1, "", "move_axis_absolute"], [188, 3, 1, "", "report_position"], [188, 3, 1, "", "stop"], [188, 3, 1, "", "verify_abs_position"]], "aslm.model.devices.zoom": [[191, 0, 0, "-", "zoom_base"], [193, 0, 0, "-", "zoom_synthetic"]], "aslm.model.devices.zoom.zoom_base": [[192, 2, 1, "", "ZoomBase"]], "aslm.model.devices.zoom.zoom_base.ZoomBase": [[192, 3, 1, "", "__init__"], [192, 3, 1, "", "build_stage_dict"], [192, 3, 1, "", "move"], [192, 3, 1, "", "read_position"], [192, 3, 1, "", "set_zoom"]], "aslm.model.devices.zoom.zoom_synthetic": [[194, 2, 1, "", "SyntheticZoom"]], "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom": [[194, 3, 1, "", "__init__"], [194, 3, 1, "", "build_stage_dict"], [194, 3, 1, "id0", "move"], [194, 3, 1, "id1", "read_position"], [194, 3, 1, "id2", "set_zoom"]], "aslm.model.dummy": [[196, 2, 1, "", "DummyController"], [197, 2, 1, "", "DummyDevice"], [198, 2, 1, "", "DummyMicroscope"], [199, 2, 1, "", "DummyModel"]], "aslm.model.dummy.DummyController": [[196, 3, 1, "", "__init__"], [196, 3, 1, "", "clear"], [196, 3, 1, "", "execute"], [196, 3, 1, "", "pop"]], "aslm.model.dummy.DummyDevice": [[197, 3, 1, "", "__init__"], [197, 3, 1, "", "clear"], [197, 5, 1, "", "data_pipe"], [197, 3, 1, "", "generate_message"], [197, 3, 1, "", "listen"], [197, 3, 1, "", "sendout"], [197, 3, 1, "id0", "setup"], [197, 3, 1, "", "shutdown"], [197, 5, 1, "", "signal_pipe"]], "aslm.model.dummy.DummyMicroscope": [[198, 3, 1, "", "__init__"], [198, 5, 1, "", "data_pipe"], [198, 3, 1, "", "setup"], [198, 3, 1, "", "shutdown"], [198, 5, 1, "", "signal_pipe"]], "aslm.model.dummy.DummyModel": [[199, 3, 1, "", "__init__"], [199, 5, 1, "", "configuration"], [199, 5, 1, "", "data"], [199, 5, 1, "", "data_container"], [199, 3, 1, "id0", "data_func"], [199, 5, 1, "", "data_pipe"], [199, 5, 1, "", "data_thread"], [199, 5, 1, "", "frame_id"], [199, 5, 1, "", "signal_container"], [199, 3, 1, "", "signal_func"], [199, 5, 1, "", "signal_pipe"], [199, 5, 1, "", "signal_thread"], [199, 3, 1, "", "start"], [199, 5, 1, "", "stop_flag"]], "aslm.model.features": [[201, 0, 0, "-", "auto_tile_scan"], [203, 0, 0, "-", "autofocus"], [206, 0, 0, "-", "common_features"], [217, 0, 0, "-", "constant_velocity_acquisition"], [219, 0, 0, "-", "dummy_detective"], [221, 0, 0, "-", "feature_container"], [232, 0, 0, "-", "feature_related_functions"], [235, 0, 0, "-", "image_writer"], [237, 0, 0, "-", "restful_features"], [240, 0, 0, "-", "volume_search"]], "aslm.model.features.auto_tile_scan": [[202, 2, 1, "", "CalculateFocusRange"]], "aslm.model.features.auto_tile_scan.CalculateFocusRange": [[202, 3, 1, "", "__init__"]], "aslm.model.features.autofocus": [[204, 2, 1, "", "Autofocus"], [205, 1, 1, "", "power_tent"]], "aslm.model.features.autofocus.Autofocus": [[204, 3, 1, "", "__init__"], [204, 5, 1, "", "autofocus_frame_queue"], [204, 5, 1, "", "autofocus_pos_queue"], [204, 5, 1, "", "coarse_step_size"], [204, 5, 1, "", "coarse_steps"], [204, 3, 1, "", "end_func_data"], [204, 3, 1, "", "end_func_signal"], [204, 5, 1, "", "f_frame_id"], [204, 5, 1, "", "f_pos"], [204, 5, 1, "", "fine_pos_offset"], [204, 5, 1, "", "fine_step_size"], [204, 5, 1, "", "focus_pos"], [204, 5, 1, "", "frame_num"], [204, 3, 1, "", "get_autofocus_frame_num"], [204, 5, 1, "", "get_frames_num"], [204, 3, 1, "", "get_steps"], [204, 3, 1, "", "in_func_data"], [204, 3, 1, "", "in_func_signal"], [204, 5, 1, "", "init_pos"], [204, 5, 1, "", "max_entropy"], [204, 5, 1, "", "plot_data"], [204, 3, 1, "", "pre_func_data"], [204, 3, 1, "", "pre_func_signal"], [204, 3, 1, "", "robust_autofocus"], [204, 3, 1, "id0", "run"], [204, 5, 1, "", "signal_id"], [204, 5, 1, "", "target_channel"], [204, 5, 1, "", "target_frame_id"], [204, 5, 1, "", "total_frame_num"]], "aslm.model.features.common_features": [[207, 2, 1, "", "ChangeResolution"], [208, 2, 1, "", "ConProAcquisition"], [209, 2, 1, "", "FindTissueSimple2D"], [210, 2, 1, "", "LoopByCount"], [211, 2, 1, "", "MoveToNextPositionInMultiPostionTable"], [212, 2, 1, "", "PrepareNextChannel"], [213, 2, 1, "", "Snap"], [214, 2, 1, "", "StackPause"], [215, 2, 1, "", "WaitToContinue"], [216, 2, 1, "", "ZStackAcquisition"]], "aslm.model.features.common_features.ChangeResolution": [[207, 3, 1, "", "__init__"]], "aslm.model.features.common_features.ConProAcquisition": [[208, 3, 1, "", "__init__"]], "aslm.model.features.common_features.FindTissueSimple2D": [[209, 3, 1, "", "__init__"]], "aslm.model.features.common_features.LoopByCount": [[210, 3, 1, "", "__init__"]], "aslm.model.features.common_features.MoveToNextPositionInMultiPostionTable": [[211, 3, 1, "", "__init__"]], "aslm.model.features.common_features.PrepareNextChannel": [[212, 3, 1, "", "__init__"]], "aslm.model.features.common_features.Snap": [[213, 3, 1, "", "__init__"]], "aslm.model.features.common_features.StackPause": [[214, 3, 1, "", "__init__"]], "aslm.model.features.common_features.WaitToContinue": [[215, 3, 1, "", "__init__"]], "aslm.model.features.common_features.ZStackAcquisition": [[216, 3, 1, "", "__init__"]], "aslm.model.features.constant_velocity_acquisition": [[218, 2, 1, "", "ConstantVelocityAcquisition"]], "aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition": [[218, 3, 1, "", "__init__"], [218, 3, 1, "", "cleanup"], [218, 3, 1, "", "pre_func_signal"]], "aslm.model.features.dummy_detective": [[220, 2, 1, "", "Dummy_Detective"]], "aslm.model.features.dummy_detective.Dummy_Detective": [[220, 3, 1, "", "__init__"]], "aslm.model.features.feature_container": [[222, 2, 1, "", "Container"], [223, 2, 1, "", "DataContainer"], [224, 2, 1, "", "DataNode"], [225, 2, 1, "", "SignalContainer"], [226, 2, 1, "", "SignalNode"], [227, 2, 1, "", "TreeNode"], [228, 1, 1, "", "dummy_True"], [229, 1, 1, "", "dummy_func"], [230, 1, 1, "", "get_registered_funcs"], [231, 1, 1, "", "load_features"]], "aslm.model.features.feature_container.Container": [[222, 3, 1, "", "__init__"]], "aslm.model.features.feature_container.DataContainer": [[223, 3, 1, "", "__init__"]], "aslm.model.features.feature_container.DataNode": [[224, 3, 1, "", "__init__"]], "aslm.model.features.feature_container.SignalContainer": [[225, 3, 1, "", "__init__"]], "aslm.model.features.feature_container.SignalNode": [[226, 3, 1, "", "__init__"]], "aslm.model.features.feature_container.TreeNode": [[227, 3, 1, "", "__init__"]], "aslm.model.features.feature_related_functions": [[233, 1, 1, "", "convert_feature_list_to_str"], [234, 1, 1, "", "convert_str_to_feature_list"]], "aslm.model.features.image_writer": [[236, 2, 1, "", "ImageWriter"]], "aslm.model.features.image_writer.ImageWriter": [[236, 3, 1, "", "__init__"], [236, 3, 1, "", "calculate_and_check_disk_space"], [236, 3, 1, "id15", "close"], [236, 5, 1, "id4", "config_table"], [236, 5, 1, "id5", "current_time_point"], [236, 5, 1, "id6", "data_buffer"], [236, 5, 1, "id7", "data_source"], [236, 5, 1, "id8", "file_type"], [236, 3, 1, "id16", "generate_image_name"], [236, 3, 1, "id17", "generate_meta_data"], [236, 5, 1, "id9", "mip"], [236, 5, 1, "id10", "mip_directory"], [236, 5, 1, "id11", "model"], [236, 5, 1, "id12", "num_of_channels"], [236, 5, 1, "id13", "save_directory"], [236, 3, 1, "id18", "save_image"], [236, 5, 1, "id14", "sub_dir"]], "aslm.model.features.restful_features": [[238, 2, 1, "", "IlastikSegmentation"], [239, 1, 1, "", "prepare_service"]], "aslm.model.features.restful_features.IlastikSegmentation": [[238, 3, 1, "", "__init__"]], "aslm.model.features.volume_search": [[241, 2, 1, "", "VolumeSearch"], [242, 1, 1, "", "draw_box"]], "aslm.model.features.volume_search.VolumeSearch": [[241, 3, 1, "", "__init__"]], "aslm.model.metadata_sources": [[244, 0, 0, "-", "bdv_metadata"], [246, 0, 0, "-", "metadata"], [249, 0, 0, "-", "ome_tiff_metadata"]], "aslm.model.metadata_sources.bdv_metadata": [[245, 2, 1, "", "BigDataViewerMetadata"]], "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata": [[245, 3, 1, "", "__init__"], [245, 3, 1, "", "parse_bdv_xml"], [245, 4, 1, "", "shape"], [245, 3, 1, "", "stage_positions_to_affine_matrix"], [245, 3, 1, "", "to_xml"], [245, 4, 1, "", "voxel_size"], [245, 3, 1, "", "write_xml"]], "aslm.model.metadata_sources.metadata": [[247, 2, 1, "", "Metadata"], [248, 2, 1, "", "XMLMetadata"]], "aslm.model.metadata_sources.metadata.Metadata": [[247, 3, 1, "", "__init__"], [247, 4, 1, "", "shape"], [247, 4, 1, "", "voxel_size"]], "aslm.model.metadata_sources.metadata.XMLMetadata": [[248, 3, 1, "", "__init__"], [248, 4, 1, "", "shape"], [248, 3, 1, "", "to_xml"], [248, 4, 1, "", "voxel_size"], [248, 3, 1, "", "write_xml"]], "aslm.model.metadata_sources.ome_tiff_metadata": [[250, 2, 1, "", "OMETIFFMetadata"]], "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata": [[250, 3, 1, "", "__init__"], [250, 3, 1, "", "ome_tiff_xml_dict"], [250, 4, 1, "", "shape"], [250, 3, 1, "", "to_xml"], [250, 4, 1, "", "voxel_size"], [250, 3, 1, "", "write_xml"]], "aslm.model.microscope": [[252, 2, 1, "", "Microscope"]], "aslm.model.microscope.Microscope": [[252, 3, 1, "", "__init__"], [252, 3, 1, "", "assemble_device_config_lists"], [252, 3, 1, "", "calculate_all_waveform"], [252, 3, 1, "", "calculate_exposure_sweep_times"], [252, 5, 1, "", "configuration"], [252, 5, 1, "", "daq"], [252, 5, 1, "", "data_buffer"], [252, 3, 1, "id0", "end_acquisition"], [252, 3, 1, "id1", "get_readout_time"], [252, 3, 1, "", "get_stage_position"], [252, 3, 1, "", "load_and_start_devices"], [252, 5, 1, "", "microscope_name"], [252, 3, 1, "", "move_stage"], [252, 3, 1, "id2", "move_stage_offset"], [252, 5, 1, "", "number_of_frames"], [252, 3, 1, "", "prepare_acquisition"], [252, 3, 1, "", "prepare_next_channel"], [252, 3, 1, "", "stop_stage"], [252, 3, 1, "", "terminate"], [252, 3, 1, "id3", "update_data_buffer"]], "aslm.model.model": [[254, 2, 1, "", "Model"]], "aslm.model.model.Model": [[254, 5, 1, "", "USE_GPU"], [254, 3, 1, "", "__init__"], [254, 5, 1, "", "args"], [254, 3, 1, "", "change_resolution"], [254, 5, 1, "", "configuration"], [254, 3, 1, "id0", "create_pipe"], [254, 3, 1, "id1", "end_acquisition"], [254, 5, 1, "", "event_queue"], [254, 3, 1, "", "get_active_microscope"], [254, 3, 1, "id2", "get_data_buffer"], [254, 3, 1, "", "get_feature_list"], [254, 3, 1, "", "get_microscope_info"], [254, 3, 1, "", "get_offset_variance_maps"], [254, 3, 1, "", "get_readout_time"], [254, 3, 1, "", "get_stage_position"], [254, 3, 1, "", "load_feature_list_from_str"], [254, 3, 1, "", "load_feature_records"], [254, 3, 1, "", "load_images"], [254, 3, 1, "id3", "move_stage"], [254, 3, 1, "", "pause_data_thread"], [254, 3, 1, "id4", "prepare_acquisition"], [254, 3, 1, "id5", "release_pipe"], [254, 3, 1, "", "resume_data_thread"], [254, 3, 1, "", "run_acquisition"], [254, 3, 1, "id6", "run_command"], [254, 3, 1, "id7", "run_data_process"], [254, 3, 1, "id8", "run_live_acquisition"], [254, 3, 1, "", "run_single_acquisition"], [254, 3, 1, "", "run_single_channel_acquisition"], [254, 3, 1, "", "run_single_channel_acquisition_with_features"], [254, 3, 1, "", "run_z_stack_acquisition"], [254, 3, 1, "id9", "snap_image"], [254, 3, 1, "", "stop_stage"], [254, 3, 1, "id10", "update_data_buffer"], [254, 3, 1, "", "update_ilastik_setting"]], "aslm.model.waveforms": [[256, 1, 1, "", "camera_exposure"], [257, 1, 1, "", "dc_value"], [258, 1, 1, "", "remote_focus_ramp"], [259, 1, 1, "", "sawtooth"], [260, 1, 1, "", "sine_wave"], [261, 1, 1, "", "single_pulse"], [262, 1, 1, "", "smooth_waveform"], [263, 1, 1, "", "square"]], "aslm.tools": [[265, 0, 0, "-", "beams"], [269, 0, 0, "-", "common_dict_tools"], [271, 0, 0, "-", "common_functions"], [277, 0, 0, "-", "decorators"], [280, 0, 0, "-", "file_functions"], [285, 0, 0, "-", "image"], [288, 0, 0, "-", "image_loaders"], [290, 0, 0, "-", "main_functions"], [294, 0, 0, "-", "multipos_table_tools"], [299, 0, 0, "-", "project_stats"], [301, 0, 0, "-", "sdf"], [305, 0, 0, "-", "waveform_template_funcs"], [307, 0, 0, "-", "xml_tools"]], "aslm.tools.beams": [[266, 1, 1, "", "fit_gaussian_beam_error"], [267, 1, 1, "", "fit_gaussian_beam_mse"], [268, 1, 1, "", "gaussian_beam"]], "aslm.tools.common_dict_tools": [[270, 1, 1, "", "update_stage_dict"]], "aslm.tools.common_functions": [[272, 2, 1, "", "VariableWithLock"], [273, 1, 1, "", "build_ref_name"], [274, 1, 1, "", "combine_funcs"], [275, 1, 1, "", "copy_proxy_object"], [276, 1, 1, "", "load_module_from_file"]], "aslm.tools.common_functions.VariableWithLock": [[272, 3, 1, "", "__init__"]], "aslm.tools.decorators": [[278, 2, 1, "", "FeatureList"], [279, 1, 1, "", "function_timer"]], "aslm.tools.decorators.FeatureList": [[278, 3, 1, "", "__init__"]], "aslm.tools.file_functions": [[281, 1, 1, "", "create_save_path"], [282, 1, 1, "", "delete_folder"], [283, 1, 1, "", "load_yaml_file"], [284, 1, 1, "", "save_yaml_file"]], "aslm.tools.image": [[286, 1, 1, "", "create_arrow_image"], [287, 1, 1, "", "text_array"]], "aslm.tools.image_loaders": [[289, 2, 1, "", "LazyTiff"]], "aslm.tools.image_loaders.LazyTiff": [[289, 3, 1, "", "__init__"], [289, 4, 1, "", "shape"]], "aslm.tools.main_functions": [[291, 1, 1, "", "create_parser"], [292, 1, 1, "", "evaluate_parser_input_arguments"], [293, 1, 1, "", "identify_gpu"]], "aslm.tools.multipos_table_tools": [[295, 1, 1, "", "calc_num_tiles"], [296, 1, 1, "", "compute_tiles_from_bounding_box"], [297, 1, 1, "", "sign"], [298, 1, 1, "", "update_table"]], "aslm.tools.project_stats": [[300, 1, 1, "", "countlines"]], "aslm.tools.sdf": [[302, 1, 1, "", "box"], [303, 1, 1, "", "sphere"], [304, 1, 1, "", "volume_from_sdf"]], "aslm.tools.waveform_template_funcs": [[306, 1, 1, "", "get_waveform_template_parameters"]], "aslm.tools.xml_tools": [[308, 1, 1, "", "dict_to_xml"], [309, 1, 1, "", "parse_xml"]], "aslm.view": [[311, 0, 0, "-", "main_window_content"], [312, 0, 0, "-", "popups"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:property", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"aslm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 317, 320, 322], "config": [0, 1, 2, 3, 4, 5, 6, 7], "build_nested_dict": 2, "get_aslm_path": 3, "get_configuration_path": 4, "load_config": 5, "update_config_dict": 6, "verify_configur": 7, "control": [8, 9, 10, 11, 12, 13, 14, 326], "configuration_control": [9, 10], "configurationcontrol": 10, "thread_pool": [11, 12, 13, 14], "selflockthread": 12, "synchronizedthreadpool": 13, "threadwaitlist": 14, "model": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 321], "analysi": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "boundary_detect": [17, 18, 19, 20, 21], "binary_detect": 18, "find_tissue_boundary_2d": 19, "has_tissu": 20, "map_boundari": 21, "camera": [22, 23, 24, 25, 26, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 324, 326], "compute_flatfield_map": 23, "compute_noise_sigma": 24, "compute_scmos_offset_and_variance_map": 25, "compute_signal_to_nois": 26, "detect": [27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "add_median_bord": 28, "combine_imag": 29, "log_detect": 30, "make_inside_imag": 31, "make_normalized_imag": 32, "make_sphere_3d": 33, "multiscale_surface_filter_3d": 34, "surface_filter_gauss_3d": 35, "three_level_segment": 36, "image_contrast": [37, 38, 39, 40, 41, 42], "estimate_and_correct_flatfield": 38, "estimate_image_resolut": 39, "fast_normalized_dct_shannon_entropi": 40, "image_intens": 41, "normalized_dct_shannon_entropi": 42, "image_decorrel": [43, 44, 45, 46, 47, 48, 49, 50, 51], "apodize_imag": 44, "get_correlation_coeffici": 45, "get_decorrelation_local_maxima": 46, "get_image_decorrel": 47, "get_radial_averag": 48, "image_to_polar": 49, "linear_map": 50, "main_image_decorr": 51, "image_transform": [52, 53, 54], "deskew_imag": 53, "initiate_gpu": 54, "spectral_unmix": [55, 56], "to_do": 56, "concurr": [57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "concurrency_tool": [58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], "custodythread": 59, "fancythread": 60, "mytestclass": 61, "objectinsubprocess": 62, "politethread": 63, "resultthread": 64, "sharedndarrai": 65, "testobjectinsubprocess": 66, "testresultthreadandcustodythread": 67, "testsharedndarrai": 68, "proxy_object": [69, 70, 71, 72, 73], "proxymanag": 70, "proxyobject": 71, "launch_custody_thread": 72, "launch_thread": 73, "write_paramet": [74, 75], "write_param": 75, "data_sourc": [76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "bdv_data_sourc": [77, 78], "bigdataviewerdatasourc": 78, "datasourc": 80, "get_data_sourc": 81, "tiff_data_sourc": [82, 83], "tiffdatasourc": 83, "zarr_data_sourc": [84, 85], "zarrdatasourc": 85, "device_startup_funct": [86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "dummydeviceconnect": 87, "auto_redi": 88, "device_not_found": 89, "load_camera_connect": 90, "load_devic": 91, "load_filter_wheel_connect": 92, "load_stag": 93, "load_zoom_connect": 94, "start_camera": 95, "start_daq": 96, "start_filter_wheel": 97, "start_galvo": 98, "start_las": 99, "start_remote_focus_devic": 100, "start_shutt": 101, "start_stag": 102, "start_zoom": 103, "devic": [104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194], "api": [105, 106, 107, 108, 109, 315, 324], "coher": [106, 326], "dynamixel": [107, 326], "logitech": 108, "omicron": [109, 326], "camera_bas": [111, 112], "camerabas": 112, "camera_hamamatsu": [113, 114, 115], "hamamatsuorca": 114, "hamamatsuorcalightn": 115, "camera_photometr": [116, 117], "photometricskinetix": 117, "camera_synthet": [118, 119, 120], "syntheticcamera": 119, "syntheticcameracontrol": 120, "daq": [121, 122, 123, 124, 125, 324], "daq_bas": [122, 123], "daqbas": 123, "daq_synthet": [124, 125], "syntheticdaq": 125, "filter_wheel": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "filter_wheel_asi": [127, 128, 129], "asifilterwheel": 128, "build_filter_wheel_connect": [129, 134], "filter_wheel_bas": [130, 131], "filterwheelbas": 131, "filter_wheel_sutt": [132, 133, 134], "sutterfilterwheel": 133, "filter_wheel_synthet": [135, 136], "syntheticfilterwheel": 136, "galvo": [137, 138, 139, 140, 141, 324, 326], "galvo_bas": [138, 139], "galvobas": 139, "galvo_synthet": [140, 141], "syntheticgalvo": 141, "joystick": [142, 143, 144, 145, 146], "joystick_bas": [143, 144], "joystickbas": 144, "joystick_synthet": [145, 146], "syntheticjoystick": 146, "laser": [147, 148, 149, 150, 151, 152, 153, 154, 155, 324, 326], "laser_bas": [148, 149], "laserbas": 149, "laser_synthet": [150, 151], "syntheticlas": 151, "laser_trigger_bas": [152, 153], "lasertriggerbas": 153, "laser_trigger_synthet": [154, 155], "syntheticlasertrigg": 155, "object": [156, 157, 317], "remote_focu": [158, 159, 160, 161, 162], "remote_focus_bas": [159, 160], "remotefocusbas": 160, "remote_focus_synthet": [161, 162], "syntheticremotefocu": 162, "shutter": [163, 164, 165, 166, 167, 324, 326], "laser_shutter_bas": [164, 165], "shutterbas": 165, "laser_shutter_synthet": [166, 167], "syntheticshutt": 167, "stage": [168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 316, 324, 326], "stage_asi": [169, 170, 171], "asistag": 170, "build_asi_stage_connect": 171, "stage_bas": [172, 173], "stagebas": 173, "stage_galvo": [174, 175], "galvonistag": 175, "stage_mcl": [176, 177, 178], "mclstage": 177, "build_mclstage_connect": 178, "stage_pi": [179, 180, 181], "pistag": 180, "build_pistage_connect": 181, "stage_sutt": [182, 183, 184], "sutterstag": 183, "build_mp285_connect": 184, "stage_synthet": [185, 186], "syntheticstag": 186, "stage_tl_kcube_inerti": [187, 188, 189], "tlkimstag": 188, "build_tlkimstage_connect": 189, "zoom": [190, 191, 192, 193, 194, 324, 326], "zoom_bas": [191, 192], "zoombas": 192, "zoom_synthet": [193, 194], "syntheticzoom": 194, "dummi": [195, 196, 197, 198, 199], "dummycontrol": 196, "dummydevic": 197, "dummymicroscop": 198, "dummymodel": 199, "featur": [200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 317, 321], "auto_tile_scan": [201, 202], "calculatefocusrang": 202, "autofocu": [203, 204, 205], "power_t": 205, "common_featur": [206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216], "changeresolut": 207, "conproacquisit": 208, "findtissuesimple2d": 209, "loopbycount": 210, "movetonextpositioninmultipostiont": 211, "preparenextchannel": 212, "snap": 213, "stackpaus": 214, "waittocontinu": 215, "zstackacquisit": 216, "constant_velocity_acquisit": [217, 218], "constantvelocityacquisit": 218, "dummy_detect": [219, 220], "feature_contain": [221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "contain": [222, 317], "datacontain": 223, "datanod": 224, "signalcontain": 225, "signalnod": 226, "treenod": 227, "dummy_tru": 228, "dummy_func": 229, "get_registered_func": 230, "load_featur": 231, "feature_related_funct": [232, 233, 234], "convert_feature_list_to_str": 233, "convert_str_to_feature_list": 234, "image_writ": [235, 236], "imagewrit": 236, "restful_featur": [237, 238, 239], "ilastiksegment": 238, "prepare_servic": 239, "volume_search": [240, 241, 242], "volumesearch": 241, "draw_box": 242, "metadata_sourc": [243, 244, 245, 246, 247, 248, 249, 250], "bdv_metadata": [244, 245], "bigdataviewermetadata": 245, "metadata": [246, 247, 248], "xmlmetadata": 248, "ome_tiff_metadata": [249, 250], "ometiffmetadata": 250, "microscop": [251, 252, 316, 322, 324], "waveform": [255, 256, 257, 258, 259, 260, 261, 262, 263, 324], "camera_exposur": 256, "dc_valu": 257, "remote_focus_ramp": 258, "sawtooth": 259, "sine_wav": 260, "single_puls": 261, "smooth_waveform": 262, "squar": 263, "tool": [264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309], "beam": [265, 266, 267, 268], "fit_gaussian_beam_error": 266, "fit_gaussian_beam_ms": 267, "gaussian_beam": 268, "common_dict_tool": [269, 270], "update_stage_dict": 270, "common_funct": [271, 272, 273, 274, 275, 276], "variablewithlock": 272, "build_ref_nam": 273, "combine_func": 274, "copy_proxy_object": 275, "load_module_from_fil": 276, "decor": [277, 278, 279], "featurelist": 278, "function_tim": 279, "file_funct": [280, 281, 282, 283, 284], "create_save_path": 281, "delete_fold": 282, "load_yaml_fil": 283, "save_yaml_fil": 284, "imag": [285, 286, 287], "create_arrow_imag": 286, "text_arrai": 287, "image_load": [288, 289], "lazytiff": 289, "main_funct": [290, 291, 292, 293], "create_pars": 291, "evaluate_parser_input_argu": 292, "identify_gpu": 293, "multipos_table_tool": [294, 295, 296, 297, 298], "calc_num_til": 295, "compute_tiles_from_bounding_box": 296, "sign": 297, "update_t": 298, "project_stat": [299, 300], "countlin": 300, "sdf": [301, 302, 303, 304], "box": 302, "sphere": 303, "volume_from_sdf": 304, "waveform_template_func": [305, 306], "get_waveform_template_paramet": 306, "xml_tool": [307, 308, 309], "dict_to_xml": 308, "parse_xml": 309, "view": [310, 311, 312], "main_window_cont": 311, "popup": 312, "refer": 315, "configur": [316, 324], "yaml": 316, "hardwar": [316, 319, 324, 326], "section": [316, 324], "gui": [316, 324], "channel": 316, "stack": 316, "acquisit": [316, 326], "timepoint": 316, "exampl": 316, "The": 317, "write": 317, "custom": 317, "contribut": [318, 320], "guidelin": 318, "gener": 318, "principl": 318, "code": 318, "style": 318, "dictionari": 318, "pars": 318, "unit": [318, 319], "test": 318, "develop": 318, "mac": 318, "ad": [319, 321], "new": [319, 321], "scientif": 319, "how": 319, "add": 319, "implement": 322, "multiscal": 322, "upright": 322, "ct": 322, "v2": 322, "opm": 322, "autonom": 323, "softwar": [323, 324, 325], "light": 323, "microscopi": 323, "project": 323, "philosophi": 323, "content": 323, "author": 323, "index": 323, "search": 323, "file": 324, "remot": 324, "focu": 324, "filter": [324, 326], "wheel": [324, 326], "ax": 324, "definit": 324, "constant": 324, "other": 324, "templat": 324, "rest": 324, "instal": 325, "download": 325, "git": 325, "setup": 325, "your": 325, "python": 325, "environ": 325, "gpu": 325, "depend": 325, "troubleshoot": 325, "support": 326, "data": 326, "card": 326, "ni": 326, "pcie": 326, "6738": 326, "pxi": 326, "6259": 326, "hamamatsu": 326, "flash": 326, "4": 326, "0": 326, "fusion": 326, "lightn": 326, "photometr": 326, "iri": 326, "15": 326, "voicecoil": 326, "equip": 326, "solut": 326, "thorlab": 326, "blink": 326, "asi": 326, "tiger": 326, "sutter": 326, "physik": 326, "instrument": 326, "analog": 326, "piezo": 326, "etc": 326, "deform": 326, "mirror": 326, "imagin": 326, "optic": 326, "galvanomet": 326, "cambridg": 326, "technologi": 326, "novanta": 326, "scannermax": 326, "mechan": 326, "user": 327, "guid": 327}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"aslm.config": [[0, "module-aslm.config"]], "aslm.config.config": [[1, "module-aslm.config.config"]], "aslm.config.config.build_nested_dict": [[2, "aslm-config-config-build-nested-dict"]], "aslm.config.config.get_aslm_path": [[3, "aslm-config-config-get-aslm-path"]], "aslm.config.config.get_configuration_paths": [[4, "aslm-config-config-get-configuration-paths"]], "aslm.config.config.load_configs": [[5, "aslm-config-config-load-configs"]], "aslm.config.config.update_config_dict": [[6, "aslm-config-config-update-config-dict"]], "aslm.config.config.verify_configuration": [[7, "aslm-config-config-verify-configuration"]], "aslm.controller": [[8, "module-aslm.controller"]], "aslm.controller.configuration_controller": [[9, "module-aslm.controller.configuration_controller"]], "aslm.controller.configuration_controller.ConfigurationController": [[10, "aslm-controller-configuration-controller-configurationcontroller"]], "aslm.controller.thread_pool": [[11, "module-aslm.controller.thread_pool"]], "aslm.controller.thread_pool.SelfLockThread": [[12, "aslm-controller-thread-pool-selflockthread"]], "aslm.controller.thread_pool.SynchronizedThreadPool": [[13, "aslm-controller-thread-pool-synchronizedthreadpool"]], "aslm.controller.thread_pool.ThreadWaitlist": [[14, "aslm-controller-thread-pool-threadwaitlist"]], "aslm.model": [[15, "module-aslm.model"]], "aslm.model.analysis": [[16, "module-aslm.model.analysis"]], "aslm.model.analysis.boundary_detect": [[17, "module-aslm.model.analysis.boundary_detect"]], "aslm.model.analysis.boundary_detect.binary_detect": [[18, "aslm-model-analysis-boundary-detect-binary-detect"]], "aslm.model.analysis.boundary_detect.find_tissue_boundary_2d": [[19, "aslm-model-analysis-boundary-detect-find-tissue-boundary-2d"]], "aslm.model.analysis.boundary_detect.has_tissue": [[20, "aslm-model-analysis-boundary-detect-has-tissue"]], "aslm.model.analysis.boundary_detect.map_boundary": [[21, "aslm-model-analysis-boundary-detect-map-boundary"]], "aslm.model.analysis.camera": [[22, "module-aslm.model.analysis.camera"]], "aslm.model.analysis.camera.compute_flatfield_map": [[23, "aslm-model-analysis-camera-compute-flatfield-map"]], "aslm.model.analysis.camera.compute_noise_sigma": [[24, "aslm-model-analysis-camera-compute-noise-sigma"]], "aslm.model.analysis.camera.compute_scmos_offset_and_variance_map": [[25, "aslm-model-analysis-camera-compute-scmos-offset-and-variance-map"]], "aslm.model.analysis.camera.compute_signal_to_noise": [[26, "aslm-model-analysis-camera-compute-signal-to-noise"]], "aslm.model.analysis.detection": [[27, "module-aslm.model.analysis.detection"]], "aslm.model.analysis.detection.add_median_border": [[28, "aslm-model-analysis-detection-add-median-border"]], "aslm.model.analysis.detection.combine_images": [[29, "aslm-model-analysis-detection-combine-images"]], "aslm.model.analysis.detection.log_detection": [[30, "aslm-model-analysis-detection-log-detection"]], "aslm.model.analysis.detection.make_inside_image": [[31, "aslm-model-analysis-detection-make-inside-image"]], "aslm.model.analysis.detection.make_normalized_image": [[32, "aslm-model-analysis-detection-make-normalized-image"]], "aslm.model.analysis.detection.make_sphere_3D": [[33, "aslm-model-analysis-detection-make-sphere-3d"]], "aslm.model.analysis.detection.multiscale_surface_filter_3D": [[34, "aslm-model-analysis-detection-multiscale-surface-filter-3d"]], "aslm.model.analysis.detection.surface_filter_gauss_3D": [[35, "aslm-model-analysis-detection-surface-filter-gauss-3d"]], "aslm.model.analysis.detection.three_level_segmentation": [[36, "aslm-model-analysis-detection-three-level-segmentation"]], "aslm.model.analysis.image_contrast": [[37, "module-aslm.model.analysis.image_contrast"]], "aslm.model.analysis.image_contrast.estimate_and_correct_flatfield": [[38, "aslm-model-analysis-image-contrast-estimate-and-correct-flatfield"]], "aslm.model.analysis.image_contrast.estimate_image_resolution": [[39, "aslm-model-analysis-image-contrast-estimate-image-resolution"]], "aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy": [[40, "aslm-model-analysis-image-contrast-fast-normalized-dct-shannon-entropy"]], "aslm.model.analysis.image_contrast.image_intensity": [[41, "aslm-model-analysis-image-contrast-image-intensity"]], "aslm.model.analysis.image_contrast.normalized_dct_shannon_entropy": [[42, "aslm-model-analysis-image-contrast-normalized-dct-shannon-entropy"]], "aslm.model.analysis.image_decorrelation": [[43, "module-aslm.model.analysis.image_decorrelation"]], "aslm.model.analysis.image_decorrelation.apodize_image": [[44, "aslm-model-analysis-image-decorrelation-apodize-image"]], "aslm.model.analysis.image_decorrelation.get_correlation_coefficient": [[45, "aslm-model-analysis-image-decorrelation-get-correlation-coefficient"]], "aslm.model.analysis.image_decorrelation.get_decorrelation_local_maxima": [[46, "aslm-model-analysis-image-decorrelation-get-decorrelation-local-maxima"]], "aslm.model.analysis.image_decorrelation.get_image_decorrelation": [[47, "aslm-model-analysis-image-decorrelation-get-image-decorrelation"]], "aslm.model.analysis.image_decorrelation.get_radial_average": [[48, "aslm-model-analysis-image-decorrelation-get-radial-average"]], "aslm.model.analysis.image_decorrelation.image_to_polar": [[49, "aslm-model-analysis-image-decorrelation-image-to-polar"]], "aslm.model.analysis.image_decorrelation.linear_map": [[50, "aslm-model-analysis-image-decorrelation-linear-map"]], "aslm.model.analysis.image_decorrelation.main_image_decorr": [[51, "aslm-model-analysis-image-decorrelation-main-image-decorr"]], "aslm.model.analysis.image_transform": [[52, "module-aslm.model.analysis.image_transform"]], "aslm.model.analysis.image_transform.deskew_image": [[53, "aslm-model-analysis-image-transform-deskew-image"]], "aslm.model.analysis.image_transform.initiate_gpu": [[54, "aslm-model-analysis-image-transform-initiate-gpu"]], "aslm.model.analysis.spectral_unmixing": [[55, "module-aslm.model.analysis.spectral_unmixing"]], "aslm.model.analysis.spectral_unmixing.to_do": [[56, "aslm-model-analysis-spectral-unmixing-to-do"]], "aslm.model.concurrency": [[57, "module-aslm.model.concurrency"]], "aslm.model.concurrency.concurrency_tools": [[58, "module-aslm.model.concurrency.concurrency_tools"]], "aslm.model.concurrency.concurrency_tools.CustodyThread": [[59, "aslm-model-concurrency-concurrency-tools-custodythread"]], "aslm.model.concurrency.concurrency_tools.FancyThread": [[60, "aslm-model-concurrency-concurrency-tools-fancythread"]], "aslm.model.concurrency.concurrency_tools.MyTestClass": [[61, "aslm-model-concurrency-concurrency-tools-mytestclass"]], "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess": [[62, "aslm-model-concurrency-concurrency-tools-objectinsubprocess"]], "aslm.model.concurrency.concurrency_tools.PoliteThread": [[63, "aslm-model-concurrency-concurrency-tools-politethread"]], "aslm.model.concurrency.concurrency_tools.ResultThread": [[64, "aslm-model-concurrency-concurrency-tools-resultthread"]], "aslm.model.concurrency.concurrency_tools.SharedNDArray": [[65, "aslm-model-concurrency-concurrency-tools-sharedndarray"]], "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess": [[66, "aslm-model-concurrency-concurrency-tools-testobjectinsubprocess"]], "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread": [[67, "aslm-model-concurrency-concurrency-tools-testresultthreadandcustodythread"]], "aslm.model.concurrency.concurrency_tools.TestSharedNDArray": [[68, "aslm-model-concurrency-concurrency-tools-testsharedndarray"]], "aslm.model.concurrency.proxy_objects": [[69, "module-aslm.model.concurrency.proxy_objects"]], "aslm.model.concurrency.proxy_objects.ProxyManager": [[70, "aslm-model-concurrency-proxy-objects-proxymanager"]], "aslm.model.concurrency.proxy_objects.ProxyObject": [[71, "aslm-model-concurrency-proxy-objects-proxyobject"]], "aslm.model.concurrency.proxy_objects.launch_custody_thread": [[72, "aslm-model-concurrency-proxy-objects-launch-custody-thread"]], "aslm.model.concurrency.proxy_objects.launch_thread": [[73, "aslm-model-concurrency-proxy-objects-launch-thread"]], "aslm.model.concurrency.write_parameters": [[74, "module-aslm.model.concurrency.write_parameters"]], "aslm.model.concurrency.write_parameters.write_Params": [[75, "aslm-model-concurrency-write-parameters-write-params"]], "aslm.model.data_sources": [[76, "module-aslm.model.data_sources"]], "aslm.model.data_sources.bdv_data_source": [[77, "module-aslm.model.data_sources.bdv_data_source"]], "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource": [[78, "aslm-model-data-sources-bdv-data-source-bigdataviewerdatasource"]], "aslm.model.data_sources.data_source": [[79, "module-aslm.model.data_sources.data_source"]], "aslm.model.data_sources.data_source.DataSource": [[80, "aslm-model-data-sources-data-source-datasource"]], "aslm.model.data_sources.get_data_source": [[81, "aslm-model-data-sources-get-data-source"]], "aslm.model.data_sources.tiff_data_source": [[82, "module-aslm.model.data_sources.tiff_data_source"]], "aslm.model.data_sources.tiff_data_source.TiffDataSource": [[83, "aslm-model-data-sources-tiff-data-source-tiffdatasource"]], "aslm.model.data_sources.zarr_data_source": [[84, "module-aslm.model.data_sources.zarr_data_source"]], "aslm.model.data_sources.zarr_data_source.ZarrDataSource": [[85, "aslm-model-data-sources-zarr-data-source-zarrdatasource"]], "aslm.model.device_startup_functions": [[86, "module-aslm.model.device_startup_functions"]], "aslm.model.device_startup_functions.DummyDeviceConnection": [[87, "aslm-model-device-startup-functions-dummydeviceconnection"]], "aslm.model.device_startup_functions.auto_redial": [[88, "aslm-model-device-startup-functions-auto-redial"]], "aslm.model.device_startup_functions.device_not_found": [[89, "aslm-model-device-startup-functions-device-not-found"]], "aslm.model.device_startup_functions.load_camera_connection": [[90, "aslm-model-device-startup-functions-load-camera-connection"]], "aslm.model.device_startup_functions.load_devices": [[91, "aslm-model-device-startup-functions-load-devices"]], "aslm.model.device_startup_functions.load_filter_wheel_connection": [[92, "aslm-model-device-startup-functions-load-filter-wheel-connection"]], "aslm.model.device_startup_functions.load_stages": [[93, "aslm-model-device-startup-functions-load-stages"]], "aslm.model.device_startup_functions.load_zoom_connection": [[94, "aslm-model-device-startup-functions-load-zoom-connection"]], "aslm.model.device_startup_functions.start_camera": [[95, "aslm-model-device-startup-functions-start-camera"]], "aslm.model.device_startup_functions.start_daq": [[96, "aslm-model-device-startup-functions-start-daq"]], "aslm.model.device_startup_functions.start_filter_wheel": [[97, "aslm-model-device-startup-functions-start-filter-wheel"]], "aslm.model.device_startup_functions.start_galvo": [[98, "aslm-model-device-startup-functions-start-galvo"]], "aslm.model.device_startup_functions.start_lasers": [[99, "aslm-model-device-startup-functions-start-lasers"]], "aslm.model.device_startup_functions.start_remote_focus_device": [[100, "aslm-model-device-startup-functions-start-remote-focus-device"]], "aslm.model.device_startup_functions.start_shutter": [[101, "aslm-model-device-startup-functions-start-shutter"]], "aslm.model.device_startup_functions.start_stage": [[102, "aslm-model-device-startup-functions-start-stage"]], "aslm.model.device_startup_functions.start_zoom": [[103, "aslm-model-device-startup-functions-start-zoom"]], "aslm.model.devices": [[104, "module-aslm.model.devices"]], "aslm.model.devices.APIs": [[105, "module-aslm.model.devices.APIs"]], "aslm.model.devices.APIs.coherent": [[106, "module-aslm.model.devices.APIs.coherent"]], "aslm.model.devices.APIs.dynamixel": [[107, "module-aslm.model.devices.APIs.dynamixel"]], "aslm.model.devices.APIs.logitech": [[108, "module-aslm.model.devices.APIs.logitech"]], "aslm.model.devices.APIs.omicron": [[109, "module-aslm.model.devices.APIs.omicron"]], "aslm.model.devices.camera": [[110, "module-aslm.model.devices.camera"]], "aslm.model.devices.camera.camera_base": [[111, "module-aslm.model.devices.camera.camera_base"]], "aslm.model.devices.camera.camera_base.CameraBase": [[112, "aslm-model-devices-camera-camera-base-camerabase"]], "aslm.model.devices.camera.camera_hamamatsu": [[113, "module-aslm.model.devices.camera.camera_hamamatsu"]], "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca": [[114, "aslm-model-devices-camera-camera-hamamatsu-hamamatsuorca"]], "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning": [[115, "aslm-model-devices-camera-camera-hamamatsu-hamamatsuorcalightning"]], "aslm.model.devices.camera.camera_photometrics": [[116, "module-aslm.model.devices.camera.camera_photometrics"]], "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix": [[117, "aslm-model-devices-camera-camera-photometrics-photometricskinetix"]], "aslm.model.devices.camera.camera_synthetic": [[118, "module-aslm.model.devices.camera.camera_synthetic"]], "aslm.model.devices.camera.camera_synthetic.SyntheticCamera": [[119, "aslm-model-devices-camera-camera-synthetic-syntheticcamera"]], "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController": [[120, "aslm-model-devices-camera-camera-synthetic-syntheticcameracontroller"]], "aslm.model.devices.daq": [[121, "module-aslm.model.devices.daq"]], "aslm.model.devices.daq.daq_base": [[122, "module-aslm.model.devices.daq.daq_base"]], "aslm.model.devices.daq.daq_base.DAQBase": [[123, "aslm-model-devices-daq-daq-base-daqbase"]], "aslm.model.devices.daq.daq_synthetic": [[124, "module-aslm.model.devices.daq.daq_synthetic"]], "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ": [[125, "aslm-model-devices-daq-daq-synthetic-syntheticdaq"]], "aslm.model.devices.filter_wheel": [[126, "module-aslm.model.devices.filter_wheel"]], "aslm.model.devices.filter_wheel.filter_wheel_asi": [[127, "module-aslm.model.devices.filter_wheel.filter_wheel_asi"]], "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel": [[128, "aslm-model-devices-filter-wheel-filter-wheel-asi-asifilterwheel"]], "aslm.model.devices.filter_wheel.filter_wheel_asi.build_filter_wheel_connection": [[129, "aslm-model-devices-filter-wheel-filter-wheel-asi-build-filter-wheel-connection"]], "aslm.model.devices.filter_wheel.filter_wheel_base": [[130, "module-aslm.model.devices.filter_wheel.filter_wheel_base"]], "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase": [[131, "aslm-model-devices-filter-wheel-filter-wheel-base-filterwheelbase"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter": [[132, "module-aslm.model.devices.filter_wheel.filter_wheel_sutter"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel": [[133, "aslm-model-devices-filter-wheel-filter-wheel-sutter-sutterfilterwheel"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection": [[134, "aslm-model-devices-filter-wheel-filter-wheel-sutter-build-filter-wheel-connection"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic": [[135, "module-aslm.model.devices.filter_wheel.filter_wheel_synthetic"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel": [[136, "aslm-model-devices-filter-wheel-filter-wheel-synthetic-syntheticfilterwheel"]], "aslm.model.devices.galvo": [[137, "module-aslm.model.devices.galvo"]], "aslm.model.devices.galvo.galvo_base": [[138, "module-aslm.model.devices.galvo.galvo_base"]], "aslm.model.devices.galvo.galvo_base.GalvoBase": [[139, "aslm-model-devices-galvo-galvo-base-galvobase"]], "aslm.model.devices.galvo.galvo_synthetic": [[140, "module-aslm.model.devices.galvo.galvo_synthetic"]], "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo": [[141, "aslm-model-devices-galvo-galvo-synthetic-syntheticgalvo"]], "aslm.model.devices.joystick": [[142, "module-aslm.model.devices.joystick"]], "aslm.model.devices.joystick.joystick_base": [[143, "module-aslm.model.devices.joystick.joystick_base"]], "aslm.model.devices.joystick.joystick_base.JoystickBase": [[144, "aslm-model-devices-joystick-joystick-base-joystickbase"]], "aslm.model.devices.joystick.joystick_synthetic": [[145, "module-aslm.model.devices.joystick.joystick_synthetic"]], "aslm.model.devices.joystick.joystick_synthetic.SyntheticJoystick": [[146, "aslm-model-devices-joystick-joystick-synthetic-syntheticjoystick"]], "aslm.model.devices.lasers": [[147, "module-aslm.model.devices.lasers"]], "aslm.model.devices.lasers.laser_base": [[148, "module-aslm.model.devices.lasers.laser_base"]], "aslm.model.devices.lasers.laser_base.LaserBase": [[149, "aslm-model-devices-lasers-laser-base-laserbase"]], "aslm.model.devices.lasers.laser_synthetic": [[150, "module-aslm.model.devices.lasers.laser_synthetic"]], "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser": [[151, "aslm-model-devices-lasers-laser-synthetic-syntheticlaser"]], "aslm.model.devices.lasers.laser_trigger_base": [[152, "module-aslm.model.devices.lasers.laser_trigger_base"]], "aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase": [[153, "aslm-model-devices-lasers-laser-trigger-base-lasertriggerbase"]], "aslm.model.devices.lasers.laser_trigger_synthetic": [[154, "module-aslm.model.devices.lasers.laser_trigger_synthetic"]], "aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers": [[155, "aslm-model-devices-lasers-laser-trigger-synthetic-syntheticlasertriggers"]], "aslm.model.devices.objectives": [[156, "module-aslm.model.devices.objectives"]], "aslm.model.devices.objectives.Objective": [[157, "aslm-model-devices-objectives-objective"]], "aslm.model.devices.remote_focus": [[158, "module-aslm.model.devices.remote_focus"]], "aslm.model.devices.remote_focus.remote_focus_base": [[159, "module-aslm.model.devices.remote_focus.remote_focus_base"]], "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase": [[160, "aslm-model-devices-remote-focus-remote-focus-base-remotefocusbase"]], "aslm.model.devices.remote_focus.remote_focus_synthetic": [[161, "module-aslm.model.devices.remote_focus.remote_focus_synthetic"]], "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus": [[162, "aslm-model-devices-remote-focus-remote-focus-synthetic-syntheticremotefocus"]], "aslm.model.devices.shutter": [[163, "module-aslm.model.devices.shutter"]], "aslm.model.devices.shutter.laser_shutter_base": [[164, "module-aslm.model.devices.shutter.laser_shutter_base"]], "aslm.model.devices.shutter.laser_shutter_base.ShutterBase": [[165, "aslm-model-devices-shutter-laser-shutter-base-shutterbase"]], "aslm.model.devices.shutter.laser_shutter_synthetic": [[166, "module-aslm.model.devices.shutter.laser_shutter_synthetic"]], "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter": [[167, "aslm-model-devices-shutter-laser-shutter-synthetic-syntheticshutter"]], "aslm.model.devices.stages": [[168, "module-aslm.model.devices.stages"]], "aslm.model.devices.stages.stage_asi": [[169, "module-aslm.model.devices.stages.stage_asi"]], "aslm.model.devices.stages.stage_asi.ASIStage": [[170, "aslm-model-devices-stages-stage-asi-asistage"]], "aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection": [[171, "aslm-model-devices-stages-stage-asi-build-asi-stage-connection"]], "aslm.model.devices.stages.stage_base": [[172, "module-aslm.model.devices.stages.stage_base"]], "aslm.model.devices.stages.stage_base.StageBase": [[173, "aslm-model-devices-stages-stage-base-stagebase"]], "aslm.model.devices.stages.stage_galvo": [[174, "module-aslm.model.devices.stages.stage_galvo"]], "aslm.model.devices.stages.stage_galvo.GalvoNIStage": [[175, "aslm-model-devices-stages-stage-galvo-galvonistage"]], "aslm.model.devices.stages.stage_mcl": [[176, "module-aslm.model.devices.stages.stage_mcl"]], "aslm.model.devices.stages.stage_mcl.MCLStage": [[177, "aslm-model-devices-stages-stage-mcl-mclstage"]], "aslm.model.devices.stages.stage_mcl.build_MCLStage_connection": [[178, "aslm-model-devices-stages-stage-mcl-build-mclstage-connection"]], "aslm.model.devices.stages.stage_pi": [[179, "module-aslm.model.devices.stages.stage_pi"]], "aslm.model.devices.stages.stage_pi.PIStage": [[180, "aslm-model-devices-stages-stage-pi-pistage"]], "aslm.model.devices.stages.stage_pi.build_PIStage_connection": [[181, "aslm-model-devices-stages-stage-pi-build-pistage-connection"]], "aslm.model.devices.stages.stage_sutter": [[182, "module-aslm.model.devices.stages.stage_sutter"]], "aslm.model.devices.stages.stage_sutter.SutterStage": [[183, "aslm-model-devices-stages-stage-sutter-sutterstage"]], "aslm.model.devices.stages.stage_sutter.build_MP285_connection": [[184, "aslm-model-devices-stages-stage-sutter-build-mp285-connection"]], "aslm.model.devices.stages.stage_synthetic": [[185, "module-aslm.model.devices.stages.stage_synthetic"]], "aslm.model.devices.stages.stage_synthetic.SyntheticStage": [[186, "aslm-model-devices-stages-stage-synthetic-syntheticstage"]], "aslm.model.devices.stages.stage_tl_kcube_inertial": [[187, "module-aslm.model.devices.stages.stage_tl_kcube_inertial"]], "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage": [[188, "aslm-model-devices-stages-stage-tl-kcube-inertial-tlkimstage"]], "aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection": [[189, "aslm-model-devices-stages-stage-tl-kcube-inertial-build-tlkimstage-connection"]], "aslm.model.devices.zoom": [[190, "module-aslm.model.devices.zoom"]], "aslm.model.devices.zoom.zoom_base": [[191, "module-aslm.model.devices.zoom.zoom_base"]], "aslm.model.devices.zoom.zoom_base.ZoomBase": [[192, "aslm-model-devices-zoom-zoom-base-zoombase"]], "aslm.model.devices.zoom.zoom_synthetic": [[193, "module-aslm.model.devices.zoom.zoom_synthetic"]], "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom": [[194, "aslm-model-devices-zoom-zoom-synthetic-syntheticzoom"]], "aslm.model.dummy": [[195, "module-aslm.model.dummy"]], "aslm.model.dummy.DummyController": [[196, "aslm-model-dummy-dummycontroller"]], "aslm.model.dummy.DummyDevice": [[197, "aslm-model-dummy-dummydevice"]], "aslm.model.dummy.DummyMicroscope": [[198, "aslm-model-dummy-dummymicroscope"]], "aslm.model.dummy.DummyModel": [[199, "aslm-model-dummy-dummymodel"]], "aslm.model.features": [[200, "module-aslm.model.features"]], "aslm.model.features.auto_tile_scan": [[201, "module-aslm.model.features.auto_tile_scan"]], "aslm.model.features.auto_tile_scan.CalculateFocusRange": [[202, "aslm-model-features-auto-tile-scan-calculatefocusrange"]], "aslm.model.features.autofocus": [[203, "module-aslm.model.features.autofocus"]], "aslm.model.features.autofocus.Autofocus": [[204, "aslm-model-features-autofocus-autofocus"]], "aslm.model.features.autofocus.power_tent": [[205, "aslm-model-features-autofocus-power-tent"]], "aslm.model.features.common_features": [[206, "module-aslm.model.features.common_features"]], "aslm.model.features.common_features.ChangeResolution": [[207, "aslm-model-features-common-features-changeresolution"]], "aslm.model.features.common_features.ConProAcquisition": [[208, "aslm-model-features-common-features-conproacquisition"]], "aslm.model.features.common_features.FindTissueSimple2D": [[209, "aslm-model-features-common-features-findtissuesimple2d"]], "aslm.model.features.common_features.LoopByCount": [[210, "aslm-model-features-common-features-loopbycount"]], "aslm.model.features.common_features.MoveToNextPositionInMultiPostionTable": [[211, "aslm-model-features-common-features-movetonextpositioninmultipostiontable"]], "aslm.model.features.common_features.PrepareNextChannel": [[212, "aslm-model-features-common-features-preparenextchannel"]], "aslm.model.features.common_features.Snap": [[213, "aslm-model-features-common-features-snap"]], "aslm.model.features.common_features.StackPause": [[214, "aslm-model-features-common-features-stackpause"]], "aslm.model.features.common_features.WaitToContinue": [[215, "aslm-model-features-common-features-waittocontinue"]], "aslm.model.features.common_features.ZStackAcquisition": [[216, "aslm-model-features-common-features-zstackacquisition"]], "aslm.model.features.constant_velocity_acquisition": [[217, "module-aslm.model.features.constant_velocity_acquisition"]], "aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition": [[218, "aslm-model-features-constant-velocity-acquisition-constantvelocityacquisition"]], "aslm.model.features.dummy_detective": [[219, "module-aslm.model.features.dummy_detective"]], "aslm.model.features.dummy_detective.Dummy_Detective": [[220, "aslm-model-features-dummy-detective-dummy-detective"]], "aslm.model.features.feature_container": [[221, "module-aslm.model.features.feature_container"]], "aslm.model.features.feature_container.Container": [[222, "aslm-model-features-feature-container-container"]], "aslm.model.features.feature_container.DataContainer": [[223, "aslm-model-features-feature-container-datacontainer"]], "aslm.model.features.feature_container.DataNode": [[224, "aslm-model-features-feature-container-datanode"]], "aslm.model.features.feature_container.SignalContainer": [[225, "aslm-model-features-feature-container-signalcontainer"]], "aslm.model.features.feature_container.SignalNode": [[226, "aslm-model-features-feature-container-signalnode"]], "aslm.model.features.feature_container.TreeNode": [[227, "aslm-model-features-feature-container-treenode"]], "aslm.model.features.feature_container.dummy_True": [[228, "aslm-model-features-feature-container-dummy-true"]], "aslm.model.features.feature_container.dummy_func": [[229, "aslm-model-features-feature-container-dummy-func"]], "aslm.model.features.feature_container.get_registered_funcs": [[230, "aslm-model-features-feature-container-get-registered-funcs"]], "aslm.model.features.feature_container.load_features": [[231, "aslm-model-features-feature-container-load-features"]], "aslm.model.features.feature_related_functions": [[232, "module-aslm.model.features.feature_related_functions"]], "aslm.model.features.feature_related_functions.convert_feature_list_to_str": [[233, "aslm-model-features-feature-related-functions-convert-feature-list-to-str"]], "aslm.model.features.feature_related_functions.convert_str_to_feature_list": [[234, "aslm-model-features-feature-related-functions-convert-str-to-feature-list"]], "aslm.model.features.image_writer": [[235, "module-aslm.model.features.image_writer"]], "aslm.model.features.image_writer.ImageWriter": [[236, "aslm-model-features-image-writer-imagewriter"]], "aslm.model.features.restful_features": [[237, "module-aslm.model.features.restful_features"]], "aslm.model.features.restful_features.IlastikSegmentation": [[238, "aslm-model-features-restful-features-ilastiksegmentation"]], "aslm.model.features.restful_features.prepare_service": [[239, "aslm-model-features-restful-features-prepare-service"]], "aslm.model.features.volume_search": [[240, "module-aslm.model.features.volume_search"]], "aslm.model.features.volume_search.VolumeSearch": [[241, "aslm-model-features-volume-search-volumesearch"]], "aslm.model.features.volume_search.draw_box": [[242, "aslm-model-features-volume-search-draw-box"]], "aslm.model.metadata_sources": [[243, "module-aslm.model.metadata_sources"]], "aslm.model.metadata_sources.bdv_metadata": [[244, "module-aslm.model.metadata_sources.bdv_metadata"]], "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata": [[245, "aslm-model-metadata-sources-bdv-metadata-bigdataviewermetadata"]], "aslm.model.metadata_sources.metadata": [[246, "module-aslm.model.metadata_sources.metadata"]], "aslm.model.metadata_sources.metadata.Metadata": [[247, "aslm-model-metadata-sources-metadata-metadata"]], "aslm.model.metadata_sources.metadata.XMLMetadata": [[248, "aslm-model-metadata-sources-metadata-xmlmetadata"]], "aslm.model.metadata_sources.ome_tiff_metadata": [[249, "module-aslm.model.metadata_sources.ome_tiff_metadata"]], "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata": [[250, "aslm-model-metadata-sources-ome-tiff-metadata-ometiffmetadata"]], "aslm.model.microscope": [[251, "module-aslm.model.microscope"]], "aslm.model.microscope.Microscope": [[252, "aslm-model-microscope-microscope"]], "aslm.model.model": [[253, "module-aslm.model.model"]], "aslm.model.model.Model": [[254, "aslm-model-model-model"]], "aslm.model.waveforms": [[255, "module-aslm.model.waveforms"]], "aslm.model.waveforms.camera_exposure": [[256, "aslm-model-waveforms-camera-exposure"]], "aslm.model.waveforms.dc_value": [[257, "aslm-model-waveforms-dc-value"]], "aslm.model.waveforms.remote_focus_ramp": [[258, "aslm-model-waveforms-remote-focus-ramp"]], "aslm.model.waveforms.sawtooth": [[259, "aslm-model-waveforms-sawtooth"]], "aslm.model.waveforms.sine_wave": [[260, "aslm-model-waveforms-sine-wave"]], "aslm.model.waveforms.single_pulse": [[261, "aslm-model-waveforms-single-pulse"]], "aslm.model.waveforms.smooth_waveform": [[262, "aslm-model-waveforms-smooth-waveform"]], "aslm.model.waveforms.square": [[263, "aslm-model-waveforms-square"]], "aslm.tools": [[264, "module-aslm.tools"]], "aslm.tools.beams": [[265, "module-aslm.tools.beams"]], "aslm.tools.beams.fit_gaussian_beam_error": [[266, "aslm-tools-beams-fit-gaussian-beam-error"]], "aslm.tools.beams.fit_gaussian_beam_mse": [[267, "aslm-tools-beams-fit-gaussian-beam-mse"]], "aslm.tools.beams.gaussian_beam": [[268, "aslm-tools-beams-gaussian-beam"]], "aslm.tools.common_dict_tools": [[269, "module-aslm.tools.common_dict_tools"]], "aslm.tools.common_dict_tools.update_stage_dict": [[270, "aslm-tools-common-dict-tools-update-stage-dict"]], "aslm.tools.common_functions": [[271, "module-aslm.tools.common_functions"]], "aslm.tools.common_functions.VariableWithLock": [[272, "aslm-tools-common-functions-variablewithlock"]], "aslm.tools.common_functions.build_ref_name": [[273, "aslm-tools-common-functions-build-ref-name"]], "aslm.tools.common_functions.combine_funcs": [[274, "aslm-tools-common-functions-combine-funcs"]], "aslm.tools.common_functions.copy_proxy_object": [[275, "aslm-tools-common-functions-copy-proxy-object"]], "aslm.tools.common_functions.load_module_from_file": [[276, "aslm-tools-common-functions-load-module-from-file"]], "aslm.tools.decorators": [[277, "module-aslm.tools.decorators"]], "aslm.tools.decorators.FeatureList": [[278, "aslm-tools-decorators-featurelist"]], "aslm.tools.decorators.function_timer": [[279, "aslm-tools-decorators-function-timer"]], "aslm.tools.file_functions": [[280, "module-aslm.tools.file_functions"]], "aslm.tools.file_functions.create_save_path": [[281, "aslm-tools-file-functions-create-save-path"]], "aslm.tools.file_functions.delete_folder": [[282, "aslm-tools-file-functions-delete-folder"]], "aslm.tools.file_functions.load_yaml_file": [[283, "aslm-tools-file-functions-load-yaml-file"]], "aslm.tools.file_functions.save_yaml_file": [[284, "aslm-tools-file-functions-save-yaml-file"]], "aslm.tools.image": [[285, "module-aslm.tools.image"]], "aslm.tools.image.create_arrow_image": [[286, "aslm-tools-image-create-arrow-image"]], "aslm.tools.image.text_array": [[287, "aslm-tools-image-text-array"]], "aslm.tools.image_loaders": [[288, "module-aslm.tools.image_loaders"]], "aslm.tools.image_loaders.LazyTiff": [[289, "aslm-tools-image-loaders-lazytiff"]], "aslm.tools.main_functions": [[290, "module-aslm.tools.main_functions"]], "aslm.tools.main_functions.create_parser": [[291, "aslm-tools-main-functions-create-parser"]], "aslm.tools.main_functions.evaluate_parser_input_arguments": [[292, "aslm-tools-main-functions-evaluate-parser-input-arguments"]], "aslm.tools.main_functions.identify_gpu": [[293, "aslm-tools-main-functions-identify-gpu"]], "aslm.tools.multipos_table_tools": [[294, "module-aslm.tools.multipos_table_tools"]], "aslm.tools.multipos_table_tools.calc_num_tiles": [[295, "aslm-tools-multipos-table-tools-calc-num-tiles"]], "aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box": [[296, "aslm-tools-multipos-table-tools-compute-tiles-from-bounding-box"]], "aslm.tools.multipos_table_tools.sign": [[297, "aslm-tools-multipos-table-tools-sign"]], "aslm.tools.multipos_table_tools.update_table": [[298, "aslm-tools-multipos-table-tools-update-table"]], "aslm.tools.project_stats": [[299, "module-aslm.tools.project_stats"]], "aslm.tools.project_stats.countlines": [[300, "aslm-tools-project-stats-countlines"]], "aslm.tools.sdf": [[301, "module-aslm.tools.sdf"]], "aslm.tools.sdf.box": [[302, "aslm-tools-sdf-box"]], "aslm.tools.sdf.sphere": [[303, "aslm-tools-sdf-sphere"]], "aslm.tools.sdf.volume_from_sdf": [[304, "aslm-tools-sdf-volume-from-sdf"]], "aslm.tools.waveform_template_funcs": [[305, "module-aslm.tools.waveform_template_funcs"]], "aslm.tools.waveform_template_funcs.get_waveform_template_parameters": [[306, "aslm-tools-waveform-template-funcs-get-waveform-template-parameters"]], "aslm.tools.xml_tools": [[307, "module-aslm.tools.xml_tools"]], "aslm.tools.xml_tools.dict_to_xml": [[308, "aslm-tools-xml-tools-dict-to-xml"]], "aslm.tools.xml_tools.parse_xml": [[309, "aslm-tools-xml-tools-parse-xml"]], "aslm.view": [[310, "module-aslm.view"]], "aslm.view.main_window_content": [[311, "module-aslm.view.main_window_content"]], "aslm.view.popups": [[312, "module-aslm.view.popups"]], "API Reference": [[315, "api-reference"]], "Configuring ASLM": [[316, "configuring-aslm"]], "Configuration.yaml": [[316, "configuration-yaml"]], "Hardware Section": [[316, "hardware-section"], [324, "hardware-section"]], "Microscope Section": [[316, "microscope-section"], [324, "microscope-section"]], "Configuring stages": [[316, "configuring-stages"]], "GUI Section": [[316, "gui-section"], [324, "gui-section"]], "Channels": [[316, "channels"]], "Stack Acquisition": [[316, "stack-acquisition"]], "Timepoint": [[316, "timepoint"]], "Example YAML Configuration": [[316, "example-yaml-configuration"]], "ASLM Feature Container": [[317, "aslm-feature-container"]], "The feature object": [[317, "the-feature-object"]], "Writing custom features": [[317, "writing-custom-features"]], "Contributing Guidelines": [[318, "contributing-guidelines"]], "General principles": [[318, "general-principles"]], "Coding style": [[318, "coding-style"]], "Dictionary Parsing": [[318, "dictionary-parsing"]], "Unit tests": [[318, "unit-tests"]], "Developing with a Mac": [[318, "developing-with-a-mac"]], "Adding New Hardware": [[319, "adding-new-hardware"]], "Scientific Units": [[319, "scientific-units"]], "How to Add New Hardware": [[319, "how-to-add-new-hardware"]], "Contributing to ASLM": [[320, "contributing-to-aslm"]], "Adding New Model Features": [[321, "adding-new-model-features"]], "Microscope Implementations": [[322, "microscope-implementations"]], "Multiscale Microscope": [[322, "multiscale-microscope"]], "Upright CT-ASLM-V2": [[322, "upright-ct-aslm-v2"]], "OPM-V2": [[322, "opm-v2"]], "Autonomous Software for Light Microscopy": [[323, "autonomous-software-for-light-microscopy"]], "Project Philosophy": [[323, "project-philosophy"]], "Contents": [[323, "contents"]], "Authors": [[323, "authors"]], "Index and search": [[323, "index-and-search"]], "Software Configuration": [[324, "software-configuration"]], "Configuration File": [[324, "configuration-file"]], "DAQ Section": [[324, "daq-section"]], "Camera Section": [[324, "camera-section"]], "Remote Focus Section": [[324, "remote-focus-section"]], "Galvo Section": [[324, "galvo-section"]], "Filter Wheel Section": [[324, "filter-wheel-section"]], "Stage Section": [[324, "stage-section"]], "Stage Axes Definition": [[324, "stage-axes-definition"]], "Zoom Section": [[324, "zoom-section"]], "Shutter Section": [[324, "shutter-section"]], "Laser Section": [[324, "laser-section"]], "Waveform Constants File": [[324, "waveform-constants-file"]], "Remote Constants Section": [[324, "remote-constants-section"]], "Galvo Constants Section": [[324, "galvo-constants-section"]], "Other Constants Section": [[324, "other-constants-section"]], "Waveform Templates File": [[324, "waveform-templates-file"]], "Rest API Configuration File": [[324, "rest-api-configuration-file"]], "Software Installation": [[325, "software-installation"]], "Download Git": [[325, "download-git"]], "Setup your Python Environment": [[325, "setup-your-python-environment"]], "GPU Dependencies": [[325, "gpu-dependencies"]], "Troubleshooting": [[325, "troubleshooting"]], "Supported Hardware": [[326, "supported-hardware"]], "Data Acquisition Card": [[326, "data-acquisition-card"]], "NI": [[326, "ni"]], "PCIe-6738": [[326, "pcie-6738"]], "PXI-6259": [[326, "pxi-6259"]], "Cameras": [[326, "cameras"]], "Hamamatsu Flash 4.0, Fusion, and Lightning": [[326, "hamamatsu-flash-4-0-fusion-and-lightning"]], "Photometrics Iris 15": [[326, "photometrics-iris-15"]], "Voicecoil": [[326, "voicecoil"]], "Equipment Solutions": [[326, "equipment-solutions"]], "Thorlabs BLINK": [[326, "thorlabs-blink"]], "Stages": [[326, "stages"]], "ASI Tiger Controller": [[326, "asi-tiger-controller"]], "Sutter": [[326, "sutter"], [326, "id1"]], "Physik Instrumente": [[326, "physik-instrumente"]], "Thorlabs": [[326, "thorlabs"], [326, "id2"]], "Analog Controlled (Galvo/Piezo/etc.)": [[326, "analog-controlled-galvo-piezo-etc"]], "Deformable Mirrors": [[326, "deformable-mirrors"]], "Imagine Optics": [[326, "imagine-optics"]], "Filter Wheels": [[326, "filter-wheels"]], "ASI": [[326, "asi"]], "Galvanometers": [[326, "galvanometers"]], "Cambridge Technologies/Novanta": [[326, "cambridge-technologies-novanta"]], "ScannerMAX": [[326, "scannermax"]], "Lasers": [[326, "lasers"]], "Coherent": [[326, "coherent"]], "Omicron": [[326, "omicron"]], "Shutters": [[326, "shutters"]], "Mechanical Zoom": [[326, "mechanical-zoom"]], "Dynamixel": [[326, "dynamixel"]], "User Guide": [[327, "user-guide"]]}, "indexentries": {"aslm.config": [[0, "module-aslm.config"]], "module": [[0, "module-aslm.config"], [1, "module-aslm.config.config"], [8, "module-aslm.controller"], [9, "module-aslm.controller.configuration_controller"], [11, "module-aslm.controller.thread_pool"], [15, "module-aslm.model"], [16, "module-aslm.model.analysis"], [17, "module-aslm.model.analysis.boundary_detect"], [22, "module-aslm.model.analysis.camera"], [27, "module-aslm.model.analysis.detection"], [37, "module-aslm.model.analysis.image_contrast"], [43, "module-aslm.model.analysis.image_decorrelation"], [52, "module-aslm.model.analysis.image_transform"], [55, "module-aslm.model.analysis.spectral_unmixing"], [57, "module-aslm.model.concurrency"], [58, "module-aslm.model.concurrency.concurrency_tools"], [69, "module-aslm.model.concurrency.proxy_objects"], [74, "module-aslm.model.concurrency.write_parameters"], [76, "module-aslm.model.data_sources"], [77, "module-aslm.model.data_sources.bdv_data_source"], [79, "module-aslm.model.data_sources.data_source"], [82, "module-aslm.model.data_sources.tiff_data_source"], [84, "module-aslm.model.data_sources.zarr_data_source"], [86, "module-aslm.model.device_startup_functions"], [104, "module-aslm.model.devices"], [105, "module-aslm.model.devices.APIs"], [106, "module-aslm.model.devices.APIs.coherent"], [107, "module-aslm.model.devices.APIs.dynamixel"], [108, "module-aslm.model.devices.APIs.logitech"], [109, "module-aslm.model.devices.APIs.omicron"], [110, "module-aslm.model.devices.camera"], [111, "module-aslm.model.devices.camera.camera_base"], [113, "module-aslm.model.devices.camera.camera_hamamatsu"], [116, "module-aslm.model.devices.camera.camera_photometrics"], [118, "module-aslm.model.devices.camera.camera_synthetic"], [121, "module-aslm.model.devices.daq"], [122, "module-aslm.model.devices.daq.daq_base"], [124, "module-aslm.model.devices.daq.daq_synthetic"], [126, "module-aslm.model.devices.filter_wheel"], [127, "module-aslm.model.devices.filter_wheel.filter_wheel_asi"], [130, "module-aslm.model.devices.filter_wheel.filter_wheel_base"], [132, "module-aslm.model.devices.filter_wheel.filter_wheel_sutter"], [135, "module-aslm.model.devices.filter_wheel.filter_wheel_synthetic"], [137, "module-aslm.model.devices.galvo"], [138, "module-aslm.model.devices.galvo.galvo_base"], [140, "module-aslm.model.devices.galvo.galvo_synthetic"], [142, "module-aslm.model.devices.joystick"], [143, "module-aslm.model.devices.joystick.joystick_base"], [145, "module-aslm.model.devices.joystick.joystick_synthetic"], [147, "module-aslm.model.devices.lasers"], [148, "module-aslm.model.devices.lasers.laser_base"], [150, "module-aslm.model.devices.lasers.laser_synthetic"], [152, "module-aslm.model.devices.lasers.laser_trigger_base"], [154, "module-aslm.model.devices.lasers.laser_trigger_synthetic"], [156, "module-aslm.model.devices.objectives"], [158, "module-aslm.model.devices.remote_focus"], [159, "module-aslm.model.devices.remote_focus.remote_focus_base"], [161, "module-aslm.model.devices.remote_focus.remote_focus_synthetic"], [163, "module-aslm.model.devices.shutter"], [164, "module-aslm.model.devices.shutter.laser_shutter_base"], [166, "module-aslm.model.devices.shutter.laser_shutter_synthetic"], [168, "module-aslm.model.devices.stages"], [169, "module-aslm.model.devices.stages.stage_asi"], [172, "module-aslm.model.devices.stages.stage_base"], [174, "module-aslm.model.devices.stages.stage_galvo"], [176, "module-aslm.model.devices.stages.stage_mcl"], [179, "module-aslm.model.devices.stages.stage_pi"], [182, "module-aslm.model.devices.stages.stage_sutter"], [185, "module-aslm.model.devices.stages.stage_synthetic"], [187, "module-aslm.model.devices.stages.stage_tl_kcube_inertial"], [190, "module-aslm.model.devices.zoom"], [191, "module-aslm.model.devices.zoom.zoom_base"], [193, "module-aslm.model.devices.zoom.zoom_synthetic"], [195, "module-aslm.model.dummy"], [200, "module-aslm.model.features"], [201, "module-aslm.model.features.auto_tile_scan"], [203, "module-aslm.model.features.autofocus"], [206, "module-aslm.model.features.common_features"], [217, "module-aslm.model.features.constant_velocity_acquisition"], [219, "module-aslm.model.features.dummy_detective"], [221, "module-aslm.model.features.feature_container"], [232, "module-aslm.model.features.feature_related_functions"], [235, "module-aslm.model.features.image_writer"], [237, "module-aslm.model.features.restful_features"], [240, "module-aslm.model.features.volume_search"], [243, "module-aslm.model.metadata_sources"], [244, "module-aslm.model.metadata_sources.bdv_metadata"], [246, "module-aslm.model.metadata_sources.metadata"], [249, "module-aslm.model.metadata_sources.ome_tiff_metadata"], [251, "module-aslm.model.microscope"], [253, "module-aslm.model.model"], [255, "module-aslm.model.waveforms"], [264, "module-aslm.tools"], [265, "module-aslm.tools.beams"], [269, "module-aslm.tools.common_dict_tools"], [271, "module-aslm.tools.common_functions"], [277, "module-aslm.tools.decorators"], [280, "module-aslm.tools.file_functions"], [285, "module-aslm.tools.image"], [288, "module-aslm.tools.image_loaders"], [290, "module-aslm.tools.main_functions"], [294, "module-aslm.tools.multipos_table_tools"], [299, "module-aslm.tools.project_stats"], [301, "module-aslm.tools.sdf"], [305, "module-aslm.tools.waveform_template_funcs"], [307, "module-aslm.tools.xml_tools"], [310, "module-aslm.view"], [311, "module-aslm.view.main_window_content"], [312, "module-aslm.view.popups"]], "aslm.config.config": [[1, "module-aslm.config.config"]], "build_nested_dict() (in module aslm.config.config)": [[2, "aslm.config.config.build_nested_dict"]], "get_aslm_path() (in module aslm.config.config)": [[3, "aslm.config.config.get_aslm_path"]], "get_configuration_paths() (in module aslm.config.config)": [[4, "aslm.config.config.get_configuration_paths"]], "load_configs() (in module aslm.config.config)": [[5, "aslm.config.config.load_configs"]], "update_config_dict() (in module aslm.config.config)": [[6, "aslm.config.config.update_config_dict"]], "verify_configuration() (in module aslm.config.config)": [[7, "aslm.config.config.verify_configuration"]], "aslm.controller": [[8, "module-aslm.controller"]], "aslm.controller.configuration_controller": [[9, "module-aslm.controller.configuration_controller"]], "configurationcontroller (class in aslm.controller.configuration_controller)": [[10, "aslm.controller.configuration_controller.ConfigurationController"]], "__init__() (aslm.controller.configuration_controller.configurationcontroller method)": [[10, "aslm.controller.configuration_controller.ConfigurationController.__init__"]], "camera_config_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[10, "aslm.controller.configuration_controller.ConfigurationController.camera_config_dict"]], "camera_pixels (aslm.controller.configuration_controller.configurationcontroller property)": [[10, "aslm.controller.configuration_controller.ConfigurationController.camera_pixels"]], "change_microscope() (aslm.controller.configuration_controller.configurationcontroller method)": [[10, "aslm.controller.configuration_controller.ConfigurationController.change_microscope"], [10, "id0"]], "channels_info (aslm.controller.configuration_controller.configurationcontroller property)": [[10, "aslm.controller.configuration_controller.ConfigurationController.channels_info"]], "daq_sample_rate (aslm.controller.configuration_controller.configurationcontroller property)": [[10, "aslm.controller.configuration_controller.ConfigurationController.daq_sample_rate"]], "filter_wheel_setting_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[10, "aslm.controller.configuration_controller.ConfigurationController.filter_wheel_setting_dict"]], "galvo_parameter_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[10, "aslm.controller.configuration_controller.ConfigurationController.galvo_parameter_dict"]], "get_microscope_configuration_dict() (aslm.controller.configuration_controller.configurationcontroller method)": [[10, "aslm.controller.configuration_controller.ConfigurationController.get_microscope_configuration_dict"], [10, "id1"]], "get_stage_position_limits() (aslm.controller.configuration_controller.configurationcontroller method)": [[10, "aslm.controller.configuration_controller.ConfigurationController.get_stage_position_limits"], [10, "id2"]], "lasers_info (aslm.controller.configuration_controller.configurationcontroller property)": [[10, "aslm.controller.configuration_controller.ConfigurationController.lasers_info"]], "number_of_channels (aslm.controller.configuration_controller.configurationcontroller property)": [[10, "aslm.controller.configuration_controller.ConfigurationController.number_of_channels"]], "remote_focus_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[10, "aslm.controller.configuration_controller.ConfigurationController.remote_focus_dict"]], "stage_default_position (aslm.controller.configuration_controller.configurationcontroller property)": [[10, "aslm.controller.configuration_controller.ConfigurationController.stage_default_position"]], "stage_setting_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[10, "aslm.controller.configuration_controller.ConfigurationController.stage_setting_dict"]], "stage_step (aslm.controller.configuration_controller.configurationcontroller property)": [[10, "aslm.controller.configuration_controller.ConfigurationController.stage_step"]], "aslm.controller.thread_pool": [[11, "module-aslm.controller.thread_pool"]], "selflockthread (class in aslm.controller.thread_pool)": [[12, "aslm.controller.thread_pool.SelfLockThread"]], "__init__() (aslm.controller.thread_pool.selflockthread method)": [[12, "aslm.controller.thread_pool.SelfLockThread.__init__"]], "daemon (aslm.controller.thread_pool.selflockthread property)": [[12, "aslm.controller.thread_pool.SelfLockThread.daemon"]], "getname() (aslm.controller.thread_pool.selflockthread method)": [[12, "aslm.controller.thread_pool.SelfLockThread.getName"]], "ident (aslm.controller.thread_pool.selflockthread property)": [[12, "aslm.controller.thread_pool.SelfLockThread.ident"]], "isdaemon() (aslm.controller.thread_pool.selflockthread method)": [[12, "aslm.controller.thread_pool.SelfLockThread.isDaemon"]], "islocked() (aslm.controller.thread_pool.selflockthread method)": [[12, "aslm.controller.thread_pool.SelfLockThread.isLocked"]], "is_alive() (aslm.controller.thread_pool.selflockthread method)": [[12, "aslm.controller.thread_pool.SelfLockThread.is_alive"]], "join() (aslm.controller.thread_pool.selflockthread method)": [[12, "aslm.controller.thread_pool.SelfLockThread.join"]], "name (aslm.controller.thread_pool.selflockthread property)": [[12, "aslm.controller.thread_pool.SelfLockThread.name"]], "native_id (aslm.controller.thread_pool.selflockthread property)": [[12, "aslm.controller.thread_pool.SelfLockThread.native_id"]], "run() (aslm.controller.thread_pool.selflockthread method)": [[12, "aslm.controller.thread_pool.SelfLockThread.run"]], "setdaemon() (aslm.controller.thread_pool.selflockthread method)": [[12, "aslm.controller.thread_pool.SelfLockThread.setDaemon"]], "setname() (aslm.controller.thread_pool.selflockthread method)": [[12, "aslm.controller.thread_pool.SelfLockThread.setName"]], "start() (aslm.controller.thread_pool.selflockthread method)": [[12, "aslm.controller.thread_pool.SelfLockThread.start"]], "unlock() (aslm.controller.thread_pool.selflockthread method)": [[12, "aslm.controller.thread_pool.SelfLockThread.unlock"]], "wait() (aslm.controller.thread_pool.selflockthread method)": [[12, "aslm.controller.thread_pool.SelfLockThread.wait"]], "synchronizedthreadpool (class in aslm.controller.thread_pool)": [[13, "aslm.controller.thread_pool.SynchronizedThreadPool"]], "__init__() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[13, "aslm.controller.thread_pool.SynchronizedThreadPool.__init__"]], "clear() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[13, "aslm.controller.thread_pool.SynchronizedThreadPool.clear"]], "createthread() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[13, "aslm.controller.thread_pool.SynchronizedThreadPool.createThread"]], "getrunningthread() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[13, "aslm.controller.thread_pool.SynchronizedThreadPool.getRunningThread"]], "globaltrace() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[13, "aslm.controller.thread_pool.SynchronizedThreadPool.globaltrace"]], "killthreadinlist() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[13, "aslm.controller.thread_pool.SynchronizedThreadPool.killThreadInList"]], "localtrace() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[13, "aslm.controller.thread_pool.SynchronizedThreadPool.localtrace"]], "movetodelete() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[13, "aslm.controller.thread_pool.SynchronizedThreadPool.moveToDelete"]], "registerresource() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[13, "aslm.controller.thread_pool.SynchronizedThreadPool.registerResource"]], "removethread() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[13, "aslm.controller.thread_pool.SynchronizedThreadPool.removeThread"]], "threadtaskwrapping() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[13, "aslm.controller.thread_pool.SynchronizedThreadPool.threadTaskWrapping"]], "threadwaitlist (class in aslm.controller.thread_pool)": [[14, "aslm.controller.thread_pool.ThreadWaitlist"]], "__init__() (aslm.controller.thread_pool.threadwaitlist method)": [[14, "aslm.controller.thread_pool.ThreadWaitlist.__init__"]], "aslm.model": [[15, "module-aslm.model"]], "aslm.model.analysis": [[16, "module-aslm.model.analysis"]], "aslm.model.analysis.boundary_detect": [[17, "module-aslm.model.analysis.boundary_detect"]], "binary_detect() (in module aslm.model.analysis.boundary_detect)": [[18, "aslm.model.analysis.boundary_detect.binary_detect"]], "find_tissue_boundary_2d() (in module aslm.model.analysis.boundary_detect)": [[19, "aslm.model.analysis.boundary_detect.find_tissue_boundary_2d"]], "has_tissue() (in module aslm.model.analysis.boundary_detect)": [[20, "aslm.model.analysis.boundary_detect.has_tissue"]], "map_boundary() (in module aslm.model.analysis.boundary_detect)": [[21, "aslm.model.analysis.boundary_detect.map_boundary"]], "aslm.model.analysis.camera": [[22, "module-aslm.model.analysis.camera"]], "compute_flatfield_map() (in module aslm.model.analysis.camera)": [[23, "aslm.model.analysis.camera.compute_flatfield_map"]], "compute_noise_sigma() (in module aslm.model.analysis.camera)": [[24, "aslm.model.analysis.camera.compute_noise_sigma"]], "compute_scmos_offset_and_variance_map() (in module aslm.model.analysis.camera)": [[25, "aslm.model.analysis.camera.compute_scmos_offset_and_variance_map"]], "compute_signal_to_noise() (in module aslm.model.analysis.camera)": [[26, "aslm.model.analysis.camera.compute_signal_to_noise"]], "aslm.model.analysis.detection": [[27, "module-aslm.model.analysis.detection"]], "add_median_border() (in module aslm.model.analysis.detection)": [[28, "aslm.model.analysis.detection.add_median_border"]], "combine_images() (in module aslm.model.analysis.detection)": [[29, "aslm.model.analysis.detection.combine_images"]], "log_detection() (in module aslm.model.analysis.detection)": [[30, "aslm.model.analysis.detection.log_detection"]], "make_inside_image() (in module aslm.model.analysis.detection)": [[31, "aslm.model.analysis.detection.make_inside_image"]], "make_normalized_image() (in module aslm.model.analysis.detection)": [[32, "aslm.model.analysis.detection.make_normalized_image"]], "make_sphere_3d() (in module aslm.model.analysis.detection)": [[33, "aslm.model.analysis.detection.make_sphere_3D"]], "multiscale_surface_filter_3d() (in module aslm.model.analysis.detection)": [[34, "aslm.model.analysis.detection.multiscale_surface_filter_3D"]], "surface_filter_gauss_3d() (in module aslm.model.analysis.detection)": [[35, "aslm.model.analysis.detection.surface_filter_gauss_3D"]], "three_level_segmentation() (in module aslm.model.analysis.detection)": [[36, "aslm.model.analysis.detection.three_level_segmentation"]], "aslm.model.analysis.image_contrast": [[37, "module-aslm.model.analysis.image_contrast"]], "estimate_and_correct_flatfield() (in module aslm.model.analysis.image_contrast)": [[38, "aslm.model.analysis.image_contrast.estimate_and_correct_flatfield"]], "estimate_image_resolution() (in module aslm.model.analysis.image_contrast)": [[39, "aslm.model.analysis.image_contrast.estimate_image_resolution"]], "fast_normalized_dct_shannon_entropy() (in module aslm.model.analysis.image_contrast)": [[40, "aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy"]], "image_intensity() (in module aslm.model.analysis.image_contrast)": [[41, "aslm.model.analysis.image_contrast.image_intensity"]], "normalized_dct_shannon_entropy() (in module aslm.model.analysis.image_contrast)": [[42, "aslm.model.analysis.image_contrast.normalized_dct_shannon_entropy"]], "aslm.model.analysis.image_decorrelation": [[43, "module-aslm.model.analysis.image_decorrelation"]], "apodize_image() (in module aslm.model.analysis.image_decorrelation)": [[44, "aslm.model.analysis.image_decorrelation.apodize_image"]], "get_correlation_coefficient() (in module aslm.model.analysis.image_decorrelation)": [[45, "aslm.model.analysis.image_decorrelation.get_correlation_coefficient"]], "get_decorrelation_local_maxima() (in module aslm.model.analysis.image_decorrelation)": [[46, "aslm.model.analysis.image_decorrelation.get_decorrelation_local_maxima"]], "get_image_decorrelation() (in module aslm.model.analysis.image_decorrelation)": [[47, "aslm.model.analysis.image_decorrelation.get_image_decorrelation"]], "get_radial_average() (in module aslm.model.analysis.image_decorrelation)": [[48, "aslm.model.analysis.image_decorrelation.get_radial_average"]], "image_to_polar() (in module aslm.model.analysis.image_decorrelation)": [[49, "aslm.model.analysis.image_decorrelation.image_to_polar"]], "linear_map() (in module aslm.model.analysis.image_decorrelation)": [[50, "aslm.model.analysis.image_decorrelation.linear_map"]], "main_image_decorr() (in module aslm.model.analysis.image_decorrelation)": [[51, "aslm.model.analysis.image_decorrelation.main_image_decorr"]], "aslm.model.analysis.image_transform": [[52, "module-aslm.model.analysis.image_transform"]], "deskew_image() (in module aslm.model.analysis.image_transform)": [[53, "aslm.model.analysis.image_transform.deskew_image"]], "initiate_gpu() (in module aslm.model.analysis.image_transform)": [[54, "aslm.model.analysis.image_transform.initiate_gpu"]], "aslm.model.analysis.spectral_unmixing": [[55, "module-aslm.model.analysis.spectral_unmixing"]], "to_do() (in module aslm.model.analysis.spectral_unmixing)": [[56, "aslm.model.analysis.spectral_unmixing.to_do"]], "aslm.model.concurrency": [[57, "module-aslm.model.concurrency"]], "aslm.model.concurrency.concurrency_tools": [[58, "module-aslm.model.concurrency.concurrency_tools"]], "custodythread (class in aslm.model.concurrency.concurrency_tools)": [[59, "aslm.model.concurrency.concurrency_tools.CustodyThread"]], "__init__() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[59, "aslm.model.concurrency.concurrency_tools.CustodyThread.__init__"]], "daemon (aslm.model.concurrency.concurrency_tools.custodythread property)": [[59, "aslm.model.concurrency.concurrency_tools.CustodyThread.daemon"]], "getname() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[59, "aslm.model.concurrency.concurrency_tools.CustodyThread.getName"]], "get_result() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[59, "aslm.model.concurrency.concurrency_tools.CustodyThread.get_result"]], "ident (aslm.model.concurrency.concurrency_tools.custodythread property)": [[59, "aslm.model.concurrency.concurrency_tools.CustodyThread.ident"]], "isdaemon() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[59, "aslm.model.concurrency.concurrency_tools.CustodyThread.isDaemon"]], "is_alive() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[59, "aslm.model.concurrency.concurrency_tools.CustodyThread.is_alive"]], "join() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[59, "aslm.model.concurrency.concurrency_tools.CustodyThread.join"]], "name (aslm.model.concurrency.concurrency_tools.custodythread property)": [[59, "aslm.model.concurrency.concurrency_tools.CustodyThread.name"]], "native_id (aslm.model.concurrency.concurrency_tools.custodythread property)": [[59, "aslm.model.concurrency.concurrency_tools.CustodyThread.native_id"]], "run() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[59, "aslm.model.concurrency.concurrency_tools.CustodyThread.run"]], "setdaemon() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[59, "aslm.model.concurrency.concurrency_tools.CustodyThread.setDaemon"]], "setname() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[59, "aslm.model.concurrency.concurrency_tools.CustodyThread.setName"]], "start() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[59, "aslm.model.concurrency.concurrency_tools.CustodyThread.start"]], "fancythread (in module aslm.model.concurrency.concurrency_tools)": [[60, "aslm.model.concurrency.concurrency_tools.FancyThread"]], "mytestclass (class in aslm.model.concurrency.concurrency_tools)": [[61, "aslm.model.concurrency.concurrency_tools.MyTestClass"]], "__init__() (aslm.model.concurrency.concurrency_tools.mytestclass method)": [[61, "aslm.model.concurrency.concurrency_tools.MyTestClass.__init__"]], "run() (aslm.model.concurrency.concurrency_tools.mytestclass method)": [[61, "aslm.model.concurrency.concurrency_tools.MyTestClass.run"]], "time_it() (aslm.model.concurrency.concurrency_tools.mytestclass method)": [[61, "aslm.model.concurrency.concurrency_tools.MyTestClass.time_it"]], "objectinsubprocess (class in aslm.model.concurrency.concurrency_tools)": [[62, "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess"]], "__init__() (aslm.model.concurrency.concurrency_tools.objectinsubprocess method)": [[62, "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess.__init__"]], "politethread (in module aslm.model.concurrency.concurrency_tools)": [[63, "aslm.model.concurrency.concurrency_tools.PoliteThread"]], "resultthread (class in aslm.model.concurrency.concurrency_tools)": [[64, "aslm.model.concurrency.concurrency_tools.ResultThread"]], "__init__() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[64, "aslm.model.concurrency.concurrency_tools.ResultThread.__init__"]], "daemon (aslm.model.concurrency.concurrency_tools.resultthread property)": [[64, "aslm.model.concurrency.concurrency_tools.ResultThread.daemon"]], "getname() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[64, "aslm.model.concurrency.concurrency_tools.ResultThread.getName"]], "get_result() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[64, "aslm.model.concurrency.concurrency_tools.ResultThread.get_result"]], "ident (aslm.model.concurrency.concurrency_tools.resultthread property)": [[64, "aslm.model.concurrency.concurrency_tools.ResultThread.ident"]], "isdaemon() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[64, "aslm.model.concurrency.concurrency_tools.ResultThread.isDaemon"]], "is_alive() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[64, "aslm.model.concurrency.concurrency_tools.ResultThread.is_alive"]], "join() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[64, "aslm.model.concurrency.concurrency_tools.ResultThread.join"]], "name (aslm.model.concurrency.concurrency_tools.resultthread property)": [[64, "aslm.model.concurrency.concurrency_tools.ResultThread.name"]], "native_id (aslm.model.concurrency.concurrency_tools.resultthread property)": [[64, "aslm.model.concurrency.concurrency_tools.ResultThread.native_id"]], "run() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[64, "aslm.model.concurrency.concurrency_tools.ResultThread.run"]], "setdaemon() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[64, "aslm.model.concurrency.concurrency_tools.ResultThread.setDaemon"]], "setname() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[64, "aslm.model.concurrency.concurrency_tools.ResultThread.setName"]], "start() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[64, "aslm.model.concurrency.concurrency_tools.ResultThread.start"]], "aligned (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ALIGNED"]], "behaved (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.BEHAVED"]], "carray (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.CARRAY"]], "c_contiguous (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.C_CONTIGUOUS"]], "farray (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.FARRAY"]], "fnc (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.FNC"]], "forc (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.FORC"]], "f_contiguous (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.F_CONTIGUOUS"]], "owndata (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.OWNDATA"]], "sharedndarray (class in aslm.model.concurrency.concurrency_tools)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray"]], "t (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.T"]], "updateifcopy (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.UPDATEIFCOPY"]], "writeable (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.WRITEABLE"]], "writebackifcopy (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.WRITEBACKIFCOPY"]], "__init__() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.__init__"]], "all() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.all"]], "any() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.any"]], "argmax() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.argmax"]], "argmin() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.argmin"]], "argpartition() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.argpartition"]], "argsort() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.argsort"]], "astype() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.astype"]], "base (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.base"]], "byteswap() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.byteswap"]], "choose() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.choose"]], "clip() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.clip"]], "compress() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.compress"]], "conj() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.conj"]], "conjugate() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.conjugate"]], "copy() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.copy"]], "ctypes (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ctypes"]], "cumprod() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.cumprod"]], "cumsum() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.cumsum"]], "data (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.data"]], "diagonal() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.diagonal"]], "dtype (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.dtype"]], "dump() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.dump"]], "dumps() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.dumps"]], "fill() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.fill"]], "flags (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.flags"]], "flat (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.flat"]], "flatten() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.flatten"]], "getfield() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.getfield"]], "imag (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.imag"]], "item() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.item"]], "itemset() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.itemset"]], "itemsize (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.itemsize"]], "max() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.max"]], "mean() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.mean"]], "min() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.min"]], "nbytes (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.nbytes"]], "ndim (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ndim"]], "newbyteorder() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.newbyteorder"]], "nonzero() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.nonzero"]], "partition() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.partition"]], "prod() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.prod"]], "ptp() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ptp"]], "put() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.put"]], "ravel() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ravel"]], "real (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.real"]], "repeat() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.repeat"]], "reshape() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.reshape"]], "resize() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.resize"]], "round() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.round"]], "searchsorted() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.searchsorted"]], "setfield() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.setfield"]], "setflags() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.setflags"]], "shape (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.shape"]], "size (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.size"]], "sort() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.sort"]], "squeeze() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.squeeze"]], "std() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.std"]], "strides (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.strides"]], "sum() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.sum"]], "swapaxes() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.swapaxes"]], "take() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.take"]], "tobytes() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.tobytes"]], "tofile() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.tofile"]], "tolist() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.tolist"]], "tostring() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.tostring"]], "trace() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.trace"]], "transpose() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.transpose"]], "var() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.var"]], "view() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[65, "aslm.model.concurrency.concurrency_tools.SharedNDArray.view"]], "testobjectinsubprocess (class in aslm.model.concurrency.concurrency_tools)": [[66, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess"]], "testobjectinsubprocess.testclass (class in aslm.model.concurrency.concurrency_tools)": [[66, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.TestClass"]], "__init__() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[66, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.__init__"]], "run() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[66, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.run"]], "test_incorrect_thread_management() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[66, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.test_incorrect_thread_management"]], "test_lock_with_waitlist() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[66, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.test_lock_with_waitlist"]], "test_object_in_subprocess_overhead() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[66, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.test_object_in_subprocess_overhead"]], "test_sending_shared_arrays() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[66, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.test_sending_shared_arrays"]], "time_it() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[66, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.time_it"]], "testresultthreadandcustodythread (class in aslm.model.concurrency.concurrency_tools)": [[67, "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread"]], "__init__() (aslm.model.concurrency.concurrency_tools.testresultthreadandcustodythread method)": [[67, "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread.__init__"]], "run() (aslm.model.concurrency.concurrency_tools.testresultthreadandcustodythread method)": [[67, "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread.run"]], "time_it() (aslm.model.concurrency.concurrency_tools.testresultthreadandcustodythread method)": [[67, "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread.time_it"]], "testsharedndarray (class in aslm.model.concurrency.concurrency_tools)": [[68, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray"]], "__init__() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[68, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.__init__"]], "run() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[68, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.run"]], "test_ndarraylike_behavior() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[68, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.test_ndarraylike_behavior"]], "test_serialization() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[68, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.test_serialization"]], "test_serializing_and_deserializing() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[68, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.test_serializing_and_deserializing"]], "time_it() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[68, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.time_it"]], "aslm.model.concurrency.proxy_objects": [[69, "module-aslm.model.concurrency.proxy_objects"]], "proxymanager (class in aslm.model.concurrency.proxy_objects)": [[70, "aslm.model.concurrency.proxy_objects.ProxyManager"]], "__init__() (aslm.model.concurrency.proxy_objects.proxymanager method)": [[70, "aslm.model.concurrency.proxy_objects.ProxyManager.__init__"]], "proxy_object() (aslm.model.concurrency.proxy_objects.proxymanager method)": [[70, "aslm.model.concurrency.proxy_objects.ProxyManager.proxy_object"]], "shared_numpy_array() (aslm.model.concurrency.proxy_objects.proxymanager method)": [[70, "aslm.model.concurrency.proxy_objects.ProxyManager.shared_numpy_array"]], "proxyobject (class in aslm.model.concurrency.proxy_objects)": [[71, "aslm.model.concurrency.proxy_objects.ProxyObject"]], "__init__() (aslm.model.concurrency.proxy_objects.proxyobject method)": [[71, "aslm.model.concurrency.proxy_objects.ProxyObject.__init__"]], "launch_custody_thread() (in module aslm.model.concurrency.proxy_objects)": [[72, "aslm.model.concurrency.proxy_objects.launch_custody_thread"]], "launch_thread() (in module aslm.model.concurrency.proxy_objects)": [[73, "aslm.model.concurrency.proxy_objects.launch_thread"]], "aslm.model.concurrency.write_parameters": [[74, "module-aslm.model.concurrency.write_parameters"]], "__init__() (aslm.model.concurrency.write_parameters.write_params method)": [[75, "aslm.model.concurrency.write_parameters.write_Params.__init__"]], "write_params (class in aslm.model.concurrency.write_parameters)": [[75, "aslm.model.concurrency.write_parameters.write_Params"]], "aslm.model.data_sources": [[76, "module-aslm.model.data_sources"]], "aslm.model.data_sources.bdv_data_source": [[77, "module-aslm.model.data_sources.bdv_data_source"]], "bigdataviewerdatasource (class in aslm.model.data_sources.bdv_data_source)": [[78, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource"]], "__init__() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[78, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.__init__"]], "close() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[78, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.close"]], "data (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[78, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.data"], [78, "id1"]], "data (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[78, "id3"]], "file_name (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[78, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.file_name"], [78, "id0"]], "metadata (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[78, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.metadata"], [78, "id2"]], "mode (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[78, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.mode"]], "read() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[78, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.read"]], "resolutions (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[78, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.resolutions"]], "set_metadata_from_configuration_experiment() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[78, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.set_metadata_from_configuration_experiment"]], "shape (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[78, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.shape"]], "shapes (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[78, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.shapes"]], "size (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[78, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.size"]], "subdivisions (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[78, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.subdivisions"]], "voxel_size (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[78, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.voxel_size"]], "write() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[78, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.write"]], "aslm.model.data_sources.data_source": [[79, "module-aslm.model.data_sources.data_source"]], "datasource (class in aslm.model.data_sources.data_source)": [[80, "aslm.model.data_sources.data_source.DataSource"]], "__init__() (aslm.model.data_sources.data_source.datasource method)": [[80, "aslm.model.data_sources.data_source.DataSource.__init__"]], "close() (aslm.model.data_sources.data_source.datasource method)": [[80, "aslm.model.data_sources.data_source.DataSource.close"]], "data (aslm.model.data_sources.data_source.datasource attribute)": [[80, "aslm.model.data_sources.data_source.DataSource.data"], [80, "id1"]], "data (aslm.model.data_sources.data_source.datasource property)": [[80, "id3"]], "file_name (aslm.model.data_sources.data_source.datasource attribute)": [[80, "aslm.model.data_sources.data_source.DataSource.file_name"], [80, "id0"]], "metadata (aslm.model.data_sources.data_source.datasource attribute)": [[80, "aslm.model.data_sources.data_source.DataSource.metadata"], [80, "id2"]], "mode (aslm.model.data_sources.data_source.datasource property)": [[80, "aslm.model.data_sources.data_source.DataSource.mode"]], "read() (aslm.model.data_sources.data_source.datasource method)": [[80, "aslm.model.data_sources.data_source.DataSource.read"]], "set_metadata_from_configuration_experiment() (aslm.model.data_sources.data_source.datasource method)": [[80, "aslm.model.data_sources.data_source.DataSource.set_metadata_from_configuration_experiment"]], "shape (aslm.model.data_sources.data_source.datasource property)": [[80, "aslm.model.data_sources.data_source.DataSource.shape"]], "size (aslm.model.data_sources.data_source.datasource property)": [[80, "aslm.model.data_sources.data_source.DataSource.size"]], "voxel_size (aslm.model.data_sources.data_source.datasource property)": [[80, "aslm.model.data_sources.data_source.DataSource.voxel_size"]], "write() (aslm.model.data_sources.data_source.datasource method)": [[80, "aslm.model.data_sources.data_source.DataSource.write"]], "get_data_source() (in module aslm.model.data_sources)": [[81, "aslm.model.data_sources.get_data_source"]], "aslm.model.data_sources.tiff_data_source": [[82, "module-aslm.model.data_sources.tiff_data_source"]], "tiffdatasource (class in aslm.model.data_sources.tiff_data_source)": [[83, "aslm.model.data_sources.tiff_data_source.TiffDataSource"]], "__init__() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[83, "aslm.model.data_sources.tiff_data_source.TiffDataSource.__init__"]], "close() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[83, "aslm.model.data_sources.tiff_data_source.TiffDataSource.close"]], "data (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[83, "aslm.model.data_sources.tiff_data_source.TiffDataSource.data"], [83, "id1"]], "data (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[83, "id3"]], "file_name (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[83, "aslm.model.data_sources.tiff_data_source.TiffDataSource.file_name"], [83, "id0"]], "generate_image_name() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[83, "aslm.model.data_sources.tiff_data_source.TiffDataSource.generate_image_name"]], "metadata (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[83, "aslm.model.data_sources.tiff_data_source.TiffDataSource.metadata"], [83, "id2"]], "mode (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[83, "aslm.model.data_sources.tiff_data_source.TiffDataSource.mode"]], "read() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[83, "aslm.model.data_sources.tiff_data_source.TiffDataSource.read"]], "set_metadata_from_configuration_experiment() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[83, "aslm.model.data_sources.tiff_data_source.TiffDataSource.set_metadata_from_configuration_experiment"]], "shape (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[83, "aslm.model.data_sources.tiff_data_source.TiffDataSource.shape"]], "size (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[83, "aslm.model.data_sources.tiff_data_source.TiffDataSource.size"]], "voxel_size (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[83, "aslm.model.data_sources.tiff_data_source.TiffDataSource.voxel_size"]], "write() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[83, "aslm.model.data_sources.tiff_data_source.TiffDataSource.write"]], "aslm.model.data_sources.zarr_data_source": [[84, "module-aslm.model.data_sources.zarr_data_source"]], "zarrdatasource (class in aslm.model.data_sources.zarr_data_source)": [[85, "aslm.model.data_sources.zarr_data_source.ZarrDataSource"]], "__init__() (aslm.model.data_sources.zarr_data_source.zarrdatasource method)": [[85, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.__init__"]], "close() (aslm.model.data_sources.zarr_data_source.zarrdatasource method)": [[85, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.close"]], "copy_to_zarr() (aslm.model.data_sources.zarr_data_source.zarrdatasource method)": [[85, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.copy_to_zarr"]], "data (aslm.model.data_sources.zarr_data_source.zarrdatasource attribute)": [[85, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.data"], [85, "id1"]], "data (aslm.model.data_sources.zarr_data_source.zarrdatasource property)": [[85, "id3"]], "file_name (aslm.model.data_sources.zarr_data_source.zarrdatasource attribute)": [[85, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.file_name"], [85, "id0"]], "metadata (aslm.model.data_sources.zarr_data_source.zarrdatasource attribute)": [[85, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.metadata"], [85, "id2"]], "mode (aslm.model.data_sources.zarr_data_source.zarrdatasource property)": [[85, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.mode"]], "read() (aslm.model.data_sources.zarr_data_source.zarrdatasource method)": [[85, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.read"]], "set_metadata_from_configuration_experiment() (aslm.model.data_sources.zarr_data_source.zarrdatasource method)": [[85, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.set_metadata_from_configuration_experiment"]], "shape (aslm.model.data_sources.zarr_data_source.zarrdatasource property)": [[85, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.shape"]], "size (aslm.model.data_sources.zarr_data_source.zarrdatasource property)": [[85, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.size"]], "voxel_size (aslm.model.data_sources.zarr_data_source.zarrdatasource property)": [[85, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.voxel_size"]], "write() (aslm.model.data_sources.zarr_data_source.zarrdatasource method)": [[85, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.write"]], "aslm.model.device_startup_functions": [[86, "module-aslm.model.device_startup_functions"]], "dummydeviceconnection (class in aslm.model.device_startup_functions)": [[87, "aslm.model.device_startup_functions.DummyDeviceConnection"]], "__init__() (aslm.model.device_startup_functions.dummydeviceconnection method)": [[87, "aslm.model.device_startup_functions.DummyDeviceConnection.__init__"]], "auto_redial() (in module aslm.model.device_startup_functions)": [[88, "aslm.model.device_startup_functions.auto_redial"]], "device_not_found() (in module aslm.model.device_startup_functions)": [[89, "aslm.model.device_startup_functions.device_not_found"]], "load_camera_connection() (in module aslm.model.device_startup_functions)": [[90, "aslm.model.device_startup_functions.load_camera_connection"]], "load_devices() (in module aslm.model.device_startup_functions)": [[91, "aslm.model.device_startup_functions.load_devices"]], "load_filter_wheel_connection() (in module aslm.model.device_startup_functions)": [[92, "aslm.model.device_startup_functions.load_filter_wheel_connection"]], "load_stages() (in module aslm.model.device_startup_functions)": [[93, "aslm.model.device_startup_functions.load_stages"]], "load_zoom_connection() (in module aslm.model.device_startup_functions)": [[94, "aslm.model.device_startup_functions.load_zoom_connection"]], "start_camera() (in module aslm.model.device_startup_functions)": [[95, "aslm.model.device_startup_functions.start_camera"]], "start_daq() (in module aslm.model.device_startup_functions)": [[96, "aslm.model.device_startup_functions.start_daq"]], "start_filter_wheel() (in module aslm.model.device_startup_functions)": [[97, "aslm.model.device_startup_functions.start_filter_wheel"]], "start_galvo() (in module aslm.model.device_startup_functions)": [[98, "aslm.model.device_startup_functions.start_galvo"]], "start_lasers() (in module aslm.model.device_startup_functions)": [[99, "aslm.model.device_startup_functions.start_lasers"]], "start_remote_focus_device() (in module aslm.model.device_startup_functions)": [[100, "aslm.model.device_startup_functions.start_remote_focus_device"]], "start_shutter() (in module aslm.model.device_startup_functions)": [[101, "aslm.model.device_startup_functions.start_shutter"]], "start_stage() (in module aslm.model.device_startup_functions)": [[102, "aslm.model.device_startup_functions.start_stage"]], "start_zoom() (in module aslm.model.device_startup_functions)": [[103, "aslm.model.device_startup_functions.start_zoom"]], "aslm.model.devices": [[104, "module-aslm.model.devices"]], "aslm.model.devices.apis": [[105, "module-aslm.model.devices.APIs"]], "aslm.model.devices.apis.coherent": [[106, "module-aslm.model.devices.APIs.coherent"]], "aslm.model.devices.apis.dynamixel": [[107, "module-aslm.model.devices.APIs.dynamixel"]], "aslm.model.devices.apis.logitech": [[108, "module-aslm.model.devices.APIs.logitech"]], "aslm.model.devices.apis.omicron": [[109, "module-aslm.model.devices.APIs.omicron"]], "aslm.model.devices.camera": [[110, "module-aslm.model.devices.camera"]], "aslm.model.devices.camera.camera_base": [[111, "module-aslm.model.devices.camera.camera_base"]], "camerabase (class in aslm.model.devices.camera.camera_base)": [[112, "aslm.model.devices.camera.camera_base.CameraBase"]], "__init__() (aslm.model.devices.camera.camera_base.camerabase method)": [[112, "aslm.model.devices.camera.camera_base.CameraBase.__init__"]], "calculate_light_sheet_exposure_time() (aslm.model.devices.camera.camera_base.camerabase method)": [[112, "aslm.model.devices.camera.camera_base.CameraBase.calculate_light_sheet_exposure_time"]], "set_readout_direction() (aslm.model.devices.camera.camera_base.camerabase method)": [[112, "aslm.model.devices.camera.camera_base.CameraBase.set_readout_direction"]], "aslm.model.devices.camera.camera_hamamatsu": [[113, "module-aslm.model.devices.camera.camera_hamamatsu"]], "hamamatsuorca (class in aslm.model.devices.camera.camera_hamamatsu)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca"]], "__init__() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.__init__"]], "calculate_light_sheet_exposure_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.calculate_light_sheet_exposure_time"]], "calculate_readout_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.calculate_readout_time"]], "close_camera() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.close_camera"]], "close_image_series() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.close_image_series"]], "get_minimum_waiting_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.get_minimum_waiting_time"]], "get_new_frame() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.get_new_frame"]], "initialize_image_series() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.initialize_image_series"]], "report_settings() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.report_settings"]], "serial_number (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.serial_number"]], "set_roi() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_ROI"]], "set_binning() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_binning"]], "set_exposure_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_exposure_time"]], "set_line_interval() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_line_interval"]], "set_readout_direction() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_readout_direction"]], "set_sensor_mode() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_sensor_mode"]], "hamamatsuorcalightning (class in aslm.model.devices.camera.camera_hamamatsu)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning"]], "__init__() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.__init__"]], "calculate_light_sheet_exposure_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.calculate_light_sheet_exposure_time"]], "calculate_readout_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.calculate_readout_time"]], "close_camera() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.close_camera"]], "close_image_series() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.close_image_series"]], "get_minimum_waiting_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.get_minimum_waiting_time"]], "get_new_frame() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.get_new_frame"]], "initialize_image_series() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.initialize_image_series"]], "report_settings() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.report_settings"]], "serial_number (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning property)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.serial_number"]], "set_roi() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.set_ROI"]], "set_binning() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.set_binning"]], "set_exposure_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.set_exposure_time"]], "set_line_interval() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.set_line_interval"]], "set_readout_direction() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.set_readout_direction"]], "set_sensor_mode() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.set_sensor_mode"]], "aslm.model.devices.camera.camera_photometrics": [[116, "module-aslm.model.devices.camera.camera_photometrics"]], "photometricskinetix (class in aslm.model.devices.camera.camera_photometrics)": [[117, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix"]], "__init__() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[117, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.__init__"]], "calculate_light_sheet_exposure_time() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[117, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.calculate_light_sheet_exposure_time"]], "calculate_readout_time() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[117, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.calculate_readout_time"]], "close_camera() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[117, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.close_camera"]], "close_image_series() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[117, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.close_image_series"]], "get_minimum_waiting_time() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[117, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.get_minimum_waiting_time"]], "get_new_frame() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[117, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.get_new_frame"]], "initialize_image_series() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[117, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.initialize_image_series"]], "report_settings() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[117, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.report_settings"]], "serial_number (aslm.model.devices.camera.camera_photometrics.photometricskinetix property)": [[117, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.serial_number"]], "set_roi() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[117, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.set_ROI"]], "set_binning() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[117, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.set_binning"]], "set_exposure_time() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[117, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.set_exposure_time"]], "set_line_interval() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[117, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.set_line_interval"]], "set_readout_direction() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[117, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.set_readout_direction"]], "set_sensor_mode() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[117, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.set_sensor_mode"]], "aslm.model.devices.camera.camera_synthetic": [[118, "module-aslm.model.devices.camera.camera_synthetic"]], "syntheticcamera (class in aslm.model.devices.camera.camera_synthetic)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera"]], "__init__() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.__init__"]], "calculate_light_sheet_exposure_time() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.calculate_light_sheet_exposure_time"]], "calculate_readout_time() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.calculate_readout_time"]], "close_camera() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.close_camera"]], "close_image_series() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.close_image_series"]], "generate_new_frame() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.generate_new_frame"]], "get_minimum_waiting_time() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.get_minimum_waiting_time"]], "get_new_frame() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.get_new_frame"]], "initialize_image_series() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.initialize_image_series"]], "load_images() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.load_images"]], "report_settings() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.report_settings"]], "set_roi() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_ROI"]], "set_binning() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_binning"]], "set_exposure_time() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_exposure_time"]], "set_line_interval() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_line_interval"]], "set_readout_direction() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_readout_direction"]], "set_sensor_mode() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_sensor_mode"]], "syntheticcameracontroller (class in aslm.model.devices.camera.camera_synthetic)": [[120, "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController"]], "__init__() (aslm.model.devices.camera.camera_synthetic.syntheticcameracontroller method)": [[120, "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController.__init__"]], "get_property_value() (aslm.model.devices.camera.camera_synthetic.syntheticcameracontroller method)": [[120, "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController.get_property_value"]], "aslm.model.devices.daq": [[121, "module-aslm.model.devices.daq"]], "aslm.model.devices.daq.daq_base": [[122, "module-aslm.model.devices.daq.daq_base"]], "daqbase (class in aslm.model.devices.daq.daq_base)": [[123, "aslm.model.devices.daq.daq_base.DAQBase"]], "__init__() (aslm.model.devices.daq.daq_base.daqbase method)": [[123, "aslm.model.devices.daq.daq_base.DAQBase.__init__"]], "calculate_all_waveforms() (aslm.model.devices.daq.daq_base.daqbase method)": [[123, "aslm.model.devices.daq.daq_base.DAQBase.calculate_all_waveforms"]], "configuration (aslm.model.devices.daq.daq_base.daqbase attribute)": [[123, "aslm.model.devices.daq.daq_base.DAQBase.configuration"]], "aslm.model.devices.daq.daq_synthetic": [[124, "module-aslm.model.devices.daq.daq_synthetic"]], "syntheticdaq (class in aslm.model.devices.daq.daq_synthetic)": [[125, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ"]], "__init__() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[125, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.__init__"]], "add_camera() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[125, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.add_camera"]], "calculate_all_waveforms() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[125, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.calculate_all_waveforms"]], "close_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[125, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.close_tasks"]], "configuration (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[125, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.configuration"]], "create_camera_task() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[125, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.create_camera_task"]], "create_galvo_remote_focus_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[125, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.create_galvo_remote_focus_tasks"]], "create_master_trigger_task() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[125, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.create_master_trigger_task"]], "prepare_acquisition() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[125, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.prepare_acquisition"]], "run_acquisition() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[125, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.run_acquisition"]], "start_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[125, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.start_tasks"]], "stop_acquisition() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[125, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.stop_acquisition"]], "stop_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[125, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.stop_tasks"]], "write_waveforms_to_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[125, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.write_waveforms_to_tasks"]], "aslm.model.devices.filter_wheel": [[126, "module-aslm.model.devices.filter_wheel"]], "aslm.model.devices.filter_wheel.filter_wheel_asi": [[127, "module-aslm.model.devices.filter_wheel.filter_wheel_asi"]], "asifilterwheel (class in aslm.model.devices.filter_wheel.filter_wheel_asi)": [[128, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel"]], "__init__() (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel method)": [[128, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.__init__"]], "check_if_filter_in_filter_dictionary() (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel method)": [[128, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.check_if_filter_in_filter_dictionary"]], "close() (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel method)": [[128, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.close"]], "filter_change_delay() (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel method)": [[128, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.filter_change_delay"]], "set_filter() (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel method)": [[128, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.set_filter"]], "baudrate (in module aslm.model.devices.filter_wheel.filter_wheel_asi)": [[129, "aslm.model.devices.filter_wheel.filter_wheel_asi.baudrate"]], "build_filter_wheel_connection() (in module aslm.model.devices.filter_wheel.filter_wheel_asi)": [[129, "aslm.model.devices.filter_wheel.filter_wheel_asi.build_filter_wheel_connection"]], "aslm.model.devices.filter_wheel.filter_wheel_base": [[130, "module-aslm.model.devices.filter_wheel.filter_wheel_base"]], "filterwheelbase (class in aslm.model.devices.filter_wheel.filter_wheel_base)": [[131, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase"]], "__init__() (aslm.model.devices.filter_wheel.filter_wheel_base.filterwheelbase method)": [[131, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.__init__"]], "check_if_filter_in_filter_dictionary() (aslm.model.devices.filter_wheel.filter_wheel_base.filterwheelbase method)": [[131, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.check_if_filter_in_filter_dictionary"], [131, "id0"]], "filter_dictionary (aslm.model.devices.filter_wheel.filter_wheel_base.filterwheelbase attribute)": [[131, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.filter_dictionary"]], "wheel_position (aslm.model.devices.filter_wheel.filter_wheel_base.filterwheelbase attribute)": [[131, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.wheel_position"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter": [[132, "module-aslm.model.devices.filter_wheel.filter_wheel_sutter"]], "sutterfilterwheel (class in aslm.model.devices.filter_wheel.filter_wheel_sutter)": [[133, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel"]], "__init__() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[133, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.__init__"]], "check_if_filter_in_filter_dictionary() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[133, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.check_if_filter_in_filter_dictionary"], [133, "id0"]], "close() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[133, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.close"], [133, "id1"]], "filter_change_delay() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[133, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.filter_change_delay"], [133, "id2"]], "filter_dictionary (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[133, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.filter_dictionary"]], "number_of_filter_wheels (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[133, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.number_of_filter_wheels"]], "read() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[133, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.read"], [133, "id3"]], "set_filter() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[133, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.set_filter"]], "wheel_position (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[133, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.wheel_position"]], "baudrate (in module aslm.model.devices.filter_wheel.filter_wheel_sutter)": [[134, "aslm.model.devices.filter_wheel.filter_wheel_sutter.baudrate"]], "build_filter_wheel_connection() (in module aslm.model.devices.filter_wheel.filter_wheel_sutter)": [[134, "aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic": [[135, "module-aslm.model.devices.filter_wheel.filter_wheel_synthetic"]], "syntheticfilterwheel (class in aslm.model.devices.filter_wheel.filter_wheel_synthetic)": [[136, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel"]], "__init__() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[136, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.__init__"]], "baudrate (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[136, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.baudrate"]], "check_if_filter_in_filter_dictionary() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[136, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.check_if_filter_in_filter_dictionary"]], "close() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[136, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.close"]], "comport (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[136, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.comport"]], "filter_change_delay() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[136, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.filter_change_delay"]], "filter_dictionary (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[136, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.filter_dictionary"]], "number_of_filter_wheels (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[136, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.number_of_filter_wheels"]], "read() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[136, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.read"]], "set_filter() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[136, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.set_filter"]], "wheel_position (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[136, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.wheel_position"]], "aslm.model.devices.galvo": [[137, "module-aslm.model.devices.galvo"]], "aslm.model.devices.galvo.galvo_base": [[138, "module-aslm.model.devices.galvo.galvo_base"]], "galvobase (class in aslm.model.devices.galvo.galvo_base)": [[139, "aslm.model.devices.galvo.galvo_base.GalvoBase"]], "__init__() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[139, "aslm.model.devices.galvo.galvo_base.GalvoBase.__init__"]], "adjust() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[139, "aslm.model.devices.galvo.galvo_base.GalvoBase.adjust"]], "camera_delay_percent (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[139, "aslm.model.devices.galvo.galvo_base.GalvoBase.camera_delay_percent"]], "close_task() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[139, "aslm.model.devices.galvo.galvo_base.GalvoBase.close_task"], [139, "id0"]], "configuration (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[139, "aslm.model.devices.galvo.galvo_base.GalvoBase.configuration"]], "device_config (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[139, "aslm.model.devices.galvo.galvo_base.GalvoBase.device_config"]], "galvo_max_voltage (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[139, "aslm.model.devices.galvo.galvo_base.GalvoBase.galvo_max_voltage"]], "galvo_min_voltage (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[139, "aslm.model.devices.galvo.galvo_base.GalvoBase.galvo_min_voltage"]], "galvo_name (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[139, "aslm.model.devices.galvo.galvo_base.GalvoBase.galvo_name"]], "microscope_name (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[139, "aslm.model.devices.galvo.galvo_base.GalvoBase.microscope_name"]], "prepare_task() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[139, "aslm.model.devices.galvo.galvo_base.GalvoBase.prepare_task"], [139, "id1"]], "remote_focus_ramp_falling (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[139, "aslm.model.devices.galvo.galvo_base.GalvoBase.remote_focus_ramp_falling"]], "sample_rate (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[139, "aslm.model.devices.galvo.galvo_base.GalvoBase.sample_rate"]], "samples (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[139, "aslm.model.devices.galvo.galvo_base.GalvoBase.samples"]], "start_task() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[139, "aslm.model.devices.galvo.galvo_base.GalvoBase.start_task"], [139, "id2"]], "stop_task() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[139, "aslm.model.devices.galvo.galvo_base.GalvoBase.stop_task"], [139, "id3"]], "sweep_time (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[139, "aslm.model.devices.galvo.galvo_base.GalvoBase.sweep_time"]], "waveform_dict (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[139, "aslm.model.devices.galvo.galvo_base.GalvoBase.waveform_dict"]], "aslm.model.devices.galvo.galvo_synthetic": [[140, "module-aslm.model.devices.galvo.galvo_synthetic"]], "none (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[141, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.None"]], "syntheticgalvo (class in aslm.model.devices.galvo.galvo_synthetic)": [[141, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo"]], "__init__() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[141, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.__init__"]], "adjust() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[141, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.adjust"]], "close_task() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[141, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.close_task"], [141, "id0"]], "prepare_task() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[141, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.prepare_task"], [141, "id1"]], "start_task() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[141, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.start_task"], [141, "id2"]], "stop_task() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[141, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.stop_task"], [141, "id3"]], "aslm.model.devices.joystick": [[142, "module-aslm.model.devices.joystick"]], "aslm.model.devices.joystick.joystick_base": [[143, "module-aslm.model.devices.joystick.joystick_base"]], "joystickbase (class in aslm.model.devices.joystick.joystick_base)": [[144, "aslm.model.devices.joystick.joystick_base.JoystickBase"]], "__init__() (aslm.model.devices.joystick.joystick_base.joystickbase method)": [[144, "aslm.model.devices.joystick.joystick_base.JoystickBase.__init__"]], "aslm.model.devices.joystick.joystick_synthetic": [[145, "module-aslm.model.devices.joystick.joystick_synthetic"]], "syntheticjoystick (class in aslm.model.devices.joystick.joystick_synthetic)": [[146, "aslm.model.devices.joystick.joystick_synthetic.SyntheticJoystick"]], "__init__() (aslm.model.devices.joystick.joystick_synthetic.syntheticjoystick method)": [[146, "aslm.model.devices.joystick.joystick_synthetic.SyntheticJoystick.__init__"]], "aslm.model.devices.lasers": [[147, "module-aslm.model.devices.lasers"]], "aslm.model.devices.lasers.laser_base": [[148, "module-aslm.model.devices.lasers.laser_base"]], "laserbase (class in aslm.model.devices.lasers.laser_base)": [[149, "aslm.model.devices.lasers.laser_base.LaserBase"]], "__init__() (aslm.model.devices.lasers.laser_base.laserbase method)": [[149, "aslm.model.devices.lasers.laser_base.LaserBase.__init__"]], "close() (aslm.model.devices.lasers.laser_base.laserbase method)": [[149, "aslm.model.devices.lasers.laser_base.LaserBase.close"]], "initialize_laser() (aslm.model.devices.lasers.laser_base.laserbase method)": [[149, "aslm.model.devices.lasers.laser_base.LaserBase.initialize_laser"]], "aslm.model.devices.lasers.laser_synthetic": [[150, "module-aslm.model.devices.lasers.laser_synthetic"]], "syntheticlaser (class in aslm.model.devices.lasers.laser_synthetic)": [[151, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser"]], "__init__() (aslm.model.devices.lasers.laser_synthetic.syntheticlaser method)": [[151, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.__init__"]], "close() (aslm.model.devices.lasers.laser_synthetic.syntheticlaser method)": [[151, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.close"]], "initialize_laser() (aslm.model.devices.lasers.laser_synthetic.syntheticlaser method)": [[151, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.initialize_laser"]], "aslm.model.devices.lasers.laser_trigger_base": [[152, "module-aslm.model.devices.lasers.laser_trigger_base"]], "lasertriggerbase (class in aslm.model.devices.lasers.laser_trigger_base)": [[153, "aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase"]], "__init__() (aslm.model.devices.lasers.laser_trigger_base.lasertriggerbase method)": [[153, "aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase.__init__"]], "enable_high_resolution_laser() (aslm.model.devices.lasers.laser_trigger_base.lasertriggerbase method)": [[153, "aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase.enable_high_resolution_laser"]], "enable_low_resolution_laser() (aslm.model.devices.lasers.laser_trigger_base.lasertriggerbase method)": [[153, "aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase.enable_low_resolution_laser"]], "set_laser_analog_voltage() (aslm.model.devices.lasers.laser_trigger_base.lasertriggerbase method)": [[153, "aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase.set_laser_analog_voltage"]], "aslm.model.devices.lasers.laser_trigger_synthetic": [[154, "module-aslm.model.devices.lasers.laser_trigger_synthetic"]], "syntheticlasertriggers (class in aslm.model.devices.lasers.laser_trigger_synthetic)": [[155, "aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers"]], "__init__() (aslm.model.devices.lasers.laser_trigger_synthetic.syntheticlasertriggers method)": [[155, "aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers.__init__"]], "enable_high_resolution_laser() (aslm.model.devices.lasers.laser_trigger_synthetic.syntheticlasertriggers method)": [[155, "aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers.enable_high_resolution_laser"]], "enable_low_resolution_laser() (aslm.model.devices.lasers.laser_trigger_synthetic.syntheticlasertriggers method)": [[155, "aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers.enable_low_resolution_laser"]], "set_laser_analog_voltage() (aslm.model.devices.lasers.laser_trigger_synthetic.syntheticlasertriggers method)": [[155, "aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers.set_laser_analog_voltage"]], "aslm.model.devices.objectives": [[156, "module-aslm.model.devices.objectives"]], "objective (class in aslm.model.devices.objectives)": [[157, "aslm.model.devices.objectives.Objective"]], "__init__() (aslm.model.devices.objectives.objective method)": [[157, "aslm.model.devices.objectives.Objective.__init__"]], "calculate_entrance_pupil() (aslm.model.devices.objectives.objective method)": [[157, "aslm.model.devices.objectives.Objective.calculate_entrance_pupil"]], "aslm.model.devices.remote_focus": [[158, "module-aslm.model.devices.remote_focus"]], "aslm.model.devices.remote_focus.remote_focus_base": [[159, "module-aslm.model.devices.remote_focus.remote_focus_base"]], "remotefocusbase (class in aslm.model.devices.remote_focus.remote_focus_base)": [[160, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase"]], "__init__() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[160, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.__init__"]], "adjust() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[160, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.adjust"]], "camera_delay_percent (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[160, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.camera_delay_percent"]], "close_task() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[160, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.close_task"]], "configuration (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[160, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.configuration"]], "device_config (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[160, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.device_config"]], "microscope_name (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[160, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.microscope_name"]], "prepare_task() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[160, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.prepare_task"], [160, "id0"]], "remote_focus_delay (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[160, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.remote_focus_delay"]], "remote_focus_max_voltage (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[160, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.remote_focus_max_voltage"]], "remote_focus_min_voltage (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[160, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.remote_focus_min_voltage"]], "remote_focus_ramp_falling (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[160, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.remote_focus_ramp_falling"]], "sample_rate (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[160, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.sample_rate"]], "samples (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[160, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.samples"]], "start_task() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[160, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.start_task"], [160, "id1"]], "stop_task() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[160, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.stop_task"], [160, "id2"]], "sweep_time (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[160, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.sweep_time"]], "waveform_dict (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[160, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.waveform_dict"]], "aslm.model.devices.remote_focus.remote_focus_synthetic": [[161, "module-aslm.model.devices.remote_focus.remote_focus_synthetic"]], "syntheticremotefocus (class in aslm.model.devices.remote_focus.remote_focus_synthetic)": [[162, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus"]], "__init__() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[162, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.__init__"]], "adjust() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[162, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.adjust"]], "close_task() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[162, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.close_task"], [162, "id0"]], "configuration (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[162, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.configuration"]], "device_connection (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[162, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.device_connection"]], "microscope_name (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[162, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.microscope_name"]], "prepare_task() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[162, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.prepare_task"], [162, "id1"]], "start_task() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[162, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.start_task"], [162, "id2"]], "stop_task() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[162, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.stop_task"], [162, "id3"]], "aslm.model.devices.shutter": [[163, "module-aslm.model.devices.shutter"]], "aslm.model.devices.shutter.laser_shutter_base": [[164, "module-aslm.model.devices.shutter.laser_shutter_base"]], "shutterbase (class in aslm.model.devices.shutter.laser_shutter_base)": [[165, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase"]], "__init__() (aslm.model.devices.shutter.laser_shutter_base.shutterbase method)": [[165, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.__init__"]], "configuration (aslm.model.devices.shutter.laser_shutter_base.shutterbase attribute)": [[165, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.configuration"]], "device_connection (aslm.model.devices.shutter.laser_shutter_base.shutterbase attribute)": [[165, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.device_connection"]], "microscope_name (aslm.model.devices.shutter.laser_shutter_base.shutterbase attribute)": [[165, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.microscope_name"]], "aslm.model.devices.shutter.laser_shutter_synthetic": [[166, "module-aslm.model.devices.shutter.laser_shutter_synthetic"]], "syntheticshutter (class in aslm.model.devices.shutter.laser_shutter_synthetic)": [[167, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter"]], "__init__() (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter method)": [[167, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.__init__"]], "close_shutters() (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter method)": [[167, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.close_shutters"]], "configuration (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter attribute)": [[167, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.configuration"]], "device_connection (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter attribute)": [[167, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.device_connection"]], "microscope_name (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter attribute)": [[167, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.microscope_name"]], "open_left() (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter method)": [[167, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.open_left"]], "open_right() (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter method)": [[167, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.open_right"]], "state() (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter method)": [[167, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.state"]], "aslm.model.devices.stages": [[168, "module-aslm.model.devices.stages"]], "aslm.model.devices.stages.stage_asi": [[169, "module-aslm.model.devices.stages.stage_asi"]], "asistage (class in aslm.model.devices.stages.stage_asi)": [[170, "aslm.model.devices.stages.stage_asi.ASIStage"]], "__init__() (aslm.model.devices.stages.stage_asi.asistage method)": [[170, "aslm.model.devices.stages.stage_asi.ASIStage.__init__"]], "axes_mapping (aslm.model.devices.stages.stage_asi.asistage attribute)": [[170, "aslm.model.devices.stages.stage_asi.ASIStage.axes_mapping"]], "default_speed (aslm.model.devices.stages.stage_asi.asistage attribute)": [[170, "aslm.model.devices.stages.stage_asi.ASIStage.default_speed"]], "f_max (aslm.model.devices.stages.stage_asi.asistage attribute)": [[170, "aslm.model.devices.stages.stage_asi.ASIStage.f_max"]], "f_min (aslm.model.devices.stages.stage_asi.asistage attribute)": [[170, "aslm.model.devices.stages.stage_asi.ASIStage.f_min"]], "f_pos (aslm.model.devices.stages.stage_asi.asistage attribute)": [[170, "aslm.model.devices.stages.stage_asi.ASIStage.f_pos"]], "get_abs_position() (aslm.model.devices.stages.stage_asi.asistage method)": [[170, "aslm.model.devices.stages.stage_asi.ASIStage.get_abs_position"], [170, "id0"]], "get_axis_position() (aslm.model.devices.stages.stage_asi.asistage method)": [[170, "aslm.model.devices.stages.stage_asi.ASIStage.get_axis_position"], [170, "id1"]], "get_position_dict() (aslm.model.devices.stages.stage_asi.asistage method)": [[170, "aslm.model.devices.stages.stage_asi.ASIStage.get_position_dict"], [170, "id2"]], "get_speed() (aslm.model.devices.stages.stage_asi.asistage method)": [[170, "aslm.model.devices.stages.stage_asi.ASIStage.get_speed"], [170, "id3"]], "move_absolute() (aslm.model.devices.stages.stage_asi.asistage method)": [[170, "aslm.model.devices.stages.stage_asi.ASIStage.move_absolute"], [170, "id4"]], "move_axis_absolute() (aslm.model.devices.stages.stage_asi.asistage method)": [[170, "aslm.model.devices.stages.stage_asi.ASIStage.move_axis_absolute"], [170, "id5"]], "position_dict (aslm.model.devices.stages.stage_asi.asistage attribute)": [[170, "aslm.model.devices.stages.stage_asi.ASIStage.position_dict"]], "report_position() (aslm.model.devices.stages.stage_asi.asistage method)": [[170, "aslm.model.devices.stages.stage_asi.ASIStage.report_position"], [170, "id6"]], "scanr() (aslm.model.devices.stages.stage_asi.asistage method)": [[170, "aslm.model.devices.stages.stage_asi.ASIStage.scanr"], [170, "id7"]], "set_speed() (aslm.model.devices.stages.stage_asi.asistage method)": [[170, "aslm.model.devices.stages.stage_asi.ASIStage.set_speed"], [170, "id8"]], "start_scan() (aslm.model.devices.stages.stage_asi.asistage method)": [[170, "aslm.model.devices.stages.stage_asi.ASIStage.start_scan"], [170, "id9"]], "stop() (aslm.model.devices.stages.stage_asi.asistage method)": [[170, "aslm.model.devices.stages.stage_asi.ASIStage.stop"], [170, "id10"]], "stop_scan() (aslm.model.devices.stages.stage_asi.asistage method)": [[170, "aslm.model.devices.stages.stage_asi.ASIStage.stop_scan"], [170, "id11"]], "theta_max (aslm.model.devices.stages.stage_asi.asistage attribute)": [[170, "aslm.model.devices.stages.stage_asi.ASIStage.theta_max"]], "theta_min (aslm.model.devices.stages.stage_asi.asistage attribute)": [[170, "aslm.model.devices.stages.stage_asi.ASIStage.theta_min"]], "theta_pos (aslm.model.devices.stages.stage_asi.asistage attribute)": [[170, "aslm.model.devices.stages.stage_asi.ASIStage.theta_pos"]], "verify_abs_position() (aslm.model.devices.stages.stage_asi.asistage method)": [[170, "aslm.model.devices.stages.stage_asi.ASIStage.verify_abs_position"], [170, "id12"]], "x_max (aslm.model.devices.stages.stage_asi.asistage attribute)": [[170, "aslm.model.devices.stages.stage_asi.ASIStage.x_max"]], "x_min (aslm.model.devices.stages.stage_asi.asistage attribute)": [[170, "aslm.model.devices.stages.stage_asi.ASIStage.x_min"]], "x_pos (aslm.model.devices.stages.stage_asi.asistage attribute)": [[170, "aslm.model.devices.stages.stage_asi.ASIStage.x_pos"]], "y_max (aslm.model.devices.stages.stage_asi.asistage attribute)": [[170, "aslm.model.devices.stages.stage_asi.ASIStage.y_max"]], "y_min (aslm.model.devices.stages.stage_asi.asistage attribute)": [[170, "aslm.model.devices.stages.stage_asi.ASIStage.y_min"]], "y_pos (aslm.model.devices.stages.stage_asi.asistage attribute)": [[170, "aslm.model.devices.stages.stage_asi.ASIStage.y_pos"]], "z_max (aslm.model.devices.stages.stage_asi.asistage attribute)": [[170, "aslm.model.devices.stages.stage_asi.ASIStage.z_max"]], "z_min (aslm.model.devices.stages.stage_asi.asistage attribute)": [[170, "aslm.model.devices.stages.stage_asi.ASIStage.z_min"]], "z_pos (aslm.model.devices.stages.stage_asi.asistage attribute)": [[170, "aslm.model.devices.stages.stage_asi.ASIStage.z_pos"]], "build_asi_stage_connection() (in module aslm.model.devices.stages.stage_asi)": [[171, "aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection"]], "aslm.model.devices.stages.stage_base": [[172, "module-aslm.model.devices.stages.stage_base"]], "stagebase (class in aslm.model.devices.stages.stage_base)": [[173, "aslm.model.devices.stages.stage_base.StageBase"]], "__init__() (aslm.model.devices.stages.stage_base.stagebase method)": [[173, "aslm.model.devices.stages.stage_base.StageBase.__init__"]], "axes_mapping (aslm.model.devices.stages.stage_base.stagebase attribute)": [[173, "aslm.model.devices.stages.stage_base.StageBase.axes_mapping"]], "f_max (aslm.model.devices.stages.stage_base.stagebase attribute)": [[173, "aslm.model.devices.stages.stage_base.StageBase.f_max"]], "f_min (aslm.model.devices.stages.stage_base.stagebase attribute)": [[173, "aslm.model.devices.stages.stage_base.StageBase.f_min"]], "f_pos (aslm.model.devices.stages.stage_base.stagebase attribute)": [[173, "aslm.model.devices.stages.stage_base.StageBase.f_pos"]], "get_abs_position() (aslm.model.devices.stages.stage_base.stagebase method)": [[173, "aslm.model.devices.stages.stage_base.StageBase.get_abs_position"], [173, "id0"]], "get_position_dict() (aslm.model.devices.stages.stage_base.stagebase method)": [[173, "aslm.model.devices.stages.stage_base.StageBase.get_position_dict"], [173, "id1"]], "stop() (aslm.model.devices.stages.stage_base.stagebase method)": [[173, "aslm.model.devices.stages.stage_base.StageBase.stop"], [173, "id2"]], "theta_max (aslm.model.devices.stages.stage_base.stagebase attribute)": [[173, "aslm.model.devices.stages.stage_base.StageBase.theta_max"]], "theta_min (aslm.model.devices.stages.stage_base.stagebase attribute)": [[173, "aslm.model.devices.stages.stage_base.StageBase.theta_min"]], "theta_pos (aslm.model.devices.stages.stage_base.stagebase attribute)": [[173, "aslm.model.devices.stages.stage_base.StageBase.theta_pos"]], "verify_abs_position() (aslm.model.devices.stages.stage_base.stagebase method)": [[173, "aslm.model.devices.stages.stage_base.StageBase.verify_abs_position"], [173, "id3"]], "x_max (aslm.model.devices.stages.stage_base.stagebase attribute)": [[173, "aslm.model.devices.stages.stage_base.StageBase.x_max"]], "x_min (aslm.model.devices.stages.stage_base.stagebase attribute)": [[173, "aslm.model.devices.stages.stage_base.StageBase.x_min"]], "x_pos (aslm.model.devices.stages.stage_base.stagebase attribute)": [[173, "aslm.model.devices.stages.stage_base.StageBase.x_pos"]], "y_max (aslm.model.devices.stages.stage_base.stagebase attribute)": [[173, "aslm.model.devices.stages.stage_base.StageBase.y_max"]], "y_min (aslm.model.devices.stages.stage_base.stagebase attribute)": [[173, "aslm.model.devices.stages.stage_base.StageBase.y_min"]], "y_pos (aslm.model.devices.stages.stage_base.stagebase attribute)": [[173, "aslm.model.devices.stages.stage_base.StageBase.y_pos"]], "z_max (aslm.model.devices.stages.stage_base.stagebase attribute)": [[173, "aslm.model.devices.stages.stage_base.StageBase.z_max"]], "z_min (aslm.model.devices.stages.stage_base.stagebase attribute)": [[173, "aslm.model.devices.stages.stage_base.StageBase.z_min"]], "z_pos (aslm.model.devices.stages.stage_base.stagebase attribute)": [[173, "aslm.model.devices.stages.stage_base.StageBase.z_pos"]], "aslm.model.devices.stages.stage_galvo": [[174, "module-aslm.model.devices.stages.stage_galvo"]], "galvonistage (class in aslm.model.devices.stages.stage_galvo)": [[175, "aslm.model.devices.stages.stage_galvo.GalvoNIStage"]], "__init__() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[175, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.__init__"]], "axes_mapping (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[175, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.axes_mapping"]], "create_position_dict() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[175, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.create_position_dict"]], "get_abs_position() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[175, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.get_abs_position"], [175, "id0"]], "get_position_dict() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[175, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.get_position_dict"]], "move_absolute() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[175, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[175, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.move_axis_absolute"]], "report_position() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[175, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.report_position"]], "stop() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[175, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.stop"], [175, "id1"]], "verify_abs_position() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[175, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.verify_abs_position"]], "aslm.model.devices.stages.stage_mcl": [[176, "module-aslm.model.devices.stages.stage_mcl"]], "mclstage (class in aslm.model.devices.stages.stage_mcl)": [[177, "aslm.model.devices.stages.stage_mcl.MCLStage"]], "__init__() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[177, "aslm.model.devices.stages.stage_mcl.MCLStage.__init__"]], "axes_mapping (aslm.model.devices.stages.stage_mcl.mclstage attribute)": [[177, "aslm.model.devices.stages.stage_mcl.MCLStage.axes_mapping"]], "get_abs_position() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[177, "aslm.model.devices.stages.stage_mcl.MCLStage.get_abs_position"]], "get_position_dict() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[177, "aslm.model.devices.stages.stage_mcl.MCLStage.get_position_dict"]], "move_absolute() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[177, "aslm.model.devices.stages.stage_mcl.MCLStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[177, "aslm.model.devices.stages.stage_mcl.MCLStage.move_axis_absolute"]], "report_position() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[177, "aslm.model.devices.stages.stage_mcl.MCLStage.report_position"]], "stop() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[177, "aslm.model.devices.stages.stage_mcl.MCLStage.stop"]], "verify_abs_position() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[177, "aslm.model.devices.stages.stage_mcl.MCLStage.verify_abs_position"]], "build_mclstage_connection() (in module aslm.model.devices.stages.stage_mcl)": [[178, "aslm.model.devices.stages.stage_mcl.build_MCLStage_connection"]], "aslm.model.devices.stages.stage_pi": [[179, "module-aslm.model.devices.stages.stage_pi"]], "pistage (class in aslm.model.devices.stages.stage_pi)": [[180, "aslm.model.devices.stages.stage_pi.PIStage"]], "__init__() (aslm.model.devices.stages.stage_pi.pistage method)": [[180, "aslm.model.devices.stages.stage_pi.PIStage.__init__"]], "axes_mapping (aslm.model.devices.stages.stage_pi.pistage attribute)": [[180, "aslm.model.devices.stages.stage_pi.PIStage.axes_mapping"]], "get_abs_position() (aslm.model.devices.stages.stage_pi.pistage method)": [[180, "aslm.model.devices.stages.stage_pi.PIStage.get_abs_position"], [180, "id0"]], "get_position_dict() (aslm.model.devices.stages.stage_pi.pistage method)": [[180, "aslm.model.devices.stages.stage_pi.PIStage.get_position_dict"], [180, "id1"]], "move_absolute() (aslm.model.devices.stages.stage_pi.pistage method)": [[180, "aslm.model.devices.stages.stage_pi.PIStage.move_absolute"], [180, "id2"]], "move_axis_absolute() (aslm.model.devices.stages.stage_pi.pistage method)": [[180, "aslm.model.devices.stages.stage_pi.PIStage.move_axis_absolute"], [180, "id3"]], "pi_axes (aslm.model.devices.stages.stage_pi.pistage attribute)": [[180, "aslm.model.devices.stages.stage_pi.PIStage.pi_axes"]], "pi_device (aslm.model.devices.stages.stage_pi.pistage attribute)": [[180, "aslm.model.devices.stages.stage_pi.PIStage.pi_device"]], "pi_tools (aslm.model.devices.stages.stage_pi.pistage attribute)": [[180, "aslm.model.devices.stages.stage_pi.PIStage.pi_tools"]], "report_position() (aslm.model.devices.stages.stage_pi.pistage method)": [[180, "aslm.model.devices.stages.stage_pi.PIStage.report_position"], [180, "id4"]], "stop() (aslm.model.devices.stages.stage_pi.pistage method)": [[180, "aslm.model.devices.stages.stage_pi.PIStage.stop"], [180, "id5"]], "verify_abs_position() (aslm.model.devices.stages.stage_pi.pistage method)": [[180, "aslm.model.devices.stages.stage_pi.PIStage.verify_abs_position"]], "wait_on_target() (aslm.model.devices.stages.stage_pi.pistage method)": [[180, "aslm.model.devices.stages.stage_pi.PIStage.wait_on_target"]], "build_pistage_connection() (in module aslm.model.devices.stages.stage_pi)": [[181, "aslm.model.devices.stages.stage_pi.build_PIStage_connection"]], "aslm.model.devices.stages.stage_sutter": [[182, "module-aslm.model.devices.stages.stage_sutter"]], "sutterstage (class in aslm.model.devices.stages.stage_sutter)": [[183, "aslm.model.devices.stages.stage_sutter.SutterStage"]], "__init__() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[183, "aslm.model.devices.stages.stage_sutter.SutterStage.__init__"]], "axes_mapping (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[183, "aslm.model.devices.stages.stage_sutter.SutterStage.axes_mapping"]], "close() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[183, "aslm.model.devices.stages.stage_sutter.SutterStage.close"]], "get_abs_position() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[183, "aslm.model.devices.stages.stage_sutter.SutterStage.get_abs_position"]], "get_position_dict() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[183, "aslm.model.devices.stages.stage_sutter.SutterStage.get_position_dict"]], "move_absolute() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[183, "aslm.model.devices.stages.stage_sutter.SutterStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[183, "aslm.model.devices.stages.stage_sutter.SutterStage.move_axis_absolute"]], "read() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[183, "aslm.model.devices.stages.stage_sutter.SutterStage.read"]], "report_position() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[183, "aslm.model.devices.stages.stage_sutter.SutterStage.report_position"]], "resolution (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[183, "aslm.model.devices.stages.stage_sutter.SutterStage.resolution"]], "speed (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[183, "aslm.model.devices.stages.stage_sutter.SutterStage.speed"]], "stage (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[183, "aslm.model.devices.stages.stage_sutter.SutterStage.stage"]], "stop() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[183, "aslm.model.devices.stages.stage_sutter.SutterStage.stop"]], "sutter_axes (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[183, "aslm.model.devices.stages.stage_sutter.SutterStage.sutter_axes"]], "verify_abs_position() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[183, "aslm.model.devices.stages.stage_sutter.SutterStage.verify_abs_position"]], "build_mp285_connection() (in module aslm.model.devices.stages.stage_sutter)": [[184, "aslm.model.devices.stages.stage_sutter.build_MP285_connection"]], "aslm.model.devices.stages.stage_synthetic": [[185, "module-aslm.model.devices.stages.stage_synthetic"]], "syntheticstage (class in aslm.model.devices.stages.stage_synthetic)": [[186, "aslm.model.devices.stages.stage_synthetic.SyntheticStage"]], "__init__() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[186, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.__init__"]], "axes_mapping (aslm.model.devices.stages.stage_synthetic.syntheticstage attribute)": [[186, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.axes_mapping"]], "get_abs_position() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[186, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.get_abs_position"]], "get_position_dict() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[186, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.get_position_dict"]], "move_absolute() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[186, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[186, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.move_axis_absolute"]], "stop() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[186, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.stop"]], "verify_abs_position() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[186, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.verify_abs_position"]], "aslm.model.devices.stages.stage_tl_kcube_inertial": [[187, "module-aslm.model.devices.stages.stage_tl_kcube_inertial"]], "tlkimstage (class in aslm.model.devices.stages.stage_tl_kcube_inertial)": [[188, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage"]], "__init__() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[188, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.__init__"]], "axes_mapping (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage attribute)": [[188, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.axes_mapping"]], "get_abs_position() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[188, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.get_abs_position"]], "get_position_dict() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[188, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.get_position_dict"]], "move_absolute() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[188, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[188, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.move_axis_absolute"]], "report_position() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[188, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.report_position"]], "stop() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[188, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.stop"]], "verify_abs_position() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[188, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.verify_abs_position"]], "build_tlkimstage_connection() (in module aslm.model.devices.stages.stage_tl_kcube_inertial)": [[189, "aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection"]], "aslm.model.devices.zoom": [[190, "module-aslm.model.devices.zoom"]], "aslm.model.devices.zoom.zoom_base": [[191, "module-aslm.model.devices.zoom.zoom_base"]], "zoombase (class in aslm.model.devices.zoom.zoom_base)": [[192, "aslm.model.devices.zoom.zoom_base.ZoomBase"]], "__init__() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[192, "aslm.model.devices.zoom.zoom_base.ZoomBase.__init__"]], "build_stage_dict() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[192, "aslm.model.devices.zoom.zoom_base.ZoomBase.build_stage_dict"]], "move() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[192, "aslm.model.devices.zoom.zoom_base.ZoomBase.move"]], "read_position() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[192, "aslm.model.devices.zoom.zoom_base.ZoomBase.read_position"]], "set_zoom() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[192, "aslm.model.devices.zoom.zoom_base.ZoomBase.set_zoom"]], "aslm.model.devices.zoom.zoom_synthetic": [[193, "module-aslm.model.devices.zoom.zoom_synthetic"]], "syntheticzoom (class in aslm.model.devices.zoom.zoom_synthetic)": [[194, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom"]], "__init__() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[194, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.__init__"]], "build_stage_dict() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[194, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.build_stage_dict"]], "move() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[194, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.move"], [194, "id0"]], "read_position() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[194, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.read_position"], [194, "id1"]], "set_zoom() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[194, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.set_zoom"], [194, "id2"]], "aslm.model.dummy": [[195, "module-aslm.model.dummy"]], "dummycontroller (class in aslm.model.dummy)": [[196, "aslm.model.dummy.DummyController"]], "__init__() (aslm.model.dummy.dummycontroller method)": [[196, "aslm.model.dummy.DummyController.__init__"]], "clear() (aslm.model.dummy.dummycontroller method)": [[196, "aslm.model.dummy.DummyController.clear"]], "execute() (aslm.model.dummy.dummycontroller method)": [[196, "aslm.model.dummy.DummyController.execute"]], "pop() (aslm.model.dummy.dummycontroller method)": [[196, "aslm.model.dummy.DummyController.pop"]], "dummydevice (class in aslm.model.dummy)": [[197, "aslm.model.dummy.DummyDevice"]], "__init__() (aslm.model.dummy.dummydevice method)": [[197, "aslm.model.dummy.DummyDevice.__init__"]], "clear() (aslm.model.dummy.dummydevice method)": [[197, "aslm.model.dummy.DummyDevice.clear"]], "data_pipe (aslm.model.dummy.dummydevice attribute)": [[197, "aslm.model.dummy.DummyDevice.data_pipe"]], "generate_message() (aslm.model.dummy.dummydevice method)": [[197, "aslm.model.dummy.DummyDevice.generate_message"]], "listen() (aslm.model.dummy.dummydevice method)": [[197, "aslm.model.dummy.DummyDevice.listen"]], "sendout() (aslm.model.dummy.dummydevice method)": [[197, "aslm.model.dummy.DummyDevice.sendout"]], "setup() (aslm.model.dummy.dummydevice method)": [[197, "aslm.model.dummy.DummyDevice.setup"], [197, "id0"]], "shutdown() (aslm.model.dummy.dummydevice method)": [[197, "aslm.model.dummy.DummyDevice.shutdown"]], "signal_pipe (aslm.model.dummy.dummydevice attribute)": [[197, "aslm.model.dummy.DummyDevice.signal_pipe"]], "dummymicroscope (class in aslm.model.dummy)": [[198, "aslm.model.dummy.DummyMicroscope"]], "__init__() (aslm.model.dummy.dummymicroscope method)": [[198, "aslm.model.dummy.DummyMicroscope.__init__"]], "data_pipe (aslm.model.dummy.dummymicroscope attribute)": [[198, "aslm.model.dummy.DummyMicroscope.data_pipe"]], "setup() (aslm.model.dummy.dummymicroscope method)": [[198, "aslm.model.dummy.DummyMicroscope.setup"]], "shutdown() (aslm.model.dummy.dummymicroscope method)": [[198, "aslm.model.dummy.DummyMicroscope.shutdown"]], "signal_pipe (aslm.model.dummy.dummymicroscope attribute)": [[198, "aslm.model.dummy.DummyMicroscope.signal_pipe"]], "dummymodel (class in aslm.model.dummy)": [[199, "aslm.model.dummy.DummyModel"]], "__init__() (aslm.model.dummy.dummymodel method)": [[199, "aslm.model.dummy.DummyModel.__init__"]], "configuration (aslm.model.dummy.dummymodel attribute)": [[199, "aslm.model.dummy.DummyModel.configuration"]], "data (aslm.model.dummy.dummymodel attribute)": [[199, "aslm.model.dummy.DummyModel.data"]], "data_container (aslm.model.dummy.dummymodel attribute)": [[199, "aslm.model.dummy.DummyModel.data_container"]], "data_func() (aslm.model.dummy.dummymodel method)": [[199, "aslm.model.dummy.DummyModel.data_func"], [199, "id0"]], "data_pipe (aslm.model.dummy.dummymodel attribute)": [[199, "aslm.model.dummy.DummyModel.data_pipe"]], "data_thread (aslm.model.dummy.dummymodel attribute)": [[199, "aslm.model.dummy.DummyModel.data_thread"]], "frame_id (aslm.model.dummy.dummymodel attribute)": [[199, "aslm.model.dummy.DummyModel.frame_id"]], "signal_container (aslm.model.dummy.dummymodel attribute)": [[199, "aslm.model.dummy.DummyModel.signal_container"]], "signal_func() (aslm.model.dummy.dummymodel method)": [[199, "aslm.model.dummy.DummyModel.signal_func"]], "signal_pipe (aslm.model.dummy.dummymodel attribute)": [[199, "aslm.model.dummy.DummyModel.signal_pipe"]], "signal_thread (aslm.model.dummy.dummymodel attribute)": [[199, "aslm.model.dummy.DummyModel.signal_thread"]], "start() (aslm.model.dummy.dummymodel method)": [[199, "aslm.model.dummy.DummyModel.start"]], "stop_flag (aslm.model.dummy.dummymodel attribute)": [[199, "aslm.model.dummy.DummyModel.stop_flag"]], "aslm.model.features": [[200, "module-aslm.model.features"]], "aslm.model.features.auto_tile_scan": [[201, "module-aslm.model.features.auto_tile_scan"]], "calculatefocusrange (class in aslm.model.features.auto_tile_scan)": [[202, "aslm.model.features.auto_tile_scan.CalculateFocusRange"]], "__init__() (aslm.model.features.auto_tile_scan.calculatefocusrange method)": [[202, "aslm.model.features.auto_tile_scan.CalculateFocusRange.__init__"]], "aslm.model.features.autofocus": [[203, "module-aslm.model.features.autofocus"]], "autofocus (class in aslm.model.features.autofocus)": [[204, "aslm.model.features.autofocus.Autofocus"]], "__init__() (aslm.model.features.autofocus.autofocus method)": [[204, "aslm.model.features.autofocus.Autofocus.__init__"]], "autofocus_frame_queue (aslm.model.features.autofocus.autofocus attribute)": [[204, "aslm.model.features.autofocus.Autofocus.autofocus_frame_queue"]], "autofocus_pos_queue (aslm.model.features.autofocus.autofocus attribute)": [[204, "aslm.model.features.autofocus.Autofocus.autofocus_pos_queue"]], "coarse_step_size (aslm.model.features.autofocus.autofocus attribute)": [[204, "aslm.model.features.autofocus.Autofocus.coarse_step_size"]], "coarse_steps (aslm.model.features.autofocus.autofocus attribute)": [[204, "aslm.model.features.autofocus.Autofocus.coarse_steps"]], "end_func_data() (aslm.model.features.autofocus.autofocus method)": [[204, "aslm.model.features.autofocus.Autofocus.end_func_data"]], "end_func_signal() (aslm.model.features.autofocus.autofocus method)": [[204, "aslm.model.features.autofocus.Autofocus.end_func_signal"]], "f_frame_id (aslm.model.features.autofocus.autofocus attribute)": [[204, "aslm.model.features.autofocus.Autofocus.f_frame_id"]], "f_pos (aslm.model.features.autofocus.autofocus attribute)": [[204, "aslm.model.features.autofocus.Autofocus.f_pos"]], "fine_pos_offset (aslm.model.features.autofocus.autofocus attribute)": [[204, "aslm.model.features.autofocus.Autofocus.fine_pos_offset"]], "fine_step_size (aslm.model.features.autofocus.autofocus attribute)": [[204, "aslm.model.features.autofocus.Autofocus.fine_step_size"]], "focus_pos (aslm.model.features.autofocus.autofocus attribute)": [[204, "aslm.model.features.autofocus.Autofocus.focus_pos"]], "frame_num (aslm.model.features.autofocus.autofocus attribute)": [[204, "aslm.model.features.autofocus.Autofocus.frame_num"]], "get_autofocus_frame_num() (aslm.model.features.autofocus.autofocus method)": [[204, "aslm.model.features.autofocus.Autofocus.get_autofocus_frame_num"]], "get_frames_num (aslm.model.features.autofocus.autofocus attribute)": [[204, "aslm.model.features.autofocus.Autofocus.get_frames_num"]], "get_steps() (aslm.model.features.autofocus.autofocus static method)": [[204, "aslm.model.features.autofocus.Autofocus.get_steps"]], "in_func_data() (aslm.model.features.autofocus.autofocus method)": [[204, "aslm.model.features.autofocus.Autofocus.in_func_data"]], "in_func_signal() (aslm.model.features.autofocus.autofocus method)": [[204, "aslm.model.features.autofocus.Autofocus.in_func_signal"]], "init_pos (aslm.model.features.autofocus.autofocus attribute)": [[204, "aslm.model.features.autofocus.Autofocus.init_pos"]], "max_entropy (aslm.model.features.autofocus.autofocus attribute)": [[204, "aslm.model.features.autofocus.Autofocus.max_entropy"]], "plot_data (aslm.model.features.autofocus.autofocus attribute)": [[204, "aslm.model.features.autofocus.Autofocus.plot_data"]], "pre_func_data() (aslm.model.features.autofocus.autofocus method)": [[204, "aslm.model.features.autofocus.Autofocus.pre_func_data"]], "pre_func_signal() (aslm.model.features.autofocus.autofocus method)": [[204, "aslm.model.features.autofocus.Autofocus.pre_func_signal"]], "robust_autofocus() (aslm.model.features.autofocus.autofocus method)": [[204, "aslm.model.features.autofocus.Autofocus.robust_autofocus"]], "run() (aslm.model.features.autofocus.autofocus method)": [[204, "aslm.model.features.autofocus.Autofocus.run"], [204, "id0"]], "signal_id (aslm.model.features.autofocus.autofocus attribute)": [[204, "aslm.model.features.autofocus.Autofocus.signal_id"]], "target_channel (aslm.model.features.autofocus.autofocus attribute)": [[204, "aslm.model.features.autofocus.Autofocus.target_channel"]], "target_frame_id (aslm.model.features.autofocus.autofocus attribute)": [[204, "aslm.model.features.autofocus.Autofocus.target_frame_id"]], "total_frame_num (aslm.model.features.autofocus.autofocus attribute)": [[204, "aslm.model.features.autofocus.Autofocus.total_frame_num"]], "power_tent() (in module aslm.model.features.autofocus)": [[205, "aslm.model.features.autofocus.power_tent"]], "aslm.model.features.common_features": [[206, "module-aslm.model.features.common_features"]], "changeresolution (class in aslm.model.features.common_features)": [[207, "aslm.model.features.common_features.ChangeResolution"]], "__init__() (aslm.model.features.common_features.changeresolution method)": [[207, "aslm.model.features.common_features.ChangeResolution.__init__"]], "conproacquisition (class in aslm.model.features.common_features)": [[208, "aslm.model.features.common_features.ConProAcquisition"]], "__init__() (aslm.model.features.common_features.conproacquisition method)": [[208, "aslm.model.features.common_features.ConProAcquisition.__init__"]], "findtissuesimple2d (class in aslm.model.features.common_features)": [[209, "aslm.model.features.common_features.FindTissueSimple2D"]], "__init__() (aslm.model.features.common_features.findtissuesimple2d method)": [[209, "aslm.model.features.common_features.FindTissueSimple2D.__init__"]], "loopbycount (class in aslm.model.features.common_features)": [[210, "aslm.model.features.common_features.LoopByCount"]], "__init__() (aslm.model.features.common_features.loopbycount method)": [[210, "aslm.model.features.common_features.LoopByCount.__init__"]], "movetonextpositioninmultipostiontable (class in aslm.model.features.common_features)": [[211, "aslm.model.features.common_features.MoveToNextPositionInMultiPostionTable"]], "__init__() (aslm.model.features.common_features.movetonextpositioninmultipostiontable method)": [[211, "aslm.model.features.common_features.MoveToNextPositionInMultiPostionTable.__init__"]], "preparenextchannel (class in aslm.model.features.common_features)": [[212, "aslm.model.features.common_features.PrepareNextChannel"]], "__init__() (aslm.model.features.common_features.preparenextchannel method)": [[212, "aslm.model.features.common_features.PrepareNextChannel.__init__"]], "snap (class in aslm.model.features.common_features)": [[213, "aslm.model.features.common_features.Snap"]], "__init__() (aslm.model.features.common_features.snap method)": [[213, "aslm.model.features.common_features.Snap.__init__"]], "stackpause (class in aslm.model.features.common_features)": [[214, "aslm.model.features.common_features.StackPause"]], "__init__() (aslm.model.features.common_features.stackpause method)": [[214, "aslm.model.features.common_features.StackPause.__init__"]], "waittocontinue (class in aslm.model.features.common_features)": [[215, "aslm.model.features.common_features.WaitToContinue"]], "__init__() (aslm.model.features.common_features.waittocontinue method)": [[215, "aslm.model.features.common_features.WaitToContinue.__init__"]], "zstackacquisition (class in aslm.model.features.common_features)": [[216, "aslm.model.features.common_features.ZStackAcquisition"]], "__init__() (aslm.model.features.common_features.zstackacquisition method)": [[216, "aslm.model.features.common_features.ZStackAcquisition.__init__"]], "aslm.model.features.constant_velocity_acquisition": [[217, "module-aslm.model.features.constant_velocity_acquisition"]], "constantvelocityacquisition (class in aslm.model.features.constant_velocity_acquisition)": [[218, "aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition"]], "__init__() (aslm.model.features.constant_velocity_acquisition.constantvelocityacquisition method)": [[218, "aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition.__init__"]], "cleanup() (aslm.model.features.constant_velocity_acquisition.constantvelocityacquisition method)": [[218, "aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition.cleanup"]], "pre_func_signal() (aslm.model.features.constant_velocity_acquisition.constantvelocityacquisition method)": [[218, "aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition.pre_func_signal"]], "aslm.model.features.dummy_detective": [[219, "module-aslm.model.features.dummy_detective"]], "dummy_detective (class in aslm.model.features.dummy_detective)": [[220, "aslm.model.features.dummy_detective.Dummy_Detective"]], "__init__() (aslm.model.features.dummy_detective.dummy_detective method)": [[220, "aslm.model.features.dummy_detective.Dummy_Detective.__init__"]], "aslm.model.features.feature_container": [[221, "module-aslm.model.features.feature_container"]], "container (class in aslm.model.features.feature_container)": [[222, "aslm.model.features.feature_container.Container"]], "__init__() (aslm.model.features.feature_container.container method)": [[222, "aslm.model.features.feature_container.Container.__init__"]], "datacontainer (class in aslm.model.features.feature_container)": [[223, "aslm.model.features.feature_container.DataContainer"]], "__init__() (aslm.model.features.feature_container.datacontainer method)": [[223, "aslm.model.features.feature_container.DataContainer.__init__"]], "datanode (class in aslm.model.features.feature_container)": [[224, "aslm.model.features.feature_container.DataNode"]], "__init__() (aslm.model.features.feature_container.datanode method)": [[224, "aslm.model.features.feature_container.DataNode.__init__"]], "signalcontainer (class in aslm.model.features.feature_container)": [[225, "aslm.model.features.feature_container.SignalContainer"]], "__init__() (aslm.model.features.feature_container.signalcontainer method)": [[225, "aslm.model.features.feature_container.SignalContainer.__init__"]], "signalnode (class in aslm.model.features.feature_container)": [[226, "aslm.model.features.feature_container.SignalNode"]], "__init__() (aslm.model.features.feature_container.signalnode method)": [[226, "aslm.model.features.feature_container.SignalNode.__init__"]], "treenode (class in aslm.model.features.feature_container)": [[227, "aslm.model.features.feature_container.TreeNode"]], "__init__() (aslm.model.features.feature_container.treenode method)": [[227, "aslm.model.features.feature_container.TreeNode.__init__"]], "dummy_true() (in module aslm.model.features.feature_container)": [[228, "aslm.model.features.feature_container.dummy_True"]], "dummy_func() (in module aslm.model.features.feature_container)": [[229, "aslm.model.features.feature_container.dummy_func"]], "get_registered_funcs() (in module aslm.model.features.feature_container)": [[230, "aslm.model.features.feature_container.get_registered_funcs"]], "load_features() (in module aslm.model.features.feature_container)": [[231, "aslm.model.features.feature_container.load_features"]], "aslm.model.features.feature_related_functions": [[232, "module-aslm.model.features.feature_related_functions"]], "convert_feature_list_to_str() (in module aslm.model.features.feature_related_functions)": [[233, "aslm.model.features.feature_related_functions.convert_feature_list_to_str"]], "convert_str_to_feature_list() (in module aslm.model.features.feature_related_functions)": [[234, "aslm.model.features.feature_related_functions.convert_str_to_feature_list"]], "aslm.model.features.image_writer": [[235, "module-aslm.model.features.image_writer"]], "imagewriter (class in aslm.model.features.image_writer)": [[236, "aslm.model.features.image_writer.ImageWriter"]], "__init__() (aslm.model.features.image_writer.imagewriter method)": [[236, "aslm.model.features.image_writer.ImageWriter.__init__"]], "calculate_and_check_disk_space() (aslm.model.features.image_writer.imagewriter method)": [[236, "aslm.model.features.image_writer.ImageWriter.calculate_and_check_disk_space"]], "close() (aslm.model.features.image_writer.imagewriter method)": [[236, "aslm.model.features.image_writer.ImageWriter.close"], [236, "id0"], [236, "id15"]], "config_table (aslm.model.features.image_writer.imagewriter attribute)": [[236, "aslm.model.features.image_writer.ImageWriter.config_table"], [236, "id4"]], "current_time_point (aslm.model.features.image_writer.imagewriter attribute)": [[236, "aslm.model.features.image_writer.ImageWriter.current_time_point"], [236, "id5"]], "data_buffer (aslm.model.features.image_writer.imagewriter attribute)": [[236, "aslm.model.features.image_writer.ImageWriter.data_buffer"], [236, "id6"]], "data_source (aslm.model.features.image_writer.imagewriter attribute)": [[236, "aslm.model.features.image_writer.ImageWriter.data_source"], [236, "id7"]], "file_type (aslm.model.features.image_writer.imagewriter attribute)": [[236, "aslm.model.features.image_writer.ImageWriter.file_type"], [236, "id8"]], "generate_image_name() (aslm.model.features.image_writer.imagewriter method)": [[236, "aslm.model.features.image_writer.ImageWriter.generate_image_name"], [236, "id1"], [236, "id16"]], "generate_meta_data() (aslm.model.features.image_writer.imagewriter method)": [[236, "aslm.model.features.image_writer.ImageWriter.generate_meta_data"], [236, "id17"], [236, "id2"]], "mip (aslm.model.features.image_writer.imagewriter attribute)": [[236, "aslm.model.features.image_writer.ImageWriter.mip"], [236, "id9"]], "mip_directory (aslm.model.features.image_writer.imagewriter attribute)": [[236, "aslm.model.features.image_writer.ImageWriter.mip_directory"], [236, "id10"]], "model (aslm.model.features.image_writer.imagewriter attribute)": [[236, "aslm.model.features.image_writer.ImageWriter.model"], [236, "id11"]], "num_of_channels (aslm.model.features.image_writer.imagewriter attribute)": [[236, "aslm.model.features.image_writer.ImageWriter.num_of_channels"], [236, "id12"]], "save_directory (aslm.model.features.image_writer.imagewriter attribute)": [[236, "aslm.model.features.image_writer.ImageWriter.save_directory"], [236, "id13"]], "save_image() (aslm.model.features.image_writer.imagewriter method)": [[236, "aslm.model.features.image_writer.ImageWriter.save_image"], [236, "id18"], [236, "id3"]], "sub_dir (aslm.model.features.image_writer.imagewriter attribute)": [[236, "aslm.model.features.image_writer.ImageWriter.sub_dir"], [236, "id14"]], "aslm.model.features.restful_features": [[237, "module-aslm.model.features.restful_features"]], "ilastiksegmentation (class in aslm.model.features.restful_features)": [[238, "aslm.model.features.restful_features.IlastikSegmentation"]], "__init__() (aslm.model.features.restful_features.ilastiksegmentation method)": [[238, "aslm.model.features.restful_features.IlastikSegmentation.__init__"]], "prepare_service() (in module aslm.model.features.restful_features)": [[239, "aslm.model.features.restful_features.prepare_service"]], "aslm.model.features.volume_search": [[240, "module-aslm.model.features.volume_search"]], "volumesearch (class in aslm.model.features.volume_search)": [[241, "aslm.model.features.volume_search.VolumeSearch"]], "__init__() (aslm.model.features.volume_search.volumesearch method)": [[241, "aslm.model.features.volume_search.VolumeSearch.__init__"]], "draw_box() (in module aslm.model.features.volume_search)": [[242, "aslm.model.features.volume_search.draw_box"]], "aslm.model.metadata_sources": [[243, "module-aslm.model.metadata_sources"]], "aslm.model.metadata_sources.bdv_metadata": [[244, "module-aslm.model.metadata_sources.bdv_metadata"]], "bigdataviewermetadata (class in aslm.model.metadata_sources.bdv_metadata)": [[245, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata"]], "__init__() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[245, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.__init__"]], "parse_bdv_xml() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[245, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.parse_bdv_xml"]], "shape (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata property)": [[245, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.shape"]], "stage_positions_to_affine_matrix() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[245, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.stage_positions_to_affine_matrix"]], "to_xml() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[245, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.to_xml"]], "voxel_size (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata property)": [[245, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.voxel_size"]], "write_xml() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[245, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.write_xml"]], "aslm.model.metadata_sources.metadata": [[246, "module-aslm.model.metadata_sources.metadata"]], "metadata (class in aslm.model.metadata_sources.metadata)": [[247, "aslm.model.metadata_sources.metadata.Metadata"]], "__init__() (aslm.model.metadata_sources.metadata.metadata method)": [[247, "aslm.model.metadata_sources.metadata.Metadata.__init__"]], "shape (aslm.model.metadata_sources.metadata.metadata property)": [[247, "aslm.model.metadata_sources.metadata.Metadata.shape"]], "voxel_size (aslm.model.metadata_sources.metadata.metadata property)": [[247, "aslm.model.metadata_sources.metadata.Metadata.voxel_size"]], "xmlmetadata (class in aslm.model.metadata_sources.metadata)": [[248, "aslm.model.metadata_sources.metadata.XMLMetadata"]], "__init__() (aslm.model.metadata_sources.metadata.xmlmetadata method)": [[248, "aslm.model.metadata_sources.metadata.XMLMetadata.__init__"]], "shape (aslm.model.metadata_sources.metadata.xmlmetadata property)": [[248, "aslm.model.metadata_sources.metadata.XMLMetadata.shape"]], "to_xml() (aslm.model.metadata_sources.metadata.xmlmetadata method)": [[248, "aslm.model.metadata_sources.metadata.XMLMetadata.to_xml"]], "voxel_size (aslm.model.metadata_sources.metadata.xmlmetadata property)": [[248, "aslm.model.metadata_sources.metadata.XMLMetadata.voxel_size"]], "write_xml() (aslm.model.metadata_sources.metadata.xmlmetadata method)": [[248, "aslm.model.metadata_sources.metadata.XMLMetadata.write_xml"]], "aslm.model.metadata_sources.ome_tiff_metadata": [[249, "module-aslm.model.metadata_sources.ome_tiff_metadata"]], "ometiffmetadata (class in aslm.model.metadata_sources.ome_tiff_metadata)": [[250, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata"]], "__init__() (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata method)": [[250, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.__init__"]], "ome_tiff_xml_dict() (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata method)": [[250, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.ome_tiff_xml_dict"]], "shape (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata property)": [[250, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.shape"]], "to_xml() (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata method)": [[250, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.to_xml"]], "voxel_size (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata property)": [[250, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.voxel_size"]], "write_xml() (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata method)": [[250, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.write_xml"]], "aslm.model.microscope": [[251, "module-aslm.model.microscope"]], "microscope (class in aslm.model.microscope)": [[252, "aslm.model.microscope.Microscope"]], "__init__() (aslm.model.microscope.microscope method)": [[252, "aslm.model.microscope.Microscope.__init__"]], "assemble_device_config_lists() (aslm.model.microscope.microscope method)": [[252, "aslm.model.microscope.Microscope.assemble_device_config_lists"]], "calculate_all_waveform() (aslm.model.microscope.microscope method)": [[252, "aslm.model.microscope.Microscope.calculate_all_waveform"]], "calculate_exposure_sweep_times() (aslm.model.microscope.microscope method)": [[252, "aslm.model.microscope.Microscope.calculate_exposure_sweep_times"]], "configuration (aslm.model.microscope.microscope attribute)": [[252, "aslm.model.microscope.Microscope.configuration"]], "daq (aslm.model.microscope.microscope attribute)": [[252, "aslm.model.microscope.Microscope.daq"]], "data_buffer (aslm.model.microscope.microscope attribute)": [[252, "aslm.model.microscope.Microscope.data_buffer"]], "end_acquisition() (aslm.model.microscope.microscope method)": [[252, "aslm.model.microscope.Microscope.end_acquisition"], [252, "id0"]], "get_readout_time() (aslm.model.microscope.microscope method)": [[252, "aslm.model.microscope.Microscope.get_readout_time"], [252, "id1"]], "get_stage_position() (aslm.model.microscope.microscope method)": [[252, "aslm.model.microscope.Microscope.get_stage_position"]], "load_and_start_devices() (aslm.model.microscope.microscope method)": [[252, "aslm.model.microscope.Microscope.load_and_start_devices"]], "microscope_name (aslm.model.microscope.microscope attribute)": [[252, "aslm.model.microscope.Microscope.microscope_name"]], "move_stage() (aslm.model.microscope.microscope method)": [[252, "aslm.model.microscope.Microscope.move_stage"]], "move_stage_offset() (aslm.model.microscope.microscope method)": [[252, "aslm.model.microscope.Microscope.move_stage_offset"], [252, "id2"]], "number_of_frames (aslm.model.microscope.microscope attribute)": [[252, "aslm.model.microscope.Microscope.number_of_frames"]], "prepare_acquisition() (aslm.model.microscope.microscope method)": [[252, "aslm.model.microscope.Microscope.prepare_acquisition"]], "prepare_next_channel() (aslm.model.microscope.microscope method)": [[252, "aslm.model.microscope.Microscope.prepare_next_channel"]], "stop_stage() (aslm.model.microscope.microscope method)": [[252, "aslm.model.microscope.Microscope.stop_stage"]], "terminate() (aslm.model.microscope.microscope method)": [[252, "aslm.model.microscope.Microscope.terminate"]], "update_data_buffer() (aslm.model.microscope.microscope method)": [[252, "aslm.model.microscope.Microscope.update_data_buffer"], [252, "id3"]], "aslm.model.model": [[253, "module-aslm.model.model"]], "model (class in aslm.model.model)": [[254, "aslm.model.model.Model"]], "use_gpu (aslm.model.model.model attribute)": [[254, "aslm.model.model.Model.USE_GPU"]], "__init__() (aslm.model.model.model method)": [[254, "aslm.model.model.Model.__init__"]], "args (aslm.model.model.model attribute)": [[254, "aslm.model.model.Model.args"]], "change_resolution() (aslm.model.model.model method)": [[254, "aslm.model.model.Model.change_resolution"]], "configuration (aslm.model.model.model attribute)": [[254, "aslm.model.model.Model.configuration"]], "create_pipe() (aslm.model.model.model method)": [[254, "aslm.model.model.Model.create_pipe"], [254, "id0"]], "end_acquisition() (aslm.model.model.model method)": [[254, "aslm.model.model.Model.end_acquisition"], [254, "id1"]], "event_queue (aslm.model.model.model attribute)": [[254, "aslm.model.model.Model.event_queue"]], "get_active_microscope() (aslm.model.model.model method)": [[254, "aslm.model.model.Model.get_active_microscope"]], "get_data_buffer() (aslm.model.model.model method)": [[254, "aslm.model.model.Model.get_data_buffer"], [254, "id2"]], "get_feature_list() (aslm.model.model.model method)": [[254, "aslm.model.model.Model.get_feature_list"]], "get_microscope_info() (aslm.model.model.model method)": [[254, "aslm.model.model.Model.get_microscope_info"]], "get_offset_variance_maps() (aslm.model.model.model method)": [[254, "aslm.model.model.Model.get_offset_variance_maps"]], "get_readout_time() (aslm.model.model.model method)": [[254, "aslm.model.model.Model.get_readout_time"]], "get_stage_position() (aslm.model.model.model method)": [[254, "aslm.model.model.Model.get_stage_position"]], "load_feature_list_from_str() (aslm.model.model.model method)": [[254, "aslm.model.model.Model.load_feature_list_from_str"]], "load_feature_records() (aslm.model.model.model method)": [[254, "aslm.model.model.Model.load_feature_records"]], "load_images() (aslm.model.model.model method)": [[254, "aslm.model.model.Model.load_images"]], "move_stage() (aslm.model.model.model method)": [[254, "aslm.model.model.Model.move_stage"], [254, "id3"]], "pause_data_thread() (aslm.model.model.model method)": [[254, "aslm.model.model.Model.pause_data_thread"]], "prepare_acquisition() (aslm.model.model.model method)": [[254, "aslm.model.model.Model.prepare_acquisition"], [254, "id4"]], "release_pipe() (aslm.model.model.model method)": [[254, "aslm.model.model.Model.release_pipe"], [254, "id5"]], "resume_data_thread() (aslm.model.model.model method)": [[254, "aslm.model.model.Model.resume_data_thread"]], "run_acquisition() (aslm.model.model.model method)": [[254, "aslm.model.model.Model.run_acquisition"]], "run_command() (aslm.model.model.model method)": [[254, "aslm.model.model.Model.run_command"], [254, "id6"]], "run_data_process() (aslm.model.model.model method)": [[254, "aslm.model.model.Model.run_data_process"], [254, "id7"]], "run_live_acquisition() (aslm.model.model.model method)": [[254, "aslm.model.model.Model.run_live_acquisition"], [254, "id8"]], "run_single_acquisition() (aslm.model.model.model method)": [[254, "aslm.model.model.Model.run_single_acquisition"]], "run_single_channel_acquisition() (aslm.model.model.model method)": [[254, "aslm.model.model.Model.run_single_channel_acquisition"]], "run_single_channel_acquisition_with_features() (aslm.model.model.model method)": [[254, "aslm.model.model.Model.run_single_channel_acquisition_with_features"]], "run_z_stack_acquisition() (aslm.model.model.model method)": [[254, "aslm.model.model.Model.run_z_stack_acquisition"]], "snap_image() (aslm.model.model.model method)": [[254, "aslm.model.model.Model.snap_image"], [254, "id9"]], "stop_stage() (aslm.model.model.model method)": [[254, "aslm.model.model.Model.stop_stage"]], "update_data_buffer() (aslm.model.model.model method)": [[254, "aslm.model.model.Model.update_data_buffer"], [254, "id10"]], "update_ilastik_setting() (aslm.model.model.model method)": [[254, "aslm.model.model.Model.update_ilastik_setting"]], "aslm.model.waveforms": [[255, "module-aslm.model.waveforms"]], "camera_exposure() (in module aslm.model.waveforms)": [[256, "aslm.model.waveforms.camera_exposure"]], "dc_value() (in module aslm.model.waveforms)": [[257, "aslm.model.waveforms.dc_value"]], "remote_focus_ramp() (in module aslm.model.waveforms)": [[258, "aslm.model.waveforms.remote_focus_ramp"]], "sawtooth() (in module aslm.model.waveforms)": [[259, "aslm.model.waveforms.sawtooth"]], "sine_wave() (in module aslm.model.waveforms)": [[260, "aslm.model.waveforms.sine_wave"]], "single_pulse() (in module aslm.model.waveforms)": [[261, "aslm.model.waveforms.single_pulse"]], "smooth_waveform() (in module aslm.model.waveforms)": [[262, "aslm.model.waveforms.smooth_waveform"]], "square() (in module aslm.model.waveforms)": [[263, "aslm.model.waveforms.square"]], "aslm.tools": [[264, "module-aslm.tools"]], "aslm.tools.beams": [[265, "module-aslm.tools.beams"]], "fit_gaussian_beam_error() (in module aslm.tools.beams)": [[266, "aslm.tools.beams.fit_gaussian_beam_error"]], "fit_gaussian_beam_mse() (in module aslm.tools.beams)": [[267, "aslm.tools.beams.fit_gaussian_beam_mse"]], "gaussian_beam() (in module aslm.tools.beams)": [[268, "aslm.tools.beams.gaussian_beam"]], "aslm.tools.common_dict_tools": [[269, "module-aslm.tools.common_dict_tools"]], "update_stage_dict() (in module aslm.tools.common_dict_tools)": [[270, "aslm.tools.common_dict_tools.update_stage_dict"]], "aslm.tools.common_functions": [[271, "module-aslm.tools.common_functions"]], "variablewithlock (class in aslm.tools.common_functions)": [[272, "aslm.tools.common_functions.VariableWithLock"]], "__init__() (aslm.tools.common_functions.variablewithlock method)": [[272, "aslm.tools.common_functions.VariableWithLock.__init__"]], "build_ref_name() (in module aslm.tools.common_functions)": [[273, "aslm.tools.common_functions.build_ref_name"]], "combine_funcs() (in module aslm.tools.common_functions)": [[274, "aslm.tools.common_functions.combine_funcs"]], "copy_proxy_object() (in module aslm.tools.common_functions)": [[275, "aslm.tools.common_functions.copy_proxy_object"]], "load_module_from_file() (in module aslm.tools.common_functions)": [[276, "aslm.tools.common_functions.load_module_from_file"]], "aslm.tools.decorators": [[277, "module-aslm.tools.decorators"]], "featurelist (class in aslm.tools.decorators)": [[278, "aslm.tools.decorators.FeatureList"]], "__init__() (aslm.tools.decorators.featurelist method)": [[278, "aslm.tools.decorators.FeatureList.__init__"]], "function_timer() (in module aslm.tools.decorators)": [[279, "aslm.tools.decorators.function_timer"]], "aslm.tools.file_functions": [[280, "module-aslm.tools.file_functions"]], "create_save_path() (in module aslm.tools.file_functions)": [[281, "aslm.tools.file_functions.create_save_path"]], "delete_folder() (in module aslm.tools.file_functions)": [[282, "aslm.tools.file_functions.delete_folder"]], "load_yaml_file() (in module aslm.tools.file_functions)": [[283, "aslm.tools.file_functions.load_yaml_file"]], "save_yaml_file() (in module aslm.tools.file_functions)": [[284, "aslm.tools.file_functions.save_yaml_file"]], "aslm.tools.image": [[285, "module-aslm.tools.image"]], "create_arrow_image() (in module aslm.tools.image)": [[286, "aslm.tools.image.create_arrow_image"]], "text_array() (in module aslm.tools.image)": [[287, "aslm.tools.image.text_array"]], "aslm.tools.image_loaders": [[288, "module-aslm.tools.image_loaders"]], "lazytiff (class in aslm.tools.image_loaders)": [[289, "aslm.tools.image_loaders.LazyTiff"]], "__init__() (aslm.tools.image_loaders.lazytiff method)": [[289, "aslm.tools.image_loaders.LazyTiff.__init__"]], "shape (aslm.tools.image_loaders.lazytiff property)": [[289, "aslm.tools.image_loaders.LazyTiff.shape"]], "aslm.tools.main_functions": [[290, "module-aslm.tools.main_functions"]], "create_parser() (in module aslm.tools.main_functions)": [[291, "aslm.tools.main_functions.create_parser"]], "evaluate_parser_input_arguments() (in module aslm.tools.main_functions)": [[292, "aslm.tools.main_functions.evaluate_parser_input_arguments"]], "identify_gpu() (in module aslm.tools.main_functions)": [[293, "aslm.tools.main_functions.identify_gpu"]], "aslm.tools.multipos_table_tools": [[294, "module-aslm.tools.multipos_table_tools"]], "calc_num_tiles() (in module aslm.tools.multipos_table_tools)": [[295, "aslm.tools.multipos_table_tools.calc_num_tiles"]], "compute_tiles_from_bounding_box() (in module aslm.tools.multipos_table_tools)": [[296, "aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box"]], "sign() (in module aslm.tools.multipos_table_tools)": [[297, "aslm.tools.multipos_table_tools.sign"]], "update_table() (in module aslm.tools.multipos_table_tools)": [[298, "aslm.tools.multipos_table_tools.update_table"]], "aslm.tools.project_stats": [[299, "module-aslm.tools.project_stats"]], "countlines() (in module aslm.tools.project_stats)": [[300, "aslm.tools.project_stats.countlines"]], "aslm.tools.sdf": [[301, "module-aslm.tools.sdf"]], "box() (in module aslm.tools.sdf)": [[302, "aslm.tools.sdf.box"]], "sphere() (in module aslm.tools.sdf)": [[303, "aslm.tools.sdf.sphere"]], "volume_from_sdf() (in module aslm.tools.sdf)": [[304, "aslm.tools.sdf.volume_from_sdf"]], "aslm.tools.waveform_template_funcs": [[305, "module-aslm.tools.waveform_template_funcs"]], "get_waveform_template_parameters() (in module aslm.tools.waveform_template_funcs)": [[306, "aslm.tools.waveform_template_funcs.get_waveform_template_parameters"]], "aslm.tools.xml_tools": [[307, "module-aslm.tools.xml_tools"]], "dict_to_xml() (in module aslm.tools.xml_tools)": [[308, "aslm.tools.xml_tools.dict_to_xml"]], "parse_xml() (in module aslm.tools.xml_tools)": [[309, "aslm.tools.xml_tools.parse_xml"]], "aslm.view": [[310, "module-aslm.view"]], "aslm.view.main_window_content": [[311, "module-aslm.view.main_window_content"]], "aslm.view.popups": [[312, "module-aslm.view.popups"]]}})