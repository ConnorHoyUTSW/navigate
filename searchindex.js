Search.setIndex({"docnames": ["_autosummary/aslm.config", "_autosummary/aslm.config.config", "_autosummary/aslm.config.config.build_nested_dict", "_autosummary/aslm.config.config.get_aslm_path", "_autosummary/aslm.config.config.get_configuration_paths", "_autosummary/aslm.config.config.load_configs", "_autosummary/aslm.config.config.update_config_dict", "_autosummary/aslm.config.config.verify_experiment_config", "_autosummary/aslm.config.config.verify_waveform_constants", "_autosummary/aslm.controller", "_autosummary/aslm.controller.configuration_controller", "_autosummary/aslm.controller.configuration_controller.ConfigurationController", "_autosummary/aslm.controller.thread_pool", "_autosummary/aslm.controller.thread_pool.SelfLockThread", "_autosummary/aslm.controller.thread_pool.SynchronizedThreadPool", "_autosummary/aslm.controller.thread_pool.ThreadWaitlist", "_autosummary/aslm.model", "_autosummary/aslm.model.analysis", "_autosummary/aslm.model.analysis.boundary_detect", "_autosummary/aslm.model.analysis.boundary_detect.binary_detect", "_autosummary/aslm.model.analysis.boundary_detect.find_tissue_boundary_2d", "_autosummary/aslm.model.analysis.boundary_detect.has_tissue", "_autosummary/aslm.model.analysis.boundary_detect.map_boundary", "_autosummary/aslm.model.analysis.camera", "_autosummary/aslm.model.analysis.camera.compute_flatfield_map", "_autosummary/aslm.model.analysis.camera.compute_noise_sigma", "_autosummary/aslm.model.analysis.camera.compute_scmos_offset_and_variance_map", "_autosummary/aslm.model.analysis.camera.compute_signal_to_noise", "_autosummary/aslm.model.analysis.detection", "_autosummary/aslm.model.analysis.detection.add_median_border", "_autosummary/aslm.model.analysis.detection.combine_images", "_autosummary/aslm.model.analysis.detection.log_detection", "_autosummary/aslm.model.analysis.detection.make_inside_image", "_autosummary/aslm.model.analysis.detection.make_normalized_image", "_autosummary/aslm.model.analysis.detection.make_sphere_3D", "_autosummary/aslm.model.analysis.detection.multiscale_surface_filter_3D", "_autosummary/aslm.model.analysis.detection.surface_filter_gauss_3D", "_autosummary/aslm.model.analysis.detection.three_level_segmentation", "_autosummary/aslm.model.analysis.image_contrast", "_autosummary/aslm.model.analysis.image_contrast.estimate_and_correct_flatfield", "_autosummary/aslm.model.analysis.image_contrast.estimate_image_resolution", "_autosummary/aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy", "_autosummary/aslm.model.analysis.image_contrast.image_intensity", "_autosummary/aslm.model.analysis.image_contrast.normalized_dct_shannon_entropy", "_autosummary/aslm.model.analysis.image_decorrelation", "_autosummary/aslm.model.analysis.image_decorrelation.apodize_image", "_autosummary/aslm.model.analysis.image_decorrelation.get_correlation_coefficient", "_autosummary/aslm.model.analysis.image_decorrelation.get_decorrelation_local_maxima", "_autosummary/aslm.model.analysis.image_decorrelation.get_image_decorrelation", "_autosummary/aslm.model.analysis.image_decorrelation.get_radial_average", "_autosummary/aslm.model.analysis.image_decorrelation.image_to_polar", "_autosummary/aslm.model.analysis.image_decorrelation.linear_map", "_autosummary/aslm.model.analysis.image_decorrelation.main_image_decorr", "_autosummary/aslm.model.analysis.image_transform", "_autosummary/aslm.model.analysis.image_transform.deskew_image", "_autosummary/aslm.model.analysis.image_transform.initiate_gpu", "_autosummary/aslm.model.analysis.spectral_unmixing", "_autosummary/aslm.model.analysis.spectral_unmixing.to_do", "_autosummary/aslm.model.concurrency", "_autosummary/aslm.model.concurrency.concurrency_tools", "_autosummary/aslm.model.concurrency.concurrency_tools.CustodyThread", "_autosummary/aslm.model.concurrency.concurrency_tools.FancyThread", "_autosummary/aslm.model.concurrency.concurrency_tools.MyTestClass", "_autosummary/aslm.model.concurrency.concurrency_tools.ObjectInSubprocess", "_autosummary/aslm.model.concurrency.concurrency_tools.PoliteThread", "_autosummary/aslm.model.concurrency.concurrency_tools.ResultThread", "_autosummary/aslm.model.concurrency.concurrency_tools.SharedNDArray", "_autosummary/aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess", "_autosummary/aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread", "_autosummary/aslm.model.concurrency.concurrency_tools.TestSharedNDArray", "_autosummary/aslm.model.concurrency.proxy_objects", "_autosummary/aslm.model.concurrency.proxy_objects.ProxyManager", "_autosummary/aslm.model.concurrency.proxy_objects.ProxyObject", "_autosummary/aslm.model.concurrency.proxy_objects.launch_custody_thread", "_autosummary/aslm.model.concurrency.proxy_objects.launch_thread", "_autosummary/aslm.model.concurrency.write_parameters", "_autosummary/aslm.model.concurrency.write_parameters.write_Params", "_autosummary/aslm.model.data_sources", "_autosummary/aslm.model.data_sources.bdv_data_source", "_autosummary/aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource", "_autosummary/aslm.model.data_sources.data_source", "_autosummary/aslm.model.data_sources.data_source.DataSource", "_autosummary/aslm.model.data_sources.get_data_source", "_autosummary/aslm.model.data_sources.tiff_data_source", "_autosummary/aslm.model.data_sources.tiff_data_source.TiffDataSource", "_autosummary/aslm.model.data_sources.zarr_data_source", "_autosummary/aslm.model.data_sources.zarr_data_source.ZarrDataSource", "_autosummary/aslm.model.device_startup_functions", "_autosummary/aslm.model.device_startup_functions.DummyDeviceConnection", "_autosummary/aslm.model.device_startup_functions.auto_redial", "_autosummary/aslm.model.device_startup_functions.device_not_found", "_autosummary/aslm.model.device_startup_functions.load_camera_connection", "_autosummary/aslm.model.device_startup_functions.load_devices", "_autosummary/aslm.model.device_startup_functions.load_filter_wheel_connection", "_autosummary/aslm.model.device_startup_functions.load_stages", "_autosummary/aslm.model.device_startup_functions.load_zoom_connection", "_autosummary/aslm.model.device_startup_functions.start_camera", "_autosummary/aslm.model.device_startup_functions.start_daq", "_autosummary/aslm.model.device_startup_functions.start_filter_wheel", "_autosummary/aslm.model.device_startup_functions.start_galvo", "_autosummary/aslm.model.device_startup_functions.start_lasers", "_autosummary/aslm.model.device_startup_functions.start_remote_focus_device", "_autosummary/aslm.model.device_startup_functions.start_shutter", "_autosummary/aslm.model.device_startup_functions.start_stage", "_autosummary/aslm.model.device_startup_functions.start_zoom", "_autosummary/aslm.model.devices", "_autosummary/aslm.model.devices.APIs", "_autosummary/aslm.model.devices.APIs.coherent", "_autosummary/aslm.model.devices.APIs.dynamixel", "_autosummary/aslm.model.devices.APIs.logitech", "_autosummary/aslm.model.devices.APIs.omicron", "_autosummary/aslm.model.devices.camera", "_autosummary/aslm.model.devices.camera.camera_base", "_autosummary/aslm.model.devices.camera.camera_base.CameraBase", "_autosummary/aslm.model.devices.camera.camera_hamamatsu", "_autosummary/aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca", "_autosummary/aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning", "_autosummary/aslm.model.devices.camera.camera_photometrics", "_autosummary/aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix", "_autosummary/aslm.model.devices.camera.camera_synthetic", "_autosummary/aslm.model.devices.camera.camera_synthetic.SyntheticCamera", "_autosummary/aslm.model.devices.camera.camera_synthetic.SyntheticCameraController", "_autosummary/aslm.model.devices.daq", "_autosummary/aslm.model.devices.daq.daq_base", "_autosummary/aslm.model.devices.daq.daq_base.DAQBase", "_autosummary/aslm.model.devices.daq.daq_synthetic", "_autosummary/aslm.model.devices.daq.daq_synthetic.SyntheticDAQ", "_autosummary/aslm.model.devices.filter_wheel", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_asi", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_asi.build_filter_wheel_connection", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_base", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_synthetic", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel", "_autosummary/aslm.model.devices.galvo", "_autosummary/aslm.model.devices.galvo.galvo_base", "_autosummary/aslm.model.devices.galvo.galvo_base.GalvoBase", "_autosummary/aslm.model.devices.galvo.galvo_synthetic", "_autosummary/aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo", "_autosummary/aslm.model.devices.joystick", "_autosummary/aslm.model.devices.joystick.joystick_base", "_autosummary/aslm.model.devices.joystick.joystick_base.JoystickBase", "_autosummary/aslm.model.devices.joystick.joystick_synthetic", "_autosummary/aslm.model.devices.joystick.joystick_synthetic.SyntheticJoystick", "_autosummary/aslm.model.devices.lasers", "_autosummary/aslm.model.devices.lasers.laser_base", "_autosummary/aslm.model.devices.lasers.laser_base.LaserBase", "_autosummary/aslm.model.devices.lasers.laser_synthetic", "_autosummary/aslm.model.devices.lasers.laser_synthetic.SyntheticLaser", "_autosummary/aslm.model.devices.objectives", "_autosummary/aslm.model.devices.objectives.Objective", "_autosummary/aslm.model.devices.remote_focus", "_autosummary/aslm.model.devices.remote_focus.remote_focus_base", "_autosummary/aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase", "_autosummary/aslm.model.devices.remote_focus.remote_focus_synthetic", "_autosummary/aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus", "_autosummary/aslm.model.devices.shutter", "_autosummary/aslm.model.devices.shutter.laser_shutter_base", "_autosummary/aslm.model.devices.shutter.laser_shutter_base.ShutterBase", "_autosummary/aslm.model.devices.shutter.laser_shutter_synthetic", "_autosummary/aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter", "_autosummary/aslm.model.devices.stages", "_autosummary/aslm.model.devices.stages.stage_asi", "_autosummary/aslm.model.devices.stages.stage_asi.ASIStage", "_autosummary/aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection", "_autosummary/aslm.model.devices.stages.stage_base", "_autosummary/aslm.model.devices.stages.stage_base.StageBase", "_autosummary/aslm.model.devices.stages.stage_galvo", "_autosummary/aslm.model.devices.stages.stage_galvo.GalvoNIStage", "_autosummary/aslm.model.devices.stages.stage_mcl", "_autosummary/aslm.model.devices.stages.stage_mcl.MCLStage", "_autosummary/aslm.model.devices.stages.stage_mcl.build_MCLStage_connection", "_autosummary/aslm.model.devices.stages.stage_pi", "_autosummary/aslm.model.devices.stages.stage_pi.PIStage", "_autosummary/aslm.model.devices.stages.stage_pi.build_PIStage_connection", "_autosummary/aslm.model.devices.stages.stage_sutter", "_autosummary/aslm.model.devices.stages.stage_sutter.SutterStage", "_autosummary/aslm.model.devices.stages.stage_sutter.build_MP285_connection", "_autosummary/aslm.model.devices.stages.stage_synthetic", "_autosummary/aslm.model.devices.stages.stage_synthetic.SyntheticStage", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection", "_autosummary/aslm.model.devices.zoom", "_autosummary/aslm.model.devices.zoom.zoom_base", "_autosummary/aslm.model.devices.zoom.zoom_base.ZoomBase", "_autosummary/aslm.model.devices.zoom.zoom_synthetic", "_autosummary/aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom", "_autosummary/aslm.model.dummy", "_autosummary/aslm.model.dummy.DummyController", "_autosummary/aslm.model.dummy.DummyDevice", "_autosummary/aslm.model.dummy.DummyMicroscope", "_autosummary/aslm.model.dummy.DummyModel", "_autosummary/aslm.model.features", "_autosummary/aslm.model.features.auto_tile_scan", "_autosummary/aslm.model.features.auto_tile_scan.CalculateFocusRange", "_autosummary/aslm.model.features.autofocus", "_autosummary/aslm.model.features.autofocus.Autofocus", "_autosummary/aslm.model.features.autofocus.power_tent", "_autosummary/aslm.model.features.common_features", "_autosummary/aslm.model.features.common_features.ChangeResolution", "_autosummary/aslm.model.features.common_features.ConProAcquisition", "_autosummary/aslm.model.features.common_features.FindTissueSimple2D", "_autosummary/aslm.model.features.common_features.LoopByCount", "_autosummary/aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable", "_autosummary/aslm.model.features.common_features.PrepareNextChannel", "_autosummary/aslm.model.features.common_features.Snap", "_autosummary/aslm.model.features.common_features.StackPause", "_autosummary/aslm.model.features.common_features.WaitToContinue", "_autosummary/aslm.model.features.common_features.ZStackAcquisition", "_autosummary/aslm.model.features.constant_velocity_acquisition", "_autosummary/aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition", "_autosummary/aslm.model.features.dummy_detective", "_autosummary/aslm.model.features.dummy_detective.Dummy_Detective", "_autosummary/aslm.model.features.feature_container", "_autosummary/aslm.model.features.feature_container.Container", "_autosummary/aslm.model.features.feature_container.DataContainer", "_autosummary/aslm.model.features.feature_container.DataNode", "_autosummary/aslm.model.features.feature_container.SignalContainer", "_autosummary/aslm.model.features.feature_container.SignalNode", "_autosummary/aslm.model.features.feature_container.TreeNode", "_autosummary/aslm.model.features.feature_container.dummy_True", "_autosummary/aslm.model.features.feature_container.dummy_func", "_autosummary/aslm.model.features.feature_container.get_registered_funcs", "_autosummary/aslm.model.features.feature_container.load_features", "_autosummary/aslm.model.features.feature_related_functions", "_autosummary/aslm.model.features.feature_related_functions.SharedList", "_autosummary/aslm.model.features.feature_related_functions.convert_feature_list_to_str", "_autosummary/aslm.model.features.feature_related_functions.convert_str_to_feature_list", "_autosummary/aslm.model.features.feature_related_functions.load_dynamic_parameter_functions", "_autosummary/aslm.model.features.image_writer", "_autosummary/aslm.model.features.image_writer.ImageWriter", "_autosummary/aslm.model.features.remove_empty_tiles", "_autosummary/aslm.model.features.remove_empty_tiles.DetectTissueInStack", "_autosummary/aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord", "_autosummary/aslm.model.features.remove_empty_tiles.RemoveEmptyPositions", "_autosummary/aslm.model.features.remove_empty_tiles.detect_tissue", "_autosummary/aslm.model.features.remove_empty_tiles.detect_tissue2", "_autosummary/aslm.model.features.restful_features", "_autosummary/aslm.model.features.restful_features.IlastikSegmentation", "_autosummary/aslm.model.features.restful_features.prepare_service", "_autosummary/aslm.model.features.volume_search", "_autosummary/aslm.model.features.volume_search.VolumeSearch", "_autosummary/aslm.model.features.volume_search.draw_box", "_autosummary/aslm.model.metadata_sources", "_autosummary/aslm.model.metadata_sources.bdv_metadata", "_autosummary/aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata", "_autosummary/aslm.model.metadata_sources.metadata", "_autosummary/aslm.model.metadata_sources.metadata.Metadata", "_autosummary/aslm.model.metadata_sources.metadata.XMLMetadata", "_autosummary/aslm.model.metadata_sources.ome_tiff_metadata", "_autosummary/aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata", "_autosummary/aslm.model.microscope", "_autosummary/aslm.model.microscope.Microscope", "_autosummary/aslm.model.model", "_autosummary/aslm.model.model.Model", "_autosummary/aslm.model.waveforms", "_autosummary/aslm.model.waveforms.camera_exposure", "_autosummary/aslm.model.waveforms.dc_value", "_autosummary/aslm.model.waveforms.remote_focus_ramp", "_autosummary/aslm.model.waveforms.sawtooth", "_autosummary/aslm.model.waveforms.sine_wave", "_autosummary/aslm.model.waveforms.single_pulse", "_autosummary/aslm.model.waveforms.smooth_waveform", "_autosummary/aslm.model.waveforms.square", "_autosummary/aslm.tools", "_autosummary/aslm.tools.beams", "_autosummary/aslm.tools.beams.fit_gaussian_beam_error", "_autosummary/aslm.tools.beams.fit_gaussian_beam_mse", "_autosummary/aslm.tools.beams.gaussian_beam", "_autosummary/aslm.tools.common_dict_tools", "_autosummary/aslm.tools.common_dict_tools.update_stage_dict", "_autosummary/aslm.tools.common_functions", "_autosummary/aslm.tools.common_functions.VariableWithLock", "_autosummary/aslm.tools.common_functions.build_ref_name", "_autosummary/aslm.tools.common_functions.combine_funcs", "_autosummary/aslm.tools.common_functions.copy_proxy_object", "_autosummary/aslm.tools.common_functions.load_module_from_file", "_autosummary/aslm.tools.decorators", "_autosummary/aslm.tools.decorators.FeatureList", "_autosummary/aslm.tools.decorators.function_timer", "_autosummary/aslm.tools.file_functions", "_autosummary/aslm.tools.file_functions.create_save_path", "_autosummary/aslm.tools.file_functions.delete_folder", "_autosummary/aslm.tools.file_functions.load_yaml_file", "_autosummary/aslm.tools.file_functions.save_yaml_file", "_autosummary/aslm.tools.image", "_autosummary/aslm.tools.image.create_arrow_image", "_autosummary/aslm.tools.image.text_array", "_autosummary/aslm.tools.image_loaders", "_autosummary/aslm.tools.image_loaders.LazyTiff", "_autosummary/aslm.tools.main_functions", "_autosummary/aslm.tools.main_functions.create_parser", "_autosummary/aslm.tools.main_functions.evaluate_parser_input_arguments", "_autosummary/aslm.tools.main_functions.identify_gpu", "_autosummary/aslm.tools.multipos_table_tools", "_autosummary/aslm.tools.multipos_table_tools.calc_num_tiles", "_autosummary/aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box", "_autosummary/aslm.tools.multipos_table_tools.sign", "_autosummary/aslm.tools.multipos_table_tools.update_table", "_autosummary/aslm.tools.project_stats", "_autosummary/aslm.tools.project_stats.countlines", "_autosummary/aslm.tools.sdf", "_autosummary/aslm.tools.sdf.box", "_autosummary/aslm.tools.sdf.sphere", "_autosummary/aslm.tools.sdf.volume_from_sdf", "_autosummary/aslm.tools.waveform_template_funcs", "_autosummary/aslm.tools.waveform_template_funcs.get_waveform_template_parameters", "_autosummary/aslm.tools.xml_tools", "_autosummary/aslm.tools.xml_tools.dict_to_xml", "_autosummary/aslm.tools.xml_tools.parse_xml", "_autosummary/aslm.view", "_autosummary/aslm.view.custom_widgets", "_autosummary/aslm.view.main_window_content", "_autosummary/aslm.view.popups", "_templates/custom_class", "_templates/custom_module", "api", "config", "contributing/contributing_guidelines", "contributing/contributing_hardware", "contributing/contributing_home", "contributing/contributing_model", "feature_container/feature_container_home", "implementations", "index", "software_configuration", "software_installation", "supported_hardware", "userguide"], "filenames": ["_autosummary/aslm.config.rst", "_autosummary/aslm.config.config.rst", "_autosummary/aslm.config.config.build_nested_dict.rst", "_autosummary/aslm.config.config.get_aslm_path.rst", "_autosummary/aslm.config.config.get_configuration_paths.rst", "_autosummary/aslm.config.config.load_configs.rst", "_autosummary/aslm.config.config.update_config_dict.rst", "_autosummary/aslm.config.config.verify_experiment_config.rst", "_autosummary/aslm.config.config.verify_waveform_constants.rst", "_autosummary/aslm.controller.rst", "_autosummary/aslm.controller.configuration_controller.rst", "_autosummary/aslm.controller.configuration_controller.ConfigurationController.rst", "_autosummary/aslm.controller.thread_pool.rst", "_autosummary/aslm.controller.thread_pool.SelfLockThread.rst", "_autosummary/aslm.controller.thread_pool.SynchronizedThreadPool.rst", "_autosummary/aslm.controller.thread_pool.ThreadWaitlist.rst", "_autosummary/aslm.model.rst", "_autosummary/aslm.model.analysis.rst", "_autosummary/aslm.model.analysis.boundary_detect.rst", "_autosummary/aslm.model.analysis.boundary_detect.binary_detect.rst", "_autosummary/aslm.model.analysis.boundary_detect.find_tissue_boundary_2d.rst", "_autosummary/aslm.model.analysis.boundary_detect.has_tissue.rst", "_autosummary/aslm.model.analysis.boundary_detect.map_boundary.rst", "_autosummary/aslm.model.analysis.camera.rst", "_autosummary/aslm.model.analysis.camera.compute_flatfield_map.rst", "_autosummary/aslm.model.analysis.camera.compute_noise_sigma.rst", "_autosummary/aslm.model.analysis.camera.compute_scmos_offset_and_variance_map.rst", "_autosummary/aslm.model.analysis.camera.compute_signal_to_noise.rst", "_autosummary/aslm.model.analysis.detection.rst", "_autosummary/aslm.model.analysis.detection.add_median_border.rst", "_autosummary/aslm.model.analysis.detection.combine_images.rst", "_autosummary/aslm.model.analysis.detection.log_detection.rst", "_autosummary/aslm.model.analysis.detection.make_inside_image.rst", "_autosummary/aslm.model.analysis.detection.make_normalized_image.rst", "_autosummary/aslm.model.analysis.detection.make_sphere_3D.rst", "_autosummary/aslm.model.analysis.detection.multiscale_surface_filter_3D.rst", "_autosummary/aslm.model.analysis.detection.surface_filter_gauss_3D.rst", "_autosummary/aslm.model.analysis.detection.three_level_segmentation.rst", "_autosummary/aslm.model.analysis.image_contrast.rst", "_autosummary/aslm.model.analysis.image_contrast.estimate_and_correct_flatfield.rst", "_autosummary/aslm.model.analysis.image_contrast.estimate_image_resolution.rst", "_autosummary/aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy.rst", "_autosummary/aslm.model.analysis.image_contrast.image_intensity.rst", "_autosummary/aslm.model.analysis.image_contrast.normalized_dct_shannon_entropy.rst", "_autosummary/aslm.model.analysis.image_decorrelation.rst", "_autosummary/aslm.model.analysis.image_decorrelation.apodize_image.rst", "_autosummary/aslm.model.analysis.image_decorrelation.get_correlation_coefficient.rst", "_autosummary/aslm.model.analysis.image_decorrelation.get_decorrelation_local_maxima.rst", "_autosummary/aslm.model.analysis.image_decorrelation.get_image_decorrelation.rst", "_autosummary/aslm.model.analysis.image_decorrelation.get_radial_average.rst", "_autosummary/aslm.model.analysis.image_decorrelation.image_to_polar.rst", "_autosummary/aslm.model.analysis.image_decorrelation.linear_map.rst", "_autosummary/aslm.model.analysis.image_decorrelation.main_image_decorr.rst", "_autosummary/aslm.model.analysis.image_transform.rst", "_autosummary/aslm.model.analysis.image_transform.deskew_image.rst", "_autosummary/aslm.model.analysis.image_transform.initiate_gpu.rst", "_autosummary/aslm.model.analysis.spectral_unmixing.rst", "_autosummary/aslm.model.analysis.spectral_unmixing.to_do.rst", "_autosummary/aslm.model.concurrency.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.CustodyThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.FancyThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.MyTestClass.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.ObjectInSubprocess.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.PoliteThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.ResultThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.SharedNDArray.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.TestSharedNDArray.rst", "_autosummary/aslm.model.concurrency.proxy_objects.rst", "_autosummary/aslm.model.concurrency.proxy_objects.ProxyManager.rst", "_autosummary/aslm.model.concurrency.proxy_objects.ProxyObject.rst", "_autosummary/aslm.model.concurrency.proxy_objects.launch_custody_thread.rst", "_autosummary/aslm.model.concurrency.proxy_objects.launch_thread.rst", "_autosummary/aslm.model.concurrency.write_parameters.rst", "_autosummary/aslm.model.concurrency.write_parameters.write_Params.rst", "_autosummary/aslm.model.data_sources.rst", "_autosummary/aslm.model.data_sources.bdv_data_source.rst", "_autosummary/aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.rst", "_autosummary/aslm.model.data_sources.data_source.rst", "_autosummary/aslm.model.data_sources.data_source.DataSource.rst", "_autosummary/aslm.model.data_sources.get_data_source.rst", "_autosummary/aslm.model.data_sources.tiff_data_source.rst", "_autosummary/aslm.model.data_sources.tiff_data_source.TiffDataSource.rst", "_autosummary/aslm.model.data_sources.zarr_data_source.rst", "_autosummary/aslm.model.data_sources.zarr_data_source.ZarrDataSource.rst", "_autosummary/aslm.model.device_startup_functions.rst", "_autosummary/aslm.model.device_startup_functions.DummyDeviceConnection.rst", "_autosummary/aslm.model.device_startup_functions.auto_redial.rst", "_autosummary/aslm.model.device_startup_functions.device_not_found.rst", "_autosummary/aslm.model.device_startup_functions.load_camera_connection.rst", "_autosummary/aslm.model.device_startup_functions.load_devices.rst", "_autosummary/aslm.model.device_startup_functions.load_filter_wheel_connection.rst", "_autosummary/aslm.model.device_startup_functions.load_stages.rst", "_autosummary/aslm.model.device_startup_functions.load_zoom_connection.rst", "_autosummary/aslm.model.device_startup_functions.start_camera.rst", "_autosummary/aslm.model.device_startup_functions.start_daq.rst", "_autosummary/aslm.model.device_startup_functions.start_filter_wheel.rst", "_autosummary/aslm.model.device_startup_functions.start_galvo.rst", "_autosummary/aslm.model.device_startup_functions.start_lasers.rst", "_autosummary/aslm.model.device_startup_functions.start_remote_focus_device.rst", "_autosummary/aslm.model.device_startup_functions.start_shutter.rst", "_autosummary/aslm.model.device_startup_functions.start_stage.rst", "_autosummary/aslm.model.device_startup_functions.start_zoom.rst", "_autosummary/aslm.model.devices.rst", "_autosummary/aslm.model.devices.APIs.rst", "_autosummary/aslm.model.devices.APIs.coherent.rst", "_autosummary/aslm.model.devices.APIs.dynamixel.rst", "_autosummary/aslm.model.devices.APIs.logitech.rst", "_autosummary/aslm.model.devices.APIs.omicron.rst", "_autosummary/aslm.model.devices.camera.rst", "_autosummary/aslm.model.devices.camera.camera_base.rst", "_autosummary/aslm.model.devices.camera.camera_base.CameraBase.rst", "_autosummary/aslm.model.devices.camera.camera_hamamatsu.rst", "_autosummary/aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.rst", "_autosummary/aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.rst", "_autosummary/aslm.model.devices.camera.camera_photometrics.rst", "_autosummary/aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.rst", "_autosummary/aslm.model.devices.camera.camera_synthetic.rst", "_autosummary/aslm.model.devices.camera.camera_synthetic.SyntheticCamera.rst", "_autosummary/aslm.model.devices.camera.camera_synthetic.SyntheticCameraController.rst", "_autosummary/aslm.model.devices.daq.rst", "_autosummary/aslm.model.devices.daq.daq_base.rst", "_autosummary/aslm.model.devices.daq.daq_base.DAQBase.rst", "_autosummary/aslm.model.devices.daq.daq_synthetic.rst", "_autosummary/aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.rst", "_autosummary/aslm.model.devices.filter_wheel.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_asi.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_asi.build_filter_wheel_connection.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_base.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_synthetic.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.rst", "_autosummary/aslm.model.devices.galvo.rst", "_autosummary/aslm.model.devices.galvo.galvo_base.rst", "_autosummary/aslm.model.devices.galvo.galvo_base.GalvoBase.rst", "_autosummary/aslm.model.devices.galvo.galvo_synthetic.rst", "_autosummary/aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.rst", "_autosummary/aslm.model.devices.joystick.rst", "_autosummary/aslm.model.devices.joystick.joystick_base.rst", "_autosummary/aslm.model.devices.joystick.joystick_base.JoystickBase.rst", "_autosummary/aslm.model.devices.joystick.joystick_synthetic.rst", "_autosummary/aslm.model.devices.joystick.joystick_synthetic.SyntheticJoystick.rst", "_autosummary/aslm.model.devices.lasers.rst", "_autosummary/aslm.model.devices.lasers.laser_base.rst", "_autosummary/aslm.model.devices.lasers.laser_base.LaserBase.rst", "_autosummary/aslm.model.devices.lasers.laser_synthetic.rst", "_autosummary/aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.rst", "_autosummary/aslm.model.devices.objectives.rst", "_autosummary/aslm.model.devices.objectives.Objective.rst", "_autosummary/aslm.model.devices.remote_focus.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_base.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_synthetic.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.rst", "_autosummary/aslm.model.devices.shutter.rst", "_autosummary/aslm.model.devices.shutter.laser_shutter_base.rst", "_autosummary/aslm.model.devices.shutter.laser_shutter_base.ShutterBase.rst", "_autosummary/aslm.model.devices.shutter.laser_shutter_synthetic.rst", "_autosummary/aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.rst", "_autosummary/aslm.model.devices.stages.rst", "_autosummary/aslm.model.devices.stages.stage_asi.rst", "_autosummary/aslm.model.devices.stages.stage_asi.ASIStage.rst", "_autosummary/aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection.rst", "_autosummary/aslm.model.devices.stages.stage_base.rst", "_autosummary/aslm.model.devices.stages.stage_base.StageBase.rst", "_autosummary/aslm.model.devices.stages.stage_galvo.rst", "_autosummary/aslm.model.devices.stages.stage_galvo.GalvoNIStage.rst", "_autosummary/aslm.model.devices.stages.stage_mcl.rst", "_autosummary/aslm.model.devices.stages.stage_mcl.MCLStage.rst", "_autosummary/aslm.model.devices.stages.stage_mcl.build_MCLStage_connection.rst", "_autosummary/aslm.model.devices.stages.stage_pi.rst", "_autosummary/aslm.model.devices.stages.stage_pi.PIStage.rst", "_autosummary/aslm.model.devices.stages.stage_pi.build_PIStage_connection.rst", "_autosummary/aslm.model.devices.stages.stage_sutter.rst", "_autosummary/aslm.model.devices.stages.stage_sutter.SutterStage.rst", "_autosummary/aslm.model.devices.stages.stage_sutter.build_MP285_connection.rst", "_autosummary/aslm.model.devices.stages.stage_synthetic.rst", "_autosummary/aslm.model.devices.stages.stage_synthetic.SyntheticStage.rst", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.rst", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.rst", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection.rst", "_autosummary/aslm.model.devices.zoom.rst", "_autosummary/aslm.model.devices.zoom.zoom_base.rst", "_autosummary/aslm.model.devices.zoom.zoom_base.ZoomBase.rst", "_autosummary/aslm.model.devices.zoom.zoom_synthetic.rst", "_autosummary/aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.rst", "_autosummary/aslm.model.dummy.rst", "_autosummary/aslm.model.dummy.DummyController.rst", "_autosummary/aslm.model.dummy.DummyDevice.rst", "_autosummary/aslm.model.dummy.DummyMicroscope.rst", "_autosummary/aslm.model.dummy.DummyModel.rst", "_autosummary/aslm.model.features.rst", "_autosummary/aslm.model.features.auto_tile_scan.rst", "_autosummary/aslm.model.features.auto_tile_scan.CalculateFocusRange.rst", "_autosummary/aslm.model.features.autofocus.rst", "_autosummary/aslm.model.features.autofocus.Autofocus.rst", "_autosummary/aslm.model.features.autofocus.power_tent.rst", "_autosummary/aslm.model.features.common_features.rst", "_autosummary/aslm.model.features.common_features.ChangeResolution.rst", "_autosummary/aslm.model.features.common_features.ConProAcquisition.rst", "_autosummary/aslm.model.features.common_features.FindTissueSimple2D.rst", "_autosummary/aslm.model.features.common_features.LoopByCount.rst", "_autosummary/aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable.rst", "_autosummary/aslm.model.features.common_features.PrepareNextChannel.rst", "_autosummary/aslm.model.features.common_features.Snap.rst", "_autosummary/aslm.model.features.common_features.StackPause.rst", "_autosummary/aslm.model.features.common_features.WaitToContinue.rst", "_autosummary/aslm.model.features.common_features.ZStackAcquisition.rst", "_autosummary/aslm.model.features.constant_velocity_acquisition.rst", "_autosummary/aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition.rst", "_autosummary/aslm.model.features.dummy_detective.rst", "_autosummary/aslm.model.features.dummy_detective.Dummy_Detective.rst", "_autosummary/aslm.model.features.feature_container.rst", "_autosummary/aslm.model.features.feature_container.Container.rst", "_autosummary/aslm.model.features.feature_container.DataContainer.rst", "_autosummary/aslm.model.features.feature_container.DataNode.rst", "_autosummary/aslm.model.features.feature_container.SignalContainer.rst", "_autosummary/aslm.model.features.feature_container.SignalNode.rst", "_autosummary/aslm.model.features.feature_container.TreeNode.rst", "_autosummary/aslm.model.features.feature_container.dummy_True.rst", "_autosummary/aslm.model.features.feature_container.dummy_func.rst", "_autosummary/aslm.model.features.feature_container.get_registered_funcs.rst", "_autosummary/aslm.model.features.feature_container.load_features.rst", "_autosummary/aslm.model.features.feature_related_functions.rst", "_autosummary/aslm.model.features.feature_related_functions.SharedList.rst", "_autosummary/aslm.model.features.feature_related_functions.convert_feature_list_to_str.rst", "_autosummary/aslm.model.features.feature_related_functions.convert_str_to_feature_list.rst", "_autosummary/aslm.model.features.feature_related_functions.load_dynamic_parameter_functions.rst", "_autosummary/aslm.model.features.image_writer.rst", "_autosummary/aslm.model.features.image_writer.ImageWriter.rst", "_autosummary/aslm.model.features.remove_empty_tiles.rst", "_autosummary/aslm.model.features.remove_empty_tiles.DetectTissueInStack.rst", "_autosummary/aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.rst", "_autosummary/aslm.model.features.remove_empty_tiles.RemoveEmptyPositions.rst", "_autosummary/aslm.model.features.remove_empty_tiles.detect_tissue.rst", "_autosummary/aslm.model.features.remove_empty_tiles.detect_tissue2.rst", "_autosummary/aslm.model.features.restful_features.rst", "_autosummary/aslm.model.features.restful_features.IlastikSegmentation.rst", "_autosummary/aslm.model.features.restful_features.prepare_service.rst", "_autosummary/aslm.model.features.volume_search.rst", "_autosummary/aslm.model.features.volume_search.VolumeSearch.rst", "_autosummary/aslm.model.features.volume_search.draw_box.rst", "_autosummary/aslm.model.metadata_sources.rst", "_autosummary/aslm.model.metadata_sources.bdv_metadata.rst", "_autosummary/aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.rst", "_autosummary/aslm.model.metadata_sources.metadata.rst", "_autosummary/aslm.model.metadata_sources.metadata.Metadata.rst", "_autosummary/aslm.model.metadata_sources.metadata.XMLMetadata.rst", "_autosummary/aslm.model.metadata_sources.ome_tiff_metadata.rst", "_autosummary/aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.rst", "_autosummary/aslm.model.microscope.rst", "_autosummary/aslm.model.microscope.Microscope.rst", "_autosummary/aslm.model.model.rst", "_autosummary/aslm.model.model.Model.rst", "_autosummary/aslm.model.waveforms.rst", "_autosummary/aslm.model.waveforms.camera_exposure.rst", "_autosummary/aslm.model.waveforms.dc_value.rst", "_autosummary/aslm.model.waveforms.remote_focus_ramp.rst", "_autosummary/aslm.model.waveforms.sawtooth.rst", "_autosummary/aslm.model.waveforms.sine_wave.rst", "_autosummary/aslm.model.waveforms.single_pulse.rst", "_autosummary/aslm.model.waveforms.smooth_waveform.rst", "_autosummary/aslm.model.waveforms.square.rst", "_autosummary/aslm.tools.rst", "_autosummary/aslm.tools.beams.rst", "_autosummary/aslm.tools.beams.fit_gaussian_beam_error.rst", "_autosummary/aslm.tools.beams.fit_gaussian_beam_mse.rst", "_autosummary/aslm.tools.beams.gaussian_beam.rst", "_autosummary/aslm.tools.common_dict_tools.rst", "_autosummary/aslm.tools.common_dict_tools.update_stage_dict.rst", "_autosummary/aslm.tools.common_functions.rst", "_autosummary/aslm.tools.common_functions.VariableWithLock.rst", "_autosummary/aslm.tools.common_functions.build_ref_name.rst", "_autosummary/aslm.tools.common_functions.combine_funcs.rst", "_autosummary/aslm.tools.common_functions.copy_proxy_object.rst", "_autosummary/aslm.tools.common_functions.load_module_from_file.rst", "_autosummary/aslm.tools.decorators.rst", "_autosummary/aslm.tools.decorators.FeatureList.rst", "_autosummary/aslm.tools.decorators.function_timer.rst", "_autosummary/aslm.tools.file_functions.rst", "_autosummary/aslm.tools.file_functions.create_save_path.rst", "_autosummary/aslm.tools.file_functions.delete_folder.rst", "_autosummary/aslm.tools.file_functions.load_yaml_file.rst", "_autosummary/aslm.tools.file_functions.save_yaml_file.rst", "_autosummary/aslm.tools.image.rst", "_autosummary/aslm.tools.image.create_arrow_image.rst", "_autosummary/aslm.tools.image.text_array.rst", "_autosummary/aslm.tools.image_loaders.rst", "_autosummary/aslm.tools.image_loaders.LazyTiff.rst", "_autosummary/aslm.tools.main_functions.rst", "_autosummary/aslm.tools.main_functions.create_parser.rst", "_autosummary/aslm.tools.main_functions.evaluate_parser_input_arguments.rst", "_autosummary/aslm.tools.main_functions.identify_gpu.rst", "_autosummary/aslm.tools.multipos_table_tools.rst", "_autosummary/aslm.tools.multipos_table_tools.calc_num_tiles.rst", "_autosummary/aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box.rst", "_autosummary/aslm.tools.multipos_table_tools.sign.rst", "_autosummary/aslm.tools.multipos_table_tools.update_table.rst", "_autosummary/aslm.tools.project_stats.rst", "_autosummary/aslm.tools.project_stats.countlines.rst", "_autosummary/aslm.tools.sdf.rst", "_autosummary/aslm.tools.sdf.box.rst", "_autosummary/aslm.tools.sdf.sphere.rst", "_autosummary/aslm.tools.sdf.volume_from_sdf.rst", "_autosummary/aslm.tools.waveform_template_funcs.rst", "_autosummary/aslm.tools.waveform_template_funcs.get_waveform_template_parameters.rst", "_autosummary/aslm.tools.xml_tools.rst", "_autosummary/aslm.tools.xml_tools.dict_to_xml.rst", "_autosummary/aslm.tools.xml_tools.parse_xml.rst", "_autosummary/aslm.view.rst", "_autosummary/aslm.view.custom_widgets.rst", "_autosummary/aslm.view.main_window_content.rst", "_autosummary/aslm.view.popups.rst", "_templates/custom_class.rst", "_templates/custom_module.rst", "api.rst", "config.rst", "contributing/contributing_guidelines.rst", "contributing/contributing_hardware.rst", "contributing/contributing_home.rst", "contributing/contributing_model.rst", "feature_container/feature_container_home.rst", "implementations.rst", "index.rst", "software_configuration.rst", "software_installation.rst", "supported_hardware.rst", "userguide.rst"], "titles": ["aslm.config", "aslm.config.config", "aslm.config.config.build_nested_dict", "aslm.config.config.get_aslm_path", "aslm.config.config.get_configuration_paths", "aslm.config.config.load_configs", "aslm.config.config.update_config_dict", "aslm.config.config.verify_experiment_config", "aslm.config.config.verify_waveform_constants", "aslm.controller", "aslm.controller.configuration_controller", "aslm.controller.configuration_controller.ConfigurationController", "aslm.controller.thread_pool", "aslm.controller.thread_pool.SelfLockThread", "aslm.controller.thread_pool.SynchronizedThreadPool", "aslm.controller.thread_pool.ThreadWaitlist", "aslm.model", "aslm.model.analysis", "aslm.model.analysis.boundary_detect", "aslm.model.analysis.boundary_detect.binary_detect", "aslm.model.analysis.boundary_detect.find_tissue_boundary_2d", "aslm.model.analysis.boundary_detect.has_tissue", "aslm.model.analysis.boundary_detect.map_boundary", "aslm.model.analysis.camera", "aslm.model.analysis.camera.compute_flatfield_map", "aslm.model.analysis.camera.compute_noise_sigma", "aslm.model.analysis.camera.compute_scmos_offset_and_variance_map", "aslm.model.analysis.camera.compute_signal_to_noise", "aslm.model.analysis.detection", "aslm.model.analysis.detection.add_median_border", "aslm.model.analysis.detection.combine_images", "aslm.model.analysis.detection.log_detection", "aslm.model.analysis.detection.make_inside_image", "aslm.model.analysis.detection.make_normalized_image", "aslm.model.analysis.detection.make_sphere_3D", "aslm.model.analysis.detection.multiscale_surface_filter_3D", "aslm.model.analysis.detection.surface_filter_gauss_3D", "aslm.model.analysis.detection.three_level_segmentation", "aslm.model.analysis.image_contrast", "aslm.model.analysis.image_contrast.estimate_and_correct_flatfield", "aslm.model.analysis.image_contrast.estimate_image_resolution", "aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy", "aslm.model.analysis.image_contrast.image_intensity", "aslm.model.analysis.image_contrast.normalized_dct_shannon_entropy", "aslm.model.analysis.image_decorrelation", "aslm.model.analysis.image_decorrelation.apodize_image", "aslm.model.analysis.image_decorrelation.get_correlation_coefficient", "aslm.model.analysis.image_decorrelation.get_decorrelation_local_maxima", "aslm.model.analysis.image_decorrelation.get_image_decorrelation", "aslm.model.analysis.image_decorrelation.get_radial_average", "aslm.model.analysis.image_decorrelation.image_to_polar", "aslm.model.analysis.image_decorrelation.linear_map", "aslm.model.analysis.image_decorrelation.main_image_decorr", "aslm.model.analysis.image_transform", "aslm.model.analysis.image_transform.deskew_image", "aslm.model.analysis.image_transform.initiate_gpu", "aslm.model.analysis.spectral_unmixing", "aslm.model.analysis.spectral_unmixing.to_do", "aslm.model.concurrency", "aslm.model.concurrency.concurrency_tools", "aslm.model.concurrency.concurrency_tools.CustodyThread", "aslm.model.concurrency.concurrency_tools.FancyThread", "aslm.model.concurrency.concurrency_tools.MyTestClass", "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess", "aslm.model.concurrency.concurrency_tools.PoliteThread", "aslm.model.concurrency.concurrency_tools.ResultThread", "aslm.model.concurrency.concurrency_tools.SharedNDArray", "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess", "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread", "aslm.model.concurrency.concurrency_tools.TestSharedNDArray", "aslm.model.concurrency.proxy_objects", "aslm.model.concurrency.proxy_objects.ProxyManager", "aslm.model.concurrency.proxy_objects.ProxyObject", "aslm.model.concurrency.proxy_objects.launch_custody_thread", "aslm.model.concurrency.proxy_objects.launch_thread", "aslm.model.concurrency.write_parameters", "aslm.model.concurrency.write_parameters.write_Params", "aslm.model.data_sources", "aslm.model.data_sources.bdv_data_source", "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource", "aslm.model.data_sources.data_source", "aslm.model.data_sources.data_source.DataSource", "aslm.model.data_sources.get_data_source", "aslm.model.data_sources.tiff_data_source", "aslm.model.data_sources.tiff_data_source.TiffDataSource", "aslm.model.data_sources.zarr_data_source", "aslm.model.data_sources.zarr_data_source.ZarrDataSource", "aslm.model.device_startup_functions", "aslm.model.device_startup_functions.DummyDeviceConnection", "aslm.model.device_startup_functions.auto_redial", "aslm.model.device_startup_functions.device_not_found", "aslm.model.device_startup_functions.load_camera_connection", "aslm.model.device_startup_functions.load_devices", "aslm.model.device_startup_functions.load_filter_wheel_connection", "aslm.model.device_startup_functions.load_stages", "aslm.model.device_startup_functions.load_zoom_connection", "aslm.model.device_startup_functions.start_camera", "aslm.model.device_startup_functions.start_daq", "aslm.model.device_startup_functions.start_filter_wheel", "aslm.model.device_startup_functions.start_galvo", "aslm.model.device_startup_functions.start_lasers", "aslm.model.device_startup_functions.start_remote_focus_device", "aslm.model.device_startup_functions.start_shutter", "aslm.model.device_startup_functions.start_stage", "aslm.model.device_startup_functions.start_zoom", "aslm.model.devices", "aslm.model.devices.APIs", "aslm.model.devices.APIs.coherent", "aslm.model.devices.APIs.dynamixel", "aslm.model.devices.APIs.logitech", "aslm.model.devices.APIs.omicron", "aslm.model.devices.camera", "aslm.model.devices.camera.camera_base", "aslm.model.devices.camera.camera_base.CameraBase", "aslm.model.devices.camera.camera_hamamatsu", "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca", "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning", "aslm.model.devices.camera.camera_photometrics", "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix", "aslm.model.devices.camera.camera_synthetic", "aslm.model.devices.camera.camera_synthetic.SyntheticCamera", "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController", "aslm.model.devices.daq", "aslm.model.devices.daq.daq_base", "aslm.model.devices.daq.daq_base.DAQBase", "aslm.model.devices.daq.daq_synthetic", "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ", "aslm.model.devices.filter_wheel", "aslm.model.devices.filter_wheel.filter_wheel_asi", "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel", "aslm.model.devices.filter_wheel.filter_wheel_asi.build_filter_wheel_connection", "aslm.model.devices.filter_wheel.filter_wheel_base", "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase", "aslm.model.devices.filter_wheel.filter_wheel_sutter", "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel", "aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection", "aslm.model.devices.filter_wheel.filter_wheel_synthetic", "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel", "aslm.model.devices.galvo", "aslm.model.devices.galvo.galvo_base", "aslm.model.devices.galvo.galvo_base.GalvoBase", "aslm.model.devices.galvo.galvo_synthetic", "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo", "aslm.model.devices.joystick", "aslm.model.devices.joystick.joystick_base", "aslm.model.devices.joystick.joystick_base.JoystickBase", "aslm.model.devices.joystick.joystick_synthetic", "aslm.model.devices.joystick.joystick_synthetic.SyntheticJoystick", "aslm.model.devices.lasers", "aslm.model.devices.lasers.laser_base", "aslm.model.devices.lasers.laser_base.LaserBase", "aslm.model.devices.lasers.laser_synthetic", "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser", "aslm.model.devices.objectives", "aslm.model.devices.objectives.Objective", "aslm.model.devices.remote_focus", "aslm.model.devices.remote_focus.remote_focus_base", "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase", "aslm.model.devices.remote_focus.remote_focus_synthetic", "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus", "aslm.model.devices.shutter", "aslm.model.devices.shutter.laser_shutter_base", "aslm.model.devices.shutter.laser_shutter_base.ShutterBase", "aslm.model.devices.shutter.laser_shutter_synthetic", "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter", "aslm.model.devices.stages", "aslm.model.devices.stages.stage_asi", "aslm.model.devices.stages.stage_asi.ASIStage", "aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection", "aslm.model.devices.stages.stage_base", "aslm.model.devices.stages.stage_base.StageBase", "aslm.model.devices.stages.stage_galvo", "aslm.model.devices.stages.stage_galvo.GalvoNIStage", "aslm.model.devices.stages.stage_mcl", "aslm.model.devices.stages.stage_mcl.MCLStage", "aslm.model.devices.stages.stage_mcl.build_MCLStage_connection", "aslm.model.devices.stages.stage_pi", "aslm.model.devices.stages.stage_pi.PIStage", "aslm.model.devices.stages.stage_pi.build_PIStage_connection", "aslm.model.devices.stages.stage_sutter", "aslm.model.devices.stages.stage_sutter.SutterStage", "aslm.model.devices.stages.stage_sutter.build_MP285_connection", "aslm.model.devices.stages.stage_synthetic", "aslm.model.devices.stages.stage_synthetic.SyntheticStage", "aslm.model.devices.stages.stage_tl_kcube_inertial", "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage", "aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection", "aslm.model.devices.zoom", "aslm.model.devices.zoom.zoom_base", "aslm.model.devices.zoom.zoom_base.ZoomBase", "aslm.model.devices.zoom.zoom_synthetic", "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom", "aslm.model.dummy", "aslm.model.dummy.DummyController", "aslm.model.dummy.DummyDevice", "aslm.model.dummy.DummyMicroscope", "aslm.model.dummy.DummyModel", "aslm.model.features", "aslm.model.features.auto_tile_scan", "aslm.model.features.auto_tile_scan.CalculateFocusRange", "aslm.model.features.autofocus", "aslm.model.features.autofocus.Autofocus", "aslm.model.features.autofocus.power_tent", "aslm.model.features.common_features", "aslm.model.features.common_features.ChangeResolution", "aslm.model.features.common_features.ConProAcquisition", "aslm.model.features.common_features.FindTissueSimple2D", "aslm.model.features.common_features.LoopByCount", "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable", "aslm.model.features.common_features.PrepareNextChannel", "aslm.model.features.common_features.Snap", "aslm.model.features.common_features.StackPause", "aslm.model.features.common_features.WaitToContinue", "aslm.model.features.common_features.ZStackAcquisition", "aslm.model.features.constant_velocity_acquisition", "aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition", "aslm.model.features.dummy_detective", "aslm.model.features.dummy_detective.Dummy_Detective", "aslm.model.features.feature_container", "aslm.model.features.feature_container.Container", "aslm.model.features.feature_container.DataContainer", "aslm.model.features.feature_container.DataNode", "aslm.model.features.feature_container.SignalContainer", "aslm.model.features.feature_container.SignalNode", "aslm.model.features.feature_container.TreeNode", "aslm.model.features.feature_container.dummy_True", "aslm.model.features.feature_container.dummy_func", "aslm.model.features.feature_container.get_registered_funcs", "aslm.model.features.feature_container.load_features", "aslm.model.features.feature_related_functions", "aslm.model.features.feature_related_functions.SharedList", "aslm.model.features.feature_related_functions.convert_feature_list_to_str", "aslm.model.features.feature_related_functions.convert_str_to_feature_list", "aslm.model.features.feature_related_functions.load_dynamic_parameter_functions", "aslm.model.features.image_writer", "aslm.model.features.image_writer.ImageWriter", "aslm.model.features.remove_empty_tiles", "aslm.model.features.remove_empty_tiles.DetectTissueInStack", "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord", "aslm.model.features.remove_empty_tiles.RemoveEmptyPositions", "aslm.model.features.remove_empty_tiles.detect_tissue", "aslm.model.features.remove_empty_tiles.detect_tissue2", "aslm.model.features.restful_features", "aslm.model.features.restful_features.IlastikSegmentation", "aslm.model.features.restful_features.prepare_service", "aslm.model.features.volume_search", "aslm.model.features.volume_search.VolumeSearch", "aslm.model.features.volume_search.draw_box", "aslm.model.metadata_sources", "aslm.model.metadata_sources.bdv_metadata", "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata", "aslm.model.metadata_sources.metadata", "aslm.model.metadata_sources.metadata.Metadata", "aslm.model.metadata_sources.metadata.XMLMetadata", "aslm.model.metadata_sources.ome_tiff_metadata", "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata", "aslm.model.microscope", "aslm.model.microscope.Microscope", "aslm.model.model", "aslm.model.model.Model", "aslm.model.waveforms", "aslm.model.waveforms.camera_exposure", "aslm.model.waveforms.dc_value", "aslm.model.waveforms.remote_focus_ramp", "aslm.model.waveforms.sawtooth", "aslm.model.waveforms.sine_wave", "aslm.model.waveforms.single_pulse", "aslm.model.waveforms.smooth_waveform", "aslm.model.waveforms.square", "aslm.tools", "aslm.tools.beams", "aslm.tools.beams.fit_gaussian_beam_error", "aslm.tools.beams.fit_gaussian_beam_mse", "aslm.tools.beams.gaussian_beam", "aslm.tools.common_dict_tools", "aslm.tools.common_dict_tools.update_stage_dict", "aslm.tools.common_functions", "aslm.tools.common_functions.VariableWithLock", "aslm.tools.common_functions.build_ref_name", "aslm.tools.common_functions.combine_funcs", "aslm.tools.common_functions.copy_proxy_object", "aslm.tools.common_functions.load_module_from_file", "aslm.tools.decorators", "aslm.tools.decorators.FeatureList", "aslm.tools.decorators.function_timer", "aslm.tools.file_functions", "aslm.tools.file_functions.create_save_path", "aslm.tools.file_functions.delete_folder", "aslm.tools.file_functions.load_yaml_file", "aslm.tools.file_functions.save_yaml_file", "aslm.tools.image", "aslm.tools.image.create_arrow_image", "aslm.tools.image.text_array", "aslm.tools.image_loaders", "aslm.tools.image_loaders.LazyTiff", "aslm.tools.main_functions", "aslm.tools.main_functions.create_parser", "aslm.tools.main_functions.evaluate_parser_input_arguments", "aslm.tools.main_functions.identify_gpu", "aslm.tools.multipos_table_tools", "aslm.tools.multipos_table_tools.calc_num_tiles", "aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box", "aslm.tools.multipos_table_tools.sign", "aslm.tools.multipos_table_tools.update_table", "aslm.tools.project_stats", "aslm.tools.project_stats.countlines", "aslm.tools.sdf", "aslm.tools.sdf.box", "aslm.tools.sdf.sphere", "aslm.tools.sdf.volume_from_sdf", "aslm.tools.waveform_template_funcs", "aslm.tools.waveform_template_funcs.get_waveform_template_parameters", "aslm.tools.xml_tools", "aslm.tools.xml_tools.dict_to_xml", "aslm.tools.xml_tools.parse_xml", "aslm.view", "aslm.view.custom_widgets", "aslm.view.main_window_content", "aslm.view.popups", "&lt;no title&gt;", "&lt;no title&gt;", "API Reference", "Configuring ASLM", "Contributing Guidelines", "Adding New Hardware", "Contributing to ASLM", "Adding New Model Features", "Feature Container", "Microscope Implementations", "<strong>Autonomous Software for Light Microscopy</strong>", "Software Configuration", "Software Installation", "Supported Hardware", "User Guide"], "terms": {"modul": [0, 9, 13, 16, 17, 58, 60, 65, 66, 73, 74, 77, 105, 106, 107, 108, 109, 110, 111, 122, 127, 138, 143, 148, 155, 160, 165, 187, 197, 227, 228, 248, 269, 281, 315, 316, 317, 318, 320, 327, 328], "function": [1, 13, 14, 18, 23, 28, 30, 32, 35, 36, 38, 44, 47, 53, 54, 56, 57, 60, 62, 65, 66, 67, 68, 69, 70, 73, 74, 77, 87, 89, 115, 116, 118, 120, 128, 133, 166, 173, 176, 179, 184, 196, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 213, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 245, 259, 260, 264, 268, 270, 271, 272, 274, 276, 278, 279, 280, 281, 282, 284, 285, 286, 290, 295, 299, 304, 306, 307, 308, 309, 310, 311, 312, 323, 328, 329, 330, 332], "manag": [2, 5, 6, 7, 8, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 113, 115, 118, 120, 124, 126, 162, 164, 167, 170, 172, 177, 189, 205, 208, 209, 211, 213, 219, 220, 222, 331, 332], "parent_dict": [2, 6], "key_nam": 2, "dict_data": 2, "nest": [2, 66, 228, 250, 253, 255], "dictionari": [2, 5, 6, 11, 13, 60, 65, 66, 92, 99, 100, 124, 126, 129, 132, 134, 137, 140, 142, 157, 159, 167, 170, 172, 174, 177, 178, 180, 183, 185, 189, 191, 199, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 221, 223, 224, 227, 228, 231, 233, 235, 237, 250, 253, 255, 257, 259, 275, 286, 288, 289, 297, 311, 313, 314, 322, 327, 330], "recurs": [2, 66, 231], "paramet": [2, 4, 5, 6, 7, 11, 14, 19, 20, 21, 24, 25, 26, 39, 62, 66, 67, 68, 69, 79, 81, 82, 84, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 113, 115, 116, 118, 120, 121, 124, 126, 129, 132, 134, 137, 140, 142, 154, 157, 159, 167, 168, 170, 172, 174, 177, 178, 180, 181, 183, 185, 189, 191, 193, 194, 195, 196, 201, 202, 215, 232, 235, 246, 257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 271, 272, 273, 275, 278, 279, 280, 281, 284, 286, 287, 288, 289, 291, 292, 294, 296, 297, 298, 300, 301, 302, 303, 305, 307, 308, 309, 311, 313, 314, 322, 329, 330], "multiprocess": [2, 5, 6, 7, 71, 91, 94, 96, 167, 170, 172, 177], "share": [2, 5, 6, 7, 60, 66, 71, 72, 73, 126, 228, 230, 259, 323, 332], "object": [2, 5, 6, 7, 11, 13, 14, 15, 60, 62, 63, 65, 66, 67, 71, 72, 73, 76, 81, 88, 89, 96, 98, 99, 100, 101, 102, 103, 104, 113, 115, 118, 120, 121, 124, 132, 140, 145, 150, 157, 162, 164, 167, 168, 170, 172, 177, 178, 180, 189, 191, 193, 194, 195, 196, 199, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 219, 221, 223, 224, 228, 230, 235, 237, 238, 239, 243, 246, 252, 257, 259, 275, 277, 280, 283, 291, 294, 296, 297, 298, 303, 309, 322, 323, 328, 329, 330, 332], "e": [2, 4, 5, 6, 7, 11, 25, 66, 84, 115, 116, 118, 120, 130, 132, 134, 135, 137, 140, 142, 168, 178, 189, 191, 205, 206, 213, 230, 233, 235, 253, 300, 322, 327, 331, 332], "g": [2, 5, 6, 7, 11, 66, 84, 115, 116, 118, 120, 130, 132, 134, 135, 137, 140, 142, 154, 168, 178, 189, 191, 205, 206, 213, 233, 235, 253, 300, 322, 327, 331, 332], "dict": [2, 5, 6, 7, 11, 14, 19, 79, 81, 84, 86, 92, 124, 126, 132, 134, 137, 140, 142, 154, 157, 159, 167, 170, 172, 174, 177, 178, 180, 183, 185, 189, 191, 199, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 221, 223, 224, 227, 235, 237, 257, 259, 275, 280, 286, 288, 289, 311, 313, 314, 322], "between": [2, 5, 6, 7, 20, 66, 118, 189, 191, 206, 212, 220, 222, 230, 246, 271, 272, 278, 300, 322, 330, 332], "process": [2, 5, 6, 7, 63, 66, 71, 72, 74, 199, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 220, 221, 223, 228, 231, 237, 238, 239, 259, 323, 327], "we": [2, 6, 62, 63, 65, 66, 69, 72, 79, 81, 84, 86, 115, 116, 134, 137, 195, 235, 250, 253, 255, 257, 322, 323, 324, 325, 327, 330, 331, 332], "ar": [2, 6, 11, 13, 60, 65, 66, 67, 84, 86, 102, 115, 116, 118, 120, 126, 167, 170, 172, 174, 177, 180, 183, 185, 195, 199, 201, 209, 212, 215, 219, 220, 221, 222, 223, 224, 227, 228, 231, 233, 235, 246, 253, 257, 259, 271, 272, 287, 294, 322, 323, 327, 328, 330, 331, 332], "ad": [2, 6, 62, 65, 66, 167, 228, 246, 296, 303, 325, 327, 329], "str": [2, 3, 4, 6, 11, 14, 19, 20, 21, 24, 26, 62, 66, 67, 68, 69, 79, 81, 82, 84, 86, 96, 98, 99, 100, 101, 102, 103, 104, 113, 115, 116, 118, 120, 121, 124, 126, 129, 130, 132, 134, 135, 137, 140, 142, 154, 157, 159, 162, 164, 167, 168, 170, 172, 174, 177, 178, 180, 181, 183, 185, 189, 193, 204, 205, 206, 207, 211, 213, 221, 223, 224, 227, 230, 231, 232, 233, 235, 246, 250, 253, 255, 257, 259, 273, 278, 281, 286, 287, 288, 289, 291, 292, 294, 297, 305, 311, 313], "name": [2, 6, 11, 13, 14, 60, 62, 63, 65, 66, 67, 68, 69, 79, 81, 84, 86, 96, 98, 99, 100, 101, 102, 103, 104, 113, 115, 118, 120, 121, 124, 126, 129, 132, 134, 137, 140, 142, 154, 157, 159, 162, 164, 167, 170, 172, 177, 178, 180, 189, 195, 221, 223, 224, 230, 231, 233, 235, 246, 257, 259, 278, 281, 287, 289, 311, 322, 323, 327, 330, 332], "insert": [2, 66, 230, 327, 332], "return": [2, 3, 4, 5, 6, 11, 13, 19, 20, 21, 25, 36, 39, 43, 46, 47, 49, 54, 60, 62, 63, 65, 66, 72, 79, 81, 82, 84, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 113, 115, 116, 118, 120, 121, 124, 126, 129, 132, 134, 137, 140, 142, 154, 157, 159, 164, 167, 168, 170, 172, 174, 177, 178, 180, 181, 183, 185, 189, 191, 193, 194, 196, 201, 202, 215, 230, 232, 235, 250, 252, 253, 255, 257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 271, 272, 273, 275, 278, 279, 280, 281, 284, 286, 288, 289, 291, 292, 294, 296, 297, 298, 300, 301, 302, 303, 307, 308, 309, 311, 313, 314, 323, 327], "type": [2, 3, 5, 6, 11, 20, 21, 25, 39, 66, 79, 81, 82, 84, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 113, 115, 116, 118, 120, 121, 124, 126, 129, 130, 132, 134, 135, 137, 140, 142, 154, 157, 159, 162, 164, 167, 168, 170, 172, 174, 177, 178, 180, 181, 183, 185, 189, 191, 193, 194, 195, 196, 199, 201, 202, 204, 205, 208, 213, 215, 220, 221, 223, 224, 227, 230, 232, 235, 250, 252, 253, 255, 257, 259, 262, 263, 264, 265, 266, 267, 268, 271, 272, 273, 275, 278, 279, 280, 281, 284, 286, 288, 289, 291, 292, 294, 296, 298, 300, 301, 302, 303, 307, 308, 309, 313, 314, 322, 327, 329, 330], "none": [2, 13, 14, 19, 20, 21, 31, 46, 48, 51, 60, 62, 63, 65, 66, 67, 68, 69, 71, 72, 73, 74, 79, 81, 84, 86, 115, 116, 118, 120, 140, 142, 147, 157, 159, 167, 177, 180, 193, 194, 196, 199, 201, 204, 205, 206, 207, 208, 209, 211, 212, 213, 215, 219, 220, 221, 222, 223, 224, 226, 230, 232, 235, 237, 238, 250, 252, 253, 255, 257, 259, 275, 288, 291, 294, 296, 303, 305, 313, 330], "exampl": [2, 3, 6, 60, 65, 66, 73, 74, 79, 81, 82, 84, 86, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 157, 159, 167, 172, 174, 177, 180, 183, 185, 193, 194, 195, 196, 235, 261, 262, 263, 264, 265, 266, 268, 271, 287, 294, 298, 309, 323, 324, 327, 330, 331, 332], "establish": 3, "program": [3, 13, 60, 65, 230, 323], "home": [3, 129], "directori": [3, 213, 233, 235, 253, 286, 287, 289, 305, 330, 331], "appdata": [3, 322, 330], "local": [3, 14, 24, 47, 48, 66, 322, 330, 331], "window": [3, 240, 286, 322, 327, 330, 331, 332], "mac": [3, 322, 330, 331], "linux": [3, 322, 330, 331], "path": [3, 4, 5, 66, 233, 259, 281, 286, 287, 288, 294, 297, 305, 323, 331], "c": [3, 66, 178, 255, 322, 330, 331], "user": [3, 66, 231, 259, 286, 298, 322, 325, 327, 329, 330, 331, 332], "usernam": [3, 331], "get": [4, 11, 14, 65, 66, 79, 81, 82, 84, 86, 115, 116, 118, 120, 167, 195, 201, 213, 227, 257, 259, 311, 323, 331], "variou": [4, 68, 69, 199, 322, 330, 332], "configur": [4, 5, 6, 7, 8, 11, 79, 81, 84, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 113, 115, 116, 118, 120, 124, 126, 129, 132, 134, 137, 140, 142, 150, 152, 157, 159, 162, 164, 167, 170, 172, 174, 177, 180, 183, 185, 189, 191, 195, 196, 199, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 227, 228, 231, 233, 235, 237, 246, 250, 252, 253, 255, 257, 259, 297, 323, 327, 329, 331, 332, 333], "file": [4, 5, 6, 7, 57, 66, 79, 81, 82, 84, 86, 120, 231, 233, 235, 250, 252, 253, 255, 259, 281, 287, 288, 289, 294, 297, 305, 314, 322, 323, 327, 329, 331, 332], "us": [4, 11, 13, 25, 39, 40, 57, 60, 62, 65, 66, 67, 68, 69, 71, 72, 73, 74, 118, 121, 142, 193, 194, 195, 196, 199, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 233, 235, 237, 238, 239, 240, 241, 246, 253, 255, 257, 259, 261, 262, 263, 264, 265, 266, 268, 292, 294, 305, 322, 323, 324, 327, 330, 331, 332], "configuration_path": [4, 297], "contain": [4, 5, 7, 19, 20, 21, 66, 177, 178, 180, 196, 199, 201, 204, 205, 206, 208, 209, 210, 211, 212, 213, 220, 221, 222, 223, 224, 227, 228, 231, 233, 237, 238, 240, 241, 259, 286, 294, 303, 322, 329, 330, 333], "global": [4, 14, 24, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 113, 115, 118, 120, 124, 126, 162, 164, 167, 170, 172, 177, 189, 259], "microscop": [4, 11, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 113, 115, 118, 120, 124, 126, 140, 142, 157, 159, 162, 164, 167, 170, 172, 177, 180, 189, 191, 195, 199, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 221, 223, 224, 237, 238, 239, 246, 259, 311, 323, 327, 329, 331, 332], "i": [4, 11, 13, 21, 25, 29, 54, 57, 60, 62, 65, 66, 67, 69, 73, 74, 84, 86, 90, 91, 115, 116, 118, 120, 126, 129, 142, 167, 170, 172, 174, 177, 180, 183, 185, 189, 191, 193, 194, 195, 196, 199, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 233, 235, 237, 238, 239, 240, 241, 246, 253, 257, 259, 263, 271, 272, 273, 275, 287, 289, 297, 298, 301, 303, 305, 309, 322, 323, 324, 327, 328, 329, 330, 331, 332], "hardwar": [4, 66, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 113, 115, 118, 120, 162, 164, 167, 170, 172, 174, 177, 185, 189, 235, 257, 325, 327, 329, 331, 333], "setup": [4, 194, 195, 322, 329, 330, 332], "experiment_path": [4, 297], "per": [4, 13, 60, 65, 66, 79, 86, 129, 140, 142, 167, 215, 327, 332], "experi": [4, 7, 79, 81, 84, 86, 199, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 235, 246, 250, 252, 253, 255, 289, 297, 323, 327, 331], "waveform_constants_path": [4, 297], "remot": [4, 11, 101, 126, 140, 157, 159, 263, 297, 328, 332], "focu": [4, 11, 101, 126, 140, 157, 159, 167, 170, 189, 191, 199, 201, 213, 250, 257, 263, 301, 322, 327, 332], "all": [4, 7, 13, 14, 20, 60, 62, 65, 66, 67, 68, 69, 84, 115, 116, 118, 120, 124, 126, 167, 170, 172, 174, 177, 180, 183, 185, 195, 213, 215, 230, 257, 259, 287, 294, 300, 322, 323, 327, 330, 332], "magnif": [4, 189, 191, 206], "rest_api_path": [4, 297], "rest": [4, 118, 297, 322, 329], "api": [4, 66, 91, 115, 116, 118, 121, 167, 177, 297, 322, 329, 332], "waveform_templates_path": [4, 297], "waveform": [4, 124, 126, 140, 142, 157, 159, 257, 259, 297, 311, 323, 329, 332], "templat": [4, 66, 297, 311, 329], "kwarg": [5, 13, 14, 60, 62, 65, 66, 67, 68, 69, 73, 74, 89, 221, 223, 224, 244, 259], "load": [5, 66, 92, 118, 129, 228, 233, 257, 259, 281, 288, 294, 323, 329], "list": [5, 11, 19, 20, 35, 66, 100, 177, 180, 193, 196, 199, 201, 205, 206, 207, 208, 210, 212, 213, 219, 220, 222, 225, 226, 228, 230, 231, 232, 233, 237, 238, 239, 246, 250, 255, 257, 259, 278, 279, 280, 288, 291, 303, 322, 327, 329, 330], "config_dict": 5, "amalgam": 5, "input": [5, 35, 39, 45, 46, 47, 48, 49, 50, 51, 66, 231, 241, 286, 296, 297, 309, 332], "config_nam": 6, "new_config": 6, "bool": [6, 11, 19, 20, 21, 24, 26, 62, 66, 67, 68, 69, 79, 81, 84, 86, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 115, 116, 118, 129, 132, 134, 137, 167, 172, 174, 177, 180, 183, 185, 189, 191, 196, 199, 204, 205, 207, 208, 209, 210, 212, 213, 219, 221, 222, 223, 224, 225, 237, 238, 239, 240, 241, 246, 250, 257, 259, 271, 273, 289, 298, 303, 305], "read": [6, 66, 79, 81, 84, 86, 134, 137, 180, 189, 191, 330], "new": [6, 11, 51, 66, 84, 167, 172, 174, 177, 180, 183, 185, 205, 209, 213, 215, 246, 279, 286, 291, 303, 323, 325, 327, 329, 330, 331], "updat": [6, 66, 204, 205, 207, 208, 213, 221, 223, 224, 228, 233, 238, 257, 259, 275, 291, 303, 322, 329, 331], "info": [6, 11], "subdictionari": 6, "replac": [6, 66, 233, 322, 330], "valu": [6, 11, 13, 19, 43, 51, 60, 65, 66, 115, 116, 118, 121, 167, 170, 172, 174, 177, 180, 183, 185, 189, 191, 199, 201, 202, 204, 205, 207, 208, 209, 210, 212, 213, 221, 223, 224, 225, 230, 232, 233, 240, 246, 253, 262, 300, 309, 322, 323, 327, 330, 331], "yaml": [6, 7, 233, 288, 289, 323, 330], "true": [6, 13, 22, 60, 62, 65, 66, 67, 68, 69, 129, 134, 137, 167, 170, 172, 174, 177, 180, 183, 185, 207, 221, 223, 225, 227, 237, 238, 239, 240, 257, 259, 271, 289, 298, 305, 327], "fals": [6, 13, 24, 43, 60, 62, 63, 65, 66, 67, 68, 69, 84, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 115, 116, 118, 120, 167, 170, 172, 174, 177, 180, 183, 185, 189, 191, 195, 207, 213, 221, 222, 223, 224, 230, 237, 238, 240, 241, 246, 257, 259, 271, 289, 303], "verifi": [7, 167, 170, 172, 174, 177, 180, 183, 185], "waveform_const": 7, "class": [10, 11, 12, 13, 14, 15, 59, 60, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 128, 129, 131, 132, 133, 134, 136, 137, 139, 140, 141, 142, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 169, 170, 171, 172, 173, 174, 176, 177, 179, 180, 182, 183, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 229, 230, 234, 235, 236, 237, 238, 239, 242, 243, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 276, 277, 281, 282, 283, 293, 294, 323, 324], "base": [11, 13, 14, 15, 20, 48, 60, 62, 63, 65, 66, 67, 68, 69, 71, 72, 76, 79, 81, 84, 86, 88, 113, 115, 116, 118, 120, 121, 124, 126, 129, 132, 134, 137, 140, 142, 145, 147, 149, 150, 152, 154, 157, 159, 162, 164, 167, 170, 172, 174, 177, 180, 183, 185, 189, 191, 193, 194, 195, 196, 199, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 230, 233, 235, 237, 238, 239, 241, 243, 246, 250, 252, 253, 255, 257, 259, 277, 283, 294, 301, 303, 322, 323, 324, 331, 332], "thi": [11, 13, 54, 57, 60, 62, 63, 65, 66, 67, 68, 69, 72, 73, 74, 79, 81, 84, 86, 115, 116, 118, 120, 126, 142, 167, 170, 172, 174, 177, 180, 183, 185, 189, 191, 193, 194, 195, 196, 199, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 233, 235, 237, 238, 239, 240, 241, 253, 257, 259, 273, 278, 279, 280, 281, 286, 287, 300, 301, 305, 311, 322, 323, 324, 327, 328, 329, 330, 331, 332], "The": [11, 13, 14, 60, 65, 66, 73, 74, 89, 126, 142, 159, 167, 189, 191, 193, 194, 195, 196, 199, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 219, 220, 221, 222, 223, 224, 227, 228, 230, 231, 233, 237, 238, 239, 240, 241, 263, 267, 275, 284, 300, 302, 305, 309, 322, 323, 329, 330, 331, 332], "microscope_nam": [11, 90, 96, 98, 99, 100, 101, 102, 103, 104, 113, 115, 116, 118, 120, 124, 126, 129, 132, 134, 137, 140, 142, 150, 152, 157, 159, 162, 164, 167, 170, 172, 174, 177, 180, 183, 185, 189, 191, 257], "microscope_config": 11, "change_microscop": 11, "accord": [11, 66, 115, 116, 118, 120, 230], "get_microscope_configuration_dict": 11, "get_stage_position_limit": 11, "suffix": 11, "posit": [11, 19, 21, 47, 66, 84, 129, 132, 134, 137, 167, 170, 172, 174, 177, 180, 183, 185, 189, 191, 201, 205, 206, 208, 213, 237, 238, 239, 246, 250, 257, 259, 275, 300, 301, 303, 322, 330, 332], "limit": [11, 62, 66, 67, 68, 69, 167, 170, 172, 177, 323], "stage": [11, 94, 103, 189, 191, 199, 201, 204, 205, 208, 209, 210, 211, 212, 213, 215, 237, 238, 246, 250, 257, 259, 323, 324, 327, 329], "__init__": [11, 13, 14, 15, 60, 62, 63, 65, 66, 67, 68, 69, 71, 72, 76, 79, 81, 84, 86, 88, 89, 113, 115, 116, 118, 120, 121, 124, 126, 129, 132, 134, 137, 140, 142, 145, 147, 150, 152, 154, 157, 159, 162, 164, 167, 170, 172, 174, 177, 180, 183, 185, 189, 191, 193, 194, 195, 196, 199, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 230, 235, 237, 238, 239, 243, 246, 250, 252, 253, 255, 257, 259, 277, 283, 294, 327], "method": [11, 13, 14, 15, 60, 62, 63, 65, 66, 67, 68, 69, 71, 72, 76, 79, 81, 84, 86, 88, 113, 115, 116, 118, 120, 121, 124, 126, 129, 132, 134, 137, 140, 142, 145, 147, 150, 152, 154, 157, 159, 162, 164, 167, 170, 172, 174, 177, 180, 183, 185, 189, 191, 193, 194, 195, 196, 201, 215, 217, 235, 241, 243, 246, 250, 252, 253, 255, 257, 259, 277, 283, 294, 327], "attribut": [11, 13, 60, 65, 66, 67, 79, 81, 84, 86, 113, 115, 116, 118, 120, 130, 135, 162, 164, 167, 170, 172, 174, 177, 180, 183, 185, 250, 252, 253, 255, 294], "result": [11, 65, 66, 74, 89, 115, 116, 118, 189, 191, 199, 221, 223, 231, 240, 280, 323], "microscope_configuration_dict": 11, "_min": 11, "_max": 11, "position_limit": 11, "depend": [11, 66, 129, 301, 327, 329], "min": [11, 19, 21, 66, 167, 170, 172, 177, 322, 330], "max": [11, 66, 167, 170, 172, 177, 322, 330, 332], "x": [11, 21, 43, 66, 79, 81, 84, 86, 167, 170, 172, 174, 177, 180, 183, 185, 202, 213, 246, 250, 259, 271, 272, 291, 292, 294, 300, 301, 302, 303, 309, 322, 330], "2000": [11, 66, 322, 332], "y": [11, 21, 36, 43, 66, 79, 81, 84, 86, 167, 170, 172, 174, 177, 180, 183, 185, 202, 213, 246, 250, 259, 291, 292, 294, 301, 303, 309, 322, 330], "z": [11, 36, 66, 79, 81, 84, 86, 154, 167, 170, 172, 174, 177, 180, 183, 185, 208, 213, 215, 237, 238, 246, 250, 271, 272, 273, 301, 303, 309, 322, 327, 330], "theta": [11, 167, 170, 172, 174, 177, 180, 183, 185, 213, 250, 301, 322, 330], "0": [11, 20, 21, 25, 31, 48, 66, 89, 91, 99, 100, 103, 115, 116, 118, 120, 130, 132, 134, 135, 137, 140, 142, 157, 159, 167, 170, 172, 174, 177, 180, 181, 183, 185, 189, 191, 194, 195, 206, 230, 237, 238, 240, 241, 246, 255, 259, 261, 262, 263, 264, 265, 266, 268, 271, 272, 273, 292, 300, 305, 309, 322, 328, 330], "f": [11, 65, 66, 167, 170, 172, 174, 177, 180, 183, 185, 189, 191, 201, 237, 238, 250, 301, 303, 322, 323, 328, 330, 332], "properti": [11, 13, 60, 65, 66, 79, 81, 84, 86, 115, 116, 118, 120, 154, 221, 223, 224, 250, 252, 253, 255, 294, 323, 327], "camera_config_dict": 11, "camera": [11, 19, 21, 66, 86, 91, 96, 124, 126, 140, 142, 157, 195, 210, 257, 259, 261, 322, 328, 329], "camera_set": 11, "set": [11, 13, 24, 60, 62, 65, 66, 79, 81, 84, 86, 113, 115, 116, 118, 120, 126, 129, 134, 137, 150, 152, 167, 170, 172, 174, 177, 180, 183, 185, 194, 195, 199, 204, 219, 220, 221, 222, 223, 224, 230, 233, 259, 303, 322, 324, 327, 330, 331], "camera_flip_flag": 11, "flip": [11, 246], "flag": [11, 66, 115, 116, 118, 120, 129, 132, 134, 137, 196, 205, 207, 213, 219, 220, 222, 230, 239, 259, 301, 331], "flip_flag": 11, "camera_pixel": 11, "default": [11, 13, 14, 39, 48, 60, 62, 65, 66, 115, 116, 118, 120, 132, 134, 137, 140, 167, 199, 204, 206, 207, 211, 213, 215, 219, 220, 221, 222, 223, 224, 227, 230, 235, 237, 238, 239, 240, 241, 257, 259, 265, 289, 292, 297, 322, 323, 327, 330, 332], "pixel": [11, 19, 20, 21, 25, 45, 259, 271, 272, 273, 292, 309], "from": [11, 13, 14, 24, 27, 33, 39, 50, 51, 57, 60, 62, 65, 66, 67, 71, 73, 74, 79, 81, 84, 86, 89, 92, 115, 116, 118, 120, 134, 137, 154, 164, 177, 180, 201, 207, 219, 220, 221, 222, 223, 224, 230, 233, 239, 250, 252, 253, 255, 257, 259, 263, 281, 286, 287, 288, 292, 300, 305, 307, 308, 309, 313, 322, 323, 324, 327, 329, 331, 332], "x_pixel": [11, 330], "int": [11, 19, 20, 21, 24, 26, 62, 66, 67, 68, 69, 79, 81, 84, 86, 89, 91, 99, 100, 103, 113, 115, 116, 118, 120, 121, 126, 130, 132, 134, 135, 137, 140, 142, 157, 168, 180, 181, 189, 191, 196, 201, 205, 207, 208, 211, 213, 222, 235, 237, 238, 250, 255, 257, 259, 265, 267, 273, 291, 292, 300, 301, 302, 305, 309, 311, 322], "number": [11, 13, 45, 48, 60, 65, 66, 89, 115, 116, 118, 120, 134, 137, 140, 157, 167, 178, 201, 205, 207, 211, 213, 222, 230, 235, 237, 238, 240, 257, 259, 300, 301, 302, 305, 311, 322, 323, 329], "y_pixel": [11, 330], "channels_info": 11, "channel": [11, 84, 86, 124, 126, 140, 142, 157, 159, 185, 195, 201, 205, 209, 213, 235, 257, 259, 330, 332], "popul": [11, 120], "combobox": 11, "avail": [11, 13, 60, 65, 66, 73, 189, 191, 235, 298, 322, 323, 327, 331, 332], "laser": [11, 100, 126, 162, 257, 265, 266, 268, 322, 327, 328, 329], "488nm": [11, 330], "561nm": 11, "642nm": [11, 330], "filter": [11, 48, 93, 98, 129, 130, 132, 134, 135, 137, 180, 328, 329], "empti": [11, 66, 134, 137, 180, 199, 201, 206, 219, 220, 222, 230, 238, 239, 330], "align": [11, 66, 134, 137, 330], "gfp": [11, 132, 134, 137, 330], "ff01": [11, 330], "515": [11, 330], "30": [11, 66, 309, 322, 330], "32": [11, 39, 66, 235, 330], "daq_sample_r": 11, "daq": [11, 97, 100, 102, 257, 259, 322], "sampl": [11, 48, 140, 157, 271, 272, 273, 327, 328, 332], "rate": [11, 115, 116, 118, 120, 130, 135, 137, 140, 157, 168, 181], "float": [11, 13, 19, 20, 21, 24, 25, 26, 39, 60, 62, 65, 66, 67, 68, 69, 79, 81, 84, 86, 113, 115, 116, 118, 120, 126, 134, 137, 140, 154, 157, 167, 170, 172, 174, 177, 180, 181, 183, 185, 193, 195, 201, 202, 205, 206, 208, 213, 237, 238, 240, 241, 246, 250, 257, 259, 261, 262, 263, 264, 265, 266, 268, 271, 272, 273, 300, 301, 302, 308, 309, 322], "filter_wheel_setting_dict": 11, "wheel": [11, 93, 98, 129, 130, 132, 134, 135, 137, 180, 328, 329], "galvo_parameter_dict": 11, "galvo": [11, 90, 99, 124, 126, 172, 262, 264, 297, 323], "lasers_info": 11, "laser_list": 11, "number_of_channel": 11, "remote_focus_dict": 11, "delay_perc": [11, 330], "pulse_perc": [11, 330], "remote_focus_paramet": 11, "percent": [11, 140, 157, 167, 246, 261, 263, 264, 266, 268, 322], "delai": [11, 140, 157, 189, 191, 263, 266], "puls": [11, 167, 266, 330, 332], "stage_default_posit": 11, "current": [11, 13, 20, 60, 65, 66, 115, 116, 118, 120, 121, 164, 167, 177, 189, 191, 201, 204, 205, 208, 213, 215, 219, 220, 221, 222, 223, 230, 235, 246, 257, 259, 301, 322, 329, 330], "stage_flip_flag": 11, "stage_setting_dict": 11, "stage_step": 11, "step": [11, 66, 199, 201, 204, 205, 206, 207, 208, 209, 212, 213, 215, 219, 220, 221, 223, 224, 322, 327, 330, 331], "size": [11, 19, 20, 21, 66, 79, 81, 84, 86, 115, 116, 118, 120, 201, 205, 213, 215, 235, 250, 252, 253, 255, 259, 271, 272, 273, 292, 300, 322, 330], "same": [11, 13, 19, 21, 60, 65, 66, 189, 191, 199, 255, 289, 294, 330], "group": [13, 60, 65], "target": [13, 14, 20, 60, 65, 73, 74, 177, 189, 191, 206, 259, 275], "arg": [13, 14, 60, 62, 65, 66, 67, 68, 69, 73, 74, 89, 90, 193, 205, 220, 221, 222, 223, 225, 226, 231, 233, 259, 278, 297, 298, 327], "daemon": [13, 60, 65], "thread": [13, 14, 60, 63, 65, 67, 73, 74, 93, 94, 95, 97, 98, 102, 104, 196, 201, 208, 211, 212, 213, 259], "constructor": [13, 60, 65], "should": [13, 60, 65, 66, 73, 74, 86, 115, 116, 118, 120, 167, 199, 207, 210, 212, 219, 220, 221, 222, 223, 224, 233, 237, 238, 240, 300, 322, 323, 330, 331, 332], "alwai": [13, 60, 65, 66, 225, 241], "call": [13, 60, 62, 63, 65, 66, 73, 74, 118, 126, 172, 174, 180, 183, 185, 201, 209, 226, 230, 235, 237, 238, 259, 322, 330, 331], "keyword": [13, 14, 60, 65, 66, 73, 79, 81, 84, 86, 221, 223, 224, 259], "argument": [13, 14, 60, 62, 63, 65, 66, 67, 68, 69, 72, 73, 79, 81, 84, 86, 89, 129, 134, 137, 205, 220, 221, 222, 223, 224, 225, 226, 231, 233, 259, 278, 296, 297, 327], "reserv": [13, 60, 65], "futur": [13, 60, 65, 66, 323], "extens": [13, 60, 65, 235, 323], "when": [13, 60, 63, 65, 66, 74, 167, 212, 219, 220, 221, 222, 223, 224, 226, 230, 257, 259, 322, 323, 327, 330, 331, 332], "threadgroup": [13, 60, 65], "implement": [13, 60, 65, 66, 79, 81, 84, 86, 118, 172, 174, 180, 183, 185, 225, 253, 322, 329, 332], "callabl": [13, 14, 60, 62, 63, 65, 67, 68, 69, 72], "invok": [13, 60, 65, 66], "run": [13, 14, 60, 62, 65, 67, 68, 69, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 126, 201, 219, 220, 221, 222, 223, 259, 322, 323, 327, 330, 331, 332], "mean": [13, 25, 60, 65, 66, 272], "noth": [13, 60, 65, 226, 227], "By": [13, 60, 62, 65, 66, 330, 332], "uniqu": [13, 60, 65, 332], "construct": [13, 60, 65, 66, 189, 191, 246], "form": [13, 60, 65, 66, 240, 323, 327, 332], "n": [13, 60, 65, 66, 84, 204, 206, 246, 271, 272, 273, 307, 308, 309, 323, 330, 331], "where": [13, 60, 65, 66, 221, 223, 224, 225, 226, 231, 233, 235, 238, 259, 322, 324, 327, 330, 331], "small": [13, 60, 65, 323], "decim": [13, 60, 65, 66], "tupl": [13, 14, 26, 60, 65, 66, 79, 81, 84, 86, 89, 177, 221, 223, 225, 226, 228, 231, 233, 250, 252, 253, 255, 292, 294, 307], "invoc": [13, 60, 65], "If": [13, 43, 60, 62, 63, 65, 66, 67, 68, 69, 71, 72, 74, 86, 126, 201, 227, 230, 232, 235, 237, 238, 240, 259, 271, 294, 297, 322, 323, 327, 330, 331, 332], "subclass": [13, 60, 62, 65, 66], "overrid": [13, 60, 65, 79], "must": [13, 19, 21, 60, 65, 66, 73, 134, 309, 323, 327, 332], "make": [13, 34, 60, 63, 65, 66, 72, 86, 167, 170, 172, 177, 301, 322, 323, 325, 327, 330], "sure": [13, 60, 65, 66, 167, 170, 172, 177, 322, 330], "befor": [13, 60, 65, 66, 150, 152, 180, 193, 199, 205, 209, 213, 223, 230, 303, 327, 331], "do": [13, 57, 60, 65, 66, 115, 116, 126, 167, 226, 227, 250, 253, 255, 322, 323, 327, 330, 331, 332], "anyth": [13, 60, 65], "els": [13, 60, 65], "getnam": [13, 60, 65], "string": [13, 60, 62, 63, 65, 66, 84, 129, 132, 134, 137, 142, 207, 230, 231, 232, 235, 259, 288, 289, 313], "identif": [13, 60, 65, 230], "purpos": [13, 60, 65, 66, 74, 124, 126, 142, 331], "onli": [13, 60, 65, 66, 86, 126, 167, 172, 215, 261, 309, 322, 323, 330, 331, 332], "deprec": [13, 60, 65, 66], "instead": [13, 60, 65, 66, 74, 322], "isdaemon": [13, 60, 65], "whether": [13, 60, 65, 66, 91, 118, 167, 170, 172, 174, 177, 180, 183, 185, 199, 205, 207, 208, 213, 219, 221, 222, 223, 224, 235, 237, 238, 259, 305], "islock": 13, "check": [13, 66, 89, 129, 132, 134, 137, 189, 191, 199, 213, 237, 238, 259], "lock": [13, 66, 212], "is_al": [13, 60, 65], "aliv": [13, 60, 65], "just": [13, 60, 65, 66, 67, 327], "start": [13, 21, 60, 62, 65, 66, 118, 126, 140, 142, 157, 159, 167, 196, 205, 213, 230, 257, 259, 263, 301, 305, 322, 323, 327, 331, 332], "until": [13, 60, 65, 73, 126, 167, 172, 174, 177, 180, 183, 185, 212, 257, 259], "after": [13, 60, 65, 66, 121, 167, 189, 191, 204, 208, 213, 223, 259, 323, 327, 330, 331], "termin": [13, 60, 65, 219, 257, 323, 330, 331, 332], "see": [13, 60, 62, 65, 66, 73, 74, 132, 134, 253, 314, 323, 327, 329, 331], "also": [13, 60, 65, 66, 228, 235, 238, 323, 331, 332], "enumer": [13, 60, 65], "join": [13, 60, 65, 74], "timeout": [13, 60, 65, 130, 135, 181, 194], "wait": [13, 60, 65, 73, 115, 116, 118, 120, 126, 129, 134, 137, 167, 177, 180, 193, 212, 220, 222, 223, 257, 259, 327], "block": [13, 60, 65, 66, 167, 172, 174, 177, 180, 183, 185, 320], "whose": [13, 60, 65, 66], "either": [13, 60, 65, 66, 120, 207, 227, 322, 330], "normal": [13, 30, 33, 46, 48, 60, 65, 66, 113, 115, 116, 118, 120, 195, 257, 330], "through": [13, 43, 60, 65, 66, 205, 213, 220, 221, 222, 223, 224, 233, 237, 246, 327], "an": [13, 19, 20, 21, 24, 26, 27, 40, 50, 54, 60, 62, 63, 65, 66, 67, 68, 69, 72, 73, 74, 89, 113, 115, 116, 118, 120, 167, 170, 172, 174, 177, 180, 183, 185, 199, 206, 207, 213, 219, 220, 222, 230, 238, 239, 240, 241, 250, 253, 259, 291, 297, 300, 303, 309, 314, 322, 323, 324, 327, 330, 332], "unhandl": [13, 60, 65], "except": [13, 60, 62, 65, 66, 67, 68, 69, 74, 89, 167, 170, 172, 174, 177, 180, 183, 185], "option": [13, 14, 20, 60, 63, 65, 66, 118, 140, 199, 204, 206, 207, 211, 213, 219, 220, 221, 222, 223, 224, 227, 230, 231, 233, 237, 238, 239, 240, 241, 257, 265, 322, 323, 327], "occur": [13, 60, 65, 66, 167, 324], "present": [13, 21, 60, 65, 227, 230, 231], "point": [13, 60, 62, 65, 66, 84, 219, 235, 291, 307, 308, 309, 322], "specifi": [13, 60, 65, 66, 134, 137, 204, 206, 207, 211, 219, 220, 221, 222, 223, 224, 227, 231, 233, 235, 237, 238, 239, 240, 241, 286, 289, 322, 327, 330], "oper": [13, 60, 63, 65, 69, 72, 167, 170, 172, 177, 195, 199, 215, 219, 225, 226, 235, 257, 324, 327, 328, 330, 331, 332], "second": [13, 60, 65, 66, 115, 116, 118, 120, 134, 140, 142, 167, 195, 257, 261, 262, 263, 264, 265, 266, 268, 322, 330], "fraction": [13, 60, 65, 300, 301], "thereof": [13, 60, 65], "As": [13, 60, 63, 65, 66, 72, 327, 332], "you": [13, 60, 63, 65, 66, 71, 72, 73, 74, 230, 322, 323, 327, 330, 331, 332], "decid": [13, 60, 65, 207, 208, 322, 330], "happen": [13, 60, 65, 327], "still": [13, 60, 65, 66, 212, 322, 330, 331, 332], "time": [13, 60, 65, 66, 84, 89, 113, 115, 116, 118, 120, 124, 126, 129, 134, 137, 140, 142, 157, 159, 167, 181, 193, 195, 205, 211, 213, 215, 222, 235, 257, 259, 261, 284, 322, 324, 330, 332], "out": [13, 60, 62, 65, 66, 115, 116, 194, 199, 201, 204, 206, 230, 240, 246, 266, 300, 301, 322, 323, 330, 332], "A": [13, 60, 65, 66, 73, 74, 167, 170, 172, 174, 177, 180, 183, 185, 199, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 219, 220, 221, 222, 223, 224, 227, 228, 230, 231, 232, 233, 237, 238, 239, 240, 246, 288, 294, 300, 309, 323, 327, 330, 332], "can": [13, 60, 63, 65, 66, 67, 71, 74, 79, 81, 84, 86, 120, 167, 199, 204, 207, 221, 223, 224, 230, 231, 232, 253, 259, 294, 322, 323, 324, 327, 330, 331, 332], "ed": [13, 60, 65], "mani": [13, 60, 65, 66, 86, 201, 222, 323, 327, 330], "rais": [13, 60, 62, 65, 66, 67, 68, 69, 74, 90, 230, 294], "runtimeerror": [13, 60, 65, 66, 67], "attempt": [13, 60, 65, 66, 89], "made": [13, 60, 65, 66], "would": [13, 60, 62, 65, 66, 231, 233, 240, 322, 330, 332], "caus": [13, 60, 65, 66], "deadlock": [13, 60, 65], "It": [13, 60, 65, 66, 199, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 219, 220, 221, 222, 223, 225, 226, 227, 228, 230, 233, 237, 238, 239, 240, 286, 322, 327, 329, 330, 331, 332], "error": [13, 60, 65, 66, 74, 90, 271, 272, 288, 292, 323, 331], "ha": [13, 60, 65, 66, 71, 167, 172, 174, 177, 180, 183, 185, 205, 213, 215, 219, 221, 223, 224, 288, 298, 300, 322, 327, 328, 330], "been": [13, 60, 65, 205, 213, 219, 221, 223, 224, 237, 238], "so": [13, 60, 65, 66, 74, 126, 215, 322, 331, 332], "setdaemon": [13, 60, 65], "setnam": [13, 60, 65], "": [13, 25, 60, 63, 65, 66, 113, 115, 118, 120, 181, 204, 206, 219, 220, 222, 223, 227, 235, 239, 259, 322, 323, 327, 331], "activ": [13, 60, 65, 115, 116, 118, 120, 124, 126, 204, 205, 209, 210, 213, 259, 323, 329, 330, 331, 332], "most": [13, 60, 65, 66, 323, 330, 332], "onc": [13, 60, 65, 66, 230, 327, 331, 332], "arrang": [13, 60, 65], "separ": [13, 60, 65, 66, 253, 278, 323, 328], "more": [13, 60, 65, 66, 86, 167, 170, 172, 174, 177, 180, 183, 185, 322, 323, 329, 331], "than": [13, 19, 21, 60, 65, 66, 79, 86, 115, 116, 118, 120, 240, 323, 332], "unlock": 13, "finish": [13, 180, 201], "boolean": [13, 60, 65, 66, 199, 204, 205, 207, 208, 209, 210, 212, 213, 219, 221, 222, 223, 224, 225], "indic": [13, 19, 60, 65, 66, 199, 204, 205, 207, 208, 209, 210, 212, 213, 219, 221, 222, 223, 224, 235, 239, 241, 246, 257, 300, 327], "otherwis": [13, 60, 65, 66, 195, 221, 223, 224, 237, 238, 240, 257, 289], "Its": [13, 60, 65], "initi": [13, 15, 60, 63, 65, 66, 71, 72, 79, 81, 84, 86, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 115, 116, 118, 120, 126, 150, 152, 167, 168, 170, 172, 174, 177, 180, 183, 185, 193, 199, 201, 205, 212, 213, 221, 223, 224, 230, 237, 238, 259, 330], "inherit": [13, 60, 65, 66, 89, 221, 223], "creat": [13, 14, 60, 62, 65, 66, 74, 126, 167, 172, 174, 177, 180, 185, 228, 259, 262, 264, 265, 266, 268, 286, 291, 292, 301, 323, 329, 331, 332], "main": [13, 60, 65, 74, 199, 205, 206, 208, 209, 210, 211, 212, 213, 221, 223, 227, 239, 323, 327], "therefor": [13, 60, 65, 66], "entir": [13, 60, 65, 246], "python": [13, 60, 63, 65, 66, 72, 79, 81, 84, 86, 250, 252, 253, 255, 281, 287, 313, 322, 327, 329, 330], "exit": [13, 60, 63, 65, 150, 152, 207, 327], "left": [13, 60, 65, 66, 164, 263, 291, 292, 300, 331], "ident": [13, 60, 65, 327, 330], "identifi": [13, 35, 36, 60, 65, 134, 221, 223, 224, 230, 332], "nonzero": [13, 60, 65, 66], "integ": [13, 60, 65, 66, 207, 261, 262, 263, 264, 266, 268, 323], "get_id": [13, 60, 65], "mai": [13, 60, 65, 66, 199, 212, 233, 323, 327, 331, 332], "recycl": [13, 60, 65], "anoth": [13, 60, 62, 65, 66, 74, 322, 323, 330, 331], "even": [13, 24, 60, 65, 66], "semant": [13, 60, 65], "multipl": [13, 24, 26, 35, 60, 65, 66, 67, 209, 253, 332], "given": [13, 25, 60, 65, 66, 82, 115, 116, 118, 120, 129, 132, 134, 137, 140, 142, 159, 227, 230, 231, 233, 240, 303, 327, 331], "native_id": [13, 60, 65], "nativ": [13, 60, 65, 66], "integr": [13, 60, 65, 332], "id": [13, 60, 65, 90, 91, 99, 100, 103, 118, 140, 142, 196, 199, 201, 206, 207, 210, 212, 213, 237, 238], "non": [13, 60, 65, 66, 297], "neg": [13, 60, 65], "get_native_id": [13, 60, 65], "repres": [13, 60, 65, 207, 219, 221, 223, 224, 228, 231, 232, 237, 238, 239, 240, 322, 330], "report": [13, 60, 65, 167, 172, 174, 177, 180, 185, 259, 323], "kernel": [13, 60, 65], "clear": [14, 66, 193, 194, 219, 220, 222, 230, 259], "pool": 14, "createthread": 14, "resourcenam": 14, "callback": 14, "cbarg": 14, "cbkarg": 14, "add": [14, 29, 62, 221, 223, 296, 297, 322, 323, 327, 330, 331], "waitlist": 14, "resourc": [14, 60, 67, 73, 219, 220, 222], "getrunningthread": 14, "globaltrac": 14, "frame": [14, 24, 25, 26, 86, 115, 116, 118, 120, 196, 199, 201, 205, 206, 207, 210, 212, 213, 221, 237, 238, 246, 257, 259, 328, 332], "event": [14, 223, 224, 239], "trace": [14, 66], "ani": [14, 60, 62, 65, 66, 79, 81, 84, 86, 209, 212, 221, 223, 226, 227, 237, 238, 327, 332], "killthreadinlist": 14, "threadlist": 14, "kill": 14, "localtrac": 14, "movetodelet": 14, "taskthread": 14, "move": [14, 57, 66, 86, 129, 134, 137, 167, 170, 172, 174, 177, 180, 183, 185, 189, 191, 201, 205, 208, 213, 237, 238, 246, 257, 259, 322, 327, 330, 332], "todeletelist": 14, "selflockthread": 14, "registerresourc": 14, "regist": [14, 227, 332], "removethread": 14, "remov": [14, 66, 230, 239, 322, 327, 330], "threadtaskwrap": 14, "wrap": [14, 284], "img_data": 19, "_supportsarrai": [19, 20, 21, 24, 26, 79, 81, 84, 86, 250, 273], "dtype": [19, 20, 21, 24, 26, 65, 66, 69, 71, 79, 81, 84, 86, 250, 273], "_nestedsequ": [19, 20, 21, 24, 26, 79, 81, 84, 86, 250, 273], "complex": [19, 20, 21, 24, 26, 46, 66, 79, 81, 84, 86, 250, 273], "byte": [19, 20, 21, 24, 26, 66, 79, 81, 84, 86, 134, 137, 180, 250, 273], "boundari": [19, 20, 22, 246, 300], "width": [19, 21, 66, 113, 115, 116, 118, 120, 240, 257, 271, 272, 273, 291, 307], "1": [19, 20, 21, 25, 46, 48, 65, 66, 79, 81, 84, 86, 91, 118, 121, 140, 142, 157, 159, 167, 193, 195, 206, 207, 215, 222, 230, 237, 238, 240, 246, 255, 257, 259, 262, 263, 264, 265, 266, 268, 271, 272, 273, 300, 309, 322, 327, 330, 331, 332], "offset": [19, 21, 24, 26, 27, 66, 157, 159, 189, 191, 201, 202, 205, 206, 257, 259, 263, 264, 265, 266, 268, 271, 272, 273, 292, 330], "varianc": [19, 21, 26, 27, 66, 259], "perform": [19, 51, 62, 67, 68, 69, 134, 199, 204, 206, 207, 212, 213, 219, 220, 222, 226, 241, 327, 329, 332], "binari": [19, 66, 292], "search": [19, 233, 331], "tissu": [19, 20, 21, 206, 237, 238, 240, 241, 246], "imag": [19, 20, 21, 24, 26, 27, 29, 30, 33, 36, 39, 40, 43, 45, 46, 48, 49, 50, 54, 66, 115, 116, 118, 120, 126, 154, 201, 204, 206, 209, 213, 235, 237, 238, 240, 241, 246, 257, 259, 271, 272, 273, 294, 301, 309, 327, 328, 332], "locat": [19, 66, 134, 189, 191, 297, 322, 331, 332], "image_data": [19, 20, 21, 29, 31, 33, 36, 37, 39, 54, 240, 241], "npt": [19, 20, 21, 24, 26, 79, 81, 84, 86, 307, 308, 309], "arraylik": [19, 20, 21, 24, 26, 79, 81, 84, 86, 307, 308, 309], "xy": [19, 24, 291], "presenc": [19, 237, 238], "subimag": [19, 21], "smaller": [19, 21, 66], "shape": [19, 21, 34, 66, 69, 71, 79, 81, 84, 86, 250, 252, 253, 255, 294], "map": [19, 21, 24, 26, 27, 51, 66, 253, 259, 322, 330], "mag_ratio": 20, "find": [20, 66, 246, 322, 327, 330, 331, 332], "otsu": [20, 32, 33, 206], "threshold": [20, 32, 33, 206, 208, 240, 241], "space": [20, 46, 48, 66, 206, 235, 300, 301], "resampl": 20, "ratio": 20, "over": [20, 66, 231, 331], "tile": [20, 206, 246, 300, 301], "row": [20, 66, 303, 322], "downsampl": [20, 206], "determin": [21, 66, 199, 206, 207, 211, 212, 213, 221, 237, 238, 240, 241], "direct": [22, 36, 66, 113, 115, 116, 118, 120, 246, 271, 272, 273, 291, 323, 331, 332], "offset_map": [24, 27], "comput": [24, 26, 27, 206, 226, 322, 330, 331, 332], "flatfield": 24, "evenli": 24, "illumin": 24, "scmo": [24, 25, 26], "zyx": [24, 26, 79], "defocus": 24, "signal": [24, 25, 126, 194, 195, 196, 199, 204, 205, 206, 207, 208, 209, 211, 212, 213, 219, 222, 223, 224, 227, 228, 237, 238, 239, 259, 264, 327, 332], "np": [24, 25, 65, 66, 134, 235, 240, 262, 263, 264, 265, 266, 267, 268, 271, 272, 273, 292, 301, 303], "absenc": 24, "oppos": 24, "fn": 25, "qe": 25, "82": 25, "ib": 25, "nr": 25, "4": [25, 66, 115, 154, 261, 262, 264, 265, 266, 268, 271, 272, 327, 328, 330, 331], "m": [25, 40, 113, 115, 120, 154, 178, 259, 322, 330, 331], "http": [25, 40, 79, 81, 84, 86, 129, 134, 167, 250, 252, 253, 255, 287, 330, 331, 332], "www": [25, 134, 332], "hamamatsu": [25, 115, 116, 118, 328], "com": [25, 40, 79, 81, 84, 86, 129, 134, 167, 181, 250, 252, 253, 255, 331, 332], "content": [25, 66, 232, 280, 288, 289, 327], "dam": 25, "photon": 25, "site": 25, "document": [25, 66, 115, 116, 118, 120, 167, 323, 327, 329, 331], "99_sales_librari": 25, "sy": [25, 66], "scas0134e_c13440": 25, "20cu_tec": 25, "pdf": [25, 134], "nois": 25, "sigma": [25, 36, 201, 202], "excess": 25, "factor": [25, 167, 323], "unitless": 25, "quantum": 25, "effici": 25, "arrai": [25, 66, 69, 71, 79, 81, 84, 86, 240, 241, 262, 263, 264, 265, 266, 267, 268, 271, 273, 292, 294, 301, 303, 307, 308], "background": [25, 271, 272, 273], "readout": [25, 113, 115, 116, 118, 120, 140, 142, 157, 159, 195, 257], "rm": 25, "em": 25, "gain": 25, "estim": [25, 40, 48, 129, 235], "electron": 25, "dark": 26, "taken": [26, 60, 65, 189, 191], "sequenti": [26, 60, 65], "variance_map": 27, "snr": 27, "border": 29, "median": 29, "requir": [29, 57, 66, 102, 167, 170, 172, 174, 177, 180, 183, 185, 199, 204, 226, 237, 238, 240, 259, 328, 331, 332], "3d": [29, 34, 43], "inside_imag": 30, "normalized_cel": 30, "surface_cel": 30, "combin": [30, 279, 329], "insid": [30, 66, 331], "cell": [30, 32], "surfac": [30, 35, 36], "image_threshold": 31, "pixel_s": [31, 40, 271, 272, 273, 309, 330], "206": 31, "padded_image_data": 32, "insidegamma": 32, "insideblur": 32, "insidedilateradiu": 32, "insideeroderadiu": 32, "tri": [32, 89, 323], "fill": [32, 66, 201, 247], "interior": 32, "gaussian": [32, 271, 272, 273], "blur": 32, "follow": [32, 189, 191, 199, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 231, 233, 323, 327, 330, 331], "dilat": 32, "hole": 32, "eros": 32, "subtract": 33, "standard": [33, 60, 65, 66, 329], "deviat": [33, 66, 324], "radiu": [34, 308], "structur": [34, 66, 228, 255, 259, 327], "element": [34, 66, 193, 230, 314], "sphere": 34, "scale": [35, 309], "each": [36, 43, 66, 71, 79, 81, 84, 86, 89, 124, 126, 157, 159, 167, 189, 191, 199, 201, 209, 212, 221, 223, 224, 228, 230, 233, 235, 237, 238, 259, 278, 300, 301, 303, 309, 322, 323, 324, 327, 330, 332], "ndarrai": [39, 66, 69, 134, 157, 159, 235, 240, 241, 257, 271, 272, 273], "calcul": [39, 66, 113, 115, 116, 118, 120, 124, 126, 134, 137, 154, 199, 201, 206, 211, 215, 240, 257, 259, 261, 300, 332], "flat": [39, 66], "dark_field": 39, "correct": [39, 66], "bit": [39, 66, 235, 253], "data": [39, 54, 66, 79, 81, 82, 84, 86, 97, 115, 116, 118, 120, 124, 126, 194, 195, 196, 199, 201, 204, 206, 207, 208, 210, 211, 212, 213, 215, 220, 221, 227, 228, 230, 235, 237, 238, 240, 241, 257, 259, 286, 289, 303, 322, 327, 328, 329], "16": [39, 66, 235], "param": [39, 118], "flat_field": 39, "input_arrai": [40, 41, 42, 43], "number_high_pass_filt": 40, "10": [40, 48, 66, 89, 167, 206, 240, 261, 263, 264, 265, 266, 267, 268, 322, 330, 331], "fourier_sampl": [40, 48], "50": [40, 48, 264, 268, 330], "apodization_pixel": 40, "20": [40, 66, 240, 330], "resolut": [40, 79, 180, 204, 206, 215, 246, 259, 328], "decorrel": [40, 47, 48], "github": [40, 79, 81, 84, 86, 250, 252, 253, 255, 329, 330, 331], "ades91": 40, "imdecorr": 40, "blob": 40, "master": [40, 126], "main_imagedecorr": 40, "psf_support_diameter_xi": [41, 42, 43], "use_gpu": [43, 259, 298], "2d": [43, 45, 48, 66, 206, 271, 273], "iter": [43, 66, 220, 221, 222, 223, 224, 230, 233], "plane": [43, 205, 237, 238, 327, 332], "otf_support_x": 43, "support": [43, 66, 172, 233, 329, 333], "otf": 43, "dimens": [43, 66, 79, 81, 84, 86, 259, 300, 301, 330], "otf_support_i": 43, "entropi": [43, 201], "input_imag": [45, 48, 49, 50], "number_pixel": 45, "apod": 45, "edg": 45, "output": [45, 46, 47, 48, 49, 50, 51, 62, 66, 100, 102, 126, 167, 266, 332], "output_imag": 45, "image_1": 46, "image_2": 46, "c1": 46, "c2": 46, "correl": 46, "coeffici": 46, "express": 46, "fourier": [46, 48], "transform": [46, 50, 327], "2": [46, 65, 66, 118, 140, 142, 194, 241, 250, 263, 264, 271, 272, 309, 322, 327, 328, 330, 331, 332], "correlation_coeffici": 46, "cross": 46, "decorrelation_funct": 47, "maxima": [47, 48], "max_index": 47, "max_amplitud": 47, "amplitud": [47, 48, 201, 202, 262, 263, 264, 265, 266, 268, 330], "number_highpass_filt": 48, "cut": 48, "off": [48, 193, 257, 259, 327], "frequenc": [48, 264, 265, 268, 330], "analyz": [48, 237, 238, 241], "linspac": 48, "high": [48, 204, 300, 328], "pass": [48, 60, 65, 66, 71, 72, 84, 124, 126, 220, 221, 222, 223, 230, 259, 322, 324], "kcmax": 48, "a0": 48, "d0": 48, "radial": [49, 271, 272, 273], "averag": [49, 62, 66, 67, 68, 69], "squar": [49, 231, 240, 272], "im": 49, "r": [49, 79, 81, 84, 86, 303, 308], "imp": 50, "im2pol": 50, "imc": 50, "carthesian": 50, "polar": 50, "coordin": [50, 330], "input_valu": 51, "minimum_valu": 51, "maximum_valu": 51, "mapped_minimum_valu": 51, "mapped_maximum_valu": 51, "linear": [51, 332], "rang": [51, 167, 199, 201, 205, 230], "minimum": [51, 66, 115, 116, 118, 120, 140, 157, 215, 237, 238, 240, 322, 328, 330], "maximum": [51, 66, 115, 116, 118, 120, 140, 150, 152, 157, 167, 201, 235, 322, 329, 330], "rescaled_valu": 51, "rescal": [51, 309], "shear_angl": 54, "z_pixel_s": 54, "xy_pixel_s": 54, "design": [54, 129, 132, 134, 137, 220, 222, 225, 230, 233, 235, 327, 332], "deskew": 54, "uint16": [54, 66], "save": [54, 65, 118, 167, 170, 172, 174, 177, 180, 183, 185, 201, 213, 231, 235, 286, 289, 327], "tiff": [54, 84, 120, 235, 253, 255, 294], "spectral": [57, 329], "unmix": 57, "need": [57, 66, 74, 115, 116, 118, 120, 134, 199, 201, 204, 205, 213, 215, 220, 221, 223, 224, 225, 226, 228, 230, 235, 257, 259, 300, 322, 327, 330, 331, 332], "repo": [57, 331], "here": [57, 115, 116, 118, 263, 322, 323, 324, 330], "signific": 57, "organ": [57, 124, 126, 228], "overhaul": 57, "first_resourc": [60, 73], "resultthread": [60, 61, 68], "access": [60, 65, 66, 67, 71, 79, 81, 84, 86, 322, 331], "order": [60, 66, 67, 212, 220, 222, 230, 322, 330], "thei": [60, 63, 66, 72, 126, 227, 322, 330, 331, 332], "were": [60, 66, 235, 330, 331], "launch": [60, 65, 74, 330], "docstr": [60, 73, 74, 323], "top": [60, 73, 74, 113, 115, 116, 118, 120, 287, 322, 330], "get_result": [60, 65], "accept": [60, 65, 66, 73, 167, 297, 309, 327], "timeouterror": [60, 62, 65, 67, 68, 69], "respect": [60, 65, 66, 231, 240, 330], "control": [60, 65, 66, 91, 129, 132, 134, 167, 168, 178, 191, 193, 194, 195, 196, 199, 205, 206, 207, 208, 211, 212, 213, 219, 220, 221, 222, 223, 224, 235, 257, 259, 275, 322, 323, 327, 329, 330], "alia": [61, 64, 66], "homemad": 62, "test": [62, 66, 67, 68, 69, 142, 193, 194, 195, 196], "mostli": 62, "written": [62, 66, 235, 323], "curios": 62, "what": [62, 66, 273, 300, 322, 327, 330], "featur": [62, 65, 196, 259, 323, 325, 329, 333], "want": [62, 66, 71, 134, 137, 322, 325, 327, 330, 331, 332], "could": [62, 66, 287, 323, 327, 332], "done": [62, 66, 257, 259, 322, 330, 331, 332], "easili": [62, 231], "without": [62, 63, 65, 66, 67, 71, 72, 223, 235, 322, 323, 330, 332], "import": [62, 66, 323, 327, 329, 330, 332], "Not": [62, 121, 253, 261], "real": [62, 66, 225, 226, 259], "packag": [62, 331], "wasn": 62, "t": [62, 63, 65, 66, 72, 115, 116, 126, 167, 255, 332], "To": [62, 66, 167, 253, 322, 323, 325, 327, 330, 332], "test_": [62, 67, 68, 69], "expect": [62, 65, 67, 68, 73, 79, 81, 84, 86, 167, 170, 172, 174, 177, 180, 183, 185, 213, 221, 223, 224, 226, 322, 323, 330], "gener": [62, 66, 84, 120, 194, 205, 206, 235, 255, 271, 272, 273, 309, 327], "specif": [62, 66, 67, 68, 69, 167, 199, 209, 210, 211, 223, 224, 225, 322, 330, 332], "print": [62, 65, 66, 115, 116, 118, 120, 305], "stdout": 62, "test_prefix": [62, 67, 68, 69], "fail": [62, 66, 67, 68, 69, 322, 327, 330], "fail_fast": [62, 67, 68, 69], "begin": [62, 66, 67, 68, 69, 199, 219, 220, 222, 237, 238], "time_it": [62, 67, 68, 69], "n_loop": [62, 67, 68, 69], "func": [62, 67, 68, 69, 89, 283, 284], "timeout_u": [62, 67, 68, 69], "allow": [62, 66, 67, 68, 69, 205, 207, 211, 212, 213, 219, 221, 223, 224, 259, 322, 323, 327, 329, 330, 331, 332], "durat": [62, 67, 68, 69, 113, 115, 116, 118, 120, 126, 129, 134, 137, 181, 259, 261, 284], "exce": [62, 67, 68, 69, 240], "bar": [62, 67, 68, 69], "format": [62, 66, 67, 68, 69, 79, 81, 84, 86, 124, 126, 231, 235, 253, 322, 323, 327, 330], "progress": [62, 67, 68, 69, 330, 332], "initarg": [63, 71, 72], "custom_loop": [63, 71, 72], "close_method_nam": [63, 72], "closearg": [63, 72], "closekwarg": [63, 72], "with_lock": 63, "initkwarg": [63, 71, 72], "child": [63, 65, 72, 221, 223, 224, 228], "act": [63, 66, 72, 329], "like": [63, 66, 72, 73, 74, 294, 300, 322, 330, 331, 332], "isn": [63, 72], "much": [63, 72, 332], "possibl": [63, 66, 72, 240, 263, 325, 327, 330], "try": [63, 65, 72, 323, 331], "instanc": [63, 66, 72, 73, 199, 204, 213, 228, 303, 322, 330], "behav": [63, 66, 69, 72, 322, 323, 330], "re": [63, 65, 72], "live": [63, 66, 72, 259, 323], "parent": [63, 65, 71, 72, 113, 124, 132, 140, 147, 157, 162, 170, 189], "cours": [63, 72], "have": [63, 66, 72, 126, 205, 213, 219, 220, 222, 226, 237, 238, 253, 322, 323, 327, 330, 331, 332], "spare": [63, 72], "core": [63, 66, 72], "your": [63, 66, 71, 72, 74, 287, 322, 323, 327, 329, 330, 332], "machin": [63, 66, 72, 167, 323, 331], "turn": [63, 72, 257, 259, 322, 327, 330, 332], "cpu": [63, 66, 72], "bound": [63, 72, 167, 170, 172, 174, 177, 180, 183, 185, 206, 322, 330], "which": [63, 66, 73, 79, 81, 84, 86, 167, 170, 172, 174, 177, 180, 183, 185, 199, 207, 210, 212, 219, 220, 221, 222, 223, 224, 228, 231, 239, 246, 259, 307, 308, 322, 323, 327, 328, 330, 332], "parallel": [63, 332], "io": [63, 72], "too": [63, 72, 328], "mental": [63, 72], "overhead": [63, 67, 72, 259], "coder": [63, 72, 323], "our": [63, 65, 66, 71, 115, 116, 118, 120, 250, 253, 255, 322, 323, 329, 330, 331, 332], "automat": [63, 327], "close_method": 63, "custodythread": [64, 67, 68], "simpl": [65, 66, 225, 327], "wish": 65, "had": 65, "chang": [65, 66, 115, 116, 118, 120, 129, 134, 137, 167, 189, 191, 204, 206, 208, 259, 301, 327, 330, 331, 332], "self": [65, 66, 115, 116, 124, 126, 134, 167, 170, 172, 174, 177, 180, 183, 185, 189, 191, 201, 235, 246, 323, 327], "trivial": 65, "u": [65, 66, 323, 332], "line": [65, 66, 73, 113, 115, 116, 118, 120, 259, 291, 305, 323, 327, 330], "code": [65, 66, 79, 81, 84, 86, 118, 121, 193, 201, 250, 252, 253, 255, 305, 322, 325, 327, 329, 330, 331], "def": [65, 327], "doe": [65, 66, 142, 205, 226, 314, 322, 330, 331, 332], "someth": [65, 66, 323, 330], "sum": [65, 66], "ones": 65, "uint8": [65, 66, 71], "problem": [65, 66, 331], "th": [65, 66], "redefin": 65, "solut": 65, "res_th": 65, "assert": 65, "handl": [65, 205, 211, 213, 220, 221, 222, 223, 228, 322, 330], "idea": 65, "attributeerror": [65, 66], "wa": [65, 66, 167, 172, 174, 177, 180, 183, 185, 205, 235, 238, 259, 289], "assertionerror": 65, "dure": [65, 79, 81, 84, 86, 199, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 221, 222, 237, 238, 263], "evalu": [65, 66, 235, 284, 298, 307, 308, 309, 323, 330], "rerais": 65, "traceback": [65, 66], "stderr": 65, "don": [65, 115, 116, 167, 332], "affect": [65, 66, 206], "yet": [65, 225, 322], "note": [65, 66, 167, 330], "modifi": [65, 204, 230, 323, 327, 330], "excepthook": 65, "copi": [65, 66, 230, 330], "past": 65, "definit": [65, 73, 74], "work": [65, 66, 126, 323, 331], "shared_memory_nam": 66, "stride": 66, "numpi": [66, 71, 120, 157, 159, 240, 241, 257, 262, 263, 264, 265, 266, 267, 268, 294], "memori": [66, 71, 72, 259, 323], "objectinsubprocess": [66, 67], "serial": [66, 69, 71, 115, 116, 118, 129, 130, 134, 135, 137, 178, 180, 181, 280], "pretti": 66, "fast": [66, 167], "larg": [66, 323], "regularli": 66, "deal": [66, 253], "sens": 66, "provid": [66, 121, 167, 199, 204, 205, 207, 208, 209, 210, 211, 213, 219, 220, 221, 222, 223, 224, 230, 297, 322, 323, 324, 327, 330, 332], "wai": [66, 259, 300, 322, 323, 330], "via": [66, 102, 126, 193, 267, 322], "avoid": [66, 292, 323, 330], "slow": [66, 71], "mayb": [66, 73, 74], "write": [66, 79, 81, 84, 86, 126, 213, 235, 250, 253, 255, 259, 323], "look": [66, 121, 300, 322, 330, 332], "data_buf": 66, "zero": [66, 167, 170, 172, 174, 177, 180, 183, 185, 273], "400": 66, "display_buf": 66, "preprocessor": 66, "displai": [66, 90, 124, 126, 231, 259, 327], "record": [66, 238], "num_imag": 66, "show": [66, 327, 331, 332], "payoff": 66, "its": [66, 167, 172, 174, 177, 180, 183, 185, 220, 221, 222, 224, 230, 231, 327], "own": [66, 330], "AND": 66, "realli": 66, "memmap": 66, "axi": [66, 167, 170, 172, 174, 177, 180, 183, 185, 189, 191, 215, 300, 309, 322, 330], "keepdim": 66, "refer": [66, 178, 207, 211, 221, 223, 224, 257, 263, 278], "full": [66, 116, 322, 332], "equival": [66, 331, 332], "argmax": 66, "along": [66, 73, 74, 167, 172, 174, 177, 180, 183, 185, 259, 300, 301], "argmin": 66, "detail": [66, 134, 167], "argpartit": 66, "kth": 66, "kind": 66, "introselect": 66, "partit": 66, "version": [66, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 241, 328, 330, 331], "8": [66, 134, 330, 331], "argsort": 66, "sort": [66, 230], "astyp": 66, "k": 66, "cast": 66, "unsaf": 66, "subok": 66, "typecod": 66, "layout": [66, 206], "fortran": 66, "contigu": 66, "close": [66, 79, 81, 84, 86, 115, 116, 118, 120, 126, 129, 134, 137, 140, 142, 150, 152, 157, 159, 164, 180, 219, 220, 222, 235, 257, 259, 300, 327], "appear": [66, 327, 330], "equiv": 66, "safe": 66, "same_kind": 66, "backward": 66, "compat": [66, 331], "preserv": 66, "within": [66, 74, 167, 170, 172, 174, 177, 180, 183, 185, 228, 231, 240, 309, 327, 330, 331, 332], "float64": 66, "float32": 66, "convers": 66, "sub": [66, 213, 235, 287], "forc": 66, "newli": [66, 259], "alloc": [66, 71], "satisfi": [66, 327], "arr_t": 66, "unless": [66, 323], "other": [66, 71, 126, 154, 212, 241, 322, 323, 327, 332], "condit": 66, "descript": 66, "17": 66, "one": [66, 73, 74, 84, 86, 167, 170, 172, 174, 177, 180, 183, 185, 212, 220, 221, 223, 224, 259, 322, 327, 332], "field": [66, 322, 330], "9": [66, 330, 331], "numer": [66, 271, 272, 273, 329], "mode": [66, 79, 81, 84, 86, 113, 115, 116, 118, 120, 150, 152, 178, 195, 204, 205, 213, 215, 257, 259, 327, 328, 330, 332], "length": [66, 225, 226, 300, 301, 309], "long": 66, "enough": 66, "store": [66, 79, 81, 84, 86, 113, 118, 120, 250, 252, 253, 255, 323], "convert": [66, 113, 115, 116, 118, 120, 167, 177, 180, 231, 232, 250, 252, 253, 255, 292, 303], "complexwarn": 66, "5": [66, 240, 263, 322, 327, 328, 330, 332], "byteswap": 66, "inplac": 66, "swap": 66, "toggl": 66, "low": [66, 300, 328], "endian": 66, "big": [66, 235], "represent": [66, 79, 81, 84, 86, 230, 231, 250, 252, 253, 255, 314, 327], "place": [66, 230, 322, 330], "imaginari": 66, "part": [66, 230, 323], "individu": [66, 210, 329], "view": [66, 71, 76, 193, 194, 195, 196, 250, 255, 259, 323, 329], "256": 66, "8755": 66, "int16": 66, "hex": 66, "0x1": 66, "0x100": 66, "0x2233": 66, "13090": 66, "0x3322": 66, "b": 66, "ceg": 66, "fac": 66, "s3": 66, "newbyteord": 66, "produc": [66, 313], "differ": [66, 189, 191, 199, 204, 219, 221, 223, 224, 230, 237, 322, 324, 327, 329, 330, 331, 332], "3": [66, 86, 250, 255, 268, 271, 272, 287, 307, 308, 309, 327, 330, 331], "choos": [66, 327], "choic": [66, 327], "index": [66, 99, 100, 126, 189, 191, 208, 213, 230, 235, 255, 257, 259, 271, 272, 273, 294, 322, 330], "clip": 66, "One": [66, 84], "compress": [66, 235], "select": [66, 86, 124, 126, 157, 159, 327, 332], "slice": [66, 69, 294, 309], "conj": 66, "conjug": 66, "wise": 66, "match": [66, 233, 273, 309, 322, 332], "veri": 66, "similar": [66, 221, 223, 224, 322, 323, 330], "behavior": [66, 68, 221, 223, 224, 301, 323, 327, 332], "copyto": 66, "prefer": 66, "6": [66, 255, 327, 330], "c_contigu": 66, "cumprod": 66, "cumul": 66, "product": [66, 167, 323, 329, 332], "cumsum": 66, "diagon": 66, "axis1": 66, "axis2": 66, "In": [66, 253, 322, 323, 327, 330, 332], "previou": [66, 208], "restrict": 66, "dump": 66, "pickl": 66, "back": [66, 253, 263, 327, 332], "pathlib": 66, "now": [66, 205, 250, 331], "scalar": 66, "assign": [66, 227], "flatten": [66, 271], "collaps": 66, "major": 66, "style": [66, 332], "column": 66, "ravel": [66, 271], "d": [66, 120, 313, 314], "getfield": 66, "certain": [66, 330], "fit": [66, 201, 202, 271, 272], "complex128": 66, "take": [66, 86, 228, 231, 233, 240, 301], "12": [66, 330], "larger": 66, "itself": [66, 230], "skip": 66, "diag": 66, "j": [66, 154], "item": [66, 230, 320, 322, 330], "variabl": [66, 154, 212, 225, 226, 228, 237, 238, 240, 323, 331], "case": [66, 323], "int_typ": 66, "interpret": 66, "singl": [66, 86, 154, 167, 172, 174, 177, 180, 183, 185, 266, 294, 300], "nd": 66, "suitabl": 66, "longdoubl": 66, "clongdoubl": 66, "becaus": [66, 322], "lose": 66, "inform": [66, 115, 116, 118, 120, 134, 208, 210, 259, 286, 289, 300, 322, 323, 330, 331], "void": 66, "buffer": [66, 115, 116, 118, 120, 235, 257, 259], "defin": [66, 89, 199, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 220, 222, 224, 227, 253, 309, 322, 327, 330], "speed": [66, 134, 167, 180, 323, 328], "up": [66, 79, 81, 84, 86, 118, 121, 126, 194, 195, 199, 213, 215, 291, 327, 330, 332], "arithmet": 66, "optim": [66, 199, 332], "math": 66, "random": [66, 69], "seed": 66, "123": 66, "randint": 66, "7": [66, 263, 327, 328, 330, 331], "itemset": 66, "There": [66, 253, 332], "least": 66, "last": [66, 230, 300, 331], "Then": [66, 327], "faster": [66, 212], "two": [66, 230, 259, 322, 330], "first": [66, 71, 189, 191, 193, 212, 230, 253, 300, 322, 327, 330, 331, 332], "compar": [66, 201], "syntax": 66, "some": [66, 71, 79, 81, 84, 86, 250, 252, 253, 255, 323, 327, 331, 332], "increas": [66, 323], "particular": [66, 332], "howev": [66, 323, 332], "discourag": 66, "among": 66, "complic": 66, "loop": [66, 207, 327], "amax": 66, "amin": 66, "new_ord": 66, "arr": 66, "newbytord": 66, "below": [66, 322, 323, 327, 328, 330, 331], "opposit": 66, "littl": 66, "byteord": 66, "ignor": [66, 250, 323], "new_arr": 66, "reflect": [66, 330], "rearrang": 66, "equal": [66, 230, 240], "greater": [66, 240], "behind": 66, "undefin": 66, "sequenc": [66, 219, 220, 221, 222, 223, 224, 294, 327], "final": [66, 199, 219, 220, 222, 322, 330], "them": [66, 220, 222, 227, 228, 230, 323, 331], "sinc": [66, 301, 332], "22": [66, 215], "algorithm": 66, "etc": [66, 79, 81, 84, 86, 118, 167, 170, 172, 174, 177, 180, 183, 185, 250, 252, 253, 255, 297, 300, 329], "unspecifi": 66, "come": [66, 120], "break": [66, 323], "ti": 66, "paritit": 66, "indirect": 66, "prod": 66, "ptp": 66, "peak": [66, 263, 271, 272, 273], "put": [66, 67, 239, 330], "repeat": [66, 311, 328, 330], "reshap": 66, "unlik": [66, 241], "free": [66, 332], "For": [66, 86, 126, 167, 172, 174, 177, 180, 183, 185, 241, 287, 322, 323, 327, 330, 332], "11": [66, 178, 330, 331], "resiz": 66, "new_shap": 66, "refcheck": 66, "count": [66, 167, 207, 208, 211, 213, 215, 230, 240, 305, 322, 330], "valueerror": [66, 230], "exist": [66, 129, 132, 134, 137, 189, 191, 221, 223, 224, 259, 288, 291, 323, 327], "pypi": 66, "reliabl": 66, "systemerror": 66, "behaviour": 66, "bug": [66, 323], "realloc": 66, "area": [66, 240], "necessari": [66, 124, 126, 129, 134, 137, 208, 220, 222, 237, 238, 284, 286, 322, 323, 324, 327, 330, 332], "consecut": 66, "shrink": 66, "enlarg": 66, "abov": [66, 330], "miss": [66, 227], "entri": [66, 219, 275, 322, 327, 330], "doesn": 66, "referenc": 66, "prevent": 66, "recent": 66, "cannot": 66, "round": 66, "around": [66, 73, 74, 327], "searchsort": 66, "v": [66, 154], "side": [66, 226, 300], "sorter": 66, "maintain": [66, 212, 219, 230], "setfield": 66, "val": [66, 89], "ey": 66, "int32": 66, "0e": 66, "000": 66, "5e": 66, "323": 66, "setflag": 66, "uic": 66, "writeabl": 66, "writebackifcopi": 66, "updateifcopi": 66, "These": [66, 204, 219, 220, 222, 233, 322, 331, 332], "how": [66, 69, 201, 222, 322, 323, 327, 330, 331], "actual": [66, 79, 81, 84, 86, 115, 116, 226, 241, 261, 300, 323], "never": 66, "ultim": [66, 323], "owner": 66, "expos": 66, "interfac": [66, 118], "unpickl": 66, "describ": [66, 327], "properli": [66, 322, 332], "about": [66, 210, 289, 300, 323], "four": [66, 332], "w": [66, 79, 81, 84, 86, 307], "appropri": [66, 323, 331], "compil": 66, "pyarray_resolvewritebackifcopi": 66, "upper": [66, 292], "letter": 66, "well": [66, 329], "f_contigu": 66, "owndata": 66, "stdin": 66, "quicksort": 66, "mergesort": 66, "heapsort": 66, "stabl": [66, 230], "both": [66, 102, 164, 167, 209, 253, 327, 331], "timsort": 66, "under": [66, 322, 327, 329, 330, 332], "cover": [66, 300, 332], "vari": 66, "datatyp": 66, "retain": 66, "15": [66, 273, 309, 331], "lexsort": 66, "kei": [66, 140, 142, 157, 159, 189, 191, 199, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 221, 223, 224, 230, 231, 233, 313, 323, 329], "partial": 66, "s1": 66, "i8": 66, "squeez": 66, "ax": [66, 167, 170, 172, 174, 177, 180, 183, 185, 322], "std": 66, "ddof": 66, "swapax": 66, "interchang": 66, "tobyt": 66, "raw": 66, "short": 66, "exhibit": 66, "u2": 66, "x00": 66, "x01": 66, "x02": 66, "x03": 66, "tofil": 66, "fid": 66, "sep": 66, "text": [66, 292, 327, 331], "independ": [66, 332], "recov": 66, "fromfil": 66, "open": [66, 79, 81, 84, 86, 164, 259, 323, 327, 331, 332], "filenam": [66, 84, 120, 235, 259, 289], "closest": 66, "conveni": 66, "quick": [66, 167], "storag": 66, "precis": [66, 332], "lost": 66, "good": [66, 323], "intend": [66, 231], "archiv": 66, "transport": 66, "overcom": 66, "expens": 66, "directli": [66, 73, 74, 115, 116, 118, 207, 327], "bypass": 66, "gzipfil": 66, "fileno": 66, "bytesio": 66, "tolist": 66, "ndim": 66, "level": [66, 206], "deep": 66, "nearest": 66, "builtin": 66, "depth": 66, "possibli": [66, 199], "recreat": 66, "although": 66, "sometim": 66, "1d": 66, "almost": [66, 73], "uint32": 66, "a_list": 66, "a_tolist": 66, "addition": 66, "appli": [66, 206, 228, 230, 240], "0d": 66, "typeerror": 66, "tostr": 66, "exactli": 66, "despit": 66, "19": 66, "transpos": 66, "effect": [66, 226, 271, 272, 273], "vector": 66, "simpli": [66, 226, 323], "addit": [66, 79, 81, 86, 167, 199, 205, 221, 223, 230, 259], "atleast2d": 66, "achiev": 66, "newaxi": 66, "matrix": [66, 134, 250], "permut": 66, "revers": [66, 230], "becom": 66, "altern": [66, 118, 250, 252, 253, 255, 323], "give": [66, 230, 322], "var": 66, "omit": 66, "former": [66, 257], "float_": 66, "descriptor": 66, "again": 66, "omiss": 66, "some_dtyp": 66, "reinterpret": 66, "ndarray_subclass": 66, "regular": [66, 323], "predict": 66, "superfici": 66, "shown": [66, 327, 331], "versu": 66, "int8": 66, "513": 66, "xv": 66, "underli": 66, "i1": 66, "recarrai": 66, "i2": 66, "ctype": 66, "simplifi": 66, "interact": [66, 330], "easier": [66, 230], "librari": [66, 287, 323, 329], "themselv": [66, 327], "possess": 66, "ctypeslib": 66, "public": 66, "guid": [66, 167, 323], "undocu": 66, "privat": 66, "_ctype": 66, "pointer": [66, 79, 81, 84, 86, 327], "arbitrari": [66, 79, 81, 84, 86, 327], "troubl": 66, "includ": [66, 140, 142, 167, 170, 172, 174, 177, 180, 183, 185, 199, 204, 205, 206, 208, 209, 212, 213, 219, 220, 221, 222, 223, 224, 227, 230, 250, 253, 255, 322, 327, 329, 330, 331, 332], "crash": [66, 323], "bewar": 66, "_array_interface_": 66, "data_a": 66, "kept": 66, "c_void_p": 66, "dealloc": 66, "spelt": 66, "basetyp": 66, "correspond": [66, 167, 172, 206, 221, 223, 224, 231, 233, 322, 330, 332], "p": [66, 307, 308, 309], "platform": 66, "c_intp": 66, "c_int": 66, "c_long": 66, "c_longlong": 66, "jump": 66, "next": [66, 193, 201, 208, 209, 257, 327, 332], "obj": 66, "_as_parameter_": 66, "perhap": 66, "c_doubl": 66, "keep": [66, 222, 323], "shape_a": 66, "c_short": 66, "strides_a": 66, "as_paramet": 66, "31962608": 66, "c_uint32": 66, "__main__": 66, "lp_c_uint": 66, "0x7ff2fc1fc200": 66, "c_uint": 66, "c_uint64": 66, "c_ulong": 66, "4294967296": 66, "_intern": 66, "c_long_array_2": 66, "0x7ff2fc1fce60": 66, "0x7ff2fc1ff320": 66, "segment": [66, 259], "o": [66, 281, 287, 288, 292, 331], "borrow": [66, 79, 81, 84, 86, 250, 252, 253, 255], "creation": 66, "subsequ": [66, 330], "while": [66, 67, 322], "remain": [66, 167, 207, 211, 212, 222], "alreadi": [66, 221, 323, 331], "circumst": 66, "alter": [66, 167], "previous": 66, "onto": [66, 332], "fnc": 66, "carrai": 66, "ca": 66, "farrai": 66, "fa": 66, "lowercas": 66, "arbitrarili": 66, "truli": [66, 332], "simultan": [66, 84, 167, 323, 332], "dimension": 66, "higher": [66, 201], "dim": [66, 294], "hold": [66, 289], "items": 66, "flatit": 66, "similarli": [66, 253], "built": [66, 230, 324], "arang": 66, "sqrt": 66, "0j": 66, "1j": 66, "70710678": 66, "nbyte": 66, "total": [66, 201, 207, 213, 222, 240, 300, 322], "consum": 66, "480": 66, "usual": 66, "infer": 66, "unchang": 66, "incompat": 66, "modif": [66, 323], "desir": [66, 115, 116, 118, 120, 204, 206, 259, 297], "obtain": 66, "suggest": 66, "int_": 66, "relev": [66, 210, 225], "further": 66, "overflow": 66, "fix": [66, 207, 323], "travers": 66, "explan": 66, "found": [66, 90, 322, 323, 330, 331], "rst": 66, "imagin": 66, "40": 66, "known": [66, 332], "tell": [66, 322, 323], "lib": 66, "stride_trick": 66, "as_strid": 66, "13": 66, "14": [66, 309, 330], "18": 66, "21": 66, "23": 66, "48": 66, "224": 66, "1344": 66, "813": 66, "mytestclass": [67, 68, 69], "testclass": 67, "toi": 67, "subprocess": 67, "test_incorrect_thread_manag": 67, "custodi": [67, 73, 74], "test_lock_with_waitlist": 67, "stai": [67, 263], "objectsinsubprocess": 67, "mock": 67, "_waitinglist": [67, 73], "test_object_in_subprocess_overhead": 67, "test_sending_shared_arrai": 67, "send": [67, 194, 195, 196], "sharedndarrai": [67, 69, 235, 259, 323], "test_ndarraylike_behavior": 69, "broke": 69, "suppos": 69, "test_seri": 69, "deseri": 69, "test_serializing_and_deseri": 69, "shared_memory_s": 71, "spawn": 71, "proxi": [71, 72, 280, 331], "proxyobject": [71, 73, 74], "shared_numpy_arrai": 71, "which_mp_arrai": 71, "shared_mp_arrai": 72, "proxymanag": [72, 73, 74], "thin": [73, 74], "wrapper": [73, 74], "few": [73, 74, 327], "usag": [73, 74], "_custodi": 73, "switch_from": 73, "_wait_in_lin": 73, "immedi": 73, "acquir": [74, 205, 206, 213, 215, 235, 257, 259, 322, 327, 332], "releas": [74, 212], "launch_custody_thread": 74, "feel": 74, "detect": [74, 206, 237, 238, 240, 241], "occour": 74, "file_nam": [79, 81, 84, 86, 250, 253, 255], "datasourc": [79, 82, 84, 86, 235], "sourc": [79, 81, 82, 84, 86, 215, 235, 328, 332], "metdata": [79, 81, 84, 86], "metadata": [79, 81, 84, 86, 205, 250, 255], "concept": [79, 81, 84, 86, 250, 252, 253, 255], "microscopi": [79, 81, 84, 86, 154, 199, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 250, 252, 253, 255], "clean": [79, 81, 84, 86, 213, 215, 329], "leftov": [79, 81, 84, 86], "set_metadata_from_configuration_experi": [79, 81, 84, 86], "dictproxi": [79, 81, 84, 86, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 113, 115, 118, 120, 124, 126, 162, 164, 167, 170, 172, 177, 189], "kw": [79, 81, 84, 86, 250, 253, 255], "xyz": [79, 167], "bdv": 79, "spec": [79, 250, 255], "xyczt": [79, 81, 84, 86, 250, 252, 253, 255], "rather": [79, 332], "subdivis": 79, "voxel_s": [79, 81, 84, 86, 250, 252, 253, 255], "voxel": [79, 81, 84, 86, 250, 252, 253, 255], "file_typ": [82, 235, 250, 253, 255], "tif": [82, 84, 235, 294], "tifdatasourc": 82, "is_bigtiff": 84, "intern": [84, 215, 250, 252, 253, 255], "generate_image_nam": [84, 235], "current_channel": [84, 235], "current_time_point": [84, 235], "ch00_000000": [84, 235], "timepoint": [84, 205, 211, 330], "stack": [84, 118, 120, 201, 211, 213, 215, 237, 238, 327, 332], "At": 84, "tifffil": 84, "imsav": 84, "copy_to_zarr": 86, "frame_id": [86, 196, 199, 201, 206, 207, 210, 212, 213, 235, 237, 238], "zarr": 86, "Will": [86, 253, 324], "fom": 86, "sharednd": 86, "three": 86, "assumpt": 86, "acquisit": [86, 97, 113, 115, 116, 118, 120, 124, 126, 140, 142, 199, 204, 205, 207, 208, 209, 211, 212, 213, 215, 235, 257, 259, 327, 328, 329], "dummi": [88, 225, 226, 227], "devic": [88, 89, 90, 91, 92, 96, 98, 99, 100, 101, 102, 103, 104, 194, 195, 199, 201, 204, 208, 215, 221, 222, 223, 224, 257, 259, 322, 328, 330, 331, 332], "n_tri": 89, "retri": 89, "connect": [89, 96, 98, 99, 100, 101, 102, 103, 104, 113, 115, 118, 120, 126, 130, 135, 140, 142, 159, 162, 164, 167, 168, 170, 172, 177, 178, 181, 189, 257, 259, 322, 330, 332], "startup": [89, 322, 330], "redial": 89, "baseexcept": 89, "dcam": [89, 332], "messag": [90, 194], "incorrect": 90, "device_typ": 90, "camera_id": 91, "is_synthet": [91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 195, 257, 323], "synthet": [91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 120, 121, 142, 151, 164, 259, 322, 324, 330], "dedic": [93, 94, 95, 97, 98, 102, 104], "multiproces": [93, 95, 97, 98, 99, 100, 101, 102, 103, 104, 113, 115, 118, 120, 124, 126, 162, 164, 189], "zoom": [95, 104, 204, 206, 246, 322, 329], "device_connect": [96, 98, 99, 100, 101, 102, 103, 104, 113, 115, 116, 118, 120, 129, 132, 134, 137, 140, 142, 150, 152, 157, 159, 162, 164, 167, 170, 172, 174, 177, 180, 183, 185, 189, 191, 257, 323], "filterwheel": 98, "scan": [99, 118, 167, 205, 215, 237, 238, 328, 332], "switch": [100, 134, 259, 263, 322, 330, 332], "analog": [100, 126, 265, 266, 268, 328], "digit": [100, 102, 332], "trigger": [100, 102, 126, 164, 181, 215, 239, 261, 332], "focus": [101, 157, 263, 297, 328, 332], "shutter": [102, 113, 115, 116, 120, 259, 329], "thorlabsshutt": 102, "syntheticshutt": 102, "ni": [102, 322, 330], "card": [102, 259, 329], "thu": [102, 330, 332], "enabl": [102, 134, 137, 213, 323, 324, 328, 332], "calculate_light_sheet_exposure_tim": [113, 115, 116, 118, 120], "full_chip_exposure_tim": [113, 115, 116, 118, 120], "shutter_width": [113, 115, 116, 118, 120], "exposur": [113, 115, 116, 118, 120, 124, 126, 140, 142, 157, 159, 195, 215, 257, 259, 261, 322], "light": [113, 115, 116, 118, 120, 259, 330, 332], "sheet": [113, 115, 116, 118, 120, 259, 330, 332], "roll": [113, 115, 120], "exposure_tim": [113, 115, 116, 118, 120, 124, 126, 140, 142, 157, 159, 259, 263, 322, 330], "camera_line_interv": [113, 115, 116, 118, 120, 259], "hamamatsuorca": [113, 116, 118, 120, 322, 330], "interv": [113, 115, 116, 118, 120, 259, 322, 332], "get_line_interv": [113, 115, 116, 118, 120], "line_interv": [113, 118, 120, 330], "set_readout_direct": [113, 115, 116, 118, 120], "bottom": [113, 115, 116, 118, 120, 327, 330], "bytrigg": [113, 115, 116, 120], "diverg": [113, 115, 116, 120], "camerabas": [115, 118, 120], "orca": 115, "flash": [115, 328], "calculate_readout_tim": [115, 116, 118, 120], "assum": [115, 116, 118, 129, 189, 191, 215, 235, 246, 250, 253, 255, 287, 294, 322, 331], "c13440": [115, 116, 118], "link": [115, 116, 118, 287], "commun": [115, 116, 118, 130, 134, 135, 137, 168, 180, 322, 330], "pull": [115, 116, 118, 323, 330], "readout_tim": [115, 116, 118, 120, 195, 257], "max_frame_r": [115, 116, 118, 120], "framer": [115, 116, 118, 120], "todo": [115, 116, 201, 235, 250, 253, 259, 301, 314, 326], "think": [115, 116], "camera_control": [115, 116, 118], "get_property_valu": [115, 116, 121], "close_camera": [115, 116, 118, 120], "close_image_seri": [115, 116, 118, 120], "seri": [115, 116, 118, 120], "stop": [115, 116, 118, 120, 126, 140, 142, 157, 159, 167, 170, 172, 174, 177, 180, 183, 185, 196, 219, 222, 230, 257, 259], "is_acquir": [115, 116, 118, 120], "line_interval_tim": [115, 116, 118, 120], "get_minimum_waiting_tim": [115, 116, 118, 120], "cyclic_trigger_period": [115, 116, 118, 120], "minimum_trigger_blank": [115, 116, 118, 120], "minimum_trigger_interv": [115, 116, 118, 120], "trigger_blank": [115, 116, 118, 120], "bigger": [115, 116, 118, 120], "trigger_interv": [115, 116, 118, 120], "get_new_fram": [115, 116, 118, 120], "initialize_image_seri": [115, 116, 118, 120], "data_buff": [115, 116, 118, 120, 235, 257, 259], "number_of_fram": [115, 116, 118, 120, 257], "100": [115, 116, 118, 120, 194, 322, 328, 330], "report_set": [115, 116, 118, 120], "set_roi": [115, 116, 118, 120], "roi_height": [115, 116, 118, 120], "2048": [115, 116, 120, 330], "roi_width": [115, 116, 118, 120], "region": [115, 116, 118, 120, 206, 300], "height": [115, 116, 118, 120, 257, 291], "set_bin": [115, 116, 118, 120], "binning_str": [115, 116, 118, 120], "bin": [115, 116, 118, 120, 330], "1x1": [115, 116, 118, 330], "2x2": [115, 116, 118, 120], "4x4": [115, 116, 118, 120], "8x8": [115, 116, 118, 120], "16x16": [115, 116, 118], "1x2": [115, 116, 118], "2x4": [115, 116, 118], "set_exposure_tim": [115, 116, 118, 120], "unit": [115, 116, 118, 120, 167, 170, 172, 174, 177, 180, 183, 185, 261, 262, 263, 264, 265, 266, 268, 328, 332], "millisecond": [115, 116, 118, 120, 322, 324, 330], "set_line_interv": [115, 116, 118, 120], "set_sensor_mod": [115, 116, 118, 120], "sensor": [115, 116, 118, 120, 222, 259], "serial_numb": [115, 116, 118, 178, 322, 330], "chip": 116, "photometr": 118, "kinetix": 118, "mainli": 118, "navig": [118, 327, 331], "right": [118, 164, 263, 291, 300, 327, 331, 332], "mesoscal": [118, 330], "nanoscal": [118, 206, 246, 330], "3200": 118, "down": [118, 263, 291, 327], "programm": 118, "static": [118, 201], "generate_new_fram": 120, "load_imag": [120, 259], "pre": [120, 124, 126, 227, 323, 327], "idprop": 121, "property_dict": 121, "property_valu": 121, "hard": [121, 201], "calculate_all_waveform": [124, 126, 257], "sweep_tim": [124, 126, 140, 142, 157, 159, 261, 262, 263, 264, 265, 266, 268, 330], "sweep": [124, 126, 140, 142, 157, 159, 195, 257], "waveform_dict": [124, 126, 140, 142, 157], "etl": [124, 126, 297], "plu": [124, 126], "daqbas": 126, "add_camera": 126, "close_task": [126, 140, 142, 157, 159], "task": [126, 140, 142, 157, 159, 215, 228, 332], "counter": [126, 332], "create_camera_task": 126, "create_galvo_remote_focus_task": 126, "create_master_trigger_task": 126, "prepare_acquisit": [126, 257, 259], "channel_kei": [126, 140, 142, 157, 159], "prepar": [126, 140, 142, 157, 159, 199, 201, 209, 212, 215, 219, 220, 222, 257, 259], "run_acquisit": [126, 259], "start_task": [126, 140, 142, 157, 159], "won": 126, "run_task": 126, "stop_acquisit": 126, "stop_task": [126, 140, 142, 157, 159], "write_waveforms_to_task": 126, "filterwheelbas": [129, 134, 137], "asi": [129, 167, 168, 215, 322, 330], "asiimag": [129, 167], "doc": [129, 167, 255, 287], "fw_1000": 129, "fw": 129, "1000_ascii_command_set": 129, "check_if_filter_in_filter_dictionari": [129, 132, 134, 137], "filter_nam": [129, 132, 134, 137], "filter_exist": [129, 132, 134, 137], "port": [129, 130, 134, 135, 137, 150, 152, 168, 180, 181, 322, 330, 332], "filter_change_delai": [129, 134, 137], "40m": 129, "adjac": 129, "set_filt": [129, 134, 137], "wait_until_don": [129, 134, 137, 167, 172, 174, 177, 180, 183, 185, 189, 191, 257, 259], "comport": [130, 135, 137], "baudrat": [130, 135, 137, 322, 330], "115200": [130, 168, 322, 330], "25": [130, 135, 181], "build": [130, 135, 181, 278, 286, 327], "asifilterwheel": 130, "com1": [130, 135, 137, 168], "baud": [130, 135, 137, 168, 181], "9600": [130, 135, 137, 168, 322, 330], "filter_dictionari": [132, 134, 137], "instal": [132, 134, 137, 259, 323, 329, 332, 333], "wheel_posit": [132, 134, 137], "sutter": [134, 324], "lambda": [134, 309], "manual": 134, "lb10": 134, "3_opman": 134, "number_of_filter_wheel": [134, 137], "wait_until_done_delai": [134, 137], "period": [134, 137, 263], "delay_matrix": 134, "movement": [134, 167, 170, 172, 174, 177, 180, 183, 185, 208, 213, 322, 330], "fastest": 134, "slowest": 134, "occupi": 134, "num_byt": [134, 137, 180], "retriev": [134, 227, 286, 297, 323], "page": [134, 154], "38": [134, 330], "sutterfilterwheel": [135, 322, 330], "galvo_id": [140, 142], "galvanomet": [140, 329], "galvo_nam": 140, "device_config": [140, 157, 323], "sample_r": [140, 157, 261, 262, 263, 264, 265, 266, 268, 330], "camera_delay_perc": [140, 157], "galvo_max_voltag": 140, "voltag": [140, 157, 262, 263, 265, 268], "galvo_min_voltag": 140, "remote_focus_ramp_fal": [140, 157], "ramp": [140, 157, 263], "fall": [140, 157, 263], "prepare_task": [140, 142, 157, 159], "adjust": [140, 142, 157, 159, 204, 205, 213, 259, 322, 332], "account": [140, 142, 314], "basi": [140, 142, 332], "channel_1": [140, 142], "channel_2": [140, 142], "galvobas": 142, "joystickbas": 147, "laser_id": [150, 152], "initialize_las": [150, 152], "power": [150, 152, 202, 322, 325, 327, 330], "cw": [150, 152], "apc": [150, 152], "laserbas": 152, "calculate_entrance_pupil": 154, "entranc": 154, "pupil": 154, "incid": 154, "angl": 154, "fluoresc": 154, "interfer": 154, "contrast": 154, "carolin": 154, "ajo": 154, "franklin": 154, "prasad": 154, "ganesan": 154, "steven": 154, "boxer": 154, "biophi": 154, "volum": [154, 309], "89": 154, "issu": [154, 323, 331], "octob": 154, "2005": 154, "2759": 154, "2769": 154, "entrance_pupil_diamet": 154, "diamet": 154, "millimet": [154, 167, 177], "remote_focus_delai": [157, 263], "remote_focus_max_voltag": 157, "remote_focus_min_voltag": 157, "nidaqmx": [157, 159], "488": [157, 273, 328, 330], "remotefocusbas": 159, "deviceconnect": 159, "shutterbas": 164, "deliv": [164, 332], "open_left": 164, "open_right": 164, "close_shutt": 164, "state": [164, 167, 219, 220, 222, 259, 311, 322, 327, 330], "device_id": [167, 170, 172, 174, 177, 180, 183, 185], "stagebas": [167, 172, 174, 177, 180, 183, 185], "serial_command": 167, "command_quick_start": 167, "distanc": [167, 201, 208, 300, 307, 308, 309, 324], "10th": 167, "micron": [167, 170, 172, 174, 177, 180, 183, 185, 328], "divis": 167, "ever": 167, "rel": [167, 215, 305, 332], "ftp": [167, 332], "stilt": 167, "strain": 167, "system": [167, 228, 235, 259, 271, 272, 273, 322, 323, 328, 330, 331, 332], "x_po": [167, 170, 172, 174, 177, 180, 183, 185, 322], "y_po": [167, 170, 172, 174, 177, 180, 183, 185, 322], "z_po": [167, 170, 322], "f_po": [167, 170, 201, 322], "theta_po": [167, 170, 322], "rotat": [167, 170, 301, 330], "position_dict": [167, 177, 180], "x_max": [167, 170, 322, 330], "y_max": [167, 170, 322, 330], "z_max": [167, 170, 322, 330], "f_max": [167, 170, 322, 330], "theta_max": [167, 170, 322, 330], "x_min": [167, 170, 172, 180, 322, 330], "y_min": [167, 170, 322, 330], "z_min": [167, 170, 322, 330], "f_min": [167, 170, 322, 330], "theta_min": [167, 170, 322, 330], "default_spe": 167, "get_position_dict": [167, 170, 172, 174, 177, 180, 183, 185], "get_abs_posit": [167, 170, 172, 174, 177, 180, 183, 185], "emerg": [167, 170, 172, 177], "halt": [167, 170, 172, 177], "get_axis_posit": 167, "move_axis_absolut": [167, 172, 174, 177, 180, 183, 185], "move_absolut": [167, 172, 174, 177, 180, 183, 185], "set_spe": 167, "veloc": [167, 215, 322, 330, 332], "get_spe": 167, "report_posit": [167, 172, 174, 177, 180, 185], "scanr": 167, "end": [167, 201, 205, 212, 213, 219, 220, 222, 227, 230, 237, 238, 257, 259, 322, 323, 327], "enc_divid": 167, "start_scan": 167, "stop_scan": 167, "verify_abs_posit": [167, 170, 172, 174, 177, 180, 183, 185], "axis_ab": [167, 170, 172, 174, 177, 180, 183, 185], "ensur": [167, 170, 172, 174, 177, 180, 183, 185, 208, 209, 211, 212, 227, 323], "request": [167, 170, 172, 174, 177, 180, 183, 185, 298, 323], "absolut": [167, 170, 172, 174, 177, 180, 183, 185, 323], "move_dictionari": [167, 170, 172, 174, 177, 180, 183, 185], "x_ab": [167, 170, 172, 174, 177, 180, 183, 185], "micromet": [167, 170, 172, 174, 177, 180, 183, 185, 324], "degre": [167, 170, 172, 174, 177, 180, 183, 185, 215], "spot": [167, 172, 174, 177, 180, 183, 185], "success": [167, 172, 174, 177, 180, 183, 185, 204, 205, 209, 210, 212, 239, 259], "abs_po": [167, 172, 174, 177, 180, 183, 185], "command": [167, 189, 191, 193, 259, 323, 331], "prefix": [167, 172], "start_position_mm": 167, "end_position_mm": 167, "everi": [167, 309, 322, 330, 332], "encod": [167, 215, 332], "velocity_dict": 167, "abruptli": [167, 170, 172, 174, 177, 180, 183], "is_strict": [167, 170, 172, 174, 177, 180, 183, 185], "y_ab": [167, 170, 172, 174, 177, 180, 183, 185], "abs_posit": [167, 170, 172, 174, 177, 180, 183, 185], "verify_mov": 167, "submit": 167, "aren": 167, "tiger": [167, 168], "res_dict": 167, "axes_map": [167, 170, 172, 174, 177, 180, 183, 185, 322, 330], "matter": [167, 170, 172, 174, 177, 180, 183, 185], "com_port": [168, 181], "baud_rat": [168, 181], "asi_stag": 168, "successfulli": [168, 289, 332], "positoin": 170, "create_position_dict": 172, "logic": [172, 174, 180, 183, 185, 222, 223], "serialnum": [175, 186], "physik": [177, 178], "instrument": [177, 178, 322, 328], "pi_tool": [177, 178], "tool": [177, 327, 332], "pi_devic": [177, 178], "pi_ax": 177, "xyzf": 177, "pi": [177, 264, 268, 322, 330], "wait_on_target": 177, "controller_nam": 178, "reference_mod": 178, "863": 178, "0112345678": 178, "111": 178, "1dg": 178, "frf": [178, 322, 330], "stage_connect": 178, "mp": [180, 324], "285": [180, 324], "mp285": [180, 181], "sutter_ax": 180, "sutterstag": 181, "device_control": 189, "build_stage_dict": [189, 191], "stage_posit": [189, 191, 257, 330], "ideal": [189, 191, 323, 327], "solvent": [189, 191], "babb": [189, 191, 330], "63x": [189, 191, 330], "1x": [189, 191, 330], "70775": [189, 191], "2x": [189, 191, 263, 328, 330], "72455": [189, 191], "3x": [189, 191, 330], "72710": [189, 191], "4x": [189, 191, 330], "72795": [189, 191], "5x": [189, 191, 330], "72850": [189, 191], "6x": [189, 191, 330], "72880": [189, 191], "refract": [189, 191, 271, 272, 273], "servo": [189, 191, 332], "read_posit": [189, 191], "cur_posit": [189, 191], "set_zoom": [189, 191], "confirm": [189, 191, 235, 327, 332], "tha": [189, 191], "zoomdict": [189, 191], "zoombas": 191, "dynamixelzoom": [191, 322, 330], "dummyview": 193, "execut": [193, 199, 205, 207, 208, 212, 213, 219, 220, 221, 222, 223, 224, 239, 284, 327], "sec": 193, "append": [193, 230, 259, 303], "sent": 193, "oldest": 193, "pop": [193, 230], "move_stag": [193, 257, 259], "grab": 193, "timecost": 194, "signal_pip": [194, 195, 196], "pipe": [194, 195, 196, 259], "data_pip": [194, 195, 196], "shutdown": [194, 195, 332], "generate_messag": 194, "listen": 194, "sendout": 194, "devices_dict": [195, 257], "calculate_exposure_sweep_tim": [195, 257], "signal_contain": 196, "signalcontain": [196, 228], "data_contain": 196, "datacontain": [196, 228], "signal_thread": 196, "data_thread": 196, "stop_flag": 196, "signal_func": [196, 204, 205, 207, 208, 209, 211, 212, 213, 239], "data_func": [196, 206, 207, 210, 212, 259], "feature_list": [196, 228, 231, 232, 233, 259], "autofocu": [199, 327], "measur": [199, 300], "microscopemodel": [199, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213], "associ": [199, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 219, 220, 221, 222, 223, 224, 323], "config_t": [199, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 235, 237, 327], "node": [199, 204, 205, 208, 212, 213, 219, 220, 221, 222, 223, 224, 228, 327], "relat": [199, 204, 205, 206, 208, 210, 213, 221, 223, 224, 292, 322, 330], "pre_func_sign": [199, 201, 215, 237, 238, 327], "in_func_sign": [199, 201, 237, 238, 327], "action": [199, 204, 213, 219, 223, 224], "end_func_sign": [199, 201, 237, 238, 327], "pre_func_data": [199, 201, 237, 238, 327], "applic": [199, 220, 222, 323], "in_func_data": [199, 201, 237, 238, 327], "end_func_data": [199, 201, 237, 238, 327], "util": 199, "involv": [199, 204, 205, 207, 208, 209, 210, 211, 212, 213, 220, 222], "autom": [199, 208, 329], "respons": [199, 202, 204, 206, 208, 219, 220, 221, 222, 223, 224, 227, 329], "carri": [199, 204], "device_ref": 201, "autofocus_frame_queu": 201, "autofocus_pos_queu": 201, "queue": [201, 239, 332], "max_entropi": 201, "f_frame_id": 201, "frame_num": 201, "init_po": 201, "focus_po": 201, "target_frame_id": 201, "get_frames_num": 201, "plot_data": 201, "total_frame_num": 201, "fine_step_s": 201, "fine": [201, 323], "fine_pos_offset": 201, "coarse_step_s": 201, "coars": [201, 328], "coarse_step": 201, "signal_id": 201, "target_channel": 201, "routin": [201, 202, 298, 329, 331], "get_autofocus_frame_num": 201, "best": [201, 323], "get_step": 201, "step_siz": [201, 322, 330], "autofocus": 201, "travel": 201, "pos_offset": 201, "figur": [201, 323], "robust_autofocu": 201, "robust": 201, "alpha": [201, 202], "unfortun": 201, "unstabl": 201, "x_offset": [202, 322, 330], "y_offset": [202, 322, 330], "tent": 202, "curv": 202, "resolution_mod": 204, "zoom_valu": 204, "reconfigur": [204, 327], "cleanup": [204, 208, 212, 213, 215, 219, 220, 222, 228, 259, 327], "accordingli": [204, 208, 211], "typic": [204, 208, 209, 210, 219, 220, 222, 223, 227, 231, 233, 263, 323], "adapt": 204, "resum": [204, 208, 259], "continu": [205, 207, 208, 213, 331, 332], "scanrang": 205, "n_plane": [205, 330], "offset_start": 205, "offset_end": 205, "offset_step_s": 205, "need_to_move_new_plan": 205, "offset_update_tim": 205, "conpro_cycling_mod": 205, "cycl": [205, 213], "per_stack": [205, 213], "multi": [205, 208, 213, 221, 223, 224, 327, 332], "device_rel": [205, 213, 221, 223, 224, 327], "pre_signal_func": [205, 212, 213], "signal_end": [205, 213], "generate_meta_data": [205, 235], "update_channel": [205, 213], "capabl": [205, 221, 223], "overlap": [206, 246, 300, 301], "target_resolut": [206, 246], "target_zoom": [206, 246], "grid": [206, 301], "interest": 206, "percentag": [206, 237, 238, 240, 241, 267], "preprocess": [206, 240], "box": [206, 309, 327, 331, 332], "step_by_fram": 207, "data_fram": 207, "ontain": 207, "flexibl": [207, 211, 332], "dynam": [207, 211, 233, 327], "track": [207, 212, 219, 222, 237, 238, 301], "decrement": 207, "advanc": [208, 322, 323, 327], "tabl": [208, 227, 303], "pre_z": 208, "current_idx": 208, "multiposition_t": 208, "position_count": 208, "stage_distance_threshold": 208, "paus": [208, 211, 259, 322], "proper": [208, 331, 332], "virtual": 209, "primari": [209, 327], "readi": [209, 240], "transit": [209, 220, 222], "prepare_next_channel": [209, 257], "captur": [210, 237, 238], "log": [210, 297], "pause_num": 211, "microscopest": [211, 235, 246, 327], "synchron": [211, 212, 332], "pause_signal_lock": 212, "pause_data_lock": 212, "first_enter_nod": 212, "variablewithlock": 212, "enter": [212, 331], "pre_data_func": [212, 213], "manner": [212, 322, 330], "slower": 212, "complet": [212, 221, 223, 227, 327], "improv": [212, 323], "proce": 212, "help": [212, 322, 323, 330], "held": 212, "get_origin": 213, "saving_flag": 213, "saving_dir": 213, "origin": [213, 331], "number_z_step": 213, "start_z_posit": 213, "start_focu": 213, "z_step_siz": 213, "focus_step_s": 213, "current_position_idx": 213, "being": [213, 275], "current_z_posit": 213, "current_focus_posit": 213, "need_to_move_new_posit": 213, "need_to_move_z_posit": 213, "z_position_moved_tim": 213, "stack_cycling_mod": 213, "image_writ": 213, "imagewrit": [213, 327], "in_data_func": 213, "incom": 213, "end_data_func": 213, "receiv": [213, 223, 224, 237, 238, 259], "cleanup_data_func": 213, "constant": [215, 297, 329, 332], "reset": [215, 219, 220, 222], "inject": 215, "divid": [215, 240, 300], "rotari": 215, "45": 215, "396": 215, "mm": 215, "nm": [215, 271, 272, 273, 328], "quadratur": 215, "88": 215, "motion": [215, 328], "optic": [215, 271, 272, 273, 330], "root": [219, 220, 222, 228, 250, 253, 255, 313, 314], "cleanup_list": [219, 220, 222], "tree": [219, 220, 221, 222, 223, 224, 228, 327], "consist": [219, 222, 322, 323], "treenod": [219, 220, 221, 222, 223], "curr_nod": [219, 222], "end_flag": [219, 222], "is_clos": [219, 222], "serv": [219, 225, 226], "special": [220, 221, 222], "extend": [220, 222, 230, 238], "analysi": [220, 259, 298, 327], "mark": [220, 221, 259], "feature_nam": [221, 223, 224], "func_dict": [221, 223, 224], "node_typ": [221, 223, 224, 327], "need_respons": [221, 223, 224, 327], "those": [221, 223, 224], "is_mark": 221, "node_nam": [221, 223, 224], "node_func": [221, 223, 224], "is_initi": [221, 223, 224], "sibl": [221, 223, 224, 228], "statu": [221, 298], "meet": [221, 323], "criteria": 221, "set_properti": [221, 223, 224], "pair": [221, 223, 224, 259, 327], "number_of_execut": 222, "remaining_number_of_execut": 222, "wait_respons": [222, 223], "placehold": [225, 226, 241], "unus": [225, 226], "often": [225, 330], "situat": [225, 226], "context": 225, "feature_modul": 227, "func_typ": 227, "essenti": 227, "init": [227, 327], "dummy_func": 227, "dummy_tru": 227, "signalnod": 228, "datanod": 228, "shared_vari": 228, "create_nod": 228, "build_feature_tre": 228, "assist": 228, "custom": [230, 237, 238, 329, 332], "particularli": 230, "shared_list__": 230, "__name__": 230, "__str__": 230, "compon": [230, 332], "meaning": 230, "shallow": 230, "occurr": 230, "9223372036854775807": 230, "indexerror": 230, "IN": 230, "ascend": 230, "descend": 230, "transmit": 231, "valid": [231, 232], "parenthes": [231, 327, 331], "bracket": [231, 330], "network": 231, "func1": [231, 233], "arg1": [231, 233], "arg2": [231, 233], "func2": [231, 233], "func3": [231, 233], "arg3": [231, 233], "func4": [231, 233], "feature_parameter_setting_path": 233, "extern": [233, 330, 332], "function_nam": 233, "yml": [233, 289], "inspect": 233, "value1": 233, "value2": 233, "sub_dir": 235, "image_nam": 235, "disk": [235, 287, 288, 289], "save_directori": [235, 286], "ext": 235, "meta": 235, "save_imag": 235, "data_sourc": 235, "mip": 235, "intens": [235, 266, 271, 272, 273], "project": [235, 330], "mip_directori": 235, "num_of_channel": 235, "calculate_and_check_disk_spac": 235, "suffici": [235, 237, 238], "wherea": [235, 330], "64": 235, "color": 235, "vestigi": 235, "delet": [235, 287, 329], "75": [237, 238], "detect_func": [237, 238], "consid": [237, 238, 240, 241, 323], "detect_tissu": [237, 238], "phase": [237, 238, 264, 265, 268, 330], "increment": [237, 238, 322, 328], "position_record": [238, 239], "detecttissueinstack": [238, 327], "position_flag": 239, "remove_posit": 239, "slide": 240, "approach": [240, 332], "service_url": 244, "flipx": 246, "flipi": 246, "debug": 246, "outer": 246, "active_microscope_nam": 246, "img": 247, "xl": 247, "yl": 247, "xu": 247, "yu": 247, "65535": 247, "xmlmetadata": [250, 255], "bigdataview": [250, 253], "xml": [250, 253, 255, 313, 314], "section": [250, 329, 331], "arxiv": 250, "org": [250, 255, 287], "ab": 250, "1412": 250, "0488": 250, "parse_bdv_xml": 250, "pars": [250, 253, 297, 313, 314], "incomplet": 250, "stage_positions_to_affine_matrix": 250, "affin": 250, "to_xml": [250, 253, 255], "write_xml": [250, 253, 255], "header": [250, 253, 255, 305], "om": [253, 255, 314], "proprietari": 253, "address": [253, 331], "_xml_dict": 253, "ome_tiff_xml_dict": [253, 255], "xml_tool": 253, "parse_xml": 253, "openmicroscopi": 255, "html": [255, 287], "uid": 255, "heirarch": 255, "ome_dict": 255, "is_virtu": 257, "listproxi": 257, "update_data_buff": [257, 259], "img_width": [257, 259], "img_height": [257, 259], "move_stage_offset": 257, "former_microscop": 257, "end_acquisit": [257, 259], "get_readout_tim": [257, 259], "assemble_device_config_list": 257, "device_nam": [257, 323], "device_name_dict": 257, "assembl": 257, "config": [257, 330, 331], "device_config_list": 257, "device_name_list": 257, "get_stage_posit": [257, 259], "load_and_start_devic": 257, "is_list": 257, "device_ref_nam": 257, "pos_dict": [257, 259, 275], "update_focu": 257, "central": 257, "stop_stag": [257, 259], "explicitli": 257, "turn_off_las": 257, "turn_on_las": 257, "event_queu": 259, "softwar": [259, 322, 323, 325, 327, 328, 332, 333], "architectur": [259, 323, 328, 329], "leverag": [259, 323], "cuda": [259, 298, 328, 331], "engin": 259, "get_data_buff": 259, "create_pip": 259, "release_pip": 259, "run_command": 259, "run_data_process": 259, "run_single_channel_acquisit": 259, "run_single_acquisit": 259, "snap_imag": 259, "run_live_acquisit": 259, "run_z_stack_acquisit": 259, "run_single_channel_acquisition_with_featur": 259, "change_resolut": 259, "resolution_valu": 259, "pipe_nam": 259, "duplex": 259, "end1": 259, "disconnect": 259, "get_active_microscop": 259, "get_camera_line_interval_and_exposure_tim": 259, "number_of_pixel": 259, "512": 259, "get_feature_list": 259, "idx": 259, "feature_list_str": 259, "get_microscope_info": 259, "get_offset_variance_map": 259, "offset_variance_map": 259, "ret_pos_dict": 259, "load_feature_list_from_str": 259, "load_feature_record": 259, "folder": [259, 287, 294, 323, 331], "unload": 259, "pause_data_thread": 259, "turn_off_flag": 259, "resume_data_thread": 259, "num_of_fram": 259, "stream": 259, "gui": [259, 303, 329], "recalcul": 259, "therebi": 259, "peopl": 259, "due": 259, "update_ilastik_set": 259, "display_segment": 259, "mark_posit": 259, "target_label": 259, "ilastik": [259, 330], "label": 259, "100000": [261, 262, 263, 264, 265, 266, 268, 322, 330], "camera_delai": [261, 263], "meant": 261, "visual": [261, 331], "hz": [261, 262, 263, 264, 265, 266, 268], "exposure_start": 261, "exposure_end": 261, "dc": 262, "reson": 262, "drive": [262, 265, 268, 329], "volt": [262, 263, 264, 265, 266, 268, 332], "typical_galvo": [262, 264], "24": 263, "sawtooth": [263, 323], "rise": 263, "linearli": 263, "drop": [263, 327], "exchang": 263, "etl_ramp": 263, "tunable_lens_ramp": 263, "etl_delai": 263, "duty_cycl": [264, 268, 330], "5707963267948966": 264, "radian": [264, 265, 268], "sine": [265, 330], "typical_las": [265, 268], "pulse_width": 266, "ttl": 266, "typical_ttl_puls": 266, "percent_smooth": [267, 330], "smooth": [267, 330], "convolut": 267, "smoothed_waveform": 267, "141592653589793": 268, "na": [271, 272, 273], "wvl": [271, 272, 273], "waist": [271, 272, 273], "apertur": [271, 272, 273], "wavelength": [271, 272, 273, 330], "r0": [271, 273], "z0": [271, 273], "w0": [271, 273], "i0": [271, 273], "bg0": 271, "rl": 273, "zl": 273, "33": 273, "bg": 273, "common": [275, 332], "model": [275, 323, 325, 327, 329], "variabletyp": 277, "ref_nam": 278, "funclist": 279, "new_func": 279, "module_nam": 281, "file_path": [281, 288], "statement": [284, 323], "wrap_func": 284, "saving_set": 286, "popup": [286, 327], "walk": 287, "everyth": 287, "reachabl": 287, "symbol": 287, "caution": 287, "danger": 287, "config_data": 288, "file_directori": 289, "content_dict": 289, "image_width": 291, "300": 291, "image_height": 291, "200": [291, 322, 330], "draw": 291, "arrow": 291, "ojbect": 291, "piec": [292, 324], "font": 292, "font_siz": 292, "fp": 294, "lazi": 294, "pil": 294, "containt": 294, "filenotfounderror": 294, "low_res_fp": 294, "2022": 294, "07": 294, "02": [294, 331], "cell_001": 294, "low_r": 294, "imshow": 294, "500": [294, 322, 330], "parser": [296, 297], "argumentpars": [296, 297], "argumentparserobject": 296, "argpars": [297, 298], "namespac": [297, 298, 314], "logging_path": 297, "gpu": [298, 328, 329], "dist": 300, "roi_length": 300, "roi": [300, 301], "watch": 300, "sign": [300, 301, 307, 308], "num_til": 300, "x_start": 301, "x_tile": 301, "x_length": 301, "x_overlap": 301, "y_start": 301, "y_tile": 301, "y_length": 301, "y_overlap": 301, "z_start": 301, "z_tile": 301, "z_length": 301, "z_overlap": 301, "theta_start": 301, "theta_til": 301, "theta_length": 301, "theta_overlap": 301, "f_start": 301, "f_tile": 301, "f_length": 301, "f_overlap": 301, "fov": 301, "n_posit": 301, "po": 303, "redraw": 303, "panda": 303, "datafram": 303, "multi_position_t": 303, "multiposit": 303, "begin_start": 305, "half": 307, "subsample_z": 309, "nxnxn": 309, "euclidean": 309, "subsampl": [309, 330], "128": 309, "29": 309, "waveform_template_nam": 311, "waveform_template_dict": 311, "microscope_state_dict": 311, "repeat_num": 311, "expand_num": 311, "expand": [311, 330], "tag": 313, "elementtre": 314, "etre": 314, "fullnam": [319, 320], "escap": [319, 320], "underlin": [319, 320], "rubric": 320, "endfor": 320, "endif": 320, "endblock": 320, "302158": [322, 330], "302352": [322, 330], "filter_wheel": [322, 330], "com19": [322, 330], "number_of_wheel": [322, 330], "controllernam": [322, 330], "884": [322, 330], "l": [322, 328, 330], "509": [322, 328, 330], "20dg10": [322, 328, 330], "40dg10": [322, 330], "060": [322, 330], "dg": [322, 330], "406": [322, 330], "4pd": [322, 330], "nostag": [322, 330], "refmod": [322, 330], "119060508": [322, 330], "thorlab": [322, 328, 330], "74000375": [322, 330], "servo_id": [322, 330], "com18": [322, 330], "1000000": [322, 330], "manufactur": [322, 324, 330, 332], "123456789": [322, 330], "com7": [322, 330], "instanti": [322, 330], "eg": [322, 330], "emploi": [322, 330], "syntheticstag": [322, 330], "987654321": [322, 330], "notic": [322, 330], "syntheticzoom": [322, 330], "abbrevi": 322, "y_unload_posit": 322, "10000": [322, 330], "y_load_posit": 322, "90000": 322, "startfocu": 322, "75000": 322, "33500": 322, "16000": 322, "50000": 322, "25000": 322, "360": [322, 330], "x_rot_posit": 322, "y_rot_posit": 322, "z_rot_posit": 322, "x_step": [322, 330], "y_step": [322, 330], "z_step": [322, 330], "theta_step": [322, 330], "f_step": [322, 330], "25250": 322, "40000": 322, "70000": 322, "1000": [322, 323, 330], "z_offset": [322, 330], "f_offset": [322, 330], "theta_offset": [322, 330], "explicil": [322, 330], "explictli": 322, "fashion": 322, "queri": 322, "awar": 322, "pimikromov": 322, "physic": [322, 330], "third": [322, 330], "spinbox": [322, 330], "develop": [322, 329, 330, 332], "plan": [322, 330], "go": [322, 330, 331], "forward": [322, 330], "widget": [322, 330], "tab": 322, "interval_tim": [322, 330], "eventu": 322, "frequent": [322, 331], "ch00": 322, "ch01": 322, "ch02": 322, "laser_pow": [322, 330], "inclus": 322, "stack_acquisit": [322, 330], "start_po": [322, 330], "end_po": [322, 330], "stack_paus": [322, 330], "5000": [322, 330], "welcom": 323, "pleas": [323, 331], "fork": 323, "branch": 323, "review": 323, "practic": 323, "outlin": 323, "refactor": 323, "reach": 323, "prior": [323, 332], "happi": 323, "bring": 323, "discuss": 323, "strong": 323, "especi": 323, "disrupt": 323, "clariti": 323, "team": 323, "merg": 323, "pep8": 323, "importantli": 323, "camelcas": 323, "lowercase_and_separated_by_underscor": 323, "numpydoc": 323, "commit": 323, "workflow": [323, 327], "enforc": 323, "ruff": 323, "linter": 323, "black": 323, "formatt": 323, "vscode": 323, "whatev": [323, 332], "conda": [323, 331], "aslm": [323, 324, 327, 329, 330, 331, 332], "pip": [323, 331], "cd": [323, 331], "rare": 323, "complain": 323, "start_stag": 323, "exec": 323, "device_startup_funct": 323, "start_": 323, "noqa": 323, "comment": 323, "easi": [323, 331], "opportun": 323, "galvo_waveform": 323, "alert": 323, "pytest": 323, "lab": [323, 328, 331], "appl": 323, "encount": 323, "resolv": 323, "oserror": 323, "ulimit": 323, "hand": 323, "abstract": [324, 329], "layer": [324, 329], "divers": [324, 332], "equip": [324, 328], "accompani": 324, "contribut": [324, 327, 329], "encourag": [325, 327], "engag": [325, 327], "collabor": [325, 327], "guidelin": [325, 329], "snap": 327, "pictur": 327, "common_featur": 327, "zstackacquisit": 327, "discret": 327, "cosin": 327, "volumesearch": 327, "ilastiksegment": 327, "detecttissueinstackandrecord": 327, "removeemptyposit": 327, "constantvelocityacquisit": 327, "changeresolut": 327, "conproacquisit": 327, "findtissuesimple2d": 327, "loopbycount": 327, "movetonextpositioninmultipositiont": 327, "preparenextchannel": 327, "stackpaus": 327, "waittocontinu": 327, "dictat": 327, "cleanup_func_sign": 327, "cleanup_func_data": 327, "acqusit": 327, "failsaf": 327, "latter": 327, "inde": 327, "proceed": 327, "intellig": 327, "explain": 327, "decor": 327, "featurelist": 327, "feature_related_funct": 327, "feature_exampl": 327, "selected_channel": 327, "ve": 327, "menu": 327, "4a": 327, "dialog": 327, "analys": 327, "whole": 327, "preview": 327, "ok": 327, "click": [327, 331, 332], "button": [327, 332], "graphic": [327, 331], "omicron": 328, "lighthub": 328, "ultra": 328, "acc": 328, "642": 328, "561": 328, "mix": [328, 332], "obi": 328, "unidirect": 328, "bidirect": 328, "repeatablil": 328, "borderlin": 328, "nvidia": [328, 331], "titan": 328, "rtx": 328, "driver": [328, 331, 332], "456": 328, "71": 328, "grabber": [328, 332], "optotun": 328, "electrotun": 328, "len": [328, 332], "blink": 328, "nation": 328, "pxie": [328, 332], "1073": 328, "chassi": 328, "pxi6733": [328, 330], "pxi6259": [328, 330, 332], "32mm": 328, "position": 328, "mad": 328, "citi": 328, "nano": 328, "ut": 329, "southwestern": 329, "ecosystem": 329, "aim": 329, "recip": 329, "maker": 329, "repositori": [329, 331], "minim": 329, "priorit": 329, "stabil": 329, "brutal": 329, "obviou": 329, "maxim": 329, "biolog": 329, "download": [329, 332], "git": 329, "environ": [329, 330], "troubleshoot": 329, "multiscal": 329, "expans": 329, "opm": 329, "v2": 329, "ct": 329, "v1": 329, "tirf": 329, "voicecoil": 329, "deform": 329, "mirror": 329, "mechan": [329, 330], "introduct": 329, "edit": 329, "zach": 329, "marin": 329, "anni": 329, "wang": 329, "dax": 329, "collison": 329, "kevin": 329, "dean": [329, 331], "sampath": 329, "rapuri": 329, "renil": 329, "gupta": 329, "samir": 329, "mamtani": 329, "andrew": 329, "jamieson": 329, "york": 329, "nathaniel": 329, "thayer": 329, "confus": 330, "recommend": [330, 331], "anaconda": [330, 331], "prompt": [330, 331, 332], "sh": [330, 331], "thereaft": 330, "conflict": 330, "master_trigger_out_lin": [330, 332], "camera_trigger_out_lin": [330, 332], "trigger_sourc": [330, 332], "laser_port_switch": 330, "laser_switch_st": 330, "pixel_size_in_micron": 330, "sensor_mod": 330, "readout_direct": 330, "lightsheet_rolling_shutter_width": 330, "608": 330, "defect_correct_mod": 330, "readout_spe": 330, "trigger_act": 330, "trigger_mod": 330, "trigger_polar": 330, "throughout": 330, "000075": 330, "display_acquisition_subsampl": 330, "average_frame_r": 330, "969": 330, "frames_to_averag": 330, "exposure_time_rang": 330, "remote_focus_devic": 330, "ao2": [330, 332], "ramp_rising_perc": 330, "85": 330, "ramp_falling_perc": 330, "ao0": [330, 332], "99": 330, "57079": 330, "wheel_numb": 330, "filter_wheel_delai": 330, "030": 330, "available_filt": 330, "rfp": 330, "595": 330, "31": 330, "far": [330, 331], "red": 330, "blp01": 330, "647r": 330, "blocked1": 330, "blocked2": 330, "blocked3": 330, "blocked4": 330, "blocked5": 330, "blocked6": 330, "earlier": 330, "volts_per_micron": 330, "axes_channel": 330, "joystick_ax": 330, "agre": [330, 332], "vertic": 330, "vice": 330, "versa": 330, "disabl": 330, "mention": 330, "627": 330, "1711": 330, "2301": 330, "2710": 330, "3079": 330, "3383": 330, "609": 330, "255": 330, "044": 330, "port0": [330, 332], "line0": 330, "onoff": 330, "line2": 330, "luxx": 330, "87": 330, "remote_focus_const": 330, "336": 330, "percent_delai": 330, "562nm": 330, "galvo_const": 330, "other_const": 330, "duty_wait_dur": 330, "confoc": 330, "url": 330, "127": 330, "desktop": 331, "friendli": 331, "head": 331, "miniconda": 331, "websit": 331, "handi": 331, "cheatsheet": 331, "accustom": 331, "pin": [331, 332], "taskbar": 331, "mycomput": 331, "firewal": 331, "utsw": 331, "campu": 331, "circumv": 331, "activatin": 331, "upgrad": 331, "clone": 331, "mkdir": 331, "myfoldernam": 331, "thedeanlab": 331, "completet": 331, "upon": [331, 332], "shortcut": 331, "windir": 331, "system32": 331, "cmd": 331, "ex": 331, "script": 331, "bat": 331, "feedback": 331, "acceler": 331, "tensorflow": 331, "pytorch": 331, "cupi": 331, "excel": 331, "cudnn": 331, "sdk": [331, 332], "450": 331, "80": 331, "tensorrt": 331, "microsoft": 331, "redistribut": 331, "studio": 331, "2015": 331, "2017": 331, "2019": 331, "http_proxi": 331, "swmed": 331, "edu": 331, "3128": 331, "https_proxi": 331, "typo": 331, "perspect": 331, "onlin": 331, "usersuserprofil": 331, "condarc": 331, "usersuserprofilepippip": 331, "ini": 331, "password": 331, "8080": 331, "sever": 332, "6733": 332, "daqmx": 332, "recogn": 332, "visibl": 332, "pinout": 332, "scb": 332, "68a": 332, "breakout": 332, "mislead": 332, "aspect": 332, "wire": 332, "board": 332, "receipt": 332, "determinist": 332, "jitter": 332, "anticip": 332, "dev1": 332, "dev2": 332, "commonli": 332, "line1": 332, "pfi0": 332, "p0": 332, "pfio": 332, "gate": 332, "attach": 332, "outsid": 332, "bank": 332, "ao6": 332, "ao8": 332, "ao9": 332, "ao10": 332, "compet": 332, "ao": 332, "distribut": 332, "across": 332, "ao14": 332, "ao19": 332, "usb": 332, "came": 332, "hcimagel": 332, "intal": 332, "silicon": 332, "firebird": 332, "framegrabb": 332, "apporpri": 332, "x16": 332, "slot": 332, "motherboard": 332, "excap": 332, "ctr0": 332, "pvcam": 332, "term": 332, "unknown": 332, "broadcom": 332, "pci": 332, "kit": 332, "bridg": 332, "dev": 332, "_": 332, "abl": 332, "pvcamtest": 332, "voic": 332, "coil": 332, "actuat": 332, "plai": 332, "crucial": 332, "role": 332, "aberr": 332, "electromagnet": 332, "axial": 332, "focal": 332, "shift": 332, "sca814": 332, "lfa": 332, "2010": 332, "empow": 332, "cater": 332, "modal": 332, "suit": 332, "seamless": 332, "versatil": 332, "tailor": 332, "research": 332, "sync": 332, "less": 332, "perz": 332, "damag": 332}, "objects": {"aslm": [[0, 0, 0, "-", "config"], [9, 0, 0, "-", "controller"], [16, 0, 0, "-", "model"], [269, 0, 0, "-", "tools"], [315, 0, 0, "-", "view"]], "aslm.config": [[1, 0, 0, "-", "config"]], "aslm.config.config": [[2, 1, 1, "", "build_nested_dict"], [3, 1, 1, "", "get_aslm_path"], [4, 1, 1, "", "get_configuration_paths"], [5, 1, 1, "", "load_configs"], [6, 1, 1, "", "update_config_dict"], [7, 1, 1, "", "verify_experiment_config"], [8, 1, 1, "", "verify_waveform_constants"]], "aslm.controller": [[10, 0, 0, "-", "configuration_controller"], [12, 0, 0, "-", "thread_pool"]], "aslm.controller.configuration_controller": [[11, 2, 1, "", "ConfigurationController"]], "aslm.controller.configuration_controller.ConfigurationController": [[11, 3, 1, "", "__init__"], [11, 4, 1, "", "camera_config_dict"], [11, 4, 1, "", "camera_flip_flags"], [11, 4, 1, "", "camera_pixels"], [11, 3, 1, "id0", "change_microscope"], [11, 4, 1, "", "channels_info"], [11, 4, 1, "", "daq_sample_rate"], [11, 4, 1, "", "filter_wheel_setting_dict"], [11, 4, 1, "", "galvo_parameter_dict"], [11, 3, 1, "id1", "get_microscope_configuration_dict"], [11, 3, 1, "id2", "get_stage_position_limits"], [11, 4, 1, "", "lasers_info"], [11, 4, 1, "", "number_of_channels"], [11, 4, 1, "", "remote_focus_dict"], [11, 4, 1, "", "stage_default_position"], [11, 4, 1, "", "stage_flip_flags"], [11, 4, 1, "", "stage_setting_dict"], [11, 4, 1, "", "stage_step"]], "aslm.controller.thread_pool": [[13, 2, 1, "", "SelfLockThread"], [14, 2, 1, "", "SynchronizedThreadPool"], [15, 2, 1, "", "ThreadWaitlist"]], "aslm.controller.thread_pool.SelfLockThread": [[13, 3, 1, "", "__init__"], [13, 4, 1, "", "daemon"], [13, 3, 1, "", "getName"], [13, 4, 1, "", "ident"], [13, 3, 1, "", "isDaemon"], [13, 3, 1, "", "isLocked"], [13, 3, 1, "", "is_alive"], [13, 3, 1, "", "join"], [13, 4, 1, "", "name"], [13, 4, 1, "", "native_id"], [13, 3, 1, "", "run"], [13, 3, 1, "", "setDaemon"], [13, 3, 1, "", "setName"], [13, 3, 1, "", "start"], [13, 3, 1, "", "unlock"], [13, 3, 1, "", "wait"]], "aslm.controller.thread_pool.SynchronizedThreadPool": [[14, 3, 1, "", "__init__"], [14, 3, 1, "", "clear"], [14, 3, 1, "", "createThread"], [14, 3, 1, "", "getRunningThread"], [14, 3, 1, "", "globaltrace"], [14, 3, 1, "", "killThreadInList"], [14, 3, 1, "", "localtrace"], [14, 3, 1, "", "moveToDelete"], [14, 3, 1, "", "registerResource"], [14, 3, 1, "", "removeThread"], [14, 3, 1, "", "threadTaskWrapping"]], "aslm.controller.thread_pool.ThreadWaitlist": [[15, 3, 1, "", "__init__"]], "aslm.model": [[17, 0, 0, "-", "analysis"], [58, 0, 0, "-", "concurrency"], [77, 0, 0, "-", "data_sources"], [87, 0, 0, "-", "device_startup_functions"], [105, 0, 0, "-", "devices"], [192, 0, 0, "-", "dummy"], [197, 0, 0, "-", "features"], [248, 0, 0, "-", "metadata_sources"], [256, 0, 0, "-", "microscope"], [258, 0, 0, "-", "model"], [260, 0, 0, "-", "waveforms"]], "aslm.model.analysis": [[18, 0, 0, "-", "boundary_detect"], [23, 0, 0, "-", "camera"], [28, 0, 0, "-", "detection"], [38, 0, 0, "-", "image_contrast"], [44, 0, 0, "-", "image_decorrelation"], [53, 0, 0, "-", "image_transform"], [56, 0, 0, "-", "spectral_unmixing"]], "aslm.model.analysis.boundary_detect": [[19, 1, 1, "", "binary_detect"], [20, 1, 1, "", "find_tissue_boundary_2d"], [21, 1, 1, "", "has_tissue"], [22, 1, 1, "", "map_boundary"]], "aslm.model.analysis.camera": [[24, 1, 1, "", "compute_flatfield_map"], [25, 1, 1, "", "compute_noise_sigma"], [26, 1, 1, "", "compute_scmos_offset_and_variance_map"], [27, 1, 1, "", "compute_signal_to_noise"]], "aslm.model.analysis.detection": [[29, 1, 1, "", "add_median_border"], [30, 1, 1, "", "combine_images"], [31, 1, 1, "", "log_detection"], [32, 1, 1, "", "make_inside_image"], [33, 1, 1, "", "make_normalized_image"], [34, 1, 1, "", "make_sphere_3D"], [35, 1, 1, "", "multiscale_surface_filter_3D"], [36, 1, 1, "", "surface_filter_gauss_3D"], [37, 1, 1, "", "three_level_segmentation"]], "aslm.model.analysis.image_contrast": [[39, 1, 1, "", "estimate_and_correct_flatfield"], [40, 1, 1, "", "estimate_image_resolution"], [41, 1, 1, "", "fast_normalized_dct_shannon_entropy"], [42, 1, 1, "", "image_intensity"], [43, 1, 1, "", "normalized_dct_shannon_entropy"]], "aslm.model.analysis.image_decorrelation": [[45, 1, 1, "", "apodize_image"], [46, 1, 1, "", "get_correlation_coefficient"], [47, 1, 1, "", "get_decorrelation_local_maxima"], [48, 1, 1, "", "get_image_decorrelation"], [49, 1, 1, "", "get_radial_average"], [50, 1, 1, "", "image_to_polar"], [51, 1, 1, "", "linear_map"], [52, 1, 1, "", "main_image_decorr"]], "aslm.model.analysis.image_transform": [[54, 1, 1, "", "deskew_image"], [55, 1, 1, "", "initiate_gpu"]], "aslm.model.analysis.spectral_unmixing": [[57, 1, 1, "", "to_do"]], "aslm.model.concurrency": [[59, 0, 0, "-", "concurrency_tools"], [70, 0, 0, "-", "proxy_objects"], [75, 0, 0, "-", "write_parameters"]], "aslm.model.concurrency.concurrency_tools": [[60, 2, 1, "", "CustodyThread"], [61, 5, 1, "", "FancyThread"], [62, 2, 1, "", "MyTestClass"], [63, 2, 1, "", "ObjectInSubprocess"], [64, 5, 1, "", "PoliteThread"], [65, 2, 1, "", "ResultThread"], [66, 2, 1, "", "SharedNDArray"], [67, 2, 1, "", "TestObjectInSubprocess"], [68, 2, 1, "", "TestResultThreadAndCustodyThread"], [69, 2, 1, "", "TestSharedNDArray"]], "aslm.model.concurrency.concurrency_tools.CustodyThread": [[60, 3, 1, "", "__init__"], [60, 4, 1, "", "daemon"], [60, 3, 1, "", "getName"], [60, 3, 1, "", "get_result"], [60, 4, 1, "", "ident"], [60, 3, 1, "", "isDaemon"], [60, 3, 1, "", "is_alive"], [60, 3, 1, "", "join"], [60, 4, 1, "", "name"], [60, 4, 1, "", "native_id"], [60, 3, 1, "", "run"], [60, 3, 1, "", "setDaemon"], [60, 3, 1, "", "setName"], [60, 3, 1, "", "start"]], "aslm.model.concurrency.concurrency_tools.MyTestClass": [[62, 3, 1, "", "__init__"], [62, 3, 1, "", "run"], [62, 3, 1, "", "time_it"]], "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess": [[63, 3, 1, "", "__init__"]], "aslm.model.concurrency.concurrency_tools.ResultThread": [[65, 3, 1, "", "__init__"], [65, 4, 1, "", "daemon"], [65, 3, 1, "", "getName"], [65, 3, 1, "", "get_result"], [65, 4, 1, "", "ident"], [65, 3, 1, "", "isDaemon"], [65, 3, 1, "", "is_alive"], [65, 3, 1, "", "join"], [65, 4, 1, "", "name"], [65, 4, 1, "", "native_id"], [65, 3, 1, "", "run"], [65, 3, 1, "", "setDaemon"], [65, 3, 1, "", "setName"], [65, 3, 1, "", "start"]], "aslm.model.concurrency.concurrency_tools.SharedNDArray": [[66, 5, 1, "", "ALIGNED"], [66, 5, 1, "", "BEHAVED"], [66, 5, 1, "", "CARRAY"], [66, 5, 1, "", "C_CONTIGUOUS"], [66, 5, 1, "", "FARRAY"], [66, 5, 1, "", "FNC"], [66, 5, 1, "", "FORC"], [66, 5, 1, "", "F_CONTIGUOUS"], [66, 5, 1, "", "OWNDATA"], [66, 5, 1, "", "T"], [66, 5, 1, "", "UPDATEIFCOPY"], [66, 5, 1, "", "WRITEABLE"], [66, 5, 1, "", "WRITEBACKIFCOPY"], [66, 3, 1, "", "__init__"], [66, 3, 1, "", "all"], [66, 3, 1, "", "any"], [66, 3, 1, "", "argmax"], [66, 3, 1, "", "argmin"], [66, 3, 1, "", "argpartition"], [66, 3, 1, "", "argsort"], [66, 3, 1, "", "astype"], [66, 5, 1, "", "base"], [66, 3, 1, "", "byteswap"], [66, 3, 1, "", "choose"], [66, 3, 1, "", "clip"], [66, 3, 1, "", "compress"], [66, 3, 1, "", "conj"], [66, 3, 1, "", "conjugate"], [66, 3, 1, "", "copy"], [66, 5, 1, "", "ctypes"], [66, 3, 1, "", "cumprod"], [66, 3, 1, "", "cumsum"], [66, 5, 1, "", "data"], [66, 3, 1, "", "diagonal"], [66, 5, 1, "", "dtype"], [66, 3, 1, "", "dump"], [66, 3, 1, "", "dumps"], [66, 3, 1, "", "fill"], [66, 5, 1, "", "flags"], [66, 5, 1, "", "flat"], [66, 3, 1, "", "flatten"], [66, 3, 1, "", "getfield"], [66, 5, 1, "", "imag"], [66, 3, 1, "", "item"], [66, 3, 1, "", "itemset"], [66, 5, 1, "", "itemsize"], [66, 3, 1, "", "max"], [66, 3, 1, "", "mean"], [66, 3, 1, "", "min"], [66, 5, 1, "", "nbytes"], [66, 5, 1, "", "ndim"], [66, 3, 1, "", "newbyteorder"], [66, 3, 1, "", "nonzero"], [66, 3, 1, "", "partition"], [66, 3, 1, "", "prod"], [66, 3, 1, "", "ptp"], [66, 3, 1, "", "put"], [66, 3, 1, "", "ravel"], [66, 5, 1, "", "real"], [66, 3, 1, "", "repeat"], [66, 3, 1, "", "reshape"], [66, 3, 1, "", "resize"], [66, 3, 1, "", "round"], [66, 3, 1, "", "searchsorted"], [66, 3, 1, "", "setfield"], [66, 3, 1, "", "setflags"], [66, 5, 1, "", "shape"], [66, 5, 1, "", "size"], [66, 3, 1, "", "sort"], [66, 3, 1, "", "squeeze"], [66, 3, 1, "", "std"], [66, 5, 1, "", "strides"], [66, 3, 1, "", "sum"], [66, 3, 1, "", "swapaxes"], [66, 3, 1, "", "take"], [66, 3, 1, "", "tobytes"], [66, 3, 1, "", "tofile"], [66, 3, 1, "", "tolist"], [66, 3, 1, "", "tostring"], [66, 3, 1, "", "trace"], [66, 3, 1, "", "transpose"], [66, 3, 1, "", "var"], [66, 3, 1, "", "view"]], "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess": [[67, 2, 1, "", "TestClass"], [67, 3, 1, "", "__init__"], [67, 3, 1, "", "run"], [67, 3, 1, "", "test_incorrect_thread_management"], [67, 3, 1, "", "test_lock_with_waitlist"], [67, 3, 1, "", "test_object_in_subprocess_overhead"], [67, 3, 1, "", "test_sending_shared_arrays"], [67, 3, 1, "", "time_it"]], "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread": [[68, 3, 1, "", "__init__"], [68, 3, 1, "", "run"], [68, 3, 1, "", "time_it"]], "aslm.model.concurrency.concurrency_tools.TestSharedNDArray": [[69, 3, 1, "", "__init__"], [69, 3, 1, "", "run"], [69, 3, 1, "", "test_ndarraylike_behavior"], [69, 3, 1, "", "test_serialization"], [69, 3, 1, "", "test_serializing_and_deserializing"], [69, 3, 1, "", "time_it"]], "aslm.model.concurrency.proxy_objects": [[71, 2, 1, "", "ProxyManager"], [72, 2, 1, "", "ProxyObject"], [73, 1, 1, "", "launch_custody_thread"], [74, 1, 1, "", "launch_thread"]], "aslm.model.concurrency.proxy_objects.ProxyManager": [[71, 3, 1, "", "__init__"], [71, 3, 1, "", "proxy_object"], [71, 3, 1, "", "shared_numpy_array"]], "aslm.model.concurrency.proxy_objects.ProxyObject": [[72, 3, 1, "", "__init__"]], "aslm.model.concurrency.write_parameters": [[76, 2, 1, "", "write_Params"]], "aslm.model.concurrency.write_parameters.write_Params": [[76, 3, 1, "", "__init__"]], "aslm.model.data_sources": [[78, 0, 0, "-", "bdv_data_source"], [80, 0, 0, "-", "data_source"], [82, 1, 1, "", "get_data_source"], [83, 0, 0, "-", "tiff_data_source"], [85, 0, 0, "-", "zarr_data_source"]], "aslm.model.data_sources.bdv_data_source": [[79, 2, 1, "", "BigDataViewerDataSource"]], "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource": [[79, 3, 1, "", "__init__"], [79, 3, 1, "", "close"], [79, 4, 1, "id3", "data"], [79, 5, 1, "id0", "file_name"], [79, 5, 1, "id2", "metadata"], [79, 4, 1, "", "mode"], [79, 3, 1, "", "read"], [79, 4, 1, "", "resolutions"], [79, 3, 1, "", "set_metadata_from_configuration_experiment"], [79, 4, 1, "", "shape"], [79, 4, 1, "", "shapes"], [79, 4, 1, "", "size"], [79, 4, 1, "", "subdivisions"], [79, 4, 1, "", "voxel_size"], [79, 3, 1, "", "write"]], "aslm.model.data_sources.data_source": [[81, 2, 1, "", "DataSource"]], "aslm.model.data_sources.data_source.DataSource": [[81, 3, 1, "", "__init__"], [81, 3, 1, "", "close"], [81, 4, 1, "id3", "data"], [81, 5, 1, "id0", "file_name"], [81, 5, 1, "id2", "metadata"], [81, 4, 1, "", "mode"], [81, 3, 1, "", "read"], [81, 3, 1, "", "set_metadata_from_configuration_experiment"], [81, 4, 1, "", "shape"], [81, 4, 1, "", "size"], [81, 4, 1, "", "voxel_size"], [81, 3, 1, "", "write"]], "aslm.model.data_sources.tiff_data_source": [[84, 2, 1, "", "TiffDataSource"]], "aslm.model.data_sources.tiff_data_source.TiffDataSource": [[84, 3, 1, "", "__init__"], [84, 3, 1, "", "close"], [84, 4, 1, "id3", "data"], [84, 5, 1, "id0", "file_name"], [84, 3, 1, "", "generate_image_name"], [84, 5, 1, "id2", "metadata"], [84, 4, 1, "", "mode"], [84, 3, 1, "", "read"], [84, 3, 1, "", "set_metadata_from_configuration_experiment"], [84, 4, 1, "", "shape"], [84, 4, 1, "", "size"], [84, 4, 1, "", "voxel_size"], [84, 3, 1, "", "write"]], "aslm.model.data_sources.zarr_data_source": [[86, 2, 1, "", "ZarrDataSource"]], "aslm.model.data_sources.zarr_data_source.ZarrDataSource": [[86, 3, 1, "", "__init__"], [86, 3, 1, "", "close"], [86, 3, 1, "", "copy_to_zarr"], [86, 4, 1, "id3", "data"], [86, 5, 1, "id0", "file_name"], [86, 5, 1, "id2", "metadata"], [86, 4, 1, "", "mode"], [86, 3, 1, "", "read"], [86, 3, 1, "", "set_metadata_from_configuration_experiment"], [86, 4, 1, "", "shape"], [86, 4, 1, "", "size"], [86, 4, 1, "", "voxel_size"], [86, 3, 1, "", "write"]], "aslm.model.device_startup_functions": [[88, 2, 1, "", "DummyDeviceConnection"], [89, 1, 1, "", "auto_redial"], [90, 1, 1, "", "device_not_found"], [91, 1, 1, "", "load_camera_connection"], [92, 1, 1, "", "load_devices"], [93, 1, 1, "", "load_filter_wheel_connection"], [94, 1, 1, "", "load_stages"], [95, 1, 1, "", "load_zoom_connection"], [96, 1, 1, "", "start_camera"], [97, 1, 1, "", "start_daq"], [98, 1, 1, "", "start_filter_wheel"], [99, 1, 1, "", "start_galvo"], [100, 1, 1, "", "start_lasers"], [101, 1, 1, "", "start_remote_focus_device"], [102, 1, 1, "", "start_shutter"], [103, 1, 1, "", "start_stage"], [104, 1, 1, "", "start_zoom"]], "aslm.model.device_startup_functions.DummyDeviceConnection": [[88, 3, 1, "", "__init__"]], "aslm.model.devices": [[106, 0, 0, "-", "APIs"], [111, 0, 0, "-", "camera"], [122, 0, 0, "-", "daq"], [127, 0, 0, "-", "filter_wheel"], [138, 0, 0, "-", "galvo"], [143, 0, 0, "-", "joystick"], [148, 0, 0, "-", "lasers"], [153, 0, 0, "-", "objectives"], [155, 0, 0, "-", "remote_focus"], [160, 0, 0, "-", "shutter"], [165, 0, 0, "-", "stages"], [187, 0, 0, "-", "zoom"]], "aslm.model.devices.APIs": [[107, 0, 0, "-", "coherent"], [108, 0, 0, "-", "dynamixel"], [109, 0, 0, "-", "logitech"], [110, 0, 0, "-", "omicron"]], "aslm.model.devices.camera": [[112, 0, 0, "-", "camera_base"], [114, 0, 0, "-", "camera_hamamatsu"], [117, 0, 0, "-", "camera_photometrics"], [119, 0, 0, "-", "camera_synthetic"]], "aslm.model.devices.camera.camera_base": [[113, 2, 1, "", "CameraBase"]], "aslm.model.devices.camera.camera_base.CameraBase": [[113, 3, 1, "", "__init__"], [113, 3, 1, "", "calculate_light_sheet_exposure_time"], [113, 3, 1, "", "get_line_interval"], [113, 3, 1, "", "set_readout_direction"]], "aslm.model.devices.camera.camera_hamamatsu": [[115, 2, 1, "", "HamamatsuOrca"], [116, 2, 1, "", "HamamatsuOrcaLightning"]], "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca": [[115, 3, 1, "", "__init__"], [115, 3, 1, "", "calculate_light_sheet_exposure_time"], [115, 3, 1, "", "calculate_readout_time"], [115, 3, 1, "", "close_camera"], [115, 3, 1, "", "close_image_series"], [115, 3, 1, "", "get_line_interval"], [115, 3, 1, "", "get_minimum_waiting_time"], [115, 3, 1, "", "get_new_frame"], [115, 3, 1, "", "initialize_image_series"], [115, 3, 1, "", "report_settings"], [115, 4, 1, "", "serial_number"], [115, 3, 1, "", "set_ROI"], [115, 3, 1, "", "set_binning"], [115, 3, 1, "", "set_exposure_time"], [115, 3, 1, "", "set_line_interval"], [115, 3, 1, "", "set_readout_direction"], [115, 3, 1, "", "set_sensor_mode"]], "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning": [[116, 3, 1, "", "__init__"], [116, 3, 1, "", "calculate_light_sheet_exposure_time"], [116, 3, 1, "", "calculate_readout_time"], [116, 3, 1, "", "close_camera"], [116, 3, 1, "", "close_image_series"], [116, 3, 1, "", "get_line_interval"], [116, 3, 1, "", "get_minimum_waiting_time"], [116, 3, 1, "", "get_new_frame"], [116, 3, 1, "", "initialize_image_series"], [116, 3, 1, "", "report_settings"], [116, 4, 1, "", "serial_number"], [116, 3, 1, "", "set_ROI"], [116, 3, 1, "", "set_binning"], [116, 3, 1, "", "set_exposure_time"], [116, 3, 1, "", "set_line_interval"], [116, 3, 1, "", "set_readout_direction"], [116, 3, 1, "", "set_sensor_mode"]], "aslm.model.devices.camera.camera_photometrics": [[118, 2, 1, "", "PhotometricsKinetix"]], "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix": [[118, 3, 1, "", "__init__"], [118, 3, 1, "", "calculate_light_sheet_exposure_time"], [118, 3, 1, "", "calculate_readout_time"], [118, 3, 1, "", "close_camera"], [118, 3, 1, "", "close_image_series"], [118, 3, 1, "", "get_line_interval"], [118, 3, 1, "", "get_minimum_waiting_time"], [118, 3, 1, "", "get_new_frame"], [118, 3, 1, "", "initialize_image_series"], [118, 3, 1, "", "report_settings"], [118, 4, 1, "", "serial_number"], [118, 3, 1, "", "set_ROI"], [118, 3, 1, "", "set_binning"], [118, 3, 1, "", "set_exposure_time"], [118, 3, 1, "", "set_line_interval"], [118, 3, 1, "", "set_readout_direction"], [118, 3, 1, "", "set_sensor_mode"]], "aslm.model.devices.camera.camera_synthetic": [[120, 2, 1, "", "SyntheticCamera"], [121, 2, 1, "", "SyntheticCameraController"]], "aslm.model.devices.camera.camera_synthetic.SyntheticCamera": [[120, 3, 1, "", "__init__"], [120, 3, 1, "", "calculate_light_sheet_exposure_time"], [120, 3, 1, "", "calculate_readout_time"], [120, 3, 1, "", "close_camera"], [120, 3, 1, "", "close_image_series"], [120, 3, 1, "", "generate_new_frame"], [120, 3, 1, "", "get_line_interval"], [120, 3, 1, "", "get_minimum_waiting_time"], [120, 3, 1, "", "get_new_frame"], [120, 3, 1, "", "initialize_image_series"], [120, 3, 1, "", "load_images"], [120, 3, 1, "", "report_settings"], [120, 3, 1, "", "set_ROI"], [120, 3, 1, "", "set_binning"], [120, 3, 1, "", "set_exposure_time"], [120, 3, 1, "", "set_line_interval"], [120, 3, 1, "", "set_readout_direction"], [120, 3, 1, "", "set_sensor_mode"]], "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController": [[121, 3, 1, "", "__init__"], [121, 3, 1, "", "get_property_value"]], "aslm.model.devices.daq": [[123, 0, 0, "-", "daq_base"], [125, 0, 0, "-", "daq_synthetic"]], "aslm.model.devices.daq.daq_base": [[124, 2, 1, "", "DAQBase"]], "aslm.model.devices.daq.daq_base.DAQBase": [[124, 3, 1, "", "__init__"], [124, 3, 1, "", "calculate_all_waveforms"], [124, 5, 1, "", "configuration"]], "aslm.model.devices.daq.daq_synthetic": [[126, 2, 1, "", "SyntheticDAQ"]], "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ": [[126, 3, 1, "", "__init__"], [126, 3, 1, "", "add_camera"], [126, 3, 1, "", "calculate_all_waveforms"], [126, 3, 1, "", "close_tasks"], [126, 5, 1, "", "configuration"], [126, 3, 1, "", "create_camera_task"], [126, 3, 1, "", "create_galvo_remote_focus_tasks"], [126, 3, 1, "", "create_master_trigger_task"], [126, 3, 1, "", "prepare_acquisition"], [126, 3, 1, "", "run_acquisition"], [126, 3, 1, "", "start_tasks"], [126, 3, 1, "", "stop_acquisition"], [126, 3, 1, "", "stop_tasks"], [126, 3, 1, "", "write_waveforms_to_tasks"]], "aslm.model.devices.filter_wheel": [[128, 0, 0, "-", "filter_wheel_asi"], [131, 0, 0, "-", "filter_wheel_base"], [133, 0, 0, "-", "filter_wheel_sutter"], [136, 0, 0, "-", "filter_wheel_synthetic"]], "aslm.model.devices.filter_wheel.filter_wheel_asi": [[129, 2, 1, "", "ASIFilterWheel"], [130, 5, 1, "", "baudrate"], [130, 1, 1, "", "build_filter_wheel_connection"]], "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel": [[129, 3, 1, "", "__init__"], [129, 3, 1, "", "check_if_filter_in_filter_dictionary"], [129, 3, 1, "", "close"], [129, 3, 1, "", "filter_change_delay"], [129, 3, 1, "", "set_filter"]], "aslm.model.devices.filter_wheel.filter_wheel_base": [[132, 2, 1, "", "FilterWheelBase"]], "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase": [[132, 3, 1, "", "__init__"], [132, 3, 1, "id0", "check_if_filter_in_filter_dictionary"], [132, 5, 1, "", "filter_dictionary"], [132, 5, 1, "", "wheel_position"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter": [[134, 2, 1, "", "SutterFilterWheel"], [135, 5, 1, "", "baudrate"], [135, 1, 1, "", "build_filter_wheel_connection"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel": [[134, 3, 1, "", "__init__"], [134, 3, 1, "id0", "check_if_filter_in_filter_dictionary"], [134, 3, 1, "id1", "close"], [134, 3, 1, "id2", "filter_change_delay"], [134, 5, 1, "", "filter_dictionary"], [134, 5, 1, "", "number_of_filter_wheels"], [134, 3, 1, "id3", "read"], [134, 3, 1, "", "set_filter"], [134, 5, 1, "", "wheel_position"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic": [[137, 2, 1, "", "SyntheticFilterWheel"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel": [[137, 3, 1, "", "__init__"], [137, 5, 1, "", "baudrate"], [137, 3, 1, "", "check_if_filter_in_filter_dictionary"], [137, 3, 1, "", "close"], [137, 5, 1, "", "comport"], [137, 3, 1, "", "filter_change_delay"], [137, 5, 1, "", "filter_dictionary"], [137, 5, 1, "", "number_of_filter_wheels"], [137, 3, 1, "", "read"], [137, 3, 1, "", "set_filter"], [137, 5, 1, "", "wheel_position"]], "aslm.model.devices.galvo": [[139, 0, 0, "-", "galvo_base"], [141, 0, 0, "-", "galvo_synthetic"]], "aslm.model.devices.galvo.galvo_base": [[140, 2, 1, "", "GalvoBase"]], "aslm.model.devices.galvo.galvo_base.GalvoBase": [[140, 3, 1, "", "__init__"], [140, 3, 1, "", "adjust"], [140, 5, 1, "", "camera_delay_percent"], [140, 3, 1, "id0", "close_task"], [140, 5, 1, "", "configuration"], [140, 5, 1, "", "device_config"], [140, 5, 1, "", "galvo_max_voltage"], [140, 5, 1, "", "galvo_min_voltage"], [140, 5, 1, "", "galvo_name"], [140, 5, 1, "", "microscope_name"], [140, 3, 1, "id1", "prepare_task"], [140, 5, 1, "", "remote_focus_ramp_falling"], [140, 5, 1, "", "sample_rate"], [140, 5, 1, "", "samples"], [140, 3, 1, "id2", "start_task"], [140, 3, 1, "id3", "stop_task"], [140, 5, 1, "", "sweep_time"], [140, 5, 1, "", "waveform_dict"]], "aslm.model.devices.galvo.galvo_synthetic": [[142, 2, 1, "", "SyntheticGalvo"]], "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo": [[142, 5, 1, "", "None"], [142, 3, 1, "", "__init__"], [142, 3, 1, "", "adjust"], [142, 3, 1, "id0", "close_task"], [142, 3, 1, "id1", "prepare_task"], [142, 3, 1, "id2", "start_task"], [142, 3, 1, "id3", "stop_task"]], "aslm.model.devices.joystick": [[144, 0, 0, "-", "joystick_base"], [146, 0, 0, "-", "joystick_synthetic"]], "aslm.model.devices.joystick.joystick_base": [[145, 2, 1, "", "JoystickBase"]], "aslm.model.devices.joystick.joystick_base.JoystickBase": [[145, 3, 1, "", "__init__"]], "aslm.model.devices.joystick.joystick_synthetic": [[147, 2, 1, "", "SyntheticJoystick"]], "aslm.model.devices.joystick.joystick_synthetic.SyntheticJoystick": [[147, 3, 1, "", "__init__"]], "aslm.model.devices.lasers": [[149, 0, 0, "-", "laser_base"], [151, 0, 0, "-", "laser_synthetic"]], "aslm.model.devices.lasers.laser_base": [[150, 2, 1, "", "LaserBase"]], "aslm.model.devices.lasers.laser_base.LaserBase": [[150, 3, 1, "", "__init__"], [150, 3, 1, "", "close"], [150, 3, 1, "", "initialize_laser"]], "aslm.model.devices.lasers.laser_synthetic": [[152, 2, 1, "", "SyntheticLaser"]], "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser": [[152, 3, 1, "", "__init__"], [152, 3, 1, "", "close"], [152, 3, 1, "", "initialize_laser"]], "aslm.model.devices.objectives": [[154, 2, 1, "", "Objective"]], "aslm.model.devices.objectives.Objective": [[154, 3, 1, "", "__init__"], [154, 3, 1, "", "calculate_entrance_pupil"]], "aslm.model.devices.remote_focus": [[156, 0, 0, "-", "remote_focus_base"], [158, 0, 0, "-", "remote_focus_synthetic"]], "aslm.model.devices.remote_focus.remote_focus_base": [[157, 2, 1, "", "RemoteFocusBase"]], "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase": [[157, 3, 1, "", "__init__"], [157, 3, 1, "", "adjust"], [157, 5, 1, "", "camera_delay_percent"], [157, 3, 1, "", "close_task"], [157, 5, 1, "", "configuration"], [157, 5, 1, "", "device_config"], [157, 5, 1, "", "microscope_name"], [157, 3, 1, "id0", "prepare_task"], [157, 5, 1, "", "remote_focus_delay"], [157, 5, 1, "", "remote_focus_max_voltage"], [157, 5, 1, "", "remote_focus_min_voltage"], [157, 5, 1, "", "remote_focus_ramp_falling"], [157, 5, 1, "", "sample_rate"], [157, 5, 1, "", "samples"], [157, 3, 1, "id1", "start_task"], [157, 3, 1, "id2", "stop_task"], [157, 5, 1, "", "sweep_time"], [157, 5, 1, "", "waveform_dict"]], "aslm.model.devices.remote_focus.remote_focus_synthetic": [[159, 2, 1, "", "SyntheticRemoteFocus"]], "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus": [[159, 3, 1, "", "__init__"], [159, 3, 1, "", "adjust"], [159, 3, 1, "id0", "close_task"], [159, 5, 1, "", "configuration"], [159, 5, 1, "", "device_connection"], [159, 5, 1, "", "microscope_name"], [159, 3, 1, "id1", "prepare_task"], [159, 3, 1, "id2", "start_task"], [159, 3, 1, "id3", "stop_task"]], "aslm.model.devices.shutter": [[161, 0, 0, "-", "laser_shutter_base"], [163, 0, 0, "-", "laser_shutter_synthetic"]], "aslm.model.devices.shutter.laser_shutter_base": [[162, 2, 1, "", "ShutterBase"]], "aslm.model.devices.shutter.laser_shutter_base.ShutterBase": [[162, 3, 1, "", "__init__"], [162, 5, 1, "", "configuration"], [162, 5, 1, "", "device_connection"], [162, 5, 1, "", "microscope_name"]], "aslm.model.devices.shutter.laser_shutter_synthetic": [[164, 2, 1, "", "SyntheticShutter"]], "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter": [[164, 3, 1, "", "__init__"], [164, 3, 1, "", "close_shutters"], [164, 5, 1, "", "configuration"], [164, 5, 1, "", "device_connection"], [164, 5, 1, "", "microscope_name"], [164, 3, 1, "", "open_left"], [164, 3, 1, "", "open_right"], [164, 3, 1, "", "state"]], "aslm.model.devices.stages": [[166, 0, 0, "-", "stage_asi"], [169, 0, 0, "-", "stage_base"], [171, 0, 0, "-", "stage_galvo"], [173, 0, 0, "-", "stage_mcl"], [176, 0, 0, "-", "stage_pi"], [179, 0, 0, "-", "stage_sutter"], [182, 0, 0, "-", "stage_synthetic"], [184, 0, 0, "-", "stage_tl_kcube_inertial"]], "aslm.model.devices.stages.stage_asi": [[167, 2, 1, "", "ASIStage"], [168, 1, 1, "", "build_ASI_Stage_connection"]], "aslm.model.devices.stages.stage_asi.ASIStage": [[167, 3, 1, "", "__init__"], [167, 5, 1, "", "axes_mapping"], [167, 5, 1, "", "default_speed"], [167, 5, 1, "", "f_max"], [167, 5, 1, "", "f_min"], [167, 5, 1, "", "f_pos"], [167, 3, 1, "id0", "get_abs_position"], [167, 3, 1, "id1", "get_axis_position"], [167, 3, 1, "id2", "get_position_dict"], [167, 3, 1, "id3", "get_speed"], [167, 3, 1, "id4", "move_absolute"], [167, 3, 1, "id5", "move_axis_absolute"], [167, 5, 1, "", "position_dict"], [167, 3, 1, "id6", "report_position"], [167, 3, 1, "id7", "scanr"], [167, 3, 1, "id8", "set_speed"], [167, 3, 1, "id9", "start_scan"], [167, 3, 1, "id10", "stop"], [167, 3, 1, "id11", "stop_scan"], [167, 5, 1, "", "theta_max"], [167, 5, 1, "", "theta_min"], [167, 5, 1, "", "theta_pos"], [167, 3, 1, "id12", "verify_abs_position"], [167, 3, 1, "", "verify_move"], [167, 5, 1, "", "x_max"], [167, 5, 1, "", "x_min"], [167, 5, 1, "", "x_pos"], [167, 5, 1, "", "y_max"], [167, 5, 1, "", "y_min"], [167, 5, 1, "", "y_pos"], [167, 5, 1, "", "z_max"], [167, 5, 1, "", "z_min"], [167, 5, 1, "", "z_pos"]], "aslm.model.devices.stages.stage_base": [[170, 2, 1, "", "StageBase"]], "aslm.model.devices.stages.stage_base.StageBase": [[170, 3, 1, "", "__init__"], [170, 5, 1, "", "axes_mapping"], [170, 5, 1, "", "f_max"], [170, 5, 1, "", "f_min"], [170, 5, 1, "", "f_pos"], [170, 3, 1, "id0", "get_abs_position"], [170, 3, 1, "id1", "get_position_dict"], [170, 3, 1, "id2", "stop"], [170, 5, 1, "", "theta_max"], [170, 5, 1, "", "theta_min"], [170, 5, 1, "", "theta_pos"], [170, 3, 1, "id3", "verify_abs_position"], [170, 5, 1, "", "x_max"], [170, 5, 1, "", "x_min"], [170, 5, 1, "", "x_pos"], [170, 5, 1, "", "y_max"], [170, 5, 1, "", "y_min"], [170, 5, 1, "", "y_pos"], [170, 5, 1, "", "z_max"], [170, 5, 1, "", "z_min"], [170, 5, 1, "", "z_pos"]], "aslm.model.devices.stages.stage_galvo": [[172, 2, 1, "", "GalvoNIStage"]], "aslm.model.devices.stages.stage_galvo.GalvoNIStage": [[172, 3, 1, "", "__init__"], [172, 5, 1, "", "axes_mapping"], [172, 3, 1, "", "create_position_dict"], [172, 3, 1, "id0", "get_abs_position"], [172, 3, 1, "", "get_position_dict"], [172, 3, 1, "", "move_absolute"], [172, 3, 1, "", "move_axis_absolute"], [172, 3, 1, "", "report_position"], [172, 3, 1, "id1", "stop"], [172, 3, 1, "", "verify_abs_position"]], "aslm.model.devices.stages.stage_mcl": [[174, 2, 1, "", "MCLStage"], [175, 1, 1, "", "build_MCLStage_connection"]], "aslm.model.devices.stages.stage_mcl.MCLStage": [[174, 3, 1, "", "__init__"], [174, 5, 1, "", "axes_mapping"], [174, 3, 1, "", "get_abs_position"], [174, 3, 1, "", "get_position_dict"], [174, 3, 1, "", "move_absolute"], [174, 3, 1, "", "move_axis_absolute"], [174, 3, 1, "", "report_position"], [174, 3, 1, "", "stop"], [174, 3, 1, "", "verify_abs_position"]], "aslm.model.devices.stages.stage_pi": [[177, 2, 1, "", "PIStage"], [178, 1, 1, "", "build_PIStage_connection"]], "aslm.model.devices.stages.stage_pi.PIStage": [[177, 3, 1, "", "__init__"], [177, 5, 1, "", "axes_mapping"], [177, 3, 1, "id0", "get_abs_position"], [177, 3, 1, "id1", "get_position_dict"], [177, 3, 1, "id2", "move_absolute"], [177, 3, 1, "id3", "move_axis_absolute"], [177, 5, 1, "", "pi_axes"], [177, 5, 1, "", "pi_device"], [177, 5, 1, "", "pi_tools"], [177, 3, 1, "id4", "report_position"], [177, 3, 1, "id5", "stop"], [177, 3, 1, "", "verify_abs_position"], [177, 3, 1, "", "wait_on_target"]], "aslm.model.devices.stages.stage_sutter": [[180, 2, 1, "", "SutterStage"], [181, 1, 1, "", "build_MP285_connection"]], "aslm.model.devices.stages.stage_sutter.SutterStage": [[180, 3, 1, "", "__init__"], [180, 5, 1, "", "axes_mapping"], [180, 3, 1, "", "close"], [180, 3, 1, "", "get_abs_position"], [180, 3, 1, "", "get_position_dict"], [180, 3, 1, "", "move_absolute"], [180, 3, 1, "", "move_axis_absolute"], [180, 3, 1, "", "read"], [180, 3, 1, "", "report_position"], [180, 5, 1, "", "resolution"], [180, 5, 1, "", "speed"], [180, 5, 1, "", "stage"], [180, 3, 1, "", "stop"], [180, 5, 1, "", "sutter_axes"], [180, 3, 1, "", "verify_abs_position"]], "aslm.model.devices.stages.stage_synthetic": [[183, 2, 1, "", "SyntheticStage"]], "aslm.model.devices.stages.stage_synthetic.SyntheticStage": [[183, 3, 1, "", "__init__"], [183, 5, 1, "", "axes_mapping"], [183, 3, 1, "", "get_abs_position"], [183, 3, 1, "", "get_position_dict"], [183, 3, 1, "", "move_absolute"], [183, 3, 1, "", "move_axis_absolute"], [183, 3, 1, "", "stop"], [183, 3, 1, "", "verify_abs_position"]], "aslm.model.devices.stages.stage_tl_kcube_inertial": [[185, 2, 1, "", "TLKIMStage"], [186, 1, 1, "", "build_TLKIMStage_connection"]], "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage": [[185, 3, 1, "", "__init__"], [185, 5, 1, "", "axes_mapping"], [185, 3, 1, "", "get_abs_position"], [185, 3, 1, "", "get_position_dict"], [185, 3, 1, "", "move_absolute"], [185, 3, 1, "", "move_axis_absolute"], [185, 3, 1, "", "report_position"], [185, 3, 1, "", "stop"], [185, 3, 1, "", "verify_abs_position"]], "aslm.model.devices.zoom": [[188, 0, 0, "-", "zoom_base"], [190, 0, 0, "-", "zoom_synthetic"]], "aslm.model.devices.zoom.zoom_base": [[189, 2, 1, "", "ZoomBase"]], "aslm.model.devices.zoom.zoom_base.ZoomBase": [[189, 3, 1, "", "__init__"], [189, 3, 1, "", "build_stage_dict"], [189, 3, 1, "", "move"], [189, 3, 1, "", "read_position"], [189, 3, 1, "", "set_zoom"]], "aslm.model.devices.zoom.zoom_synthetic": [[191, 2, 1, "", "SyntheticZoom"]], "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom": [[191, 3, 1, "", "__init__"], [191, 3, 1, "", "build_stage_dict"], [191, 3, 1, "id0", "move"], [191, 3, 1, "id1", "read_position"], [191, 3, 1, "id2", "set_zoom"]], "aslm.model.dummy": [[193, 2, 1, "", "DummyController"], [194, 2, 1, "", "DummyDevice"], [195, 2, 1, "", "DummyMicroscope"], [196, 2, 1, "", "DummyModel"]], "aslm.model.dummy.DummyController": [[193, 3, 1, "", "__init__"], [193, 3, 1, "", "clear"], [193, 3, 1, "", "execute"], [193, 3, 1, "", "pop"]], "aslm.model.dummy.DummyDevice": [[194, 3, 1, "", "__init__"], [194, 3, 1, "", "clear"], [194, 5, 1, "", "data_pipe"], [194, 3, 1, "", "generate_message"], [194, 3, 1, "", "listen"], [194, 3, 1, "", "sendout"], [194, 3, 1, "id0", "setup"], [194, 3, 1, "", "shutdown"], [194, 5, 1, "", "signal_pipe"]], "aslm.model.dummy.DummyMicroscope": [[195, 3, 1, "", "__init__"], [195, 3, 1, "", "calculate_exposure_sweep_times"], [195, 5, 1, "", "data_pipe"], [195, 3, 1, "", "setup"], [195, 3, 1, "", "shutdown"], [195, 5, 1, "", "signal_pipe"]], "aslm.model.dummy.DummyModel": [[196, 3, 1, "", "__init__"], [196, 5, 1, "", "configuration"], [196, 5, 1, "", "data"], [196, 5, 1, "", "data_container"], [196, 3, 1, "id0", "data_func"], [196, 5, 1, "", "data_pipe"], [196, 5, 1, "", "data_thread"], [196, 5, 1, "", "frame_id"], [196, 5, 1, "", "signal_container"], [196, 3, 1, "", "signal_func"], [196, 5, 1, "", "signal_pipe"], [196, 5, 1, "", "signal_thread"], [196, 3, 1, "", "start"], [196, 5, 1, "", "stop_flag"]], "aslm.model.features": [[198, 0, 0, "-", "auto_tile_scan"], [200, 0, 0, "-", "autofocus"], [203, 0, 0, "-", "common_features"], [214, 0, 0, "-", "constant_velocity_acquisition"], [216, 0, 0, "-", "dummy_detective"], [218, 0, 0, "-", "feature_container"], [229, 0, 0, "-", "feature_related_functions"], [234, 0, 0, "-", "image_writer"], [236, 0, 0, "-", "remove_empty_tiles"], [242, 0, 0, "-", "restful_features"], [245, 0, 0, "-", "volume_search"]], "aslm.model.features.auto_tile_scan": [[199, 2, 1, "", "CalculateFocusRange"]], "aslm.model.features.auto_tile_scan.CalculateFocusRange": [[199, 3, 1, "", "__init__"], [199, 3, 1, "", "end_func_data"], [199, 3, 1, "", "end_func_signal"], [199, 3, 1, "", "in_func_data"], [199, 3, 1, "", "in_func_signal"], [199, 3, 1, "", "pre_func_data"], [199, 3, 1, "", "pre_func_signal"]], "aslm.model.features.autofocus": [[201, 2, 1, "", "Autofocus"], [202, 1, 1, "", "power_tent"]], "aslm.model.features.autofocus.Autofocus": [[201, 3, 1, "", "__init__"], [201, 5, 1, "", "autofocus_frame_queue"], [201, 5, 1, "", "autofocus_pos_queue"], [201, 5, 1, "", "coarse_step_size"], [201, 5, 1, "", "coarse_steps"], [201, 3, 1, "", "end_func_data"], [201, 3, 1, "", "end_func_signal"], [201, 5, 1, "", "f_frame_id"], [201, 5, 1, "", "f_pos"], [201, 5, 1, "", "fine_pos_offset"], [201, 5, 1, "", "fine_step_size"], [201, 5, 1, "", "focus_pos"], [201, 5, 1, "", "frame_num"], [201, 3, 1, "", "get_autofocus_frame_num"], [201, 5, 1, "", "get_frames_num"], [201, 3, 1, "", "get_steps"], [201, 3, 1, "", "in_func_data"], [201, 3, 1, "", "in_func_signal"], [201, 5, 1, "", "init_pos"], [201, 5, 1, "", "max_entropy"], [201, 5, 1, "", "plot_data"], [201, 3, 1, "", "pre_func_data"], [201, 3, 1, "", "pre_func_signal"], [201, 3, 1, "", "robust_autofocus"], [201, 3, 1, "id0", "run"], [201, 5, 1, "", "signal_id"], [201, 5, 1, "", "target_channel"], [201, 5, 1, "", "target_frame_id"], [201, 5, 1, "", "total_frame_num"]], "aslm.model.features.common_features": [[204, 2, 1, "", "ChangeResolution"], [205, 2, 1, "", "ConProAcquisition"], [206, 2, 1, "", "FindTissueSimple2D"], [207, 2, 1, "", "LoopByCount"], [208, 2, 1, "", "MoveToNextPositionInMultiPositionTable"], [209, 2, 1, "", "PrepareNextChannel"], [210, 2, 1, "", "Snap"], [211, 2, 1, "", "StackPause"], [212, 2, 1, "", "WaitToContinue"], [213, 2, 1, "", "ZStackAcquisition"]], "aslm.model.features.common_features.ChangeResolution": [[204, 3, 1, "", "__init__"], [204, 3, 1, "", "cleanup"], [204, 3, 1, "", "signal_func"]], "aslm.model.features.common_features.ConProAcquisition": [[205, 3, 1, "", "__init__"], [205, 3, 1, "", "generate_meta_data"], [205, 3, 1, "", "pre_signal_func"], [205, 3, 1, "", "signal_end"], [205, 3, 1, "", "signal_func"]], "aslm.model.features.common_features.FindTissueSimple2D": [[206, 3, 1, "", "__init__"], [206, 3, 1, "", "data_func"]], "aslm.model.features.common_features.LoopByCount": [[207, 3, 1, "", "__init__"], [207, 3, 1, "", "data_func"], [207, 3, 1, "", "signal_func"]], "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable": [[208, 3, 1, "", "__init__"], [208, 3, 1, "", "cleanup"], [208, 3, 1, "", "signal_func"]], "aslm.model.features.common_features.PrepareNextChannel": [[209, 3, 1, "", "__init__"], [209, 3, 1, "", "signal_func"]], "aslm.model.features.common_features.Snap": [[210, 3, 1, "", "__init__"], [210, 3, 1, "", "data_func"]], "aslm.model.features.common_features.StackPause": [[211, 3, 1, "", "__init__"], [211, 3, 1, "", "signal_func"]], "aslm.model.features.common_features.WaitToContinue": [[212, 3, 1, "", "__init__"], [212, 3, 1, "", "cleanup"], [212, 3, 1, "", "data_func"], [212, 3, 1, "", "pre_data_func"], [212, 3, 1, "", "pre_signal_func"], [212, 3, 1, "", "signal_func"]], "aslm.model.features.common_features.ZStackAcquisition": [[213, 3, 1, "", "__init__"], [213, 3, 1, "", "cleanup_data_func"], [213, 3, 1, "", "end_data_func"], [213, 3, 1, "", "in_data_func"], [213, 3, 1, "", "pre_data_func"], [213, 3, 1, "", "pre_signal_func"], [213, 3, 1, "", "signal_end"], [213, 3, 1, "", "signal_func"], [213, 3, 1, "", "update_channel"]], "aslm.model.features.constant_velocity_acquisition": [[215, 2, 1, "", "ConstantVelocityAcquisition"]], "aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition": [[215, 3, 1, "", "__init__"], [215, 3, 1, "", "cleanup"], [215, 3, 1, "", "pre_func_signal"]], "aslm.model.features.dummy_detective": [[217, 2, 1, "", "Dummy_Detective"]], "aslm.model.features.dummy_detective.Dummy_Detective": [[217, 3, 1, "", "__init__"]], "aslm.model.features.feature_container": [[219, 2, 1, "", "Container"], [220, 2, 1, "", "DataContainer"], [221, 2, 1, "", "DataNode"], [222, 2, 1, "", "SignalContainer"], [223, 2, 1, "", "SignalNode"], [224, 2, 1, "", "TreeNode"], [225, 1, 1, "", "dummy_True"], [226, 1, 1, "", "dummy_func"], [227, 1, 1, "", "get_registered_funcs"], [228, 1, 1, "", "load_features"]], "aslm.model.features.feature_container.Container": [[219, 3, 1, "", "__init__"], [219, 3, 1, "", "cleanup"], [219, 3, 1, "", "reset"]], "aslm.model.features.feature_container.DataContainer": [[220, 3, 1, "", "__init__"], [220, 3, 1, "", "cleanup"], [220, 3, 1, "", "reset"], [220, 3, 1, "", "run"]], "aslm.model.features.feature_container.DataNode": [[221, 3, 1, "", "__init__"], [221, 3, 1, "", "run"], [221, 3, 1, "", "set_property"]], "aslm.model.features.feature_container.SignalContainer": [[222, 3, 1, "", "__init__"], [222, 3, 1, "", "cleanup"], [222, 3, 1, "", "reset"], [222, 3, 1, "", "run"]], "aslm.model.features.feature_container.SignalNode": [[223, 3, 1, "", "__init__"], [223, 3, 1, "", "run"], [223, 3, 1, "", "set_property"]], "aslm.model.features.feature_container.TreeNode": [[224, 3, 1, "", "__init__"], [224, 3, 1, "", "set_property"]], "aslm.model.features.feature_related_functions": [[230, 2, 1, "", "SharedList"], [231, 1, 1, "", "convert_feature_list_to_str"], [232, 1, 1, "", "convert_str_to_feature_list"], [233, 1, 1, "", "load_dynamic_parameter_functions"]], "aslm.model.features.feature_related_functions.SharedList": [[230, 3, 1, "", "__init__"], [230, 3, 1, "", "append"], [230, 3, 1, "", "clear"], [230, 3, 1, "", "copy"], [230, 3, 1, "", "count"], [230, 3, 1, "", "extend"], [230, 3, 1, "", "index"], [230, 3, 1, "", "insert"], [230, 3, 1, "", "pop"], [230, 3, 1, "", "remove"], [230, 3, 1, "", "reverse"], [230, 3, 1, "", "sort"]], "aslm.model.features.image_writer": [[235, 2, 1, "", "ImageWriter"]], "aslm.model.features.image_writer.ImageWriter": [[235, 3, 1, "", "__init__"], [235, 3, 1, "", "calculate_and_check_disk_space"], [235, 3, 1, "id15", "close"], [235, 5, 1, "id4", "config_table"], [235, 5, 1, "id5", "current_time_point"], [235, 5, 1, "id6", "data_buffer"], [235, 5, 1, "id7", "data_source"], [235, 5, 1, "id8", "file_type"], [235, 3, 1, "id16", "generate_image_name"], [235, 3, 1, "id17", "generate_meta_data"], [235, 5, 1, "id9", "mip"], [235, 5, 1, "id10", "mip_directory"], [235, 5, 1, "id11", "model"], [235, 5, 1, "id12", "num_of_channels"], [235, 5, 1, "id13", "save_directory"], [235, 3, 1, "id18", "save_image"], [235, 5, 1, "id14", "sub_dir"]], "aslm.model.features.remove_empty_tiles": [[237, 2, 1, "", "DetectTissueInStack"], [238, 2, 1, "", "DetectTissueInStackAndRecord"], [239, 2, 1, "", "RemoveEmptyPositions"], [240, 1, 1, "", "detect_tissue"], [241, 1, 1, "", "detect_tissue2"]], "aslm.model.features.remove_empty_tiles.DetectTissueInStack": [[237, 3, 1, "", "__init__"], [237, 3, 1, "", "end_func_data"], [237, 3, 1, "", "end_func_signal"], [237, 3, 1, "", "in_func_data"], [237, 3, 1, "", "in_func_signal"], [237, 3, 1, "", "pre_func_data"], [237, 3, 1, "", "pre_func_signal"]], "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord": [[238, 3, 1, "", "__init__"], [238, 3, 1, "", "end_func_data"], [238, 3, 1, "", "end_func_signal"], [238, 3, 1, "", "in_func_data"], [238, 3, 1, "", "in_func_signal"], [238, 3, 1, "", "pre_func_data"], [238, 3, 1, "", "pre_func_signal"]], "aslm.model.features.remove_empty_tiles.RemoveEmptyPositions": [[239, 3, 1, "", "__init__"], [239, 3, 1, "", "signal_func"]], "aslm.model.features.restful_features": [[243, 2, 1, "", "IlastikSegmentation"], [244, 1, 1, "", "prepare_service"]], "aslm.model.features.restful_features.IlastikSegmentation": [[243, 3, 1, "", "__init__"]], "aslm.model.features.volume_search": [[246, 2, 1, "", "VolumeSearch"], [247, 1, 1, "", "draw_box"]], "aslm.model.features.volume_search.VolumeSearch": [[246, 3, 1, "", "__init__"]], "aslm.model.metadata_sources": [[249, 0, 0, "-", "bdv_metadata"], [251, 0, 0, "-", "metadata"], [254, 0, 0, "-", "ome_tiff_metadata"]], "aslm.model.metadata_sources.bdv_metadata": [[250, 2, 1, "", "BigDataViewerMetadata"]], "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata": [[250, 3, 1, "", "__init__"], [250, 3, 1, "", "parse_bdv_xml"], [250, 4, 1, "", "shape"], [250, 3, 1, "", "stage_positions_to_affine_matrix"], [250, 3, 1, "", "to_xml"], [250, 4, 1, "", "voxel_size"], [250, 3, 1, "", "write_xml"]], "aslm.model.metadata_sources.metadata": [[252, 2, 1, "", "Metadata"], [253, 2, 1, "", "XMLMetadata"]], "aslm.model.metadata_sources.metadata.Metadata": [[252, 3, 1, "", "__init__"], [252, 4, 1, "", "shape"], [252, 4, 1, "", "voxel_size"]], "aslm.model.metadata_sources.metadata.XMLMetadata": [[253, 3, 1, "", "__init__"], [253, 4, 1, "", "shape"], [253, 3, 1, "", "to_xml"], [253, 4, 1, "", "voxel_size"], [253, 3, 1, "", "write_xml"]], "aslm.model.metadata_sources.ome_tiff_metadata": [[255, 2, 1, "", "OMETIFFMetadata"]], "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata": [[255, 3, 1, "", "__init__"], [255, 3, 1, "", "ome_tiff_xml_dict"], [255, 4, 1, "", "shape"], [255, 3, 1, "", "to_xml"], [255, 4, 1, "", "voxel_size"], [255, 3, 1, "", "write_xml"]], "aslm.model.microscope": [[257, 2, 1, "", "Microscope"]], "aslm.model.microscope.Microscope": [[257, 3, 1, "", "__init__"], [257, 3, 1, "", "assemble_device_config_lists"], [257, 3, 1, "", "calculate_all_waveform"], [257, 3, 1, "", "calculate_exposure_sweep_times"], [257, 5, 1, "", "configuration"], [257, 5, 1, "", "daq"], [257, 5, 1, "", "data_buffer"], [257, 3, 1, "id0", "end_acquisition"], [257, 3, 1, "id1", "get_readout_time"], [257, 3, 1, "", "get_stage_position"], [257, 3, 1, "", "load_and_start_devices"], [257, 5, 1, "", "microscope_name"], [257, 3, 1, "", "move_stage"], [257, 3, 1, "id2", "move_stage_offset"], [257, 5, 1, "", "number_of_frames"], [257, 3, 1, "", "prepare_acquisition"], [257, 3, 1, "", "prepare_next_channel"], [257, 3, 1, "", "stop_stage"], [257, 3, 1, "", "terminate"], [257, 3, 1, "", "turn_off_lasers"], [257, 3, 1, "", "turn_on_laser"], [257, 3, 1, "id3", "update_data_buffer"]], "aslm.model.model": [[259, 2, 1, "", "Model"]], "aslm.model.model.Model": [[259, 5, 1, "", "USE_GPU"], [259, 3, 1, "", "__init__"], [259, 5, 1, "", "args"], [259, 3, 1, "", "change_resolution"], [259, 5, 1, "", "configuration"], [259, 3, 1, "id0", "create_pipe"], [259, 3, 1, "id1", "end_acquisition"], [259, 5, 1, "", "event_queue"], [259, 3, 1, "", "get_active_microscope"], [259, 3, 1, "", "get_camera_line_interval_and_exposure_time"], [259, 3, 1, "id2", "get_data_buffer"], [259, 3, 1, "", "get_feature_list"], [259, 3, 1, "", "get_microscope_info"], [259, 3, 1, "", "get_offset_variance_maps"], [259, 3, 1, "", "get_readout_time"], [259, 3, 1, "", "get_stage_position"], [259, 3, 1, "", "load_feature_list_from_str"], [259, 3, 1, "", "load_feature_records"], [259, 3, 1, "", "load_images"], [259, 3, 1, "id3", "move_stage"], [259, 3, 1, "", "pause_data_thread"], [259, 3, 1, "id4", "prepare_acquisition"], [259, 3, 1, "id5", "release_pipe"], [259, 3, 1, "", "resume_data_thread"], [259, 3, 1, "", "run_acquisition"], [259, 3, 1, "id6", "run_command"], [259, 3, 1, "id7", "run_data_process"], [259, 3, 1, "id8", "run_live_acquisition"], [259, 3, 1, "", "run_single_acquisition"], [259, 3, 1, "", "run_single_channel_acquisition"], [259, 3, 1, "", "run_single_channel_acquisition_with_features"], [259, 3, 1, "", "run_z_stack_acquisition"], [259, 3, 1, "id9", "snap_image"], [259, 3, 1, "", "stop_stage"], [259, 3, 1, "id10", "update_data_buffer"], [259, 3, 1, "", "update_ilastik_setting"]], "aslm.model.waveforms": [[261, 1, 1, "", "camera_exposure"], [262, 1, 1, "", "dc_value"], [263, 1, 1, "", "remote_focus_ramp"], [264, 1, 1, "", "sawtooth"], [265, 1, 1, "", "sine_wave"], [266, 1, 1, "", "single_pulse"], [267, 1, 1, "", "smooth_waveform"], [268, 1, 1, "", "square"]], "aslm.tools": [[270, 0, 0, "-", "beams"], [274, 0, 0, "-", "common_dict_tools"], [276, 0, 0, "-", "common_functions"], [282, 0, 0, "-", "decorators"], [285, 0, 0, "-", "file_functions"], [290, 0, 0, "-", "image"], [293, 0, 0, "-", "image_loaders"], [295, 0, 0, "-", "main_functions"], [299, 0, 0, "-", "multipos_table_tools"], [304, 0, 0, "-", "project_stats"], [306, 0, 0, "-", "sdf"], [310, 0, 0, "-", "waveform_template_funcs"], [312, 0, 0, "-", "xml_tools"]], "aslm.tools.beams": [[271, 1, 1, "", "fit_gaussian_beam_error"], [272, 1, 1, "", "fit_gaussian_beam_mse"], [273, 1, 1, "", "gaussian_beam"]], "aslm.tools.common_dict_tools": [[275, 1, 1, "", "update_stage_dict"]], "aslm.tools.common_functions": [[277, 2, 1, "", "VariableWithLock"], [278, 1, 1, "", "build_ref_name"], [279, 1, 1, "", "combine_funcs"], [280, 1, 1, "", "copy_proxy_object"], [281, 1, 1, "", "load_module_from_file"]], "aslm.tools.common_functions.VariableWithLock": [[277, 3, 1, "", "__init__"]], "aslm.tools.decorators": [[283, 2, 1, "", "FeatureList"], [284, 1, 1, "", "function_timer"]], "aslm.tools.decorators.FeatureList": [[283, 3, 1, "", "__init__"]], "aslm.tools.file_functions": [[286, 1, 1, "", "create_save_path"], [287, 1, 1, "", "delete_folder"], [288, 1, 1, "", "load_yaml_file"], [289, 1, 1, "", "save_yaml_file"]], "aslm.tools.image": [[291, 1, 1, "", "create_arrow_image"], [292, 1, 1, "", "text_array"]], "aslm.tools.image_loaders": [[294, 2, 1, "", "LazyTiff"]], "aslm.tools.image_loaders.LazyTiff": [[294, 3, 1, "", "__init__"], [294, 4, 1, "", "shape"]], "aslm.tools.main_functions": [[296, 1, 1, "", "create_parser"], [297, 1, 1, "", "evaluate_parser_input_arguments"], [298, 1, 1, "", "identify_gpu"]], "aslm.tools.multipos_table_tools": [[300, 1, 1, "", "calc_num_tiles"], [301, 1, 1, "", "compute_tiles_from_bounding_box"], [302, 1, 1, "", "sign"], [303, 1, 1, "", "update_table"]], "aslm.tools.project_stats": [[305, 1, 1, "", "countlines"]], "aslm.tools.sdf": [[307, 1, 1, "", "box"], [308, 1, 1, "", "sphere"], [309, 1, 1, "", "volume_from_sdf"]], "aslm.tools.waveform_template_funcs": [[311, 1, 1, "", "get_waveform_template_parameters"]], "aslm.tools.xml_tools": [[313, 1, 1, "", "dict_to_xml"], [314, 1, 1, "", "parse_xml"]], "aslm.view": [[316, 0, 0, "-", "custom_widgets"], [317, 0, 0, "-", "main_window_content"], [318, 0, 0, "-", "popups"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:property", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"aslm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 322, 325, 328], "config": [0, 1, 2, 3, 4, 5, 6, 7, 8], "build_nested_dict": 2, "get_aslm_path": 3, "get_configuration_path": 4, "load_config": 5, "update_config_dict": 6, "verify_experiment_config": 7, "verify_waveform_const": 8, "control": [9, 10, 11, 12, 13, 14, 15, 332], "configuration_control": [10, 11], "configurationcontrol": 11, "thread_pool": [12, 13, 14, 15], "selflockthread": 13, "synchronizedthreadpool": 14, "threadwaitlist": 15, "model": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 326], "analysi": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57], "boundary_detect": [18, 19, 20, 21, 22], "binary_detect": 19, "find_tissue_boundary_2d": 20, "has_tissu": 21, "map_boundari": 22, "camera": [23, 24, 25, 26, 27, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 330, 332], "compute_flatfield_map": 24, "compute_noise_sigma": 25, "compute_scmos_offset_and_variance_map": 26, "compute_signal_to_nois": 27, "detect": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "add_median_bord": 29, "combine_imag": 30, "log_detect": 31, "make_inside_imag": 32, "make_normalized_imag": 33, "make_sphere_3d": 34, "multiscale_surface_filter_3d": 35, "surface_filter_gauss_3d": 36, "three_level_segment": 37, "image_contrast": [38, 39, 40, 41, 42, 43], "estimate_and_correct_flatfield": 39, "estimate_image_resolut": 40, "fast_normalized_dct_shannon_entropi": 41, "image_intens": 42, "normalized_dct_shannon_entropi": 43, "image_decorrel": [44, 45, 46, 47, 48, 49, 50, 51, 52], "apodize_imag": 45, "get_correlation_coeffici": 46, "get_decorrelation_local_maxima": 47, "get_image_decorrel": 48, "get_radial_averag": 49, "image_to_polar": 50, "linear_map": 51, "main_image_decorr": 52, "image_transform": [53, 54, 55], "deskew_imag": 54, "initiate_gpu": 55, "spectral_unmix": [56, 57], "to_do": 57, "concurr": [58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "concurrency_tool": [59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], "custodythread": 60, "fancythread": 61, "mytestclass": 62, "objectinsubprocess": 63, "politethread": 64, "resultthread": 65, "sharedndarrai": 66, "testobjectinsubprocess": 67, "testresultthreadandcustodythread": 68, "testsharedndarrai": 69, "proxy_object": [70, 71, 72, 73, 74], "proxymanag": 71, "proxyobject": 72, "launch_custody_thread": 73, "launch_thread": 74, "write_paramet": [75, 76], "write_param": 76, "data_sourc": [77, 78, 79, 80, 81, 82, 83, 84, 85, 86], "bdv_data_sourc": [78, 79], "bigdataviewerdatasourc": 79, "datasourc": 81, "get_data_sourc": 82, "tiff_data_sourc": [83, 84], "tiffdatasourc": 84, "zarr_data_sourc": [85, 86], "zarrdatasourc": 86, "device_startup_funct": [87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104], "dummydeviceconnect": 88, "auto_redi": 89, "device_not_found": 90, "load_camera_connect": 91, "load_devic": 92, "load_filter_wheel_connect": 93, "load_stag": 94, "load_zoom_connect": 95, "start_camera": 96, "start_daq": 97, "start_filter_wheel": 98, "start_galvo": 99, "start_las": 100, "start_remote_focus_devic": 101, "start_shutt": 102, "start_stag": 103, "start_zoom": 104, "devic": [105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191], "api": [106, 107, 108, 109, 110, 321, 330], "coher": [107, 332], "dynamixel": [108, 332], "logitech": 109, "omicron": [110, 332], "camera_bas": [112, 113], "camerabas": 113, "camera_hamamatsu": [114, 115, 116], "hamamatsuorca": 115, "hamamatsuorcalightn": 116, "camera_photometr": [117, 118], "photometricskinetix": 118, "camera_synthet": [119, 120, 121], "syntheticcamera": 120, "syntheticcameracontrol": 121, "daq": [122, 123, 124, 125, 126, 330], "daq_bas": [123, 124], "daqbas": 124, "daq_synthet": [125, 126], "syntheticdaq": 126, "filter_wheel": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "filter_wheel_asi": [128, 129, 130], "asifilterwheel": 129, "build_filter_wheel_connect": [130, 135], "filter_wheel_bas": [131, 132], "filterwheelbas": 132, "filter_wheel_sutt": [133, 134, 135], "sutterfilterwheel": 134, "filter_wheel_synthet": [136, 137], "syntheticfilterwheel": 137, "galvo": [138, 139, 140, 141, 142, 330, 332], "galvo_bas": [139, 140], "galvobas": 140, "galvo_synthet": [141, 142], "syntheticgalvo": 142, "joystick": [143, 144, 145, 146, 147, 330], "joystick_bas": [144, 145], "joystickbas": 145, "joystick_synthet": [146, 147], "syntheticjoystick": 147, "laser": [148, 149, 150, 151, 152, 330, 332], "laser_bas": [149, 150], "laserbas": 150, "laser_synthet": [151, 152], "syntheticlas": 152, "object": [153, 154, 327], "remote_focu": [155, 156, 157, 158, 159], "remote_focus_bas": [156, 157], "remotefocusbas": 157, "remote_focus_synthet": [158, 159], "syntheticremotefocu": 159, "shutter": [160, 161, 162, 163, 164, 330, 332], "laser_shutter_bas": [161, 162], "shutterbas": 162, "laser_shutter_synthet": [163, 164], "syntheticshutt": 164, "stage": [165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 322, 330, 332], "stage_asi": [166, 167, 168], "asistag": 167, "build_asi_stage_connect": 168, "stage_bas": [169, 170], "stagebas": 170, "stage_galvo": [171, 172], "galvonistag": 172, "stage_mcl": [173, 174, 175], "mclstage": 174, "build_mclstage_connect": 175, "stage_pi": [176, 177, 178], "pistag": 177, "build_pistage_connect": 178, "stage_sutt": [179, 180, 181], "sutterstag": 180, "build_mp285_connect": 181, "stage_synthet": [182, 183], "syntheticstag": 183, "stage_tl_kcube_inerti": [184, 185, 186], "tlkimstag": 185, "build_tlkimstage_connect": 186, "zoom": [187, 188, 189, 190, 191, 330, 332], "zoom_bas": [188, 189], "zoombas": 189, "zoom_synthet": [190, 191], "syntheticzoom": 191, "dummi": [192, 193, 194, 195, 196], "dummycontrol": 193, "dummydevic": 194, "dummymicroscop": 195, "dummymodel": 196, "featur": [197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 326, 327], "auto_tile_scan": [198, 199], "calculatefocusrang": 199, "paramet": [199, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 233, 237, 238, 239, 240, 241, 327], "attribut": [199, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 219, 221, 222, 223, 224, 230, 237, 238, 239], "method": [199, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 219, 220, 221, 222, 223, 224, 230, 237, 238, 239], "note": [199, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 233, 240, 241], "return": [199, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 221, 223, 224, 225, 226, 227, 228, 231, 237, 238, 239, 240, 241], "autofocu": [200, 201, 202], "power_t": 202, "common_featur": [203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213], "changeresolut": 204, "conproacquisit": 205, "findtissuesimple2d": 206, "loopbycount": 207, "movetonextpositioninmultipositiont": 208, "preparenextchannel": 209, "snap": 210, "stackpaus": 211, "waittocontinu": 212, "zstackacquisit": 213, "constant_velocity_acquisit": [214, 215], "constantvelocityacquisit": 215, "dummy_detect": [216, 217], "feature_contain": [218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228], "contain": [219, 327], "datacontain": 220, "datanod": 221, "signalcontain": 222, "signalnod": 223, "treenod": 224, "dummy_tru": 225, "dummy_func": 226, "get_registered_func": 227, "load_featur": 228, "feature_related_funct": [229, 230, 231, 232, 233], "sharedlist": 230, "convert_feature_list_to_str": 231, "exampl": [231, 233, 240, 322], "convert_str_to_feature_list": 232, "load_dynamic_parameter_funct": 233, "image_writ": [234, 235], "imagewrit": 235, "remove_empty_til": [236, 237, 238, 239, 240, 241], "detecttissueinstack": 237, "detecttissueinstackandrecord": 238, "removeemptyposit": 239, "detect_tissu": 240, "detect_tissue2": 241, "restful_featur": [242, 243, 244], "ilastiksegment": 243, "prepare_servic": 244, "volume_search": [245, 246, 247], "volumesearch": 246, "draw_box": 247, "metadata_sourc": [248, 249, 250, 251, 252, 253, 254, 255], "bdv_metadata": [249, 250], "bigdataviewermetadata": 250, "metadata": [251, 252, 253], "xmlmetadata": 253, "ome_tiff_metadata": [254, 255], "ometiffmetadata": 255, "microscop": [256, 257, 322, 328, 330], "waveform": [260, 261, 262, 263, 264, 265, 266, 267, 268, 330], "camera_exposur": 261, "dc_valu": 262, "remote_focus_ramp": 263, "sawtooth": 264, "sine_wav": 265, "single_puls": 266, "smooth_waveform": 267, "squar": 268, "tool": [269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "beam": [270, 271, 272, 273], "fit_gaussian_beam_error": 271, "fit_gaussian_beam_ms": 272, "gaussian_beam": 273, "common_dict_tool": [274, 275], "update_stage_dict": 275, "common_funct": [276, 277, 278, 279, 280, 281], "variablewithlock": 277, "build_ref_nam": 278, "combine_func": 279, "copy_proxy_object": 280, "load_module_from_fil": 281, "decor": [282, 283, 284], "featurelist": 283, "function_tim": 284, "file_funct": [285, 286, 287, 288, 289], "create_save_path": 286, "delete_fold": 287, "load_yaml_fil": 288, "save_yaml_fil": 289, "imag": [290, 291, 292], "create_arrow_imag": 291, "text_arrai": 292, "image_load": [293, 294], "lazytiff": 294, "main_funct": [295, 296, 297, 298], "create_pars": 296, "evaluate_parser_input_argu": 297, "identify_gpu": 298, "multipos_table_tool": [299, 300, 301, 302, 303], "calc_num_til": 300, "compute_tiles_from_bounding_box": 301, "sign": 302, "update_t": 303, "project_stat": [304, 305], "countlin": 305, "sdf": [306, 307, 308, 309], "box": 307, "sphere": 308, "volume_from_sdf": 309, "waveform_template_func": [310, 311], "get_waveform_template_paramet": 311, "xml_tool": [312, 313, 314], "dict_to_xml": 313, "parse_xml": 314, "view": [315, 316, 317, 318], "custom_widget": 316, "main_window_cont": 317, "popup": 318, "refer": 321, "configur": [322, 330], "yaml": 322, "hardwar": [322, 324, 330, 332], "section": [322, 330], "gui": [322, 330], "channel": 322, "stack": 322, "acquisit": [322, 332], "timepoint": 322, "contribut": [323, 325], "guidelin": 323, "gener": 323, "principl": 323, "code": 323, "style": 323, "dictionari": 323, "pars": 323, "unit": [323, 324], "test": 323, "develop": 323, "mac": 323, "ad": [324, 326], "new": [324, 326], "scientif": 324, "how": 324, "add": 324, "introduct": 327, "current": 327, "implement": [327, 328], "The": 327, "creat": 327, "custom": 327, "combin": 327, "load": 327, "function": 327, "edit": 327, "delet": 327, "multiscal": 328, "expans": 328, "opm": 328, "v2": 328, "ct": 328, "v1": 328, "spectral": 328, "tirf": 328, "autonom": 329, "softwar": [329, 330, 331], "light": 329, "microscopi": 329, "project": 329, "philosophi": 329, "content": 329, "author": 329, "index": 329, "search": 329, "file": 330, "remot": 330, "focu": 330, "filter": [330, 332], "wheel": [330, 332], "ax": 330, "definit": 330, "constant": 330, "other": 330, "templat": 330, "rest": 330, "instal": 331, "download": 331, "git": 331, "setup": 331, "your": 331, "python": 331, "environ": 331, "gpu": 331, "depend": 331, "troubleshoot": 331, "support": 332, "data": 332, "card": 332, "ni": 332, "pcie": 332, "6738": 332, "pxi": 332, "6259": 332, "hamamatsu": 332, "flash": 332, "4": 332, "0": 332, "fusion": 332, "lightn": 332, "photometr": 332, "iri": 332, "15": 332, "voicecoil": 332, "equip": 332, "solut": 332, "thorlab": 332, "blink": 332, "asi": 332, "tiger": 332, "sutter": 332, "physik": 332, "instrument": 332, "analog": 332, "piezo": 332, "etc": 332, "deform": 332, "mirror": 332, "imagin": 332, "optic": 332, "galvanomet": 332, "cambridg": 332, "technologi": 332, "novanta": 332, "scannermax": 332, "mechan": 332, "user": 333, "guid": 333}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"aslm.config": [[0, "module-aslm.config"]], "aslm.config.config": [[1, "module-aslm.config.config"]], "aslm.config.config.build_nested_dict": [[2, "aslm-config-config-build-nested-dict"]], "aslm.config.config.get_aslm_path": [[3, "aslm-config-config-get-aslm-path"]], "aslm.config.config.get_configuration_paths": [[4, "aslm-config-config-get-configuration-paths"]], "aslm.config.config.load_configs": [[5, "aslm-config-config-load-configs"]], "aslm.config.config.update_config_dict": [[6, "aslm-config-config-update-config-dict"]], "aslm.config.config.verify_experiment_config": [[7, "aslm-config-config-verify-experiment-config"]], "aslm.config.config.verify_waveform_constants": [[8, "aslm-config-config-verify-waveform-constants"]], "aslm.controller": [[9, "module-aslm.controller"]], "aslm.controller.configuration_controller": [[10, "module-aslm.controller.configuration_controller"]], "aslm.controller.configuration_controller.ConfigurationController": [[11, "aslm-controller-configuration-controller-configurationcontroller"]], "aslm.controller.thread_pool": [[12, "module-aslm.controller.thread_pool"]], "aslm.controller.thread_pool.SelfLockThread": [[13, "aslm-controller-thread-pool-selflockthread"]], "aslm.controller.thread_pool.SynchronizedThreadPool": [[14, "aslm-controller-thread-pool-synchronizedthreadpool"]], "aslm.controller.thread_pool.ThreadWaitlist": [[15, "aslm-controller-thread-pool-threadwaitlist"]], "aslm.model": [[16, "module-aslm.model"]], "aslm.model.analysis": [[17, "module-aslm.model.analysis"]], "aslm.model.analysis.boundary_detect": [[18, "module-aslm.model.analysis.boundary_detect"]], "aslm.model.analysis.boundary_detect.binary_detect": [[19, "aslm-model-analysis-boundary-detect-binary-detect"]], "aslm.model.analysis.boundary_detect.find_tissue_boundary_2d": [[20, "aslm-model-analysis-boundary-detect-find-tissue-boundary-2d"]], "aslm.model.analysis.boundary_detect.has_tissue": [[21, "aslm-model-analysis-boundary-detect-has-tissue"]], "aslm.model.analysis.boundary_detect.map_boundary": [[22, "aslm-model-analysis-boundary-detect-map-boundary"]], "aslm.model.analysis.camera": [[23, "module-aslm.model.analysis.camera"]], "aslm.model.analysis.camera.compute_flatfield_map": [[24, "aslm-model-analysis-camera-compute-flatfield-map"]], "aslm.model.analysis.camera.compute_noise_sigma": [[25, "aslm-model-analysis-camera-compute-noise-sigma"]], "aslm.model.analysis.camera.compute_scmos_offset_and_variance_map": [[26, "aslm-model-analysis-camera-compute-scmos-offset-and-variance-map"]], "aslm.model.analysis.camera.compute_signal_to_noise": [[27, "aslm-model-analysis-camera-compute-signal-to-noise"]], "aslm.model.analysis.detection": [[28, "module-aslm.model.analysis.detection"]], "aslm.model.analysis.detection.add_median_border": [[29, "aslm-model-analysis-detection-add-median-border"]], "aslm.model.analysis.detection.combine_images": [[30, "aslm-model-analysis-detection-combine-images"]], "aslm.model.analysis.detection.log_detection": [[31, "aslm-model-analysis-detection-log-detection"]], "aslm.model.analysis.detection.make_inside_image": [[32, "aslm-model-analysis-detection-make-inside-image"]], "aslm.model.analysis.detection.make_normalized_image": [[33, "aslm-model-analysis-detection-make-normalized-image"]], "aslm.model.analysis.detection.make_sphere_3D": [[34, "aslm-model-analysis-detection-make-sphere-3d"]], "aslm.model.analysis.detection.multiscale_surface_filter_3D": [[35, "aslm-model-analysis-detection-multiscale-surface-filter-3d"]], "aslm.model.analysis.detection.surface_filter_gauss_3D": [[36, "aslm-model-analysis-detection-surface-filter-gauss-3d"]], "aslm.model.analysis.detection.three_level_segmentation": [[37, "aslm-model-analysis-detection-three-level-segmentation"]], "aslm.model.analysis.image_contrast": [[38, "module-aslm.model.analysis.image_contrast"]], "aslm.model.analysis.image_contrast.estimate_and_correct_flatfield": [[39, "aslm-model-analysis-image-contrast-estimate-and-correct-flatfield"]], "aslm.model.analysis.image_contrast.estimate_image_resolution": [[40, "aslm-model-analysis-image-contrast-estimate-image-resolution"]], "aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy": [[41, "aslm-model-analysis-image-contrast-fast-normalized-dct-shannon-entropy"]], "aslm.model.analysis.image_contrast.image_intensity": [[42, "aslm-model-analysis-image-contrast-image-intensity"]], "aslm.model.analysis.image_contrast.normalized_dct_shannon_entropy": [[43, "aslm-model-analysis-image-contrast-normalized-dct-shannon-entropy"]], "aslm.model.analysis.image_decorrelation": [[44, "module-aslm.model.analysis.image_decorrelation"]], "aslm.model.analysis.image_decorrelation.apodize_image": [[45, "aslm-model-analysis-image-decorrelation-apodize-image"]], "aslm.model.analysis.image_decorrelation.get_correlation_coefficient": [[46, "aslm-model-analysis-image-decorrelation-get-correlation-coefficient"]], "aslm.model.analysis.image_decorrelation.get_decorrelation_local_maxima": [[47, "aslm-model-analysis-image-decorrelation-get-decorrelation-local-maxima"]], "aslm.model.analysis.image_decorrelation.get_image_decorrelation": [[48, "aslm-model-analysis-image-decorrelation-get-image-decorrelation"]], "aslm.model.analysis.image_decorrelation.get_radial_average": [[49, "aslm-model-analysis-image-decorrelation-get-radial-average"]], "aslm.model.analysis.image_decorrelation.image_to_polar": [[50, "aslm-model-analysis-image-decorrelation-image-to-polar"]], "aslm.model.analysis.image_decorrelation.linear_map": [[51, "aslm-model-analysis-image-decorrelation-linear-map"]], "aslm.model.analysis.image_decorrelation.main_image_decorr": [[52, "aslm-model-analysis-image-decorrelation-main-image-decorr"]], "aslm.model.analysis.image_transform": [[53, "module-aslm.model.analysis.image_transform"]], "aslm.model.analysis.image_transform.deskew_image": [[54, "aslm-model-analysis-image-transform-deskew-image"]], "aslm.model.analysis.image_transform.initiate_gpu": [[55, "aslm-model-analysis-image-transform-initiate-gpu"]], "aslm.model.analysis.spectral_unmixing": [[56, "module-aslm.model.analysis.spectral_unmixing"]], "aslm.model.analysis.spectral_unmixing.to_do": [[57, "aslm-model-analysis-spectral-unmixing-to-do"]], "aslm.model.concurrency": [[58, "module-aslm.model.concurrency"]], "aslm.model.concurrency.concurrency_tools": [[59, "module-aslm.model.concurrency.concurrency_tools"]], "aslm.model.concurrency.concurrency_tools.CustodyThread": [[60, "aslm-model-concurrency-concurrency-tools-custodythread"]], "aslm.model.concurrency.concurrency_tools.FancyThread": [[61, "aslm-model-concurrency-concurrency-tools-fancythread"]], "aslm.model.concurrency.concurrency_tools.MyTestClass": [[62, "aslm-model-concurrency-concurrency-tools-mytestclass"]], "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess": [[63, "aslm-model-concurrency-concurrency-tools-objectinsubprocess"]], "aslm.model.concurrency.concurrency_tools.PoliteThread": [[64, "aslm-model-concurrency-concurrency-tools-politethread"]], "aslm.model.concurrency.concurrency_tools.ResultThread": [[65, "aslm-model-concurrency-concurrency-tools-resultthread"]], "aslm.model.concurrency.concurrency_tools.SharedNDArray": [[66, "aslm-model-concurrency-concurrency-tools-sharedndarray"]], "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess": [[67, "aslm-model-concurrency-concurrency-tools-testobjectinsubprocess"]], "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread": [[68, "aslm-model-concurrency-concurrency-tools-testresultthreadandcustodythread"]], "aslm.model.concurrency.concurrency_tools.TestSharedNDArray": [[69, "aslm-model-concurrency-concurrency-tools-testsharedndarray"]], "aslm.model.concurrency.proxy_objects": [[70, "module-aslm.model.concurrency.proxy_objects"]], "aslm.model.concurrency.proxy_objects.ProxyManager": [[71, "aslm-model-concurrency-proxy-objects-proxymanager"]], "aslm.model.concurrency.proxy_objects.ProxyObject": [[72, "aslm-model-concurrency-proxy-objects-proxyobject"]], "aslm.model.concurrency.proxy_objects.launch_custody_thread": [[73, "aslm-model-concurrency-proxy-objects-launch-custody-thread"]], "aslm.model.concurrency.proxy_objects.launch_thread": [[74, "aslm-model-concurrency-proxy-objects-launch-thread"]], "aslm.model.concurrency.write_parameters": [[75, "module-aslm.model.concurrency.write_parameters"]], "aslm.model.concurrency.write_parameters.write_Params": [[76, "aslm-model-concurrency-write-parameters-write-params"]], "aslm.model.data_sources": [[77, "module-aslm.model.data_sources"]], "aslm.model.data_sources.bdv_data_source": [[78, "module-aslm.model.data_sources.bdv_data_source"]], "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource": [[79, "aslm-model-data-sources-bdv-data-source-bigdataviewerdatasource"]], "aslm.model.data_sources.data_source": [[80, "module-aslm.model.data_sources.data_source"]], "aslm.model.data_sources.data_source.DataSource": [[81, "aslm-model-data-sources-data-source-datasource"]], "aslm.model.data_sources.get_data_source": [[82, "aslm-model-data-sources-get-data-source"]], "aslm.model.data_sources.tiff_data_source": [[83, "module-aslm.model.data_sources.tiff_data_source"]], "aslm.model.data_sources.tiff_data_source.TiffDataSource": [[84, "aslm-model-data-sources-tiff-data-source-tiffdatasource"]], "aslm.model.data_sources.zarr_data_source": [[85, "module-aslm.model.data_sources.zarr_data_source"]], "aslm.model.data_sources.zarr_data_source.ZarrDataSource": [[86, "aslm-model-data-sources-zarr-data-source-zarrdatasource"]], "aslm.model.device_startup_functions": [[87, "module-aslm.model.device_startup_functions"]], "aslm.model.device_startup_functions.DummyDeviceConnection": [[88, "aslm-model-device-startup-functions-dummydeviceconnection"]], "aslm.model.device_startup_functions.auto_redial": [[89, "aslm-model-device-startup-functions-auto-redial"]], "aslm.model.device_startup_functions.device_not_found": [[90, "aslm-model-device-startup-functions-device-not-found"]], "aslm.model.device_startup_functions.load_camera_connection": [[91, "aslm-model-device-startup-functions-load-camera-connection"]], "aslm.model.device_startup_functions.load_devices": [[92, "aslm-model-device-startup-functions-load-devices"]], "aslm.model.device_startup_functions.load_filter_wheel_connection": [[93, "aslm-model-device-startup-functions-load-filter-wheel-connection"]], "aslm.model.device_startup_functions.load_stages": [[94, "aslm-model-device-startup-functions-load-stages"]], "aslm.model.device_startup_functions.load_zoom_connection": [[95, "aslm-model-device-startup-functions-load-zoom-connection"]], "aslm.model.device_startup_functions.start_camera": [[96, "aslm-model-device-startup-functions-start-camera"]], "aslm.model.device_startup_functions.start_daq": [[97, "aslm-model-device-startup-functions-start-daq"]], "aslm.model.device_startup_functions.start_filter_wheel": [[98, "aslm-model-device-startup-functions-start-filter-wheel"]], "aslm.model.device_startup_functions.start_galvo": [[99, "aslm-model-device-startup-functions-start-galvo"]], "aslm.model.device_startup_functions.start_lasers": [[100, "aslm-model-device-startup-functions-start-lasers"]], "aslm.model.device_startup_functions.start_remote_focus_device": [[101, "aslm-model-device-startup-functions-start-remote-focus-device"]], "aslm.model.device_startup_functions.start_shutter": [[102, "aslm-model-device-startup-functions-start-shutter"]], "aslm.model.device_startup_functions.start_stage": [[103, "aslm-model-device-startup-functions-start-stage"]], "aslm.model.device_startup_functions.start_zoom": [[104, "aslm-model-device-startup-functions-start-zoom"]], "aslm.model.devices": [[105, "module-aslm.model.devices"]], "aslm.model.devices.APIs": [[106, "module-aslm.model.devices.APIs"]], "aslm.model.devices.APIs.coherent": [[107, "module-aslm.model.devices.APIs.coherent"]], "aslm.model.devices.APIs.dynamixel": [[108, "module-aslm.model.devices.APIs.dynamixel"]], "aslm.model.devices.APIs.logitech": [[109, "module-aslm.model.devices.APIs.logitech"]], "aslm.model.devices.APIs.omicron": [[110, "module-aslm.model.devices.APIs.omicron"]], "aslm.model.devices.camera": [[111, "module-aslm.model.devices.camera"]], "aslm.model.devices.camera.camera_base": [[112, "module-aslm.model.devices.camera.camera_base"]], "aslm.model.devices.camera.camera_base.CameraBase": [[113, "aslm-model-devices-camera-camera-base-camerabase"]], "aslm.model.devices.camera.camera_hamamatsu": [[114, "module-aslm.model.devices.camera.camera_hamamatsu"]], "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca": [[115, "aslm-model-devices-camera-camera-hamamatsu-hamamatsuorca"]], "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning": [[116, "aslm-model-devices-camera-camera-hamamatsu-hamamatsuorcalightning"]], "aslm.model.devices.camera.camera_photometrics": [[117, "module-aslm.model.devices.camera.camera_photometrics"]], "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix": [[118, "aslm-model-devices-camera-camera-photometrics-photometricskinetix"]], "aslm.model.devices.camera.camera_synthetic": [[119, "module-aslm.model.devices.camera.camera_synthetic"]], "aslm.model.devices.camera.camera_synthetic.SyntheticCamera": [[120, "aslm-model-devices-camera-camera-synthetic-syntheticcamera"]], "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController": [[121, "aslm-model-devices-camera-camera-synthetic-syntheticcameracontroller"]], "aslm.model.devices.daq": [[122, "module-aslm.model.devices.daq"]], "aslm.model.devices.daq.daq_base": [[123, "module-aslm.model.devices.daq.daq_base"]], "aslm.model.devices.daq.daq_base.DAQBase": [[124, "aslm-model-devices-daq-daq-base-daqbase"]], "aslm.model.devices.daq.daq_synthetic": [[125, "module-aslm.model.devices.daq.daq_synthetic"]], "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ": [[126, "aslm-model-devices-daq-daq-synthetic-syntheticdaq"]], "aslm.model.devices.filter_wheel": [[127, "module-aslm.model.devices.filter_wheel"]], "aslm.model.devices.filter_wheel.filter_wheel_asi": [[128, "module-aslm.model.devices.filter_wheel.filter_wheel_asi"]], "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel": [[129, "aslm-model-devices-filter-wheel-filter-wheel-asi-asifilterwheel"]], "aslm.model.devices.filter_wheel.filter_wheel_asi.build_filter_wheel_connection": [[130, "aslm-model-devices-filter-wheel-filter-wheel-asi-build-filter-wheel-connection"]], "aslm.model.devices.filter_wheel.filter_wheel_base": [[131, "module-aslm.model.devices.filter_wheel.filter_wheel_base"]], "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase": [[132, "aslm-model-devices-filter-wheel-filter-wheel-base-filterwheelbase"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter": [[133, "module-aslm.model.devices.filter_wheel.filter_wheel_sutter"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel": [[134, "aslm-model-devices-filter-wheel-filter-wheel-sutter-sutterfilterwheel"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection": [[135, "aslm-model-devices-filter-wheel-filter-wheel-sutter-build-filter-wheel-connection"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic": [[136, "module-aslm.model.devices.filter_wheel.filter_wheel_synthetic"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel": [[137, "aslm-model-devices-filter-wheel-filter-wheel-synthetic-syntheticfilterwheel"]], "aslm.model.devices.galvo": [[138, "module-aslm.model.devices.galvo"]], "aslm.model.devices.galvo.galvo_base": [[139, "module-aslm.model.devices.galvo.galvo_base"]], "aslm.model.devices.galvo.galvo_base.GalvoBase": [[140, "aslm-model-devices-galvo-galvo-base-galvobase"]], "aslm.model.devices.galvo.galvo_synthetic": [[141, "module-aslm.model.devices.galvo.galvo_synthetic"]], "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo": [[142, "aslm-model-devices-galvo-galvo-synthetic-syntheticgalvo"]], "aslm.model.devices.joystick": [[143, "module-aslm.model.devices.joystick"]], "aslm.model.devices.joystick.joystick_base": [[144, "module-aslm.model.devices.joystick.joystick_base"]], "aslm.model.devices.joystick.joystick_base.JoystickBase": [[145, "aslm-model-devices-joystick-joystick-base-joystickbase"]], "aslm.model.devices.joystick.joystick_synthetic": [[146, "module-aslm.model.devices.joystick.joystick_synthetic"]], "aslm.model.devices.joystick.joystick_synthetic.SyntheticJoystick": [[147, "aslm-model-devices-joystick-joystick-synthetic-syntheticjoystick"]], "aslm.model.devices.lasers": [[148, "module-aslm.model.devices.lasers"]], "aslm.model.devices.lasers.laser_base": [[149, "module-aslm.model.devices.lasers.laser_base"]], "aslm.model.devices.lasers.laser_base.LaserBase": [[150, "aslm-model-devices-lasers-laser-base-laserbase"]], "aslm.model.devices.lasers.laser_synthetic": [[151, "module-aslm.model.devices.lasers.laser_synthetic"]], "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser": [[152, "aslm-model-devices-lasers-laser-synthetic-syntheticlaser"]], "aslm.model.devices.objectives": [[153, "module-aslm.model.devices.objectives"]], "aslm.model.devices.objectives.Objective": [[154, "aslm-model-devices-objectives-objective"]], "aslm.model.devices.remote_focus": [[155, "module-aslm.model.devices.remote_focus"]], "aslm.model.devices.remote_focus.remote_focus_base": [[156, "module-aslm.model.devices.remote_focus.remote_focus_base"]], "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase": [[157, "aslm-model-devices-remote-focus-remote-focus-base-remotefocusbase"]], "aslm.model.devices.remote_focus.remote_focus_synthetic": [[158, "module-aslm.model.devices.remote_focus.remote_focus_synthetic"]], "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus": [[159, "aslm-model-devices-remote-focus-remote-focus-synthetic-syntheticremotefocus"]], "aslm.model.devices.shutter": [[160, "module-aslm.model.devices.shutter"]], "aslm.model.devices.shutter.laser_shutter_base": [[161, "module-aslm.model.devices.shutter.laser_shutter_base"]], "aslm.model.devices.shutter.laser_shutter_base.ShutterBase": [[162, "aslm-model-devices-shutter-laser-shutter-base-shutterbase"]], "aslm.model.devices.shutter.laser_shutter_synthetic": [[163, "module-aslm.model.devices.shutter.laser_shutter_synthetic"]], "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter": [[164, "aslm-model-devices-shutter-laser-shutter-synthetic-syntheticshutter"]], "aslm.model.devices.stages": [[165, "module-aslm.model.devices.stages"]], "aslm.model.devices.stages.stage_asi": [[166, "module-aslm.model.devices.stages.stage_asi"]], "aslm.model.devices.stages.stage_asi.ASIStage": [[167, "aslm-model-devices-stages-stage-asi-asistage"]], "aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection": [[168, "aslm-model-devices-stages-stage-asi-build-asi-stage-connection"]], "aslm.model.devices.stages.stage_base": [[169, "module-aslm.model.devices.stages.stage_base"]], "aslm.model.devices.stages.stage_base.StageBase": [[170, "aslm-model-devices-stages-stage-base-stagebase"]], "aslm.model.devices.stages.stage_galvo": [[171, "module-aslm.model.devices.stages.stage_galvo"]], "aslm.model.devices.stages.stage_galvo.GalvoNIStage": [[172, "aslm-model-devices-stages-stage-galvo-galvonistage"]], "aslm.model.devices.stages.stage_mcl": [[173, "module-aslm.model.devices.stages.stage_mcl"]], "aslm.model.devices.stages.stage_mcl.MCLStage": [[174, "aslm-model-devices-stages-stage-mcl-mclstage"]], "aslm.model.devices.stages.stage_mcl.build_MCLStage_connection": [[175, "aslm-model-devices-stages-stage-mcl-build-mclstage-connection"]], "aslm.model.devices.stages.stage_pi": [[176, "module-aslm.model.devices.stages.stage_pi"]], "aslm.model.devices.stages.stage_pi.PIStage": [[177, "aslm-model-devices-stages-stage-pi-pistage"]], "aslm.model.devices.stages.stage_pi.build_PIStage_connection": [[178, "aslm-model-devices-stages-stage-pi-build-pistage-connection"]], "aslm.model.devices.stages.stage_sutter": [[179, "module-aslm.model.devices.stages.stage_sutter"]], "aslm.model.devices.stages.stage_sutter.SutterStage": [[180, "aslm-model-devices-stages-stage-sutter-sutterstage"]], "aslm.model.devices.stages.stage_sutter.build_MP285_connection": [[181, "aslm-model-devices-stages-stage-sutter-build-mp285-connection"]], "aslm.model.devices.stages.stage_synthetic": [[182, "module-aslm.model.devices.stages.stage_synthetic"]], "aslm.model.devices.stages.stage_synthetic.SyntheticStage": [[183, "aslm-model-devices-stages-stage-synthetic-syntheticstage"]], "aslm.model.devices.stages.stage_tl_kcube_inertial": [[184, "module-aslm.model.devices.stages.stage_tl_kcube_inertial"]], "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage": [[185, "aslm-model-devices-stages-stage-tl-kcube-inertial-tlkimstage"]], "aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection": [[186, "aslm-model-devices-stages-stage-tl-kcube-inertial-build-tlkimstage-connection"]], "aslm.model.devices.zoom": [[187, "module-aslm.model.devices.zoom"]], "aslm.model.devices.zoom.zoom_base": [[188, "module-aslm.model.devices.zoom.zoom_base"]], "aslm.model.devices.zoom.zoom_base.ZoomBase": [[189, "aslm-model-devices-zoom-zoom-base-zoombase"]], "aslm.model.devices.zoom.zoom_synthetic": [[190, "module-aslm.model.devices.zoom.zoom_synthetic"]], "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom": [[191, "aslm-model-devices-zoom-zoom-synthetic-syntheticzoom"]], "aslm.model.dummy": [[192, "module-aslm.model.dummy"]], "aslm.model.dummy.DummyController": [[193, "aslm-model-dummy-dummycontroller"]], "aslm.model.dummy.DummyDevice": [[194, "aslm-model-dummy-dummydevice"]], "aslm.model.dummy.DummyMicroscope": [[195, "aslm-model-dummy-dummymicroscope"]], "aslm.model.dummy.DummyModel": [[196, "aslm-model-dummy-dummymodel"]], "aslm.model.features": [[197, "module-aslm.model.features"]], "aslm.model.features.auto_tile_scan": [[198, "module-aslm.model.features.auto_tile_scan"]], "aslm.model.features.auto_tile_scan.CalculateFocusRange": [[199, "aslm-model-features-auto-tile-scan-calculatefocusrange"]], "Parameters:": [[199, "parameters"], [199, "id1"], [199, "id2"], [199, "id4"], [199, "id6"], [199, "id8"], [199, "id10"], [204, "parameters"], [204, "id1"], [204, "id2"], [205, "parameters"], [205, "id3"], [205, "id6"], [205, "id8"], [205, "id10"], [206, "parameters"], [206, "id1"], [207, "parameters"], [207, "id1"], [207, "id2"], [208, "parameters"], [208, "id1"], [208, "id2"], [209, "parameters"], [209, "id1"], [210, "parameters"], [210, "id1"], [211, "parameters"], [211, "id1"], [212, "parameters"], [212, "id1"], [212, "id2"], [212, "id4"], [212, "id6"], [212, "id8"], [213, "parameters"], [213, "id1"], [213, "id2"], [213, "id4"], [213, "id6"], [213, "id8"], [213, "id10"], [213, "id12"], [213, "id14"], [219, "parameters"], [220, "parameters"], [220, "id3"], [221, "parameters"], [221, "id3"], [221, "id6"], [222, "parameters"], [222, "id3"], [223, "parameters"], [223, "id3"], [223, "id6"], [224, "parameters"], [224, "id3"], [225, "parameters"], [226, "parameters"], [227, "parameters"], [228, "parameters"], [230, "parameters"], [230, "id1"], [230, "id2"], [231, "parameters"], [233, "parameters"], [237, "parameters"], [237, "id2"], [238, "parameters"], [238, "id2"], [239, "parameters"], [240, "parameters"], [241, "parameters"]], "Attributes:": [[199, "attributes"], [204, "attributes"], [205, "attributes"], [206, "attributes"], [207, "attributes"], [208, "attributes"], [209, "attributes"], [210, "attributes"], [211, "attributes"], [212, "attributes"], [213, "attributes"], [219, "attributes"], [221, "attributes"], [222, "attributes"], [223, "attributes"], [224, "attributes"], [230, "attributes"], [237, "attributes"], [238, "attributes"], [239, "attributes"]], "Methods:": [[199, "methods"], [204, "methods"], [205, "methods"], [206, "methods"], [207, "methods"], [208, "methods"], [209, "methods"], [210, "methods"], [211, "methods"], [212, "methods"], [213, "methods"], [219, "methods"], [220, "methods"], [221, "methods"], [222, "methods"], [223, "methods"], [224, "methods"], [230, "methods"], [237, "methods"], [238, "methods"], [239, "methods"]], "Notes:": [[199, "notes"], [204, "notes"], [205, "notes"], [206, "notes"], [207, "notes"], [208, "notes"], [209, "notes"], [210, "notes"], [211, "notes"], [212, "notes"], [213, "notes"], [219, "notes"], [220, "notes"], [220, "id6"], [221, "notes"], [222, "notes"], [222, "id6"], [223, "notes"], [224, "notes"], [225, "notes"], [226, "notes"], [227, "notes"], [228, "notes"], [230, "notes"], [231, "notes"], [233, "notes"], [240, "notes"], [241, "notes"]], "Returns:": [[199, "returns"], [199, "id3"], [199, "id5"], [199, "id7"], [199, "id9"], [199, "id11"], [204, "returns"], [204, "id3"], [205, "returns"], [205, "id7"], [205, "id9"], [205, "id11"], [206, "returns"], [207, "returns"], [207, "id3"], [208, "returns"], [208, "id3"], [209, "returns"], [210, "returns"], [211, "returns"], [212, "returns"], [212, "id3"], [212, "id5"], [212, "id7"], [212, "id9"], [213, "returns"], [213, "id3"], [213, "id5"], [213, "id7"], [213, "id9"], [213, "id11"], [213, "id13"], [213, "id15"], [221, "returns"], [221, "id9"], [223, "returns"], [223, "id9"], [224, "returns"], [225, "returns"], [226, "returns"], [227, "returns"], [228, "returns"], [231, "returns"], [237, "returns"], [237, "id1"], [237, "id3"], [237, "id4"], [237, "id5"], [237, "id6"], [238, "returns"], [238, "id1"], [238, "id3"], [238, "id4"], [238, "id5"], [238, "id6"], [239, "returns"], [240, "returns"], [241, "returns"]], "aslm.model.features.autofocus": [[200, "module-aslm.model.features.autofocus"]], "aslm.model.features.autofocus.Autofocus": [[201, "aslm-model-features-autofocus-autofocus"]], "aslm.model.features.autofocus.power_tent": [[202, "aslm-model-features-autofocus-power-tent"]], "aslm.model.features.common_features": [[203, "module-aslm.model.features.common_features"]], "aslm.model.features.common_features.ChangeResolution": [[204, "aslm-model-features-common-features-changeresolution"]], "aslm.model.features.common_features.ConProAcquisition": [[205, "aslm-model-features-common-features-conproacquisition"]], "aslm.model.features.common_features.FindTissueSimple2D": [[206, "aslm-model-features-common-features-findtissuesimple2d"]], "aslm.model.features.common_features.LoopByCount": [[207, "aslm-model-features-common-features-loopbycount"]], "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable": [[208, "aslm-model-features-common-features-movetonextpositioninmultipositiontable"]], "aslm.model.features.common_features.PrepareNextChannel": [[209, "aslm-model-features-common-features-preparenextchannel"]], "aslm.model.features.common_features.Snap": [[210, "aslm-model-features-common-features-snap"]], "aslm.model.features.common_features.StackPause": [[211, "aslm-model-features-common-features-stackpause"]], "aslm.model.features.common_features.WaitToContinue": [[212, "aslm-model-features-common-features-waittocontinue"]], "aslm.model.features.common_features.ZStackAcquisition": [[213, "aslm-model-features-common-features-zstackacquisition"]], "aslm.model.features.constant_velocity_acquisition": [[214, "module-aslm.model.features.constant_velocity_acquisition"]], "aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition": [[215, "aslm-model-features-constant-velocity-acquisition-constantvelocityacquisition"]], "aslm.model.features.dummy_detective": [[216, "module-aslm.model.features.dummy_detective"]], "aslm.model.features.dummy_detective.Dummy_Detective": [[217, "aslm-model-features-dummy-detective-dummy-detective"]], "aslm.model.features.feature_container": [[218, "module-aslm.model.features.feature_container"]], "aslm.model.features.feature_container.Container": [[219, "aslm-model-features-feature-container-container"]], "aslm.model.features.feature_container.DataContainer": [[220, "aslm-model-features-feature-container-datacontainer"]], "aslm.model.features.feature_container.DataNode": [[221, "aslm-model-features-feature-container-datanode"]], "aslm.model.features.feature_container.SignalContainer": [[222, "aslm-model-features-feature-container-signalcontainer"]], "aslm.model.features.feature_container.SignalNode": [[223, "aslm-model-features-feature-container-signalnode"]], "aslm.model.features.feature_container.TreeNode": [[224, "aslm-model-features-feature-container-treenode"]], "aslm.model.features.feature_container.dummy_True": [[225, "aslm-model-features-feature-container-dummy-true"]], "aslm.model.features.feature_container.dummy_func": [[226, "aslm-model-features-feature-container-dummy-func"]], "aslm.model.features.feature_container.get_registered_funcs": [[227, "aslm-model-features-feature-container-get-registered-funcs"]], "aslm.model.features.feature_container.load_features": [[228, "aslm-model-features-feature-container-load-features"]], "aslm.model.features.feature_related_functions": [[229, "module-aslm.model.features.feature_related_functions"]], "aslm.model.features.feature_related_functions.SharedList": [[230, "aslm-model-features-feature-related-functions-sharedlist"]], "aslm.model.features.feature_related_functions.convert_feature_list_to_str": [[231, "aslm-model-features-feature-related-functions-convert-feature-list-to-str"]], "Example:": [[231, "example"], [233, "example"], [240, "example"]], "]": [[231, "id3"], [233, "id5"]], "aslm.model.features.feature_related_functions.convert_str_to_feature_list": [[232, "aslm-model-features-feature-related-functions-convert-str-to-feature-list"]], "aslm.model.features.feature_related_functions.load_dynamic_parameter_functions": [[233, "aslm-model-features-feature-related-functions-load-dynamic-parameter-functions"]], "aslm.model.features.image_writer": [[234, "module-aslm.model.features.image_writer"]], "aslm.model.features.image_writer.ImageWriter": [[235, "aslm-model-features-image-writer-imagewriter"]], "aslm.model.features.remove_empty_tiles": [[236, "module-aslm.model.features.remove_empty_tiles"]], "aslm.model.features.remove_empty_tiles.DetectTissueInStack": [[237, "aslm-model-features-remove-empty-tiles-detecttissueinstack"]], "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord": [[238, "aslm-model-features-remove-empty-tiles-detecttissueinstackandrecord"]], "aslm.model.features.remove_empty_tiles.RemoveEmptyPositions": [[239, "aslm-model-features-remove-empty-tiles-removeemptypositions"]], "aslm.model.features.remove_empty_tiles.detect_tissue": [[240, "aslm-model-features-remove-empty-tiles-detect-tissue"]], "aslm.model.features.remove_empty_tiles.detect_tissue2": [[241, "aslm-model-features-remove-empty-tiles-detect-tissue2"]], "aslm.model.features.restful_features": [[242, "module-aslm.model.features.restful_features"]], "aslm.model.features.restful_features.IlastikSegmentation": [[243, "aslm-model-features-restful-features-ilastiksegmentation"]], "aslm.model.features.restful_features.prepare_service": [[244, "aslm-model-features-restful-features-prepare-service"]], "aslm.model.features.volume_search": [[245, "module-aslm.model.features.volume_search"]], "aslm.model.features.volume_search.VolumeSearch": [[246, "aslm-model-features-volume-search-volumesearch"]], "aslm.model.features.volume_search.draw_box": [[247, "aslm-model-features-volume-search-draw-box"]], "aslm.model.metadata_sources": [[248, "module-aslm.model.metadata_sources"]], "aslm.model.metadata_sources.bdv_metadata": [[249, "module-aslm.model.metadata_sources.bdv_metadata"]], "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata": [[250, "aslm-model-metadata-sources-bdv-metadata-bigdataviewermetadata"]], "aslm.model.metadata_sources.metadata": [[251, "module-aslm.model.metadata_sources.metadata"]], "aslm.model.metadata_sources.metadata.Metadata": [[252, "aslm-model-metadata-sources-metadata-metadata"]], "aslm.model.metadata_sources.metadata.XMLMetadata": [[253, "aslm-model-metadata-sources-metadata-xmlmetadata"]], "aslm.model.metadata_sources.ome_tiff_metadata": [[254, "module-aslm.model.metadata_sources.ome_tiff_metadata"]], "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata": [[255, "aslm-model-metadata-sources-ome-tiff-metadata-ometiffmetadata"]], "aslm.model.microscope": [[256, "module-aslm.model.microscope"]], "aslm.model.microscope.Microscope": [[257, "aslm-model-microscope-microscope"]], "aslm.model.model": [[258, "module-aslm.model.model"]], "aslm.model.model.Model": [[259, "aslm-model-model-model"]], "aslm.model.waveforms": [[260, "module-aslm.model.waveforms"]], "aslm.model.waveforms.camera_exposure": [[261, "aslm-model-waveforms-camera-exposure"]], "aslm.model.waveforms.dc_value": [[262, "aslm-model-waveforms-dc-value"]], "aslm.model.waveforms.remote_focus_ramp": [[263, "aslm-model-waveforms-remote-focus-ramp"]], "aslm.model.waveforms.sawtooth": [[264, "aslm-model-waveforms-sawtooth"]], "aslm.model.waveforms.sine_wave": [[265, "aslm-model-waveforms-sine-wave"]], "aslm.model.waveforms.single_pulse": [[266, "aslm-model-waveforms-single-pulse"]], "aslm.model.waveforms.smooth_waveform": [[267, "aslm-model-waveforms-smooth-waveform"]], "aslm.model.waveforms.square": [[268, "aslm-model-waveforms-square"]], "aslm.tools": [[269, "module-aslm.tools"]], "aslm.tools.beams": [[270, "module-aslm.tools.beams"]], "aslm.tools.beams.fit_gaussian_beam_error": [[271, "aslm-tools-beams-fit-gaussian-beam-error"]], "aslm.tools.beams.fit_gaussian_beam_mse": [[272, "aslm-tools-beams-fit-gaussian-beam-mse"]], "aslm.tools.beams.gaussian_beam": [[273, "aslm-tools-beams-gaussian-beam"]], "aslm.tools.common_dict_tools": [[274, "module-aslm.tools.common_dict_tools"]], "aslm.tools.common_dict_tools.update_stage_dict": [[275, "aslm-tools-common-dict-tools-update-stage-dict"]], "aslm.tools.common_functions": [[276, "module-aslm.tools.common_functions"]], "aslm.tools.common_functions.VariableWithLock": [[277, "aslm-tools-common-functions-variablewithlock"]], "aslm.tools.common_functions.build_ref_name": [[278, "aslm-tools-common-functions-build-ref-name"]], "aslm.tools.common_functions.combine_funcs": [[279, "aslm-tools-common-functions-combine-funcs"]], "aslm.tools.common_functions.copy_proxy_object": [[280, "aslm-tools-common-functions-copy-proxy-object"]], "aslm.tools.common_functions.load_module_from_file": [[281, "aslm-tools-common-functions-load-module-from-file"]], "aslm.tools.decorators": [[282, "module-aslm.tools.decorators"]], "aslm.tools.decorators.FeatureList": [[283, "aslm-tools-decorators-featurelist"]], "aslm.tools.decorators.function_timer": [[284, "aslm-tools-decorators-function-timer"]], "aslm.tools.file_functions": [[285, "module-aslm.tools.file_functions"]], "aslm.tools.file_functions.create_save_path": [[286, "aslm-tools-file-functions-create-save-path"]], "aslm.tools.file_functions.delete_folder": [[287, "aslm-tools-file-functions-delete-folder"]], "aslm.tools.file_functions.load_yaml_file": [[288, "aslm-tools-file-functions-load-yaml-file"]], "aslm.tools.file_functions.save_yaml_file": [[289, "aslm-tools-file-functions-save-yaml-file"]], "aslm.tools.image": [[290, "module-aslm.tools.image"]], "aslm.tools.image.create_arrow_image": [[291, "aslm-tools-image-create-arrow-image"]], "aslm.tools.image.text_array": [[292, "aslm-tools-image-text-array"]], "aslm.tools.image_loaders": [[293, "module-aslm.tools.image_loaders"]], "aslm.tools.image_loaders.LazyTiff": [[294, "aslm-tools-image-loaders-lazytiff"]], "aslm.tools.main_functions": [[295, "module-aslm.tools.main_functions"]], "aslm.tools.main_functions.create_parser": [[296, "aslm-tools-main-functions-create-parser"]], "aslm.tools.main_functions.evaluate_parser_input_arguments": [[297, "aslm-tools-main-functions-evaluate-parser-input-arguments"]], "aslm.tools.main_functions.identify_gpu": [[298, "aslm-tools-main-functions-identify-gpu"]], "aslm.tools.multipos_table_tools": [[299, "module-aslm.tools.multipos_table_tools"]], "aslm.tools.multipos_table_tools.calc_num_tiles": [[300, "aslm-tools-multipos-table-tools-calc-num-tiles"]], "aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box": [[301, "aslm-tools-multipos-table-tools-compute-tiles-from-bounding-box"]], "aslm.tools.multipos_table_tools.sign": [[302, "aslm-tools-multipos-table-tools-sign"]], "aslm.tools.multipos_table_tools.update_table": [[303, "aslm-tools-multipos-table-tools-update-table"]], "aslm.tools.project_stats": [[304, "module-aslm.tools.project_stats"]], "aslm.tools.project_stats.countlines": [[305, "aslm-tools-project-stats-countlines"]], "aslm.tools.sdf": [[306, "module-aslm.tools.sdf"]], "aslm.tools.sdf.box": [[307, "aslm-tools-sdf-box"]], "aslm.tools.sdf.sphere": [[308, "aslm-tools-sdf-sphere"]], "aslm.tools.sdf.volume_from_sdf": [[309, "aslm-tools-sdf-volume-from-sdf"]], "aslm.tools.waveform_template_funcs": [[310, "module-aslm.tools.waveform_template_funcs"]], "aslm.tools.waveform_template_funcs.get_waveform_template_parameters": [[311, "aslm-tools-waveform-template-funcs-get-waveform-template-parameters"]], "aslm.tools.xml_tools": [[312, "module-aslm.tools.xml_tools"]], "aslm.tools.xml_tools.dict_to_xml": [[313, "aslm-tools-xml-tools-dict-to-xml"]], "aslm.tools.xml_tools.parse_xml": [[314, "aslm-tools-xml-tools-parse-xml"]], "aslm.view": [[315, "module-aslm.view"]], "aslm.view.custom_widgets": [[316, "module-aslm.view.custom_widgets"]], "aslm.view.main_window_content": [[317, "module-aslm.view.main_window_content"]], "aslm.view.popups": [[318, "module-aslm.view.popups"]], "API Reference": [[321, "api-reference"]], "Configuring ASLM": [[322, "configuring-aslm"]], "Configuration.yaml": [[322, "configuration-yaml"]], "Hardware Section": [[322, "hardware-section"], [330, "hardware-section"]], "Microscope Section": [[322, "microscope-section"], [330, "microscope-section"]], "Configuring stages": [[322, "configuring-stages"]], "GUI Section": [[322, "gui-section"], [330, "gui-section"]], "Channels": [[322, "channels"]], "Stack Acquisition": [[322, "stack-acquisition"]], "Timepoint": [[322, "timepoint"]], "Example YAML Configuration": [[322, "example-yaml-configuration"]], "Contributing Guidelines": [[323, "contributing-guidelines"]], "General principles": [[323, "general-principles"]], "Coding style": [[323, "coding-style"]], "Dictionary Parsing": [[323, "dictionary-parsing"]], "Unit tests": [[323, "unit-tests"]], "Developing with a Mac": [[323, "developing-with-a-mac"]], "Adding New Hardware": [[324, "adding-new-hardware"]], "Scientific Units": [[324, "scientific-units"]], "How to Add New Hardware": [[324, "how-to-add-new-hardware"]], "Contributing to ASLM": [[325, "contributing-to-aslm"]], "Adding New Model Features": [[326, "adding-new-model-features"]], "Feature Container": [[327, "feature-container"]], "Introduction": [[327, "introduction"]], "Currently Implemented Features": [[327, "currently-implemented-features"]], "The Feature Object": [[327, "the-feature-object"]], "Creating Custom Features": [[327, "creating-custom-features"]], "Combining Features": [[327, "combining-features"]], "Loading Custom Functions": [[327, "loading-custom-functions"]], "Editing Function Parameters": [[327, "editing-function-parameters"]], "Deleting Features": [[327, "deleting-features"]], "Microscope Implementations": [[328, "microscope-implementations"]], "Multiscale Microscope": [[328, "multiscale-microscope"]], "Expansion ASLM": [[328, "expansion-aslm"]], "OPM-V2": [[328, "opm-v2"]], "CT-ASLM-V1": [[328, "ct-aslm-v1"]], "CT-ASLM-V2": [[328, "ct-aslm-v2"]], "Spectral TIRF": [[328, "spectral-tirf"]], "Autonomous Software for Light Microscopy": [[329, "autonomous-software-for-light-microscopy"]], "Project Philosophy": [[329, "project-philosophy"]], "Contents": [[329, "contents"]], "Authors": [[329, "authors"]], "Index and search": [[329, "index-and-search"]], "Software Configuration": [[330, "software-configuration"]], "Configuration File": [[330, "configuration-file"]], "DAQ Section": [[330, "daq-section"]], "Camera Section": [[330, "camera-section"]], "Remote Focus Section": [[330, "remote-focus-section"]], "Galvo Section": [[330, "galvo-section"]], "Filter Wheel Section": [[330, "filter-wheel-section"]], "Stage Section": [[330, "stage-section"]], "Stage Axes Definition": [[330, "stage-axes-definition"]], "Joystick Axes Definition": [[330, "joystick-axes-definition"]], "Zoom Section": [[330, "zoom-section"]], "Shutter Section": [[330, "shutter-section"]], "Laser Section": [[330, "laser-section"]], "Waveform Constants File": [[330, "waveform-constants-file"]], "Remote Constants Section": [[330, "remote-constants-section"]], "Galvo Constants Section": [[330, "galvo-constants-section"]], "Other Constants Section": [[330, "other-constants-section"]], "Waveform Templates File": [[330, "waveform-templates-file"]], "Rest API Configuration File": [[330, "rest-api-configuration-file"]], "Software Installation": [[331, "software-installation"]], "Download Git": [[331, "download-git"]], "Setup your Python Environment": [[331, "setup-your-python-environment"]], "GPU Dependencies": [[331, "gpu-dependencies"]], "Troubleshooting": [[331, "troubleshooting"]], "Supported Hardware": [[332, "supported-hardware"]], "Data Acquisition Card": [[332, "data-acquisition-card"]], "NI": [[332, "ni"]], "PCIe-6738": [[332, "pcie-6738"]], "PXI-6259": [[332, "pxi-6259"]], "Cameras": [[332, "cameras"]], "Hamamatsu Flash 4.0, Fusion, and Lightning": [[332, "hamamatsu-flash-4-0-fusion-and-lightning"]], "Photometrics Iris 15": [[332, "photometrics-iris-15"]], "Voicecoil": [[332, "voicecoil"]], "Equipment Solutions": [[332, "equipment-solutions"]], "Thorlabs BLINK": [[332, "thorlabs-blink"]], "Stages": [[332, "stages"]], "ASI Tiger Controller": [[332, "asi-tiger-controller"]], "Sutter": [[332, "sutter"], [332, "id1"]], "Physik Instrumente": [[332, "physik-instrumente"]], "Thorlabs": [[332, "thorlabs"], [332, "id2"]], "Analog Controlled (Galvo/Piezo/etc.)": [[332, "analog-controlled-galvo-piezo-etc"]], "Deformable Mirrors": [[332, "deformable-mirrors"]], "Imagine Optics": [[332, "imagine-optics"]], "Filter Wheels": [[332, "filter-wheels"]], "ASI": [[332, "asi"]], "Galvanometers": [[332, "galvanometers"]], "Cambridge Technologies/Novanta": [[332, "cambridge-technologies-novanta"]], "ScannerMAX": [[332, "scannermax"]], "Lasers": [[332, "lasers"]], "Coherent": [[332, "coherent"]], "Omicron": [[332, "omicron"]], "Shutters": [[332, "shutters"]], "Mechanical Zoom": [[332, "mechanical-zoom"]], "Dynamixel": [[332, "dynamixel"]], "User Guide": [[333, "user-guide"]]}, "indexentries": {"aslm.config": [[0, "module-aslm.config"]], "module": [[0, "module-aslm.config"], [1, "module-aslm.config.config"], [9, "module-aslm.controller"], [10, "module-aslm.controller.configuration_controller"], [12, "module-aslm.controller.thread_pool"], [16, "module-aslm.model"], [17, "module-aslm.model.analysis"], [18, "module-aslm.model.analysis.boundary_detect"], [23, "module-aslm.model.analysis.camera"], [28, "module-aslm.model.analysis.detection"], [38, "module-aslm.model.analysis.image_contrast"], [44, "module-aslm.model.analysis.image_decorrelation"], [53, "module-aslm.model.analysis.image_transform"], [56, "module-aslm.model.analysis.spectral_unmixing"], [58, "module-aslm.model.concurrency"], [59, "module-aslm.model.concurrency.concurrency_tools"], [70, "module-aslm.model.concurrency.proxy_objects"], [75, "module-aslm.model.concurrency.write_parameters"], [77, "module-aslm.model.data_sources"], [78, "module-aslm.model.data_sources.bdv_data_source"], [80, "module-aslm.model.data_sources.data_source"], [83, "module-aslm.model.data_sources.tiff_data_source"], [85, "module-aslm.model.data_sources.zarr_data_source"], [87, "module-aslm.model.device_startup_functions"], [105, "module-aslm.model.devices"], [106, "module-aslm.model.devices.APIs"], [107, "module-aslm.model.devices.APIs.coherent"], [108, "module-aslm.model.devices.APIs.dynamixel"], [109, "module-aslm.model.devices.APIs.logitech"], [110, "module-aslm.model.devices.APIs.omicron"], [111, "module-aslm.model.devices.camera"], [112, "module-aslm.model.devices.camera.camera_base"], [114, "module-aslm.model.devices.camera.camera_hamamatsu"], [117, "module-aslm.model.devices.camera.camera_photometrics"], [119, "module-aslm.model.devices.camera.camera_synthetic"], [122, "module-aslm.model.devices.daq"], [123, "module-aslm.model.devices.daq.daq_base"], [125, "module-aslm.model.devices.daq.daq_synthetic"], [127, "module-aslm.model.devices.filter_wheel"], [128, "module-aslm.model.devices.filter_wheel.filter_wheel_asi"], [131, "module-aslm.model.devices.filter_wheel.filter_wheel_base"], [133, "module-aslm.model.devices.filter_wheel.filter_wheel_sutter"], [136, "module-aslm.model.devices.filter_wheel.filter_wheel_synthetic"], [138, "module-aslm.model.devices.galvo"], [139, "module-aslm.model.devices.galvo.galvo_base"], [141, "module-aslm.model.devices.galvo.galvo_synthetic"], [143, "module-aslm.model.devices.joystick"], [144, "module-aslm.model.devices.joystick.joystick_base"], [146, "module-aslm.model.devices.joystick.joystick_synthetic"], [148, "module-aslm.model.devices.lasers"], [149, "module-aslm.model.devices.lasers.laser_base"], [151, "module-aslm.model.devices.lasers.laser_synthetic"], [153, "module-aslm.model.devices.objectives"], [155, "module-aslm.model.devices.remote_focus"], [156, "module-aslm.model.devices.remote_focus.remote_focus_base"], [158, "module-aslm.model.devices.remote_focus.remote_focus_synthetic"], [160, "module-aslm.model.devices.shutter"], [161, "module-aslm.model.devices.shutter.laser_shutter_base"], [163, "module-aslm.model.devices.shutter.laser_shutter_synthetic"], [165, "module-aslm.model.devices.stages"], [166, "module-aslm.model.devices.stages.stage_asi"], [169, "module-aslm.model.devices.stages.stage_base"], [171, "module-aslm.model.devices.stages.stage_galvo"], [173, "module-aslm.model.devices.stages.stage_mcl"], [176, "module-aslm.model.devices.stages.stage_pi"], [179, "module-aslm.model.devices.stages.stage_sutter"], [182, "module-aslm.model.devices.stages.stage_synthetic"], [184, "module-aslm.model.devices.stages.stage_tl_kcube_inertial"], [187, "module-aslm.model.devices.zoom"], [188, "module-aslm.model.devices.zoom.zoom_base"], [190, "module-aslm.model.devices.zoom.zoom_synthetic"], [192, "module-aslm.model.dummy"], [197, "module-aslm.model.features"], [198, "module-aslm.model.features.auto_tile_scan"], [200, "module-aslm.model.features.autofocus"], [203, "module-aslm.model.features.common_features"], [214, "module-aslm.model.features.constant_velocity_acquisition"], [216, "module-aslm.model.features.dummy_detective"], [218, "module-aslm.model.features.feature_container"], [229, "module-aslm.model.features.feature_related_functions"], [234, "module-aslm.model.features.image_writer"], [236, "module-aslm.model.features.remove_empty_tiles"], [242, "module-aslm.model.features.restful_features"], [245, "module-aslm.model.features.volume_search"], [248, "module-aslm.model.metadata_sources"], [249, "module-aslm.model.metadata_sources.bdv_metadata"], [251, "module-aslm.model.metadata_sources.metadata"], [254, "module-aslm.model.metadata_sources.ome_tiff_metadata"], [256, "module-aslm.model.microscope"], [258, "module-aslm.model.model"], [260, "module-aslm.model.waveforms"], [269, "module-aslm.tools"], [270, "module-aslm.tools.beams"], [274, "module-aslm.tools.common_dict_tools"], [276, "module-aslm.tools.common_functions"], [282, "module-aslm.tools.decorators"], [285, "module-aslm.tools.file_functions"], [290, "module-aslm.tools.image"], [293, "module-aslm.tools.image_loaders"], [295, "module-aslm.tools.main_functions"], [299, "module-aslm.tools.multipos_table_tools"], [304, "module-aslm.tools.project_stats"], [306, "module-aslm.tools.sdf"], [310, "module-aslm.tools.waveform_template_funcs"], [312, "module-aslm.tools.xml_tools"], [315, "module-aslm.view"], [316, "module-aslm.view.custom_widgets"], [317, "module-aslm.view.main_window_content"], [318, "module-aslm.view.popups"]], "aslm.config.config": [[1, "module-aslm.config.config"]], "build_nested_dict() (in module aslm.config.config)": [[2, "aslm.config.config.build_nested_dict"]], "get_aslm_path() (in module aslm.config.config)": [[3, "aslm.config.config.get_aslm_path"]], "get_configuration_paths() (in module aslm.config.config)": [[4, "aslm.config.config.get_configuration_paths"]], "load_configs() (in module aslm.config.config)": [[5, "aslm.config.config.load_configs"]], "update_config_dict() (in module aslm.config.config)": [[6, "aslm.config.config.update_config_dict"]], "verify_experiment_config() (in module aslm.config.config)": [[7, "aslm.config.config.verify_experiment_config"]], "verify_waveform_constants() (in module aslm.config.config)": [[8, "aslm.config.config.verify_waveform_constants"]], "aslm.controller": [[9, "module-aslm.controller"]], "aslm.controller.configuration_controller": [[10, "module-aslm.controller.configuration_controller"]], "configurationcontroller (class in aslm.controller.configuration_controller)": [[11, "aslm.controller.configuration_controller.ConfigurationController"]], "__init__() (aslm.controller.configuration_controller.configurationcontroller method)": [[11, "aslm.controller.configuration_controller.ConfigurationController.__init__"]], "camera_config_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.camera_config_dict"]], "camera_flip_flags (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.camera_flip_flags"]], "camera_pixels (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.camera_pixels"]], "change_microscope() (aslm.controller.configuration_controller.configurationcontroller method)": [[11, "aslm.controller.configuration_controller.ConfigurationController.change_microscope"], [11, "id0"]], "channels_info (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.channels_info"]], "daq_sample_rate (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.daq_sample_rate"]], "filter_wheel_setting_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.filter_wheel_setting_dict"]], "galvo_parameter_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.galvo_parameter_dict"]], "get_microscope_configuration_dict() (aslm.controller.configuration_controller.configurationcontroller method)": [[11, "aslm.controller.configuration_controller.ConfigurationController.get_microscope_configuration_dict"], [11, "id1"]], "get_stage_position_limits() (aslm.controller.configuration_controller.configurationcontroller method)": [[11, "aslm.controller.configuration_controller.ConfigurationController.get_stage_position_limits"], [11, "id2"]], "lasers_info (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.lasers_info"]], "number_of_channels (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.number_of_channels"]], "remote_focus_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.remote_focus_dict"]], "stage_default_position (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.stage_default_position"]], "stage_flip_flags (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.stage_flip_flags"]], "stage_setting_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.stage_setting_dict"]], "stage_step (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.stage_step"]], "aslm.controller.thread_pool": [[12, "module-aslm.controller.thread_pool"]], "selflockthread (class in aslm.controller.thread_pool)": [[13, "aslm.controller.thread_pool.SelfLockThread"]], "__init__() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.__init__"]], "daemon (aslm.controller.thread_pool.selflockthread property)": [[13, "aslm.controller.thread_pool.SelfLockThread.daemon"]], "getname() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.getName"]], "ident (aslm.controller.thread_pool.selflockthread property)": [[13, "aslm.controller.thread_pool.SelfLockThread.ident"]], "isdaemon() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.isDaemon"]], "islocked() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.isLocked"]], "is_alive() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.is_alive"]], "join() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.join"]], "name (aslm.controller.thread_pool.selflockthread property)": [[13, "aslm.controller.thread_pool.SelfLockThread.name"]], "native_id (aslm.controller.thread_pool.selflockthread property)": [[13, "aslm.controller.thread_pool.SelfLockThread.native_id"]], "run() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.run"]], "setdaemon() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.setDaemon"]], "setname() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.setName"]], "start() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.start"]], "unlock() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.unlock"]], "wait() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.wait"]], "synchronizedthreadpool (class in aslm.controller.thread_pool)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool"]], "__init__() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.__init__"]], "clear() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.clear"]], "createthread() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.createThread"]], "getrunningthread() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.getRunningThread"]], "globaltrace() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.globaltrace"]], "killthreadinlist() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.killThreadInList"]], "localtrace() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.localtrace"]], "movetodelete() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.moveToDelete"]], "registerresource() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.registerResource"]], "removethread() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.removeThread"]], "threadtaskwrapping() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.threadTaskWrapping"]], "threadwaitlist (class in aslm.controller.thread_pool)": [[15, "aslm.controller.thread_pool.ThreadWaitlist"]], "__init__() (aslm.controller.thread_pool.threadwaitlist method)": [[15, "aslm.controller.thread_pool.ThreadWaitlist.__init__"]], "aslm.model": [[16, "module-aslm.model"]], "aslm.model.analysis": [[17, "module-aslm.model.analysis"]], "aslm.model.analysis.boundary_detect": [[18, "module-aslm.model.analysis.boundary_detect"]], "binary_detect() (in module aslm.model.analysis.boundary_detect)": [[19, "aslm.model.analysis.boundary_detect.binary_detect"]], "find_tissue_boundary_2d() (in module aslm.model.analysis.boundary_detect)": [[20, "aslm.model.analysis.boundary_detect.find_tissue_boundary_2d"]], "has_tissue() (in module aslm.model.analysis.boundary_detect)": [[21, "aslm.model.analysis.boundary_detect.has_tissue"]], "map_boundary() (in module aslm.model.analysis.boundary_detect)": [[22, "aslm.model.analysis.boundary_detect.map_boundary"]], "aslm.model.analysis.camera": [[23, "module-aslm.model.analysis.camera"]], "compute_flatfield_map() (in module aslm.model.analysis.camera)": [[24, "aslm.model.analysis.camera.compute_flatfield_map"]], "compute_noise_sigma() (in module aslm.model.analysis.camera)": [[25, "aslm.model.analysis.camera.compute_noise_sigma"]], "compute_scmos_offset_and_variance_map() (in module aslm.model.analysis.camera)": [[26, "aslm.model.analysis.camera.compute_scmos_offset_and_variance_map"]], "compute_signal_to_noise() (in module aslm.model.analysis.camera)": [[27, "aslm.model.analysis.camera.compute_signal_to_noise"]], "aslm.model.analysis.detection": [[28, "module-aslm.model.analysis.detection"]], "add_median_border() (in module aslm.model.analysis.detection)": [[29, "aslm.model.analysis.detection.add_median_border"]], "combine_images() (in module aslm.model.analysis.detection)": [[30, "aslm.model.analysis.detection.combine_images"]], "log_detection() (in module aslm.model.analysis.detection)": [[31, "aslm.model.analysis.detection.log_detection"]], "make_inside_image() (in module aslm.model.analysis.detection)": [[32, "aslm.model.analysis.detection.make_inside_image"]], "make_normalized_image() (in module aslm.model.analysis.detection)": [[33, "aslm.model.analysis.detection.make_normalized_image"]], "make_sphere_3d() (in module aslm.model.analysis.detection)": [[34, "aslm.model.analysis.detection.make_sphere_3D"]], "multiscale_surface_filter_3d() (in module aslm.model.analysis.detection)": [[35, "aslm.model.analysis.detection.multiscale_surface_filter_3D"]], "surface_filter_gauss_3d() (in module aslm.model.analysis.detection)": [[36, "aslm.model.analysis.detection.surface_filter_gauss_3D"]], "three_level_segmentation() (in module aslm.model.analysis.detection)": [[37, "aslm.model.analysis.detection.three_level_segmentation"]], "aslm.model.analysis.image_contrast": [[38, "module-aslm.model.analysis.image_contrast"]], "estimate_and_correct_flatfield() (in module aslm.model.analysis.image_contrast)": [[39, "aslm.model.analysis.image_contrast.estimate_and_correct_flatfield"]], "estimate_image_resolution() (in module aslm.model.analysis.image_contrast)": [[40, "aslm.model.analysis.image_contrast.estimate_image_resolution"]], "fast_normalized_dct_shannon_entropy() (in module aslm.model.analysis.image_contrast)": [[41, "aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy"]], "image_intensity() (in module aslm.model.analysis.image_contrast)": [[42, "aslm.model.analysis.image_contrast.image_intensity"]], "normalized_dct_shannon_entropy() (in module aslm.model.analysis.image_contrast)": [[43, "aslm.model.analysis.image_contrast.normalized_dct_shannon_entropy"]], "aslm.model.analysis.image_decorrelation": [[44, "module-aslm.model.analysis.image_decorrelation"]], "apodize_image() (in module aslm.model.analysis.image_decorrelation)": [[45, "aslm.model.analysis.image_decorrelation.apodize_image"]], "get_correlation_coefficient() (in module aslm.model.analysis.image_decorrelation)": [[46, "aslm.model.analysis.image_decorrelation.get_correlation_coefficient"]], "get_decorrelation_local_maxima() (in module aslm.model.analysis.image_decorrelation)": [[47, "aslm.model.analysis.image_decorrelation.get_decorrelation_local_maxima"]], "get_image_decorrelation() (in module aslm.model.analysis.image_decorrelation)": [[48, "aslm.model.analysis.image_decorrelation.get_image_decorrelation"]], "get_radial_average() (in module aslm.model.analysis.image_decorrelation)": [[49, "aslm.model.analysis.image_decorrelation.get_radial_average"]], "image_to_polar() (in module aslm.model.analysis.image_decorrelation)": [[50, "aslm.model.analysis.image_decorrelation.image_to_polar"]], "linear_map() (in module aslm.model.analysis.image_decorrelation)": [[51, "aslm.model.analysis.image_decorrelation.linear_map"]], "main_image_decorr() (in module aslm.model.analysis.image_decorrelation)": [[52, "aslm.model.analysis.image_decorrelation.main_image_decorr"]], "aslm.model.analysis.image_transform": [[53, "module-aslm.model.analysis.image_transform"]], "deskew_image() (in module aslm.model.analysis.image_transform)": [[54, "aslm.model.analysis.image_transform.deskew_image"]], "initiate_gpu() (in module aslm.model.analysis.image_transform)": [[55, "aslm.model.analysis.image_transform.initiate_gpu"]], "aslm.model.analysis.spectral_unmixing": [[56, "module-aslm.model.analysis.spectral_unmixing"]], "to_do() (in module aslm.model.analysis.spectral_unmixing)": [[57, "aslm.model.analysis.spectral_unmixing.to_do"]], "aslm.model.concurrency": [[58, "module-aslm.model.concurrency"]], "aslm.model.concurrency.concurrency_tools": [[59, "module-aslm.model.concurrency.concurrency_tools"]], "custodythread (class in aslm.model.concurrency.concurrency_tools)": [[60, "aslm.model.concurrency.concurrency_tools.CustodyThread"]], "__init__() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[60, "aslm.model.concurrency.concurrency_tools.CustodyThread.__init__"]], "daemon (aslm.model.concurrency.concurrency_tools.custodythread property)": [[60, "aslm.model.concurrency.concurrency_tools.CustodyThread.daemon"]], "getname() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[60, "aslm.model.concurrency.concurrency_tools.CustodyThread.getName"]], "get_result() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[60, "aslm.model.concurrency.concurrency_tools.CustodyThread.get_result"]], "ident (aslm.model.concurrency.concurrency_tools.custodythread property)": [[60, "aslm.model.concurrency.concurrency_tools.CustodyThread.ident"]], "isdaemon() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[60, "aslm.model.concurrency.concurrency_tools.CustodyThread.isDaemon"]], "is_alive() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[60, "aslm.model.concurrency.concurrency_tools.CustodyThread.is_alive"]], "join() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[60, "aslm.model.concurrency.concurrency_tools.CustodyThread.join"]], "name (aslm.model.concurrency.concurrency_tools.custodythread property)": [[60, "aslm.model.concurrency.concurrency_tools.CustodyThread.name"]], "native_id (aslm.model.concurrency.concurrency_tools.custodythread property)": [[60, "aslm.model.concurrency.concurrency_tools.CustodyThread.native_id"]], "run() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[60, "aslm.model.concurrency.concurrency_tools.CustodyThread.run"]], "setdaemon() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[60, "aslm.model.concurrency.concurrency_tools.CustodyThread.setDaemon"]], "setname() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[60, "aslm.model.concurrency.concurrency_tools.CustodyThread.setName"]], "start() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[60, "aslm.model.concurrency.concurrency_tools.CustodyThread.start"]], "fancythread (in module aslm.model.concurrency.concurrency_tools)": [[61, "aslm.model.concurrency.concurrency_tools.FancyThread"]], "mytestclass (class in aslm.model.concurrency.concurrency_tools)": [[62, "aslm.model.concurrency.concurrency_tools.MyTestClass"]], "__init__() (aslm.model.concurrency.concurrency_tools.mytestclass method)": [[62, "aslm.model.concurrency.concurrency_tools.MyTestClass.__init__"]], "run() (aslm.model.concurrency.concurrency_tools.mytestclass method)": [[62, "aslm.model.concurrency.concurrency_tools.MyTestClass.run"]], "time_it() (aslm.model.concurrency.concurrency_tools.mytestclass method)": [[62, "aslm.model.concurrency.concurrency_tools.MyTestClass.time_it"]], "objectinsubprocess (class in aslm.model.concurrency.concurrency_tools)": [[63, "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess"]], "__init__() (aslm.model.concurrency.concurrency_tools.objectinsubprocess method)": [[63, "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess.__init__"]], "politethread (in module aslm.model.concurrency.concurrency_tools)": [[64, "aslm.model.concurrency.concurrency_tools.PoliteThread"]], "resultthread (class in aslm.model.concurrency.concurrency_tools)": [[65, "aslm.model.concurrency.concurrency_tools.ResultThread"]], "__init__() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[65, "aslm.model.concurrency.concurrency_tools.ResultThread.__init__"]], "daemon (aslm.model.concurrency.concurrency_tools.resultthread property)": [[65, "aslm.model.concurrency.concurrency_tools.ResultThread.daemon"]], "getname() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[65, "aslm.model.concurrency.concurrency_tools.ResultThread.getName"]], "get_result() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[65, "aslm.model.concurrency.concurrency_tools.ResultThread.get_result"]], "ident (aslm.model.concurrency.concurrency_tools.resultthread property)": [[65, "aslm.model.concurrency.concurrency_tools.ResultThread.ident"]], "isdaemon() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[65, "aslm.model.concurrency.concurrency_tools.ResultThread.isDaemon"]], "is_alive() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[65, "aslm.model.concurrency.concurrency_tools.ResultThread.is_alive"]], "join() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[65, "aslm.model.concurrency.concurrency_tools.ResultThread.join"]], "name (aslm.model.concurrency.concurrency_tools.resultthread property)": [[65, "aslm.model.concurrency.concurrency_tools.ResultThread.name"]], "native_id (aslm.model.concurrency.concurrency_tools.resultthread property)": [[65, "aslm.model.concurrency.concurrency_tools.ResultThread.native_id"]], "run() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[65, "aslm.model.concurrency.concurrency_tools.ResultThread.run"]], "setdaemon() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[65, "aslm.model.concurrency.concurrency_tools.ResultThread.setDaemon"]], "setname() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[65, "aslm.model.concurrency.concurrency_tools.ResultThread.setName"]], "start() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[65, "aslm.model.concurrency.concurrency_tools.ResultThread.start"]], "aligned (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ALIGNED"]], "behaved (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.BEHAVED"]], "carray (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.CARRAY"]], "c_contiguous (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.C_CONTIGUOUS"]], "farray (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.FARRAY"]], "fnc (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.FNC"]], "forc (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.FORC"]], "f_contiguous (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.F_CONTIGUOUS"]], "owndata (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.OWNDATA"]], "sharedndarray (class in aslm.model.concurrency.concurrency_tools)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray"]], "t (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.T"]], "updateifcopy (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.UPDATEIFCOPY"]], "writeable (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.WRITEABLE"]], "writebackifcopy (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.WRITEBACKIFCOPY"]], "__init__() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.__init__"]], "all() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.all"]], "any() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.any"]], "argmax() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.argmax"]], "argmin() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.argmin"]], "argpartition() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.argpartition"]], "argsort() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.argsort"]], "astype() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.astype"]], "base (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.base"]], "byteswap() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.byteswap"]], "choose() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.choose"]], "clip() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.clip"]], "compress() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.compress"]], "conj() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.conj"]], "conjugate() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.conjugate"]], "copy() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.copy"]], "ctypes (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ctypes"]], "cumprod() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.cumprod"]], "cumsum() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.cumsum"]], "data (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.data"]], "diagonal() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.diagonal"]], "dtype (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.dtype"]], "dump() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.dump"]], "dumps() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.dumps"]], "fill() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.fill"]], "flags (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.flags"]], "flat (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.flat"]], "flatten() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.flatten"]], "getfield() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.getfield"]], "imag (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.imag"]], "item() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.item"]], "itemset() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.itemset"]], "itemsize (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.itemsize"]], "max() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.max"]], "mean() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.mean"]], "min() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.min"]], "nbytes (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.nbytes"]], "ndim (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ndim"]], "newbyteorder() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.newbyteorder"]], "nonzero() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.nonzero"]], "partition() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.partition"]], "prod() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.prod"]], "ptp() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ptp"]], "put() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.put"]], "ravel() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ravel"]], "real (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.real"]], "repeat() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.repeat"]], "reshape() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.reshape"]], "resize() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.resize"]], "round() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.round"]], "searchsorted() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.searchsorted"]], "setfield() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.setfield"]], "setflags() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.setflags"]], "shape (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.shape"]], "size (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.size"]], "sort() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.sort"]], "squeeze() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.squeeze"]], "std() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.std"]], "strides (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.strides"]], "sum() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.sum"]], "swapaxes() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.swapaxes"]], "take() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.take"]], "tobytes() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.tobytes"]], "tofile() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.tofile"]], "tolist() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.tolist"]], "tostring() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.tostring"]], "trace() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.trace"]], "transpose() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.transpose"]], "var() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.var"]], "view() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.view"]], "testobjectinsubprocess (class in aslm.model.concurrency.concurrency_tools)": [[67, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess"]], "testobjectinsubprocess.testclass (class in aslm.model.concurrency.concurrency_tools)": [[67, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.TestClass"]], "__init__() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[67, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.__init__"]], "run() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[67, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.run"]], "test_incorrect_thread_management() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[67, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.test_incorrect_thread_management"]], "test_lock_with_waitlist() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[67, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.test_lock_with_waitlist"]], "test_object_in_subprocess_overhead() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[67, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.test_object_in_subprocess_overhead"]], "test_sending_shared_arrays() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[67, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.test_sending_shared_arrays"]], "time_it() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[67, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.time_it"]], "testresultthreadandcustodythread (class in aslm.model.concurrency.concurrency_tools)": [[68, "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread"]], "__init__() (aslm.model.concurrency.concurrency_tools.testresultthreadandcustodythread method)": [[68, "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread.__init__"]], "run() (aslm.model.concurrency.concurrency_tools.testresultthreadandcustodythread method)": [[68, "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread.run"]], "time_it() (aslm.model.concurrency.concurrency_tools.testresultthreadandcustodythread method)": [[68, "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread.time_it"]], "testsharedndarray (class in aslm.model.concurrency.concurrency_tools)": [[69, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray"]], "__init__() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[69, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.__init__"]], "run() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[69, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.run"]], "test_ndarraylike_behavior() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[69, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.test_ndarraylike_behavior"]], "test_serialization() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[69, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.test_serialization"]], "test_serializing_and_deserializing() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[69, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.test_serializing_and_deserializing"]], "time_it() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[69, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.time_it"]], "aslm.model.concurrency.proxy_objects": [[70, "module-aslm.model.concurrency.proxy_objects"]], "proxymanager (class in aslm.model.concurrency.proxy_objects)": [[71, "aslm.model.concurrency.proxy_objects.ProxyManager"]], "__init__() (aslm.model.concurrency.proxy_objects.proxymanager method)": [[71, "aslm.model.concurrency.proxy_objects.ProxyManager.__init__"]], "proxy_object() (aslm.model.concurrency.proxy_objects.proxymanager method)": [[71, "aslm.model.concurrency.proxy_objects.ProxyManager.proxy_object"]], "shared_numpy_array() (aslm.model.concurrency.proxy_objects.proxymanager method)": [[71, "aslm.model.concurrency.proxy_objects.ProxyManager.shared_numpy_array"]], "proxyobject (class in aslm.model.concurrency.proxy_objects)": [[72, "aslm.model.concurrency.proxy_objects.ProxyObject"]], "__init__() (aslm.model.concurrency.proxy_objects.proxyobject method)": [[72, "aslm.model.concurrency.proxy_objects.ProxyObject.__init__"]], "launch_custody_thread() (in module aslm.model.concurrency.proxy_objects)": [[73, "aslm.model.concurrency.proxy_objects.launch_custody_thread"]], "launch_thread() (in module aslm.model.concurrency.proxy_objects)": [[74, "aslm.model.concurrency.proxy_objects.launch_thread"]], "aslm.model.concurrency.write_parameters": [[75, "module-aslm.model.concurrency.write_parameters"]], "__init__() (aslm.model.concurrency.write_parameters.write_params method)": [[76, "aslm.model.concurrency.write_parameters.write_Params.__init__"]], "write_params (class in aslm.model.concurrency.write_parameters)": [[76, "aslm.model.concurrency.write_parameters.write_Params"]], "aslm.model.data_sources": [[77, "module-aslm.model.data_sources"]], "aslm.model.data_sources.bdv_data_source": [[78, "module-aslm.model.data_sources.bdv_data_source"]], "bigdataviewerdatasource (class in aslm.model.data_sources.bdv_data_source)": [[79, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource"]], "__init__() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[79, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.__init__"]], "close() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[79, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.close"]], "data (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[79, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.data"], [79, "id1"]], "data (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[79, "id3"]], "file_name (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[79, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.file_name"], [79, "id0"]], "metadata (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[79, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.metadata"], [79, "id2"]], "mode (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[79, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.mode"]], "read() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[79, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.read"]], "resolutions (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[79, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.resolutions"]], "set_metadata_from_configuration_experiment() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[79, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.set_metadata_from_configuration_experiment"]], "shape (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[79, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.shape"]], "shapes (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[79, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.shapes"]], "size (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[79, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.size"]], "subdivisions (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[79, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.subdivisions"]], "voxel_size (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[79, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.voxel_size"]], "write() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[79, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.write"]], "aslm.model.data_sources.data_source": [[80, "module-aslm.model.data_sources.data_source"]], "datasource (class in aslm.model.data_sources.data_source)": [[81, "aslm.model.data_sources.data_source.DataSource"]], "__init__() (aslm.model.data_sources.data_source.datasource method)": [[81, "aslm.model.data_sources.data_source.DataSource.__init__"]], "close() (aslm.model.data_sources.data_source.datasource method)": [[81, "aslm.model.data_sources.data_source.DataSource.close"]], "data (aslm.model.data_sources.data_source.datasource attribute)": [[81, "aslm.model.data_sources.data_source.DataSource.data"], [81, "id1"]], "data (aslm.model.data_sources.data_source.datasource property)": [[81, "id3"]], "file_name (aslm.model.data_sources.data_source.datasource attribute)": [[81, "aslm.model.data_sources.data_source.DataSource.file_name"], [81, "id0"]], "metadata (aslm.model.data_sources.data_source.datasource attribute)": [[81, "aslm.model.data_sources.data_source.DataSource.metadata"], [81, "id2"]], "mode (aslm.model.data_sources.data_source.datasource property)": [[81, "aslm.model.data_sources.data_source.DataSource.mode"]], "read() (aslm.model.data_sources.data_source.datasource method)": [[81, "aslm.model.data_sources.data_source.DataSource.read"]], "set_metadata_from_configuration_experiment() (aslm.model.data_sources.data_source.datasource method)": [[81, "aslm.model.data_sources.data_source.DataSource.set_metadata_from_configuration_experiment"]], "shape (aslm.model.data_sources.data_source.datasource property)": [[81, "aslm.model.data_sources.data_source.DataSource.shape"]], "size (aslm.model.data_sources.data_source.datasource property)": [[81, "aslm.model.data_sources.data_source.DataSource.size"]], "voxel_size (aslm.model.data_sources.data_source.datasource property)": [[81, "aslm.model.data_sources.data_source.DataSource.voxel_size"]], "write() (aslm.model.data_sources.data_source.datasource method)": [[81, "aslm.model.data_sources.data_source.DataSource.write"]], "get_data_source() (in module aslm.model.data_sources)": [[82, "aslm.model.data_sources.get_data_source"]], "aslm.model.data_sources.tiff_data_source": [[83, "module-aslm.model.data_sources.tiff_data_source"]], "tiffdatasource (class in aslm.model.data_sources.tiff_data_source)": [[84, "aslm.model.data_sources.tiff_data_source.TiffDataSource"]], "__init__() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[84, "aslm.model.data_sources.tiff_data_source.TiffDataSource.__init__"]], "close() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[84, "aslm.model.data_sources.tiff_data_source.TiffDataSource.close"]], "data (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[84, "aslm.model.data_sources.tiff_data_source.TiffDataSource.data"], [84, "id1"]], "data (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[84, "id3"]], "file_name (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[84, "aslm.model.data_sources.tiff_data_source.TiffDataSource.file_name"], [84, "id0"]], "generate_image_name() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[84, "aslm.model.data_sources.tiff_data_source.TiffDataSource.generate_image_name"]], "metadata (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[84, "aslm.model.data_sources.tiff_data_source.TiffDataSource.metadata"], [84, "id2"]], "mode (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[84, "aslm.model.data_sources.tiff_data_source.TiffDataSource.mode"]], "read() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[84, "aslm.model.data_sources.tiff_data_source.TiffDataSource.read"]], "set_metadata_from_configuration_experiment() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[84, "aslm.model.data_sources.tiff_data_source.TiffDataSource.set_metadata_from_configuration_experiment"]], "shape (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[84, "aslm.model.data_sources.tiff_data_source.TiffDataSource.shape"]], "size (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[84, "aslm.model.data_sources.tiff_data_source.TiffDataSource.size"]], "voxel_size (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[84, "aslm.model.data_sources.tiff_data_source.TiffDataSource.voxel_size"]], "write() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[84, "aslm.model.data_sources.tiff_data_source.TiffDataSource.write"]], "aslm.model.data_sources.zarr_data_source": [[85, "module-aslm.model.data_sources.zarr_data_source"]], "zarrdatasource (class in aslm.model.data_sources.zarr_data_source)": [[86, "aslm.model.data_sources.zarr_data_source.ZarrDataSource"]], "__init__() (aslm.model.data_sources.zarr_data_source.zarrdatasource method)": [[86, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.__init__"]], "close() (aslm.model.data_sources.zarr_data_source.zarrdatasource method)": [[86, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.close"]], "copy_to_zarr() (aslm.model.data_sources.zarr_data_source.zarrdatasource method)": [[86, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.copy_to_zarr"]], "data (aslm.model.data_sources.zarr_data_source.zarrdatasource attribute)": [[86, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.data"], [86, "id1"]], "data (aslm.model.data_sources.zarr_data_source.zarrdatasource property)": [[86, "id3"]], "file_name (aslm.model.data_sources.zarr_data_source.zarrdatasource attribute)": [[86, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.file_name"], [86, "id0"]], "metadata (aslm.model.data_sources.zarr_data_source.zarrdatasource attribute)": [[86, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.metadata"], [86, "id2"]], "mode (aslm.model.data_sources.zarr_data_source.zarrdatasource property)": [[86, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.mode"]], "read() (aslm.model.data_sources.zarr_data_source.zarrdatasource method)": [[86, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.read"]], "set_metadata_from_configuration_experiment() (aslm.model.data_sources.zarr_data_source.zarrdatasource method)": [[86, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.set_metadata_from_configuration_experiment"]], "shape (aslm.model.data_sources.zarr_data_source.zarrdatasource property)": [[86, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.shape"]], "size (aslm.model.data_sources.zarr_data_source.zarrdatasource property)": [[86, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.size"]], "voxel_size (aslm.model.data_sources.zarr_data_source.zarrdatasource property)": [[86, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.voxel_size"]], "write() (aslm.model.data_sources.zarr_data_source.zarrdatasource method)": [[86, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.write"]], "aslm.model.device_startup_functions": [[87, "module-aslm.model.device_startup_functions"]], "dummydeviceconnection (class in aslm.model.device_startup_functions)": [[88, "aslm.model.device_startup_functions.DummyDeviceConnection"]], "__init__() (aslm.model.device_startup_functions.dummydeviceconnection method)": [[88, "aslm.model.device_startup_functions.DummyDeviceConnection.__init__"]], "auto_redial() (in module aslm.model.device_startup_functions)": [[89, "aslm.model.device_startup_functions.auto_redial"]], "device_not_found() (in module aslm.model.device_startup_functions)": [[90, "aslm.model.device_startup_functions.device_not_found"]], "load_camera_connection() (in module aslm.model.device_startup_functions)": [[91, "aslm.model.device_startup_functions.load_camera_connection"]], "load_devices() (in module aslm.model.device_startup_functions)": [[92, "aslm.model.device_startup_functions.load_devices"]], "load_filter_wheel_connection() (in module aslm.model.device_startup_functions)": [[93, "aslm.model.device_startup_functions.load_filter_wheel_connection"]], "load_stages() (in module aslm.model.device_startup_functions)": [[94, "aslm.model.device_startup_functions.load_stages"]], "load_zoom_connection() (in module aslm.model.device_startup_functions)": [[95, "aslm.model.device_startup_functions.load_zoom_connection"]], "start_camera() (in module aslm.model.device_startup_functions)": [[96, "aslm.model.device_startup_functions.start_camera"]], "start_daq() (in module aslm.model.device_startup_functions)": [[97, "aslm.model.device_startup_functions.start_daq"]], "start_filter_wheel() (in module aslm.model.device_startup_functions)": [[98, "aslm.model.device_startup_functions.start_filter_wheel"]], "start_galvo() (in module aslm.model.device_startup_functions)": [[99, "aslm.model.device_startup_functions.start_galvo"]], "start_lasers() (in module aslm.model.device_startup_functions)": [[100, "aslm.model.device_startup_functions.start_lasers"]], "start_remote_focus_device() (in module aslm.model.device_startup_functions)": [[101, "aslm.model.device_startup_functions.start_remote_focus_device"]], "start_shutter() (in module aslm.model.device_startup_functions)": [[102, "aslm.model.device_startup_functions.start_shutter"]], "start_stage() (in module aslm.model.device_startup_functions)": [[103, "aslm.model.device_startup_functions.start_stage"]], "start_zoom() (in module aslm.model.device_startup_functions)": [[104, "aslm.model.device_startup_functions.start_zoom"]], "aslm.model.devices": [[105, "module-aslm.model.devices"]], "aslm.model.devices.apis": [[106, "module-aslm.model.devices.APIs"]], "aslm.model.devices.apis.coherent": [[107, "module-aslm.model.devices.APIs.coherent"]], "aslm.model.devices.apis.dynamixel": [[108, "module-aslm.model.devices.APIs.dynamixel"]], "aslm.model.devices.apis.logitech": [[109, "module-aslm.model.devices.APIs.logitech"]], "aslm.model.devices.apis.omicron": [[110, "module-aslm.model.devices.APIs.omicron"]], "aslm.model.devices.camera": [[111, "module-aslm.model.devices.camera"]], "aslm.model.devices.camera.camera_base": [[112, "module-aslm.model.devices.camera.camera_base"]], "camerabase (class in aslm.model.devices.camera.camera_base)": [[113, "aslm.model.devices.camera.camera_base.CameraBase"]], "__init__() (aslm.model.devices.camera.camera_base.camerabase method)": [[113, "aslm.model.devices.camera.camera_base.CameraBase.__init__"]], "calculate_light_sheet_exposure_time() (aslm.model.devices.camera.camera_base.camerabase method)": [[113, "aslm.model.devices.camera.camera_base.CameraBase.calculate_light_sheet_exposure_time"]], "get_line_interval() (aslm.model.devices.camera.camera_base.camerabase method)": [[113, "aslm.model.devices.camera.camera_base.CameraBase.get_line_interval"]], "set_readout_direction() (aslm.model.devices.camera.camera_base.camerabase method)": [[113, "aslm.model.devices.camera.camera_base.CameraBase.set_readout_direction"]], "aslm.model.devices.camera.camera_hamamatsu": [[114, "module-aslm.model.devices.camera.camera_hamamatsu"]], "hamamatsuorca (class in aslm.model.devices.camera.camera_hamamatsu)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca"]], "__init__() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.__init__"]], "calculate_light_sheet_exposure_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.calculate_light_sheet_exposure_time"]], "calculate_readout_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.calculate_readout_time"]], "close_camera() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.close_camera"]], "close_image_series() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.close_image_series"]], "get_line_interval() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.get_line_interval"]], "get_minimum_waiting_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.get_minimum_waiting_time"]], "get_new_frame() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.get_new_frame"]], "initialize_image_series() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.initialize_image_series"]], "report_settings() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.report_settings"]], "serial_number (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.serial_number"]], "set_roi() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_ROI"]], "set_binning() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_binning"]], "set_exposure_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_exposure_time"]], "set_line_interval() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_line_interval"]], "set_readout_direction() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_readout_direction"]], "set_sensor_mode() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_sensor_mode"]], "hamamatsuorcalightning (class in aslm.model.devices.camera.camera_hamamatsu)": [[116, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning"]], "__init__() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[116, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.__init__"]], "calculate_light_sheet_exposure_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[116, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.calculate_light_sheet_exposure_time"]], "calculate_readout_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[116, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.calculate_readout_time"]], "close_camera() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[116, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.close_camera"]], "close_image_series() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[116, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.close_image_series"]], "get_line_interval() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[116, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.get_line_interval"]], "get_minimum_waiting_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[116, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.get_minimum_waiting_time"]], "get_new_frame() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[116, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.get_new_frame"]], "initialize_image_series() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[116, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.initialize_image_series"]], "report_settings() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[116, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.report_settings"]], "serial_number (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning property)": [[116, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.serial_number"]], "set_roi() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[116, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.set_ROI"]], "set_binning() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[116, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.set_binning"]], "set_exposure_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[116, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.set_exposure_time"]], "set_line_interval() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[116, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.set_line_interval"]], "set_readout_direction() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[116, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.set_readout_direction"]], "set_sensor_mode() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[116, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.set_sensor_mode"]], "aslm.model.devices.camera.camera_photometrics": [[117, "module-aslm.model.devices.camera.camera_photometrics"]], "photometricskinetix (class in aslm.model.devices.camera.camera_photometrics)": [[118, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix"]], "__init__() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[118, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.__init__"]], "calculate_light_sheet_exposure_time() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[118, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.calculate_light_sheet_exposure_time"]], "calculate_readout_time() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[118, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.calculate_readout_time"]], "close_camera() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[118, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.close_camera"]], "close_image_series() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[118, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.close_image_series"]], "get_line_interval() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[118, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.get_line_interval"]], "get_minimum_waiting_time() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[118, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.get_minimum_waiting_time"]], "get_new_frame() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[118, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.get_new_frame"]], "initialize_image_series() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[118, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.initialize_image_series"]], "report_settings() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[118, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.report_settings"]], "serial_number (aslm.model.devices.camera.camera_photometrics.photometricskinetix property)": [[118, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.serial_number"]], "set_roi() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[118, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.set_ROI"]], "set_binning() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[118, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.set_binning"]], "set_exposure_time() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[118, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.set_exposure_time"]], "set_line_interval() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[118, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.set_line_interval"]], "set_readout_direction() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[118, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.set_readout_direction"]], "set_sensor_mode() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[118, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.set_sensor_mode"]], "aslm.model.devices.camera.camera_synthetic": [[119, "module-aslm.model.devices.camera.camera_synthetic"]], "syntheticcamera (class in aslm.model.devices.camera.camera_synthetic)": [[120, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera"]], "__init__() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[120, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.__init__"]], "calculate_light_sheet_exposure_time() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[120, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.calculate_light_sheet_exposure_time"]], "calculate_readout_time() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[120, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.calculate_readout_time"]], "close_camera() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[120, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.close_camera"]], "close_image_series() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[120, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.close_image_series"]], "generate_new_frame() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[120, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.generate_new_frame"]], "get_line_interval() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[120, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.get_line_interval"]], "get_minimum_waiting_time() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[120, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.get_minimum_waiting_time"]], "get_new_frame() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[120, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.get_new_frame"]], "initialize_image_series() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[120, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.initialize_image_series"]], "load_images() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[120, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.load_images"]], "report_settings() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[120, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.report_settings"]], "set_roi() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[120, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_ROI"]], "set_binning() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[120, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_binning"]], "set_exposure_time() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[120, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_exposure_time"]], "set_line_interval() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[120, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_line_interval"]], "set_readout_direction() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[120, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_readout_direction"]], "set_sensor_mode() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[120, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_sensor_mode"]], "syntheticcameracontroller (class in aslm.model.devices.camera.camera_synthetic)": [[121, "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController"]], "__init__() (aslm.model.devices.camera.camera_synthetic.syntheticcameracontroller method)": [[121, "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController.__init__"]], "get_property_value() (aslm.model.devices.camera.camera_synthetic.syntheticcameracontroller method)": [[121, "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController.get_property_value"]], "aslm.model.devices.daq": [[122, "module-aslm.model.devices.daq"]], "aslm.model.devices.daq.daq_base": [[123, "module-aslm.model.devices.daq.daq_base"]], "daqbase (class in aslm.model.devices.daq.daq_base)": [[124, "aslm.model.devices.daq.daq_base.DAQBase"]], "__init__() (aslm.model.devices.daq.daq_base.daqbase method)": [[124, "aslm.model.devices.daq.daq_base.DAQBase.__init__"]], "calculate_all_waveforms() (aslm.model.devices.daq.daq_base.daqbase method)": [[124, "aslm.model.devices.daq.daq_base.DAQBase.calculate_all_waveforms"]], "configuration (aslm.model.devices.daq.daq_base.daqbase attribute)": [[124, "aslm.model.devices.daq.daq_base.DAQBase.configuration"]], "aslm.model.devices.daq.daq_synthetic": [[125, "module-aslm.model.devices.daq.daq_synthetic"]], "syntheticdaq (class in aslm.model.devices.daq.daq_synthetic)": [[126, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ"]], "__init__() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[126, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.__init__"]], "add_camera() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[126, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.add_camera"]], "calculate_all_waveforms() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[126, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.calculate_all_waveforms"]], "close_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[126, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.close_tasks"]], "configuration (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[126, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.configuration"]], "create_camera_task() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[126, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.create_camera_task"]], "create_galvo_remote_focus_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[126, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.create_galvo_remote_focus_tasks"]], "create_master_trigger_task() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[126, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.create_master_trigger_task"]], "prepare_acquisition() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[126, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.prepare_acquisition"]], "run_acquisition() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[126, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.run_acquisition"]], "start_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[126, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.start_tasks"]], "stop_acquisition() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[126, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.stop_acquisition"]], "stop_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[126, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.stop_tasks"]], "write_waveforms_to_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[126, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.write_waveforms_to_tasks"]], "aslm.model.devices.filter_wheel": [[127, "module-aslm.model.devices.filter_wheel"]], "aslm.model.devices.filter_wheel.filter_wheel_asi": [[128, "module-aslm.model.devices.filter_wheel.filter_wheel_asi"]], "asifilterwheel (class in aslm.model.devices.filter_wheel.filter_wheel_asi)": [[129, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel"]], "__init__() (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel method)": [[129, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.__init__"]], "check_if_filter_in_filter_dictionary() (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel method)": [[129, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.check_if_filter_in_filter_dictionary"]], "close() (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel method)": [[129, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.close"]], "filter_change_delay() (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel method)": [[129, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.filter_change_delay"]], "set_filter() (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel method)": [[129, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.set_filter"]], "baudrate (in module aslm.model.devices.filter_wheel.filter_wheel_asi)": [[130, "aslm.model.devices.filter_wheel.filter_wheel_asi.baudrate"]], "build_filter_wheel_connection() (in module aslm.model.devices.filter_wheel.filter_wheel_asi)": [[130, "aslm.model.devices.filter_wheel.filter_wheel_asi.build_filter_wheel_connection"]], "aslm.model.devices.filter_wheel.filter_wheel_base": [[131, "module-aslm.model.devices.filter_wheel.filter_wheel_base"]], "filterwheelbase (class in aslm.model.devices.filter_wheel.filter_wheel_base)": [[132, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase"]], "__init__() (aslm.model.devices.filter_wheel.filter_wheel_base.filterwheelbase method)": [[132, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.__init__"]], "check_if_filter_in_filter_dictionary() (aslm.model.devices.filter_wheel.filter_wheel_base.filterwheelbase method)": [[132, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.check_if_filter_in_filter_dictionary"], [132, "id0"]], "filter_dictionary (aslm.model.devices.filter_wheel.filter_wheel_base.filterwheelbase attribute)": [[132, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.filter_dictionary"]], "wheel_position (aslm.model.devices.filter_wheel.filter_wheel_base.filterwheelbase attribute)": [[132, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.wheel_position"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter": [[133, "module-aslm.model.devices.filter_wheel.filter_wheel_sutter"]], "sutterfilterwheel (class in aslm.model.devices.filter_wheel.filter_wheel_sutter)": [[134, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel"]], "__init__() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[134, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.__init__"]], "check_if_filter_in_filter_dictionary() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[134, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.check_if_filter_in_filter_dictionary"], [134, "id0"]], "close() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[134, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.close"], [134, "id1"]], "filter_change_delay() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[134, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.filter_change_delay"], [134, "id2"]], "filter_dictionary (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[134, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.filter_dictionary"]], "number_of_filter_wheels (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[134, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.number_of_filter_wheels"]], "read() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[134, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.read"], [134, "id3"]], "set_filter() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[134, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.set_filter"]], "wheel_position (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[134, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.wheel_position"]], "baudrate (in module aslm.model.devices.filter_wheel.filter_wheel_sutter)": [[135, "aslm.model.devices.filter_wheel.filter_wheel_sutter.baudrate"]], "build_filter_wheel_connection() (in module aslm.model.devices.filter_wheel.filter_wheel_sutter)": [[135, "aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic": [[136, "module-aslm.model.devices.filter_wheel.filter_wheel_synthetic"]], "syntheticfilterwheel (class in aslm.model.devices.filter_wheel.filter_wheel_synthetic)": [[137, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel"]], "__init__() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[137, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.__init__"]], "baudrate (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[137, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.baudrate"]], "check_if_filter_in_filter_dictionary() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[137, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.check_if_filter_in_filter_dictionary"]], "close() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[137, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.close"]], "comport (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[137, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.comport"]], "filter_change_delay() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[137, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.filter_change_delay"]], "filter_dictionary (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[137, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.filter_dictionary"]], "number_of_filter_wheels (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[137, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.number_of_filter_wheels"]], "read() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[137, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.read"]], "set_filter() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[137, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.set_filter"]], "wheel_position (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[137, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.wheel_position"]], "aslm.model.devices.galvo": [[138, "module-aslm.model.devices.galvo"]], "aslm.model.devices.galvo.galvo_base": [[139, "module-aslm.model.devices.galvo.galvo_base"]], "galvobase (class in aslm.model.devices.galvo.galvo_base)": [[140, "aslm.model.devices.galvo.galvo_base.GalvoBase"]], "__init__() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[140, "aslm.model.devices.galvo.galvo_base.GalvoBase.__init__"]], "adjust() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[140, "aslm.model.devices.galvo.galvo_base.GalvoBase.adjust"]], "camera_delay_percent (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[140, "aslm.model.devices.galvo.galvo_base.GalvoBase.camera_delay_percent"]], "close_task() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[140, "aslm.model.devices.galvo.galvo_base.GalvoBase.close_task"], [140, "id0"]], "configuration (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[140, "aslm.model.devices.galvo.galvo_base.GalvoBase.configuration"]], "device_config (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[140, "aslm.model.devices.galvo.galvo_base.GalvoBase.device_config"]], "galvo_max_voltage (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[140, "aslm.model.devices.galvo.galvo_base.GalvoBase.galvo_max_voltage"]], "galvo_min_voltage (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[140, "aslm.model.devices.galvo.galvo_base.GalvoBase.galvo_min_voltage"]], "galvo_name (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[140, "aslm.model.devices.galvo.galvo_base.GalvoBase.galvo_name"]], "microscope_name (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[140, "aslm.model.devices.galvo.galvo_base.GalvoBase.microscope_name"]], "prepare_task() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[140, "aslm.model.devices.galvo.galvo_base.GalvoBase.prepare_task"], [140, "id1"]], "remote_focus_ramp_falling (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[140, "aslm.model.devices.galvo.galvo_base.GalvoBase.remote_focus_ramp_falling"]], "sample_rate (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[140, "aslm.model.devices.galvo.galvo_base.GalvoBase.sample_rate"]], "samples (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[140, "aslm.model.devices.galvo.galvo_base.GalvoBase.samples"]], "start_task() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[140, "aslm.model.devices.galvo.galvo_base.GalvoBase.start_task"], [140, "id2"]], "stop_task() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[140, "aslm.model.devices.galvo.galvo_base.GalvoBase.stop_task"], [140, "id3"]], "sweep_time (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[140, "aslm.model.devices.galvo.galvo_base.GalvoBase.sweep_time"]], "waveform_dict (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[140, "aslm.model.devices.galvo.galvo_base.GalvoBase.waveform_dict"]], "aslm.model.devices.galvo.galvo_synthetic": [[141, "module-aslm.model.devices.galvo.galvo_synthetic"]], "none (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[142, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.None"]], "syntheticgalvo (class in aslm.model.devices.galvo.galvo_synthetic)": [[142, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo"]], "__init__() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[142, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.__init__"]], "adjust() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[142, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.adjust"]], "close_task() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[142, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.close_task"], [142, "id0"]], "prepare_task() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[142, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.prepare_task"], [142, "id1"]], "start_task() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[142, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.start_task"], [142, "id2"]], "stop_task() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[142, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.stop_task"], [142, "id3"]], "aslm.model.devices.joystick": [[143, "module-aslm.model.devices.joystick"]], "aslm.model.devices.joystick.joystick_base": [[144, "module-aslm.model.devices.joystick.joystick_base"]], "joystickbase (class in aslm.model.devices.joystick.joystick_base)": [[145, "aslm.model.devices.joystick.joystick_base.JoystickBase"]], "__init__() (aslm.model.devices.joystick.joystick_base.joystickbase method)": [[145, "aslm.model.devices.joystick.joystick_base.JoystickBase.__init__"]], "aslm.model.devices.joystick.joystick_synthetic": [[146, "module-aslm.model.devices.joystick.joystick_synthetic"]], "syntheticjoystick (class in aslm.model.devices.joystick.joystick_synthetic)": [[147, "aslm.model.devices.joystick.joystick_synthetic.SyntheticJoystick"]], "__init__() (aslm.model.devices.joystick.joystick_synthetic.syntheticjoystick method)": [[147, "aslm.model.devices.joystick.joystick_synthetic.SyntheticJoystick.__init__"]], "aslm.model.devices.lasers": [[148, "module-aslm.model.devices.lasers"]], "aslm.model.devices.lasers.laser_base": [[149, "module-aslm.model.devices.lasers.laser_base"]], "laserbase (class in aslm.model.devices.lasers.laser_base)": [[150, "aslm.model.devices.lasers.laser_base.LaserBase"]], "__init__() (aslm.model.devices.lasers.laser_base.laserbase method)": [[150, "aslm.model.devices.lasers.laser_base.LaserBase.__init__"]], "close() (aslm.model.devices.lasers.laser_base.laserbase method)": [[150, "aslm.model.devices.lasers.laser_base.LaserBase.close"]], "initialize_laser() (aslm.model.devices.lasers.laser_base.laserbase method)": [[150, "aslm.model.devices.lasers.laser_base.LaserBase.initialize_laser"]], "aslm.model.devices.lasers.laser_synthetic": [[151, "module-aslm.model.devices.lasers.laser_synthetic"]], "syntheticlaser (class in aslm.model.devices.lasers.laser_synthetic)": [[152, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser"]], "__init__() (aslm.model.devices.lasers.laser_synthetic.syntheticlaser method)": [[152, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.__init__"]], "close() (aslm.model.devices.lasers.laser_synthetic.syntheticlaser method)": [[152, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.close"]], "initialize_laser() (aslm.model.devices.lasers.laser_synthetic.syntheticlaser method)": [[152, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.initialize_laser"]], "aslm.model.devices.objectives": [[153, "module-aslm.model.devices.objectives"]], "objective (class in aslm.model.devices.objectives)": [[154, "aslm.model.devices.objectives.Objective"]], "__init__() (aslm.model.devices.objectives.objective method)": [[154, "aslm.model.devices.objectives.Objective.__init__"]], "calculate_entrance_pupil() (aslm.model.devices.objectives.objective method)": [[154, "aslm.model.devices.objectives.Objective.calculate_entrance_pupil"]], "aslm.model.devices.remote_focus": [[155, "module-aslm.model.devices.remote_focus"]], "aslm.model.devices.remote_focus.remote_focus_base": [[156, "module-aslm.model.devices.remote_focus.remote_focus_base"]], "remotefocusbase (class in aslm.model.devices.remote_focus.remote_focus_base)": [[157, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase"]], "__init__() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[157, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.__init__"]], "adjust() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[157, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.adjust"]], "camera_delay_percent (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[157, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.camera_delay_percent"]], "close_task() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[157, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.close_task"]], "configuration (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[157, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.configuration"]], "device_config (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[157, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.device_config"]], "microscope_name (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[157, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.microscope_name"]], "prepare_task() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[157, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.prepare_task"], [157, "id0"]], "remote_focus_delay (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[157, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.remote_focus_delay"]], "remote_focus_max_voltage (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[157, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.remote_focus_max_voltage"]], "remote_focus_min_voltage (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[157, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.remote_focus_min_voltage"]], "remote_focus_ramp_falling (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[157, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.remote_focus_ramp_falling"]], "sample_rate (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[157, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.sample_rate"]], "samples (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[157, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.samples"]], "start_task() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[157, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.start_task"], [157, "id1"]], "stop_task() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[157, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.stop_task"], [157, "id2"]], "sweep_time (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[157, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.sweep_time"]], "waveform_dict (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[157, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.waveform_dict"]], "aslm.model.devices.remote_focus.remote_focus_synthetic": [[158, "module-aslm.model.devices.remote_focus.remote_focus_synthetic"]], "syntheticremotefocus (class in aslm.model.devices.remote_focus.remote_focus_synthetic)": [[159, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus"]], "__init__() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[159, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.__init__"]], "adjust() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[159, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.adjust"]], "close_task() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[159, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.close_task"], [159, "id0"]], "configuration (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[159, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.configuration"]], "device_connection (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[159, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.device_connection"]], "microscope_name (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[159, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.microscope_name"]], "prepare_task() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[159, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.prepare_task"], [159, "id1"]], "start_task() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[159, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.start_task"], [159, "id2"]], "stop_task() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[159, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.stop_task"], [159, "id3"]], "aslm.model.devices.shutter": [[160, "module-aslm.model.devices.shutter"]], "aslm.model.devices.shutter.laser_shutter_base": [[161, "module-aslm.model.devices.shutter.laser_shutter_base"]], "shutterbase (class in aslm.model.devices.shutter.laser_shutter_base)": [[162, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase"]], "__init__() (aslm.model.devices.shutter.laser_shutter_base.shutterbase method)": [[162, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.__init__"]], "configuration (aslm.model.devices.shutter.laser_shutter_base.shutterbase attribute)": [[162, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.configuration"]], "device_connection (aslm.model.devices.shutter.laser_shutter_base.shutterbase attribute)": [[162, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.device_connection"]], "microscope_name (aslm.model.devices.shutter.laser_shutter_base.shutterbase attribute)": [[162, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.microscope_name"]], "aslm.model.devices.shutter.laser_shutter_synthetic": [[163, "module-aslm.model.devices.shutter.laser_shutter_synthetic"]], "syntheticshutter (class in aslm.model.devices.shutter.laser_shutter_synthetic)": [[164, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter"]], "__init__() (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter method)": [[164, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.__init__"]], "close_shutters() (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter method)": [[164, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.close_shutters"]], "configuration (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter attribute)": [[164, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.configuration"]], "device_connection (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter attribute)": [[164, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.device_connection"]], "microscope_name (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter attribute)": [[164, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.microscope_name"]], "open_left() (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter method)": [[164, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.open_left"]], "open_right() (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter method)": [[164, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.open_right"]], "state() (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter method)": [[164, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.state"]], "aslm.model.devices.stages": [[165, "module-aslm.model.devices.stages"]], "aslm.model.devices.stages.stage_asi": [[166, "module-aslm.model.devices.stages.stage_asi"]], "asistage (class in aslm.model.devices.stages.stage_asi)": [[167, "aslm.model.devices.stages.stage_asi.ASIStage"]], "__init__() (aslm.model.devices.stages.stage_asi.asistage method)": [[167, "aslm.model.devices.stages.stage_asi.ASIStage.__init__"]], "axes_mapping (aslm.model.devices.stages.stage_asi.asistage attribute)": [[167, "aslm.model.devices.stages.stage_asi.ASIStage.axes_mapping"]], "default_speed (aslm.model.devices.stages.stage_asi.asistage attribute)": [[167, "aslm.model.devices.stages.stage_asi.ASIStage.default_speed"]], "f_max (aslm.model.devices.stages.stage_asi.asistage attribute)": [[167, "aslm.model.devices.stages.stage_asi.ASIStage.f_max"]], "f_min (aslm.model.devices.stages.stage_asi.asistage attribute)": [[167, "aslm.model.devices.stages.stage_asi.ASIStage.f_min"]], "f_pos (aslm.model.devices.stages.stage_asi.asistage attribute)": [[167, "aslm.model.devices.stages.stage_asi.ASIStage.f_pos"]], "get_abs_position() (aslm.model.devices.stages.stage_asi.asistage method)": [[167, "aslm.model.devices.stages.stage_asi.ASIStage.get_abs_position"], [167, "id0"]], "get_axis_position() (aslm.model.devices.stages.stage_asi.asistage method)": [[167, "aslm.model.devices.stages.stage_asi.ASIStage.get_axis_position"], [167, "id1"]], "get_position_dict() (aslm.model.devices.stages.stage_asi.asistage method)": [[167, "aslm.model.devices.stages.stage_asi.ASIStage.get_position_dict"], [167, "id2"]], "get_speed() (aslm.model.devices.stages.stage_asi.asistage method)": [[167, "aslm.model.devices.stages.stage_asi.ASIStage.get_speed"], [167, "id3"]], "move_absolute() (aslm.model.devices.stages.stage_asi.asistage method)": [[167, "aslm.model.devices.stages.stage_asi.ASIStage.move_absolute"], [167, "id4"]], "move_axis_absolute() (aslm.model.devices.stages.stage_asi.asistage method)": [[167, "aslm.model.devices.stages.stage_asi.ASIStage.move_axis_absolute"], [167, "id5"]], "position_dict (aslm.model.devices.stages.stage_asi.asistage attribute)": [[167, "aslm.model.devices.stages.stage_asi.ASIStage.position_dict"]], "report_position() (aslm.model.devices.stages.stage_asi.asistage method)": [[167, "aslm.model.devices.stages.stage_asi.ASIStage.report_position"], [167, "id6"]], "scanr() (aslm.model.devices.stages.stage_asi.asistage method)": [[167, "aslm.model.devices.stages.stage_asi.ASIStage.scanr"], [167, "id7"]], "set_speed() (aslm.model.devices.stages.stage_asi.asistage method)": [[167, "aslm.model.devices.stages.stage_asi.ASIStage.set_speed"], [167, "id8"]], "start_scan() (aslm.model.devices.stages.stage_asi.asistage method)": [[167, "aslm.model.devices.stages.stage_asi.ASIStage.start_scan"], [167, "id9"]], "stop() (aslm.model.devices.stages.stage_asi.asistage method)": [[167, "aslm.model.devices.stages.stage_asi.ASIStage.stop"], [167, "id10"]], "stop_scan() (aslm.model.devices.stages.stage_asi.asistage method)": [[167, "aslm.model.devices.stages.stage_asi.ASIStage.stop_scan"], [167, "id11"]], "theta_max (aslm.model.devices.stages.stage_asi.asistage attribute)": [[167, "aslm.model.devices.stages.stage_asi.ASIStage.theta_max"]], "theta_min (aslm.model.devices.stages.stage_asi.asistage attribute)": [[167, "aslm.model.devices.stages.stage_asi.ASIStage.theta_min"]], "theta_pos (aslm.model.devices.stages.stage_asi.asistage attribute)": [[167, "aslm.model.devices.stages.stage_asi.ASIStage.theta_pos"]], "verify_abs_position() (aslm.model.devices.stages.stage_asi.asistage method)": [[167, "aslm.model.devices.stages.stage_asi.ASIStage.verify_abs_position"], [167, "id12"]], "verify_move() (aslm.model.devices.stages.stage_asi.asistage method)": [[167, "aslm.model.devices.stages.stage_asi.ASIStage.verify_move"]], "x_max (aslm.model.devices.stages.stage_asi.asistage attribute)": [[167, "aslm.model.devices.stages.stage_asi.ASIStage.x_max"]], "x_min (aslm.model.devices.stages.stage_asi.asistage attribute)": [[167, "aslm.model.devices.stages.stage_asi.ASIStage.x_min"]], "x_pos (aslm.model.devices.stages.stage_asi.asistage attribute)": [[167, "aslm.model.devices.stages.stage_asi.ASIStage.x_pos"]], "y_max (aslm.model.devices.stages.stage_asi.asistage attribute)": [[167, "aslm.model.devices.stages.stage_asi.ASIStage.y_max"]], "y_min (aslm.model.devices.stages.stage_asi.asistage attribute)": [[167, "aslm.model.devices.stages.stage_asi.ASIStage.y_min"]], "y_pos (aslm.model.devices.stages.stage_asi.asistage attribute)": [[167, "aslm.model.devices.stages.stage_asi.ASIStage.y_pos"]], "z_max (aslm.model.devices.stages.stage_asi.asistage attribute)": [[167, "aslm.model.devices.stages.stage_asi.ASIStage.z_max"]], "z_min (aslm.model.devices.stages.stage_asi.asistage attribute)": [[167, "aslm.model.devices.stages.stage_asi.ASIStage.z_min"]], "z_pos (aslm.model.devices.stages.stage_asi.asistage attribute)": [[167, "aslm.model.devices.stages.stage_asi.ASIStage.z_pos"]], "build_asi_stage_connection() (in module aslm.model.devices.stages.stage_asi)": [[168, "aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection"]], "aslm.model.devices.stages.stage_base": [[169, "module-aslm.model.devices.stages.stage_base"]], "stagebase (class in aslm.model.devices.stages.stage_base)": [[170, "aslm.model.devices.stages.stage_base.StageBase"]], "__init__() (aslm.model.devices.stages.stage_base.stagebase method)": [[170, "aslm.model.devices.stages.stage_base.StageBase.__init__"]], "axes_mapping (aslm.model.devices.stages.stage_base.stagebase attribute)": [[170, "aslm.model.devices.stages.stage_base.StageBase.axes_mapping"]], "f_max (aslm.model.devices.stages.stage_base.stagebase attribute)": [[170, "aslm.model.devices.stages.stage_base.StageBase.f_max"]], "f_min (aslm.model.devices.stages.stage_base.stagebase attribute)": [[170, "aslm.model.devices.stages.stage_base.StageBase.f_min"]], "f_pos (aslm.model.devices.stages.stage_base.stagebase attribute)": [[170, "aslm.model.devices.stages.stage_base.StageBase.f_pos"]], "get_abs_position() (aslm.model.devices.stages.stage_base.stagebase method)": [[170, "aslm.model.devices.stages.stage_base.StageBase.get_abs_position"], [170, "id0"]], "get_position_dict() (aslm.model.devices.stages.stage_base.stagebase method)": [[170, "aslm.model.devices.stages.stage_base.StageBase.get_position_dict"], [170, "id1"]], "stop() (aslm.model.devices.stages.stage_base.stagebase method)": [[170, "aslm.model.devices.stages.stage_base.StageBase.stop"], [170, "id2"]], "theta_max (aslm.model.devices.stages.stage_base.stagebase attribute)": [[170, "aslm.model.devices.stages.stage_base.StageBase.theta_max"]], "theta_min (aslm.model.devices.stages.stage_base.stagebase attribute)": [[170, "aslm.model.devices.stages.stage_base.StageBase.theta_min"]], "theta_pos (aslm.model.devices.stages.stage_base.stagebase attribute)": [[170, "aslm.model.devices.stages.stage_base.StageBase.theta_pos"]], "verify_abs_position() (aslm.model.devices.stages.stage_base.stagebase method)": [[170, "aslm.model.devices.stages.stage_base.StageBase.verify_abs_position"], [170, "id3"]], "x_max (aslm.model.devices.stages.stage_base.stagebase attribute)": [[170, "aslm.model.devices.stages.stage_base.StageBase.x_max"]], "x_min (aslm.model.devices.stages.stage_base.stagebase attribute)": [[170, "aslm.model.devices.stages.stage_base.StageBase.x_min"]], "x_pos (aslm.model.devices.stages.stage_base.stagebase attribute)": [[170, "aslm.model.devices.stages.stage_base.StageBase.x_pos"]], "y_max (aslm.model.devices.stages.stage_base.stagebase attribute)": [[170, "aslm.model.devices.stages.stage_base.StageBase.y_max"]], "y_min (aslm.model.devices.stages.stage_base.stagebase attribute)": [[170, "aslm.model.devices.stages.stage_base.StageBase.y_min"]], "y_pos (aslm.model.devices.stages.stage_base.stagebase attribute)": [[170, "aslm.model.devices.stages.stage_base.StageBase.y_pos"]], "z_max (aslm.model.devices.stages.stage_base.stagebase attribute)": [[170, "aslm.model.devices.stages.stage_base.StageBase.z_max"]], "z_min (aslm.model.devices.stages.stage_base.stagebase attribute)": [[170, "aslm.model.devices.stages.stage_base.StageBase.z_min"]], "z_pos (aslm.model.devices.stages.stage_base.stagebase attribute)": [[170, "aslm.model.devices.stages.stage_base.StageBase.z_pos"]], "aslm.model.devices.stages.stage_galvo": [[171, "module-aslm.model.devices.stages.stage_galvo"]], "galvonistage (class in aslm.model.devices.stages.stage_galvo)": [[172, "aslm.model.devices.stages.stage_galvo.GalvoNIStage"]], "__init__() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[172, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.__init__"]], "axes_mapping (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[172, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.axes_mapping"]], "create_position_dict() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[172, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.create_position_dict"]], "get_abs_position() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[172, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.get_abs_position"], [172, "id0"]], "get_position_dict() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[172, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.get_position_dict"]], "move_absolute() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[172, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[172, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.move_axis_absolute"]], "report_position() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[172, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.report_position"]], "stop() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[172, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.stop"], [172, "id1"]], "verify_abs_position() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[172, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.verify_abs_position"]], "aslm.model.devices.stages.stage_mcl": [[173, "module-aslm.model.devices.stages.stage_mcl"]], "mclstage (class in aslm.model.devices.stages.stage_mcl)": [[174, "aslm.model.devices.stages.stage_mcl.MCLStage"]], "__init__() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[174, "aslm.model.devices.stages.stage_mcl.MCLStage.__init__"]], "axes_mapping (aslm.model.devices.stages.stage_mcl.mclstage attribute)": [[174, "aslm.model.devices.stages.stage_mcl.MCLStage.axes_mapping"]], "get_abs_position() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[174, "aslm.model.devices.stages.stage_mcl.MCLStage.get_abs_position"]], "get_position_dict() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[174, "aslm.model.devices.stages.stage_mcl.MCLStage.get_position_dict"]], "move_absolute() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[174, "aslm.model.devices.stages.stage_mcl.MCLStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[174, "aslm.model.devices.stages.stage_mcl.MCLStage.move_axis_absolute"]], "report_position() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[174, "aslm.model.devices.stages.stage_mcl.MCLStage.report_position"]], "stop() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[174, "aslm.model.devices.stages.stage_mcl.MCLStage.stop"]], "verify_abs_position() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[174, "aslm.model.devices.stages.stage_mcl.MCLStage.verify_abs_position"]], "build_mclstage_connection() (in module aslm.model.devices.stages.stage_mcl)": [[175, "aslm.model.devices.stages.stage_mcl.build_MCLStage_connection"]], "aslm.model.devices.stages.stage_pi": [[176, "module-aslm.model.devices.stages.stage_pi"]], "pistage (class in aslm.model.devices.stages.stage_pi)": [[177, "aslm.model.devices.stages.stage_pi.PIStage"]], "__init__() (aslm.model.devices.stages.stage_pi.pistage method)": [[177, "aslm.model.devices.stages.stage_pi.PIStage.__init__"]], "axes_mapping (aslm.model.devices.stages.stage_pi.pistage attribute)": [[177, "aslm.model.devices.stages.stage_pi.PIStage.axes_mapping"]], "get_abs_position() (aslm.model.devices.stages.stage_pi.pistage method)": [[177, "aslm.model.devices.stages.stage_pi.PIStage.get_abs_position"], [177, "id0"]], "get_position_dict() (aslm.model.devices.stages.stage_pi.pistage method)": [[177, "aslm.model.devices.stages.stage_pi.PIStage.get_position_dict"], [177, "id1"]], "move_absolute() (aslm.model.devices.stages.stage_pi.pistage method)": [[177, "aslm.model.devices.stages.stage_pi.PIStage.move_absolute"], [177, "id2"]], "move_axis_absolute() (aslm.model.devices.stages.stage_pi.pistage method)": [[177, "aslm.model.devices.stages.stage_pi.PIStage.move_axis_absolute"], [177, "id3"]], "pi_axes (aslm.model.devices.stages.stage_pi.pistage attribute)": [[177, "aslm.model.devices.stages.stage_pi.PIStage.pi_axes"]], "pi_device (aslm.model.devices.stages.stage_pi.pistage attribute)": [[177, "aslm.model.devices.stages.stage_pi.PIStage.pi_device"]], "pi_tools (aslm.model.devices.stages.stage_pi.pistage attribute)": [[177, "aslm.model.devices.stages.stage_pi.PIStage.pi_tools"]], "report_position() (aslm.model.devices.stages.stage_pi.pistage method)": [[177, "aslm.model.devices.stages.stage_pi.PIStage.report_position"], [177, "id4"]], "stop() (aslm.model.devices.stages.stage_pi.pistage method)": [[177, "aslm.model.devices.stages.stage_pi.PIStage.stop"], [177, "id5"]], "verify_abs_position() (aslm.model.devices.stages.stage_pi.pistage method)": [[177, "aslm.model.devices.stages.stage_pi.PIStage.verify_abs_position"]], "wait_on_target() (aslm.model.devices.stages.stage_pi.pistage method)": [[177, "aslm.model.devices.stages.stage_pi.PIStage.wait_on_target"]], "build_pistage_connection() (in module aslm.model.devices.stages.stage_pi)": [[178, "aslm.model.devices.stages.stage_pi.build_PIStage_connection"]], "aslm.model.devices.stages.stage_sutter": [[179, "module-aslm.model.devices.stages.stage_sutter"]], "sutterstage (class in aslm.model.devices.stages.stage_sutter)": [[180, "aslm.model.devices.stages.stage_sutter.SutterStage"]], "__init__() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[180, "aslm.model.devices.stages.stage_sutter.SutterStage.__init__"]], "axes_mapping (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[180, "aslm.model.devices.stages.stage_sutter.SutterStage.axes_mapping"]], "close() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[180, "aslm.model.devices.stages.stage_sutter.SutterStage.close"]], "get_abs_position() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[180, "aslm.model.devices.stages.stage_sutter.SutterStage.get_abs_position"]], "get_position_dict() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[180, "aslm.model.devices.stages.stage_sutter.SutterStage.get_position_dict"]], "move_absolute() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[180, "aslm.model.devices.stages.stage_sutter.SutterStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[180, "aslm.model.devices.stages.stage_sutter.SutterStage.move_axis_absolute"]], "read() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[180, "aslm.model.devices.stages.stage_sutter.SutterStage.read"]], "report_position() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[180, "aslm.model.devices.stages.stage_sutter.SutterStage.report_position"]], "resolution (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[180, "aslm.model.devices.stages.stage_sutter.SutterStage.resolution"]], "speed (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[180, "aslm.model.devices.stages.stage_sutter.SutterStage.speed"]], "stage (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[180, "aslm.model.devices.stages.stage_sutter.SutterStage.stage"]], "stop() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[180, "aslm.model.devices.stages.stage_sutter.SutterStage.stop"]], "sutter_axes (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[180, "aslm.model.devices.stages.stage_sutter.SutterStage.sutter_axes"]], "verify_abs_position() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[180, "aslm.model.devices.stages.stage_sutter.SutterStage.verify_abs_position"]], "build_mp285_connection() (in module aslm.model.devices.stages.stage_sutter)": [[181, "aslm.model.devices.stages.stage_sutter.build_MP285_connection"]], "aslm.model.devices.stages.stage_synthetic": [[182, "module-aslm.model.devices.stages.stage_synthetic"]], "syntheticstage (class in aslm.model.devices.stages.stage_synthetic)": [[183, "aslm.model.devices.stages.stage_synthetic.SyntheticStage"]], "__init__() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[183, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.__init__"]], "axes_mapping (aslm.model.devices.stages.stage_synthetic.syntheticstage attribute)": [[183, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.axes_mapping"]], "get_abs_position() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[183, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.get_abs_position"]], "get_position_dict() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[183, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.get_position_dict"]], "move_absolute() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[183, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[183, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.move_axis_absolute"]], "stop() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[183, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.stop"]], "verify_abs_position() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[183, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.verify_abs_position"]], "aslm.model.devices.stages.stage_tl_kcube_inertial": [[184, "module-aslm.model.devices.stages.stage_tl_kcube_inertial"]], "tlkimstage (class in aslm.model.devices.stages.stage_tl_kcube_inertial)": [[185, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage"]], "__init__() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[185, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.__init__"]], "axes_mapping (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage attribute)": [[185, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.axes_mapping"]], "get_abs_position() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[185, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.get_abs_position"]], "get_position_dict() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[185, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.get_position_dict"]], "move_absolute() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[185, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[185, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.move_axis_absolute"]], "report_position() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[185, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.report_position"]], "stop() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[185, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.stop"]], "verify_abs_position() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[185, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.verify_abs_position"]], "build_tlkimstage_connection() (in module aslm.model.devices.stages.stage_tl_kcube_inertial)": [[186, "aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection"]], "aslm.model.devices.zoom": [[187, "module-aslm.model.devices.zoom"]], "aslm.model.devices.zoom.zoom_base": [[188, "module-aslm.model.devices.zoom.zoom_base"]], "zoombase (class in aslm.model.devices.zoom.zoom_base)": [[189, "aslm.model.devices.zoom.zoom_base.ZoomBase"]], "__init__() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[189, "aslm.model.devices.zoom.zoom_base.ZoomBase.__init__"]], "build_stage_dict() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[189, "aslm.model.devices.zoom.zoom_base.ZoomBase.build_stage_dict"]], "move() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[189, "aslm.model.devices.zoom.zoom_base.ZoomBase.move"]], "read_position() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[189, "aslm.model.devices.zoom.zoom_base.ZoomBase.read_position"]], "set_zoom() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[189, "aslm.model.devices.zoom.zoom_base.ZoomBase.set_zoom"]], "aslm.model.devices.zoom.zoom_synthetic": [[190, "module-aslm.model.devices.zoom.zoom_synthetic"]], "syntheticzoom (class in aslm.model.devices.zoom.zoom_synthetic)": [[191, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom"]], "__init__() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[191, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.__init__"]], "build_stage_dict() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[191, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.build_stage_dict"]], "move() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[191, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.move"], [191, "id0"]], "read_position() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[191, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.read_position"], [191, "id1"]], "set_zoom() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[191, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.set_zoom"], [191, "id2"]], "aslm.model.dummy": [[192, "module-aslm.model.dummy"]], "dummycontroller (class in aslm.model.dummy)": [[193, "aslm.model.dummy.DummyController"]], "__init__() (aslm.model.dummy.dummycontroller method)": [[193, "aslm.model.dummy.DummyController.__init__"]], "clear() (aslm.model.dummy.dummycontroller method)": [[193, "aslm.model.dummy.DummyController.clear"]], "execute() (aslm.model.dummy.dummycontroller method)": [[193, "aslm.model.dummy.DummyController.execute"]], "pop() (aslm.model.dummy.dummycontroller method)": [[193, "aslm.model.dummy.DummyController.pop"]], "dummydevice (class in aslm.model.dummy)": [[194, "aslm.model.dummy.DummyDevice"]], "__init__() (aslm.model.dummy.dummydevice method)": [[194, "aslm.model.dummy.DummyDevice.__init__"]], "clear() (aslm.model.dummy.dummydevice method)": [[194, "aslm.model.dummy.DummyDevice.clear"]], "data_pipe (aslm.model.dummy.dummydevice attribute)": [[194, "aslm.model.dummy.DummyDevice.data_pipe"]], "generate_message() (aslm.model.dummy.dummydevice method)": [[194, "aslm.model.dummy.DummyDevice.generate_message"]], "listen() (aslm.model.dummy.dummydevice method)": [[194, "aslm.model.dummy.DummyDevice.listen"]], "sendout() (aslm.model.dummy.dummydevice method)": [[194, "aslm.model.dummy.DummyDevice.sendout"]], "setup() (aslm.model.dummy.dummydevice method)": [[194, "aslm.model.dummy.DummyDevice.setup"], [194, "id0"]], "shutdown() (aslm.model.dummy.dummydevice method)": [[194, "aslm.model.dummy.DummyDevice.shutdown"]], "signal_pipe (aslm.model.dummy.dummydevice attribute)": [[194, "aslm.model.dummy.DummyDevice.signal_pipe"]], "dummymicroscope (class in aslm.model.dummy)": [[195, "aslm.model.dummy.DummyMicroscope"]], "__init__() (aslm.model.dummy.dummymicroscope method)": [[195, "aslm.model.dummy.DummyMicroscope.__init__"]], "calculate_exposure_sweep_times() (aslm.model.dummy.dummymicroscope method)": [[195, "aslm.model.dummy.DummyMicroscope.calculate_exposure_sweep_times"]], "data_pipe (aslm.model.dummy.dummymicroscope attribute)": [[195, "aslm.model.dummy.DummyMicroscope.data_pipe"]], "setup() (aslm.model.dummy.dummymicroscope method)": [[195, "aslm.model.dummy.DummyMicroscope.setup"]], "shutdown() (aslm.model.dummy.dummymicroscope method)": [[195, "aslm.model.dummy.DummyMicroscope.shutdown"]], "signal_pipe (aslm.model.dummy.dummymicroscope attribute)": [[195, "aslm.model.dummy.DummyMicroscope.signal_pipe"]], "dummymodel (class in aslm.model.dummy)": [[196, "aslm.model.dummy.DummyModel"]], "__init__() (aslm.model.dummy.dummymodel method)": [[196, "aslm.model.dummy.DummyModel.__init__"]], "configuration (aslm.model.dummy.dummymodel attribute)": [[196, "aslm.model.dummy.DummyModel.configuration"]], "data (aslm.model.dummy.dummymodel attribute)": [[196, "aslm.model.dummy.DummyModel.data"]], "data_container (aslm.model.dummy.dummymodel attribute)": [[196, "aslm.model.dummy.DummyModel.data_container"]], "data_func() (aslm.model.dummy.dummymodel method)": [[196, "aslm.model.dummy.DummyModel.data_func"], [196, "id0"]], "data_pipe (aslm.model.dummy.dummymodel attribute)": [[196, "aslm.model.dummy.DummyModel.data_pipe"]], "data_thread (aslm.model.dummy.dummymodel attribute)": [[196, "aslm.model.dummy.DummyModel.data_thread"]], "frame_id (aslm.model.dummy.dummymodel attribute)": [[196, "aslm.model.dummy.DummyModel.frame_id"]], "signal_container (aslm.model.dummy.dummymodel attribute)": [[196, "aslm.model.dummy.DummyModel.signal_container"]], "signal_func() (aslm.model.dummy.dummymodel method)": [[196, "aslm.model.dummy.DummyModel.signal_func"]], "signal_pipe (aslm.model.dummy.dummymodel attribute)": [[196, "aslm.model.dummy.DummyModel.signal_pipe"]], "signal_thread (aslm.model.dummy.dummymodel attribute)": [[196, "aslm.model.dummy.DummyModel.signal_thread"]], "start() (aslm.model.dummy.dummymodel method)": [[196, "aslm.model.dummy.DummyModel.start"]], "stop_flag (aslm.model.dummy.dummymodel attribute)": [[196, "aslm.model.dummy.DummyModel.stop_flag"]], "aslm.model.features": [[197, "module-aslm.model.features"]], "aslm.model.features.auto_tile_scan": [[198, "module-aslm.model.features.auto_tile_scan"]], "calculatefocusrange (class in aslm.model.features.auto_tile_scan)": [[199, "aslm.model.features.auto_tile_scan.CalculateFocusRange"]], "__init__() (aslm.model.features.auto_tile_scan.calculatefocusrange method)": [[199, "aslm.model.features.auto_tile_scan.CalculateFocusRange.__init__"]], "end_func_data() (aslm.model.features.auto_tile_scan.calculatefocusrange method)": [[199, "aslm.model.features.auto_tile_scan.CalculateFocusRange.end_func_data"]], "end_func_signal() (aslm.model.features.auto_tile_scan.calculatefocusrange method)": [[199, "aslm.model.features.auto_tile_scan.CalculateFocusRange.end_func_signal"]], "in_func_data() (aslm.model.features.auto_tile_scan.calculatefocusrange method)": [[199, "aslm.model.features.auto_tile_scan.CalculateFocusRange.in_func_data"]], "in_func_signal() (aslm.model.features.auto_tile_scan.calculatefocusrange method)": [[199, "aslm.model.features.auto_tile_scan.CalculateFocusRange.in_func_signal"]], "pre_func_data() (aslm.model.features.auto_tile_scan.calculatefocusrange method)": [[199, "aslm.model.features.auto_tile_scan.CalculateFocusRange.pre_func_data"]], "pre_func_signal() (aslm.model.features.auto_tile_scan.calculatefocusrange method)": [[199, "aslm.model.features.auto_tile_scan.CalculateFocusRange.pre_func_signal"]], "aslm.model.features.autofocus": [[200, "module-aslm.model.features.autofocus"]], "autofocus (class in aslm.model.features.autofocus)": [[201, "aslm.model.features.autofocus.Autofocus"]], "__init__() (aslm.model.features.autofocus.autofocus method)": [[201, "aslm.model.features.autofocus.Autofocus.__init__"]], "autofocus_frame_queue (aslm.model.features.autofocus.autofocus attribute)": [[201, "aslm.model.features.autofocus.Autofocus.autofocus_frame_queue"]], "autofocus_pos_queue (aslm.model.features.autofocus.autofocus attribute)": [[201, "aslm.model.features.autofocus.Autofocus.autofocus_pos_queue"]], "coarse_step_size (aslm.model.features.autofocus.autofocus attribute)": [[201, "aslm.model.features.autofocus.Autofocus.coarse_step_size"]], "coarse_steps (aslm.model.features.autofocus.autofocus attribute)": [[201, "aslm.model.features.autofocus.Autofocus.coarse_steps"]], "end_func_data() (aslm.model.features.autofocus.autofocus method)": [[201, "aslm.model.features.autofocus.Autofocus.end_func_data"]], "end_func_signal() (aslm.model.features.autofocus.autofocus method)": [[201, "aslm.model.features.autofocus.Autofocus.end_func_signal"]], "f_frame_id (aslm.model.features.autofocus.autofocus attribute)": [[201, "aslm.model.features.autofocus.Autofocus.f_frame_id"]], "f_pos (aslm.model.features.autofocus.autofocus attribute)": [[201, "aslm.model.features.autofocus.Autofocus.f_pos"]], "fine_pos_offset (aslm.model.features.autofocus.autofocus attribute)": [[201, "aslm.model.features.autofocus.Autofocus.fine_pos_offset"]], "fine_step_size (aslm.model.features.autofocus.autofocus attribute)": [[201, "aslm.model.features.autofocus.Autofocus.fine_step_size"]], "focus_pos (aslm.model.features.autofocus.autofocus attribute)": [[201, "aslm.model.features.autofocus.Autofocus.focus_pos"]], "frame_num (aslm.model.features.autofocus.autofocus attribute)": [[201, "aslm.model.features.autofocus.Autofocus.frame_num"]], "get_autofocus_frame_num() (aslm.model.features.autofocus.autofocus method)": [[201, "aslm.model.features.autofocus.Autofocus.get_autofocus_frame_num"]], "get_frames_num (aslm.model.features.autofocus.autofocus attribute)": [[201, "aslm.model.features.autofocus.Autofocus.get_frames_num"]], "get_steps() (aslm.model.features.autofocus.autofocus static method)": [[201, "aslm.model.features.autofocus.Autofocus.get_steps"]], "in_func_data() (aslm.model.features.autofocus.autofocus method)": [[201, "aslm.model.features.autofocus.Autofocus.in_func_data"]], "in_func_signal() (aslm.model.features.autofocus.autofocus method)": [[201, "aslm.model.features.autofocus.Autofocus.in_func_signal"]], "init_pos (aslm.model.features.autofocus.autofocus attribute)": [[201, "aslm.model.features.autofocus.Autofocus.init_pos"]], "max_entropy (aslm.model.features.autofocus.autofocus attribute)": [[201, "aslm.model.features.autofocus.Autofocus.max_entropy"]], "plot_data (aslm.model.features.autofocus.autofocus attribute)": [[201, "aslm.model.features.autofocus.Autofocus.plot_data"]], "pre_func_data() (aslm.model.features.autofocus.autofocus method)": [[201, "aslm.model.features.autofocus.Autofocus.pre_func_data"]], "pre_func_signal() (aslm.model.features.autofocus.autofocus method)": [[201, "aslm.model.features.autofocus.Autofocus.pre_func_signal"]], "robust_autofocus() (aslm.model.features.autofocus.autofocus method)": [[201, "aslm.model.features.autofocus.Autofocus.robust_autofocus"]], "run() (aslm.model.features.autofocus.autofocus method)": [[201, "aslm.model.features.autofocus.Autofocus.run"], [201, "id0"]], "signal_id (aslm.model.features.autofocus.autofocus attribute)": [[201, "aslm.model.features.autofocus.Autofocus.signal_id"]], "target_channel (aslm.model.features.autofocus.autofocus attribute)": [[201, "aslm.model.features.autofocus.Autofocus.target_channel"]], "target_frame_id (aslm.model.features.autofocus.autofocus attribute)": [[201, "aslm.model.features.autofocus.Autofocus.target_frame_id"]], "total_frame_num (aslm.model.features.autofocus.autofocus attribute)": [[201, "aslm.model.features.autofocus.Autofocus.total_frame_num"]], "power_tent() (in module aslm.model.features.autofocus)": [[202, "aslm.model.features.autofocus.power_tent"]], "aslm.model.features.common_features": [[203, "module-aslm.model.features.common_features"]], "changeresolution (class in aslm.model.features.common_features)": [[204, "aslm.model.features.common_features.ChangeResolution"]], "__init__() (aslm.model.features.common_features.changeresolution method)": [[204, "aslm.model.features.common_features.ChangeResolution.__init__"]], "cleanup() (aslm.model.features.common_features.changeresolution method)": [[204, "aslm.model.features.common_features.ChangeResolution.cleanup"]], "signal_func() (aslm.model.features.common_features.changeresolution method)": [[204, "aslm.model.features.common_features.ChangeResolution.signal_func"]], "conproacquisition (class in aslm.model.features.common_features)": [[205, "aslm.model.features.common_features.ConProAcquisition"]], "__init__() (aslm.model.features.common_features.conproacquisition method)": [[205, "aslm.model.features.common_features.ConProAcquisition.__init__"]], "generate_meta_data() (aslm.model.features.common_features.conproacquisition method)": [[205, "aslm.model.features.common_features.ConProAcquisition.generate_meta_data"]], "pre_signal_func() (aslm.model.features.common_features.conproacquisition method)": [[205, "aslm.model.features.common_features.ConProAcquisition.pre_signal_func"]], "signal_end() (aslm.model.features.common_features.conproacquisition method)": [[205, "aslm.model.features.common_features.ConProAcquisition.signal_end"]], "signal_func() (aslm.model.features.common_features.conproacquisition method)": [[205, "aslm.model.features.common_features.ConProAcquisition.signal_func"]], "findtissuesimple2d (class in aslm.model.features.common_features)": [[206, "aslm.model.features.common_features.FindTissueSimple2D"]], "__init__() (aslm.model.features.common_features.findtissuesimple2d method)": [[206, "aslm.model.features.common_features.FindTissueSimple2D.__init__"]], "data_func() (aslm.model.features.common_features.findtissuesimple2d method)": [[206, "aslm.model.features.common_features.FindTissueSimple2D.data_func"]], "loopbycount (class in aslm.model.features.common_features)": [[207, "aslm.model.features.common_features.LoopByCount"]], "__init__() (aslm.model.features.common_features.loopbycount method)": [[207, "aslm.model.features.common_features.LoopByCount.__init__"]], "data_func() (aslm.model.features.common_features.loopbycount method)": [[207, "aslm.model.features.common_features.LoopByCount.data_func"]], "signal_func() (aslm.model.features.common_features.loopbycount method)": [[207, "aslm.model.features.common_features.LoopByCount.signal_func"]], "movetonextpositioninmultipositiontable (class in aslm.model.features.common_features)": [[208, "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable"]], "__init__() (aslm.model.features.common_features.movetonextpositioninmultipositiontable method)": [[208, "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable.__init__"]], "cleanup() (aslm.model.features.common_features.movetonextpositioninmultipositiontable method)": [[208, "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable.cleanup"]], "signal_func() (aslm.model.features.common_features.movetonextpositioninmultipositiontable method)": [[208, "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable.signal_func"]], "preparenextchannel (class in aslm.model.features.common_features)": [[209, "aslm.model.features.common_features.PrepareNextChannel"]], "__init__() (aslm.model.features.common_features.preparenextchannel method)": [[209, "aslm.model.features.common_features.PrepareNextChannel.__init__"]], "signal_func() (aslm.model.features.common_features.preparenextchannel method)": [[209, "aslm.model.features.common_features.PrepareNextChannel.signal_func"]], "snap (class in aslm.model.features.common_features)": [[210, "aslm.model.features.common_features.Snap"]], "__init__() (aslm.model.features.common_features.snap method)": [[210, "aslm.model.features.common_features.Snap.__init__"]], "data_func() (aslm.model.features.common_features.snap method)": [[210, "aslm.model.features.common_features.Snap.data_func"]], "stackpause (class in aslm.model.features.common_features)": [[211, "aslm.model.features.common_features.StackPause"]], "__init__() (aslm.model.features.common_features.stackpause method)": [[211, "aslm.model.features.common_features.StackPause.__init__"]], "signal_func() (aslm.model.features.common_features.stackpause method)": [[211, "aslm.model.features.common_features.StackPause.signal_func"]], "waittocontinue (class in aslm.model.features.common_features)": [[212, "aslm.model.features.common_features.WaitToContinue"]], "__init__() (aslm.model.features.common_features.waittocontinue method)": [[212, "aslm.model.features.common_features.WaitToContinue.__init__"]], "cleanup() (aslm.model.features.common_features.waittocontinue method)": [[212, "aslm.model.features.common_features.WaitToContinue.cleanup"]], "data_func() (aslm.model.features.common_features.waittocontinue method)": [[212, "aslm.model.features.common_features.WaitToContinue.data_func"]], "pre_data_func() (aslm.model.features.common_features.waittocontinue method)": [[212, "aslm.model.features.common_features.WaitToContinue.pre_data_func"]], "pre_signal_func() (aslm.model.features.common_features.waittocontinue method)": [[212, "aslm.model.features.common_features.WaitToContinue.pre_signal_func"]], "signal_func() (aslm.model.features.common_features.waittocontinue method)": [[212, "aslm.model.features.common_features.WaitToContinue.signal_func"]], "zstackacquisition (class in aslm.model.features.common_features)": [[213, "aslm.model.features.common_features.ZStackAcquisition"]], "__init__() (aslm.model.features.common_features.zstackacquisition method)": [[213, "aslm.model.features.common_features.ZStackAcquisition.__init__"]], "cleanup_data_func() (aslm.model.features.common_features.zstackacquisition method)": [[213, "aslm.model.features.common_features.ZStackAcquisition.cleanup_data_func"]], "end_data_func() (aslm.model.features.common_features.zstackacquisition method)": [[213, "aslm.model.features.common_features.ZStackAcquisition.end_data_func"]], "in_data_func() (aslm.model.features.common_features.zstackacquisition method)": [[213, "aslm.model.features.common_features.ZStackAcquisition.in_data_func"]], "pre_data_func() (aslm.model.features.common_features.zstackacquisition method)": [[213, "aslm.model.features.common_features.ZStackAcquisition.pre_data_func"]], "pre_signal_func() (aslm.model.features.common_features.zstackacquisition method)": [[213, "aslm.model.features.common_features.ZStackAcquisition.pre_signal_func"]], "signal_end() (aslm.model.features.common_features.zstackacquisition method)": [[213, "aslm.model.features.common_features.ZStackAcquisition.signal_end"]], "signal_func() (aslm.model.features.common_features.zstackacquisition method)": [[213, "aslm.model.features.common_features.ZStackAcquisition.signal_func"]], "update_channel() (aslm.model.features.common_features.zstackacquisition method)": [[213, "aslm.model.features.common_features.ZStackAcquisition.update_channel"]], "aslm.model.features.constant_velocity_acquisition": [[214, "module-aslm.model.features.constant_velocity_acquisition"]], "constantvelocityacquisition (class in aslm.model.features.constant_velocity_acquisition)": [[215, "aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition"]], "__init__() (aslm.model.features.constant_velocity_acquisition.constantvelocityacquisition method)": [[215, "aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition.__init__"]], "cleanup() (aslm.model.features.constant_velocity_acquisition.constantvelocityacquisition method)": [[215, "aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition.cleanup"]], "pre_func_signal() (aslm.model.features.constant_velocity_acquisition.constantvelocityacquisition method)": [[215, "aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition.pre_func_signal"]], "aslm.model.features.dummy_detective": [[216, "module-aslm.model.features.dummy_detective"]], "dummy_detective (class in aslm.model.features.dummy_detective)": [[217, "aslm.model.features.dummy_detective.Dummy_Detective"]], "__init__() (aslm.model.features.dummy_detective.dummy_detective method)": [[217, "aslm.model.features.dummy_detective.Dummy_Detective.__init__"]], "aslm.model.features.feature_container": [[218, "module-aslm.model.features.feature_container"]], "container (class in aslm.model.features.feature_container)": [[219, "aslm.model.features.feature_container.Container"]], "__init__() (aslm.model.features.feature_container.container method)": [[219, "aslm.model.features.feature_container.Container.__init__"]], "cleanup() (aslm.model.features.feature_container.container method)": [[219, "aslm.model.features.feature_container.Container.cleanup"]], "reset() (aslm.model.features.feature_container.container method)": [[219, "aslm.model.features.feature_container.Container.reset"]], "datacontainer (class in aslm.model.features.feature_container)": [[220, "aslm.model.features.feature_container.DataContainer"]], "__init__() (aslm.model.features.feature_container.datacontainer method)": [[220, "aslm.model.features.feature_container.DataContainer.__init__"]], "cleanup() (aslm.model.features.feature_container.datacontainer method)": [[220, "aslm.model.features.feature_container.DataContainer.cleanup"]], "reset() (aslm.model.features.feature_container.datacontainer method)": [[220, "aslm.model.features.feature_container.DataContainer.reset"]], "run() (aslm.model.features.feature_container.datacontainer method)": [[220, "aslm.model.features.feature_container.DataContainer.run"]], "datanode (class in aslm.model.features.feature_container)": [[221, "aslm.model.features.feature_container.DataNode"]], "__init__() (aslm.model.features.feature_container.datanode method)": [[221, "aslm.model.features.feature_container.DataNode.__init__"]], "run() (aslm.model.features.feature_container.datanode method)": [[221, "aslm.model.features.feature_container.DataNode.run"]], "set_property() (aslm.model.features.feature_container.datanode method)": [[221, "aslm.model.features.feature_container.DataNode.set_property"]], "signalcontainer (class in aslm.model.features.feature_container)": [[222, "aslm.model.features.feature_container.SignalContainer"]], "__init__() (aslm.model.features.feature_container.signalcontainer method)": [[222, "aslm.model.features.feature_container.SignalContainer.__init__"]], "cleanup() (aslm.model.features.feature_container.signalcontainer method)": [[222, "aslm.model.features.feature_container.SignalContainer.cleanup"]], "reset() (aslm.model.features.feature_container.signalcontainer method)": [[222, "aslm.model.features.feature_container.SignalContainer.reset"]], "run() (aslm.model.features.feature_container.signalcontainer method)": [[222, "aslm.model.features.feature_container.SignalContainer.run"]], "signalnode (class in aslm.model.features.feature_container)": [[223, "aslm.model.features.feature_container.SignalNode"]], "__init__() (aslm.model.features.feature_container.signalnode method)": [[223, "aslm.model.features.feature_container.SignalNode.__init__"]], "run() (aslm.model.features.feature_container.signalnode method)": [[223, "aslm.model.features.feature_container.SignalNode.run"]], "set_property() (aslm.model.features.feature_container.signalnode method)": [[223, "aslm.model.features.feature_container.SignalNode.set_property"]], "treenode (class in aslm.model.features.feature_container)": [[224, "aslm.model.features.feature_container.TreeNode"]], "__init__() (aslm.model.features.feature_container.treenode method)": [[224, "aslm.model.features.feature_container.TreeNode.__init__"]], "set_property() (aslm.model.features.feature_container.treenode method)": [[224, "aslm.model.features.feature_container.TreeNode.set_property"]], "dummy_true() (in module aslm.model.features.feature_container)": [[225, "aslm.model.features.feature_container.dummy_True"]], "dummy_func() (in module aslm.model.features.feature_container)": [[226, "aslm.model.features.feature_container.dummy_func"]], "get_registered_funcs() (in module aslm.model.features.feature_container)": [[227, "aslm.model.features.feature_container.get_registered_funcs"]], "load_features() (in module aslm.model.features.feature_container)": [[228, "aslm.model.features.feature_container.load_features"]], "aslm.model.features.feature_related_functions": [[229, "module-aslm.model.features.feature_related_functions"]], "sharedlist (class in aslm.model.features.feature_related_functions)": [[230, "aslm.model.features.feature_related_functions.SharedList"]], "__init__() (aslm.model.features.feature_related_functions.sharedlist method)": [[230, "aslm.model.features.feature_related_functions.SharedList.__init__"]], "append() (aslm.model.features.feature_related_functions.sharedlist method)": [[230, "aslm.model.features.feature_related_functions.SharedList.append"]], "clear() (aslm.model.features.feature_related_functions.sharedlist method)": [[230, "aslm.model.features.feature_related_functions.SharedList.clear"]], "copy() (aslm.model.features.feature_related_functions.sharedlist method)": [[230, "aslm.model.features.feature_related_functions.SharedList.copy"]], "count() (aslm.model.features.feature_related_functions.sharedlist method)": [[230, "aslm.model.features.feature_related_functions.SharedList.count"]], "extend() (aslm.model.features.feature_related_functions.sharedlist method)": [[230, "aslm.model.features.feature_related_functions.SharedList.extend"]], "index() (aslm.model.features.feature_related_functions.sharedlist method)": [[230, "aslm.model.features.feature_related_functions.SharedList.index"]], "insert() (aslm.model.features.feature_related_functions.sharedlist method)": [[230, "aslm.model.features.feature_related_functions.SharedList.insert"]], "pop() (aslm.model.features.feature_related_functions.sharedlist method)": [[230, "aslm.model.features.feature_related_functions.SharedList.pop"]], "remove() (aslm.model.features.feature_related_functions.sharedlist method)": [[230, "aslm.model.features.feature_related_functions.SharedList.remove"]], "reverse() (aslm.model.features.feature_related_functions.sharedlist method)": [[230, "aslm.model.features.feature_related_functions.SharedList.reverse"]], "sort() (aslm.model.features.feature_related_functions.sharedlist method)": [[230, "aslm.model.features.feature_related_functions.SharedList.sort"]], "convert_feature_list_to_str() (in module aslm.model.features.feature_related_functions)": [[231, "aslm.model.features.feature_related_functions.convert_feature_list_to_str"]], "convert_str_to_feature_list() (in module aslm.model.features.feature_related_functions)": [[232, "aslm.model.features.feature_related_functions.convert_str_to_feature_list"]], "load_dynamic_parameter_functions() (in module aslm.model.features.feature_related_functions)": [[233, "aslm.model.features.feature_related_functions.load_dynamic_parameter_functions"]], "aslm.model.features.image_writer": [[234, "module-aslm.model.features.image_writer"]], "imagewriter (class in aslm.model.features.image_writer)": [[235, "aslm.model.features.image_writer.ImageWriter"]], "__init__() (aslm.model.features.image_writer.imagewriter method)": [[235, "aslm.model.features.image_writer.ImageWriter.__init__"]], "calculate_and_check_disk_space() (aslm.model.features.image_writer.imagewriter method)": [[235, "aslm.model.features.image_writer.ImageWriter.calculate_and_check_disk_space"]], "close() (aslm.model.features.image_writer.imagewriter method)": [[235, "aslm.model.features.image_writer.ImageWriter.close"], [235, "id0"], [235, "id15"]], "config_table (aslm.model.features.image_writer.imagewriter attribute)": [[235, "aslm.model.features.image_writer.ImageWriter.config_table"], [235, "id4"]], "current_time_point (aslm.model.features.image_writer.imagewriter attribute)": [[235, "aslm.model.features.image_writer.ImageWriter.current_time_point"], [235, "id5"]], "data_buffer (aslm.model.features.image_writer.imagewriter attribute)": [[235, "aslm.model.features.image_writer.ImageWriter.data_buffer"], [235, "id6"]], "data_source (aslm.model.features.image_writer.imagewriter attribute)": [[235, "aslm.model.features.image_writer.ImageWriter.data_source"], [235, "id7"]], "file_type (aslm.model.features.image_writer.imagewriter attribute)": [[235, "aslm.model.features.image_writer.ImageWriter.file_type"], [235, "id8"]], "generate_image_name() (aslm.model.features.image_writer.imagewriter method)": [[235, "aslm.model.features.image_writer.ImageWriter.generate_image_name"], [235, "id1"], [235, "id16"]], "generate_meta_data() (aslm.model.features.image_writer.imagewriter method)": [[235, "aslm.model.features.image_writer.ImageWriter.generate_meta_data"], [235, "id17"], [235, "id2"]], "mip (aslm.model.features.image_writer.imagewriter attribute)": [[235, "aslm.model.features.image_writer.ImageWriter.mip"], [235, "id9"]], "mip_directory (aslm.model.features.image_writer.imagewriter attribute)": [[235, "aslm.model.features.image_writer.ImageWriter.mip_directory"], [235, "id10"]], "model (aslm.model.features.image_writer.imagewriter attribute)": [[235, "aslm.model.features.image_writer.ImageWriter.model"], [235, "id11"]], "num_of_channels (aslm.model.features.image_writer.imagewriter attribute)": [[235, "aslm.model.features.image_writer.ImageWriter.num_of_channels"], [235, "id12"]], "save_directory (aslm.model.features.image_writer.imagewriter attribute)": [[235, "aslm.model.features.image_writer.ImageWriter.save_directory"], [235, "id13"]], "save_image() (aslm.model.features.image_writer.imagewriter method)": [[235, "aslm.model.features.image_writer.ImageWriter.save_image"], [235, "id18"], [235, "id3"]], "sub_dir (aslm.model.features.image_writer.imagewriter attribute)": [[235, "aslm.model.features.image_writer.ImageWriter.sub_dir"], [235, "id14"]], "aslm.model.features.remove_empty_tiles": [[236, "module-aslm.model.features.remove_empty_tiles"]], "detecttissueinstack (class in aslm.model.features.remove_empty_tiles)": [[237, "aslm.model.features.remove_empty_tiles.DetectTissueInStack"]], "__init__() (aslm.model.features.remove_empty_tiles.detecttissueinstack method)": [[237, "aslm.model.features.remove_empty_tiles.DetectTissueInStack.__init__"]], "end_func_data() (aslm.model.features.remove_empty_tiles.detecttissueinstack method)": [[237, "aslm.model.features.remove_empty_tiles.DetectTissueInStack.end_func_data"]], "end_func_signal() (aslm.model.features.remove_empty_tiles.detecttissueinstack method)": [[237, "aslm.model.features.remove_empty_tiles.DetectTissueInStack.end_func_signal"]], "in_func_data() (aslm.model.features.remove_empty_tiles.detecttissueinstack method)": [[237, "aslm.model.features.remove_empty_tiles.DetectTissueInStack.in_func_data"]], "in_func_signal() (aslm.model.features.remove_empty_tiles.detecttissueinstack method)": [[237, "aslm.model.features.remove_empty_tiles.DetectTissueInStack.in_func_signal"]], "pre_func_data() (aslm.model.features.remove_empty_tiles.detecttissueinstack method)": [[237, "aslm.model.features.remove_empty_tiles.DetectTissueInStack.pre_func_data"]], "pre_func_signal() (aslm.model.features.remove_empty_tiles.detecttissueinstack method)": [[237, "aslm.model.features.remove_empty_tiles.DetectTissueInStack.pre_func_signal"]], "detecttissueinstackandrecord (class in aslm.model.features.remove_empty_tiles)": [[238, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord"]], "__init__() (aslm.model.features.remove_empty_tiles.detecttissueinstackandrecord method)": [[238, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.__init__"]], "end_func_data() (aslm.model.features.remove_empty_tiles.detecttissueinstackandrecord method)": [[238, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.end_func_data"]], "end_func_signal() (aslm.model.features.remove_empty_tiles.detecttissueinstackandrecord method)": [[238, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.end_func_signal"]], "in_func_data() (aslm.model.features.remove_empty_tiles.detecttissueinstackandrecord method)": [[238, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.in_func_data"]], "in_func_signal() (aslm.model.features.remove_empty_tiles.detecttissueinstackandrecord method)": [[238, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.in_func_signal"]], "pre_func_data() (aslm.model.features.remove_empty_tiles.detecttissueinstackandrecord method)": [[238, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.pre_func_data"]], "pre_func_signal() (aslm.model.features.remove_empty_tiles.detecttissueinstackandrecord method)": [[238, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.pre_func_signal"]], "removeemptypositions (class in aslm.model.features.remove_empty_tiles)": [[239, "aslm.model.features.remove_empty_tiles.RemoveEmptyPositions"]], "__init__() (aslm.model.features.remove_empty_tiles.removeemptypositions method)": [[239, "aslm.model.features.remove_empty_tiles.RemoveEmptyPositions.__init__"]], "signal_func() (aslm.model.features.remove_empty_tiles.removeemptypositions method)": [[239, "aslm.model.features.remove_empty_tiles.RemoveEmptyPositions.signal_func"]], "detect_tissue() (in module aslm.model.features.remove_empty_tiles)": [[240, "aslm.model.features.remove_empty_tiles.detect_tissue"]], "detect_tissue2() (in module aslm.model.features.remove_empty_tiles)": [[241, "aslm.model.features.remove_empty_tiles.detect_tissue2"]], "aslm.model.features.restful_features": [[242, "module-aslm.model.features.restful_features"]], "ilastiksegmentation (class in aslm.model.features.restful_features)": [[243, "aslm.model.features.restful_features.IlastikSegmentation"]], "__init__() (aslm.model.features.restful_features.ilastiksegmentation method)": [[243, "aslm.model.features.restful_features.IlastikSegmentation.__init__"]], "prepare_service() (in module aslm.model.features.restful_features)": [[244, "aslm.model.features.restful_features.prepare_service"]], "aslm.model.features.volume_search": [[245, "module-aslm.model.features.volume_search"]], "volumesearch (class in aslm.model.features.volume_search)": [[246, "aslm.model.features.volume_search.VolumeSearch"]], "__init__() (aslm.model.features.volume_search.volumesearch method)": [[246, "aslm.model.features.volume_search.VolumeSearch.__init__"]], "draw_box() (in module aslm.model.features.volume_search)": [[247, "aslm.model.features.volume_search.draw_box"]], "aslm.model.metadata_sources": [[248, "module-aslm.model.metadata_sources"]], "aslm.model.metadata_sources.bdv_metadata": [[249, "module-aslm.model.metadata_sources.bdv_metadata"]], "bigdataviewermetadata (class in aslm.model.metadata_sources.bdv_metadata)": [[250, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata"]], "__init__() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[250, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.__init__"]], "parse_bdv_xml() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[250, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.parse_bdv_xml"]], "shape (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata property)": [[250, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.shape"]], "stage_positions_to_affine_matrix() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[250, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.stage_positions_to_affine_matrix"]], "to_xml() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[250, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.to_xml"]], "voxel_size (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata property)": [[250, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.voxel_size"]], "write_xml() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[250, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.write_xml"]], "aslm.model.metadata_sources.metadata": [[251, "module-aslm.model.metadata_sources.metadata"]], "metadata (class in aslm.model.metadata_sources.metadata)": [[252, "aslm.model.metadata_sources.metadata.Metadata"]], "__init__() (aslm.model.metadata_sources.metadata.metadata method)": [[252, "aslm.model.metadata_sources.metadata.Metadata.__init__"]], "shape (aslm.model.metadata_sources.metadata.metadata property)": [[252, "aslm.model.metadata_sources.metadata.Metadata.shape"]], "voxel_size (aslm.model.metadata_sources.metadata.metadata property)": [[252, "aslm.model.metadata_sources.metadata.Metadata.voxel_size"]], "xmlmetadata (class in aslm.model.metadata_sources.metadata)": [[253, "aslm.model.metadata_sources.metadata.XMLMetadata"]], "__init__() (aslm.model.metadata_sources.metadata.xmlmetadata method)": [[253, "aslm.model.metadata_sources.metadata.XMLMetadata.__init__"]], "shape (aslm.model.metadata_sources.metadata.xmlmetadata property)": [[253, "aslm.model.metadata_sources.metadata.XMLMetadata.shape"]], "to_xml() (aslm.model.metadata_sources.metadata.xmlmetadata method)": [[253, "aslm.model.metadata_sources.metadata.XMLMetadata.to_xml"]], "voxel_size (aslm.model.metadata_sources.metadata.xmlmetadata property)": [[253, "aslm.model.metadata_sources.metadata.XMLMetadata.voxel_size"]], "write_xml() (aslm.model.metadata_sources.metadata.xmlmetadata method)": [[253, "aslm.model.metadata_sources.metadata.XMLMetadata.write_xml"]], "aslm.model.metadata_sources.ome_tiff_metadata": [[254, "module-aslm.model.metadata_sources.ome_tiff_metadata"]], "ometiffmetadata (class in aslm.model.metadata_sources.ome_tiff_metadata)": [[255, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata"]], "__init__() (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata method)": [[255, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.__init__"]], "ome_tiff_xml_dict() (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata method)": [[255, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.ome_tiff_xml_dict"]], "shape (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata property)": [[255, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.shape"]], "to_xml() (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata method)": [[255, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.to_xml"]], "voxel_size (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata property)": [[255, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.voxel_size"]], "write_xml() (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata method)": [[255, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.write_xml"]], "aslm.model.microscope": [[256, "module-aslm.model.microscope"]], "microscope (class in aslm.model.microscope)": [[257, "aslm.model.microscope.Microscope"]], "__init__() (aslm.model.microscope.microscope method)": [[257, "aslm.model.microscope.Microscope.__init__"]], "assemble_device_config_lists() (aslm.model.microscope.microscope method)": [[257, "aslm.model.microscope.Microscope.assemble_device_config_lists"]], "calculate_all_waveform() (aslm.model.microscope.microscope method)": [[257, "aslm.model.microscope.Microscope.calculate_all_waveform"]], "calculate_exposure_sweep_times() (aslm.model.microscope.microscope method)": [[257, "aslm.model.microscope.Microscope.calculate_exposure_sweep_times"]], "configuration (aslm.model.microscope.microscope attribute)": [[257, "aslm.model.microscope.Microscope.configuration"]], "daq (aslm.model.microscope.microscope attribute)": [[257, "aslm.model.microscope.Microscope.daq"]], "data_buffer (aslm.model.microscope.microscope attribute)": [[257, "aslm.model.microscope.Microscope.data_buffer"]], "end_acquisition() (aslm.model.microscope.microscope method)": [[257, "aslm.model.microscope.Microscope.end_acquisition"], [257, "id0"]], "get_readout_time() (aslm.model.microscope.microscope method)": [[257, "aslm.model.microscope.Microscope.get_readout_time"], [257, "id1"]], "get_stage_position() (aslm.model.microscope.microscope method)": [[257, "aslm.model.microscope.Microscope.get_stage_position"]], "load_and_start_devices() (aslm.model.microscope.microscope method)": [[257, "aslm.model.microscope.Microscope.load_and_start_devices"]], "microscope_name (aslm.model.microscope.microscope attribute)": [[257, "aslm.model.microscope.Microscope.microscope_name"]], "move_stage() (aslm.model.microscope.microscope method)": [[257, "aslm.model.microscope.Microscope.move_stage"]], "move_stage_offset() (aslm.model.microscope.microscope method)": [[257, "aslm.model.microscope.Microscope.move_stage_offset"], [257, "id2"]], "number_of_frames (aslm.model.microscope.microscope attribute)": [[257, "aslm.model.microscope.Microscope.number_of_frames"]], "prepare_acquisition() (aslm.model.microscope.microscope method)": [[257, "aslm.model.microscope.Microscope.prepare_acquisition"]], "prepare_next_channel() (aslm.model.microscope.microscope method)": [[257, "aslm.model.microscope.Microscope.prepare_next_channel"]], "stop_stage() (aslm.model.microscope.microscope method)": [[257, "aslm.model.microscope.Microscope.stop_stage"]], "terminate() (aslm.model.microscope.microscope method)": [[257, "aslm.model.microscope.Microscope.terminate"]], "turn_off_lasers() (aslm.model.microscope.microscope method)": [[257, "aslm.model.microscope.Microscope.turn_off_lasers"]], "turn_on_laser() (aslm.model.microscope.microscope method)": [[257, "aslm.model.microscope.Microscope.turn_on_laser"]], "update_data_buffer() (aslm.model.microscope.microscope method)": [[257, "aslm.model.microscope.Microscope.update_data_buffer"], [257, "id3"]], "aslm.model.model": [[258, "module-aslm.model.model"]], "model (class in aslm.model.model)": [[259, "aslm.model.model.Model"]], "use_gpu (aslm.model.model.model attribute)": [[259, "aslm.model.model.Model.USE_GPU"]], "__init__() (aslm.model.model.model method)": [[259, "aslm.model.model.Model.__init__"]], "args (aslm.model.model.model attribute)": [[259, "aslm.model.model.Model.args"]], "change_resolution() (aslm.model.model.model method)": [[259, "aslm.model.model.Model.change_resolution"]], "configuration (aslm.model.model.model attribute)": [[259, "aslm.model.model.Model.configuration"]], "create_pipe() (aslm.model.model.model method)": [[259, "aslm.model.model.Model.create_pipe"], [259, "id0"]], "end_acquisition() (aslm.model.model.model method)": [[259, "aslm.model.model.Model.end_acquisition"], [259, "id1"]], "event_queue (aslm.model.model.model attribute)": [[259, "aslm.model.model.Model.event_queue"]], "get_active_microscope() (aslm.model.model.model method)": [[259, "aslm.model.model.Model.get_active_microscope"]], "get_camera_line_interval_and_exposure_time() (aslm.model.model.model method)": [[259, "aslm.model.model.Model.get_camera_line_interval_and_exposure_time"]], "get_data_buffer() (aslm.model.model.model method)": [[259, "aslm.model.model.Model.get_data_buffer"], [259, "id2"]], "get_feature_list() (aslm.model.model.model method)": [[259, "aslm.model.model.Model.get_feature_list"]], "get_microscope_info() (aslm.model.model.model method)": [[259, "aslm.model.model.Model.get_microscope_info"]], "get_offset_variance_maps() (aslm.model.model.model method)": [[259, "aslm.model.model.Model.get_offset_variance_maps"]], "get_readout_time() (aslm.model.model.model method)": [[259, "aslm.model.model.Model.get_readout_time"]], "get_stage_position() (aslm.model.model.model method)": [[259, "aslm.model.model.Model.get_stage_position"]], "load_feature_list_from_str() (aslm.model.model.model method)": [[259, "aslm.model.model.Model.load_feature_list_from_str"]], "load_feature_records() (aslm.model.model.model method)": [[259, "aslm.model.model.Model.load_feature_records"]], "load_images() (aslm.model.model.model method)": [[259, "aslm.model.model.Model.load_images"]], "move_stage() (aslm.model.model.model method)": [[259, "aslm.model.model.Model.move_stage"], [259, "id3"]], "pause_data_thread() (aslm.model.model.model method)": [[259, "aslm.model.model.Model.pause_data_thread"]], "prepare_acquisition() (aslm.model.model.model method)": [[259, "aslm.model.model.Model.prepare_acquisition"], [259, "id4"]], "release_pipe() (aslm.model.model.model method)": [[259, "aslm.model.model.Model.release_pipe"], [259, "id5"]], "resume_data_thread() (aslm.model.model.model method)": [[259, "aslm.model.model.Model.resume_data_thread"]], "run_acquisition() (aslm.model.model.model method)": [[259, "aslm.model.model.Model.run_acquisition"]], "run_command() (aslm.model.model.model method)": [[259, "aslm.model.model.Model.run_command"], [259, "id6"]], "run_data_process() (aslm.model.model.model method)": [[259, "aslm.model.model.Model.run_data_process"], [259, "id7"]], "run_live_acquisition() (aslm.model.model.model method)": [[259, "aslm.model.model.Model.run_live_acquisition"], [259, "id8"]], "run_single_acquisition() (aslm.model.model.model method)": [[259, "aslm.model.model.Model.run_single_acquisition"]], "run_single_channel_acquisition() (aslm.model.model.model method)": [[259, "aslm.model.model.Model.run_single_channel_acquisition"]], "run_single_channel_acquisition_with_features() (aslm.model.model.model method)": [[259, "aslm.model.model.Model.run_single_channel_acquisition_with_features"]], "run_z_stack_acquisition() (aslm.model.model.model method)": [[259, "aslm.model.model.Model.run_z_stack_acquisition"]], "snap_image() (aslm.model.model.model method)": [[259, "aslm.model.model.Model.snap_image"], [259, "id9"]], "stop_stage() (aslm.model.model.model method)": [[259, "aslm.model.model.Model.stop_stage"]], "update_data_buffer() (aslm.model.model.model method)": [[259, "aslm.model.model.Model.update_data_buffer"], [259, "id10"]], "update_ilastik_setting() (aslm.model.model.model method)": [[259, "aslm.model.model.Model.update_ilastik_setting"]], "aslm.model.waveforms": [[260, "module-aslm.model.waveforms"]], "camera_exposure() (in module aslm.model.waveforms)": [[261, "aslm.model.waveforms.camera_exposure"]], "dc_value() (in module aslm.model.waveforms)": [[262, "aslm.model.waveforms.dc_value"]], "remote_focus_ramp() (in module aslm.model.waveforms)": [[263, "aslm.model.waveforms.remote_focus_ramp"]], "sawtooth() (in module aslm.model.waveforms)": [[264, "aslm.model.waveforms.sawtooth"]], "sine_wave() (in module aslm.model.waveforms)": [[265, "aslm.model.waveforms.sine_wave"]], "single_pulse() (in module aslm.model.waveforms)": [[266, "aslm.model.waveforms.single_pulse"]], "smooth_waveform() (in module aslm.model.waveforms)": [[267, "aslm.model.waveforms.smooth_waveform"]], "square() (in module aslm.model.waveforms)": [[268, "aslm.model.waveforms.square"]], "aslm.tools": [[269, "module-aslm.tools"]], "aslm.tools.beams": [[270, "module-aslm.tools.beams"]], "fit_gaussian_beam_error() (in module aslm.tools.beams)": [[271, "aslm.tools.beams.fit_gaussian_beam_error"]], "fit_gaussian_beam_mse() (in module aslm.tools.beams)": [[272, "aslm.tools.beams.fit_gaussian_beam_mse"]], "gaussian_beam() (in module aslm.tools.beams)": [[273, "aslm.tools.beams.gaussian_beam"]], "aslm.tools.common_dict_tools": [[274, "module-aslm.tools.common_dict_tools"]], "update_stage_dict() (in module aslm.tools.common_dict_tools)": [[275, "aslm.tools.common_dict_tools.update_stage_dict"]], "aslm.tools.common_functions": [[276, "module-aslm.tools.common_functions"]], "variablewithlock (class in aslm.tools.common_functions)": [[277, "aslm.tools.common_functions.VariableWithLock"]], "__init__() (aslm.tools.common_functions.variablewithlock method)": [[277, "aslm.tools.common_functions.VariableWithLock.__init__"]], "build_ref_name() (in module aslm.tools.common_functions)": [[278, "aslm.tools.common_functions.build_ref_name"]], "combine_funcs() (in module aslm.tools.common_functions)": [[279, "aslm.tools.common_functions.combine_funcs"]], "copy_proxy_object() (in module aslm.tools.common_functions)": [[280, "aslm.tools.common_functions.copy_proxy_object"]], "load_module_from_file() (in module aslm.tools.common_functions)": [[281, "aslm.tools.common_functions.load_module_from_file"]], "aslm.tools.decorators": [[282, "module-aslm.tools.decorators"]], "featurelist (class in aslm.tools.decorators)": [[283, "aslm.tools.decorators.FeatureList"]], "__init__() (aslm.tools.decorators.featurelist method)": [[283, "aslm.tools.decorators.FeatureList.__init__"]], "function_timer() (in module aslm.tools.decorators)": [[284, "aslm.tools.decorators.function_timer"]], "aslm.tools.file_functions": [[285, "module-aslm.tools.file_functions"]], "create_save_path() (in module aslm.tools.file_functions)": [[286, "aslm.tools.file_functions.create_save_path"]], "delete_folder() (in module aslm.tools.file_functions)": [[287, "aslm.tools.file_functions.delete_folder"]], "load_yaml_file() (in module aslm.tools.file_functions)": [[288, "aslm.tools.file_functions.load_yaml_file"]], "save_yaml_file() (in module aslm.tools.file_functions)": [[289, "aslm.tools.file_functions.save_yaml_file"]], "aslm.tools.image": [[290, "module-aslm.tools.image"]], "create_arrow_image() (in module aslm.tools.image)": [[291, "aslm.tools.image.create_arrow_image"]], "text_array() (in module aslm.tools.image)": [[292, "aslm.tools.image.text_array"]], "aslm.tools.image_loaders": [[293, "module-aslm.tools.image_loaders"]], "lazytiff (class in aslm.tools.image_loaders)": [[294, "aslm.tools.image_loaders.LazyTiff"]], "__init__() (aslm.tools.image_loaders.lazytiff method)": [[294, "aslm.tools.image_loaders.LazyTiff.__init__"]], "shape (aslm.tools.image_loaders.lazytiff property)": [[294, "aslm.tools.image_loaders.LazyTiff.shape"]], "aslm.tools.main_functions": [[295, "module-aslm.tools.main_functions"]], "create_parser() (in module aslm.tools.main_functions)": [[296, "aslm.tools.main_functions.create_parser"]], "evaluate_parser_input_arguments() (in module aslm.tools.main_functions)": [[297, "aslm.tools.main_functions.evaluate_parser_input_arguments"]], "identify_gpu() (in module aslm.tools.main_functions)": [[298, "aslm.tools.main_functions.identify_gpu"]], "aslm.tools.multipos_table_tools": [[299, "module-aslm.tools.multipos_table_tools"]], "calc_num_tiles() (in module aslm.tools.multipos_table_tools)": [[300, "aslm.tools.multipos_table_tools.calc_num_tiles"]], "compute_tiles_from_bounding_box() (in module aslm.tools.multipos_table_tools)": [[301, "aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box"]], "sign() (in module aslm.tools.multipos_table_tools)": [[302, "aslm.tools.multipos_table_tools.sign"]], "update_table() (in module aslm.tools.multipos_table_tools)": [[303, "aslm.tools.multipos_table_tools.update_table"]], "aslm.tools.project_stats": [[304, "module-aslm.tools.project_stats"]], "countlines() (in module aslm.tools.project_stats)": [[305, "aslm.tools.project_stats.countlines"]], "aslm.tools.sdf": [[306, "module-aslm.tools.sdf"]], "box() (in module aslm.tools.sdf)": [[307, "aslm.tools.sdf.box"]], "sphere() (in module aslm.tools.sdf)": [[308, "aslm.tools.sdf.sphere"]], "volume_from_sdf() (in module aslm.tools.sdf)": [[309, "aslm.tools.sdf.volume_from_sdf"]], "aslm.tools.waveform_template_funcs": [[310, "module-aslm.tools.waveform_template_funcs"]], "get_waveform_template_parameters() (in module aslm.tools.waveform_template_funcs)": [[311, "aslm.tools.waveform_template_funcs.get_waveform_template_parameters"]], "aslm.tools.xml_tools": [[312, "module-aslm.tools.xml_tools"]], "dict_to_xml() (in module aslm.tools.xml_tools)": [[313, "aslm.tools.xml_tools.dict_to_xml"]], "parse_xml() (in module aslm.tools.xml_tools)": [[314, "aslm.tools.xml_tools.parse_xml"]], "aslm.view": [[315, "module-aslm.view"]], "aslm.view.custom_widgets": [[316, "module-aslm.view.custom_widgets"]], "aslm.view.main_window_content": [[317, "module-aslm.view.main_window_content"]], "aslm.view.popups": [[318, "module-aslm.view.popups"]]}})