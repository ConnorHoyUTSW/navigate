Search.setIndex({"docnames": ["_autosummary/aslm.config", "_autosummary/aslm.config.config", "_autosummary/aslm.config.config.build_nested_dict", "_autosummary/aslm.config.config.get_aslm_path", "_autosummary/aslm.config.config.get_configuration_paths", "_autosummary/aslm.config.config.load_configs", "_autosummary/aslm.config.config.update_config_dict", "_autosummary/aslm.controller", "_autosummary/aslm.controller.configuration_controller", "_autosummary/aslm.controller.configuration_controller.ConfigurationController", "_autosummary/aslm.controller.thread_pool", "_autosummary/aslm.controller.thread_pool.SelfLockThread", "_autosummary/aslm.controller.thread_pool.SynchronizedThreadPool", "_autosummary/aslm.controller.thread_pool.ThreadWaitlist", "_autosummary/aslm.model", "_autosummary/aslm.model.analysis", "_autosummary/aslm.model.analysis.boundary_detect", "_autosummary/aslm.model.analysis.boundary_detect.binary_detect", "_autosummary/aslm.model.analysis.boundary_detect.find_tissue_boundary_2d", "_autosummary/aslm.model.analysis.boundary_detect.has_tissue", "_autosummary/aslm.model.analysis.boundary_detect.map_boundary", "_autosummary/aslm.model.analysis.camera", "_autosummary/aslm.model.analysis.camera.compute_flatfield_map", "_autosummary/aslm.model.analysis.camera.compute_noise_sigma", "_autosummary/aslm.model.analysis.camera.compute_scmos_offset_and_variance_map", "_autosummary/aslm.model.analysis.camera.compute_signal_to_noise", "_autosummary/aslm.model.analysis.detection", "_autosummary/aslm.model.analysis.detection.add_median_border", "_autosummary/aslm.model.analysis.detection.combine_images", "_autosummary/aslm.model.analysis.detection.log_detection", "_autosummary/aslm.model.analysis.detection.make_inside_image", "_autosummary/aslm.model.analysis.detection.make_normalized_image", "_autosummary/aslm.model.analysis.detection.make_sphere_3D", "_autosummary/aslm.model.analysis.detection.multiscale_surface_filter_3D", "_autosummary/aslm.model.analysis.detection.surface_filter_gauss_3D", "_autosummary/aslm.model.analysis.detection.three_level_segmentation", "_autosummary/aslm.model.analysis.image_contrast", "_autosummary/aslm.model.analysis.image_contrast.estimate_and_correct_flatfield", "_autosummary/aslm.model.analysis.image_contrast.estimate_image_resolution", "_autosummary/aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy", "_autosummary/aslm.model.analysis.image_contrast.image_intensity", "_autosummary/aslm.model.analysis.image_contrast.normalized_dct_shannon_entropy", "_autosummary/aslm.model.analysis.image_decorrelation", "_autosummary/aslm.model.analysis.image_decorrelation.apodize_image", "_autosummary/aslm.model.analysis.image_decorrelation.get_correlation_coefficient", "_autosummary/aslm.model.analysis.image_decorrelation.get_decorrelation_local_maxima", "_autosummary/aslm.model.analysis.image_decorrelation.get_image_decorrelation", "_autosummary/aslm.model.analysis.image_decorrelation.get_radial_average", "_autosummary/aslm.model.analysis.image_decorrelation.image_to_polar", "_autosummary/aslm.model.analysis.image_decorrelation.linear_map", "_autosummary/aslm.model.analysis.image_decorrelation.main_image_decorr", "_autosummary/aslm.model.analysis.image_transform", "_autosummary/aslm.model.analysis.image_transform.deskew_image", "_autosummary/aslm.model.analysis.image_transform.initiate_gpu", "_autosummary/aslm.model.analysis.spectral_unmixing", "_autosummary/aslm.model.analysis.spectral_unmixing.to_do", "_autosummary/aslm.model.concurrency", "_autosummary/aslm.model.concurrency.concurrency_tools", "_autosummary/aslm.model.concurrency.concurrency_tools.CustodyThread", "_autosummary/aslm.model.concurrency.concurrency_tools.FancyThread", "_autosummary/aslm.model.concurrency.concurrency_tools.MyTestClass", "_autosummary/aslm.model.concurrency.concurrency_tools.ObjectInSubprocess", "_autosummary/aslm.model.concurrency.concurrency_tools.PoliteThread", "_autosummary/aslm.model.concurrency.concurrency_tools.ResultThread", "_autosummary/aslm.model.concurrency.concurrency_tools.SharedNDArray", "_autosummary/aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess", "_autosummary/aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread", "_autosummary/aslm.model.concurrency.concurrency_tools.TestSharedNDArray", "_autosummary/aslm.model.concurrency.proxy_objects", "_autosummary/aslm.model.concurrency.proxy_objects.ProxyManager", "_autosummary/aslm.model.concurrency.proxy_objects.ProxyObject", "_autosummary/aslm.model.concurrency.proxy_objects.launch_custody_thread", "_autosummary/aslm.model.concurrency.proxy_objects.launch_thread", "_autosummary/aslm.model.concurrency.shared_memory", "_autosummary/aslm.model.concurrency.write_parameters", "_autosummary/aslm.model.concurrency.write_parameters.write_Params", "_autosummary/aslm.model.data_sources", "_autosummary/aslm.model.data_sources.bdv_data_source", "_autosummary/aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource", "_autosummary/aslm.model.data_sources.data_source", "_autosummary/aslm.model.data_sources.data_source.DataSource", "_autosummary/aslm.model.data_sources.get_data_source", "_autosummary/aslm.model.data_sources.tiff_data_source", "_autosummary/aslm.model.data_sources.tiff_data_source.TiffDataSource", "_autosummary/aslm.model.data_sources.zarr_data_source", "_autosummary/aslm.model.data_sources.zarr_data_source.ZarrDataSource", "_autosummary/aslm.model.device_startup_functions", "_autosummary/aslm.model.device_startup_functions.DummyDeviceConnection", "_autosummary/aslm.model.device_startup_functions.auto_redial", "_autosummary/aslm.model.device_startup_functions.device_not_found", "_autosummary/aslm.model.device_startup_functions.load_camera_connection", "_autosummary/aslm.model.device_startup_functions.load_devices", "_autosummary/aslm.model.device_startup_functions.load_filter_wheel_connection", "_autosummary/aslm.model.device_startup_functions.load_stages", "_autosummary/aslm.model.device_startup_functions.load_zoom_connection", "_autosummary/aslm.model.device_startup_functions.start_camera", "_autosummary/aslm.model.device_startup_functions.start_daq", "_autosummary/aslm.model.device_startup_functions.start_filter_wheel", "_autosummary/aslm.model.device_startup_functions.start_galvo", "_autosummary/aslm.model.device_startup_functions.start_lasers", "_autosummary/aslm.model.device_startup_functions.start_remote_focus_device", "_autosummary/aslm.model.device_startup_functions.start_shutter", "_autosummary/aslm.model.device_startup_functions.start_stage", "_autosummary/aslm.model.device_startup_functions.start_zoom", "_autosummary/aslm.model.devices", "_autosummary/aslm.model.devices.APIs", "_autosummary/aslm.model.devices.APIs.coherent", "_autosummary/aslm.model.devices.APIs.dynamixel", "_autosummary/aslm.model.devices.APIs.logitech", "_autosummary/aslm.model.devices.APIs.omicron", "_autosummary/aslm.model.devices.camera", "_autosummary/aslm.model.devices.camera.camera_base", "_autosummary/aslm.model.devices.camera.camera_base.CameraBase", "_autosummary/aslm.model.devices.camera.camera_hamamatsu", "_autosummary/aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca", "_autosummary/aslm.model.devices.camera.camera_synthetic", "_autosummary/aslm.model.devices.camera.camera_synthetic.SyntheticCamera", "_autosummary/aslm.model.devices.camera.camera_synthetic.SyntheticCameraController", "_autosummary/aslm.model.devices.daq", "_autosummary/aslm.model.devices.daq.daq_base", "_autosummary/aslm.model.devices.daq.daq_base.DAQBase", "_autosummary/aslm.model.devices.daq.daq_synthetic", "_autosummary/aslm.model.devices.daq.daq_synthetic.SyntheticDAQ", "_autosummary/aslm.model.devices.filter_wheel", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_base", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_synthetic", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel", "_autosummary/aslm.model.devices.galvo", "_autosummary/aslm.model.devices.galvo.galvo_base", "_autosummary/aslm.model.devices.galvo.galvo_base.GalvoBase", "_autosummary/aslm.model.devices.galvo.galvo_synthetic", "_autosummary/aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo", "_autosummary/aslm.model.devices.joystick", "_autosummary/aslm.model.devices.joystick.joystick_base", "_autosummary/aslm.model.devices.joystick.joystick_base.JoystickBase", "_autosummary/aslm.model.devices.joystick.joystick_synthetic", "_autosummary/aslm.model.devices.joystick.joystick_synthetic.SyntheticJoystick", "_autosummary/aslm.model.devices.lasers", "_autosummary/aslm.model.devices.lasers.laser_base", "_autosummary/aslm.model.devices.lasers.laser_base.LaserBase", "_autosummary/aslm.model.devices.lasers.laser_synthetic", "_autosummary/aslm.model.devices.lasers.laser_synthetic.SyntheticLaser", "_autosummary/aslm.model.devices.lasers.laser_trigger_base", "_autosummary/aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase", "_autosummary/aslm.model.devices.lasers.laser_trigger_synthetic", "_autosummary/aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers", "_autosummary/aslm.model.devices.objectives", "_autosummary/aslm.model.devices.objectives.Objective", "_autosummary/aslm.model.devices.remote_focus", "_autosummary/aslm.model.devices.remote_focus.remote_focus_base", "_autosummary/aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase", "_autosummary/aslm.model.devices.remote_focus.remote_focus_equipment_solutions", "_autosummary/aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions", "_autosummary/aslm.model.devices.remote_focus.remote_focus_synthetic", "_autosummary/aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus", "_autosummary/aslm.model.devices.shutter", "_autosummary/aslm.model.devices.shutter.laser_shutter_base", "_autosummary/aslm.model.devices.shutter.laser_shutter_base.ShutterBase", "_autosummary/aslm.model.devices.shutter.laser_shutter_synthetic", "_autosummary/aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter", "_autosummary/aslm.model.devices.stages", "_autosummary/aslm.model.devices.stages.stage_asi", "_autosummary/aslm.model.devices.stages.stage_asi.ASIStage", "_autosummary/aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection", "_autosummary/aslm.model.devices.stages.stage_base", "_autosummary/aslm.model.devices.stages.stage_base.StageBase", "_autosummary/aslm.model.devices.stages.stage_galvo", "_autosummary/aslm.model.devices.stages.stage_galvo.GalvoNIStage", "_autosummary/aslm.model.devices.stages.stage_mcl", "_autosummary/aslm.model.devices.stages.stage_mcl.MCLStage", "_autosummary/aslm.model.devices.stages.stage_mcl.build_MCLStage_connection", "_autosummary/aslm.model.devices.stages.stage_pi", "_autosummary/aslm.model.devices.stages.stage_pi.PIStage", "_autosummary/aslm.model.devices.stages.stage_pi.build_PIStage_connection", "_autosummary/aslm.model.devices.stages.stage_sutter", "_autosummary/aslm.model.devices.stages.stage_sutter.SutterStage", "_autosummary/aslm.model.devices.stages.stage_sutter.build_sutter_stage_connection", "_autosummary/aslm.model.devices.stages.stage_synthetic", "_autosummary/aslm.model.devices.stages.stage_synthetic.SyntheticStage", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection", "_autosummary/aslm.model.devices.zoom", "_autosummary/aslm.model.devices.zoom.zoom_base", "_autosummary/aslm.model.devices.zoom.zoom_base.ZoomBase", "_autosummary/aslm.model.devices.zoom.zoom_synthetic", "_autosummary/aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom", "_autosummary/aslm.model.features", "_autosummary/aslm.model.features.autofocus", "_autosummary/aslm.model.features.autofocus.Autofocus", "_autosummary/aslm.model.features.common_features", "_autosummary/aslm.model.features.common_features.ChangeResolution", "_autosummary/aslm.model.features.common_features.FindTissueSimple2D", "_autosummary/aslm.model.features.common_features.LoopByCount", "_autosummary/aslm.model.features.common_features.PrepareNextChannel", "_autosummary/aslm.model.features.common_features.Snap", "_autosummary/aslm.model.features.common_features.WaitToContinue", "_autosummary/aslm.model.features.common_features.ZStackAcquisition", "_autosummary/aslm.model.features.dummy_detective", "_autosummary/aslm.model.features.dummy_detective.Dummy_Detective", "_autosummary/aslm.model.features.feature_container", "_autosummary/aslm.model.features.feature_container.Container", "_autosummary/aslm.model.features.feature_container.DataContainer", "_autosummary/aslm.model.features.feature_container.DataNode", "_autosummary/aslm.model.features.feature_container.SignalContainer", "_autosummary/aslm.model.features.feature_container.SignalNode", "_autosummary/aslm.model.features.feature_container.TreeNode", "_autosummary/aslm.model.features.feature_container.dummy_True", "_autosummary/aslm.model.features.feature_container.dummy_func", "_autosummary/aslm.model.features.feature_container.get_registered_funcs", "_autosummary/aslm.model.features.feature_container.load_features", "_autosummary/aslm.model.features.image_writer", "_autosummary/aslm.model.features.image_writer.ImageWriter", "_autosummary/aslm.model.features.restful_features", "_autosummary/aslm.model.features.restful_features.IlastikSegmentation", "_autosummary/aslm.model.features.restful_features.prepare_service", "_autosummary/aslm.model.features.volume_search", "_autosummary/aslm.model.features.volume_search.VolumeSearch", "_autosummary/aslm.model.metadata_sources", "_autosummary/aslm.model.metadata_sources.bdv_metadata", "_autosummary/aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata", "_autosummary/aslm.model.metadata_sources.metadata", "_autosummary/aslm.model.metadata_sources.metadata.Metadata", "_autosummary/aslm.model.metadata_sources.metadata.XMLMetadata", "_autosummary/aslm.model.metadata_sources.ome_tiff_metadata", "_autosummary/aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata", "_autosummary/aslm.model.microscope", "_autosummary/aslm.model.microscope.Microscope", "_autosummary/aslm.model.model", "_autosummary/aslm.model.model.Model", "_autosummary/aslm.model.waveforms", "_autosummary/aslm.model.waveforms.camera_exposure", "_autosummary/aslm.model.waveforms.dc_value", "_autosummary/aslm.model.waveforms.remote_focus_ramp", "_autosummary/aslm.model.waveforms.sawtooth", "_autosummary/aslm.model.waveforms.sine_wave", "_autosummary/aslm.model.waveforms.single_pulse", "_autosummary/aslm.model.waveforms.smooth_waveform", "_autosummary/aslm.model.waveforms.square", "_autosummary/aslm.tools", "_autosummary/aslm.tools.beams", "_autosummary/aslm.tools.beams.fit_gaussian_beam_error", "_autosummary/aslm.tools.beams.fit_gaussian_beam_mse", "_autosummary/aslm.tools.beams.gaussian_beam", "_autosummary/aslm.tools.common_dict_tools", "_autosummary/aslm.tools.common_dict_tools.update_settings_common", "_autosummary/aslm.tools.common_dict_tools.update_stage_dict", "_autosummary/aslm.tools.common_functions", "_autosummary/aslm.tools.common_functions.build_ref_name", "_autosummary/aslm.tools.common_functions.combine_funcs", "_autosummary/aslm.tools.common_functions.copy_proxy_object", "_autosummary/aslm.tools.decorators", "_autosummary/aslm.tools.decorators.function_timer", "_autosummary/aslm.tools.file_functions", "_autosummary/aslm.tools.file_functions.create_save_path", "_autosummary/aslm.tools.file_functions.save_yaml_file", "_autosummary/aslm.tools.image", "_autosummary/aslm.tools.image.text_array", "_autosummary/aslm.tools.image_loaders", "_autosummary/aslm.tools.image_loaders.LazyTiff", "_autosummary/aslm.tools.main_functions", "_autosummary/aslm.tools.main_functions.create_parser", "_autosummary/aslm.tools.main_functions.evaluate_parser_input_arguments", "_autosummary/aslm.tools.main_functions.identify_gpu", "_autosummary/aslm.tools.multipos_table_tools", "_autosummary/aslm.tools.multipos_table_tools.calc_num_tiles", "_autosummary/aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box", "_autosummary/aslm.tools.multipos_table_tools.sign", "_autosummary/aslm.tools.multipos_table_tools.update_table", "_autosummary/aslm.tools.project_stats", "_autosummary/aslm.tools.project_stats.countlines", "_autosummary/aslm.tools.xml_tools", "_autosummary/aslm.tools.xml_tools.dict_to_xml", "_autosummary/aslm.tools.xml_tools.parse_xml", "_autosummary/aslm.view", "_autosummary/aslm.view.main_window_content", "_autosummary/aslm.view.main_window_content.acquire_bar_frame", "_autosummary/aslm.view.main_window_content.channel_settings", "_autosummary/aslm.view.main_window_content.channel_settings.channel_settings_frames", "_autosummary/aslm.view.main_window_content.stage_control", "_autosummary/aslm.view.main_window_content.stage_control.stage_control_frames", "_autosummary/aslm.view.menus", "_templates/custom_class", "_templates/custom_module", "api", "config", "contributing", "features", "hacking", "hardware", "implementations", "index", "installation", "userguide"], "filenames": ["_autosummary/aslm.config.rst", "_autosummary/aslm.config.config.rst", "_autosummary/aslm.config.config.build_nested_dict.rst", "_autosummary/aslm.config.config.get_aslm_path.rst", "_autosummary/aslm.config.config.get_configuration_paths.rst", "_autosummary/aslm.config.config.load_configs.rst", "_autosummary/aslm.config.config.update_config_dict.rst", "_autosummary/aslm.controller.rst", "_autosummary/aslm.controller.configuration_controller.rst", "_autosummary/aslm.controller.configuration_controller.ConfigurationController.rst", "_autosummary/aslm.controller.thread_pool.rst", "_autosummary/aslm.controller.thread_pool.SelfLockThread.rst", "_autosummary/aslm.controller.thread_pool.SynchronizedThreadPool.rst", "_autosummary/aslm.controller.thread_pool.ThreadWaitlist.rst", "_autosummary/aslm.model.rst", "_autosummary/aslm.model.analysis.rst", "_autosummary/aslm.model.analysis.boundary_detect.rst", "_autosummary/aslm.model.analysis.boundary_detect.binary_detect.rst", "_autosummary/aslm.model.analysis.boundary_detect.find_tissue_boundary_2d.rst", "_autosummary/aslm.model.analysis.boundary_detect.has_tissue.rst", "_autosummary/aslm.model.analysis.boundary_detect.map_boundary.rst", "_autosummary/aslm.model.analysis.camera.rst", "_autosummary/aslm.model.analysis.camera.compute_flatfield_map.rst", "_autosummary/aslm.model.analysis.camera.compute_noise_sigma.rst", "_autosummary/aslm.model.analysis.camera.compute_scmos_offset_and_variance_map.rst", "_autosummary/aslm.model.analysis.camera.compute_signal_to_noise.rst", "_autosummary/aslm.model.analysis.detection.rst", "_autosummary/aslm.model.analysis.detection.add_median_border.rst", "_autosummary/aslm.model.analysis.detection.combine_images.rst", "_autosummary/aslm.model.analysis.detection.log_detection.rst", "_autosummary/aslm.model.analysis.detection.make_inside_image.rst", "_autosummary/aslm.model.analysis.detection.make_normalized_image.rst", "_autosummary/aslm.model.analysis.detection.make_sphere_3D.rst", "_autosummary/aslm.model.analysis.detection.multiscale_surface_filter_3D.rst", "_autosummary/aslm.model.analysis.detection.surface_filter_gauss_3D.rst", "_autosummary/aslm.model.analysis.detection.three_level_segmentation.rst", "_autosummary/aslm.model.analysis.image_contrast.rst", "_autosummary/aslm.model.analysis.image_contrast.estimate_and_correct_flatfield.rst", "_autosummary/aslm.model.analysis.image_contrast.estimate_image_resolution.rst", "_autosummary/aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy.rst", "_autosummary/aslm.model.analysis.image_contrast.image_intensity.rst", "_autosummary/aslm.model.analysis.image_contrast.normalized_dct_shannon_entropy.rst", "_autosummary/aslm.model.analysis.image_decorrelation.rst", "_autosummary/aslm.model.analysis.image_decorrelation.apodize_image.rst", "_autosummary/aslm.model.analysis.image_decorrelation.get_correlation_coefficient.rst", "_autosummary/aslm.model.analysis.image_decorrelation.get_decorrelation_local_maxima.rst", "_autosummary/aslm.model.analysis.image_decorrelation.get_image_decorrelation.rst", "_autosummary/aslm.model.analysis.image_decorrelation.get_radial_average.rst", "_autosummary/aslm.model.analysis.image_decorrelation.image_to_polar.rst", "_autosummary/aslm.model.analysis.image_decorrelation.linear_map.rst", "_autosummary/aslm.model.analysis.image_decorrelation.main_image_decorr.rst", "_autosummary/aslm.model.analysis.image_transform.rst", "_autosummary/aslm.model.analysis.image_transform.deskew_image.rst", "_autosummary/aslm.model.analysis.image_transform.initiate_gpu.rst", "_autosummary/aslm.model.analysis.spectral_unmixing.rst", "_autosummary/aslm.model.analysis.spectral_unmixing.to_do.rst", "_autosummary/aslm.model.concurrency.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.CustodyThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.FancyThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.MyTestClass.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.ObjectInSubprocess.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.PoliteThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.ResultThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.SharedNDArray.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.TestSharedNDArray.rst", "_autosummary/aslm.model.concurrency.proxy_objects.rst", "_autosummary/aslm.model.concurrency.proxy_objects.ProxyManager.rst", "_autosummary/aslm.model.concurrency.proxy_objects.ProxyObject.rst", "_autosummary/aslm.model.concurrency.proxy_objects.launch_custody_thread.rst", "_autosummary/aslm.model.concurrency.proxy_objects.launch_thread.rst", "_autosummary/aslm.model.concurrency.shared_memory.rst", "_autosummary/aslm.model.concurrency.write_parameters.rst", "_autosummary/aslm.model.concurrency.write_parameters.write_Params.rst", "_autosummary/aslm.model.data_sources.rst", "_autosummary/aslm.model.data_sources.bdv_data_source.rst", "_autosummary/aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.rst", "_autosummary/aslm.model.data_sources.data_source.rst", "_autosummary/aslm.model.data_sources.data_source.DataSource.rst", "_autosummary/aslm.model.data_sources.get_data_source.rst", "_autosummary/aslm.model.data_sources.tiff_data_source.rst", "_autosummary/aslm.model.data_sources.tiff_data_source.TiffDataSource.rst", "_autosummary/aslm.model.data_sources.zarr_data_source.rst", "_autosummary/aslm.model.data_sources.zarr_data_source.ZarrDataSource.rst", "_autosummary/aslm.model.device_startup_functions.rst", "_autosummary/aslm.model.device_startup_functions.DummyDeviceConnection.rst", "_autosummary/aslm.model.device_startup_functions.auto_redial.rst", "_autosummary/aslm.model.device_startup_functions.device_not_found.rst", "_autosummary/aslm.model.device_startup_functions.load_camera_connection.rst", "_autosummary/aslm.model.device_startup_functions.load_devices.rst", "_autosummary/aslm.model.device_startup_functions.load_filter_wheel_connection.rst", "_autosummary/aslm.model.device_startup_functions.load_stages.rst", "_autosummary/aslm.model.device_startup_functions.load_zoom_connection.rst", "_autosummary/aslm.model.device_startup_functions.start_camera.rst", "_autosummary/aslm.model.device_startup_functions.start_daq.rst", "_autosummary/aslm.model.device_startup_functions.start_filter_wheel.rst", "_autosummary/aslm.model.device_startup_functions.start_galvo.rst", "_autosummary/aslm.model.device_startup_functions.start_lasers.rst", "_autosummary/aslm.model.device_startup_functions.start_remote_focus_device.rst", "_autosummary/aslm.model.device_startup_functions.start_shutter.rst", "_autosummary/aslm.model.device_startup_functions.start_stage.rst", "_autosummary/aslm.model.device_startup_functions.start_zoom.rst", "_autosummary/aslm.model.devices.rst", "_autosummary/aslm.model.devices.APIs.rst", "_autosummary/aslm.model.devices.APIs.coherent.rst", "_autosummary/aslm.model.devices.APIs.dynamixel.rst", "_autosummary/aslm.model.devices.APIs.logitech.rst", "_autosummary/aslm.model.devices.APIs.omicron.rst", "_autosummary/aslm.model.devices.camera.rst", "_autosummary/aslm.model.devices.camera.camera_base.rst", "_autosummary/aslm.model.devices.camera.camera_base.CameraBase.rst", "_autosummary/aslm.model.devices.camera.camera_hamamatsu.rst", "_autosummary/aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.rst", "_autosummary/aslm.model.devices.camera.camera_synthetic.rst", "_autosummary/aslm.model.devices.camera.camera_synthetic.SyntheticCamera.rst", "_autosummary/aslm.model.devices.camera.camera_synthetic.SyntheticCameraController.rst", "_autosummary/aslm.model.devices.daq.rst", "_autosummary/aslm.model.devices.daq.daq_base.rst", "_autosummary/aslm.model.devices.daq.daq_base.DAQBase.rst", "_autosummary/aslm.model.devices.daq.daq_synthetic.rst", "_autosummary/aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.rst", "_autosummary/aslm.model.devices.filter_wheel.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_base.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_synthetic.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.rst", "_autosummary/aslm.model.devices.galvo.rst", "_autosummary/aslm.model.devices.galvo.galvo_base.rst", "_autosummary/aslm.model.devices.galvo.galvo_base.GalvoBase.rst", "_autosummary/aslm.model.devices.galvo.galvo_synthetic.rst", "_autosummary/aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.rst", "_autosummary/aslm.model.devices.joystick.rst", "_autosummary/aslm.model.devices.joystick.joystick_base.rst", "_autosummary/aslm.model.devices.joystick.joystick_base.JoystickBase.rst", "_autosummary/aslm.model.devices.joystick.joystick_synthetic.rst", "_autosummary/aslm.model.devices.joystick.joystick_synthetic.SyntheticJoystick.rst", "_autosummary/aslm.model.devices.lasers.rst", "_autosummary/aslm.model.devices.lasers.laser_base.rst", "_autosummary/aslm.model.devices.lasers.laser_base.LaserBase.rst", "_autosummary/aslm.model.devices.lasers.laser_synthetic.rst", "_autosummary/aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.rst", "_autosummary/aslm.model.devices.lasers.laser_trigger_base.rst", "_autosummary/aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase.rst", "_autosummary/aslm.model.devices.lasers.laser_trigger_synthetic.rst", "_autosummary/aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers.rst", "_autosummary/aslm.model.devices.objectives.rst", "_autosummary/aslm.model.devices.objectives.Objective.rst", "_autosummary/aslm.model.devices.remote_focus.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_base.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_equipment_solutions.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_synthetic.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.rst", "_autosummary/aslm.model.devices.shutter.rst", "_autosummary/aslm.model.devices.shutter.laser_shutter_base.rst", "_autosummary/aslm.model.devices.shutter.laser_shutter_base.ShutterBase.rst", "_autosummary/aslm.model.devices.shutter.laser_shutter_synthetic.rst", "_autosummary/aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.rst", "_autosummary/aslm.model.devices.stages.rst", "_autosummary/aslm.model.devices.stages.stage_asi.rst", "_autosummary/aslm.model.devices.stages.stage_asi.ASIStage.rst", "_autosummary/aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection.rst", "_autosummary/aslm.model.devices.stages.stage_base.rst", "_autosummary/aslm.model.devices.stages.stage_base.StageBase.rst", "_autosummary/aslm.model.devices.stages.stage_galvo.rst", "_autosummary/aslm.model.devices.stages.stage_galvo.GalvoNIStage.rst", "_autosummary/aslm.model.devices.stages.stage_mcl.rst", "_autosummary/aslm.model.devices.stages.stage_mcl.MCLStage.rst", "_autosummary/aslm.model.devices.stages.stage_mcl.build_MCLStage_connection.rst", "_autosummary/aslm.model.devices.stages.stage_pi.rst", "_autosummary/aslm.model.devices.stages.stage_pi.PIStage.rst", "_autosummary/aslm.model.devices.stages.stage_pi.build_PIStage_connection.rst", "_autosummary/aslm.model.devices.stages.stage_sutter.rst", "_autosummary/aslm.model.devices.stages.stage_sutter.SutterStage.rst", "_autosummary/aslm.model.devices.stages.stage_sutter.build_sutter_stage_connection.rst", "_autosummary/aslm.model.devices.stages.stage_synthetic.rst", "_autosummary/aslm.model.devices.stages.stage_synthetic.SyntheticStage.rst", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.rst", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.rst", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection.rst", "_autosummary/aslm.model.devices.zoom.rst", "_autosummary/aslm.model.devices.zoom.zoom_base.rst", "_autosummary/aslm.model.devices.zoom.zoom_base.ZoomBase.rst", "_autosummary/aslm.model.devices.zoom.zoom_synthetic.rst", "_autosummary/aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.rst", "_autosummary/aslm.model.features.rst", "_autosummary/aslm.model.features.autofocus.rst", "_autosummary/aslm.model.features.autofocus.Autofocus.rst", "_autosummary/aslm.model.features.common_features.rst", "_autosummary/aslm.model.features.common_features.ChangeResolution.rst", "_autosummary/aslm.model.features.common_features.FindTissueSimple2D.rst", "_autosummary/aslm.model.features.common_features.LoopByCount.rst", "_autosummary/aslm.model.features.common_features.PrepareNextChannel.rst", "_autosummary/aslm.model.features.common_features.Snap.rst", "_autosummary/aslm.model.features.common_features.WaitToContinue.rst", "_autosummary/aslm.model.features.common_features.ZStackAcquisition.rst", "_autosummary/aslm.model.features.dummy_detective.rst", "_autosummary/aslm.model.features.dummy_detective.Dummy_Detective.rst", "_autosummary/aslm.model.features.feature_container.rst", "_autosummary/aslm.model.features.feature_container.Container.rst", "_autosummary/aslm.model.features.feature_container.DataContainer.rst", "_autosummary/aslm.model.features.feature_container.DataNode.rst", "_autosummary/aslm.model.features.feature_container.SignalContainer.rst", "_autosummary/aslm.model.features.feature_container.SignalNode.rst", "_autosummary/aslm.model.features.feature_container.TreeNode.rst", "_autosummary/aslm.model.features.feature_container.dummy_True.rst", "_autosummary/aslm.model.features.feature_container.dummy_func.rst", "_autosummary/aslm.model.features.feature_container.get_registered_funcs.rst", "_autosummary/aslm.model.features.feature_container.load_features.rst", "_autosummary/aslm.model.features.image_writer.rst", "_autosummary/aslm.model.features.image_writer.ImageWriter.rst", "_autosummary/aslm.model.features.restful_features.rst", "_autosummary/aslm.model.features.restful_features.IlastikSegmentation.rst", "_autosummary/aslm.model.features.restful_features.prepare_service.rst", "_autosummary/aslm.model.features.volume_search.rst", "_autosummary/aslm.model.features.volume_search.VolumeSearch.rst", "_autosummary/aslm.model.metadata_sources.rst", "_autosummary/aslm.model.metadata_sources.bdv_metadata.rst", "_autosummary/aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.rst", "_autosummary/aslm.model.metadata_sources.metadata.rst", "_autosummary/aslm.model.metadata_sources.metadata.Metadata.rst", "_autosummary/aslm.model.metadata_sources.metadata.XMLMetadata.rst", "_autosummary/aslm.model.metadata_sources.ome_tiff_metadata.rst", "_autosummary/aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.rst", "_autosummary/aslm.model.microscope.rst", "_autosummary/aslm.model.microscope.Microscope.rst", "_autosummary/aslm.model.model.rst", "_autosummary/aslm.model.model.Model.rst", "_autosummary/aslm.model.waveforms.rst", "_autosummary/aslm.model.waveforms.camera_exposure.rst", "_autosummary/aslm.model.waveforms.dc_value.rst", "_autosummary/aslm.model.waveforms.remote_focus_ramp.rst", "_autosummary/aslm.model.waveforms.sawtooth.rst", "_autosummary/aslm.model.waveforms.sine_wave.rst", "_autosummary/aslm.model.waveforms.single_pulse.rst", "_autosummary/aslm.model.waveforms.smooth_waveform.rst", "_autosummary/aslm.model.waveforms.square.rst", "_autosummary/aslm.tools.rst", "_autosummary/aslm.tools.beams.rst", "_autosummary/aslm.tools.beams.fit_gaussian_beam_error.rst", "_autosummary/aslm.tools.beams.fit_gaussian_beam_mse.rst", "_autosummary/aslm.tools.beams.gaussian_beam.rst", "_autosummary/aslm.tools.common_dict_tools.rst", "_autosummary/aslm.tools.common_dict_tools.update_settings_common.rst", "_autosummary/aslm.tools.common_dict_tools.update_stage_dict.rst", "_autosummary/aslm.tools.common_functions.rst", "_autosummary/aslm.tools.common_functions.build_ref_name.rst", "_autosummary/aslm.tools.common_functions.combine_funcs.rst", "_autosummary/aslm.tools.common_functions.copy_proxy_object.rst", "_autosummary/aslm.tools.decorators.rst", "_autosummary/aslm.tools.decorators.function_timer.rst", "_autosummary/aslm.tools.file_functions.rst", "_autosummary/aslm.tools.file_functions.create_save_path.rst", "_autosummary/aslm.tools.file_functions.save_yaml_file.rst", "_autosummary/aslm.tools.image.rst", "_autosummary/aslm.tools.image.text_array.rst", "_autosummary/aslm.tools.image_loaders.rst", "_autosummary/aslm.tools.image_loaders.LazyTiff.rst", "_autosummary/aslm.tools.main_functions.rst", "_autosummary/aslm.tools.main_functions.create_parser.rst", "_autosummary/aslm.tools.main_functions.evaluate_parser_input_arguments.rst", "_autosummary/aslm.tools.main_functions.identify_gpu.rst", "_autosummary/aslm.tools.multipos_table_tools.rst", "_autosummary/aslm.tools.multipos_table_tools.calc_num_tiles.rst", "_autosummary/aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box.rst", "_autosummary/aslm.tools.multipos_table_tools.sign.rst", "_autosummary/aslm.tools.multipos_table_tools.update_table.rst", "_autosummary/aslm.tools.project_stats.rst", "_autosummary/aslm.tools.project_stats.countlines.rst", "_autosummary/aslm.tools.xml_tools.rst", "_autosummary/aslm.tools.xml_tools.dict_to_xml.rst", "_autosummary/aslm.tools.xml_tools.parse_xml.rst", "_autosummary/aslm.view.rst", "_autosummary/aslm.view.main_window_content.rst", "_autosummary/aslm.view.main_window_content.acquire_bar_frame.rst", "_autosummary/aslm.view.main_window_content.channel_settings.rst", "_autosummary/aslm.view.main_window_content.channel_settings.channel_settings_frames.rst", "_autosummary/aslm.view.main_window_content.stage_control.rst", "_autosummary/aslm.view.main_window_content.stage_control.stage_control_frames.rst", "_autosummary/aslm.view.menus.rst", "_templates/custom_class.rst", "_templates/custom_module.rst", "api.rst", "config.rst", "contributing.rst", "features.rst", "hacking.rst", "hardware.rst", "implementations.rst", "index.rst", "installation.rst", "userguide.rst"], "titles": ["aslm.config", "aslm.config.config", "aslm.config.config.build_nested_dict", "aslm.config.config.get_aslm_path", "aslm.config.config.get_configuration_paths", "aslm.config.config.load_configs", "aslm.config.config.update_config_dict", "aslm.controller", "aslm.controller.configuration_controller", "aslm.controller.configuration_controller.ConfigurationController", "aslm.controller.thread_pool", "aslm.controller.thread_pool.SelfLockThread", "aslm.controller.thread_pool.SynchronizedThreadPool", "aslm.controller.thread_pool.ThreadWaitlist", "aslm.model", "aslm.model.analysis", "aslm.model.analysis.boundary_detect", "aslm.model.analysis.boundary_detect.binary_detect", "aslm.model.analysis.boundary_detect.find_tissue_boundary_2d", "aslm.model.analysis.boundary_detect.has_tissue", "aslm.model.analysis.boundary_detect.map_boundary", "aslm.model.analysis.camera", "aslm.model.analysis.camera.compute_flatfield_map", "aslm.model.analysis.camera.compute_noise_sigma", "aslm.model.analysis.camera.compute_scmos_offset_and_variance_map", "aslm.model.analysis.camera.compute_signal_to_noise", "aslm.model.analysis.detection", "aslm.model.analysis.detection.add_median_border", "aslm.model.analysis.detection.combine_images", "aslm.model.analysis.detection.log_detection", "aslm.model.analysis.detection.make_inside_image", "aslm.model.analysis.detection.make_normalized_image", "aslm.model.analysis.detection.make_sphere_3D", "aslm.model.analysis.detection.multiscale_surface_filter_3D", "aslm.model.analysis.detection.surface_filter_gauss_3D", "aslm.model.analysis.detection.three_level_segmentation", "aslm.model.analysis.image_contrast", "aslm.model.analysis.image_contrast.estimate_and_correct_flatfield", "aslm.model.analysis.image_contrast.estimate_image_resolution", "aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy", "aslm.model.analysis.image_contrast.image_intensity", "aslm.model.analysis.image_contrast.normalized_dct_shannon_entropy", "aslm.model.analysis.image_decorrelation", "aslm.model.analysis.image_decorrelation.apodize_image", "aslm.model.analysis.image_decorrelation.get_correlation_coefficient", "aslm.model.analysis.image_decorrelation.get_decorrelation_local_maxima", "aslm.model.analysis.image_decorrelation.get_image_decorrelation", "aslm.model.analysis.image_decorrelation.get_radial_average", "aslm.model.analysis.image_decorrelation.image_to_polar", "aslm.model.analysis.image_decorrelation.linear_map", "aslm.model.analysis.image_decorrelation.main_image_decorr", "aslm.model.analysis.image_transform", "aslm.model.analysis.image_transform.deskew_image", "aslm.model.analysis.image_transform.initiate_gpu", "aslm.model.analysis.spectral_unmixing", "aslm.model.analysis.spectral_unmixing.to_do", "aslm.model.concurrency", "aslm.model.concurrency.concurrency_tools", "aslm.model.concurrency.concurrency_tools.CustodyThread", "aslm.model.concurrency.concurrency_tools.FancyThread", "aslm.model.concurrency.concurrency_tools.MyTestClass", "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess", "aslm.model.concurrency.concurrency_tools.PoliteThread", "aslm.model.concurrency.concurrency_tools.ResultThread", "aslm.model.concurrency.concurrency_tools.SharedNDArray", "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess", "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread", "aslm.model.concurrency.concurrency_tools.TestSharedNDArray", "aslm.model.concurrency.proxy_objects", "aslm.model.concurrency.proxy_objects.ProxyManager", "aslm.model.concurrency.proxy_objects.ProxyObject", "aslm.model.concurrency.proxy_objects.launch_custody_thread", "aslm.model.concurrency.proxy_objects.launch_thread", "aslm.model.concurrency.shared_memory", "aslm.model.concurrency.write_parameters", "aslm.model.concurrency.write_parameters.write_Params", "aslm.model.data_sources", "aslm.model.data_sources.bdv_data_source", "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource", "aslm.model.data_sources.data_source", "aslm.model.data_sources.data_source.DataSource", "aslm.model.data_sources.get_data_source", "aslm.model.data_sources.tiff_data_source", "aslm.model.data_sources.tiff_data_source.TiffDataSource", "aslm.model.data_sources.zarr_data_source", "aslm.model.data_sources.zarr_data_source.ZarrDataSource", "aslm.model.device_startup_functions", "aslm.model.device_startup_functions.DummyDeviceConnection", "aslm.model.device_startup_functions.auto_redial", "aslm.model.device_startup_functions.device_not_found", "aslm.model.device_startup_functions.load_camera_connection", "aslm.model.device_startup_functions.load_devices", "aslm.model.device_startup_functions.load_filter_wheel_connection", "aslm.model.device_startup_functions.load_stages", "aslm.model.device_startup_functions.load_zoom_connection", "aslm.model.device_startup_functions.start_camera", "aslm.model.device_startup_functions.start_daq", "aslm.model.device_startup_functions.start_filter_wheel", "aslm.model.device_startup_functions.start_galvo", "aslm.model.device_startup_functions.start_lasers", "aslm.model.device_startup_functions.start_remote_focus_device", "aslm.model.device_startup_functions.start_shutter", "aslm.model.device_startup_functions.start_stage", "aslm.model.device_startup_functions.start_zoom", "aslm.model.devices", "aslm.model.devices.APIs", "aslm.model.devices.APIs.coherent", "aslm.model.devices.APIs.dynamixel", "aslm.model.devices.APIs.logitech", "aslm.model.devices.APIs.omicron", "aslm.model.devices.camera", "aslm.model.devices.camera.camera_base", "aslm.model.devices.camera.camera_base.CameraBase", "aslm.model.devices.camera.camera_hamamatsu", "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca", "aslm.model.devices.camera.camera_synthetic", "aslm.model.devices.camera.camera_synthetic.SyntheticCamera", "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController", "aslm.model.devices.daq", "aslm.model.devices.daq.daq_base", "aslm.model.devices.daq.daq_base.DAQBase", "aslm.model.devices.daq.daq_synthetic", "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ", "aslm.model.devices.filter_wheel", "aslm.model.devices.filter_wheel.filter_wheel_base", "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase", "aslm.model.devices.filter_wheel.filter_wheel_sutter", "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel", "aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection", "aslm.model.devices.filter_wheel.filter_wheel_synthetic", "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel", "aslm.model.devices.galvo", "aslm.model.devices.galvo.galvo_base", "aslm.model.devices.galvo.galvo_base.GalvoBase", "aslm.model.devices.galvo.galvo_synthetic", "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo", "aslm.model.devices.joystick", "aslm.model.devices.joystick.joystick_base", "aslm.model.devices.joystick.joystick_base.JoystickBase", "aslm.model.devices.joystick.joystick_synthetic", "aslm.model.devices.joystick.joystick_synthetic.SyntheticJoystick", "aslm.model.devices.lasers", "aslm.model.devices.lasers.laser_base", "aslm.model.devices.lasers.laser_base.LaserBase", "aslm.model.devices.lasers.laser_synthetic", "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser", "aslm.model.devices.lasers.laser_trigger_base", "aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase", "aslm.model.devices.lasers.laser_trigger_synthetic", "aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers", "aslm.model.devices.objectives", "aslm.model.devices.objectives.Objective", "aslm.model.devices.remote_focus", "aslm.model.devices.remote_focus.remote_focus_base", "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase", "aslm.model.devices.remote_focus.remote_focus_equipment_solutions", "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions", "aslm.model.devices.remote_focus.remote_focus_synthetic", "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus", "aslm.model.devices.shutter", "aslm.model.devices.shutter.laser_shutter_base", "aslm.model.devices.shutter.laser_shutter_base.ShutterBase", "aslm.model.devices.shutter.laser_shutter_synthetic", "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter", "aslm.model.devices.stages", "aslm.model.devices.stages.stage_asi", "aslm.model.devices.stages.stage_asi.ASIStage", "aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection", "aslm.model.devices.stages.stage_base", "aslm.model.devices.stages.stage_base.StageBase", "aslm.model.devices.stages.stage_galvo", "aslm.model.devices.stages.stage_galvo.GalvoNIStage", "aslm.model.devices.stages.stage_mcl", "aslm.model.devices.stages.stage_mcl.MCLStage", "aslm.model.devices.stages.stage_mcl.build_MCLStage_connection", "aslm.model.devices.stages.stage_pi", "aslm.model.devices.stages.stage_pi.PIStage", "aslm.model.devices.stages.stage_pi.build_PIStage_connection", "aslm.model.devices.stages.stage_sutter", "aslm.model.devices.stages.stage_sutter.SutterStage", "aslm.model.devices.stages.stage_sutter.build_sutter_stage_connection", "aslm.model.devices.stages.stage_synthetic", "aslm.model.devices.stages.stage_synthetic.SyntheticStage", "aslm.model.devices.stages.stage_tl_kcube_inertial", "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage", "aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection", "aslm.model.devices.zoom", "aslm.model.devices.zoom.zoom_base", "aslm.model.devices.zoom.zoom_base.ZoomBase", "aslm.model.devices.zoom.zoom_synthetic", "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom", "aslm.model.features", "aslm.model.features.autofocus", "aslm.model.features.autofocus.Autofocus", "aslm.model.features.common_features", "aslm.model.features.common_features.ChangeResolution", "aslm.model.features.common_features.FindTissueSimple2D", "aslm.model.features.common_features.LoopByCount", "aslm.model.features.common_features.PrepareNextChannel", "aslm.model.features.common_features.Snap", "aslm.model.features.common_features.WaitToContinue", "aslm.model.features.common_features.ZStackAcquisition", "aslm.model.features.dummy_detective", "aslm.model.features.dummy_detective.Dummy_Detective", "aslm.model.features.feature_container", "aslm.model.features.feature_container.Container", "aslm.model.features.feature_container.DataContainer", "aslm.model.features.feature_container.DataNode", "aslm.model.features.feature_container.SignalContainer", "aslm.model.features.feature_container.SignalNode", "aslm.model.features.feature_container.TreeNode", "aslm.model.features.feature_container.dummy_True", "aslm.model.features.feature_container.dummy_func", "aslm.model.features.feature_container.get_registered_funcs", "aslm.model.features.feature_container.load_features", "aslm.model.features.image_writer", "aslm.model.features.image_writer.ImageWriter", "aslm.model.features.restful_features", "aslm.model.features.restful_features.IlastikSegmentation", "aslm.model.features.restful_features.prepare_service", "aslm.model.features.volume_search", "aslm.model.features.volume_search.VolumeSearch", "aslm.model.metadata_sources", "aslm.model.metadata_sources.bdv_metadata", "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata", "aslm.model.metadata_sources.metadata", "aslm.model.metadata_sources.metadata.Metadata", "aslm.model.metadata_sources.metadata.XMLMetadata", "aslm.model.metadata_sources.ome_tiff_metadata", "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata", "aslm.model.microscope", "aslm.model.microscope.Microscope", "aslm.model.model", "aslm.model.model.Model", "aslm.model.waveforms", "aslm.model.waveforms.camera_exposure", "aslm.model.waveforms.dc_value", "aslm.model.waveforms.remote_focus_ramp", "aslm.model.waveforms.sawtooth", "aslm.model.waveforms.sine_wave", "aslm.model.waveforms.single_pulse", "aslm.model.waveforms.smooth_waveform", "aslm.model.waveforms.square", "aslm.tools", "aslm.tools.beams", "aslm.tools.beams.fit_gaussian_beam_error", "aslm.tools.beams.fit_gaussian_beam_mse", "aslm.tools.beams.gaussian_beam", "aslm.tools.common_dict_tools", "aslm.tools.common_dict_tools.update_settings_common", "aslm.tools.common_dict_tools.update_stage_dict", "aslm.tools.common_functions", "aslm.tools.common_functions.build_ref_name", "aslm.tools.common_functions.combine_funcs", "aslm.tools.common_functions.copy_proxy_object", "aslm.tools.decorators", "aslm.tools.decorators.function_timer", "aslm.tools.file_functions", "aslm.tools.file_functions.create_save_path", "aslm.tools.file_functions.save_yaml_file", "aslm.tools.image", "aslm.tools.image.text_array", "aslm.tools.image_loaders", "aslm.tools.image_loaders.LazyTiff", "aslm.tools.main_functions", "aslm.tools.main_functions.create_parser", "aslm.tools.main_functions.evaluate_parser_input_arguments", "aslm.tools.main_functions.identify_gpu", "aslm.tools.multipos_table_tools", "aslm.tools.multipos_table_tools.calc_num_tiles", "aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box", "aslm.tools.multipos_table_tools.sign", "aslm.tools.multipos_table_tools.update_table", "aslm.tools.project_stats", "aslm.tools.project_stats.countlines", "aslm.tools.xml_tools", "aslm.tools.xml_tools.dict_to_xml", "aslm.tools.xml_tools.parse_xml", "aslm.view", "aslm.view.main_window_content", "aslm.view.main_window_content.acquire_bar_frame", "aslm.view.main_window_content.channel_settings", "aslm.view.main_window_content.channel_settings.channel_settings_frames", "aslm.view.main_window_content.stage_control", "aslm.view.main_window_content.stage_control.stage_control_frames", "aslm.view.menus", "&lt;no title&gt;", "&lt;no title&gt;", "API Reference", "Configuring ASLM", "Contributing Guidelines", "ASLM feature container", "Extending ASLM", "Hardware Setup", "Microscope Implementations", "<strong>Autonomous Software for Light Microscopy</strong>", "Software Installation", "User Guide"], "terms": {"modul": [0, 7, 11, 14, 15, 56, 58, 63, 64, 71, 72, 76, 104, 105, 106, 107, 108, 109, 110, 118, 123, 131, 136, 141, 152, 159, 164, 186, 191, 222, 243, 278, 279, 280, 281, 282, 283, 284, 285, 287, 294], "function": [1, 11, 12, 16, 21, 26, 28, 30, 33, 34, 36, 42, 45, 51, 52, 54, 55, 58, 60, 63, 64, 65, 66, 67, 68, 71, 72, 76, 86, 88, 114, 116, 126, 165, 172, 175, 178, 183, 204, 217, 233, 234, 238, 242, 244, 245, 248, 251, 253, 254, 255, 257, 258, 260, 264, 268, 273, 275, 290, 291, 293, 294], "manag": [2, 5, 6, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 112, 114, 116, 120, 122, 161, 163, 166, 169, 171, 176, 188, 293, 296], "parent_dict": [2, 6], "key_nam": 2, "dict_data": 2, "nest": [2, 64, 224, 227, 229], "dictionari": [2, 5, 6, 9, 11, 58, 63, 64, 91, 98, 99, 120, 122, 125, 127, 130, 166, 169, 171, 173, 176, 179, 182, 184, 188, 190, 224, 227, 229, 231, 233, 248, 249, 258, 259, 266, 276, 277, 289, 291], "recurs": [2, 64], "paramet": [2, 4, 5, 6, 9, 12, 22, 23, 24, 37, 60, 64, 65, 66, 67, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 112, 114, 116, 117, 120, 122, 125, 127, 130, 151, 156, 166, 167, 169, 171, 173, 176, 179, 182, 184, 188, 190, 193, 216, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 245, 247, 258, 259, 261, 263, 266, 267, 269, 270, 272, 276, 277, 289], "multiprocess": [2, 5, 6, 69, 90, 93, 95, 166, 169, 171, 176], "share": [2, 5, 6, 58, 64, 69, 70, 71, 122, 233], "object": [2, 5, 6, 9, 11, 12, 13, 58, 60, 61, 63, 64, 65, 69, 70, 71, 75, 80, 87, 88, 95, 97, 98, 99, 100, 101, 102, 103, 112, 114, 116, 117, 120, 125, 133, 138, 143, 147, 154, 161, 163, 166, 167, 169, 171, 176, 188, 193, 195, 196, 197, 198, 199, 200, 201, 203, 205, 210, 216, 218, 221, 226, 231, 233, 249, 263, 265, 266, 267, 272, 289, 294, 295], "e": [2, 4, 5, 6, 9, 23, 64, 83, 114, 116, 125, 127, 128, 130, 167, 179, 180, 216, 227, 263, 269, 291, 293, 296], "g": [2, 5, 6, 9, 64, 83, 114, 116, 125, 127, 128, 130, 151, 167, 179, 180, 216, 227, 263, 269, 291, 293, 296], "dict": [2, 5, 6, 9, 12, 91, 120, 122, 125, 127, 130, 151, 166, 169, 171, 173, 176, 179, 182, 184, 188, 190, 193, 231, 233, 254, 258, 259, 276, 277], "between": [2, 5, 6, 64, 245, 269, 289, 293], "process": [2, 5, 6, 61, 64, 69, 70, 72, 156, 233, 290, 291], "we": [2, 6, 60, 61, 63, 64, 67, 70, 78, 80, 83, 85, 114, 120, 122, 127, 130, 216, 224, 227, 229, 231, 289, 290, 291, 293, 296], "ar": [2, 6, 9, 11, 58, 63, 64, 65, 83, 85, 101, 114, 116, 120, 122, 156, 166, 176, 193, 216, 227, 231, 233, 245, 248, 263, 289, 290, 291, 293, 294, 296], "ad": [2, 6, 60, 63, 64, 166, 265, 272], "str": [2, 3, 4, 6, 9, 12, 22, 24, 60, 64, 65, 66, 67, 78, 80, 83, 85, 95, 97, 98, 99, 100, 101, 102, 103, 112, 114, 116, 117, 120, 122, 125, 127, 128, 130, 151, 156, 161, 163, 166, 167, 169, 171, 173, 176, 179, 180, 182, 184, 188, 216, 224, 227, 229, 231, 233, 247, 258, 259, 261, 263, 266, 276], "name": [2, 6, 9, 11, 12, 58, 60, 61, 63, 64, 65, 66, 67, 78, 80, 83, 85, 95, 97, 98, 99, 100, 101, 102, 103, 112, 114, 116, 117, 120, 122, 125, 127, 130, 151, 161, 163, 166, 169, 171, 176, 179, 188, 216, 231, 233, 259, 289, 290, 293], "insert": [2, 64, 293], "return": [2, 3, 4, 5, 6, 9, 11, 23, 34, 37, 41, 44, 45, 47, 52, 58, 60, 61, 63, 64, 70, 78, 80, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 112, 114, 116, 117, 120, 122, 125, 127, 130, 151, 156, 163, 166, 167, 169, 171, 173, 176, 179, 182, 184, 188, 190, 193, 224, 226, 227, 229, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 245, 247, 254, 258, 265, 266, 267, 269, 270, 272, 276, 277], "sub": [2, 6, 64, 216], "type": [2, 3, 5, 6, 9, 23, 24, 37, 64, 78, 80, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 114, 117, 120, 122, 125, 127, 128, 130, 151, 156, 161, 163, 166, 167, 169, 171, 173, 176, 179, 180, 182, 184, 188, 190, 224, 226, 227, 229, 231, 233, 236, 237, 238, 239, 240, 241, 242, 245, 247, 254, 258, 261, 265, 267, 269, 270, 272, 276, 277, 289, 295], "exampl": [2, 3, 4, 6, 58, 63, 64, 71, 72, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 166, 169, 171, 173, 176, 179, 182, 184, 235, 236, 237, 238, 239, 240, 242, 245, 267, 289, 290, 291, 296], "establish": [3, 156], "program": [3, 11, 58, 63], "home": 3, "directori": [3, 216, 227, 258, 259, 296], "appdata": [3, 4, 289, 293], "local": [3, 4, 12, 22, 45, 46, 64, 289, 293, 296], "window": [3, 258, 289, 293, 296], "mac": [3, 289, 293, 296], "linux": [3, 289, 293, 296], "path": [3, 4, 5, 64, 147, 149, 233, 258, 263, 266, 290, 296], "c": [3, 4, 64, 229, 289, 296], "user": [3, 4, 64, 156, 233, 258, 267, 289, 293, 295, 296], "usernam": [3, 4, 293, 296], "get": [4, 9, 12, 63, 64, 114, 116, 166, 193, 231, 233, 296], "variou": [4, 66, 67, 289], "configur": [4, 5, 6, 9, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 112, 114, 116, 120, 122, 125, 127, 130, 133, 135, 143, 145, 147, 149, 154, 158, 161, 163, 166, 169, 171, 173, 176, 179, 182, 184, 188, 190, 216, 224, 226, 227, 229, 231, 233, 266, 290, 291, 295, 296, 297], "file": [4, 5, 6, 55, 64, 78, 80, 83, 85, 224, 226, 227, 229, 233, 259, 263, 266, 277, 289, 290, 295, 296], "us": [4, 9, 11, 23, 37, 38, 55, 58, 60, 63, 64, 65, 66, 67, 69, 70, 71, 72, 117, 156, 227, 229, 233, 235, 236, 237, 238, 239, 240, 242, 263, 268, 289, 290, 291, 293, 296], "configuration_path": [4, 233, 266], "contain": [4, 5, 64, 179, 206, 208, 233, 258, 263, 272, 289, 292, 295], "global": [4, 12, 22, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 112, 114, 116, 120, 122, 161, 163, 166, 169, 171, 176, 188, 233], "microscop": [4, 9, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 112, 114, 116, 120, 122, 161, 163, 166, 169, 171, 176, 188, 190, 193, 233, 290, 291, 293, 295, 296], "i": [4, 9, 11, 23, 27, 52, 55, 58, 60, 63, 64, 65, 67, 71, 72, 83, 85, 89, 90, 114, 116, 122, 147, 149, 156, 166, 169, 171, 173, 176, 179, 182, 184, 188, 190, 227, 231, 233, 237, 245, 247, 259, 263, 266, 267, 270, 272, 289, 290, 291, 293, 294, 295, 296], "hardwar": [4, 64, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 112, 114, 116, 161, 163, 166, 169, 171, 173, 176, 179, 182, 184, 188, 216, 290, 291, 295, 296, 297], "setup": [4, 289, 295, 297], "experiment_path": [4, 233, 266], "per": [4, 11, 58, 63, 64, 78, 85, 291, 293], "experi": [4, 147, 149, 216, 224, 226, 227, 229, 233, 259, 266, 290, 296], "waveform_constants_path": [4, 266], "remot": [4, 9, 100, 122, 237, 266, 294], "focu": [4, 9, 100, 122, 166, 169, 176, 193, 224, 237, 270, 291, 293], "all": [4, 11, 12, 58, 60, 63, 64, 65, 66, 67, 83, 114, 116, 120, 122, 166, 169, 171, 173, 176, 179, 182, 184, 231, 233, 263, 269, 289, 290, 291, 293], "magnif": 4, "rest_api_path": [4, 266], "rest": [4, 266, 289], "api": [4, 64, 90, 114, 117, 166, 176, 266, 289, 292, 293, 295], "yaml": [4, 259, 290, 295], "etl_const": 4, "rest_api": 4, "kwarg": [5, 11, 12, 58, 60, 63, 64, 65, 66, 67, 71, 72, 88, 207, 209, 219, 233], "load": [5, 64, 91, 233, 263], "list": [5, 9, 33, 64, 99, 214, 224, 229, 233, 253, 254, 272, 289, 295], "config_dict": 5, "amalgam": 5, "input": [5, 33, 37, 43, 44, 45, 46, 47, 48, 49, 64, 156, 258, 265, 266, 293], "config_nam": 6, "new_config": 6, "bool": [6, 9, 22, 24, 60, 64, 65, 66, 67, 78, 80, 83, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 114, 125, 127, 130, 156, 166, 171, 173, 176, 179, 182, 184, 188, 190, 224, 231, 233, 245, 247, 267, 272], "read": [6, 64, 78, 80, 83, 85, 127, 130, 156, 179, 188, 190], "new": [6, 9, 49, 64, 83, 166, 171, 173, 176, 179, 182, 184, 253, 258, 272, 290, 293, 296], "updat": [6, 64, 179, 231, 233, 248, 249, 272, 289, 295, 296], "info": [6, 9], "subdictionari": 6, "replac": [6, 64, 289], "valu": [6, 9, 11, 41, 49, 58, 63, 64, 114, 117, 166, 169, 171, 173, 176, 179, 182, 184, 188, 190, 227, 236, 269, 289, 291, 296], "class": [8, 9, 10, 11, 12, 13, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 124, 125, 126, 127, 129, 130, 132, 133, 134, 135, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 172, 173, 175, 176, 178, 179, 181, 182, 183, 184, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 215, 216, 217, 218, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 262, 263, 290], "base": [9, 11, 12, 13, 46, 58, 60, 61, 63, 64, 65, 66, 67, 69, 70, 75, 78, 80, 83, 85, 87, 112, 114, 116, 117, 120, 122, 125, 127, 130, 133, 135, 138, 140, 142, 143, 145, 147, 149, 151, 154, 156, 158, 161, 163, 166, 169, 171, 173, 176, 179, 182, 184, 188, 190, 193, 195, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 216, 218, 221, 224, 226, 227, 229, 231, 233, 261, 263, 270, 272, 290, 293, 296], "thi": [9, 11, 52, 55, 58, 60, 61, 63, 64, 65, 66, 67, 70, 71, 72, 78, 80, 83, 85, 114, 116, 122, 166, 169, 171, 173, 176, 179, 182, 184, 227, 231, 233, 247, 248, 249, 253, 254, 258, 268, 269, 270, 289, 290, 291, 293, 294, 295, 296], "The": [9, 11, 12, 58, 63, 64, 71, 72, 88, 122, 156, 166, 171, 173, 176, 179, 182, 184, 237, 241, 269, 289, 293, 295, 296], "microscope_nam": [9, 89, 95, 97, 98, 99, 100, 101, 102, 103, 112, 114, 116, 120, 122, 125, 127, 130, 133, 135, 143, 145, 154, 158, 161, 163, 166, 169, 171, 173, 176, 179, 182, 184, 188, 190], "microscope_config": 9, "change_microscop": 9, "accord": [9, 64, 114, 116, 147, 149], "get_microscope_configuration_dict": 9, "get_stage_position_limit": 9, "suffix": 9, "posit": [9, 45, 64, 83, 125, 127, 130, 166, 169, 171, 173, 176, 179, 182, 184, 188, 190, 193, 224, 231, 233, 269, 270, 272, 289], "limit": [9, 60, 64, 65, 66, 67, 166, 169, 171, 176], "stage": [9, 93, 102, 224, 231, 233, 289, 291, 295], "__init__": [9, 11, 12, 13, 58, 60, 61, 63, 64, 65, 66, 67, 69, 70, 75, 78, 80, 83, 85, 87, 88, 112, 114, 116, 117, 120, 122, 125, 127, 130, 133, 135, 138, 140, 143, 145, 147, 149, 151, 154, 156, 158, 161, 163, 166, 169, 171, 173, 176, 179, 182, 184, 188, 190, 193, 195, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 216, 218, 221, 224, 226, 227, 229, 231, 233, 263, 291], "method": [9, 11, 12, 13, 58, 60, 61, 63, 64, 65, 66, 67, 69, 70, 75, 78, 80, 83, 85, 87, 112, 114, 116, 117, 120, 122, 125, 127, 130, 133, 135, 138, 140, 143, 145, 147, 149, 151, 154, 156, 158, 161, 163, 166, 169, 171, 173, 176, 179, 182, 184, 188, 190, 193, 195, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 216, 218, 221, 224, 226, 227, 229, 231, 233, 263, 291], "attribut": [9, 11, 58, 63, 64, 65, 78, 80, 83, 85, 112, 114, 116, 128, 161, 163, 224, 226, 227, 229, 263], "result": [9, 63, 64, 72, 88, 114, 254], "microscope_configuration_dict": 9, "_min": 9, "_max": 9, "position_limit": 9, "depend": [9, 64, 270, 291, 295], "min": [9, 64, 166, 169, 171, 176, 289], "max": [9, 64, 166, 169, 171, 176, 289, 293], "x": [9, 19, 41, 64, 166, 169, 171, 173, 176, 179, 182, 184, 224, 233, 245, 246, 261, 263, 269, 270, 271, 272, 289], "2000": [9, 64, 289], "y": [9, 19, 34, 41, 64, 166, 169, 176, 179, 224, 233, 261, 263, 270, 272, 289], "z": [9, 34, 64, 83, 151, 166, 169, 176, 179, 224, 245, 247, 270, 272, 289, 291], "theta": [9, 166, 169, 171, 173, 176, 179, 182, 184, 224, 270, 289], "0": [9, 23, 29, 46, 64, 88, 90, 98, 99, 102, 114, 116, 125, 127, 128, 130, 133, 135, 166, 169, 171, 173, 176, 179, 182, 184, 188, 190, 193, 196, 229, 233, 235, 236, 237, 238, 239, 240, 242, 245, 247, 261, 269, 274, 289, 294], "f": [9, 63, 64, 166, 224, 270, 272, 289, 294], "properti": [9, 11, 58, 63, 64, 78, 80, 83, 85, 114, 116, 151, 224, 226, 227, 229, 291], "camera_config_dict": 9, "camera": [9, 64, 85, 90, 95, 120, 122, 231, 233, 235, 289, 294, 295], "camera_set": 9, "set": [9, 11, 22, 58, 60, 63, 64, 112, 114, 116, 122, 127, 130, 143, 145, 147, 149, 179, 233, 272, 289, 291, 296], "camera_pixel": 9, "default": [9, 11, 12, 37, 46, 58, 60, 63, 64, 114, 116, 125, 127, 130, 231, 233, 239, 259, 261, 266, 293], "pixel": [9, 23, 43, 233, 245, 247, 261], "from": [9, 11, 12, 22, 25, 31, 37, 48, 49, 55, 58, 60, 63, 64, 65, 69, 71, 72, 78, 80, 83, 85, 88, 91, 114, 116, 127, 130, 151, 156, 163, 176, 179, 224, 226, 227, 229, 231, 233, 237, 258, 261, 269, 276, 290, 293, 295, 296], "x_pixel": 9, "int": [9, 22, 24, 60, 64, 65, 66, 67, 78, 80, 83, 85, 88, 90, 98, 99, 102, 112, 114, 116, 117, 122, 125, 127, 128, 130, 156, 166, 167, 171, 173, 176, 179, 180, 182, 184, 188, 190, 216, 224, 229, 231, 233, 239, 241, 247, 261, 269, 270], "number": [9, 11, 43, 46, 58, 63, 64, 88, 114, 116, 127, 130, 156, 166, 171, 173, 176, 179, 182, 184, 193, 231, 233, 269, 270, 295], "y_pixel": 9, "channels_info": 9, "channel": [9, 83, 85, 122, 216, 231, 233, 289, 293], "popul": 9, "combobox": 9, "avail": [9, 11, 58, 63, 64, 71, 188, 190, 261, 267, 293, 296], "laser": [9, 99, 122, 161, 239, 240, 242, 291, 294], "488nm": 9, "561nm": 9, "642nm": 9, "filter": [9, 46, 92, 97, 125, 127, 128, 130, 179, 180, 294], "empti": [9, 64, 127, 130, 179], "align": [9, 64, 127, 130, 263], "gfp": [9, 125, 127, 130, 179], "ff01": 9, "515": 9, "30": [9, 64, 289], "32": [9, 37, 64], "daq_sample_r": 9, "daq": [9, 96, 99, 101, 147, 149, 231, 233, 289], "sampl": [9, 46, 245, 247, 291, 294], "rate": [9, 114, 116, 127, 128, 130, 156, 167, 179, 180], "float": [9, 11, 22, 23, 24, 37, 58, 60, 63, 64, 65, 66, 67, 78, 80, 83, 85, 112, 114, 116, 120, 122, 127, 130, 151, 156, 166, 169, 171, 176, 179, 182, 193, 224, 231, 235, 236, 237, 238, 239, 240, 242, 245, 247, 269, 270], "filter_wheel_setting_dict": 9, "wheel": [9, 92, 97, 125, 127, 128, 130, 179, 180, 294], "galvo_parameter_dict": 9, "galvo": [9, 89, 98, 120, 122, 236, 238, 266], "lasers_info": 9, "laser_list": 9, "number_of_channel": 9, "remote_focus_dict": 9, "delay_perc": 9, "pulse_perc": 9, "remote_focus_paramet": 9, "percent": [9, 235, 237, 238, 240, 242], "delai": [9, 188, 190, 237, 240], "puls": [9, 240, 293], "stage_default_posit": 9, "current": [9, 11, 58, 63, 64, 114, 116, 117, 163, 188, 190, 193, 233, 270, 289], "stage_setting_dict": 9, "stage_step": 9, "step": [9, 64, 156, 179, 193, 197, 207, 209, 210, 289, 291, 296], "size": [9, 64, 78, 80, 83, 85, 114, 116, 193, 224, 226, 227, 229, 233, 245, 247, 261, 269, 289], "same": [9, 11, 58, 63, 64, 156, 229, 259, 263], "group": [11, 58, 63], "none": [11, 12, 29, 44, 46, 49, 58, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 78, 80, 83, 85, 114, 116, 140, 205, 206, 208, 216, 224, 226, 227, 229, 231, 233, 272, 274, 276], "target": [11, 12, 58, 63, 71, 72, 233, 249, 250], "arg": [11, 12, 58, 60, 63, 64, 65, 66, 67, 71, 72, 88, 89, 193, 211, 212, 233, 249, 252, 266, 267], "daemon": [11, 58, 63], "thread": [11, 12, 58, 61, 63, 65, 71, 72, 92, 93, 94, 96, 97, 99, 101, 103, 233], "constructor": [11, 58, 63], "should": [11, 58, 63, 64, 71, 72, 85, 114, 116, 156, 166, 269, 289, 290, 293, 296], "alwai": [11, 58, 63, 64], "call": [11, 58, 60, 61, 63, 64, 71, 72, 122, 171, 173, 182, 184, 233, 289, 296], "keyword": [11, 12, 58, 63, 64, 71, 233], "argument": [11, 12, 58, 60, 61, 63, 64, 65, 66, 67, 70, 71, 88, 127, 130, 233, 265, 266, 291], "reserv": [11, 58, 63], "futur": [11, 58, 63, 64, 290, 295], "extens": [11, 58, 63, 290], "when": [11, 58, 61, 63, 64, 72, 179, 231, 233, 289, 291, 293, 296], "threadgroup": [11, 58, 63], "implement": [11, 58, 63, 64, 78, 80, 83, 85, 171, 173, 179, 182, 184, 227], "callabl": [11, 12, 58, 60, 61, 63, 65, 66, 67, 70], "invok": [11, 58, 63, 64], "run": [11, 12, 58, 60, 63, 65, 66, 67, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 122, 193, 233, 289, 291, 293, 296], "mean": [11, 23, 58, 63, 64], "noth": [11, 58, 63], "By": [11, 58, 60, 63, 64], "uniqu": [11, 58, 63], "construct": [11, 58, 63, 64], "form": [11, 58, 63, 64, 290, 293], "n": [11, 58, 63, 64, 83, 195, 196, 221, 245, 246, 247, 296], "where": [11, 58, 63, 64, 216, 233, 290, 291, 296], "small": [11, 58, 63], "decim": [11, 58, 63, 64, 179], "tupl": [11, 12, 24, 58, 63, 64, 78, 80, 83, 85, 88, 224, 226, 227, 229, 261], "invoc": [11, 58, 63], "If": [11, 41, 58, 60, 61, 63, 64, 65, 66, 67, 69, 70, 72, 85, 122, 156, 179, 233, 245, 266, 289, 290, 296], "subclass": [11, 58, 60, 63, 64], "overrid": [11, 58, 63, 216], "must": [11, 58, 63, 64, 71, 127, 290, 291, 293], "make": [11, 32, 58, 61, 63, 64, 70, 85, 166, 169, 171, 176, 270, 289, 290], "sure": [11, 58, 63, 64, 166, 169, 171, 176, 289], "befor": [11, 58, 63, 64, 143, 145, 272, 291, 296], "do": [11, 55, 58, 63, 64, 114, 122, 166, 173, 184, 224, 227, 229, 289, 290, 296], "anyth": [11, 58, 63], "els": [11, 58, 63], "getnam": [11, 58, 63], "string": [11, 58, 60, 61, 63, 64, 83, 125, 127, 130, 216, 259, 276], "identif": [11, 58, 63], "purpos": [11, 58, 63, 64, 72, 120, 122, 296], "onli": [11, 58, 63, 64, 85, 122, 166, 235, 289, 290, 296], "deprec": [11, 58, 63, 64], "instead": [11, 58, 63, 64, 72], "isdaemon": [11, 58, 63], "whether": [11, 58, 63, 64, 90, 233], "islock": 11, "check": [11, 64, 88, 125, 127, 130, 156, 173, 184, 188, 190, 233], "lock": [11, 64], "is_al": [11, 58, 63], "aliv": [11, 58, 63], "true": [11, 20, 58, 60, 63, 64, 65, 66, 67, 127, 130, 166, 169, 176, 233, 245, 267, 274, 291], "just": [11, 58, 63, 64, 65], "start": [11, 58, 60, 63, 64, 122, 166, 233, 237, 270, 274, 290, 291, 293, 296], "until": [11, 58, 63, 71, 122, 166, 171, 173, 176, 179, 182, 184, 231, 233], "after": [11, 58, 63, 64, 117, 179, 188, 190, 233, 293, 296], "termin": [11, 58, 63, 179, 293, 296], "see": [11, 58, 60, 63, 64, 71, 72, 125, 127, 227, 277, 290, 295, 296], "also": [11, 58, 63, 64, 293, 296], "enumer": [11, 58, 63], "join": [11, 58, 63, 72], "timeout": [11, 58, 63, 128, 156, 167], "wait": [11, 58, 63, 71, 114, 116, 122, 127, 130, 156, 167, 231, 233, 291], "block": [11, 58, 63, 64, 166, 171, 173, 176, 179, 182, 184, 287], "whose": [11, 58, 63, 64], "either": [11, 58, 63, 64, 289], "normal": [11, 28, 31, 44, 46, 58, 63, 64, 112, 114, 116, 120, 122, 231], "through": [11, 41, 58, 63, 64, 249], "an": [11, 22, 24, 25, 38, 48, 52, 58, 60, 61, 63, 64, 65, 66, 67, 70, 71, 72, 88, 112, 114, 116, 166, 169, 171, 173, 176, 179, 182, 184, 224, 227, 233, 266, 269, 272, 277, 289, 291, 293], "unhandl": [11, 58, 63], "except": [11, 58, 60, 63, 64, 65, 66, 67, 72, 88, 166, 169, 171, 173, 176, 179, 182, 184], "option": [11, 12, 58, 61, 63, 64, 216, 231, 239, 290, 291], "occur": [11, 58, 63, 64, 179, 290], "present": [11, 58, 63], "point": [11, 58, 60, 63, 64, 83], "specifi": [11, 58, 63, 64, 127, 130, 156, 258, 259, 289, 291], "oper": [11, 58, 61, 63, 67, 70, 120, 122, 166, 169, 171, 176, 291, 293, 294, 296], "second": [11, 58, 63, 64, 114, 116, 120, 122, 127, 231, 235, 236, 237, 238, 239, 240, 242, 289], "fraction": [11, 58, 63, 269, 270], "thereof": [11, 58, 63], "As": [11, 58, 61, 63, 64, 70, 291], "you": [11, 58, 61, 63, 64, 69, 70, 71, 72, 289, 290, 293, 296], "decid": [11, 58, 63, 289], "happen": [11, 58, 63, 291], "still": [11, 58, 63, 64, 289, 291, 293, 296], "time": [11, 58, 63, 64, 83, 88, 112, 114, 116, 120, 122, 127, 130, 156, 167, 231, 233, 235, 256, 290, 293], "out": [11, 58, 60, 63, 64, 114, 193, 196, 240, 269, 270, 289, 293], "A": [11, 58, 63, 64, 71, 72, 166, 169, 171, 173, 176, 179, 182, 184, 195, 196, 221, 269, 290, 291, 293], "can": [11, 58, 61, 63, 64, 65, 69, 72, 78, 80, 83, 85, 156, 227, 233, 290, 291, 295, 296], "ed": [11, 58, 63], "mani": [11, 58, 63, 64, 85, 193, 291], "rais": [11, 58, 60, 63, 64, 65, 66, 67, 72, 89], "runtimeerror": [11, 58, 63, 64, 65], "attempt": [11, 58, 63, 64, 88], "made": [11, 58, 63, 64, 293], "would": [11, 58, 60, 63, 64, 289, 293], "caus": [11, 58, 63, 64], "deadlock": [11, 58, 63], "It": [11, 58, 63, 64, 258, 289, 293, 295, 296], "error": [11, 58, 63, 64, 72, 89, 245, 296], "ha": [11, 58, 63, 64, 69, 156, 166, 171, 173, 176, 179, 182, 184, 267, 269, 289, 291, 294], "been": [11, 58, 63], "so": [11, 58, 63, 64, 72, 122, 293, 295, 296], "setdaemon": [11, 58, 63], "setnam": [11, 58, 63], "": [11, 23, 58, 61, 63, 64, 112, 114, 116, 290, 291, 296], "activ": [11, 58, 63, 114, 116, 120, 122, 233, 290, 293, 295, 296], "most": [11, 58, 63, 64, 289, 290, 293], "onc": [11, 58, 63, 64, 156, 291, 293, 296], "arrang": [11, 58, 63], "separ": [11, 58, 63, 64, 227, 252, 290, 294], "more": [11, 58, 63, 64, 85, 166, 169, 171, 173, 176, 179, 182, 184, 289, 296], "than": [11, 58, 63, 64, 78, 85, 114, 116, 293], "unlock": 11, "finish": 11, "boolean": [11, 58, 63, 64], "indic": [11, 58, 63, 64, 179, 216, 231, 269, 291], "otherwis": [11, 58, 63, 64, 120, 122], "Its": [11, 58, 63], "initi": [11, 13, 58, 61, 63, 64, 69, 70, 78, 80, 83, 85, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 114, 116, 122, 143, 145, 156, 167, 179, 233], "inherit": [11, 58, 63, 64, 88], "creat": [11, 12, 58, 60, 63, 64, 72, 122, 166, 169, 171, 173, 176, 179, 182, 184, 233, 236, 238, 239, 240, 242, 258, 261, 270, 290, 293, 296], "main": [11, 58, 63, 72, 290, 291], "therefor": [11, 58, 63, 64], "fals": [11, 22, 41, 58, 60, 61, 63, 64, 65, 66, 67, 83, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 114, 116, 166, 171, 173, 176, 179, 182, 184, 188, 190, 207, 209, 210, 231, 233, 245, 272], "entir": [11, 58, 63], "python": [11, 58, 61, 63, 64, 70, 78, 80, 83, 85, 224, 226, 227, 229, 276, 289, 295], "exit": [11, 58, 61, 63, 143, 145, 291], "left": [11, 58, 63, 64, 163, 237, 261, 269, 296], "ident": [11, 58, 63], "identifi": [11, 33, 34, 58, 63, 127, 293], "nonzero": [11, 58, 63, 64], "integ": [11, 58, 63, 64, 235, 236, 237, 238, 240, 242], "get_id": [11, 58, 63], "mai": [11, 58, 63, 64, 291, 293, 296], "recycl": [11, 58, 63], "anoth": [11, 58, 60, 63, 64, 72, 289, 290, 296], "even": [11, 22, 58, 63, 64], "semant": [11, 58, 63], "multipl": [11, 22, 24, 33, 58, 63, 64, 65, 179, 227, 293], "given": [11, 23, 58, 63, 64, 114, 116, 125, 127, 130, 272, 296], "native_id": [11, 58, 63], "nativ": [11, 58, 63, 64], "integr": [11, 58, 63], "id": [11, 58, 63, 89, 90, 98, 99, 102], "non": [11, 58, 63, 64, 266], "neg": [11, 58, 63], "get_native_id": [11, 58, 63], "repres": [11, 58, 63, 289], "report": [11, 58, 63, 166, 171, 173, 176, 179, 184, 233, 290], "kernel": [11, 58, 63], "clear": [12, 64, 233], "pool": 12, "createthread": 12, "resourcenam": 12, "callback": 12, "cbarg": 12, "cbkarg": 12, "add": [12, 27, 60, 265, 266, 289, 296], "waitlist": 12, "resourc": [12, 58, 65, 71], "getrunningthread": 12, "globaltrac": 12, "frame": [12, 22, 23, 24, 85, 114, 116, 193, 231, 233, 293, 294], "event": 12, "trace": [12, 64], "ani": [12, 58, 60, 63, 64, 78, 80, 83, 85, 291], "killthreadinlist": 12, "threadlist": 12, "kill": 12, "localtrac": 12, "movetodelet": 12, "taskthread": 12, "move": [12, 55, 64, 85, 127, 130, 166, 169, 171, 173, 176, 179, 182, 184, 188, 190, 231, 233, 289, 291], "todeletelist": 12, "selflockthread": 12, "registerresourc": 12, "regist": [12, 293], "removethread": 12, "remov": [12, 64, 289], "threadtaskwrap": 12, "wrap": 12, "img_data": 17, "boundari": [17, 20, 269], "width": [17, 19, 64, 112, 114, 116, 231, 245, 247], "1": [17, 23, 44, 46, 63, 64, 90, 117, 120, 122, 166, 179, 193, 196, 197, 208, 229, 231, 233, 236, 237, 238, 239, 240, 242, 245, 247, 269, 289, 293, 296], "image_data": [18, 19, 27, 29, 31, 34, 35, 37, 52], "mag_ratio": 18, "direct": [20, 34, 64, 112, 114, 116, 245, 247, 290, 293, 296], "imag": [22, 24, 25, 27, 28, 31, 34, 37, 38, 41, 43, 44, 46, 47, 48, 52, 64, 114, 116, 122, 151, 196, 231, 233, 245, 246, 247, 270, 291, 293, 294], "_supportsarrai": [22, 24, 78, 80, 83, 85, 224, 247], "dtype": [22, 24, 63, 64, 67, 69, 78, 80, 83, 85, 224, 247], "_nestedsequ": [22, 24, 78, 80, 83, 85, 224, 247], "complex": [22, 24, 44, 64, 78, 80, 83, 85, 224, 247], "byte": [22, 24, 64, 78, 80, 83, 85, 127, 130, 156, 179, 224, 247], "offset_map": [22, 25], "comput": [22, 24, 25, 179, 289, 293, 296], "flatfield": 22, "map": [22, 24, 25, 49, 64, 227, 233], "evenli": 22, "illumin": 22, "scmo": [22, 23, 24], "npt": [22, 24], "arraylik": [22, 24], "zyx": [22, 24, 78], "defocus": 22, "signal": [22, 23, 122, 213, 233, 238, 291], "np": [22, 23, 63, 64, 127, 236, 237, 238, 239, 240, 241, 242, 245, 247, 270, 272], "xy": 22, "offset": [22, 24, 25, 64, 231, 233, 237, 238, 239, 240, 242, 245, 247, 261], "absenc": 22, "oppos": 22, "fn": 23, "qe": 23, "82": 23, "ib": 23, "nr": 23, "4": [23, 64, 151, 235, 236, 238, 239, 240, 242, 245, 294, 296], "m": [23, 38, 112, 114, 116, 151, 179, 289, 296], "http": [23, 38, 78, 80, 83, 85, 127, 156, 166, 224, 226, 227, 229, 293, 296], "www": [23, 127, 293], "hamamatsu": [23, 114, 294], "com": [23, 38, 78, 80, 83, 85, 127, 156, 166, 224, 226, 227, 229, 293, 296], "content": [23, 64, 254, 259], "dam": 23, "photon": 23, "site": 23, "document": [23, 64, 114, 116, 166, 290, 295, 296], "99_sales_librari": 23, "sy": [23, 64], "scas0134e_c13440": 23, "20cu_tec": 23, "pdf": [23, 127], "nois": 23, "sigma": [23, 34], "excess": 23, "factor": [23, 166], "unitless": 23, "quantum": 23, "effici": 23, "arrai": [23, 64, 67, 69, 78, 80, 83, 85, 236, 237, 238, 239, 240, 241, 242, 245, 247, 261, 270, 272], "background": [23, 245, 247], "readout": [23, 112, 114, 116, 120, 122, 231], "rm": 23, "em": 23, "gain": 23, "estim": [23, 38, 46], "electron": 23, "union": 24, "numpi": [24, 64, 69, 231, 236, 237, 238, 239, 240, 241, 242], "_array_lik": 24, "_nested_sequ": 24, "varianc": [24, 25, 64, 233], "dark": 24, "taken": [24, 58, 63, 156], "sequenti": [24, 58, 63], "variance_map": 25, "snr": 25, "border": 27, "median": 27, "requir": [27, 55, 64, 101, 166, 169, 171, 173, 176, 179, 182, 184, 233, 294, 296], "3d": [27, 32, 41], "inside_imag": 28, "normalized_cel": 28, "surface_cel": 28, "combin": [28, 253], "insid": [28, 64, 296], "cell": [28, 30], "surfac": [28, 33, 34], "image_threshold": 29, "pixel_s": [29, 38, 245, 246, 247], "206": 29, "padded_image_data": 30, "insidegamma": 30, "insideblur": 30, "insidedilateradiu": 30, "insideeroderadiu": 30, "tri": [30, 88], "fill": [30, 64], "interior": 30, "gaussian": [30, 245, 247], "blur": 30, "follow": [30, 179, 290, 291, 296], "otsu": [30, 31], "threshold": [30, 31], "dilat": 30, "hole": 30, "eros": 30, "subtract": 31, "standard": [31, 58, 63, 64, 295], "deviat": [31, 64, 290], "radiu": 32, "structur": [32, 64, 229, 233], "element": [32, 64, 277], "shape": [32, 64, 67, 69, 78, 80, 83, 85, 224, 226, 227, 229], "sphere": 32, "scale": 33, "each": [34, 41, 64, 69, 78, 80, 83, 85, 88, 122, 166, 233, 249, 269, 270, 272, 289, 290, 291, 293], "ndarrai": [37, 64, 67, 127, 231, 245, 247], "calcul": [37, 64, 112, 114, 116, 120, 122, 127, 130, 151, 193, 231, 233, 235, 269, 293], "flat": [37, 64], "dark_field": 37, "correct": [37, 64, 147, 149], "bit": [37, 64, 156, 227], "data": [37, 52, 64, 78, 80, 83, 85, 96, 114, 116, 120, 122, 156, 179, 216, 231, 233, 258, 259, 272, 291, 294, 295], "16": [37, 64, 261], "param": 37, "flat_field": 37, "input_arrai": [38, 39, 40, 41], "number_high_pass_filt": 38, "10": [38, 46, 64, 88, 166, 179, 235, 237, 238, 239, 240, 241, 242, 289, 296], "fourier_sampl": [38, 46], "50": [38, 46, 179, 238, 242], "apodization_pixel": 38, "20": [38, 64], "resolut": [38, 78, 147, 149, 179, 233, 294], "decorrel": [38, 45, 46], "github": [38, 78, 80, 83, 85, 224, 226, 227, 229, 293, 295, 296], "ades91": 38, "imdecorr": 38, "blob": 38, "master": [38, 122], "main_imagedecorr": 38, "psf_support_diameter_xi": [39, 40, 41], "use_gpu": [41, 233, 267], "2d": [41, 43, 46, 64, 245, 247], "iter": [41, 64], "plane": [41, 291], "otf_support_x": 41, "support": [41, 64], "otf": 41, "dimens": [41, 64, 233, 269, 270], "otf_support_i": 41, "entropi": 41, "input_imag": [43, 46, 47, 48], "number_pixel": 43, "apod": 43, "edg": 43, "output": [43, 44, 45, 46, 47, 48, 49, 60, 64, 99, 101, 122, 240, 293], "output_imag": 43, "image_1": 44, "image_2": 44, "c1": 44, "c2": 44, "correl": 44, "coeffici": 44, "express": 44, "fourier": [44, 46], "space": [44, 46, 64, 196, 269, 270], "transform": [44, 48, 291], "2": [44, 63, 64, 179, 224, 237, 238, 245, 289, 293, 294, 296], "correlation_coeffici": 44, "cross": 44, "decorrelation_funct": 45, "maxima": [45, 46], "max_index": 45, "max_amplitud": 45, "amplitud": [45, 46, 236, 237, 238, 239, 240, 242], "number_highpass_filt": 46, "cut": 46, "off": [46, 233, 291], "frequenc": [46, 238, 239, 242], "analyz": 46, "linspac": 46, "high": [46, 179, 195, 269, 294], "pass": [46, 58, 63, 64, 69, 70, 120, 122, 233, 290], "kcmax": 46, "a0": 46, "d0": 46, "radial": [47, 245, 247], "averag": [47, 60, 64, 65, 66, 67], "squar": 47, "im": 47, "r": [47, 272], "imp": 48, "im2pol": 48, "imc": 48, "carthesian": 48, "polar": 48, "coordin": 48, "input_valu": 49, "minimum_valu": 49, "maximum_valu": 49, "mapped_minimum_valu": 49, "mapped_maximum_valu": 49, "perform": [49, 60, 65, 66, 67, 127, 291, 293, 295], "linear": [49, 293], "rang": [49, 193], "minimum": [49, 64, 114, 116, 289, 294], "maximum": [49, 64, 114, 116, 143, 145, 289, 295], "rescaled_valu": 49, "rescal": 49, "shear_angl": 52, "z_pixel_s": 52, "xy_pixel_s": 52, "design": [52, 125, 127, 130, 293], "deskew": 52, "uint16": [52, 64], "save": [52, 63, 216, 258, 259], "tiff": [52, 227, 229, 263], "spectral": 55, "unmix": 55, "need": [55, 64, 72, 114, 116, 127, 193, 231, 233, 269, 289, 291, 293, 296], "repo": [55, 296], "here": [55, 114, 237, 289, 290], "signific": 55, "organ": [55, 120, 122], "overhaul": 55, "first_resourc": [58, 71], "resultthread": [58, 59, 66], "access": [58, 63, 64, 65, 69, 78, 80, 83, 85, 296], "order": [58, 64, 65, 179, 289], "thei": [58, 61, 64, 70, 122, 289, 296], "were": [58, 64, 296], "launch": [58, 63, 72], "docstr": [58, 71, 72, 290], "top": [58, 71, 72, 112, 114, 116, 289], "get_result": [58, 63], "accept": [58, 63, 64, 71, 166, 266, 291], "timeouterror": [58, 60, 63, 65, 66, 67], "respect": [58, 63, 64, 289], "control": [58, 63, 64, 90, 125, 127, 156, 167, 179, 190, 216, 233, 248, 249, 289, 290, 291, 293, 295], "alia": [59, 62, 64], "homemad": 60, "test": [60, 64, 65, 66, 67, 295], "mostli": 60, "written": [60, 64, 290], "curios": 60, "what": [60, 64, 247, 269, 289, 291], "featur": [60, 63, 233, 290, 292, 295], "want": [60, 64, 69, 127, 130, 289, 296], "could": [60, 64, 290], "done": [60, 64, 231, 233, 289, 293, 296], "easili": 60, "without": [60, 61, 63, 64, 65, 69, 70, 289, 290], "import": [60, 64, 293, 295], "Not": [60, 117, 166, 179, 227, 235, 261], "real": [60, 64, 233], "packag": [60, 296], "wasn": 60, "t": [60, 61, 63, 64, 70, 114, 122, 173, 184, 229], "To": [60, 64, 156, 166, 227, 289, 290, 293], "test_": [60, 65, 66, 67], "expect": [60, 63, 65, 66, 71, 78, 80, 83, 85, 166, 169, 171, 173, 176, 179, 182, 184, 289, 290], "gener": [60, 64, 83, 116, 216, 229, 245, 247, 291, 295], "specif": [60, 64, 65, 66, 67, 289], "print": [60, 63, 64, 114, 116, 156], "stdout": 60, "test_prefix": [60, 65, 66, 67], "fail": [60, 64, 65, 66, 67, 289, 291], "fail_fast": [60, 65, 66, 67], "begin": [60, 64, 65, 66, 67], "time_it": [60, 65, 66, 67], "n_loop": [60, 65, 66, 67], "func": [60, 65, 66, 67, 88, 256], "timeout_u": [60, 65, 66, 67], "allow": [60, 64, 65, 66, 67, 233, 289, 291, 295, 296], "durat": [60, 65, 66, 67, 112, 114, 116, 122, 127, 130, 156, 235, 256], "exce": [60, 65, 66, 67], "bar": [60, 65, 66, 67], "format": [60, 64, 65, 66, 67, 120, 122, 179, 227, 289, 290], "progress": [60, 65, 66, 67, 179], "initarg": [61, 69, 70], "custom_loop": [61, 69, 70], "close_method_nam": [61, 70], "closearg": [61, 70], "closekwarg": [61, 70], "with_lock": 61, "initkwarg": [61, 69, 70], "child": [61, 63, 70, 214], "act": [61, 64, 70, 295], "like": [61, 64, 70, 71, 72, 269, 289, 293, 296], "isn": [61, 70], "much": [61, 70], "possibl": [61, 64, 70, 237], "try": [61, 63, 70, 296], "instanc": [61, 64, 70, 71, 272, 289], "behav": [61, 64, 67, 70, 289, 290], "re": [61, 63, 70], "live": [61, 64, 70, 233, 290], "parent": [61, 63, 69, 70, 112, 120, 125, 133, 140, 154, 161, 169, 188], "cours": [61, 70], "have": [61, 64, 70, 122, 227, 289, 290, 291, 293, 296], "spare": [61, 70], "core": [61, 64, 70], "your": [61, 64, 69, 70, 72, 289, 290, 293, 295], "machin": [61, 64, 70, 290, 293, 296], "turn": [61, 70, 214, 233, 289, 291, 293], "cpu": [61, 64, 70], "bound": [61, 70, 166, 169, 171, 173, 176, 179, 182, 184, 289], "which": [61, 64, 71, 78, 80, 83, 85, 147, 149, 166, 169, 171, 173, 176, 179, 182, 184, 233, 289, 291, 293, 294], "parallel": [61, 293], "io": [61, 70, 156], "too": [61, 70, 294], "mental": [61, 70], "overhead": [61, 65, 70, 233], "coder": [61, 70, 290], "our": [61, 63, 64, 69, 114, 116, 224, 227, 229, 289, 290, 295, 296], "automat": 61, "close_method": 61, "custodythread": [62, 65, 66], "simpl": [63, 64], "wish": 63, "had": 63, "chang": [63, 64, 114, 116, 127, 130, 166, 188, 190, 233, 249, 270, 293, 296], "self": [63, 64, 114, 120, 122, 127, 179, 216, 291], "trivial": 63, "u": [63, 64, 249, 293], "line": [63, 64, 71, 112, 114, 116, 274, 289, 290], "code": [63, 64, 78, 80, 83, 85, 117, 224, 226, 227, 229, 289, 295], "def": 63, "doe": [63, 64, 277, 289, 293, 296], "someth": [63, 64, 289, 290], "sum": [63, 64], "ones": 63, "uint8": [63, 64, 69], "problem": [63, 64, 296], "th": [63, 64], "redefin": 63, "solut": 63, "res_th": 63, "assert": 63, "handl": [63, 289], "idea": 63, "attributeerror": [63, 64], "wa": [63, 64, 166, 171, 173, 176, 179, 182, 184, 233, 261], "assertionerror": 63, "dure": [63, 78, 80, 83, 85, 193, 237], "evalu": [63, 64, 147, 149, 256, 267, 290], "rerais": 63, "traceback": [63, 64], "stderr": 63, "don": [63, 114, 173, 184], "affect": [63, 64], "yet": 63, "note": [63, 64, 166], "modifi": [63, 290, 291], "excepthook": 63, "copi": [63, 64, 249, 293], "past": 63, "definit": [63, 71, 72], "work": [63, 64, 122, 290, 296], "shared_memory_nam": 64, "stride": 64, "memori": [64, 69, 70, 233], "objectinsubprocess": [64, 65], "serial": [64, 67, 69, 114, 127, 128, 130, 179, 180, 254], "pretti": 64, "fast": 64, "larg": 64, "regularli": 64, "deal": [64, 227], "sens": 64, "provid": [64, 117, 166, 266, 293], "wai": [64, 233, 269, 289, 290], "via": [64, 101, 122, 241], "avoid": [64, 156, 293], "slow": [64, 69], "mayb": [64, 71, 72], "write": [64, 78, 80, 83, 85, 122, 156, 216, 224, 227, 229, 233, 290, 295], "look": [64, 117, 269, 289], "data_buf": 64, "zero": [64, 247], "400": 64, "display_buf": 64, "preprocessor": 64, "displai": [64, 89, 120, 122, 233], "record": 64, "num_imag": 64, "show": [64, 293, 296], "payoff": 64, "its": [64, 166, 171, 173, 176, 179, 182, 184, 291], "own": 64, "AND": 64, "realli": 64, "memmap": 64, "templat": 64, "axi": [64, 166, 169, 171, 173, 176, 179, 182, 184, 269], "keepdim": 64, "refer": [64, 237, 292, 295], "full": [64, 289, 293], "equival": [64, 293, 296], "argmax": 64, "along": [64, 71, 72, 166, 171, 173, 176, 179, 182, 184, 233, 269, 270], "argmin": 64, "detail": [64, 127, 166], "argpartit": 64, "kth": 64, "kind": 64, "introselect": 64, "partit": 64, "version": [64, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 294, 296], "8": [64, 127, 296], "argsort": 64, "sort": 64, "astyp": 64, "k": 64, "cast": 64, "unsaf": 64, "subok": 64, "typecod": 64, "layout": 64, "fortran": 64, "contigu": 64, "close": [64, 78, 80, 83, 85, 114, 116, 122, 127, 130, 143, 145, 156, 163, 179, 216, 233, 269, 291], "appear": 64, "equiv": 64, "safe": 64, "same_kind": 64, "backward": 64, "compat": [64, 296], "preserv": 64, "within": [64, 72, 166, 169, 171, 176, 179, 182, 293, 296], "float64": 64, "float32": 64, "convers": 64, "forc": 64, "newli": [64, 233], "alloc": [64, 69], "satisfi": 64, "arr_t": 64, "unless": [64, 290], "other": [64, 69, 122, 151, 156, 289, 290], "condit": 64, "descript": 64, "17": 64, "one": [64, 71, 72, 83, 85, 166, 169, 171, 173, 176, 179, 182, 184, 207, 209, 210, 233, 291, 293], "field": [64, 289], "9": [64, 296], "numer": [64, 245, 247], "mode": [64, 78, 80, 83, 85, 112, 114, 116, 120, 122, 143, 145, 147, 149, 156, 231, 233, 293, 294], "length": [64, 269, 270], "long": 64, "enough": 64, "store": [64, 78, 80, 83, 85, 224, 226, 227, 229, 248, 290], "convert": [64, 112, 114, 116, 166, 176, 179, 224, 226, 227, 229, 261, 272], "complexwarn": 64, "5": [64, 237, 289, 293, 294], "byteswap": 64, "inplac": 64, "swap": 64, "toggl": 64, "low": [64, 179, 269, 294], "endian": [64, 179], "big": 64, "represent": [64, 78, 80, 83, 85, 224, 226, 227, 229, 277], "place": [64, 289], "imaginari": 64, "part": [64, 290], "individu": 64, "view": [64, 69, 75, 224, 229, 233, 290, 295], "256": 64, "8755": 64, "int16": 64, "hex": 64, "0x1": 64, "0x100": 64, "0x2233": 64, "13090": 64, "0x3322": 64, "b": 64, "ceg": 64, "fac": 64, "s3": 64, "newbyteord": 64, "produc": [64, 276], "differ": [64, 289, 290, 293, 295, 296], "3": [64, 85, 224, 229, 242, 245, 296], "choos": 64, "choic": 64, "index": [64, 98, 99, 122, 147, 149, 216, 229, 245, 247], "clip": 64, "One": [64, 83], "compress": 64, "select": [64, 85, 147, 149, 293], "slice": [64, 67, 263], "conj": 64, "conjug": 64, "wise": 64, "match": [64, 247], "veri": 64, "similar": [64, 289, 290], "behavior": [64, 66, 270, 290, 291, 293], "copyto": 64, "prefer": 64, "6": [64, 229], "flag": [64, 114, 116, 125, 127, 130, 233, 270, 296], "c_contigu": 64, "cumprod": 64, "cumul": 64, "product": [64, 166, 293, 295], "cumsum": 64, "diagon": 64, "axis1": 64, "axis2": 64, "In": [64, 227, 289], "previou": 64, "restrict": 64, "dump": 64, "pickl": 64, "back": [64, 156, 179, 227, 237], "pathlib": 64, "now": [64, 224, 295, 296], "scalar": 64, "assign": 64, "flatten": [64, 245], "collaps": 64, "row": [64, 272], "major": [64, 249], "style": [64, 293, 295], "column": 64, "ravel": [64, 245], "d": [64, 276, 277], "over": [64, 296], "getfield": 64, "certain": 64, "determin": 64, "fit": [64, 245], "complex128": 64, "take": [64, 85, 270], "12": 64, "larger": 64, "itself": 64, "skip": 64, "diag": 64, "j": [64, 151], "item": [64, 287, 289], "variabl": [64, 151, 290, 296], "case": 64, "int_typ": 64, "interpret": [64, 179], "singl": [64, 85, 151, 156, 166, 171, 173, 176, 182, 184, 240, 263, 269], "nd": 64, "suitabl": 64, "longdoubl": 64, "clongdoubl": 64, "becaus": 64, "lose": 64, "inform": [64, 114, 116, 127, 179, 258, 259, 269, 289, 290, 296], "void": 64, "buffer": [64, 114, 116, 156, 179, 231, 233], "defin": [64, 88, 227], "speed": [64, 127, 179, 290, 294], "up": [64, 78, 80, 83, 85, 117, 122, 289, 293, 295], "arithmet": 64, "optim": 64, "math": 64, "random": [64, 67], "seed": 64, "123": 64, "randint": 64, "7": [64, 237, 294, 296], "itemset": 64, "There": [64, 227, 293], "least": 64, "last": [64, 179, 269, 296], "Then": 64, "faster": 64, "two": [64, 233, 289], "first": [64, 69, 227, 269, 289, 293, 296], "locat": [64, 127, 188, 190, 266, 289, 293, 296], "compar": 64, "syntax": 64, "some": [64, 69, 78, 80, 83, 85, 224, 226, 227, 229, 290, 291, 293, 296], "increas": 64, "particular": 64, "howev": [64, 290, 293], "discourag": 64, "among": 64, "complic": 64, "loop": 64, "amax": 64, "amin": 64, "new_ord": 64, "arr": 64, "newbytord": 64, "below": [64, 289, 290, 291, 294, 296], "opposit": 64, "littl": [64, 179], "byteord": 64, "ignor": [64, 224], "new_arr": 64, "reflect": [64, 289], "rearrang": 64, "smaller": 64, "equal": 64, "greater": 64, "behind": 64, "undefin": 64, "sequenc": [64, 179, 263, 291], "final": [64, 289], "them": [64, 290, 296], "sinc": [64, 270], "22": 64, "algorithm": 64, "etc": [64, 78, 80, 83, 85, 166, 169, 171, 173, 176, 179, 182, 184, 224, 226, 227, 229, 266, 269, 293, 295], "unspecifi": 64, "come": 64, "break": [64, 290], "ti": 64, "paritit": 64, "indirect": 64, "prod": 64, "ptp": 64, "peak": [64, 237, 245, 247], "put": [64, 65], "repeat": [64, 294], "reshap": 64, "unlik": 64, "free": 64, "For": [64, 85, 122, 166, 169, 171, 173, 176, 179, 182, 184, 289, 293], "11": [64, 296], "resiz": 64, "new_shap": 64, "refcheck": 64, "count": [64, 289], "valueerror": 64, "exist": [64, 125, 127, 130, 188, 190, 290, 291], "pypi": 64, "reliabl": 64, "systemerror": 64, "behaviour": 64, "bug": [64, 290], "realloc": 64, "area": 64, "necessari": [64, 120, 122, 127, 130, 156, 256, 258, 289, 290, 293], "consecut": 64, "shrink": 64, "enlarg": 64, "abov": [64, 289], "miss": 64, "entri": [64, 249, 289, 291], "doesn": 64, "referenc": 64, "prevent": 64, "recent": 64, "cannot": 64, "round": 64, "around": [64, 71, 72], "searchsort": 64, "v": [64, 151], "side": [64, 269], "sorter": 64, "find": [64, 289, 291, 293, 296], "maintain": 64, "setfield": 64, "val": [64, 88], "ey": 64, "int32": 64, "0e": 64, "000": 64, "5e": 64, "323": 64, "setflag": 64, "uic": 64, "writeabl": 64, "writebackifcopi": 64, "updateifcopi": 64, "These": [64, 293, 296], "how": [64, 67, 193, 289, 296], "actual": [64, 78, 80, 83, 85, 114, 235, 269], "never": 64, "ultim": 64, "owner": 64, "expos": 64, "interfac": 64, "unpickl": 64, "describ": [64, 291], "properli": [64, 289, 293], "about": [64, 259, 269], "four": [64, 179], "w": [64, 78, 80, 83, 85], "appropri": [64, 290, 296], "compil": 64, "pyarray_resolvewritebackifcopi": 64, "upper": [64, 261], "letter": 64, "well": [64, 295], "f_contigu": 64, "owndata": 64, "stdin": 64, "quicksort": 64, "mergesort": 64, "heapsort": 64, "stabl": 64, "both": [64, 101, 163, 166, 227, 291, 296], "timsort": 64, "under": [64, 289, 291, 293, 295], "cover": [64, 269], "vari": 64, "datatyp": 64, "retain": 64, "15": [64, 247, 296], "lexsort": 64, "kei": [64, 276], "partial": 64, "s1": 64, "i8": 64, "squeez": 64, "ax": [64, 166, 169, 171, 173, 176, 179, 182, 184, 289], "std": 64, "ddof": 64, "swapax": 64, "interchang": 64, "tobyt": 64, "raw": 64, "short": 64, "exhibit": 64, "u2": 64, "x00": 64, "x01": 64, "x02": 64, "x03": 64, "tofil": 64, "fid": 64, "sep": 64, "text": [64, 261], "binari": [64, 261], "independ": 64, "recov": 64, "fromfil": 64, "open": [64, 78, 80, 83, 85, 163, 233, 293, 296], "filenam": [64, 83, 216, 233, 259], "closest": 64, "conveni": 64, "quick": [64, 166], "storag": 64, "precis": [64, 293], "lost": 64, "good": [64, 290], "intend": 64, "archiv": [64, 263], "transport": 64, "overcom": 64, "expens": 64, "directli": [64, 71, 72, 114], "bypass": 64, "gzipfil": 64, "fileno": 64, "bytesio": 64, "tolist": 64, "ndim": 64, "level": 64, "deep": 64, "nearest": 64, "builtin": 64, "depth": 64, "possibli": 64, "recreat": 64, "although": 64, "sometim": 64, "1d": 64, "almost": [64, 71], "uint32": 64, "a_list": 64, "a_tolist": 64, "addition": 64, "appli": 64, "0d": [64, 179], "typeerror": 64, "tostr": 64, "exactli": 64, "despit": 64, "19": 64, "transpos": 64, "effect": [64, 245, 247], "vector": 64, "simpli": 64, "addit": [64, 233], "atleast2d": 64, "achiev": 64, "newaxi": 64, "matrix": [64, 127, 224], "permut": 64, "revers": 64, "becom": 64, "altern": [64, 224, 226, 227, 229, 290], "give": 64, "var": 64, "omit": 64, "former": [64, 231], "float_": 64, "descriptor": 64, "again": 64, "omiss": 64, "some_dtyp": 64, "reinterpret": 64, "ndarray_subclass": 64, "regular": [64, 290], "predict": 64, "superfici": 64, "shown": [64, 291, 296], "versu": 64, "int8": 64, "513": 64, "xv": 64, "underli": 64, "i1": 64, "recarrai": 64, "i2": 64, "ctype": 64, "simplifi": 64, "interact": [64, 268], "easier": 64, "librari": [64, 290, 295], "themselv": [64, 291], "possess": 64, "ctypeslib": 64, "public": 64, "guid": [64, 166, 290, 295], "undocu": 64, "privat": 64, "_ctype": 64, "pointer": [64, 78, 80, 83, 85, 291], "arbitrari": [64, 78, 80, 83, 85], "troubl": 64, "includ": [64, 166, 169, 171, 173, 176, 179, 182, 184, 224, 227, 229, 289, 291, 293, 296], "crash": 64, "bewar": 64, "_array_interface_": 64, "data_a": 64, "kept": 64, "c_void_p": 64, "dealloc": 64, "spelt": 64, "basetyp": 64, "correspond": [64, 166, 169, 171, 173, 176, 179, 182, 184, 293], "p": 64, "platform": 64, "c_intp": 64, "c_int": 64, "c_long": 64, "c_longlong": 64, "jump": 64, "next": [64, 156, 231, 291, 293], "obj": 64, "_as_parameter_": 64, "perhap": 64, "c_doubl": 64, "keep": [64, 290], "shape_a": 64, "c_short": 64, "strides_a": 64, "as_paramet": 64, "31962608": 64, "c_uint32": 64, "__main__": 64, "lp_c_uint": 64, "0x7ff2fc1fc200": 64, "c_uint": 64, "c_uint64": 64, "c_ulong": 64, "4294967296": 64, "_intern": 64, "c_long_array_2": 64, "0x7ff2fc1fce60": 64, "0x7ff2fc1ff320": 64, "segment": [64, 233], "o": [64, 179, 296], "borrow": [64, 78, 80, 83, 85, 224, 226, 227, 229], "creation": 64, "subsequ": 64, "while": [64, 65, 156], "remain": [64, 166], "alreadi": [64, 290, 296], "circumst": 64, "alter": [64, 166], "previous": 64, "onto": [64, 293], "fnc": 64, "carrai": 64, "ca": 64, "farrai": 64, "fa": 64, "lowercas": 64, "arbitrarili": 64, "truli": 64, "simultan": [64, 83, 166], "dimension": 64, "higher": 64, "dim": [64, 263], "hold": [64, 259, 268], "items": 64, "flatit": 64, "similarli": [64, 227], "built": 64, "arang": 64, "sqrt": 64, "0j": 64, "1j": 64, "70710678": 64, "nbyte": 64, "total": [64, 269], "consum": 64, "480": 64, "usual": 64, "infer": 64, "unchang": 64, "incompat": 64, "modif": [64, 290], "desir": [64, 114, 116, 233, 266], "obtain": 64, "suggest": 64, "int_": 64, "relev": 64, "further": 64, "overflow": [64, 156], "fix": [64, 290], "travers": 64, "explan": 64, "found": [64, 89, 290, 296], "rst": 64, "imagin": 64, "40": 64, "known": 64, "tell": 64, "lib": 64, "stride_trick": 64, "as_strid": 64, "13": [64, 179], "14": [64, 179], "18": 64, "21": 64, "23": 64, "48": 64, "224": 64, "1344": 64, "813": 64, "mytestclass": [65, 66, 67], "testclass": 65, "toi": 65, "subprocess": 65, "test_incorrect_thread_manag": 65, "custodi": [65, 71, 72], "test_lock_with_waitlist": 65, "stai": [65, 237], "objectsinsubprocess": 65, "mock": 65, "_waitinglist": [65, 71], "test_object_in_subprocess_overhead": 65, "test_sending_shared_arrai": 65, "send": [65, 156, 179], "sharedndarrai": [65, 67, 233], "test_ndarraylike_behavior": 67, "broke": 67, "suppos": 67, "test_seri": 67, "deseri": 67, "test_serializing_and_deseri": 67, "shared_memory_s": 69, "spawn": 69, "proxi": [69, 70, 254, 296], "proxyobject": [69, 71, 72], "shared_numpy_arrai": 69, "which_mp_arrai": 69, "shared_mp_arrai": 70, "proxymanag": [70, 71, 72], "thin": [71, 72], "wrapper": [71, 72], "few": [71, 72, 291], "usag": [71, 72, 263], "_custodi": 71, "switch_from": 71, "_wait_in_lin": 71, "immedi": 71, "acquir": [72, 216, 231, 233, 291, 293], "releas": 72, "launch_custody_thread": 72, "feel": 72, "detect": [72, 196], "occour": 72, "file_nam": [78, 80, 83, 85, 224, 227, 229], "datasourc": [78, 83, 85], "sourc": [78, 80, 83, 85, 216, 293, 294], "metdata": [78, 80, 83, 85], "metadata": [78, 80, 83, 85, 224, 229], "concept": [78, 80, 83, 85, 224, 226, 227, 229], "microscopi": [78, 80, 83, 85, 151, 224, 226, 227, 229], "clean": [78, 80, 83, 85, 295], "leftov": [78, 80, 83, 85], "kw": [78, 80, 83, 85, 224, 227, 229], "xyz": [78, 166], "bdv": 78, "spec": [78, 224, 229], "xyczt": [78, 80, 83, 85, 224, 226, 227, 229], "rather": [78, 293], "subdivis": 78, "voxel_s": [78, 80, 83, 85, 224, 226, 227, 229], "voxel": [78, 80, 83, 85, 224, 226, 227, 229], "file_typ": [81, 224, 227, 229], "is_bigtiff": 83, "generate_image_nam": [83, 216], "current_channel": [83, 216], "current_time_point": 83, "ch00_000000": [83, 216], "tif": [83, 216, 263], "timepoint": [83, 289], "stack": [83, 193, 291, 293], "At": 83, "copy_to_zarr": 85, "frame_id": [85, 216], "zarr": 85, "Will": [85, 227], "fom": 85, "sharednd": 85, "three": [85, 179], "assumpt": 85, "acquisit": [85, 96, 112, 114, 116, 120, 122, 231, 233, 291, 294, 295], "dummi": 87, "devic": [87, 88, 89, 90, 91, 95, 97, 98, 99, 100, 101, 102, 103, 261, 289, 293, 294, 296], "n_tri": 88, "retri": 88, "connect": [88, 95, 97, 98, 99, 100, 101, 102, 103, 112, 114, 116, 122, 128, 156, 161, 163, 166, 167, 169, 171, 176, 177, 180, 188, 233, 289, 293], "startup": [88, 289], "redial": 88, "baseexcept": 88, "dcam": [88, 293], "messag": [89, 156], "incorrect": 89, "device_typ": 89, "camera_id": 90, "is_synthet": [90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 231], "dictproxi": [90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 112, 114, 116, 120, 122, 161, 163, 166, 169, 171, 176, 188], "synthet": [90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 116, 117, 144, 163, 233, 289], "dedic": [92, 93, 94, 96, 97, 99, 101, 103], "multiproces": [92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 112, 114, 116, 120, 122, 161, 163, 188], "zoom": [94, 103, 289], "device_connect": [95, 97, 98, 99, 100, 101, 102, 103, 112, 114, 116, 125, 127, 130, 133, 135, 143, 145, 154, 158, 161, 163, 166, 169, 171, 173, 176, 179, 182, 184, 188, 190], "filterwheel": 97, "scan": [98, 293, 294], "trigger": [99, 101, 122, 147, 149, 163, 235, 293], "switch": [99, 127, 233, 237, 261, 289, 293], "analog": [99, 122, 239, 240, 242, 293, 294], "digit": [99, 101, 293], "focus": [100, 237, 266, 294], "shutter": [101, 112, 114, 116, 233], "thorlabsshutt": 101, "syntheticshutt": 101, "ni": [101, 289, 293], "card": [101, 233, 295], "thu": 101, "enabl": [101, 127, 130, 156, 290, 294], "calculate_light_sheet_exposure_tim": [112, 114, 116], "full_chip_exposure_tim": [112, 114, 116], "shutter_width": [112, 114, 116], "exposur": [112, 114, 116, 122, 235], "light": [112, 114, 116], "sheet": [112, 114, 116], "roll": [112, 114, 116], "exposure_tim": [112, 114, 116, 122, 237, 289], "camera_line_interv": [112, 114, 116], "hamamatsuorca": [112, 116, 289], "interv": [112, 114, 116, 293], "set_readout_direct": [112, 114, 116], "bottom": [112, 114, 116], "bytrigg": [112, 114, 116], "diverg": [112, 114, 116], "camerabas": [114, 116], "calculate_readout_tim": [114, 116], "assum": [114, 224, 227, 229, 263, 296], "c13440": 114, "link": 114, "commun": [114, 127, 128, 130, 156, 167, 179, 180, 289], "pull": [114, 290, 293], "readout_tim": [114, 116, 120, 122, 231], "max_frame_r": [114, 116], "framer": [114, 116], "todo": [114, 173, 184, 224, 227, 233, 270, 277], "think": 114, "camera_control": 114, "get_property_valu": [114, 117], "close_camera": [114, 116], "close_image_seri": [114, 116], "seri": [114, 116], "stop": [114, 116, 122, 156, 166, 169, 171, 173, 176, 179, 182, 184, 231, 233], "is_acquir": [114, 116], "get_minimum_waiting_tim": [114, 116], "cyclic_trigger_period": [114, 116], "minimum_trigger_blank": [114, 116], "minimum_trigger_interv": [114, 116], "trigger_blank": [114, 116], "bigger": [114, 116], "trigger_interv": [114, 116], "get_new_fram": [114, 116], "initialize_image_seri": [114, 116], "data_buff": [114, 116, 216, 231, 233], "number_of_fram": [114, 116, 231], "100": [114, 116, 289, 294], "report_set": [114, 116], "set_roi": [114, 116], "roi_height": [114, 116], "2048": [114, 116], "roi_width": [114, 116], "region": [114, 116, 269], "height": [114, 116, 231], "set_bin": [114, 116], "binning_str": [114, 116], "bin": [114, 116], "1x1": 114, "2x2": [114, 116], "4x4": [114, 116], "8x8": [114, 116], "16x16": 114, "1x2": 114, "2x4": 114, "set_exposure_tim": [114, 116], "unit": [114, 116, 166, 235, 236, 237, 238, 239, 240, 242, 294, 295], "millisecond": [114, 116, 167, 290], "set_line_interv": [114, 116], "line_interval_tim": [114, 116], "set_sensor_mod": [114, 116], "sensor": [114, 116, 233], "serial_numb": [114, 177, 289], "generate_new_fram": 116, "idprop": 117, "property_dict": 117, "property_valu": 117, "hard": 117, "calculate_all_waveform": [120, 122, 231], "pre": [120, 122, 290, 291], "waveform": [120, 122, 231, 233, 266, 293], "waveform_dict": [120, 122], "etl": [120, 122, 266], "plu": [120, 122], "daqbas": 122, "add_camera": 122, "close_task": 122, "task": [122, 179, 293], "counter": [122, 293], "create_camera_task": 122, "create_galvo_remote_focus_task": 122, "create_master_trigger_task": 122, "prepare_acquisit": [122, 231, 233], "channel_kei": 122, "prepar": [122, 231, 233], "run_acquisit": [122, 233], "start_task": 122, "won": 122, "run_task": 122, "stop_acquisit": 122, "stop_task": 122, "write_waveforms_to_task": 122, "filter_dictionari": [125, 127, 130, 179], "instal": [125, 127, 130, 179, 290, 293, 295, 297], "wheel_posit": [125, 127, 130], "check_if_filter_in_filter_dictionari": [125, 127, 130], "filter_nam": [125, 127, 130], "filter_exist": [125, 127, 130], "filterwheelbas": [127, 130], "sutter": [127, 179], "lambda": 127, "manual": 127, "lb10": 127, "3_opman": 127, "comport": [127, 128, 130, 156, 179, 180], "com1": [127, 128, 130, 167, 179, 180], "baudrat": [127, 128, 130, 179, 180, 289], "baud": [127, 128, 130, 156, 167, 179, 180], "9600": [127, 128, 130, 167, 179, 180, 289], "number_of_filter_wheel": [127, 130], "wait_until_done_delai": [127, 130], "wait_until_don": [127, 130, 166, 171, 173, 176, 179, 182, 184, 188, 190, 231, 233], "period": [127, 130, 237], "delay_matrix": 127, "movement": [127, 166, 169, 171, 173, 176, 179, 182, 184, 289], "fastest": 127, "slowest": 127, "filter_change_delai": [127, 130], "occupi": 127, "num_byt": [127, 130, 156, 179], "port": [127, 128, 130, 143, 145, 156, 167, 179, 180, 289, 293], "retriev": [127, 258, 266], "page": [127, 151], "38": 127, "set_filt": [127, 130], "25": 128, "build": [128, 180, 258], "sutterfilterwheel": [128, 289], "galvo_id": [133, 135], "voic": [133, 154, 156], "coil": [133, 154, 156], "galvobas": 135, "joystickbas": 140, "laser_id": [143, 145], "initialize_las": [143, 145], "power": [143, 145], "cw": [143, 145], "apc": [143, 145], "laserbas": 145, "enable_high_resolution_las": [147, 149], "enable_low_resolution_las": [147, 149], "set_laser_analog_voltag": [147, 149], "current_laser_index": [147, 149], "current_laser_intens": [147, 149], "constant": [147, 149, 266], "voltag": [147, 149, 236, 237, 239, 242], "intens": [147, 149, 240, 245, 247], "percentag": [147, 149, 241], "lasertriggerbas": 149, "calculate_entrance_pupil": 151, "entranc": 151, "pupil": 151, "incid": 151, "angl": 151, "fluoresc": 151, "interfer": 151, "contrast": 151, "carolin": 151, "ajo": 151, "franklin": 151, "prasad": 151, "ganesan": 151, "steven": 151, "boxer": 151, "biophi": 151, "volum": 151, "89": 151, "issu": [151, 296], "octob": 151, "2005": 151, "2759": 151, "2769": 151, "entrance_pupil_diamet": 151, "diamet": 151, "millimet": [151, 176], "remotefocusbas": [156, 158], "sca814": [156, 293], "charact": 156, "proper": [156, 293, 296], "echo": 156, "advis": 156, "verifi": 156, "receiv": [156, 179, 233], "sent": 156, "pyseri": 156, "readthedoc": 156, "en": 156, "latest": 156, "pyserial_api": 156, "html": [156, 229], "baud_rat": [156, 167, 180], "byte_s": 156, "pariti": 156, "stop_bit": 156, "read_on_init": 156, "upon": [156, 293, 296], "debug": 156, "statement": [156, 256], "read_byt": 156, "send_command": 156, "command": [156, 166, 179, 188, 190, 233, 296], "close_connect": 156, "received_byt": 156, "bytearrai": 156, "shutdown": [156, 293], "shutterbas": 163, "deliv": [163, 293], "open_left": 163, "right": [163, 237, 269, 293], "open_right": 163, "close_shutt": 163, "state": [163, 193, 233, 289, 291], "device_id": [166, 169, 171, 173, 176, 179, 182, 184], "stagebas": [166, 171, 173, 176, 179, 182, 184], "asiimag": 166, "doc": [166, 229], "serial_command": 166, "command_quick_start": 166, "distanc": [166, 179, 193, 269, 290], "10th": 166, "micron": [166, 179, 294], "divis": 166, "ever": 166, "rel": 166, "ftp": 166, "stilt": 166, "strain": 166, "system": [166, 245, 247, 289, 290, 293, 294, 296], "x_po": [166, 169, 176, 289], "y_po": [166, 169, 176, 289], "z_po": [166, 169, 176, 289], "f_po": [166, 169, 176, 289], "theta_po": [166, 169, 176, 289], "rotat": [166, 169, 176, 270], "position_dict": [166, 169, 176], "x_max": [166, 169, 176, 289], "y_max": [166, 169, 176, 289], "z_max": [166, 169, 176, 289], "f_max": [166, 169, 176, 289], "theta_max": [166, 169, 176, 289], "x_min": [166, 169, 171, 173, 176, 179, 182, 184, 289], "y_min": [166, 169, 176, 289], "z_min": [166, 169, 176, 289], "f_min": [166, 169, 176, 289], "theta_min": [166, 169, 176, 289], "create_position_dict": [166, 169, 171, 173, 176, 179, 182, 184], "get_abs_posit": [166, 169, 171, 173, 176, 179, 182, 184], "emerg": [166, 169, 171, 176], "halt": [166, 169, 171, 176], "move_dictionari": [166, 169, 171, 173, 176, 179, 182, 184], "ensur": [166, 169, 171, 176, 179, 182, 290], "request": [166, 169, 171, 176, 179, 182, 267, 290], "prefix": [166, 169, 171, 173, 176, 179, 182, 184], "x_ab": [166, 169, 171, 173, 176, 179, 182, 184], "micromet": [166, 169, 171, 173, 176, 179, 182, 184, 290], "degre": [166, 169, 171, 173, 176, 179, 182, 184], "move_absolut": [166, 171, 173, 176, 179, 182, 184], "absolut": [166, 171, 176, 290], "asi": [166, 167, 179, 289], "spot": [166, 171, 173, 176, 179, 182, 184], "success": [166, 171, 173, 176, 179, 182, 184, 233], "move_axis_absolut": [166, 171, 173, 176, 179, 182, 184], "axis_num": [166, 171, 173, 176, 179, 182, 184], "pi": [166, 171, 173, 176, 179, 182, 184, 238, 242, 289], "applic": [166, 179, 290], "report_posit": [166, 171, 173, 176, 179, 184], "abruptli": [166, 169, 171, 173, 176, 182, 184], "com_port": [167, 180], "1000": [167, 289], "tiger": 167, "asi_stag": 167, "successfulli": [167, 293], "positoin": 169, "physik": [171, 176, 177], "instrument": [171, 176, 177, 294], "logic": [171, 173, 179, 182, 184], "hack": [173, 184], "lack": [173, 184], "serialnum": [174, 185], "xyzf": 176, "controller_nam": 177, "reference_mod": 177, "mp": 179, "285": 179, "ascii": 179, "cr": 179, "carriag": 179, "hexadecim": 179, "associ": 179, "complet": [179, 291], "host": 179, "readi": 179, "check_byte_ord": 179, "confirm": [179, 188, 190, 291, 293], "respons": [179, 295], "static": [179, 193], "convert_microns_to_microstep": 179, "microstep": 179, "convert_microsteps_to_micron": 179, "flush_buff": 179, "flush": 179, "consist": [179, 290], "end": [179, 231, 233, 291], "intern": [179, 224, 226, 227, 229], "set_stage_speed_and_resolut": 179, "3000": 179, "sec": 179, "1310": 179, "04": 179, "interrupt": 179, "origin": [179, 261, 296], "sutterstag": 180, "device_control": 188, "servo": [188, 190, 293], "read_posit": [188, 190], "cur_posit": [188, 190], "set_zoom": [188, 190], "tha": [188, 190], "zoomdict": [188, 190], "zoombas": 190, "dynamixelzoom": [190, 289], "get_autofocus_frame_num": 193, "best": [193, 290], "get_step": 193, "step_siz": [193, 289], "autofocus": 193, "routin": [193, 267, 295, 296], "travel": 193, "pos_offset": 193, "figur": 193, "resolution_mod": 195, "zoom_valu": 195, "overlap": [196, 269, 270], "target_resolut": [196, 221], "nanoscal": [196, 221], "target_zoom": [196, 221], "tissu": 196, "grid": [196, 270], "root": [205, 206, 208, 224, 227, 229, 276, 277], "cleanup_list": [205, 206, 208], "feature_nam": [207, 209, 210], "func_dict": [207, 209, 210], "node_typ": [207, 209, 210, 291], "device_rel": [207, 209, 210, 291], "need_respons": [207, 209, 210, 291], "treenod": [207, 209], "number_of_execut": 208, "feature_modul": 213, "func_typ": 213, "feature_list": 214, "sibl": 214, "tree": [214, 291], "sub_dir": 216, "image_nam": 216, "disk": [216, 259], "acqusit": [216, 291], "save_directori": [216, 258], "scheme": 216, "ext": 216, "microscopest": 216, "color": 216, "save_imag": 216, "service_url": 219, "xmlmetadata": [224, 229], "bigdataview": [224, 227], "xml": [224, 227, 229, 276, 277], "section": [224, 291, 296], "arxiv": 224, "org": [224, 229], "ab": 224, "1412": 224, "0488": 224, "parse_bdv_xml": 224, "pars": [224, 227, 266, 276, 277], "incomplet": 224, "stage_positions_to_affine_matrix": 224, "affin": 224, "to_xml": [224, 227, 229], "write_xml": [224, 227, 229], "header": [224, 227, 229, 274], "om": [227, 229, 277], "proprietari": 227, "address": [227, 296], "file_type_xml_dict": 227, "ome_tiff_xml_dict": [227, 229], "xml_tool": 227, "parse_xml": 227, "openmicroscopi": 229, "uid": 229, "heirarch": 229, "ome_dict": 229, "devices_dict": 231, "end_acquisit": [231, 233], "get_readout_tim": [231, 233], "get_stage_posit": [231, 233], "stage_posit": 231, "move_stag": [231, 233], "pos_dict": [231, 233, 250], "move_stage_offset": 231, "former_microscop": 231, "prepare_next_channel": 231, "stop_stag": [231, 233], "update_data_buff": [231, 233], "img_width": [231, 233], "img_height": [231, 233], "event_queu": 233, "softwar": [233, 289, 290, 293, 294, 297], "architectur": [233, 290, 294, 295], "leverag": [233, 290], "cuda": [233, 267, 294, 296], "analysi": [233, 267, 291], "engin": 233, "get_data_buff": 233, "create_pip": 233, "release_pip": 233, "run_command": 233, "run_data_process": 233, "run_single_channel_acquisit": 233, "run_single_acquisit": 233, "snap_imag": 233, "run_live_acquisit": 233, "run_z_stack_acquisit": 233, "run_single_channel_acquisition_with_featur": 233, "change_resolut": 233, "resolution_valu": 233, "pipe_nam": 233, "pipe": 233, "pair": 233, "duplex": 233, "end1": 233, "disconnect": 233, "get_active_microscop": 233, "512": 233, "get_offset_variance_map": 233, "offset_variance_map": 233, "ret_pos_dict": 233, "load_imag": 233, "unload": 233, "pause_data_thread": 233, "paus": 233, "turn_off_flag": 233, "resume_data_thread": 233, "resum": 233, "num_of_fram": 233, "data_func": 233, "stream": 233, "gui": [233, 268, 272], "recalcul": 233, "therebi": 233, "peopl": 233, "adjust": 233, "due": 233, "cleanup": [233, 291], "update_ilastik_set": 233, "display_segment": 233, "mark_posit": 233, "target_label": 233, "ilastik": 233, "mark": 233, "label": 233, "sample_r": [235, 236, 237, 238, 239, 240, 242], "100000": [235, 236, 237, 238, 239, 240, 242, 289], "sweep_tim": [235, 236, 237, 238, 239, 240, 242], "camera_delai": [235, 237], "meant": 235, "visual": [235, 296], "hz": [235, 236, 237, 238, 239, 240, 242], "exposure_start": 235, "exposure_end": 235, "dc": 236, "reson": 236, "drive": [236, 239, 242, 295], "volt": [236, 237, 238, 239, 240, 242, 293], "typical_galvo": [236, 238], "24": 237, "remote_focus_delai": 237, "fall": 237, "sawtooth": 237, "ramp": 237, "typic": 237, "rise": 237, "linearli": 237, "2x": [237, 294], "drop": 237, "down": 237, "exchang": 237, "etl_ramp": 237, "tunable_lens_ramp": 237, "etl_delai": 237, "duty_cycl": [238, 242], "phase": [238, 239, 242], "5707963267948966": 238, "radian": [238, 239, 242], "sine": 239, "typical_las": [239, 242], "pulse_width": 240, "ttl": 240, "typical_ttl_puls": 240, "percent_smooth": 241, "smooth": 241, "convolut": 241, "smoothed_waveform": 241, "141592653589793": 242, "na": [245, 246, 247], "wvl": [245, 246, 247], "waist": [245, 247], "nm": [245, 247, 294], "apertur": [245, 247], "optic": [245, 247], "refract": [245, 247], "wavelength": [245, 247], "r0": [245, 247], "z0": [245, 247], "w0": [245, 247], "i0": [245, 247], "bg0": 245, "rl": 247, "zl": 247, "33": 247, "488": [247, 294], "bg": 247, "common": [248, 249, 293], "model": [248, 249, 290, 291, 295], "help": [249, 289, 290], "percol": 249, "funclist": 253, "execut": [256, 291], "saving_set": 258, "popup": 258, "file_directori": 259, "content_dict": 259, "yml": 259, "font_siz": 261, "piec": [261, 290], "font": 261, "arial": 261, "ttf": 261, "darwin": 261, "cambriab": 261, "fp": 263, "lazi": 263, "folder": [263, 290, 296], "pil": 263, "low_res_fp": 263, "endosom": 263, "mil": 263, "marin": 263, "zach": 263, "lung": 263, "antirfp": 263, "2022": 263, "07": 263, "02": [263, 296], "cell_001": 263, "low_r": 263, "imshow": 263, "500": [263, 289], "containt": 263, "parser": [265, 266], "argumentpars": [265, 266], "argumentparserobject": 265, "argpars": [266, 267], "namespac": [266, 267, 277], "logging_path": 266, "log": 266, "gpu": [267, 294, 295], "statu": 267, "commonli": [268, 293], "multiposit": [268, 272], "panda": [268, 272], "tabl": [268, 272], "dist": 269, "roi_length": 269, "tile": [269, 270], "divid": 269, "roi": [269, 270], "watch": 269, "sign": [269, 270], "measur": 269, "num_til": 269, "x_start": 270, "x_tile": 270, "x_length": 270, "x_overlap": 270, "y_start": 270, "y_tile": 270, "y_length": 270, "y_overlap": 270, "z_start": 270, "z_tile": 270, "z_length": 270, "z_overlap": 270, "theta_start": 270, "theta_til": 270, "theta_length": 270, "theta_overlap": 270, "f_start": 270, "f_tile": 270, "f_length": 270, "f_overlap": 270, "fov": 270, "track": 270, "n_posit": 270, "po": 272, "append": 272, "redraw": 272, "datafram": 272, "multi_position_t": 272, "begin_start": 274, "tag": 276, "elementtre": 277, "account": 277, "etre": 277, "fullnam": [286, 287], "escap": [286, 287], "underlin": [286, 287], "rubric": 287, "endfor": 287, "endif": 287, "endblock": 287, "302158": 289, "302352": 289, "filter_wheel": 289, "com19": 289, "number_of_wheel": 289, "controllernam": 289, "884": 289, "l": [289, 294], "509": [289, 294], "20dg10": [289, 294], "40dg10": 289, "060": 289, "dg": 289, "406": 289, "4pd": 289, "nostag": 289, "refmod": 289, "frf": 289, "119060508": 289, "thorlab": [289, 294], "74000375": 289, "servo_id": 289, "com18": 289, "1000000": 289, "manufactur": [289, 293], "123456789": 289, "com7": 289, "115200": 289, "instanti": 289, "eg": 289, "emploi": 289, "syntheticstag": 289, "987654321": 289, "notic": 289, "syntheticzoom": 289, "abbrevi": 289, "y_unload_posit": 289, "10000": 289, "y_load_posit": 289, "90000": 289, "startfocu": 289, "75000": 289, "33500": 289, "16000": 289, "50000": 289, "25000": 289, "360": 289, "x_rot_posit": 289, "y_rot_posit": 289, "z_rot_posit": 289, "x_step": 289, "y_step": 289, "z_step": 289, "theta_step": 289, "f_step": 289, "25250": 289, "40000": 289, "70000": 289, "veloc": 289, "x_offset": 289, "y_offset": 289, "z_offset": 289, "f_offset": 289, "theta_offset": 289, "explicil": 289, "earlier": 289, "relat": 289, "physic": 289, "third": 289, "laser_pow": 289, "interval_tim": 289, "stack_acquisit": 289, "200": 289, "start_po": 289, "5000": 289, "end_po": 289, "stack_paus": 289, "widget": 289, "spinbox": 289, "develop": [289, 290, 291, 293, 295], "plan": 289, "go": [289, 296], "forward": 289, "manner": 289, "welcom": 290, "pleas": [290, 296], "fork": 290, "branch": 290, "review": 290, "practic": 290, "outlin": 290, "consid": 290, "refactor": 290, "reach": 290, "prior": [290, 293], "happi": 290, "bring": 290, "discuss": 290, "meet": 290, "strong": 290, "especi": 290, "disrupt": 290, "improv": 290, "clariti": 290, "team": 290, "advanc": 290, "merg": 290, "pep8": 290, "importantli": 290, "camelcas": 290, "lowercase_and_separated_by_underscor": 290, "numpydoc": 290, "commit": 290, "workflow": 290, "enforc": 290, "ruff": 290, "linter": 290, "black": 290, "formatt": 290, "vscode": 290, "whatev": 290, "conda": [290, 296], "aslm": [290, 293, 295, 296, 297], "pip": [290, 296], "cd": [290, 296], "ideal": [290, 291], "alert": 290, "pytest": 290, "reconfigur": 291, "snap": 291, "pictur": 291, "common_featur": 291, "zstackacquisit": 291, "autofocu": 291, "discret": 291, "cosin": 291, "dictat": 291, "config_t": 291, "init": 291, "pre_func_sign": 291, "in_func_sign": 291, "end_func_sign": 291, "cleanup_func_sign": 291, "pre_func_data": 291, "in_func_data": 291, "end_func_data": 291, "cleanup_func_data": 291, "node": 291, "multi": [291, 293], "primari": 291, "failsaf": 291, "latter": 291, "inde": 291, "proceed": 291, "contribut": [292, 295], "guidelin": [292, 295], "config": [293, 295, 296], "conflict": 293, "sever": 293, "pcie": 293, "6738": 293, "pxie": [293, 294], "6259": 293, "6733": 293, "daqmx": 293, "driver": [293, 294, 296], "recogn": 293, "visibl": 293, "pinout": 293, "click": 293, "aspect": 293, "queue": 293, "board": 293, "receipt": 293, "determinist": 293, "basi": 293, "jitter": 293, "anticip": 293, "dev1": 293, "dev2": 293, "master_trigger_out_lin": 293, "trigger_sourc": 293, "pxi6259": [293, 294], "port0": 293, "line1": 293, "pfi0": 293, "p0": 293, "pin": [293, 296], "pfio": 293, "gate": 293, "usb": 293, "came": 293, "hcimagel": 293, "prompt": [293, 296], "intal": 293, "silicon": 293, "firebird": 293, "framegrabb": [293, 294], "tool": [293, 295], "button": 293, "grabber": [293, 294], "apporpri": 293, "x16": 293, "slot": 293, "motherboard": 293, "excap": 293, "camera_trigger_out_lin": 293, "extern": 293, "ctr0": 293, "download": [293, 295], "pvcam": 293, "sdk": [293, 296], "agre": 293, "term": 293, "unknown": 293, "broadcom": 293, "pci": 293, "kit": 293, "bridg": 293, "dev": 293, "_": 293, "abl": 293, "pvcamtest": 293, "lfa": 293, "2010": 293, "actuat": 293, "continu": [293, 296], "sync": 293, "ignal": 293, "synchron": 293, "encod": 293, "everi": 293, "less": 293, "perz": 293, "omicron": 294, "lighthub": 294, "ultra": 294, "acc": 294, "642": 294, "561": 294, "mix": 294, "obi": 294, "unidirect": 294, "bidirect": 294, "repeatablil": 294, "increment": 294, "motion": 294, "borderlin": 294, "coars": 294, "nvidia": [294, 296], "titan": 294, "rtx": 294, "456": 294, "71": 294, "flash": 294, "optotun": 294, "electrotun": 294, "len": 294, "blink": 294, "nation": 294, "1073": 294, "chassi": 294, "equip": 294, "pxi6733": 294, "32mm": 294, "position": 294, "mad": 294, "citi": 294, "lab": [294, 296], "nano": 294, "ut": 295, "southwestern": 295, "ecosystem": 295, "aim": 295, "abstract": 295, "custom": 295, "recip": 295, "maker": 295, "autom": 295, "project": 295, "repositori": [295, 296], "philosophi": 295, "minim": 295, "priorit": 295, "stabil": 295, "layer": 295, "brutal": 295, "obviou": 295, "understood": 295, "year": 295, "maxim": 295, "biolog": 295, "git": 295, "environ": 295, "troubleshoot": 295, "voicecoil": 295, "extend": 295, "principl": 295, "scientif": 295, "recommend": 296, "desktop": 296, "friendli": 296, "head": 296, "miniconda": 296, "websit": 296, "handi": 296, "cheatsheet": 296, "accustom": 296, "search": 296, "anaconda": 296, "frequent": 296, "taskbar": 296, "mycomput": 296, "firewal": 296, "utsw": 296, "campu": 296, "circumv": 296, "parenthes": 296, "far": 296, "activatin": 296, "upgrad": 296, "clone": 296, "easi": 296, "dean": 296, "mkdir": 296, "myfoldernam": 296, "thedeanlab": 296, "sh": 296, "completet": 296, "feedback": 296, "acceler": 296, "tensorflow": 296, "pytorch": 296, "cupi": 296, "excel": 296, "cudnn": 296, "graphic": 296, "450": 296, "80": 296, "tensorrt": 296, "microsoft": 296, "redistribut": 296, "studio": 296, "2015": 296, "2017": 296, "2019": 296, "http_proxi": 296, "swmed": 296, "edu": 296, "3128": 296, "https_proxi": 296, "typo": 296, "perspect": 296, "onlin": 296, "usersuserprofil": 296, "condarc": 296, "usersuserprofilepippip": 296, "ini": 296, "password": 296, "8080": 296}, "objects": {"aslm": [[0, 0, 0, "-", "config"], [7, 0, 0, "-", "controller"], [14, 0, 0, "-", "model"], [243, 0, 0, "-", "tools"], [278, 0, 0, "-", "view"]], "aslm.config": [[1, 0, 0, "-", "config"]], "aslm.config.config": [[2, 1, 1, "", "build_nested_dict"], [3, 1, 1, "", "get_aslm_path"], [4, 1, 1, "", "get_configuration_paths"], [5, 1, 1, "", "load_configs"], [6, 1, 1, "", "update_config_dict"]], "aslm.controller": [[8, 0, 0, "-", "configuration_controller"], [10, 0, 0, "-", "thread_pool"]], "aslm.controller.configuration_controller": [[9, 2, 1, "", "ConfigurationController"]], "aslm.controller.configuration_controller.ConfigurationController": [[9, 3, 1, "", "__init__"], [9, 4, 1, "", "camera_config_dict"], [9, 4, 1, "", "camera_pixels"], [9, 3, 1, "id0", "change_microscope"], [9, 4, 1, "", "channels_info"], [9, 4, 1, "", "daq_sample_rate"], [9, 4, 1, "", "filter_wheel_setting_dict"], [9, 4, 1, "", "galvo_parameter_dict"], [9, 3, 1, "id1", "get_microscope_configuration_dict"], [9, 3, 1, "id2", "get_stage_position_limits"], [9, 4, 1, "", "lasers_info"], [9, 4, 1, "", "number_of_channels"], [9, 4, 1, "", "remote_focus_dict"], [9, 4, 1, "", "stage_default_position"], [9, 4, 1, "", "stage_setting_dict"], [9, 4, 1, "", "stage_step"]], "aslm.controller.thread_pool": [[11, 2, 1, "", "SelfLockThread"], [12, 2, 1, "", "SynchronizedThreadPool"], [13, 2, 1, "", "ThreadWaitlist"]], "aslm.controller.thread_pool.SelfLockThread": [[11, 3, 1, "", "__init__"], [11, 4, 1, "", "daemon"], [11, 3, 1, "", "getName"], [11, 4, 1, "", "ident"], [11, 3, 1, "", "isDaemon"], [11, 3, 1, "", "isLocked"], [11, 3, 1, "", "is_alive"], [11, 3, 1, "", "join"], [11, 4, 1, "", "name"], [11, 4, 1, "", "native_id"], [11, 3, 1, "", "run"], [11, 3, 1, "", "setDaemon"], [11, 3, 1, "", "setName"], [11, 3, 1, "", "start"], [11, 3, 1, "", "unlock"], [11, 3, 1, "", "wait"]], "aslm.controller.thread_pool.SynchronizedThreadPool": [[12, 3, 1, "", "__init__"], [12, 3, 1, "", "clear"], [12, 3, 1, "", "createThread"], [12, 3, 1, "", "getRunningThread"], [12, 3, 1, "", "globaltrace"], [12, 3, 1, "", "killThreadInList"], [12, 3, 1, "", "localtrace"], [12, 3, 1, "", "moveToDelete"], [12, 3, 1, "", "registerResource"], [12, 3, 1, "", "removeThread"], [12, 3, 1, "", "threadTaskWrapping"]], "aslm.controller.thread_pool.ThreadWaitlist": [[13, 3, 1, "", "__init__"]], "aslm.model": [[15, 0, 0, "-", "analysis"], [56, 0, 0, "-", "concurrency"], [76, 0, 0, "-", "data_sources"], [86, 0, 0, "-", "device_startup_functions"], [104, 0, 0, "-", "devices"], [191, 0, 0, "-", "features"], [222, 0, 0, "-", "metadata_sources"], [230, 0, 0, "-", "microscope"], [232, 0, 0, "-", "model"], [234, 0, 0, "-", "waveforms"]], "aslm.model.analysis": [[16, 0, 0, "-", "boundary_detect"], [21, 0, 0, "-", "camera"], [26, 0, 0, "-", "detection"], [36, 0, 0, "-", "image_contrast"], [42, 0, 0, "-", "image_decorrelation"], [51, 0, 0, "-", "image_transform"], [54, 0, 0, "-", "spectral_unmixing"]], "aslm.model.analysis.boundary_detect": [[17, 1, 1, "", "binary_detect"], [18, 1, 1, "", "find_tissue_boundary_2d"], [19, 1, 1, "", "has_tissue"], [20, 1, 1, "", "map_boundary"]], "aslm.model.analysis.camera": [[22, 1, 1, "", "compute_flatfield_map"], [23, 1, 1, "", "compute_noise_sigma"], [24, 1, 1, "", "compute_scmos_offset_and_variance_map"], [25, 1, 1, "", "compute_signal_to_noise"]], "aslm.model.analysis.detection": [[27, 1, 1, "", "add_median_border"], [28, 1, 1, "", "combine_images"], [29, 1, 1, "", "log_detection"], [30, 1, 1, "", "make_inside_image"], [31, 1, 1, "", "make_normalized_image"], [32, 1, 1, "", "make_sphere_3D"], [33, 1, 1, "", "multiscale_surface_filter_3D"], [34, 1, 1, "", "surface_filter_gauss_3D"], [35, 1, 1, "", "three_level_segmentation"]], "aslm.model.analysis.image_contrast": [[37, 1, 1, "", "estimate_and_correct_flatfield"], [38, 1, 1, "", "estimate_image_resolution"], [39, 1, 1, "", "fast_normalized_dct_shannon_entropy"], [40, 1, 1, "", "image_intensity"], [41, 1, 1, "", "normalized_dct_shannon_entropy"]], "aslm.model.analysis.image_decorrelation": [[43, 1, 1, "", "apodize_image"], [44, 1, 1, "", "get_correlation_coefficient"], [45, 1, 1, "", "get_decorrelation_local_maxima"], [46, 1, 1, "", "get_image_decorrelation"], [47, 1, 1, "", "get_radial_average"], [48, 1, 1, "", "image_to_polar"], [49, 1, 1, "", "linear_map"], [50, 1, 1, "", "main_image_decorr"]], "aslm.model.analysis.image_transform": [[52, 1, 1, "", "deskew_image"], [53, 1, 1, "", "initiate_gpu"]], "aslm.model.analysis.spectral_unmixing": [[55, 1, 1, "", "to_do"]], "aslm.model.concurrency": [[57, 0, 0, "-", "concurrency_tools"], [68, 0, 0, "-", "proxy_objects"], [73, 0, 0, "-", "shared_memory"], [74, 0, 0, "-", "write_parameters"]], "aslm.model.concurrency.concurrency_tools": [[58, 2, 1, "", "CustodyThread"], [59, 5, 1, "", "FancyThread"], [60, 2, 1, "", "MyTestClass"], [61, 2, 1, "", "ObjectInSubprocess"], [62, 5, 1, "", "PoliteThread"], [63, 2, 1, "", "ResultThread"], [64, 2, 1, "", "SharedNDArray"], [65, 2, 1, "", "TestObjectInSubprocess"], [66, 2, 1, "", "TestResultThreadAndCustodyThread"], [67, 2, 1, "", "TestSharedNDArray"]], "aslm.model.concurrency.concurrency_tools.CustodyThread": [[58, 3, 1, "", "__init__"], [58, 4, 1, "", "daemon"], [58, 3, 1, "", "getName"], [58, 3, 1, "", "get_result"], [58, 4, 1, "", "ident"], [58, 3, 1, "", "isDaemon"], [58, 3, 1, "", "is_alive"], [58, 3, 1, "", "join"], [58, 4, 1, "", "name"], [58, 4, 1, "", "native_id"], [58, 3, 1, "", "run"], [58, 3, 1, "", "setDaemon"], [58, 3, 1, "", "setName"], [58, 3, 1, "", "start"]], "aslm.model.concurrency.concurrency_tools.MyTestClass": [[60, 3, 1, "", "__init__"], [60, 3, 1, "", "run"], [60, 3, 1, "", "time_it"]], "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess": [[61, 3, 1, "", "__init__"]], "aslm.model.concurrency.concurrency_tools.ResultThread": [[63, 3, 1, "", "__init__"], [63, 4, 1, "", "daemon"], [63, 3, 1, "", "getName"], [63, 3, 1, "", "get_result"], [63, 4, 1, "", "ident"], [63, 3, 1, "", "isDaemon"], [63, 3, 1, "", "is_alive"], [63, 3, 1, "", "join"], [63, 4, 1, "", "name"], [63, 4, 1, "", "native_id"], [63, 3, 1, "", "run"], [63, 3, 1, "", "setDaemon"], [63, 3, 1, "", "setName"], [63, 3, 1, "", "start"]], "aslm.model.concurrency.concurrency_tools.SharedNDArray": [[64, 5, 1, "", "ALIGNED"], [64, 5, 1, "", "BEHAVED"], [64, 5, 1, "", "CARRAY"], [64, 5, 1, "", "C_CONTIGUOUS"], [64, 5, 1, "", "FARRAY"], [64, 5, 1, "", "FNC"], [64, 5, 1, "", "FORC"], [64, 5, 1, "", "F_CONTIGUOUS"], [64, 5, 1, "", "OWNDATA"], [64, 5, 1, "", "T"], [64, 5, 1, "", "UPDATEIFCOPY"], [64, 5, 1, "", "WRITEABLE"], [64, 5, 1, "", "WRITEBACKIFCOPY"], [64, 3, 1, "", "__init__"], [64, 3, 1, "", "all"], [64, 3, 1, "", "any"], [64, 3, 1, "", "argmax"], [64, 3, 1, "", "argmin"], [64, 3, 1, "", "argpartition"], [64, 3, 1, "", "argsort"], [64, 3, 1, "", "astype"], [64, 5, 1, "", "base"], [64, 3, 1, "", "byteswap"], [64, 3, 1, "", "choose"], [64, 3, 1, "", "clip"], [64, 3, 1, "", "compress"], [64, 3, 1, "", "conj"], [64, 3, 1, "", "conjugate"], [64, 3, 1, "", "copy"], [64, 5, 1, "", "ctypes"], [64, 3, 1, "", "cumprod"], [64, 3, 1, "", "cumsum"], [64, 5, 1, "", "data"], [64, 3, 1, "", "diagonal"], [64, 5, 1, "", "dtype"], [64, 3, 1, "", "dump"], [64, 3, 1, "", "dumps"], [64, 3, 1, "", "fill"], [64, 5, 1, "", "flags"], [64, 5, 1, "", "flat"], [64, 3, 1, "", "flatten"], [64, 3, 1, "", "getfield"], [64, 5, 1, "", "imag"], [64, 3, 1, "", "item"], [64, 3, 1, "", "itemset"], [64, 5, 1, "", "itemsize"], [64, 3, 1, "", "max"], [64, 3, 1, "", "mean"], [64, 3, 1, "", "min"], [64, 5, 1, "", "nbytes"], [64, 5, 1, "", "ndim"], [64, 3, 1, "", "newbyteorder"], [64, 3, 1, "", "nonzero"], [64, 3, 1, "", "partition"], [64, 3, 1, "", "prod"], [64, 3, 1, "", "ptp"], [64, 3, 1, "", "put"], [64, 3, 1, "", "ravel"], [64, 5, 1, "", "real"], [64, 3, 1, "", "repeat"], [64, 3, 1, "", "reshape"], [64, 3, 1, "", "resize"], [64, 3, 1, "", "round"], [64, 3, 1, "", "searchsorted"], [64, 3, 1, "", "setfield"], [64, 3, 1, "", "setflags"], [64, 5, 1, "", "shape"], [64, 5, 1, "", "size"], [64, 3, 1, "", "sort"], [64, 3, 1, "", "squeeze"], [64, 3, 1, "", "std"], [64, 5, 1, "", "strides"], [64, 3, 1, "", "sum"], [64, 3, 1, "", "swapaxes"], [64, 3, 1, "", "take"], [64, 3, 1, "", "tobytes"], [64, 3, 1, "", "tofile"], [64, 3, 1, "", "tolist"], [64, 3, 1, "", "tostring"], [64, 3, 1, "", "trace"], [64, 3, 1, "", "transpose"], [64, 3, 1, "", "var"], [64, 3, 1, "", "view"]], "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess": [[65, 2, 1, "", "TestClass"], [65, 3, 1, "", "__init__"], [65, 3, 1, "", "run"], [65, 3, 1, "", "test_incorrect_thread_management"], [65, 3, 1, "", "test_lock_with_waitlist"], [65, 3, 1, "", "test_object_in_subprocess_overhead"], [65, 3, 1, "", "test_sending_shared_arrays"], [65, 3, 1, "", "time_it"]], "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread": [[66, 3, 1, "", "__init__"], [66, 3, 1, "", "run"], [66, 3, 1, "", "time_it"]], "aslm.model.concurrency.concurrency_tools.TestSharedNDArray": [[67, 3, 1, "", "__init__"], [67, 3, 1, "", "run"], [67, 3, 1, "", "test_ndarraylike_behavior"], [67, 3, 1, "", "test_serialization"], [67, 3, 1, "", "test_serializing_and_deserializing"], [67, 3, 1, "", "time_it"]], "aslm.model.concurrency.proxy_objects": [[69, 2, 1, "", "ProxyManager"], [70, 2, 1, "", "ProxyObject"], [71, 1, 1, "", "launch_custody_thread"], [72, 1, 1, "", "launch_thread"]], "aslm.model.concurrency.proxy_objects.ProxyManager": [[69, 3, 1, "", "__init__"], [69, 3, 1, "", "proxy_object"], [69, 3, 1, "", "shared_numpy_array"]], "aslm.model.concurrency.proxy_objects.ProxyObject": [[70, 3, 1, "", "__init__"]], "aslm.model.concurrency.write_parameters": [[75, 2, 1, "", "write_Params"]], "aslm.model.concurrency.write_parameters.write_Params": [[75, 3, 1, "", "__init__"]], "aslm.model.data_sources": [[77, 0, 0, "-", "bdv_data_source"], [79, 0, 0, "-", "data_source"], [81, 1, 1, "", "get_data_source"], [82, 0, 0, "-", "tiff_data_source"], [84, 0, 0, "-", "zarr_data_source"]], "aslm.model.data_sources.bdv_data_source": [[78, 2, 1, "", "BigDataViewerDataSource"]], "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource": [[78, 3, 1, "", "__init__"], [78, 3, 1, "", "close"], [78, 4, 1, "", "data"], [78, 3, 1, "", "read"], [78, 4, 1, "", "resolutions"], [78, 4, 1, "", "shape"], [78, 4, 1, "", "shapes"], [78, 4, 1, "", "subdivisions"], [78, 4, 1, "", "voxel_size"], [78, 3, 1, "", "write"]], "aslm.model.data_sources.data_source": [[80, 2, 1, "", "DataSource"]], "aslm.model.data_sources.data_source.DataSource": [[80, 3, 1, "", "__init__"], [80, 3, 1, "", "close"], [80, 4, 1, "", "data"], [80, 3, 1, "", "read"], [80, 4, 1, "", "shape"], [80, 4, 1, "", "voxel_size"], [80, 3, 1, "", "write"]], "aslm.model.data_sources.tiff_data_source": [[83, 2, 1, "", "TiffDataSource"]], "aslm.model.data_sources.tiff_data_source.TiffDataSource": [[83, 3, 1, "", "__init__"], [83, 3, 1, "", "close"], [83, 4, 1, "", "data"], [83, 3, 1, "", "generate_image_name"], [83, 3, 1, "", "read"], [83, 4, 1, "", "shape"], [83, 4, 1, "", "voxel_size"], [83, 3, 1, "", "write"]], "aslm.model.data_sources.zarr_data_source": [[85, 2, 1, "", "ZarrDataSource"]], "aslm.model.data_sources.zarr_data_source.ZarrDataSource": [[85, 3, 1, "", "__init__"], [85, 3, 1, "", "close"], [85, 3, 1, "", "copy_to_zarr"], [85, 4, 1, "", "data"], [85, 3, 1, "", "read"], [85, 4, 1, "", "shape"], [85, 4, 1, "", "voxel_size"], [85, 3, 1, "", "write"]], "aslm.model.device_startup_functions": [[87, 2, 1, "", "DummyDeviceConnection"], [88, 1, 1, "", "auto_redial"], [89, 1, 1, "", "device_not_found"], [90, 1, 1, "", "load_camera_connection"], [91, 1, 1, "", "load_devices"], [92, 1, 1, "", "load_filter_wheel_connection"], [93, 1, 1, "", "load_stages"], [94, 1, 1, "", "load_zoom_connection"], [95, 1, 1, "", "start_camera"], [96, 1, 1, "", "start_daq"], [97, 1, 1, "", "start_filter_wheel"], [98, 1, 1, "", "start_galvo"], [99, 1, 1, "", "start_lasers"], [100, 1, 1, "", "start_remote_focus_device"], [101, 1, 1, "", "start_shutter"], [102, 1, 1, "", "start_stage"], [103, 1, 1, "", "start_zoom"]], "aslm.model.device_startup_functions.DummyDeviceConnection": [[87, 3, 1, "", "__init__"]], "aslm.model.devices": [[105, 0, 0, "-", "APIs"], [110, 0, 0, "-", "camera"], [118, 0, 0, "-", "daq"], [123, 0, 0, "-", "filter_wheel"], [131, 0, 0, "-", "galvo"], [136, 0, 0, "-", "joystick"], [141, 0, 0, "-", "lasers"], [150, 0, 0, "-", "objectives"], [152, 0, 0, "-", "remote_focus"], [159, 0, 0, "-", "shutter"], [164, 0, 0, "-", "stages"], [186, 0, 0, "-", "zoom"]], "aslm.model.devices.APIs": [[106, 0, 0, "-", "coherent"], [107, 0, 0, "-", "dynamixel"], [108, 0, 0, "-", "logitech"], [109, 0, 0, "-", "omicron"]], "aslm.model.devices.camera": [[111, 0, 0, "-", "camera_base"], [113, 0, 0, "-", "camera_hamamatsu"], [115, 0, 0, "-", "camera_synthetic"]], "aslm.model.devices.camera.camera_base": [[112, 2, 1, "", "CameraBase"]], "aslm.model.devices.camera.camera_base.CameraBase": [[112, 3, 1, "", "__init__"], [112, 3, 1, "", "calculate_light_sheet_exposure_time"], [112, 3, 1, "", "set_readout_direction"]], "aslm.model.devices.camera.camera_hamamatsu": [[114, 2, 1, "", "HamamatsuOrca"]], "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca": [[114, 3, 1, "", "__init__"], [114, 3, 1, "", "calculate_light_sheet_exposure_time"], [114, 3, 1, "", "calculate_readout_time"], [114, 3, 1, "", "close_camera"], [114, 3, 1, "", "close_image_series"], [114, 3, 1, "", "get_minimum_waiting_time"], [114, 3, 1, "", "get_new_frame"], [114, 3, 1, "", "initialize_image_series"], [114, 3, 1, "", "report_settings"], [114, 4, 1, "", "serial_number"], [114, 3, 1, "", "set_ROI"], [114, 3, 1, "", "set_binning"], [114, 3, 1, "", "set_exposure_time"], [114, 3, 1, "", "set_line_interval"], [114, 3, 1, "", "set_readout_direction"], [114, 3, 1, "", "set_sensor_mode"]], "aslm.model.devices.camera.camera_synthetic": [[116, 2, 1, "", "SyntheticCamera"], [117, 2, 1, "", "SyntheticCameraController"]], "aslm.model.devices.camera.camera_synthetic.SyntheticCamera": [[116, 3, 1, "", "__init__"], [116, 3, 1, "", "calculate_light_sheet_exposure_time"], [116, 3, 1, "", "calculate_readout_time"], [116, 3, 1, "", "close_camera"], [116, 3, 1, "", "close_image_series"], [116, 3, 1, "", "generate_new_frame"], [116, 3, 1, "", "get_minimum_waiting_time"], [116, 3, 1, "", "get_new_frame"], [116, 3, 1, "", "initialize_image_series"], [116, 3, 1, "", "report_settings"], [116, 3, 1, "", "set_ROI"], [116, 3, 1, "", "set_binning"], [116, 3, 1, "", "set_exposure_time"], [116, 3, 1, "", "set_line_interval"], [116, 3, 1, "", "set_readout_direction"], [116, 3, 1, "", "set_sensor_mode"]], "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController": [[117, 3, 1, "", "__init__"], [117, 3, 1, "", "get_property_value"]], "aslm.model.devices.daq": [[119, 0, 0, "-", "daq_base"], [121, 0, 0, "-", "daq_synthetic"]], "aslm.model.devices.daq.daq_base": [[120, 2, 1, "", "DAQBase"]], "aslm.model.devices.daq.daq_base.DAQBase": [[120, 3, 1, "", "__init__"], [120, 3, 1, "", "calculate_all_waveforms"], [120, 5, 1, "", "configuration"]], "aslm.model.devices.daq.daq_synthetic": [[122, 2, 1, "", "SyntheticDAQ"]], "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ": [[122, 3, 1, "", "__init__"], [122, 3, 1, "", "add_camera"], [122, 3, 1, "", "calculate_all_waveforms"], [122, 3, 1, "", "close_tasks"], [122, 5, 1, "", "configuration"], [122, 3, 1, "", "create_camera_task"], [122, 3, 1, "", "create_galvo_remote_focus_tasks"], [122, 3, 1, "", "create_master_trigger_task"], [122, 3, 1, "", "prepare_acquisition"], [122, 3, 1, "", "run_acquisition"], [122, 3, 1, "", "start_tasks"], [122, 3, 1, "", "stop_acquisition"], [122, 3, 1, "", "stop_tasks"], [122, 3, 1, "", "write_waveforms_to_tasks"]], "aslm.model.devices.filter_wheel": [[124, 0, 0, "-", "filter_wheel_base"], [126, 0, 0, "-", "filter_wheel_sutter"], [129, 0, 0, "-", "filter_wheel_synthetic"]], "aslm.model.devices.filter_wheel.filter_wheel_base": [[125, 2, 1, "", "FilterWheelBase"]], "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase": [[125, 3, 1, "", "__init__"], [125, 3, 1, "id0", "check_if_filter_in_filter_dictionary"], [125, 5, 1, "", "filter_dictionary"], [125, 5, 1, "", "wheel_position"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter": [[127, 2, 1, "", "SutterFilterWheel"], [128, 5, 1, "", "baudrate"], [128, 1, 1, "", "build_filter_wheel_connection"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel": [[127, 3, 1, "", "__init__"], [127, 5, 1, "", "baudrate"], [127, 3, 1, "id0", "check_if_filter_in_filter_dictionary"], [127, 3, 1, "id1", "close"], [127, 5, 1, "", "comport"], [127, 3, 1, "id2", "filter_change_delay"], [127, 5, 1, "", "filter_dictionary"], [127, 5, 1, "", "number_of_filter_wheels"], [127, 3, 1, "id3", "read"], [127, 3, 1, "", "set_filter"], [127, 5, 1, "", "wheel_position"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic": [[130, 2, 1, "", "SyntheticFilterWheel"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel": [[130, 3, 1, "", "__init__"], [130, 5, 1, "", "baudrate"], [130, 3, 1, "", "check_if_filter_in_filter_dictionary"], [130, 3, 1, "", "close"], [130, 5, 1, "", "comport"], [130, 3, 1, "", "filter_change_delay"], [130, 5, 1, "", "filter_dictionary"], [130, 5, 1, "", "number_of_filter_wheels"], [130, 3, 1, "", "read"], [130, 3, 1, "", "set_filter"], [130, 5, 1, "", "wheel_position"]], "aslm.model.devices.galvo": [[132, 0, 0, "-", "galvo_base"], [134, 0, 0, "-", "galvo_synthetic"]], "aslm.model.devices.galvo.galvo_base": [[133, 2, 1, "", "GalvoBase"]], "aslm.model.devices.galvo.galvo_base.GalvoBase": [[133, 3, 1, "", "__init__"]], "aslm.model.devices.galvo.galvo_synthetic": [[135, 2, 1, "", "SyntheticGalvo"]], "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo": [[135, 3, 1, "", "__init__"]], "aslm.model.devices.joystick": [[137, 0, 0, "-", "joystick_base"], [139, 0, 0, "-", "joystick_synthetic"]], "aslm.model.devices.joystick.joystick_base": [[138, 2, 1, "", "JoystickBase"]], "aslm.model.devices.joystick.joystick_base.JoystickBase": [[138, 3, 1, "", "__init__"]], "aslm.model.devices.joystick.joystick_synthetic": [[140, 2, 1, "", "SyntheticJoystick"]], "aslm.model.devices.joystick.joystick_synthetic.SyntheticJoystick": [[140, 3, 1, "", "__init__"]], "aslm.model.devices.lasers": [[142, 0, 0, "-", "laser_base"], [144, 0, 0, "-", "laser_synthetic"], [146, 0, 0, "-", "laser_trigger_base"], [148, 0, 0, "-", "laser_trigger_synthetic"]], "aslm.model.devices.lasers.laser_base": [[143, 2, 1, "", "LaserBase"]], "aslm.model.devices.lasers.laser_base.LaserBase": [[143, 3, 1, "", "__init__"], [143, 3, 1, "", "close"], [143, 3, 1, "", "initialize_laser"]], "aslm.model.devices.lasers.laser_synthetic": [[145, 2, 1, "", "SyntheticLaser"]], "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser": [[145, 3, 1, "", "__init__"], [145, 3, 1, "", "close"], [145, 3, 1, "", "initialize_laser"]], "aslm.model.devices.lasers.laser_trigger_base": [[147, 2, 1, "", "LaserTriggerBase"]], "aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase": [[147, 3, 1, "", "__init__"], [147, 3, 1, "", "enable_high_resolution_laser"], [147, 3, 1, "", "enable_low_resolution_laser"], [147, 3, 1, "", "set_laser_analog_voltage"]], "aslm.model.devices.lasers.laser_trigger_synthetic": [[149, 2, 1, "", "SyntheticLaserTriggers"]], "aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers": [[149, 3, 1, "", "__init__"], [149, 3, 1, "", "enable_high_resolution_laser"], [149, 3, 1, "", "enable_low_resolution_laser"], [149, 3, 1, "", "set_laser_analog_voltage"]], "aslm.model.devices.objectives": [[151, 2, 1, "", "Objective"]], "aslm.model.devices.objectives.Objective": [[151, 3, 1, "", "__init__"], [151, 3, 1, "", "calculate_entrance_pupil"]], "aslm.model.devices.remote_focus": [[153, 0, 0, "-", "remote_focus_base"], [155, 0, 0, "-", "remote_focus_equipment_solutions"], [157, 0, 0, "-", "remote_focus_synthetic"]], "aslm.model.devices.remote_focus.remote_focus_base": [[154, 2, 1, "", "RemoteFocusBase"]], "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase": [[154, 3, 1, "", "__init__"]], "aslm.model.devices.remote_focus.remote_focus_equipment_solutions": [[156, 2, 1, "", "RemoteFocusEquipmentSolutions"]], "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions": [[156, 3, 1, "", "__init__"], [156, 5, 1, "", "baud_rate"], [156, 5, 1, "", "byte_size"], [156, 3, 1, "id0", "close_connection"], [156, 5, 1, "", "comport"], [156, 5, 1, "", "debug"], [156, 5, 1, "", "parity"], [156, 3, 1, "id1", "read_bytes"], [156, 5, 1, "", "read_on_init"], [156, 3, 1, "id2", "send_command"], [156, 5, 1, "", "stop_bits"], [156, 5, 1, "", "timeout"]], "aslm.model.devices.remote_focus.remote_focus_synthetic": [[158, 2, 1, "", "SyntheticRemoteFocus"]], "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus": [[158, 3, 1, "", "__init__"]], "aslm.model.devices.shutter": [[160, 0, 0, "-", "laser_shutter_base"], [162, 0, 0, "-", "laser_shutter_synthetic"]], "aslm.model.devices.shutter.laser_shutter_base": [[161, 2, 1, "", "ShutterBase"]], "aslm.model.devices.shutter.laser_shutter_base.ShutterBase": [[161, 3, 1, "", "__init__"], [161, 5, 1, "", "configuration"], [161, 5, 1, "", "device_connection"], [161, 5, 1, "", "microscope_name"]], "aslm.model.devices.shutter.laser_shutter_synthetic": [[163, 2, 1, "", "SyntheticShutter"]], "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter": [[163, 3, 1, "", "__init__"], [163, 3, 1, "", "close_shutters"], [163, 5, 1, "", "configuration"], [163, 5, 1, "", "device_connection"], [163, 5, 1, "", "microscope_name"], [163, 3, 1, "", "open_left"], [163, 3, 1, "", "open_right"], [163, 3, 1, "", "state"]], "aslm.model.devices.stages": [[165, 0, 0, "-", "stage_asi"], [168, 0, 0, "-", "stage_base"], [170, 0, 0, "-", "stage_galvo"], [172, 0, 0, "-", "stage_mcl"], [175, 0, 0, "-", "stage_pi"], [178, 0, 0, "-", "stage_sutter"], [181, 0, 0, "-", "stage_synthetic"], [183, 0, 0, "-", "stage_tl_kcube_inertial"]], "aslm.model.devices.stages.stage_asi": [[166, 2, 1, "", "ASIStage"], [167, 1, 1, "", "build_ASI_Stage_connection"]], "aslm.model.devices.stages.stage_asi.ASIStage": [[166, 3, 1, "", "__init__"], [166, 3, 1, "", "create_position_dict"], [166, 3, 1, "", "get_abs_position"], [166, 3, 1, "", "move_absolute"], [166, 3, 1, "", "move_axis_absolute"], [166, 3, 1, "", "report_position"], [166, 3, 1, "", "stop"]], "aslm.model.devices.stages.stage_base": [[169, 2, 1, "", "StageBase"]], "aslm.model.devices.stages.stage_base.StageBase": [[169, 3, 1, "", "__init__"], [169, 3, 1, "id0", "create_position_dict"], [169, 5, 1, "", "f_max"], [169, 5, 1, "", "f_min"], [169, 5, 1, "", "f_pos"], [169, 3, 1, "id1", "get_abs_position"], [169, 5, 1, "", "position_dict"], [169, 3, 1, "id2", "stop"], [169, 5, 1, "", "theta_max"], [169, 5, 1, "", "theta_min"], [169, 5, 1, "", "theta_pos"], [169, 5, 1, "", "x_max"], [169, 5, 1, "", "x_min"], [169, 5, 1, "", "x_pos"], [169, 5, 1, "", "y_max"], [169, 5, 1, "", "y_min"], [169, 5, 1, "", "y_pos"], [169, 5, 1, "", "z_max"], [169, 5, 1, "", "z_min"], [169, 5, 1, "", "z_pos"]], "aslm.model.devices.stages.stage_galvo": [[171, 2, 1, "", "GalvoNIStage"]], "aslm.model.devices.stages.stage_galvo.GalvoNIStage": [[171, 3, 1, "", "__init__"], [171, 3, 1, "id0", "create_position_dict"], [171, 3, 1, "id1", "get_abs_position"], [171, 3, 1, "", "move_absolute"], [171, 3, 1, "", "move_axis_absolute"], [171, 3, 1, "", "report_position"], [171, 3, 1, "id2", "stop"]], "aslm.model.devices.stages.stage_mcl": [[173, 2, 1, "", "MCLStage"], [174, 1, 1, "", "build_MCLStage_connection"]], "aslm.model.devices.stages.stage_mcl.MCLStage": [[173, 3, 1, "", "__init__"], [173, 3, 1, "", "create_position_dict"], [173, 3, 1, "", "get_abs_position"], [173, 3, 1, "", "move_absolute"], [173, 3, 1, "", "move_axis_absolute"], [173, 3, 1, "", "report_position"], [173, 3, 1, "", "stop"]], "aslm.model.devices.stages.stage_pi": [[176, 2, 1, "", "PIStage"], [177, 1, 1, "", "build_PIStage_connection"]], "aslm.model.devices.stages.stage_pi.PIStage": [[176, 3, 1, "", "__init__"], [176, 3, 1, "id0", "create_position_dict"], [176, 5, 1, "", "f_max"], [176, 5, 1, "", "f_min"], [176, 5, 1, "", "f_pos"], [176, 3, 1, "id1", "get_abs_position"], [176, 3, 1, "", "move_absolute"], [176, 3, 1, "", "move_axis_absolute"], [176, 5, 1, "", "position_dict"], [176, 3, 1, "", "report_position"], [176, 3, 1, "id2", "stop"], [176, 5, 1, "", "theta_max"], [176, 5, 1, "", "theta_min"], [176, 5, 1, "", "theta_pos"], [176, 5, 1, "", "x_max"], [176, 5, 1, "", "x_min"], [176, 5, 1, "", "x_pos"], [176, 5, 1, "", "y_max"], [176, 5, 1, "", "y_min"], [176, 5, 1, "", "y_pos"], [176, 5, 1, "", "z_max"], [176, 5, 1, "", "z_min"], [176, 5, 1, "", "z_pos"]], "aslm.model.devices.stages.stage_sutter": [[179, 2, 1, "", "SutterStage"], [180, 5, 1, "", "baudrate"], [180, 1, 1, "", "build_sutter_stage_connection"], [180, 5, 1, "", "comport"]], "aslm.model.devices.stages.stage_sutter.SutterStage": [[179, 3, 1, "", "__init__"], [179, 5, 1, "", "baudrate"], [179, 3, 1, "", "check_byte_order"], [179, 3, 1, "id0", "close"], [179, 5, 1, "", "comport"], [179, 3, 1, "", "convert_microns_to_microsteps"], [179, 3, 1, "", "convert_microsteps_to_microns"], [179, 3, 1, "", "create_position_dict"], [179, 5, 1, "", "filter_dictionary"], [179, 3, 1, "", "flush_buffers"], [179, 3, 1, "", "get_abs_position"], [179, 3, 1, "", "move_absolute"], [179, 3, 1, "", "move_axis_absolute"], [179, 3, 1, "", "read"], [179, 3, 1, "", "report_position"], [179, 3, 1, "", "set_stage_speed_and_resolution"], [179, 3, 1, "", "stop"]], "aslm.model.devices.stages.stage_synthetic": [[182, 2, 1, "", "SyntheticStage"]], "aslm.model.devices.stages.stage_synthetic.SyntheticStage": [[182, 3, 1, "", "__init__"], [182, 3, 1, "", "create_position_dict"], [182, 3, 1, "", "get_abs_position"], [182, 3, 1, "", "move_absolute"], [182, 3, 1, "", "move_axis_absolute"], [182, 3, 1, "", "stop"]], "aslm.model.devices.stages.stage_tl_kcube_inertial": [[184, 2, 1, "", "TLKIMStage"], [185, 1, 1, "", "build_TLKIMStage_connection"]], "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage": [[184, 3, 1, "", "__init__"], [184, 3, 1, "", "create_position_dict"], [184, 3, 1, "", "get_abs_position"], [184, 3, 1, "", "move_absolute"], [184, 3, 1, "", "move_axis_absolute"], [184, 3, 1, "", "report_position"], [184, 3, 1, "", "stop"]], "aslm.model.devices.zoom": [[187, 0, 0, "-", "zoom_base"], [189, 0, 0, "-", "zoom_synthetic"]], "aslm.model.devices.zoom.zoom_base": [[188, 2, 1, "", "ZoomBase"]], "aslm.model.devices.zoom.zoom_base.ZoomBase": [[188, 3, 1, "", "__init__"], [188, 3, 1, "", "move"], [188, 3, 1, "", "read_position"], [188, 3, 1, "", "set_zoom"]], "aslm.model.devices.zoom.zoom_synthetic": [[190, 2, 1, "", "SyntheticZoom"]], "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom": [[190, 3, 1, "", "__init__"], [190, 3, 1, "id0", "move"], [190, 3, 1, "id1", "read_position"], [190, 3, 1, "id2", "set_zoom"]], "aslm.model.features": [[192, 0, 0, "-", "autofocus"], [194, 0, 0, "-", "common_features"], [202, 0, 0, "-", "dummy_detective"], [204, 0, 0, "-", "feature_container"], [215, 0, 0, "-", "image_writer"], [217, 0, 0, "-", "restful_features"], [220, 0, 0, "-", "volume_search"]], "aslm.model.features.autofocus": [[193, 2, 1, "", "Autofocus"]], "aslm.model.features.autofocus.Autofocus": [[193, 3, 1, "", "__init__"], [193, 3, 1, "", "get_autofocus_frame_num"], [193, 3, 1, "", "get_steps"], [193, 3, 1, "", "run"]], "aslm.model.features.common_features": [[195, 2, 1, "", "ChangeResolution"], [196, 2, 1, "", "FindTissueSimple2D"], [197, 2, 1, "", "LoopByCount"], [198, 2, 1, "", "PrepareNextChannel"], [199, 2, 1, "", "Snap"], [200, 2, 1, "", "WaitToContinue"], [201, 2, 1, "", "ZStackAcquisition"]], "aslm.model.features.common_features.ChangeResolution": [[195, 3, 1, "", "__init__"]], "aslm.model.features.common_features.FindTissueSimple2D": [[196, 3, 1, "", "__init__"]], "aslm.model.features.common_features.LoopByCount": [[197, 3, 1, "", "__init__"]], "aslm.model.features.common_features.PrepareNextChannel": [[198, 3, 1, "", "__init__"]], "aslm.model.features.common_features.Snap": [[199, 3, 1, "", "__init__"]], "aslm.model.features.common_features.WaitToContinue": [[200, 3, 1, "", "__init__"]], "aslm.model.features.common_features.ZStackAcquisition": [[201, 3, 1, "", "__init__"]], "aslm.model.features.dummy_detective": [[203, 2, 1, "", "Dummy_Detective"]], "aslm.model.features.dummy_detective.Dummy_Detective": [[203, 3, 1, "", "__init__"]], "aslm.model.features.feature_container": [[205, 2, 1, "", "Container"], [206, 2, 1, "", "DataContainer"], [207, 2, 1, "", "DataNode"], [208, 2, 1, "", "SignalContainer"], [209, 2, 1, "", "SignalNode"], [210, 2, 1, "", "TreeNode"], [211, 1, 1, "", "dummy_True"], [212, 1, 1, "", "dummy_func"], [213, 1, 1, "", "get_registered_funcs"], [214, 1, 1, "", "load_features"]], "aslm.model.features.feature_container.Container": [[205, 3, 1, "", "__init__"]], "aslm.model.features.feature_container.DataContainer": [[206, 3, 1, "", "__init__"]], "aslm.model.features.feature_container.DataNode": [[207, 3, 1, "", "__init__"]], "aslm.model.features.feature_container.SignalContainer": [[208, 3, 1, "", "__init__"]], "aslm.model.features.feature_container.SignalNode": [[209, 3, 1, "", "__init__"]], "aslm.model.features.feature_container.TreeNode": [[210, 3, 1, "", "__init__"]], "aslm.model.features.image_writer": [[216, 2, 1, "", "ImageWriter"]], "aslm.model.features.image_writer.ImageWriter": [[216, 3, 1, "", "__init__"], [216, 3, 1, "", "close"], [216, 3, 1, "", "generate_image_name"], [216, 3, 1, "", "save_image"]], "aslm.model.features.restful_features": [[218, 2, 1, "", "IlastikSegmentation"], [219, 1, 1, "", "prepare_service"]], "aslm.model.features.restful_features.IlastikSegmentation": [[218, 3, 1, "", "__init__"]], "aslm.model.features.volume_search": [[221, 2, 1, "", "VolumeSearch"]], "aslm.model.features.volume_search.VolumeSearch": [[221, 3, 1, "", "__init__"]], "aslm.model.metadata_sources": [[223, 0, 0, "-", "bdv_metadata"], [225, 0, 0, "-", "metadata"], [228, 0, 0, "-", "ome_tiff_metadata"]], "aslm.model.metadata_sources.bdv_metadata": [[224, 2, 1, "", "BigDataViewerMetadata"]], "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata": [[224, 3, 1, "", "__init__"], [224, 3, 1, "", "parse_bdv_xml"], [224, 4, 1, "", "shape"], [224, 3, 1, "", "stage_positions_to_affine_matrix"], [224, 3, 1, "", "to_xml"], [224, 4, 1, "", "voxel_size"], [224, 3, 1, "", "write_xml"]], "aslm.model.metadata_sources.metadata": [[226, 2, 1, "", "Metadata"], [227, 2, 1, "", "XMLMetadata"]], "aslm.model.metadata_sources.metadata.Metadata": [[226, 3, 1, "", "__init__"], [226, 4, 1, "", "shape"], [226, 4, 1, "", "voxel_size"]], "aslm.model.metadata_sources.metadata.XMLMetadata": [[227, 3, 1, "", "__init__"], [227, 4, 1, "", "shape"], [227, 3, 1, "", "to_xml"], [227, 4, 1, "", "voxel_size"], [227, 3, 1, "", "write_xml"]], "aslm.model.metadata_sources.ome_tiff_metadata": [[229, 2, 1, "", "OMETIFFMetadata"]], "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata": [[229, 3, 1, "", "__init__"], [229, 3, 1, "", "ome_tiff_xml_dict"], [229, 4, 1, "", "shape"], [229, 3, 1, "", "to_xml"], [229, 4, 1, "", "voxel_size"], [229, 3, 1, "", "write_xml"]], "aslm.model.microscope": [[231, 2, 1, "", "Microscope"]], "aslm.model.microscope.Microscope": [[231, 3, 1, "", "__init__"], [231, 3, 1, "", "calculate_all_waveform"], [231, 3, 1, "", "end_acquisition"], [231, 3, 1, "", "get_readout_time"], [231, 3, 1, "", "get_stage_position"], [231, 3, 1, "", "move_stage"], [231, 3, 1, "", "move_stage_offset"], [231, 3, 1, "", "prepare_acquisition"], [231, 3, 1, "", "prepare_next_channel"], [231, 3, 1, "", "stop_stage"], [231, 3, 1, "", "update_data_buffer"]], "aslm.model.model": [[233, 2, 1, "", "Model"]], "aslm.model.model.Model": [[233, 5, 1, "", "USE_GPU"], [233, 3, 1, "", "__init__"], [233, 5, 1, "", "args"], [233, 3, 1, "", "change_resolution"], [233, 5, 1, "", "configuration_path"], [233, 3, 1, "id0", "create_pipe"], [233, 3, 1, "id1", "end_acquisition"], [233, 5, 1, "", "event_queue"], [233, 5, 1, "", "experiment_path"], [233, 3, 1, "", "get_active_microscope"], [233, 3, 1, "id2", "get_data_buffer"], [233, 3, 1, "", "get_offset_variance_maps"], [233, 3, 1, "", "get_readout_time"], [233, 3, 1, "", "get_stage_position"], [233, 3, 1, "", "load_images"], [233, 3, 1, "id3", "move_stage"], [233, 3, 1, "", "pause_data_thread"], [233, 3, 1, "id4", "prepare_acquisition"], [233, 3, 1, "id5", "release_pipe"], [233, 3, 1, "", "resume_data_thread"], [233, 3, 1, "", "run_acquisition"], [233, 3, 1, "id6", "run_command"], [233, 3, 1, "id7", "run_data_process"], [233, 3, 1, "id8", "run_live_acquisition"], [233, 3, 1, "", "run_single_acquisition"], [233, 3, 1, "", "run_single_channel_acquisition"], [233, 3, 1, "", "run_single_channel_acquisition_with_features"], [233, 3, 1, "", "run_z_stack_acquisition"], [233, 3, 1, "id9", "snap_image"], [233, 3, 1, "", "stop_stage"], [233, 3, 1, "id10", "update_data_buffer"], [233, 3, 1, "", "update_ilastik_setting"]], "aslm.model.waveforms": [[235, 1, 1, "", "camera_exposure"], [236, 1, 1, "", "dc_value"], [237, 1, 1, "", "remote_focus_ramp"], [238, 1, 1, "", "sawtooth"], [239, 1, 1, "", "sine_wave"], [240, 1, 1, "", "single_pulse"], [241, 1, 1, "", "smooth_waveform"], [242, 1, 1, "", "square"]], "aslm.tools": [[244, 0, 0, "-", "beams"], [248, 0, 0, "-", "common_dict_tools"], [251, 0, 0, "-", "common_functions"], [255, 0, 0, "-", "decorators"], [257, 0, 0, "-", "file_functions"], [260, 0, 0, "-", "image"], [262, 0, 0, "-", "image_loaders"], [264, 0, 0, "-", "main_functions"], [268, 0, 0, "-", "multipos_table_tools"], [273, 0, 0, "-", "project_stats"], [275, 0, 0, "-", "xml_tools"]], "aslm.tools.beams": [[245, 1, 1, "", "fit_gaussian_beam_error"], [246, 1, 1, "", "fit_gaussian_beam_mse"], [247, 1, 1, "", "gaussian_beam"]], "aslm.tools.common_dict_tools": [[249, 1, 1, "", "update_settings_common"], [250, 1, 1, "", "update_stage_dict"]], "aslm.tools.common_functions": [[252, 1, 1, "", "build_ref_name"], [253, 1, 1, "", "combine_funcs"], [254, 1, 1, "", "copy_proxy_object"]], "aslm.tools.decorators": [[256, 1, 1, "", "function_timer"]], "aslm.tools.file_functions": [[258, 1, 1, "", "create_save_path"], [259, 1, 1, "", "save_yaml_file"]], "aslm.tools.image": [[261, 1, 1, "", "text_array"]], "aslm.tools.image_loaders": [[263, 2, 1, "", "LazyTiff"]], "aslm.tools.image_loaders.LazyTiff": [[263, 3, 1, "", "__init__"]], "aslm.tools.main_functions": [[265, 1, 1, "", "create_parser"], [266, 1, 1, "", "evaluate_parser_input_arguments"], [267, 1, 1, "", "identify_gpu"]], "aslm.tools.multipos_table_tools": [[269, 1, 1, "", "calc_num_tiles"], [270, 1, 1, "", "compute_tiles_from_bounding_box"], [271, 1, 1, "", "sign"], [272, 1, 1, "", "update_table"]], "aslm.tools.project_stats": [[274, 1, 1, "", "countlines"]], "aslm.tools.xml_tools": [[276, 1, 1, "", "dict_to_xml"], [277, 1, 1, "", "parse_xml"]], "aslm.view": [[279, 0, 0, "-", "main_window_content"], [285, 0, 0, "-", "menus"]], "aslm.view.main_window_content": [[280, 0, 0, "-", "acquire_bar_frame"], [281, 0, 0, "-", "channel_settings"], [283, 0, 0, "-", "stage_control"]], "aslm.view.main_window_content.channel_settings": [[282, 0, 0, "-", "channel_settings_frames"]], "aslm.view.main_window_content.stage_control": [[284, 0, 0, "-", "stage_control_frames"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:property", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"aslm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 289, 291, 292, 294], "config": [0, 1, 2, 3, 4, 5, 6], "build_nested_dict": 2, "get_aslm_path": 3, "get_configuration_path": 4, "load_config": 5, "update_config_dict": 6, "control": [7, 8, 9, 10, 11, 12, 13], "configuration_control": [8, 9], "configurationcontrol": 9, "thread_pool": [10, 11, 12, 13], "selflockthread": 11, "synchronizedthreadpool": 12, "threadwaitlist": 13, "model": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242], "analysi": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55], "boundary_detect": [16, 17, 18, 19, 20], "binary_detect": 17, "find_tissue_boundary_2d": 18, "has_tissu": 19, "map_boundari": 20, "camera": [21, 22, 23, 24, 25, 110, 111, 112, 113, 114, 115, 116, 117, 293], "compute_flatfield_map": 22, "compute_noise_sigma": 23, "compute_scmos_offset_and_variance_map": 24, "compute_signal_to_nois": 25, "detect": [26, 27, 28, 29, 30, 31, 32, 33, 34, 35], "add_median_bord": 27, "combine_imag": 28, "log_detect": 29, "make_inside_imag": 30, "make_normalized_imag": 31, "make_sphere_3d": 32, "multiscale_surface_filter_3d": 33, "surface_filter_gauss_3d": 34, "three_level_segment": 35, "image_contrast": [36, 37, 38, 39, 40, 41], "estimate_and_correct_flatfield": 37, "estimate_image_resolut": 38, "fast_normalized_dct_shannon_entropi": 39, "image_intens": 40, "normalized_dct_shannon_entropi": 41, "image_decorrel": [42, 43, 44, 45, 46, 47, 48, 49, 50], "apodize_imag": 43, "get_correlation_coeffici": 44, "get_decorrelation_local_maxima": 45, "get_image_decorrel": 46, "get_radial_averag": 47, "image_to_polar": 48, "linear_map": 49, "main_image_decorr": 50, "image_transform": [51, 52, 53], "deskew_imag": 52, "initiate_gpu": 53, "spectral_unmix": [54, 55], "to_do": 55, "concurr": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "concurrency_tool": [57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "custodythread": 58, "fancythread": 59, "mytestclass": 60, "objectinsubprocess": 61, "politethread": 62, "resultthread": 63, "sharedndarrai": 64, "testobjectinsubprocess": 65, "testresultthreadandcustodythread": 66, "testsharedndarrai": 67, "proxy_object": [68, 69, 70, 71, 72], "proxymanag": 69, "proxyobject": 70, "launch_custody_thread": 71, "launch_thread": 72, "shared_memori": 73, "write_paramet": [74, 75], "write_param": 75, "data_sourc": [76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "bdv_data_sourc": [77, 78], "bigdataviewerdatasourc": 78, "datasourc": 80, "get_data_sourc": 81, "tiff_data_sourc": [82, 83], "tiffdatasourc": 83, "zarr_data_sourc": [84, 85], "zarrdatasourc": 85, "device_startup_funct": [86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "dummydeviceconnect": 87, "auto_redi": 88, "device_not_found": 89, "load_camera_connect": 90, "load_devic": 91, "load_filter_wheel_connect": 92, "load_stag": 93, "load_zoom_connect": 94, "start_camera": 95, "start_daq": 96, "start_filter_wheel": 97, "start_galvo": 98, "start_las": 99, "start_remote_focus_devic": 100, "start_shutt": 101, "start_stag": 102, "start_zoom": 103, "devic": [104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190], "api": [105, 106, 107, 108, 109, 288], "coher": 106, "dynamixel": 107, "logitech": 108, "omicron": 109, "camera_bas": [111, 112], "camerabas": 112, "camera_hamamatsu": [113, 114], "hamamatsuorca": 114, "camera_synthet": [115, 116, 117], "syntheticcamera": 116, "syntheticcameracontrol": 117, "daq": [118, 119, 120, 121, 122], "daq_bas": [119, 120], "daqbas": 120, "daq_synthet": [121, 122], "syntheticdaq": 122, "filter_wheel": [123, 124, 125, 126, 127, 128, 129, 130], "filter_wheel_bas": [124, 125], "filterwheelbas": 125, "filter_wheel_sutt": [126, 127, 128], "sutterfilterwheel": 127, "build_filter_wheel_connect": 128, "filter_wheel_synthet": [129, 130], "syntheticfilterwheel": 130, "galvo": [131, 132, 133, 134, 135], "galvo_bas": [132, 133], "galvobas": 133, "galvo_synthet": [134, 135], "syntheticgalvo": 135, "joystick": [136, 137, 138, 139, 140], "joystick_bas": [137, 138], "joystickbas": 138, "joystick_synthet": [139, 140], "syntheticjoystick": 140, "laser": [141, 142, 143, 144, 145, 146, 147, 148, 149], "laser_bas": [142, 143], "laserbas": 143, "laser_synthet": [144, 145], "syntheticlas": 145, "laser_trigger_bas": [146, 147], "lasertriggerbas": 147, "laser_trigger_synthet": [148, 149], "syntheticlasertrigg": 149, "object": [150, 151, 291], "remote_focu": [152, 153, 154, 155, 156, 157, 158], "remote_focus_bas": [153, 154], "remotefocusbas": 154, "remote_focus_equipment_solut": [155, 156], "remotefocusequipmentsolut": 156, "remote_focus_synthet": [157, 158], "syntheticremotefocu": 158, "shutter": [159, 160, 161, 162, 163], "laser_shutter_bas": [160, 161], "shutterbas": 161, "laser_shutter_synthet": [162, 163], "syntheticshutt": 163, "stage": [164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 293], "stage_asi": [165, 166, 167], "asistag": 166, "build_asi_stage_connect": 167, "stage_bas": [168, 169], "stagebas": 169, "stage_galvo": [170, 171], "galvonistag": 171, "stage_mcl": [172, 173, 174], "mclstage": 173, "build_mclstage_connect": 174, "stage_pi": [175, 176, 177], "pistag": 176, "build_pistage_connect": 177, "stage_sutt": [178, 179, 180], "sutterstag": 179, "build_sutter_stage_connect": 180, "stage_synthet": [181, 182], "syntheticstag": 182, "stage_tl_kcube_inerti": [183, 184, 185], "tlkimstag": 184, "build_tlkimstage_connect": 185, "zoom": [186, 187, 188, 189, 190], "zoom_bas": [187, 188], "zoombas": 188, "zoom_synthet": [189, 190], "syntheticzoom": 190, "featur": [191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 291], "autofocu": [192, 193], "common_featur": [194, 195, 196, 197, 198, 199, 200, 201], "changeresolut": 195, "findtissuesimple2d": 196, "loopbycount": 197, "preparenextchannel": 198, "snap": 199, "waittocontinu": 200, "zstackacquisit": 201, "dummy_detect": [202, 203], "feature_contain": [204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214], "contain": [205, 291], "datacontain": 206, "datanod": 207, "signalcontain": 208, "signalnod": 209, "treenod": 210, "dummy_tru": 211, "dummy_func": 212, "get_registered_func": 213, "load_featur": 214, "image_writ": [215, 216], "imagewrit": 216, "restful_featur": [217, 218, 219], "ilastiksegment": 218, "prepare_servic": 219, "volume_search": [220, 221], "volumesearch": 221, "metadata_sourc": [222, 223, 224, 225, 226, 227, 228, 229], "bdv_metadata": [223, 224], "bigdataviewermetadata": 224, "metadata": [225, 226, 227], "xmlmetadata": 227, "ome_tiff_metadata": [228, 229], "ometiffmetadata": 229, "microscop": [230, 231, 289, 294], "waveform": [234, 235, 236, 237, 238, 239, 240, 241, 242], "camera_exposur": 235, "dc_valu": 236, "remote_focus_ramp": 237, "sawtooth": 238, "sine_wav": 239, "single_puls": 240, "smooth_waveform": 241, "squar": 242, "tool": [243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277], "beam": [244, 245, 246, 247], "fit_gaussian_beam_error": 245, "fit_gaussian_beam_ms": 246, "gaussian_beam": 247, "common_dict_tool": [248, 249, 250], "update_settings_common": 249, "update_stage_dict": 250, "common_funct": [251, 252, 253, 254], "build_ref_nam": 252, "combine_func": 253, "copy_proxy_object": 254, "decor": [255, 256], "function_tim": 256, "file_funct": [257, 258, 259], "create_save_path": 258, "save_yaml_fil": 259, "imag": [260, 261], "text_arrai": 261, "image_load": [262, 263], "lazytiff": 263, "main_funct": [264, 265, 266, 267], "create_pars": 265, "evaluate_parser_input_argu": 266, "identify_gpu": 267, "multipos_table_tool": [268, 269, 270, 271, 272], "calc_num_til": 269, "compute_tiles_from_bounding_box": 270, "sign": 271, "update_t": 272, "project_stat": [273, 274], "countlin": 274, "xml_tool": [275, 276, 277], "dict_to_xml": 276, "parse_xml": 277, "view": [278, 279, 280, 281, 282, 283, 284, 285], "main_window_cont": [279, 280, 281, 282, 283, 284], "acquire_bar_fram": 280, "channel_set": [281, 282], "channel_settings_fram": 282, "stage_control": [283, 284], "stage_control_fram": 284, "menu": 285, "refer": 288, "configur": [289, 293], "yaml": 289, "hardwar": [289, 293], "section": 289, "gui": 289, "contribut": 290, "guidelin": 290, "gener": 290, "principl": 290, "code": 290, "style": 290, "unit": 290, "test": 290, "scientif": 290, "The": 291, "write": 291, "custom": 291, "extend": 292, "setup": [293, 296], "file": 293, "data": 293, "acquisit": 293, "card": 293, "wire": 293, "hamamatsu": 293, "photometr": 293, "voicecoil": 293, "equip": 293, "solut": 293, "asi": 293, "implement": 294, "multiscal": 294, "upright": 294, "ct": 294, "v2": 294, "opm": 294, "autonom": 295, "softwar": [295, 296], "light": 295, "microscopi": 295, "content": 295, "index": 295, "search": 295, "instal": 296, "download": 296, "git": 296, "your": 296, "python": 296, "environ": 296, "gpu": 296, "depend": 296, "troubleshoot": 296, "user": 297, "guid": 297}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"aslm.config": [[0, "module-aslm.config"]], "aslm.config.config": [[1, "module-aslm.config.config"]], "aslm.config.config.build_nested_dict": [[2, "aslm-config-config-build-nested-dict"]], "aslm.config.config.get_aslm_path": [[3, "aslm-config-config-get-aslm-path"]], "aslm.config.config.get_configuration_paths": [[4, "aslm-config-config-get-configuration-paths"]], "aslm.config.config.load_configs": [[5, "aslm-config-config-load-configs"]], "aslm.config.config.update_config_dict": [[6, "aslm-config-config-update-config-dict"]], "aslm.controller": [[7, "module-aslm.controller"]], "aslm.controller.configuration_controller": [[8, "module-aslm.controller.configuration_controller"]], "aslm.controller.configuration_controller.ConfigurationController": [[9, "aslm-controller-configuration-controller-configurationcontroller"]], "aslm.controller.thread_pool": [[10, "module-aslm.controller.thread_pool"]], "aslm.controller.thread_pool.SelfLockThread": [[11, "aslm-controller-thread-pool-selflockthread"]], "aslm.controller.thread_pool.SynchronizedThreadPool": [[12, "aslm-controller-thread-pool-synchronizedthreadpool"]], "aslm.controller.thread_pool.ThreadWaitlist": [[13, "aslm-controller-thread-pool-threadwaitlist"]], "aslm.model": [[14, "module-aslm.model"]], "aslm.model.analysis": [[15, "module-aslm.model.analysis"]], "aslm.model.analysis.boundary_detect": [[16, "module-aslm.model.analysis.boundary_detect"]], "aslm.model.analysis.boundary_detect.binary_detect": [[17, "aslm-model-analysis-boundary-detect-binary-detect"]], "aslm.model.analysis.boundary_detect.find_tissue_boundary_2d": [[18, "aslm-model-analysis-boundary-detect-find-tissue-boundary-2d"]], "aslm.model.analysis.boundary_detect.has_tissue": [[19, "aslm-model-analysis-boundary-detect-has-tissue"]], "aslm.model.analysis.boundary_detect.map_boundary": [[20, "aslm-model-analysis-boundary-detect-map-boundary"]], "aslm.model.analysis.camera": [[21, "module-aslm.model.analysis.camera"]], "aslm.model.analysis.camera.compute_flatfield_map": [[22, "aslm-model-analysis-camera-compute-flatfield-map"]], "aslm.model.analysis.camera.compute_noise_sigma": [[23, "aslm-model-analysis-camera-compute-noise-sigma"]], "aslm.model.analysis.camera.compute_scmos_offset_and_variance_map": [[24, "aslm-model-analysis-camera-compute-scmos-offset-and-variance-map"]], "aslm.model.analysis.camera.compute_signal_to_noise": [[25, "aslm-model-analysis-camera-compute-signal-to-noise"]], "aslm.model.analysis.detection": [[26, "module-aslm.model.analysis.detection"]], "aslm.model.analysis.detection.add_median_border": [[27, "aslm-model-analysis-detection-add-median-border"]], "aslm.model.analysis.detection.combine_images": [[28, "aslm-model-analysis-detection-combine-images"]], "aslm.model.analysis.detection.log_detection": [[29, "aslm-model-analysis-detection-log-detection"]], "aslm.model.analysis.detection.make_inside_image": [[30, "aslm-model-analysis-detection-make-inside-image"]], "aslm.model.analysis.detection.make_normalized_image": [[31, "aslm-model-analysis-detection-make-normalized-image"]], "aslm.model.analysis.detection.make_sphere_3D": [[32, "aslm-model-analysis-detection-make-sphere-3d"]], "aslm.model.analysis.detection.multiscale_surface_filter_3D": [[33, "aslm-model-analysis-detection-multiscale-surface-filter-3d"]], "aslm.model.analysis.detection.surface_filter_gauss_3D": [[34, "aslm-model-analysis-detection-surface-filter-gauss-3d"]], "aslm.model.analysis.detection.three_level_segmentation": [[35, "aslm-model-analysis-detection-three-level-segmentation"]], "aslm.model.analysis.image_contrast": [[36, "module-aslm.model.analysis.image_contrast"]], "aslm.model.analysis.image_contrast.estimate_and_correct_flatfield": [[37, "aslm-model-analysis-image-contrast-estimate-and-correct-flatfield"]], "aslm.model.analysis.image_contrast.estimate_image_resolution": [[38, "aslm-model-analysis-image-contrast-estimate-image-resolution"]], "aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy": [[39, "aslm-model-analysis-image-contrast-fast-normalized-dct-shannon-entropy"]], "aslm.model.analysis.image_contrast.image_intensity": [[40, "aslm-model-analysis-image-contrast-image-intensity"]], "aslm.model.analysis.image_contrast.normalized_dct_shannon_entropy": [[41, "aslm-model-analysis-image-contrast-normalized-dct-shannon-entropy"]], "aslm.model.analysis.image_decorrelation": [[42, "module-aslm.model.analysis.image_decorrelation"]], "aslm.model.analysis.image_decorrelation.apodize_image": [[43, "aslm-model-analysis-image-decorrelation-apodize-image"]], "aslm.model.analysis.image_decorrelation.get_correlation_coefficient": [[44, "aslm-model-analysis-image-decorrelation-get-correlation-coefficient"]], "aslm.model.analysis.image_decorrelation.get_decorrelation_local_maxima": [[45, "aslm-model-analysis-image-decorrelation-get-decorrelation-local-maxima"]], "aslm.model.analysis.image_decorrelation.get_image_decorrelation": [[46, "aslm-model-analysis-image-decorrelation-get-image-decorrelation"]], "aslm.model.analysis.image_decorrelation.get_radial_average": [[47, "aslm-model-analysis-image-decorrelation-get-radial-average"]], "aslm.model.analysis.image_decorrelation.image_to_polar": [[48, "aslm-model-analysis-image-decorrelation-image-to-polar"]], "aslm.model.analysis.image_decorrelation.linear_map": [[49, "aslm-model-analysis-image-decorrelation-linear-map"]], "aslm.model.analysis.image_decorrelation.main_image_decorr": [[50, "aslm-model-analysis-image-decorrelation-main-image-decorr"]], "aslm.model.analysis.image_transform": [[51, "module-aslm.model.analysis.image_transform"]], "aslm.model.analysis.image_transform.deskew_image": [[52, "aslm-model-analysis-image-transform-deskew-image"]], "aslm.model.analysis.image_transform.initiate_gpu": [[53, "aslm-model-analysis-image-transform-initiate-gpu"]], "aslm.model.analysis.spectral_unmixing": [[54, "module-aslm.model.analysis.spectral_unmixing"]], "aslm.model.analysis.spectral_unmixing.to_do": [[55, "aslm-model-analysis-spectral-unmixing-to-do"]], "aslm.model.concurrency": [[56, "module-aslm.model.concurrency"]], "aslm.model.concurrency.concurrency_tools": [[57, "module-aslm.model.concurrency.concurrency_tools"]], "aslm.model.concurrency.concurrency_tools.CustodyThread": [[58, "aslm-model-concurrency-concurrency-tools-custodythread"]], "aslm.model.concurrency.concurrency_tools.FancyThread": [[59, "aslm-model-concurrency-concurrency-tools-fancythread"]], "aslm.model.concurrency.concurrency_tools.MyTestClass": [[60, "aslm-model-concurrency-concurrency-tools-mytestclass"]], "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess": [[61, "aslm-model-concurrency-concurrency-tools-objectinsubprocess"]], "aslm.model.concurrency.concurrency_tools.PoliteThread": [[62, "aslm-model-concurrency-concurrency-tools-politethread"]], "aslm.model.concurrency.concurrency_tools.ResultThread": [[63, "aslm-model-concurrency-concurrency-tools-resultthread"]], "aslm.model.concurrency.concurrency_tools.SharedNDArray": [[64, "aslm-model-concurrency-concurrency-tools-sharedndarray"]], "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess": [[65, "aslm-model-concurrency-concurrency-tools-testobjectinsubprocess"]], "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread": [[66, "aslm-model-concurrency-concurrency-tools-testresultthreadandcustodythread"]], "aslm.model.concurrency.concurrency_tools.TestSharedNDArray": [[67, "aslm-model-concurrency-concurrency-tools-testsharedndarray"]], "aslm.model.concurrency.proxy_objects": [[68, "module-aslm.model.concurrency.proxy_objects"]], "aslm.model.concurrency.proxy_objects.ProxyManager": [[69, "aslm-model-concurrency-proxy-objects-proxymanager"]], "aslm.model.concurrency.proxy_objects.ProxyObject": [[70, "aslm-model-concurrency-proxy-objects-proxyobject"]], "aslm.model.concurrency.proxy_objects.launch_custody_thread": [[71, "aslm-model-concurrency-proxy-objects-launch-custody-thread"]], "aslm.model.concurrency.proxy_objects.launch_thread": [[72, "aslm-model-concurrency-proxy-objects-launch-thread"]], "aslm.model.concurrency.shared_memory": [[73, "module-aslm.model.concurrency.shared_memory"]], "aslm.model.concurrency.write_parameters": [[74, "module-aslm.model.concurrency.write_parameters"]], "aslm.model.concurrency.write_parameters.write_Params": [[75, "aslm-model-concurrency-write-parameters-write-params"]], "aslm.model.data_sources": [[76, "module-aslm.model.data_sources"]], "aslm.model.data_sources.bdv_data_source": [[77, "module-aslm.model.data_sources.bdv_data_source"]], "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource": [[78, "aslm-model-data-sources-bdv-data-source-bigdataviewerdatasource"]], "aslm.model.data_sources.data_source": [[79, "module-aslm.model.data_sources.data_source"]], "aslm.model.data_sources.data_source.DataSource": [[80, "aslm-model-data-sources-data-source-datasource"]], "aslm.model.data_sources.get_data_source": [[81, "aslm-model-data-sources-get-data-source"]], "aslm.model.data_sources.tiff_data_source": [[82, "module-aslm.model.data_sources.tiff_data_source"]], "aslm.model.data_sources.tiff_data_source.TiffDataSource": [[83, "aslm-model-data-sources-tiff-data-source-tiffdatasource"]], "aslm.model.data_sources.zarr_data_source": [[84, "module-aslm.model.data_sources.zarr_data_source"]], "aslm.model.data_sources.zarr_data_source.ZarrDataSource": [[85, "aslm-model-data-sources-zarr-data-source-zarrdatasource"]], "aslm.model.device_startup_functions": [[86, "module-aslm.model.device_startup_functions"]], "aslm.model.device_startup_functions.DummyDeviceConnection": [[87, "aslm-model-device-startup-functions-dummydeviceconnection"]], "aslm.model.device_startup_functions.auto_redial": [[88, "aslm-model-device-startup-functions-auto-redial"]], "aslm.model.device_startup_functions.device_not_found": [[89, "aslm-model-device-startup-functions-device-not-found"]], "aslm.model.device_startup_functions.load_camera_connection": [[90, "aslm-model-device-startup-functions-load-camera-connection"]], "aslm.model.device_startup_functions.load_devices": [[91, "aslm-model-device-startup-functions-load-devices"]], "aslm.model.device_startup_functions.load_filter_wheel_connection": [[92, "aslm-model-device-startup-functions-load-filter-wheel-connection"]], "aslm.model.device_startup_functions.load_stages": [[93, "aslm-model-device-startup-functions-load-stages"]], "aslm.model.device_startup_functions.load_zoom_connection": [[94, "aslm-model-device-startup-functions-load-zoom-connection"]], "aslm.model.device_startup_functions.start_camera": [[95, "aslm-model-device-startup-functions-start-camera"]], "aslm.model.device_startup_functions.start_daq": [[96, "aslm-model-device-startup-functions-start-daq"]], "aslm.model.device_startup_functions.start_filter_wheel": [[97, "aslm-model-device-startup-functions-start-filter-wheel"]], "aslm.model.device_startup_functions.start_galvo": [[98, "aslm-model-device-startup-functions-start-galvo"]], "aslm.model.device_startup_functions.start_lasers": [[99, "aslm-model-device-startup-functions-start-lasers"]], "aslm.model.device_startup_functions.start_remote_focus_device": [[100, "aslm-model-device-startup-functions-start-remote-focus-device"]], "aslm.model.device_startup_functions.start_shutter": [[101, "aslm-model-device-startup-functions-start-shutter"]], "aslm.model.device_startup_functions.start_stage": [[102, "aslm-model-device-startup-functions-start-stage"]], "aslm.model.device_startup_functions.start_zoom": [[103, "aslm-model-device-startup-functions-start-zoom"]], "aslm.model.devices": [[104, "module-aslm.model.devices"]], "aslm.model.devices.APIs": [[105, "module-aslm.model.devices.APIs"]], "aslm.model.devices.APIs.coherent": [[106, "module-aslm.model.devices.APIs.coherent"]], "aslm.model.devices.APIs.dynamixel": [[107, "module-aslm.model.devices.APIs.dynamixel"]], "aslm.model.devices.APIs.logitech": [[108, "module-aslm.model.devices.APIs.logitech"]], "aslm.model.devices.APIs.omicron": [[109, "module-aslm.model.devices.APIs.omicron"]], "aslm.model.devices.camera": [[110, "module-aslm.model.devices.camera"]], "aslm.model.devices.camera.camera_base": [[111, "module-aslm.model.devices.camera.camera_base"]], "aslm.model.devices.camera.camera_base.CameraBase": [[112, "aslm-model-devices-camera-camera-base-camerabase"]], "aslm.model.devices.camera.camera_hamamatsu": [[113, "module-aslm.model.devices.camera.camera_hamamatsu"]], "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca": [[114, "aslm-model-devices-camera-camera-hamamatsu-hamamatsuorca"]], "aslm.model.devices.camera.camera_synthetic": [[115, "module-aslm.model.devices.camera.camera_synthetic"]], "aslm.model.devices.camera.camera_synthetic.SyntheticCamera": [[116, "aslm-model-devices-camera-camera-synthetic-syntheticcamera"]], "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController": [[117, "aslm-model-devices-camera-camera-synthetic-syntheticcameracontroller"]], "aslm.model.devices.daq": [[118, "module-aslm.model.devices.daq"]], "aslm.model.devices.daq.daq_base": [[119, "module-aslm.model.devices.daq.daq_base"]], "aslm.model.devices.daq.daq_base.DAQBase": [[120, "aslm-model-devices-daq-daq-base-daqbase"]], "aslm.model.devices.daq.daq_synthetic": [[121, "module-aslm.model.devices.daq.daq_synthetic"]], "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ": [[122, "aslm-model-devices-daq-daq-synthetic-syntheticdaq"]], "aslm.model.devices.filter_wheel": [[123, "module-aslm.model.devices.filter_wheel"]], "aslm.model.devices.filter_wheel.filter_wheel_base": [[124, "module-aslm.model.devices.filter_wheel.filter_wheel_base"]], "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase": [[125, "aslm-model-devices-filter-wheel-filter-wheel-base-filterwheelbase"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter": [[126, "module-aslm.model.devices.filter_wheel.filter_wheel_sutter"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel": [[127, "aslm-model-devices-filter-wheel-filter-wheel-sutter-sutterfilterwheel"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection": [[128, "aslm-model-devices-filter-wheel-filter-wheel-sutter-build-filter-wheel-connection"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic": [[129, "module-aslm.model.devices.filter_wheel.filter_wheel_synthetic"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel": [[130, "aslm-model-devices-filter-wheel-filter-wheel-synthetic-syntheticfilterwheel"]], "aslm.model.devices.galvo": [[131, "module-aslm.model.devices.galvo"]], "aslm.model.devices.galvo.galvo_base": [[132, "module-aslm.model.devices.galvo.galvo_base"]], "aslm.model.devices.galvo.galvo_base.GalvoBase": [[133, "aslm-model-devices-galvo-galvo-base-galvobase"]], "aslm.model.devices.galvo.galvo_synthetic": [[134, "module-aslm.model.devices.galvo.galvo_synthetic"]], "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo": [[135, "aslm-model-devices-galvo-galvo-synthetic-syntheticgalvo"]], "aslm.model.devices.joystick": [[136, "module-aslm.model.devices.joystick"]], "aslm.model.devices.joystick.joystick_base": [[137, "module-aslm.model.devices.joystick.joystick_base"]], "aslm.model.devices.joystick.joystick_base.JoystickBase": [[138, "aslm-model-devices-joystick-joystick-base-joystickbase"]], "aslm.model.devices.joystick.joystick_synthetic": [[139, "module-aslm.model.devices.joystick.joystick_synthetic"]], "aslm.model.devices.joystick.joystick_synthetic.SyntheticJoystick": [[140, "aslm-model-devices-joystick-joystick-synthetic-syntheticjoystick"]], "aslm.model.devices.lasers": [[141, "module-aslm.model.devices.lasers"]], "aslm.model.devices.lasers.laser_base": [[142, "module-aslm.model.devices.lasers.laser_base"]], "aslm.model.devices.lasers.laser_base.LaserBase": [[143, "aslm-model-devices-lasers-laser-base-laserbase"]], "aslm.model.devices.lasers.laser_synthetic": [[144, "module-aslm.model.devices.lasers.laser_synthetic"]], "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser": [[145, "aslm-model-devices-lasers-laser-synthetic-syntheticlaser"]], "aslm.model.devices.lasers.laser_trigger_base": [[146, "module-aslm.model.devices.lasers.laser_trigger_base"]], "aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase": [[147, "aslm-model-devices-lasers-laser-trigger-base-lasertriggerbase"]], "aslm.model.devices.lasers.laser_trigger_synthetic": [[148, "module-aslm.model.devices.lasers.laser_trigger_synthetic"]], "aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers": [[149, "aslm-model-devices-lasers-laser-trigger-synthetic-syntheticlasertriggers"]], "aslm.model.devices.objectives": [[150, "module-aslm.model.devices.objectives"]], "aslm.model.devices.objectives.Objective": [[151, "aslm-model-devices-objectives-objective"]], "aslm.model.devices.remote_focus": [[152, "module-aslm.model.devices.remote_focus"]], "aslm.model.devices.remote_focus.remote_focus_base": [[153, "module-aslm.model.devices.remote_focus.remote_focus_base"]], "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase": [[154, "aslm-model-devices-remote-focus-remote-focus-base-remotefocusbase"]], "aslm.model.devices.remote_focus.remote_focus_equipment_solutions": [[155, "module-aslm.model.devices.remote_focus.remote_focus_equipment_solutions"]], "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions": [[156, "aslm-model-devices-remote-focus-remote-focus-equipment-solutions-remotefocusequipmentsolutions"]], "aslm.model.devices.remote_focus.remote_focus_synthetic": [[157, "module-aslm.model.devices.remote_focus.remote_focus_synthetic"]], "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus": [[158, "aslm-model-devices-remote-focus-remote-focus-synthetic-syntheticremotefocus"]], "aslm.model.devices.shutter": [[159, "module-aslm.model.devices.shutter"]], "aslm.model.devices.shutter.laser_shutter_base": [[160, "module-aslm.model.devices.shutter.laser_shutter_base"]], "aslm.model.devices.shutter.laser_shutter_base.ShutterBase": [[161, "aslm-model-devices-shutter-laser-shutter-base-shutterbase"]], "aslm.model.devices.shutter.laser_shutter_synthetic": [[162, "module-aslm.model.devices.shutter.laser_shutter_synthetic"]], "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter": [[163, "aslm-model-devices-shutter-laser-shutter-synthetic-syntheticshutter"]], "aslm.model.devices.stages": [[164, "module-aslm.model.devices.stages"]], "aslm.model.devices.stages.stage_asi": [[165, "module-aslm.model.devices.stages.stage_asi"]], "aslm.model.devices.stages.stage_asi.ASIStage": [[166, "aslm-model-devices-stages-stage-asi-asistage"]], "aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection": [[167, "aslm-model-devices-stages-stage-asi-build-asi-stage-connection"]], "aslm.model.devices.stages.stage_base": [[168, "module-aslm.model.devices.stages.stage_base"]], "aslm.model.devices.stages.stage_base.StageBase": [[169, "aslm-model-devices-stages-stage-base-stagebase"]], "aslm.model.devices.stages.stage_galvo": [[170, "module-aslm.model.devices.stages.stage_galvo"]], "aslm.model.devices.stages.stage_galvo.GalvoNIStage": [[171, "aslm-model-devices-stages-stage-galvo-galvonistage"]], "aslm.model.devices.stages.stage_mcl": [[172, "module-aslm.model.devices.stages.stage_mcl"]], "aslm.model.devices.stages.stage_mcl.MCLStage": [[173, "aslm-model-devices-stages-stage-mcl-mclstage"]], "aslm.model.devices.stages.stage_mcl.build_MCLStage_connection": [[174, "aslm-model-devices-stages-stage-mcl-build-mclstage-connection"]], "aslm.model.devices.stages.stage_pi": [[175, "module-aslm.model.devices.stages.stage_pi"]], "aslm.model.devices.stages.stage_pi.PIStage": [[176, "aslm-model-devices-stages-stage-pi-pistage"]], "aslm.model.devices.stages.stage_pi.build_PIStage_connection": [[177, "aslm-model-devices-stages-stage-pi-build-pistage-connection"]], "aslm.model.devices.stages.stage_sutter": [[178, "module-aslm.model.devices.stages.stage_sutter"]], "aslm.model.devices.stages.stage_sutter.SutterStage": [[179, "aslm-model-devices-stages-stage-sutter-sutterstage"]], "aslm.model.devices.stages.stage_sutter.build_sutter_stage_connection": [[180, "aslm-model-devices-stages-stage-sutter-build-sutter-stage-connection"]], "aslm.model.devices.stages.stage_synthetic": [[181, "module-aslm.model.devices.stages.stage_synthetic"]], "aslm.model.devices.stages.stage_synthetic.SyntheticStage": [[182, "aslm-model-devices-stages-stage-synthetic-syntheticstage"]], "aslm.model.devices.stages.stage_tl_kcube_inertial": [[183, "module-aslm.model.devices.stages.stage_tl_kcube_inertial"]], "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage": [[184, "aslm-model-devices-stages-stage-tl-kcube-inertial-tlkimstage"]], "aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection": [[185, "aslm-model-devices-stages-stage-tl-kcube-inertial-build-tlkimstage-connection"]], "aslm.model.devices.zoom": [[186, "module-aslm.model.devices.zoom"]], "aslm.model.devices.zoom.zoom_base": [[187, "module-aslm.model.devices.zoom.zoom_base"]], "aslm.model.devices.zoom.zoom_base.ZoomBase": [[188, "aslm-model-devices-zoom-zoom-base-zoombase"]], "aslm.model.devices.zoom.zoom_synthetic": [[189, "module-aslm.model.devices.zoom.zoom_synthetic"]], "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom": [[190, "aslm-model-devices-zoom-zoom-synthetic-syntheticzoom"]], "aslm.model.features": [[191, "module-aslm.model.features"]], "aslm.model.features.autofocus": [[192, "module-aslm.model.features.autofocus"]], "aslm.model.features.autofocus.Autofocus": [[193, "aslm-model-features-autofocus-autofocus"]], "aslm.model.features.common_features": [[194, "module-aslm.model.features.common_features"]], "aslm.model.features.common_features.ChangeResolution": [[195, "aslm-model-features-common-features-changeresolution"]], "aslm.model.features.common_features.FindTissueSimple2D": [[196, "aslm-model-features-common-features-findtissuesimple2d"]], "aslm.model.features.common_features.LoopByCount": [[197, "aslm-model-features-common-features-loopbycount"]], "aslm.model.features.common_features.PrepareNextChannel": [[198, "aslm-model-features-common-features-preparenextchannel"]], "aslm.model.features.common_features.Snap": [[199, "aslm-model-features-common-features-snap"]], "aslm.model.features.common_features.WaitToContinue": [[200, "aslm-model-features-common-features-waittocontinue"]], "aslm.model.features.common_features.ZStackAcquisition": [[201, "aslm-model-features-common-features-zstackacquisition"]], "aslm.model.features.dummy_detective": [[202, "module-aslm.model.features.dummy_detective"]], "aslm.model.features.dummy_detective.Dummy_Detective": [[203, "aslm-model-features-dummy-detective-dummy-detective"]], "aslm.model.features.feature_container": [[204, "module-aslm.model.features.feature_container"]], "aslm.model.features.feature_container.Container": [[205, "aslm-model-features-feature-container-container"]], "aslm.model.features.feature_container.DataContainer": [[206, "aslm-model-features-feature-container-datacontainer"]], "aslm.model.features.feature_container.DataNode": [[207, "aslm-model-features-feature-container-datanode"]], "aslm.model.features.feature_container.SignalContainer": [[208, "aslm-model-features-feature-container-signalcontainer"]], "aslm.model.features.feature_container.SignalNode": [[209, "aslm-model-features-feature-container-signalnode"]], "aslm.model.features.feature_container.TreeNode": [[210, "aslm-model-features-feature-container-treenode"]], "aslm.model.features.feature_container.dummy_True": [[211, "aslm-model-features-feature-container-dummy-true"]], "aslm.model.features.feature_container.dummy_func": [[212, "aslm-model-features-feature-container-dummy-func"]], "aslm.model.features.feature_container.get_registered_funcs": [[213, "aslm-model-features-feature-container-get-registered-funcs"]], "aslm.model.features.feature_container.load_features": [[214, "aslm-model-features-feature-container-load-features"]], "aslm.model.features.image_writer": [[215, "module-aslm.model.features.image_writer"]], "aslm.model.features.image_writer.ImageWriter": [[216, "aslm-model-features-image-writer-imagewriter"]], "aslm.model.features.restful_features": [[217, "module-aslm.model.features.restful_features"]], "aslm.model.features.restful_features.IlastikSegmentation": [[218, "aslm-model-features-restful-features-ilastiksegmentation"]], "aslm.model.features.restful_features.prepare_service": [[219, "aslm-model-features-restful-features-prepare-service"]], "aslm.model.features.volume_search": [[220, "module-aslm.model.features.volume_search"]], "aslm.model.features.volume_search.VolumeSearch": [[221, "aslm-model-features-volume-search-volumesearch"]], "aslm.model.metadata_sources": [[222, "module-aslm.model.metadata_sources"]], "aslm.model.metadata_sources.bdv_metadata": [[223, "module-aslm.model.metadata_sources.bdv_metadata"]], "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata": [[224, "aslm-model-metadata-sources-bdv-metadata-bigdataviewermetadata"]], "aslm.model.metadata_sources.metadata": [[225, "module-aslm.model.metadata_sources.metadata"]], "aslm.model.metadata_sources.metadata.Metadata": [[226, "aslm-model-metadata-sources-metadata-metadata"]], "aslm.model.metadata_sources.metadata.XMLMetadata": [[227, "aslm-model-metadata-sources-metadata-xmlmetadata"]], "aslm.model.metadata_sources.ome_tiff_metadata": [[228, "module-aslm.model.metadata_sources.ome_tiff_metadata"]], "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata": [[229, "aslm-model-metadata-sources-ome-tiff-metadata-ometiffmetadata"]], "aslm.model.microscope": [[230, "module-aslm.model.microscope"]], "aslm.model.microscope.Microscope": [[231, "aslm-model-microscope-microscope"]], "aslm.model.model": [[232, "module-aslm.model.model"]], "aslm.model.model.Model": [[233, "aslm-model-model-model"]], "aslm.model.waveforms": [[234, "module-aslm.model.waveforms"]], "aslm.model.waveforms.camera_exposure": [[235, "aslm-model-waveforms-camera-exposure"]], "aslm.model.waveforms.dc_value": [[236, "aslm-model-waveforms-dc-value"]], "aslm.model.waveforms.remote_focus_ramp": [[237, "aslm-model-waveforms-remote-focus-ramp"]], "aslm.model.waveforms.sawtooth": [[238, "aslm-model-waveforms-sawtooth"]], "aslm.model.waveforms.sine_wave": [[239, "aslm-model-waveforms-sine-wave"]], "aslm.model.waveforms.single_pulse": [[240, "aslm-model-waveforms-single-pulse"]], "aslm.model.waveforms.smooth_waveform": [[241, "aslm-model-waveforms-smooth-waveform"]], "aslm.model.waveforms.square": [[242, "aslm-model-waveforms-square"]], "aslm.tools": [[243, "module-aslm.tools"]], "aslm.tools.beams": [[244, "module-aslm.tools.beams"]], "aslm.tools.beams.fit_gaussian_beam_error": [[245, "aslm-tools-beams-fit-gaussian-beam-error"]], "aslm.tools.beams.fit_gaussian_beam_mse": [[246, "aslm-tools-beams-fit-gaussian-beam-mse"]], "aslm.tools.beams.gaussian_beam": [[247, "aslm-tools-beams-gaussian-beam"]], "aslm.tools.common_dict_tools": [[248, "module-aslm.tools.common_dict_tools"]], "aslm.tools.common_dict_tools.update_settings_common": [[249, "aslm-tools-common-dict-tools-update-settings-common"]], "aslm.tools.common_dict_tools.update_stage_dict": [[250, "aslm-tools-common-dict-tools-update-stage-dict"]], "aslm.tools.common_functions": [[251, "module-aslm.tools.common_functions"]], "aslm.tools.common_functions.build_ref_name": [[252, "aslm-tools-common-functions-build-ref-name"]], "aslm.tools.common_functions.combine_funcs": [[253, "aslm-tools-common-functions-combine-funcs"]], "aslm.tools.common_functions.copy_proxy_object": [[254, "aslm-tools-common-functions-copy-proxy-object"]], "aslm.tools.decorators": [[255, "module-aslm.tools.decorators"]], "aslm.tools.decorators.function_timer": [[256, "aslm-tools-decorators-function-timer"]], "aslm.tools.file_functions": [[257, "module-aslm.tools.file_functions"]], "aslm.tools.file_functions.create_save_path": [[258, "aslm-tools-file-functions-create-save-path"]], "aslm.tools.file_functions.save_yaml_file": [[259, "aslm-tools-file-functions-save-yaml-file"]], "aslm.tools.image": [[260, "module-aslm.tools.image"]], "aslm.tools.image.text_array": [[261, "aslm-tools-image-text-array"]], "aslm.tools.image_loaders": [[262, "module-aslm.tools.image_loaders"]], "aslm.tools.image_loaders.LazyTiff": [[263, "aslm-tools-image-loaders-lazytiff"]], "aslm.tools.main_functions": [[264, "module-aslm.tools.main_functions"]], "aslm.tools.main_functions.create_parser": [[265, "aslm-tools-main-functions-create-parser"]], "aslm.tools.main_functions.evaluate_parser_input_arguments": [[266, "aslm-tools-main-functions-evaluate-parser-input-arguments"]], "aslm.tools.main_functions.identify_gpu": [[267, "aslm-tools-main-functions-identify-gpu"]], "aslm.tools.multipos_table_tools": [[268, "module-aslm.tools.multipos_table_tools"]], "aslm.tools.multipos_table_tools.calc_num_tiles": [[269, "aslm-tools-multipos-table-tools-calc-num-tiles"]], "aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box": [[270, "aslm-tools-multipos-table-tools-compute-tiles-from-bounding-box"]], "aslm.tools.multipos_table_tools.sign": [[271, "aslm-tools-multipos-table-tools-sign"]], "aslm.tools.multipos_table_tools.update_table": [[272, "aslm-tools-multipos-table-tools-update-table"]], "aslm.tools.project_stats": [[273, "module-aslm.tools.project_stats"]], "aslm.tools.project_stats.countlines": [[274, "aslm-tools-project-stats-countlines"]], "aslm.tools.xml_tools": [[275, "module-aslm.tools.xml_tools"]], "aslm.tools.xml_tools.dict_to_xml": [[276, "aslm-tools-xml-tools-dict-to-xml"]], "aslm.tools.xml_tools.parse_xml": [[277, "aslm-tools-xml-tools-parse-xml"]], "aslm.view": [[278, "module-aslm.view"]], "aslm.view.main_window_content": [[279, "module-aslm.view.main_window_content"]], "aslm.view.main_window_content.acquire_bar_frame": [[280, "module-aslm.view.main_window_content.acquire_bar_frame"]], "aslm.view.main_window_content.channel_settings": [[281, "module-aslm.view.main_window_content.channel_settings"]], "aslm.view.main_window_content.channel_settings.channel_settings_frames": [[282, "module-aslm.view.main_window_content.channel_settings.channel_settings_frames"]], "aslm.view.main_window_content.stage_control": [[283, "module-aslm.view.main_window_content.stage_control"]], "aslm.view.main_window_content.stage_control.stage_control_frames": [[284, "module-aslm.view.main_window_content.stage_control.stage_control_frames"]], "aslm.view.menus": [[285, "module-aslm.view.menus"]], "API Reference": [[288, "api-reference"]], "Configuring ASLM": [[289, "configuring-aslm"]], "Configuration.yaml": [[289, "configuration-yaml"]], "Hardware Section": [[289, "hardware-section"]], "Microscope Section": [[289, "microscope-section"]], "GUI Section": [[289, "gui-section"]], "Contributing Guidelines": [[290, "contributing-guidelines"]], "General principles": [[290, "general-principles"]], "Coding style": [[290, "coding-style"]], "Unit tests": [[290, "unit-tests"]], "Scientific Units": [[290, "scientific-units"]], "ASLM feature container": [[291, "aslm-feature-container"]], "The feature object": [[291, "the-feature-object"]], "Writing custom features": [[291, "writing-custom-features"]], "Extending ASLM": [[292, "extending-aslm"]], "Hardware Setup": [[293, "hardware-setup"]], "Configuration File": [[293, "configuration-file"]], "Data Acquisition Card": [[293, "data-acquisition-card"]], "Wiring": [[293, "wiring"]], "Cameras": [[293, "cameras"]], "Hamamatsu": [[293, "hamamatsu"]], "Photometrics": [[293, "photometrics"]], "Voicecoil": [[293, "voicecoil"]], "Equipment Solutions": [[293, "equipment-solutions"]], "Stages": [[293, "stages"]], "ASI": [[293, "asi"]], "Microscope Implementations": [[294, "microscope-implementations"]], "Multiscale Microscope": [[294, "multiscale-microscope"]], "Upright CT-ASLM-V2": [[294, "upright-ct-aslm-v2"]], "OPM-V2": [[294, "opm-v2"]], "Autonomous Software for Light Microscopy": [[295, "autonomous-software-for-light-microscopy"]], "Contents": [[295, "contents"]], "Index and search": [[295, "index-and-search"]], "Software Installation": [[296, "software-installation"]], "Download Git": [[296, "download-git"]], "Setup your Python Environment.": [[296, "setup-your-python-environment"]], "GPU Dependencies": [[296, "gpu-dependencies"]], "Troubleshooting": [[296, "troubleshooting"]], "User Guide": [[297, "user-guide"]]}, "indexentries": {"aslm.config": [[0, "module-aslm.config"]], "module": [[0, "module-aslm.config"], [1, "module-aslm.config.config"], [7, "module-aslm.controller"], [8, "module-aslm.controller.configuration_controller"], [10, "module-aslm.controller.thread_pool"], [14, "module-aslm.model"], [15, "module-aslm.model.analysis"], [16, "module-aslm.model.analysis.boundary_detect"], [21, "module-aslm.model.analysis.camera"], [26, "module-aslm.model.analysis.detection"], [36, "module-aslm.model.analysis.image_contrast"], [42, "module-aslm.model.analysis.image_decorrelation"], [51, "module-aslm.model.analysis.image_transform"], [54, "module-aslm.model.analysis.spectral_unmixing"], [56, "module-aslm.model.concurrency"], [57, "module-aslm.model.concurrency.concurrency_tools"], [68, "module-aslm.model.concurrency.proxy_objects"], [73, "module-aslm.model.concurrency.shared_memory"], [74, "module-aslm.model.concurrency.write_parameters"], [76, "module-aslm.model.data_sources"], [77, "module-aslm.model.data_sources.bdv_data_source"], [79, "module-aslm.model.data_sources.data_source"], [82, "module-aslm.model.data_sources.tiff_data_source"], [84, "module-aslm.model.data_sources.zarr_data_source"], [86, "module-aslm.model.device_startup_functions"], [104, "module-aslm.model.devices"], [105, "module-aslm.model.devices.APIs"], [106, "module-aslm.model.devices.APIs.coherent"], [107, "module-aslm.model.devices.APIs.dynamixel"], [108, "module-aslm.model.devices.APIs.logitech"], [109, "module-aslm.model.devices.APIs.omicron"], [110, "module-aslm.model.devices.camera"], [111, "module-aslm.model.devices.camera.camera_base"], [113, "module-aslm.model.devices.camera.camera_hamamatsu"], [115, "module-aslm.model.devices.camera.camera_synthetic"], [118, "module-aslm.model.devices.daq"], [119, "module-aslm.model.devices.daq.daq_base"], [121, "module-aslm.model.devices.daq.daq_synthetic"], [123, "module-aslm.model.devices.filter_wheel"], [124, "module-aslm.model.devices.filter_wheel.filter_wheel_base"], [126, "module-aslm.model.devices.filter_wheel.filter_wheel_sutter"], [129, "module-aslm.model.devices.filter_wheel.filter_wheel_synthetic"], [131, "module-aslm.model.devices.galvo"], [132, "module-aslm.model.devices.galvo.galvo_base"], [134, "module-aslm.model.devices.galvo.galvo_synthetic"], [136, "module-aslm.model.devices.joystick"], [137, "module-aslm.model.devices.joystick.joystick_base"], [139, "module-aslm.model.devices.joystick.joystick_synthetic"], [141, "module-aslm.model.devices.lasers"], [142, "module-aslm.model.devices.lasers.laser_base"], [144, "module-aslm.model.devices.lasers.laser_synthetic"], [146, "module-aslm.model.devices.lasers.laser_trigger_base"], [148, "module-aslm.model.devices.lasers.laser_trigger_synthetic"], [150, "module-aslm.model.devices.objectives"], [152, "module-aslm.model.devices.remote_focus"], [153, "module-aslm.model.devices.remote_focus.remote_focus_base"], [155, "module-aslm.model.devices.remote_focus.remote_focus_equipment_solutions"], [157, "module-aslm.model.devices.remote_focus.remote_focus_synthetic"], [159, "module-aslm.model.devices.shutter"], [160, "module-aslm.model.devices.shutter.laser_shutter_base"], [162, "module-aslm.model.devices.shutter.laser_shutter_synthetic"], [164, "module-aslm.model.devices.stages"], [165, "module-aslm.model.devices.stages.stage_asi"], [168, "module-aslm.model.devices.stages.stage_base"], [170, "module-aslm.model.devices.stages.stage_galvo"], [172, "module-aslm.model.devices.stages.stage_mcl"], [175, "module-aslm.model.devices.stages.stage_pi"], [178, "module-aslm.model.devices.stages.stage_sutter"], [181, "module-aslm.model.devices.stages.stage_synthetic"], [183, "module-aslm.model.devices.stages.stage_tl_kcube_inertial"], [186, "module-aslm.model.devices.zoom"], [187, "module-aslm.model.devices.zoom.zoom_base"], [189, "module-aslm.model.devices.zoom.zoom_synthetic"], [191, "module-aslm.model.features"], [192, "module-aslm.model.features.autofocus"], [194, "module-aslm.model.features.common_features"], [202, "module-aslm.model.features.dummy_detective"], [204, "module-aslm.model.features.feature_container"], [215, "module-aslm.model.features.image_writer"], [217, "module-aslm.model.features.restful_features"], [220, "module-aslm.model.features.volume_search"], [222, "module-aslm.model.metadata_sources"], [223, "module-aslm.model.metadata_sources.bdv_metadata"], [225, "module-aslm.model.metadata_sources.metadata"], [228, "module-aslm.model.metadata_sources.ome_tiff_metadata"], [230, "module-aslm.model.microscope"], [232, "module-aslm.model.model"], [234, "module-aslm.model.waveforms"], [243, "module-aslm.tools"], [244, "module-aslm.tools.beams"], [248, "module-aslm.tools.common_dict_tools"], [251, "module-aslm.tools.common_functions"], [255, "module-aslm.tools.decorators"], [257, "module-aslm.tools.file_functions"], [260, "module-aslm.tools.image"], [262, "module-aslm.tools.image_loaders"], [264, "module-aslm.tools.main_functions"], [268, "module-aslm.tools.multipos_table_tools"], [273, "module-aslm.tools.project_stats"], [275, "module-aslm.tools.xml_tools"], [278, "module-aslm.view"], [279, "module-aslm.view.main_window_content"], [280, "module-aslm.view.main_window_content.acquire_bar_frame"], [281, "module-aslm.view.main_window_content.channel_settings"], [282, "module-aslm.view.main_window_content.channel_settings.channel_settings_frames"], [283, "module-aslm.view.main_window_content.stage_control"], [284, "module-aslm.view.main_window_content.stage_control.stage_control_frames"], [285, "module-aslm.view.menus"]], "aslm.config.config": [[1, "module-aslm.config.config"]], "build_nested_dict() (in module aslm.config.config)": [[2, "aslm.config.config.build_nested_dict"]], "get_aslm_path() (in module aslm.config.config)": [[3, "aslm.config.config.get_aslm_path"]], "get_configuration_paths() (in module aslm.config.config)": [[4, "aslm.config.config.get_configuration_paths"]], "load_configs() (in module aslm.config.config)": [[5, "aslm.config.config.load_configs"]], "update_config_dict() (in module aslm.config.config)": [[6, "aslm.config.config.update_config_dict"]], "aslm.controller": [[7, "module-aslm.controller"]], "aslm.controller.configuration_controller": [[8, "module-aslm.controller.configuration_controller"]], "configurationcontroller (class in aslm.controller.configuration_controller)": [[9, "aslm.controller.configuration_controller.ConfigurationController"]], "__init__() (aslm.controller.configuration_controller.configurationcontroller method)": [[9, "aslm.controller.configuration_controller.ConfigurationController.__init__"]], "camera_config_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[9, "aslm.controller.configuration_controller.ConfigurationController.camera_config_dict"]], "camera_pixels (aslm.controller.configuration_controller.configurationcontroller property)": [[9, "aslm.controller.configuration_controller.ConfigurationController.camera_pixels"]], "change_microscope() (aslm.controller.configuration_controller.configurationcontroller method)": [[9, "aslm.controller.configuration_controller.ConfigurationController.change_microscope"], [9, "id0"]], "channels_info (aslm.controller.configuration_controller.configurationcontroller property)": [[9, "aslm.controller.configuration_controller.ConfigurationController.channels_info"]], "daq_sample_rate (aslm.controller.configuration_controller.configurationcontroller property)": [[9, "aslm.controller.configuration_controller.ConfigurationController.daq_sample_rate"]], "filter_wheel_setting_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[9, "aslm.controller.configuration_controller.ConfigurationController.filter_wheel_setting_dict"]], "galvo_parameter_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[9, "aslm.controller.configuration_controller.ConfigurationController.galvo_parameter_dict"]], "get_microscope_configuration_dict() (aslm.controller.configuration_controller.configurationcontroller method)": [[9, "aslm.controller.configuration_controller.ConfigurationController.get_microscope_configuration_dict"], [9, "id1"]], "get_stage_position_limits() (aslm.controller.configuration_controller.configurationcontroller method)": [[9, "aslm.controller.configuration_controller.ConfigurationController.get_stage_position_limits"], [9, "id2"]], "lasers_info (aslm.controller.configuration_controller.configurationcontroller property)": [[9, "aslm.controller.configuration_controller.ConfigurationController.lasers_info"]], "number_of_channels (aslm.controller.configuration_controller.configurationcontroller property)": [[9, "aslm.controller.configuration_controller.ConfigurationController.number_of_channels"]], "remote_focus_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[9, "aslm.controller.configuration_controller.ConfigurationController.remote_focus_dict"]], "stage_default_position (aslm.controller.configuration_controller.configurationcontroller property)": [[9, "aslm.controller.configuration_controller.ConfigurationController.stage_default_position"]], "stage_setting_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[9, "aslm.controller.configuration_controller.ConfigurationController.stage_setting_dict"]], "stage_step (aslm.controller.configuration_controller.configurationcontroller property)": [[9, "aslm.controller.configuration_controller.ConfigurationController.stage_step"]], "aslm.controller.thread_pool": [[10, "module-aslm.controller.thread_pool"]], "selflockthread (class in aslm.controller.thread_pool)": [[11, "aslm.controller.thread_pool.SelfLockThread"]], "__init__() (aslm.controller.thread_pool.selflockthread method)": [[11, "aslm.controller.thread_pool.SelfLockThread.__init__"]], "daemon (aslm.controller.thread_pool.selflockthread property)": [[11, "aslm.controller.thread_pool.SelfLockThread.daemon"]], "getname() (aslm.controller.thread_pool.selflockthread method)": [[11, "aslm.controller.thread_pool.SelfLockThread.getName"]], "ident (aslm.controller.thread_pool.selflockthread property)": [[11, "aslm.controller.thread_pool.SelfLockThread.ident"]], "isdaemon() (aslm.controller.thread_pool.selflockthread method)": [[11, "aslm.controller.thread_pool.SelfLockThread.isDaemon"]], "islocked() (aslm.controller.thread_pool.selflockthread method)": [[11, "aslm.controller.thread_pool.SelfLockThread.isLocked"]], "is_alive() (aslm.controller.thread_pool.selflockthread method)": [[11, "aslm.controller.thread_pool.SelfLockThread.is_alive"]], "join() (aslm.controller.thread_pool.selflockthread method)": [[11, "aslm.controller.thread_pool.SelfLockThread.join"]], "name (aslm.controller.thread_pool.selflockthread property)": [[11, "aslm.controller.thread_pool.SelfLockThread.name"]], "native_id (aslm.controller.thread_pool.selflockthread property)": [[11, "aslm.controller.thread_pool.SelfLockThread.native_id"]], "run() (aslm.controller.thread_pool.selflockthread method)": [[11, "aslm.controller.thread_pool.SelfLockThread.run"]], "setdaemon() (aslm.controller.thread_pool.selflockthread method)": [[11, "aslm.controller.thread_pool.SelfLockThread.setDaemon"]], "setname() (aslm.controller.thread_pool.selflockthread method)": [[11, "aslm.controller.thread_pool.SelfLockThread.setName"]], "start() (aslm.controller.thread_pool.selflockthread method)": [[11, "aslm.controller.thread_pool.SelfLockThread.start"]], "unlock() (aslm.controller.thread_pool.selflockthread method)": [[11, "aslm.controller.thread_pool.SelfLockThread.unlock"]], "wait() (aslm.controller.thread_pool.selflockthread method)": [[11, "aslm.controller.thread_pool.SelfLockThread.wait"]], "synchronizedthreadpool (class in aslm.controller.thread_pool)": [[12, "aslm.controller.thread_pool.SynchronizedThreadPool"]], "__init__() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[12, "aslm.controller.thread_pool.SynchronizedThreadPool.__init__"]], "clear() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[12, "aslm.controller.thread_pool.SynchronizedThreadPool.clear"]], "createthread() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[12, "aslm.controller.thread_pool.SynchronizedThreadPool.createThread"]], "getrunningthread() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[12, "aslm.controller.thread_pool.SynchronizedThreadPool.getRunningThread"]], "globaltrace() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[12, "aslm.controller.thread_pool.SynchronizedThreadPool.globaltrace"]], "killthreadinlist() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[12, "aslm.controller.thread_pool.SynchronizedThreadPool.killThreadInList"]], "localtrace() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[12, "aslm.controller.thread_pool.SynchronizedThreadPool.localtrace"]], "movetodelete() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[12, "aslm.controller.thread_pool.SynchronizedThreadPool.moveToDelete"]], "registerresource() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[12, "aslm.controller.thread_pool.SynchronizedThreadPool.registerResource"]], "removethread() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[12, "aslm.controller.thread_pool.SynchronizedThreadPool.removeThread"]], "threadtaskwrapping() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[12, "aslm.controller.thread_pool.SynchronizedThreadPool.threadTaskWrapping"]], "threadwaitlist (class in aslm.controller.thread_pool)": [[13, "aslm.controller.thread_pool.ThreadWaitlist"]], "__init__() (aslm.controller.thread_pool.threadwaitlist method)": [[13, "aslm.controller.thread_pool.ThreadWaitlist.__init__"]], "aslm.model": [[14, "module-aslm.model"]], "aslm.model.analysis": [[15, "module-aslm.model.analysis"]], "aslm.model.analysis.boundary_detect": [[16, "module-aslm.model.analysis.boundary_detect"]], "binary_detect() (in module aslm.model.analysis.boundary_detect)": [[17, "aslm.model.analysis.boundary_detect.binary_detect"]], "find_tissue_boundary_2d() (in module aslm.model.analysis.boundary_detect)": [[18, "aslm.model.analysis.boundary_detect.find_tissue_boundary_2d"]], "has_tissue() (in module aslm.model.analysis.boundary_detect)": [[19, "aslm.model.analysis.boundary_detect.has_tissue"]], "map_boundary() (in module aslm.model.analysis.boundary_detect)": [[20, "aslm.model.analysis.boundary_detect.map_boundary"]], "aslm.model.analysis.camera": [[21, "module-aslm.model.analysis.camera"]], "compute_flatfield_map() (in module aslm.model.analysis.camera)": [[22, "aslm.model.analysis.camera.compute_flatfield_map"]], "compute_noise_sigma() (in module aslm.model.analysis.camera)": [[23, "aslm.model.analysis.camera.compute_noise_sigma"]], "compute_scmos_offset_and_variance_map() (in module aslm.model.analysis.camera)": [[24, "aslm.model.analysis.camera.compute_scmos_offset_and_variance_map"]], "compute_signal_to_noise() (in module aslm.model.analysis.camera)": [[25, "aslm.model.analysis.camera.compute_signal_to_noise"]], "aslm.model.analysis.detection": [[26, "module-aslm.model.analysis.detection"]], "add_median_border() (in module aslm.model.analysis.detection)": [[27, "aslm.model.analysis.detection.add_median_border"]], "combine_images() (in module aslm.model.analysis.detection)": [[28, "aslm.model.analysis.detection.combine_images"]], "log_detection() (in module aslm.model.analysis.detection)": [[29, "aslm.model.analysis.detection.log_detection"]], "make_inside_image() (in module aslm.model.analysis.detection)": [[30, "aslm.model.analysis.detection.make_inside_image"]], "make_normalized_image() (in module aslm.model.analysis.detection)": [[31, "aslm.model.analysis.detection.make_normalized_image"]], "make_sphere_3d() (in module aslm.model.analysis.detection)": [[32, "aslm.model.analysis.detection.make_sphere_3D"]], "multiscale_surface_filter_3d() (in module aslm.model.analysis.detection)": [[33, "aslm.model.analysis.detection.multiscale_surface_filter_3D"]], "surface_filter_gauss_3d() (in module aslm.model.analysis.detection)": [[34, "aslm.model.analysis.detection.surface_filter_gauss_3D"]], "three_level_segmentation() (in module aslm.model.analysis.detection)": [[35, "aslm.model.analysis.detection.three_level_segmentation"]], "aslm.model.analysis.image_contrast": [[36, "module-aslm.model.analysis.image_contrast"]], "estimate_and_correct_flatfield() (in module aslm.model.analysis.image_contrast)": [[37, "aslm.model.analysis.image_contrast.estimate_and_correct_flatfield"]], "estimate_image_resolution() (in module aslm.model.analysis.image_contrast)": [[38, "aslm.model.analysis.image_contrast.estimate_image_resolution"]], "fast_normalized_dct_shannon_entropy() (in module aslm.model.analysis.image_contrast)": [[39, "aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy"]], "image_intensity() (in module aslm.model.analysis.image_contrast)": [[40, "aslm.model.analysis.image_contrast.image_intensity"]], "normalized_dct_shannon_entropy() (in module aslm.model.analysis.image_contrast)": [[41, "aslm.model.analysis.image_contrast.normalized_dct_shannon_entropy"]], "aslm.model.analysis.image_decorrelation": [[42, "module-aslm.model.analysis.image_decorrelation"]], "apodize_image() (in module aslm.model.analysis.image_decorrelation)": [[43, "aslm.model.analysis.image_decorrelation.apodize_image"]], "get_correlation_coefficient() (in module aslm.model.analysis.image_decorrelation)": [[44, "aslm.model.analysis.image_decorrelation.get_correlation_coefficient"]], "get_decorrelation_local_maxima() (in module aslm.model.analysis.image_decorrelation)": [[45, "aslm.model.analysis.image_decorrelation.get_decorrelation_local_maxima"]], "get_image_decorrelation() (in module aslm.model.analysis.image_decorrelation)": [[46, "aslm.model.analysis.image_decorrelation.get_image_decorrelation"]], "get_radial_average() (in module aslm.model.analysis.image_decorrelation)": [[47, "aslm.model.analysis.image_decorrelation.get_radial_average"]], "image_to_polar() (in module aslm.model.analysis.image_decorrelation)": [[48, "aslm.model.analysis.image_decorrelation.image_to_polar"]], "linear_map() (in module aslm.model.analysis.image_decorrelation)": [[49, "aslm.model.analysis.image_decorrelation.linear_map"]], "main_image_decorr() (in module aslm.model.analysis.image_decorrelation)": [[50, "aslm.model.analysis.image_decorrelation.main_image_decorr"]], "aslm.model.analysis.image_transform": [[51, "module-aslm.model.analysis.image_transform"]], "deskew_image() (in module aslm.model.analysis.image_transform)": [[52, "aslm.model.analysis.image_transform.deskew_image"]], "initiate_gpu() (in module aslm.model.analysis.image_transform)": [[53, "aslm.model.analysis.image_transform.initiate_gpu"]], "aslm.model.analysis.spectral_unmixing": [[54, "module-aslm.model.analysis.spectral_unmixing"]], "to_do() (in module aslm.model.analysis.spectral_unmixing)": [[55, "aslm.model.analysis.spectral_unmixing.to_do"]], "aslm.model.concurrency": [[56, "module-aslm.model.concurrency"]], "aslm.model.concurrency.concurrency_tools": [[57, "module-aslm.model.concurrency.concurrency_tools"]], "custodythread (class in aslm.model.concurrency.concurrency_tools)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread"]], "__init__() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread.__init__"]], "daemon (aslm.model.concurrency.concurrency_tools.custodythread property)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread.daemon"]], "getname() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread.getName"]], "get_result() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread.get_result"]], "ident (aslm.model.concurrency.concurrency_tools.custodythread property)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread.ident"]], "isdaemon() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread.isDaemon"]], "is_alive() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread.is_alive"]], "join() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread.join"]], "name (aslm.model.concurrency.concurrency_tools.custodythread property)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread.name"]], "native_id (aslm.model.concurrency.concurrency_tools.custodythread property)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread.native_id"]], "run() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread.run"]], "setdaemon() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread.setDaemon"]], "setname() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread.setName"]], "start() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread.start"]], "fancythread (in module aslm.model.concurrency.concurrency_tools)": [[59, "aslm.model.concurrency.concurrency_tools.FancyThread"]], "mytestclass (class in aslm.model.concurrency.concurrency_tools)": [[60, "aslm.model.concurrency.concurrency_tools.MyTestClass"]], "__init__() (aslm.model.concurrency.concurrency_tools.mytestclass method)": [[60, "aslm.model.concurrency.concurrency_tools.MyTestClass.__init__"]], "run() (aslm.model.concurrency.concurrency_tools.mytestclass method)": [[60, "aslm.model.concurrency.concurrency_tools.MyTestClass.run"]], "time_it() (aslm.model.concurrency.concurrency_tools.mytestclass method)": [[60, "aslm.model.concurrency.concurrency_tools.MyTestClass.time_it"]], "objectinsubprocess (class in aslm.model.concurrency.concurrency_tools)": [[61, "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess"]], "__init__() (aslm.model.concurrency.concurrency_tools.objectinsubprocess method)": [[61, "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess.__init__"]], "politethread (in module aslm.model.concurrency.concurrency_tools)": [[62, "aslm.model.concurrency.concurrency_tools.PoliteThread"]], "resultthread (class in aslm.model.concurrency.concurrency_tools)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread"]], "__init__() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread.__init__"]], "daemon (aslm.model.concurrency.concurrency_tools.resultthread property)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread.daemon"]], "getname() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread.getName"]], "get_result() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread.get_result"]], "ident (aslm.model.concurrency.concurrency_tools.resultthread property)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread.ident"]], "isdaemon() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread.isDaemon"]], "is_alive() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread.is_alive"]], "join() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread.join"]], "name (aslm.model.concurrency.concurrency_tools.resultthread property)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread.name"]], "native_id (aslm.model.concurrency.concurrency_tools.resultthread property)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread.native_id"]], "run() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread.run"]], "setdaemon() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread.setDaemon"]], "setname() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread.setName"]], "start() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread.start"]], "aligned (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ALIGNED"]], "behaved (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.BEHAVED"]], "carray (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.CARRAY"]], "c_contiguous (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.C_CONTIGUOUS"]], "farray (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.FARRAY"]], "fnc (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.FNC"]], "forc (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.FORC"]], "f_contiguous (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.F_CONTIGUOUS"]], "owndata (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.OWNDATA"]], "sharedndarray (class in aslm.model.concurrency.concurrency_tools)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray"]], "t (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.T"]], "updateifcopy (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.UPDATEIFCOPY"]], "writeable (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.WRITEABLE"]], "writebackifcopy (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.WRITEBACKIFCOPY"]], "__init__() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.__init__"]], "all() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.all"]], "any() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.any"]], "argmax() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.argmax"]], "argmin() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.argmin"]], "argpartition() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.argpartition"]], "argsort() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.argsort"]], "astype() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.astype"]], "base (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.base"]], "byteswap() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.byteswap"]], "choose() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.choose"]], "clip() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.clip"]], "compress() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.compress"]], "conj() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.conj"]], "conjugate() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.conjugate"]], "copy() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.copy"]], "ctypes (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ctypes"]], "cumprod() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.cumprod"]], "cumsum() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.cumsum"]], "data (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.data"]], "diagonal() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.diagonal"]], "dtype (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.dtype"]], "dump() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.dump"]], "dumps() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.dumps"]], "fill() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.fill"]], "flags (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.flags"]], "flat (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.flat"]], "flatten() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.flatten"]], "getfield() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.getfield"]], "imag (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.imag"]], "item() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.item"]], "itemset() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.itemset"]], "itemsize (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.itemsize"]], "max() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.max"]], "mean() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.mean"]], "min() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.min"]], "nbytes (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.nbytes"]], "ndim (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ndim"]], "newbyteorder() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.newbyteorder"]], "nonzero() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.nonzero"]], "partition() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.partition"]], "prod() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.prod"]], "ptp() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ptp"]], "put() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.put"]], "ravel() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ravel"]], "real (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.real"]], "repeat() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.repeat"]], "reshape() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.reshape"]], "resize() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.resize"]], "round() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.round"]], "searchsorted() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.searchsorted"]], "setfield() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.setfield"]], "setflags() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.setflags"]], "shape (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.shape"]], "size (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.size"]], "sort() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.sort"]], "squeeze() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.squeeze"]], "std() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.std"]], "strides (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.strides"]], "sum() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.sum"]], "swapaxes() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.swapaxes"]], "take() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.take"]], "tobytes() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.tobytes"]], "tofile() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.tofile"]], "tolist() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.tolist"]], "tostring() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.tostring"]], "trace() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.trace"]], "transpose() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.transpose"]], "var() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.var"]], "view() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.view"]], "testobjectinsubprocess (class in aslm.model.concurrency.concurrency_tools)": [[65, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess"]], "testobjectinsubprocess.testclass (class in aslm.model.concurrency.concurrency_tools)": [[65, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.TestClass"]], "__init__() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[65, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.__init__"]], "run() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[65, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.run"]], "test_incorrect_thread_management() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[65, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.test_incorrect_thread_management"]], "test_lock_with_waitlist() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[65, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.test_lock_with_waitlist"]], "test_object_in_subprocess_overhead() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[65, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.test_object_in_subprocess_overhead"]], "test_sending_shared_arrays() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[65, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.test_sending_shared_arrays"]], "time_it() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[65, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.time_it"]], "testresultthreadandcustodythread (class in aslm.model.concurrency.concurrency_tools)": [[66, "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread"]], "__init__() (aslm.model.concurrency.concurrency_tools.testresultthreadandcustodythread method)": [[66, "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread.__init__"]], "run() (aslm.model.concurrency.concurrency_tools.testresultthreadandcustodythread method)": [[66, "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread.run"]], "time_it() (aslm.model.concurrency.concurrency_tools.testresultthreadandcustodythread method)": [[66, "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread.time_it"]], "testsharedndarray (class in aslm.model.concurrency.concurrency_tools)": [[67, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray"]], "__init__() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[67, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.__init__"]], "run() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[67, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.run"]], "test_ndarraylike_behavior() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[67, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.test_ndarraylike_behavior"]], "test_serialization() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[67, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.test_serialization"]], "test_serializing_and_deserializing() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[67, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.test_serializing_and_deserializing"]], "time_it() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[67, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.time_it"]], "aslm.model.concurrency.proxy_objects": [[68, "module-aslm.model.concurrency.proxy_objects"]], "proxymanager (class in aslm.model.concurrency.proxy_objects)": [[69, "aslm.model.concurrency.proxy_objects.ProxyManager"]], "__init__() (aslm.model.concurrency.proxy_objects.proxymanager method)": [[69, "aslm.model.concurrency.proxy_objects.ProxyManager.__init__"]], "proxy_object() (aslm.model.concurrency.proxy_objects.proxymanager method)": [[69, "aslm.model.concurrency.proxy_objects.ProxyManager.proxy_object"]], "shared_numpy_array() (aslm.model.concurrency.proxy_objects.proxymanager method)": [[69, "aslm.model.concurrency.proxy_objects.ProxyManager.shared_numpy_array"]], "proxyobject (class in aslm.model.concurrency.proxy_objects)": [[70, "aslm.model.concurrency.proxy_objects.ProxyObject"]], "__init__() (aslm.model.concurrency.proxy_objects.proxyobject method)": [[70, "aslm.model.concurrency.proxy_objects.ProxyObject.__init__"]], "launch_custody_thread() (in module aslm.model.concurrency.proxy_objects)": [[71, "aslm.model.concurrency.proxy_objects.launch_custody_thread"]], "launch_thread() (in module aslm.model.concurrency.proxy_objects)": [[72, "aslm.model.concurrency.proxy_objects.launch_thread"]], "aslm.model.concurrency.shared_memory": [[73, "module-aslm.model.concurrency.shared_memory"]], "aslm.model.concurrency.write_parameters": [[74, "module-aslm.model.concurrency.write_parameters"]], "__init__() (aslm.model.concurrency.write_parameters.write_params method)": [[75, "aslm.model.concurrency.write_parameters.write_Params.__init__"]], "write_params (class in aslm.model.concurrency.write_parameters)": [[75, "aslm.model.concurrency.write_parameters.write_Params"]], "aslm.model.data_sources": [[76, "module-aslm.model.data_sources"]], "aslm.model.data_sources.bdv_data_source": [[77, "module-aslm.model.data_sources.bdv_data_source"]], "bigdataviewerdatasource (class in aslm.model.data_sources.bdv_data_source)": [[78, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource"]], "__init__() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[78, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.__init__"]], "close() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[78, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.close"]], "data (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[78, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.data"]], "read() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[78, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.read"]], "resolutions (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[78, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.resolutions"]], "shape (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[78, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.shape"]], "shapes (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[78, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.shapes"]], "subdivisions (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[78, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.subdivisions"]], "voxel_size (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[78, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.voxel_size"]], "write() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[78, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.write"]], "aslm.model.data_sources.data_source": [[79, "module-aslm.model.data_sources.data_source"]], "datasource (class in aslm.model.data_sources.data_source)": [[80, "aslm.model.data_sources.data_source.DataSource"]], "__init__() (aslm.model.data_sources.data_source.datasource method)": [[80, "aslm.model.data_sources.data_source.DataSource.__init__"]], "close() (aslm.model.data_sources.data_source.datasource method)": [[80, "aslm.model.data_sources.data_source.DataSource.close"]], "data (aslm.model.data_sources.data_source.datasource property)": [[80, "aslm.model.data_sources.data_source.DataSource.data"]], "read() (aslm.model.data_sources.data_source.datasource method)": [[80, "aslm.model.data_sources.data_source.DataSource.read"]], "shape (aslm.model.data_sources.data_source.datasource property)": [[80, "aslm.model.data_sources.data_source.DataSource.shape"]], "voxel_size (aslm.model.data_sources.data_source.datasource property)": [[80, "aslm.model.data_sources.data_source.DataSource.voxel_size"]], "write() (aslm.model.data_sources.data_source.datasource method)": [[80, "aslm.model.data_sources.data_source.DataSource.write"]], "get_data_source() (in module aslm.model.data_sources)": [[81, "aslm.model.data_sources.get_data_source"]], "aslm.model.data_sources.tiff_data_source": [[82, "module-aslm.model.data_sources.tiff_data_source"]], "tiffdatasource (class in aslm.model.data_sources.tiff_data_source)": [[83, "aslm.model.data_sources.tiff_data_source.TiffDataSource"]], "__init__() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[83, "aslm.model.data_sources.tiff_data_source.TiffDataSource.__init__"]], "close() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[83, "aslm.model.data_sources.tiff_data_source.TiffDataSource.close"]], "data (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[83, "aslm.model.data_sources.tiff_data_source.TiffDataSource.data"]], "generate_image_name() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[83, "aslm.model.data_sources.tiff_data_source.TiffDataSource.generate_image_name"]], "read() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[83, "aslm.model.data_sources.tiff_data_source.TiffDataSource.read"]], "shape (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[83, "aslm.model.data_sources.tiff_data_source.TiffDataSource.shape"]], "voxel_size (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[83, "aslm.model.data_sources.tiff_data_source.TiffDataSource.voxel_size"]], "write() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[83, "aslm.model.data_sources.tiff_data_source.TiffDataSource.write"]], "aslm.model.data_sources.zarr_data_source": [[84, "module-aslm.model.data_sources.zarr_data_source"]], "zarrdatasource (class in aslm.model.data_sources.zarr_data_source)": [[85, "aslm.model.data_sources.zarr_data_source.ZarrDataSource"]], "__init__() (aslm.model.data_sources.zarr_data_source.zarrdatasource method)": [[85, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.__init__"]], "close() (aslm.model.data_sources.zarr_data_source.zarrdatasource method)": [[85, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.close"]], "copy_to_zarr() (aslm.model.data_sources.zarr_data_source.zarrdatasource method)": [[85, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.copy_to_zarr"]], "data (aslm.model.data_sources.zarr_data_source.zarrdatasource property)": [[85, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.data"]], "read() (aslm.model.data_sources.zarr_data_source.zarrdatasource method)": [[85, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.read"]], "shape (aslm.model.data_sources.zarr_data_source.zarrdatasource property)": [[85, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.shape"]], "voxel_size (aslm.model.data_sources.zarr_data_source.zarrdatasource property)": [[85, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.voxel_size"]], "write() (aslm.model.data_sources.zarr_data_source.zarrdatasource method)": [[85, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.write"]], "aslm.model.device_startup_functions": [[86, "module-aslm.model.device_startup_functions"]], "dummydeviceconnection (class in aslm.model.device_startup_functions)": [[87, "aslm.model.device_startup_functions.DummyDeviceConnection"]], "__init__() (aslm.model.device_startup_functions.dummydeviceconnection method)": [[87, "aslm.model.device_startup_functions.DummyDeviceConnection.__init__"]], "auto_redial() (in module aslm.model.device_startup_functions)": [[88, "aslm.model.device_startup_functions.auto_redial"]], "device_not_found() (in module aslm.model.device_startup_functions)": [[89, "aslm.model.device_startup_functions.device_not_found"]], "load_camera_connection() (in module aslm.model.device_startup_functions)": [[90, "aslm.model.device_startup_functions.load_camera_connection"]], "load_devices() (in module aslm.model.device_startup_functions)": [[91, "aslm.model.device_startup_functions.load_devices"]], "load_filter_wheel_connection() (in module aslm.model.device_startup_functions)": [[92, "aslm.model.device_startup_functions.load_filter_wheel_connection"]], "load_stages() (in module aslm.model.device_startup_functions)": [[93, "aslm.model.device_startup_functions.load_stages"]], "load_zoom_connection() (in module aslm.model.device_startup_functions)": [[94, "aslm.model.device_startup_functions.load_zoom_connection"]], "start_camera() (in module aslm.model.device_startup_functions)": [[95, "aslm.model.device_startup_functions.start_camera"]], "start_daq() (in module aslm.model.device_startup_functions)": [[96, "aslm.model.device_startup_functions.start_daq"]], "start_filter_wheel() (in module aslm.model.device_startup_functions)": [[97, "aslm.model.device_startup_functions.start_filter_wheel"]], "start_galvo() (in module aslm.model.device_startup_functions)": [[98, "aslm.model.device_startup_functions.start_galvo"]], "start_lasers() (in module aslm.model.device_startup_functions)": [[99, "aslm.model.device_startup_functions.start_lasers"]], "start_remote_focus_device() (in module aslm.model.device_startup_functions)": [[100, "aslm.model.device_startup_functions.start_remote_focus_device"]], "start_shutter() (in module aslm.model.device_startup_functions)": [[101, "aslm.model.device_startup_functions.start_shutter"]], "start_stage() (in module aslm.model.device_startup_functions)": [[102, "aslm.model.device_startup_functions.start_stage"]], "start_zoom() (in module aslm.model.device_startup_functions)": [[103, "aslm.model.device_startup_functions.start_zoom"]], "aslm.model.devices": [[104, "module-aslm.model.devices"]], "aslm.model.devices.apis": [[105, "module-aslm.model.devices.APIs"]], "aslm.model.devices.apis.coherent": [[106, "module-aslm.model.devices.APIs.coherent"]], "aslm.model.devices.apis.dynamixel": [[107, "module-aslm.model.devices.APIs.dynamixel"]], "aslm.model.devices.apis.logitech": [[108, "module-aslm.model.devices.APIs.logitech"]], "aslm.model.devices.apis.omicron": [[109, "module-aslm.model.devices.APIs.omicron"]], "aslm.model.devices.camera": [[110, "module-aslm.model.devices.camera"]], "aslm.model.devices.camera.camera_base": [[111, "module-aslm.model.devices.camera.camera_base"]], "camerabase (class in aslm.model.devices.camera.camera_base)": [[112, "aslm.model.devices.camera.camera_base.CameraBase"]], "__init__() (aslm.model.devices.camera.camera_base.camerabase method)": [[112, "aslm.model.devices.camera.camera_base.CameraBase.__init__"]], "calculate_light_sheet_exposure_time() (aslm.model.devices.camera.camera_base.camerabase method)": [[112, "aslm.model.devices.camera.camera_base.CameraBase.calculate_light_sheet_exposure_time"]], "set_readout_direction() (aslm.model.devices.camera.camera_base.camerabase method)": [[112, "aslm.model.devices.camera.camera_base.CameraBase.set_readout_direction"]], "aslm.model.devices.camera.camera_hamamatsu": [[113, "module-aslm.model.devices.camera.camera_hamamatsu"]], "hamamatsuorca (class in aslm.model.devices.camera.camera_hamamatsu)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca"]], "__init__() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.__init__"]], "calculate_light_sheet_exposure_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.calculate_light_sheet_exposure_time"]], "calculate_readout_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.calculate_readout_time"]], "close_camera() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.close_camera"]], "close_image_series() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.close_image_series"]], "get_minimum_waiting_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.get_minimum_waiting_time"]], "get_new_frame() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.get_new_frame"]], "initialize_image_series() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.initialize_image_series"]], "report_settings() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.report_settings"]], "serial_number (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.serial_number"]], "set_roi() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_ROI"]], "set_binning() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_binning"]], "set_exposure_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_exposure_time"]], "set_line_interval() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_line_interval"]], "set_readout_direction() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_readout_direction"]], "set_sensor_mode() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_sensor_mode"]], "aslm.model.devices.camera.camera_synthetic": [[115, "module-aslm.model.devices.camera.camera_synthetic"]], "syntheticcamera (class in aslm.model.devices.camera.camera_synthetic)": [[116, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera"]], "__init__() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[116, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.__init__"]], "calculate_light_sheet_exposure_time() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[116, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.calculate_light_sheet_exposure_time"]], "calculate_readout_time() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[116, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.calculate_readout_time"]], "close_camera() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[116, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.close_camera"]], "close_image_series() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[116, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.close_image_series"]], "generate_new_frame() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[116, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.generate_new_frame"]], "get_minimum_waiting_time() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[116, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.get_minimum_waiting_time"]], "get_new_frame() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[116, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.get_new_frame"]], "initialize_image_series() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[116, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.initialize_image_series"]], "report_settings() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[116, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.report_settings"]], "set_roi() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[116, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_ROI"]], "set_binning() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[116, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_binning"]], "set_exposure_time() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[116, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_exposure_time"]], "set_line_interval() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[116, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_line_interval"]], "set_readout_direction() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[116, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_readout_direction"]], "set_sensor_mode() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[116, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_sensor_mode"]], "syntheticcameracontroller (class in aslm.model.devices.camera.camera_synthetic)": [[117, "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController"]], "__init__() (aslm.model.devices.camera.camera_synthetic.syntheticcameracontroller method)": [[117, "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController.__init__"]], "get_property_value() (aslm.model.devices.camera.camera_synthetic.syntheticcameracontroller method)": [[117, "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController.get_property_value"]], "aslm.model.devices.daq": [[118, "module-aslm.model.devices.daq"]], "aslm.model.devices.daq.daq_base": [[119, "module-aslm.model.devices.daq.daq_base"]], "daqbase (class in aslm.model.devices.daq.daq_base)": [[120, "aslm.model.devices.daq.daq_base.DAQBase"]], "__init__() (aslm.model.devices.daq.daq_base.daqbase method)": [[120, "aslm.model.devices.daq.daq_base.DAQBase.__init__"]], "calculate_all_waveforms() (aslm.model.devices.daq.daq_base.daqbase method)": [[120, "aslm.model.devices.daq.daq_base.DAQBase.calculate_all_waveforms"]], "configuration (aslm.model.devices.daq.daq_base.daqbase attribute)": [[120, "aslm.model.devices.daq.daq_base.DAQBase.configuration"]], "aslm.model.devices.daq.daq_synthetic": [[121, "module-aslm.model.devices.daq.daq_synthetic"]], "syntheticdaq (class in aslm.model.devices.daq.daq_synthetic)": [[122, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ"]], "__init__() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[122, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.__init__"]], "add_camera() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[122, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.add_camera"]], "calculate_all_waveforms() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[122, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.calculate_all_waveforms"]], "close_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[122, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.close_tasks"]], "configuration (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[122, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.configuration"]], "create_camera_task() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[122, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.create_camera_task"]], "create_galvo_remote_focus_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[122, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.create_galvo_remote_focus_tasks"]], "create_master_trigger_task() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[122, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.create_master_trigger_task"]], "prepare_acquisition() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[122, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.prepare_acquisition"]], "run_acquisition() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[122, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.run_acquisition"]], "start_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[122, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.start_tasks"]], "stop_acquisition() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[122, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.stop_acquisition"]], "stop_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[122, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.stop_tasks"]], "write_waveforms_to_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[122, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.write_waveforms_to_tasks"]], "aslm.model.devices.filter_wheel": [[123, "module-aslm.model.devices.filter_wheel"]], "aslm.model.devices.filter_wheel.filter_wheel_base": [[124, "module-aslm.model.devices.filter_wheel.filter_wheel_base"]], "filterwheelbase (class in aslm.model.devices.filter_wheel.filter_wheel_base)": [[125, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase"]], "__init__() (aslm.model.devices.filter_wheel.filter_wheel_base.filterwheelbase method)": [[125, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.__init__"]], "check_if_filter_in_filter_dictionary() (aslm.model.devices.filter_wheel.filter_wheel_base.filterwheelbase method)": [[125, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.check_if_filter_in_filter_dictionary"], [125, "id0"]], "filter_dictionary (aslm.model.devices.filter_wheel.filter_wheel_base.filterwheelbase attribute)": [[125, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.filter_dictionary"]], "wheel_position (aslm.model.devices.filter_wheel.filter_wheel_base.filterwheelbase attribute)": [[125, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.wheel_position"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter": [[126, "module-aslm.model.devices.filter_wheel.filter_wheel_sutter"]], "sutterfilterwheel (class in aslm.model.devices.filter_wheel.filter_wheel_sutter)": [[127, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel"]], "__init__() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[127, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.__init__"]], "baudrate (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[127, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.baudrate"]], "check_if_filter_in_filter_dictionary() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[127, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.check_if_filter_in_filter_dictionary"], [127, "id0"]], "close() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[127, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.close"], [127, "id1"]], "comport (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[127, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.comport"]], "filter_change_delay() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[127, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.filter_change_delay"], [127, "id2"]], "filter_dictionary (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[127, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.filter_dictionary"]], "number_of_filter_wheels (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[127, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.number_of_filter_wheels"]], "read() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[127, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.read"], [127, "id3"]], "set_filter() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[127, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.set_filter"]], "wheel_position (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[127, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.wheel_position"]], "baudrate (in module aslm.model.devices.filter_wheel.filter_wheel_sutter)": [[128, "aslm.model.devices.filter_wheel.filter_wheel_sutter.baudrate"]], "build_filter_wheel_connection() (in module aslm.model.devices.filter_wheel.filter_wheel_sutter)": [[128, "aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic": [[129, "module-aslm.model.devices.filter_wheel.filter_wheel_synthetic"]], "syntheticfilterwheel (class in aslm.model.devices.filter_wheel.filter_wheel_synthetic)": [[130, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel"]], "__init__() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[130, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.__init__"]], "baudrate (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[130, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.baudrate"]], "check_if_filter_in_filter_dictionary() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[130, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.check_if_filter_in_filter_dictionary"]], "close() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[130, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.close"]], "comport (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[130, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.comport"]], "filter_change_delay() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[130, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.filter_change_delay"]], "filter_dictionary (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[130, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.filter_dictionary"]], "number_of_filter_wheels (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[130, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.number_of_filter_wheels"]], "read() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[130, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.read"]], "set_filter() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[130, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.set_filter"]], "wheel_position (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[130, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.wheel_position"]], "aslm.model.devices.galvo": [[131, "module-aslm.model.devices.galvo"]], "aslm.model.devices.galvo.galvo_base": [[132, "module-aslm.model.devices.galvo.galvo_base"]], "galvobase (class in aslm.model.devices.galvo.galvo_base)": [[133, "aslm.model.devices.galvo.galvo_base.GalvoBase"]], "__init__() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[133, "aslm.model.devices.galvo.galvo_base.GalvoBase.__init__"]], "aslm.model.devices.galvo.galvo_synthetic": [[134, "module-aslm.model.devices.galvo.galvo_synthetic"]], "syntheticgalvo (class in aslm.model.devices.galvo.galvo_synthetic)": [[135, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo"]], "__init__() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[135, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.__init__"]], "aslm.model.devices.joystick": [[136, "module-aslm.model.devices.joystick"]], "aslm.model.devices.joystick.joystick_base": [[137, "module-aslm.model.devices.joystick.joystick_base"]], "joystickbase (class in aslm.model.devices.joystick.joystick_base)": [[138, "aslm.model.devices.joystick.joystick_base.JoystickBase"]], "__init__() (aslm.model.devices.joystick.joystick_base.joystickbase method)": [[138, "aslm.model.devices.joystick.joystick_base.JoystickBase.__init__"]], "aslm.model.devices.joystick.joystick_synthetic": [[139, "module-aslm.model.devices.joystick.joystick_synthetic"]], "syntheticjoystick (class in aslm.model.devices.joystick.joystick_synthetic)": [[140, "aslm.model.devices.joystick.joystick_synthetic.SyntheticJoystick"]], "__init__() (aslm.model.devices.joystick.joystick_synthetic.syntheticjoystick method)": [[140, "aslm.model.devices.joystick.joystick_synthetic.SyntheticJoystick.__init__"]], "aslm.model.devices.lasers": [[141, "module-aslm.model.devices.lasers"]], "aslm.model.devices.lasers.laser_base": [[142, "module-aslm.model.devices.lasers.laser_base"]], "laserbase (class in aslm.model.devices.lasers.laser_base)": [[143, "aslm.model.devices.lasers.laser_base.LaserBase"]], "__init__() (aslm.model.devices.lasers.laser_base.laserbase method)": [[143, "aslm.model.devices.lasers.laser_base.LaserBase.__init__"]], "close() (aslm.model.devices.lasers.laser_base.laserbase method)": [[143, "aslm.model.devices.lasers.laser_base.LaserBase.close"]], "initialize_laser() (aslm.model.devices.lasers.laser_base.laserbase method)": [[143, "aslm.model.devices.lasers.laser_base.LaserBase.initialize_laser"]], "aslm.model.devices.lasers.laser_synthetic": [[144, "module-aslm.model.devices.lasers.laser_synthetic"]], "syntheticlaser (class in aslm.model.devices.lasers.laser_synthetic)": [[145, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser"]], "__init__() (aslm.model.devices.lasers.laser_synthetic.syntheticlaser method)": [[145, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.__init__"]], "close() (aslm.model.devices.lasers.laser_synthetic.syntheticlaser method)": [[145, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.close"]], "initialize_laser() (aslm.model.devices.lasers.laser_synthetic.syntheticlaser method)": [[145, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.initialize_laser"]], "aslm.model.devices.lasers.laser_trigger_base": [[146, "module-aslm.model.devices.lasers.laser_trigger_base"]], "lasertriggerbase (class in aslm.model.devices.lasers.laser_trigger_base)": [[147, "aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase"]], "__init__() (aslm.model.devices.lasers.laser_trigger_base.lasertriggerbase method)": [[147, "aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase.__init__"]], "enable_high_resolution_laser() (aslm.model.devices.lasers.laser_trigger_base.lasertriggerbase method)": [[147, "aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase.enable_high_resolution_laser"]], "enable_low_resolution_laser() (aslm.model.devices.lasers.laser_trigger_base.lasertriggerbase method)": [[147, "aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase.enable_low_resolution_laser"]], "set_laser_analog_voltage() (aslm.model.devices.lasers.laser_trigger_base.lasertriggerbase method)": [[147, "aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase.set_laser_analog_voltage"]], "aslm.model.devices.lasers.laser_trigger_synthetic": [[148, "module-aslm.model.devices.lasers.laser_trigger_synthetic"]], "syntheticlasertriggers (class in aslm.model.devices.lasers.laser_trigger_synthetic)": [[149, "aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers"]], "__init__() (aslm.model.devices.lasers.laser_trigger_synthetic.syntheticlasertriggers method)": [[149, "aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers.__init__"]], "enable_high_resolution_laser() (aslm.model.devices.lasers.laser_trigger_synthetic.syntheticlasertriggers method)": [[149, "aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers.enable_high_resolution_laser"]], "enable_low_resolution_laser() (aslm.model.devices.lasers.laser_trigger_synthetic.syntheticlasertriggers method)": [[149, "aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers.enable_low_resolution_laser"]], "set_laser_analog_voltage() (aslm.model.devices.lasers.laser_trigger_synthetic.syntheticlasertriggers method)": [[149, "aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers.set_laser_analog_voltage"]], "aslm.model.devices.objectives": [[150, "module-aslm.model.devices.objectives"]], "objective (class in aslm.model.devices.objectives)": [[151, "aslm.model.devices.objectives.Objective"]], "__init__() (aslm.model.devices.objectives.objective method)": [[151, "aslm.model.devices.objectives.Objective.__init__"]], "calculate_entrance_pupil() (aslm.model.devices.objectives.objective method)": [[151, "aslm.model.devices.objectives.Objective.calculate_entrance_pupil"]], "aslm.model.devices.remote_focus": [[152, "module-aslm.model.devices.remote_focus"]], "aslm.model.devices.remote_focus.remote_focus_base": [[153, "module-aslm.model.devices.remote_focus.remote_focus_base"]], "remotefocusbase (class in aslm.model.devices.remote_focus.remote_focus_base)": [[154, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase"]], "__init__() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[154, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.__init__"]], "aslm.model.devices.remote_focus.remote_focus_equipment_solutions": [[155, "module-aslm.model.devices.remote_focus.remote_focus_equipment_solutions"]], "remotefocusequipmentsolutions (class in aslm.model.devices.remote_focus.remote_focus_equipment_solutions)": [[156, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions"]], "__init__() (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions method)": [[156, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.__init__"]], "baud_rate (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions attribute)": [[156, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.baud_rate"]], "byte_size (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions attribute)": [[156, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.byte_size"]], "close_connection() (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions method)": [[156, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.close_connection"], [156, "id0"]], "comport (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions attribute)": [[156, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.comport"]], "debug (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions attribute)": [[156, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.debug"]], "parity (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions attribute)": [[156, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.parity"]], "read_bytes() (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions method)": [[156, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.read_bytes"], [156, "id1"]], "read_on_init (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions attribute)": [[156, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.read_on_init"]], "send_command() (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions method)": [[156, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.send_command"], [156, "id2"]], "stop_bits (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions attribute)": [[156, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.stop_bits"]], "timeout (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions attribute)": [[156, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.timeout"]], "aslm.model.devices.remote_focus.remote_focus_synthetic": [[157, "module-aslm.model.devices.remote_focus.remote_focus_synthetic"]], "syntheticremotefocus (class in aslm.model.devices.remote_focus.remote_focus_synthetic)": [[158, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus"]], "__init__() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[158, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.__init__"]], "aslm.model.devices.shutter": [[159, "module-aslm.model.devices.shutter"]], "aslm.model.devices.shutter.laser_shutter_base": [[160, "module-aslm.model.devices.shutter.laser_shutter_base"]], "shutterbase (class in aslm.model.devices.shutter.laser_shutter_base)": [[161, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase"]], "__init__() (aslm.model.devices.shutter.laser_shutter_base.shutterbase method)": [[161, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.__init__"]], "configuration (aslm.model.devices.shutter.laser_shutter_base.shutterbase attribute)": [[161, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.configuration"]], "device_connection (aslm.model.devices.shutter.laser_shutter_base.shutterbase attribute)": [[161, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.device_connection"]], "microscope_name (aslm.model.devices.shutter.laser_shutter_base.shutterbase attribute)": [[161, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.microscope_name"]], "aslm.model.devices.shutter.laser_shutter_synthetic": [[162, "module-aslm.model.devices.shutter.laser_shutter_synthetic"]], "syntheticshutter (class in aslm.model.devices.shutter.laser_shutter_synthetic)": [[163, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter"]], "__init__() (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter method)": [[163, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.__init__"]], "close_shutters() (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter method)": [[163, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.close_shutters"]], "configuration (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter attribute)": [[163, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.configuration"]], "device_connection (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter attribute)": [[163, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.device_connection"]], "microscope_name (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter attribute)": [[163, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.microscope_name"]], "open_left() (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter method)": [[163, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.open_left"]], "open_right() (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter method)": [[163, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.open_right"]], "state() (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter method)": [[163, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.state"]], "aslm.model.devices.stages": [[164, "module-aslm.model.devices.stages"]], "aslm.model.devices.stages.stage_asi": [[165, "module-aslm.model.devices.stages.stage_asi"]], "asistage (class in aslm.model.devices.stages.stage_asi)": [[166, "aslm.model.devices.stages.stage_asi.ASIStage"]], "__init__() (aslm.model.devices.stages.stage_asi.asistage method)": [[166, "aslm.model.devices.stages.stage_asi.ASIStage.__init__"]], "create_position_dict() (aslm.model.devices.stages.stage_asi.asistage method)": [[166, "aslm.model.devices.stages.stage_asi.ASIStage.create_position_dict"]], "get_abs_position() (aslm.model.devices.stages.stage_asi.asistage method)": [[166, "aslm.model.devices.stages.stage_asi.ASIStage.get_abs_position"]], "move_absolute() (aslm.model.devices.stages.stage_asi.asistage method)": [[166, "aslm.model.devices.stages.stage_asi.ASIStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_asi.asistage method)": [[166, "aslm.model.devices.stages.stage_asi.ASIStage.move_axis_absolute"]], "report_position() (aslm.model.devices.stages.stage_asi.asistage method)": [[166, "aslm.model.devices.stages.stage_asi.ASIStage.report_position"]], "stop() (aslm.model.devices.stages.stage_asi.asistage method)": [[166, "aslm.model.devices.stages.stage_asi.ASIStage.stop"]], "build_asi_stage_connection() (in module aslm.model.devices.stages.stage_asi)": [[167, "aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection"]], "aslm.model.devices.stages.stage_base": [[168, "module-aslm.model.devices.stages.stage_base"]], "stagebase (class in aslm.model.devices.stages.stage_base)": [[169, "aslm.model.devices.stages.stage_base.StageBase"]], "__init__() (aslm.model.devices.stages.stage_base.stagebase method)": [[169, "aslm.model.devices.stages.stage_base.StageBase.__init__"]], "create_position_dict() (aslm.model.devices.stages.stage_base.stagebase method)": [[169, "aslm.model.devices.stages.stage_base.StageBase.create_position_dict"], [169, "id0"]], "f_max (aslm.model.devices.stages.stage_base.stagebase attribute)": [[169, "aslm.model.devices.stages.stage_base.StageBase.f_max"]], "f_min (aslm.model.devices.stages.stage_base.stagebase attribute)": [[169, "aslm.model.devices.stages.stage_base.StageBase.f_min"]], "f_pos (aslm.model.devices.stages.stage_base.stagebase attribute)": [[169, "aslm.model.devices.stages.stage_base.StageBase.f_pos"]], "get_abs_position() (aslm.model.devices.stages.stage_base.stagebase method)": [[169, "aslm.model.devices.stages.stage_base.StageBase.get_abs_position"], [169, "id1"]], "position_dict (aslm.model.devices.stages.stage_base.stagebase attribute)": [[169, "aslm.model.devices.stages.stage_base.StageBase.position_dict"]], "stop() (aslm.model.devices.stages.stage_base.stagebase method)": [[169, "aslm.model.devices.stages.stage_base.StageBase.stop"], [169, "id2"]], "theta_max (aslm.model.devices.stages.stage_base.stagebase attribute)": [[169, "aslm.model.devices.stages.stage_base.StageBase.theta_max"]], "theta_min (aslm.model.devices.stages.stage_base.stagebase attribute)": [[169, "aslm.model.devices.stages.stage_base.StageBase.theta_min"]], "theta_pos (aslm.model.devices.stages.stage_base.stagebase attribute)": [[169, "aslm.model.devices.stages.stage_base.StageBase.theta_pos"]], "x_max (aslm.model.devices.stages.stage_base.stagebase attribute)": [[169, "aslm.model.devices.stages.stage_base.StageBase.x_max"]], "x_min (aslm.model.devices.stages.stage_base.stagebase attribute)": [[169, "aslm.model.devices.stages.stage_base.StageBase.x_min"]], "x_pos (aslm.model.devices.stages.stage_base.stagebase attribute)": [[169, "aslm.model.devices.stages.stage_base.StageBase.x_pos"]], "y_max (aslm.model.devices.stages.stage_base.stagebase attribute)": [[169, "aslm.model.devices.stages.stage_base.StageBase.y_max"]], "y_min (aslm.model.devices.stages.stage_base.stagebase attribute)": [[169, "aslm.model.devices.stages.stage_base.StageBase.y_min"]], "y_pos (aslm.model.devices.stages.stage_base.stagebase attribute)": [[169, "aslm.model.devices.stages.stage_base.StageBase.y_pos"]], "z_max (aslm.model.devices.stages.stage_base.stagebase attribute)": [[169, "aslm.model.devices.stages.stage_base.StageBase.z_max"]], "z_min (aslm.model.devices.stages.stage_base.stagebase attribute)": [[169, "aslm.model.devices.stages.stage_base.StageBase.z_min"]], "z_pos (aslm.model.devices.stages.stage_base.stagebase attribute)": [[169, "aslm.model.devices.stages.stage_base.StageBase.z_pos"]], "aslm.model.devices.stages.stage_galvo": [[170, "module-aslm.model.devices.stages.stage_galvo"]], "galvonistage (class in aslm.model.devices.stages.stage_galvo)": [[171, "aslm.model.devices.stages.stage_galvo.GalvoNIStage"]], "__init__() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[171, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.__init__"]], "create_position_dict() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[171, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.create_position_dict"], [171, "id0"]], "get_abs_position() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[171, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.get_abs_position"], [171, "id1"]], "move_absolute() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[171, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[171, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.move_axis_absolute"]], "report_position() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[171, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.report_position"]], "stop() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[171, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.stop"], [171, "id2"]], "aslm.model.devices.stages.stage_mcl": [[172, "module-aslm.model.devices.stages.stage_mcl"]], "mclstage (class in aslm.model.devices.stages.stage_mcl)": [[173, "aslm.model.devices.stages.stage_mcl.MCLStage"]], "__init__() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[173, "aslm.model.devices.stages.stage_mcl.MCLStage.__init__"]], "create_position_dict() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[173, "aslm.model.devices.stages.stage_mcl.MCLStage.create_position_dict"]], "get_abs_position() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[173, "aslm.model.devices.stages.stage_mcl.MCLStage.get_abs_position"]], "move_absolute() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[173, "aslm.model.devices.stages.stage_mcl.MCLStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[173, "aslm.model.devices.stages.stage_mcl.MCLStage.move_axis_absolute"]], "report_position() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[173, "aslm.model.devices.stages.stage_mcl.MCLStage.report_position"]], "stop() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[173, "aslm.model.devices.stages.stage_mcl.MCLStage.stop"]], "build_mclstage_connection() (in module aslm.model.devices.stages.stage_mcl)": [[174, "aslm.model.devices.stages.stage_mcl.build_MCLStage_connection"]], "aslm.model.devices.stages.stage_pi": [[175, "module-aslm.model.devices.stages.stage_pi"]], "pistage (class in aslm.model.devices.stages.stage_pi)": [[176, "aslm.model.devices.stages.stage_pi.PIStage"]], "__init__() (aslm.model.devices.stages.stage_pi.pistage method)": [[176, "aslm.model.devices.stages.stage_pi.PIStage.__init__"]], "create_position_dict() (aslm.model.devices.stages.stage_pi.pistage method)": [[176, "aslm.model.devices.stages.stage_pi.PIStage.create_position_dict"], [176, "id0"]], "f_max (aslm.model.devices.stages.stage_pi.pistage attribute)": [[176, "aslm.model.devices.stages.stage_pi.PIStage.f_max"]], "f_min (aslm.model.devices.stages.stage_pi.pistage attribute)": [[176, "aslm.model.devices.stages.stage_pi.PIStage.f_min"]], "f_pos (aslm.model.devices.stages.stage_pi.pistage attribute)": [[176, "aslm.model.devices.stages.stage_pi.PIStage.f_pos"]], "get_abs_position() (aslm.model.devices.stages.stage_pi.pistage method)": [[176, "aslm.model.devices.stages.stage_pi.PIStage.get_abs_position"], [176, "id1"]], "move_absolute() (aslm.model.devices.stages.stage_pi.pistage method)": [[176, "aslm.model.devices.stages.stage_pi.PIStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_pi.pistage method)": [[176, "aslm.model.devices.stages.stage_pi.PIStage.move_axis_absolute"]], "position_dict (aslm.model.devices.stages.stage_pi.pistage attribute)": [[176, "aslm.model.devices.stages.stage_pi.PIStage.position_dict"]], "report_position() (aslm.model.devices.stages.stage_pi.pistage method)": [[176, "aslm.model.devices.stages.stage_pi.PIStage.report_position"]], "stop() (aslm.model.devices.stages.stage_pi.pistage method)": [[176, "aslm.model.devices.stages.stage_pi.PIStage.stop"], [176, "id2"]], "theta_max (aslm.model.devices.stages.stage_pi.pistage attribute)": [[176, "aslm.model.devices.stages.stage_pi.PIStage.theta_max"]], "theta_min (aslm.model.devices.stages.stage_pi.pistage attribute)": [[176, "aslm.model.devices.stages.stage_pi.PIStage.theta_min"]], "theta_pos (aslm.model.devices.stages.stage_pi.pistage attribute)": [[176, "aslm.model.devices.stages.stage_pi.PIStage.theta_pos"]], "x_max (aslm.model.devices.stages.stage_pi.pistage attribute)": [[176, "aslm.model.devices.stages.stage_pi.PIStage.x_max"]], "x_min (aslm.model.devices.stages.stage_pi.pistage attribute)": [[176, "aslm.model.devices.stages.stage_pi.PIStage.x_min"]], "x_pos (aslm.model.devices.stages.stage_pi.pistage attribute)": [[176, "aslm.model.devices.stages.stage_pi.PIStage.x_pos"]], "y_max (aslm.model.devices.stages.stage_pi.pistage attribute)": [[176, "aslm.model.devices.stages.stage_pi.PIStage.y_max"]], "y_min (aslm.model.devices.stages.stage_pi.pistage attribute)": [[176, "aslm.model.devices.stages.stage_pi.PIStage.y_min"]], "y_pos (aslm.model.devices.stages.stage_pi.pistage attribute)": [[176, "aslm.model.devices.stages.stage_pi.PIStage.y_pos"]], "z_max (aslm.model.devices.stages.stage_pi.pistage attribute)": [[176, "aslm.model.devices.stages.stage_pi.PIStage.z_max"]], "z_min (aslm.model.devices.stages.stage_pi.pistage attribute)": [[176, "aslm.model.devices.stages.stage_pi.PIStage.z_min"]], "z_pos (aslm.model.devices.stages.stage_pi.pistage attribute)": [[176, "aslm.model.devices.stages.stage_pi.PIStage.z_pos"]], "build_pistage_connection() (in module aslm.model.devices.stages.stage_pi)": [[177, "aslm.model.devices.stages.stage_pi.build_PIStage_connection"]], "aslm.model.devices.stages.stage_sutter": [[178, "module-aslm.model.devices.stages.stage_sutter"]], "sutterstage (class in aslm.model.devices.stages.stage_sutter)": [[179, "aslm.model.devices.stages.stage_sutter.SutterStage"]], "__init__() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[179, "aslm.model.devices.stages.stage_sutter.SutterStage.__init__"]], "baudrate (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[179, "aslm.model.devices.stages.stage_sutter.SutterStage.baudrate"]], "check_byte_order() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[179, "aslm.model.devices.stages.stage_sutter.SutterStage.check_byte_order"]], "close() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[179, "aslm.model.devices.stages.stage_sutter.SutterStage.close"], [179, "id0"]], "comport (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[179, "aslm.model.devices.stages.stage_sutter.SutterStage.comport"]], "convert_microns_to_microsteps() (aslm.model.devices.stages.stage_sutter.sutterstage static method)": [[179, "aslm.model.devices.stages.stage_sutter.SutterStage.convert_microns_to_microsteps"]], "convert_microsteps_to_microns() (aslm.model.devices.stages.stage_sutter.sutterstage static method)": [[179, "aslm.model.devices.stages.stage_sutter.SutterStage.convert_microsteps_to_microns"]], "create_position_dict() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[179, "aslm.model.devices.stages.stage_sutter.SutterStage.create_position_dict"]], "filter_dictionary (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[179, "aslm.model.devices.stages.stage_sutter.SutterStage.filter_dictionary"]], "flush_buffers() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[179, "aslm.model.devices.stages.stage_sutter.SutterStage.flush_buffers"]], "get_abs_position() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[179, "aslm.model.devices.stages.stage_sutter.SutterStage.get_abs_position"]], "move_absolute() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[179, "aslm.model.devices.stages.stage_sutter.SutterStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[179, "aslm.model.devices.stages.stage_sutter.SutterStage.move_axis_absolute"]], "read() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[179, "aslm.model.devices.stages.stage_sutter.SutterStage.read"]], "report_position() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[179, "aslm.model.devices.stages.stage_sutter.SutterStage.report_position"]], "set_stage_speed_and_resolution() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[179, "aslm.model.devices.stages.stage_sutter.SutterStage.set_stage_speed_and_resolution"]], "stop() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[179, "aslm.model.devices.stages.stage_sutter.SutterStage.stop"]], "baudrate (in module aslm.model.devices.stages.stage_sutter)": [[180, "aslm.model.devices.stages.stage_sutter.baudrate"]], "build_sutter_stage_connection() (in module aslm.model.devices.stages.stage_sutter)": [[180, "aslm.model.devices.stages.stage_sutter.build_sutter_stage_connection"]], "comport (in module aslm.model.devices.stages.stage_sutter)": [[180, "aslm.model.devices.stages.stage_sutter.comport"]], "aslm.model.devices.stages.stage_synthetic": [[181, "module-aslm.model.devices.stages.stage_synthetic"]], "syntheticstage (class in aslm.model.devices.stages.stage_synthetic)": [[182, "aslm.model.devices.stages.stage_synthetic.SyntheticStage"]], "__init__() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[182, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.__init__"]], "create_position_dict() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[182, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.create_position_dict"]], "get_abs_position() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[182, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.get_abs_position"]], "move_absolute() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[182, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[182, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.move_axis_absolute"]], "stop() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[182, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.stop"]], "aslm.model.devices.stages.stage_tl_kcube_inertial": [[183, "module-aslm.model.devices.stages.stage_tl_kcube_inertial"]], "tlkimstage (class in aslm.model.devices.stages.stage_tl_kcube_inertial)": [[184, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage"]], "__init__() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[184, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.__init__"]], "create_position_dict() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[184, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.create_position_dict"]], "get_abs_position() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[184, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.get_abs_position"]], "move_absolute() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[184, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[184, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.move_axis_absolute"]], "report_position() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[184, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.report_position"]], "stop() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[184, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.stop"]], "build_tlkimstage_connection() (in module aslm.model.devices.stages.stage_tl_kcube_inertial)": [[185, "aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection"]], "aslm.model.devices.zoom": [[186, "module-aslm.model.devices.zoom"]], "aslm.model.devices.zoom.zoom_base": [[187, "module-aslm.model.devices.zoom.zoom_base"]], "zoombase (class in aslm.model.devices.zoom.zoom_base)": [[188, "aslm.model.devices.zoom.zoom_base.ZoomBase"]], "__init__() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[188, "aslm.model.devices.zoom.zoom_base.ZoomBase.__init__"]], "move() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[188, "aslm.model.devices.zoom.zoom_base.ZoomBase.move"]], "read_position() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[188, "aslm.model.devices.zoom.zoom_base.ZoomBase.read_position"]], "set_zoom() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[188, "aslm.model.devices.zoom.zoom_base.ZoomBase.set_zoom"]], "aslm.model.devices.zoom.zoom_synthetic": [[189, "module-aslm.model.devices.zoom.zoom_synthetic"]], "syntheticzoom (class in aslm.model.devices.zoom.zoom_synthetic)": [[190, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom"]], "__init__() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[190, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.__init__"]], "move() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[190, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.move"], [190, "id0"]], "read_position() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[190, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.read_position"], [190, "id1"]], "set_zoom() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[190, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.set_zoom"], [190, "id2"]], "aslm.model.features": [[191, "module-aslm.model.features"]], "aslm.model.features.autofocus": [[192, "module-aslm.model.features.autofocus"]], "autofocus (class in aslm.model.features.autofocus)": [[193, "aslm.model.features.autofocus.Autofocus"]], "__init__() (aslm.model.features.autofocus.autofocus method)": [[193, "aslm.model.features.autofocus.Autofocus.__init__"]], "get_autofocus_frame_num() (aslm.model.features.autofocus.autofocus method)": [[193, "aslm.model.features.autofocus.Autofocus.get_autofocus_frame_num"]], "get_steps() (aslm.model.features.autofocus.autofocus static method)": [[193, "aslm.model.features.autofocus.Autofocus.get_steps"]], "run() (aslm.model.features.autofocus.autofocus method)": [[193, "aslm.model.features.autofocus.Autofocus.run"]], "aslm.model.features.common_features": [[194, "module-aslm.model.features.common_features"]], "changeresolution (class in aslm.model.features.common_features)": [[195, "aslm.model.features.common_features.ChangeResolution"]], "__init__() (aslm.model.features.common_features.changeresolution method)": [[195, "aslm.model.features.common_features.ChangeResolution.__init__"]], "findtissuesimple2d (class in aslm.model.features.common_features)": [[196, "aslm.model.features.common_features.FindTissueSimple2D"]], "__init__() (aslm.model.features.common_features.findtissuesimple2d method)": [[196, "aslm.model.features.common_features.FindTissueSimple2D.__init__"]], "loopbycount (class in aslm.model.features.common_features)": [[197, "aslm.model.features.common_features.LoopByCount"]], "__init__() (aslm.model.features.common_features.loopbycount method)": [[197, "aslm.model.features.common_features.LoopByCount.__init__"]], "preparenextchannel (class in aslm.model.features.common_features)": [[198, "aslm.model.features.common_features.PrepareNextChannel"]], "__init__() (aslm.model.features.common_features.preparenextchannel method)": [[198, "aslm.model.features.common_features.PrepareNextChannel.__init__"]], "snap (class in aslm.model.features.common_features)": [[199, "aslm.model.features.common_features.Snap"]], "__init__() (aslm.model.features.common_features.snap method)": [[199, "aslm.model.features.common_features.Snap.__init__"]], "waittocontinue (class in aslm.model.features.common_features)": [[200, "aslm.model.features.common_features.WaitToContinue"]], "__init__() (aslm.model.features.common_features.waittocontinue method)": [[200, "aslm.model.features.common_features.WaitToContinue.__init__"]], "zstackacquisition (class in aslm.model.features.common_features)": [[201, "aslm.model.features.common_features.ZStackAcquisition"]], "__init__() (aslm.model.features.common_features.zstackacquisition method)": [[201, "aslm.model.features.common_features.ZStackAcquisition.__init__"]], "aslm.model.features.dummy_detective": [[202, "module-aslm.model.features.dummy_detective"]], "dummy_detective (class in aslm.model.features.dummy_detective)": [[203, "aslm.model.features.dummy_detective.Dummy_Detective"]], "__init__() (aslm.model.features.dummy_detective.dummy_detective method)": [[203, "aslm.model.features.dummy_detective.Dummy_Detective.__init__"]], "aslm.model.features.feature_container": [[204, "module-aslm.model.features.feature_container"]], "container (class in aslm.model.features.feature_container)": [[205, "aslm.model.features.feature_container.Container"]], "__init__() (aslm.model.features.feature_container.container method)": [[205, "aslm.model.features.feature_container.Container.__init__"]], "datacontainer (class in aslm.model.features.feature_container)": [[206, "aslm.model.features.feature_container.DataContainer"]], "__init__() (aslm.model.features.feature_container.datacontainer method)": [[206, "aslm.model.features.feature_container.DataContainer.__init__"]], "datanode (class in aslm.model.features.feature_container)": [[207, "aslm.model.features.feature_container.DataNode"]], "__init__() (aslm.model.features.feature_container.datanode method)": [[207, "aslm.model.features.feature_container.DataNode.__init__"]], "signalcontainer (class in aslm.model.features.feature_container)": [[208, "aslm.model.features.feature_container.SignalContainer"]], "__init__() (aslm.model.features.feature_container.signalcontainer method)": [[208, "aslm.model.features.feature_container.SignalContainer.__init__"]], "signalnode (class in aslm.model.features.feature_container)": [[209, "aslm.model.features.feature_container.SignalNode"]], "__init__() (aslm.model.features.feature_container.signalnode method)": [[209, "aslm.model.features.feature_container.SignalNode.__init__"]], "treenode (class in aslm.model.features.feature_container)": [[210, "aslm.model.features.feature_container.TreeNode"]], "__init__() (aslm.model.features.feature_container.treenode method)": [[210, "aslm.model.features.feature_container.TreeNode.__init__"]], "dummy_true() (in module aslm.model.features.feature_container)": [[211, "aslm.model.features.feature_container.dummy_True"]], "dummy_func() (in module aslm.model.features.feature_container)": [[212, "aslm.model.features.feature_container.dummy_func"]], "get_registered_funcs() (in module aslm.model.features.feature_container)": [[213, "aslm.model.features.feature_container.get_registered_funcs"]], "load_features() (in module aslm.model.features.feature_container)": [[214, "aslm.model.features.feature_container.load_features"]], "aslm.model.features.image_writer": [[215, "module-aslm.model.features.image_writer"]], "imagewriter (class in aslm.model.features.image_writer)": [[216, "aslm.model.features.image_writer.ImageWriter"]], "__init__() (aslm.model.features.image_writer.imagewriter method)": [[216, "aslm.model.features.image_writer.ImageWriter.__init__"]], "close() (aslm.model.features.image_writer.imagewriter method)": [[216, "aslm.model.features.image_writer.ImageWriter.close"]], "generate_image_name() (aslm.model.features.image_writer.imagewriter method)": [[216, "aslm.model.features.image_writer.ImageWriter.generate_image_name"]], "save_image() (aslm.model.features.image_writer.imagewriter method)": [[216, "aslm.model.features.image_writer.ImageWriter.save_image"]], "aslm.model.features.restful_features": [[217, "module-aslm.model.features.restful_features"]], "ilastiksegmentation (class in aslm.model.features.restful_features)": [[218, "aslm.model.features.restful_features.IlastikSegmentation"]], "__init__() (aslm.model.features.restful_features.ilastiksegmentation method)": [[218, "aslm.model.features.restful_features.IlastikSegmentation.__init__"]], "prepare_service() (in module aslm.model.features.restful_features)": [[219, "aslm.model.features.restful_features.prepare_service"]], "aslm.model.features.volume_search": [[220, "module-aslm.model.features.volume_search"]], "volumesearch (class in aslm.model.features.volume_search)": [[221, "aslm.model.features.volume_search.VolumeSearch"]], "__init__() (aslm.model.features.volume_search.volumesearch method)": [[221, "aslm.model.features.volume_search.VolumeSearch.__init__"]], "aslm.model.metadata_sources": [[222, "module-aslm.model.metadata_sources"]], "aslm.model.metadata_sources.bdv_metadata": [[223, "module-aslm.model.metadata_sources.bdv_metadata"]], "bigdataviewermetadata (class in aslm.model.metadata_sources.bdv_metadata)": [[224, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata"]], "__init__() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[224, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.__init__"]], "parse_bdv_xml() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[224, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.parse_bdv_xml"]], "shape (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata property)": [[224, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.shape"]], "stage_positions_to_affine_matrix() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[224, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.stage_positions_to_affine_matrix"]], "to_xml() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[224, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.to_xml"]], "voxel_size (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata property)": [[224, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.voxel_size"]], "write_xml() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[224, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.write_xml"]], "aslm.model.metadata_sources.metadata": [[225, "module-aslm.model.metadata_sources.metadata"]], "metadata (class in aslm.model.metadata_sources.metadata)": [[226, "aslm.model.metadata_sources.metadata.Metadata"]], "__init__() (aslm.model.metadata_sources.metadata.metadata method)": [[226, "aslm.model.metadata_sources.metadata.Metadata.__init__"]], "shape (aslm.model.metadata_sources.metadata.metadata property)": [[226, "aslm.model.metadata_sources.metadata.Metadata.shape"]], "voxel_size (aslm.model.metadata_sources.metadata.metadata property)": [[226, "aslm.model.metadata_sources.metadata.Metadata.voxel_size"]], "xmlmetadata (class in aslm.model.metadata_sources.metadata)": [[227, "aslm.model.metadata_sources.metadata.XMLMetadata"]], "__init__() (aslm.model.metadata_sources.metadata.xmlmetadata method)": [[227, "aslm.model.metadata_sources.metadata.XMLMetadata.__init__"]], "shape (aslm.model.metadata_sources.metadata.xmlmetadata property)": [[227, "aslm.model.metadata_sources.metadata.XMLMetadata.shape"]], "to_xml() (aslm.model.metadata_sources.metadata.xmlmetadata method)": [[227, "aslm.model.metadata_sources.metadata.XMLMetadata.to_xml"]], "voxel_size (aslm.model.metadata_sources.metadata.xmlmetadata property)": [[227, "aslm.model.metadata_sources.metadata.XMLMetadata.voxel_size"]], "write_xml() (aslm.model.metadata_sources.metadata.xmlmetadata method)": [[227, "aslm.model.metadata_sources.metadata.XMLMetadata.write_xml"]], "aslm.model.metadata_sources.ome_tiff_metadata": [[228, "module-aslm.model.metadata_sources.ome_tiff_metadata"]], "ometiffmetadata (class in aslm.model.metadata_sources.ome_tiff_metadata)": [[229, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata"]], "__init__() (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata method)": [[229, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.__init__"]], "ome_tiff_xml_dict() (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata method)": [[229, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.ome_tiff_xml_dict"]], "shape (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata property)": [[229, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.shape"]], "to_xml() (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata method)": [[229, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.to_xml"]], "voxel_size (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata property)": [[229, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.voxel_size"]], "write_xml() (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata method)": [[229, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.write_xml"]], "aslm.model.microscope": [[230, "module-aslm.model.microscope"]], "microscope (class in aslm.model.microscope)": [[231, "aslm.model.microscope.Microscope"]], "__init__() (aslm.model.microscope.microscope method)": [[231, "aslm.model.microscope.Microscope.__init__"]], "calculate_all_waveform() (aslm.model.microscope.microscope method)": [[231, "aslm.model.microscope.Microscope.calculate_all_waveform"]], "end_acquisition() (aslm.model.microscope.microscope method)": [[231, "aslm.model.microscope.Microscope.end_acquisition"]], "get_readout_time() (aslm.model.microscope.microscope method)": [[231, "aslm.model.microscope.Microscope.get_readout_time"]], "get_stage_position() (aslm.model.microscope.microscope method)": [[231, "aslm.model.microscope.Microscope.get_stage_position"]], "move_stage() (aslm.model.microscope.microscope method)": [[231, "aslm.model.microscope.Microscope.move_stage"]], "move_stage_offset() (aslm.model.microscope.microscope method)": [[231, "aslm.model.microscope.Microscope.move_stage_offset"]], "prepare_acquisition() (aslm.model.microscope.microscope method)": [[231, "aslm.model.microscope.Microscope.prepare_acquisition"]], "prepare_next_channel() (aslm.model.microscope.microscope method)": [[231, "aslm.model.microscope.Microscope.prepare_next_channel"]], "stop_stage() (aslm.model.microscope.microscope method)": [[231, "aslm.model.microscope.Microscope.stop_stage"]], "update_data_buffer() (aslm.model.microscope.microscope method)": [[231, "aslm.model.microscope.Microscope.update_data_buffer"]], "aslm.model.model": [[232, "module-aslm.model.model"]], "model (class in aslm.model.model)": [[233, "aslm.model.model.Model"]], "use_gpu (aslm.model.model.model attribute)": [[233, "aslm.model.model.Model.USE_GPU"]], "__init__() (aslm.model.model.model method)": [[233, "aslm.model.model.Model.__init__"]], "args (aslm.model.model.model attribute)": [[233, "aslm.model.model.Model.args"]], "change_resolution() (aslm.model.model.model method)": [[233, "aslm.model.model.Model.change_resolution"]], "configuration_path (aslm.model.model.model attribute)": [[233, "aslm.model.model.Model.configuration_path"]], "create_pipe() (aslm.model.model.model method)": [[233, "aslm.model.model.Model.create_pipe"], [233, "id0"]], "end_acquisition() (aslm.model.model.model method)": [[233, "aslm.model.model.Model.end_acquisition"], [233, "id1"]], "event_queue (aslm.model.model.model attribute)": [[233, "aslm.model.model.Model.event_queue"]], "experiment_path (aslm.model.model.model attribute)": [[233, "aslm.model.model.Model.experiment_path"]], "get_active_microscope() (aslm.model.model.model method)": [[233, "aslm.model.model.Model.get_active_microscope"]], "get_data_buffer() (aslm.model.model.model method)": [[233, "aslm.model.model.Model.get_data_buffer"], [233, "id2"]], "get_offset_variance_maps() (aslm.model.model.model method)": [[233, "aslm.model.model.Model.get_offset_variance_maps"]], "get_readout_time() (aslm.model.model.model method)": [[233, "aslm.model.model.Model.get_readout_time"]], "get_stage_position() (aslm.model.model.model method)": [[233, "aslm.model.model.Model.get_stage_position"]], "load_images() (aslm.model.model.model method)": [[233, "aslm.model.model.Model.load_images"]], "move_stage() (aslm.model.model.model method)": [[233, "aslm.model.model.Model.move_stage"], [233, "id3"]], "pause_data_thread() (aslm.model.model.model method)": [[233, "aslm.model.model.Model.pause_data_thread"]], "prepare_acquisition() (aslm.model.model.model method)": [[233, "aslm.model.model.Model.prepare_acquisition"], [233, "id4"]], "release_pipe() (aslm.model.model.model method)": [[233, "aslm.model.model.Model.release_pipe"], [233, "id5"]], "resume_data_thread() (aslm.model.model.model method)": [[233, "aslm.model.model.Model.resume_data_thread"]], "run_acquisition() (aslm.model.model.model method)": [[233, "aslm.model.model.Model.run_acquisition"]], "run_command() (aslm.model.model.model method)": [[233, "aslm.model.model.Model.run_command"], [233, "id6"]], "run_data_process() (aslm.model.model.model method)": [[233, "aslm.model.model.Model.run_data_process"], [233, "id7"]], "run_live_acquisition() (aslm.model.model.model method)": [[233, "aslm.model.model.Model.run_live_acquisition"], [233, "id8"]], "run_single_acquisition() (aslm.model.model.model method)": [[233, "aslm.model.model.Model.run_single_acquisition"]], "run_single_channel_acquisition() (aslm.model.model.model method)": [[233, "aslm.model.model.Model.run_single_channel_acquisition"]], "run_single_channel_acquisition_with_features() (aslm.model.model.model method)": [[233, "aslm.model.model.Model.run_single_channel_acquisition_with_features"]], "run_z_stack_acquisition() (aslm.model.model.model method)": [[233, "aslm.model.model.Model.run_z_stack_acquisition"]], "snap_image() (aslm.model.model.model method)": [[233, "aslm.model.model.Model.snap_image"], [233, "id9"]], "stop_stage() (aslm.model.model.model method)": [[233, "aslm.model.model.Model.stop_stage"]], "update_data_buffer() (aslm.model.model.model method)": [[233, "aslm.model.model.Model.update_data_buffer"], [233, "id10"]], "update_ilastik_setting() (aslm.model.model.model method)": [[233, "aslm.model.model.Model.update_ilastik_setting"]], "aslm.model.waveforms": [[234, "module-aslm.model.waveforms"]], "camera_exposure() (in module aslm.model.waveforms)": [[235, "aslm.model.waveforms.camera_exposure"]], "dc_value() (in module aslm.model.waveforms)": [[236, "aslm.model.waveforms.dc_value"]], "remote_focus_ramp() (in module aslm.model.waveforms)": [[237, "aslm.model.waveforms.remote_focus_ramp"]], "sawtooth() (in module aslm.model.waveforms)": [[238, "aslm.model.waveforms.sawtooth"]], "sine_wave() (in module aslm.model.waveforms)": [[239, "aslm.model.waveforms.sine_wave"]], "single_pulse() (in module aslm.model.waveforms)": [[240, "aslm.model.waveforms.single_pulse"]], "smooth_waveform() (in module aslm.model.waveforms)": [[241, "aslm.model.waveforms.smooth_waveform"]], "square() (in module aslm.model.waveforms)": [[242, "aslm.model.waveforms.square"]], "aslm.tools": [[243, "module-aslm.tools"]], "aslm.tools.beams": [[244, "module-aslm.tools.beams"]], "fit_gaussian_beam_error() (in module aslm.tools.beams)": [[245, "aslm.tools.beams.fit_gaussian_beam_error"]], "fit_gaussian_beam_mse() (in module aslm.tools.beams)": [[246, "aslm.tools.beams.fit_gaussian_beam_mse"]], "gaussian_beam() (in module aslm.tools.beams)": [[247, "aslm.tools.beams.gaussian_beam"]], "aslm.tools.common_dict_tools": [[248, "module-aslm.tools.common_dict_tools"]], "update_settings_common() (in module aslm.tools.common_dict_tools)": [[249, "aslm.tools.common_dict_tools.update_settings_common"]], "update_stage_dict() (in module aslm.tools.common_dict_tools)": [[250, "aslm.tools.common_dict_tools.update_stage_dict"]], "aslm.tools.common_functions": [[251, "module-aslm.tools.common_functions"]], "build_ref_name() (in module aslm.tools.common_functions)": [[252, "aslm.tools.common_functions.build_ref_name"]], "combine_funcs() (in module aslm.tools.common_functions)": [[253, "aslm.tools.common_functions.combine_funcs"]], "copy_proxy_object() (in module aslm.tools.common_functions)": [[254, "aslm.tools.common_functions.copy_proxy_object"]], "aslm.tools.decorators": [[255, "module-aslm.tools.decorators"]], "function_timer() (in module aslm.tools.decorators)": [[256, "aslm.tools.decorators.function_timer"]], "aslm.tools.file_functions": [[257, "module-aslm.tools.file_functions"]], "create_save_path() (in module aslm.tools.file_functions)": [[258, "aslm.tools.file_functions.create_save_path"]], "save_yaml_file() (in module aslm.tools.file_functions)": [[259, "aslm.tools.file_functions.save_yaml_file"]], "aslm.tools.image": [[260, "module-aslm.tools.image"]], "text_array() (in module aslm.tools.image)": [[261, "aslm.tools.image.text_array"]], "aslm.tools.image_loaders": [[262, "module-aslm.tools.image_loaders"]], "lazytiff (class in aslm.tools.image_loaders)": [[263, "aslm.tools.image_loaders.LazyTiff"]], "__init__() (aslm.tools.image_loaders.lazytiff method)": [[263, "aslm.tools.image_loaders.LazyTiff.__init__"]], "aslm.tools.main_functions": [[264, "module-aslm.tools.main_functions"]], "create_parser() (in module aslm.tools.main_functions)": [[265, "aslm.tools.main_functions.create_parser"]], "evaluate_parser_input_arguments() (in module aslm.tools.main_functions)": [[266, "aslm.tools.main_functions.evaluate_parser_input_arguments"]], "identify_gpu() (in module aslm.tools.main_functions)": [[267, "aslm.tools.main_functions.identify_gpu"]], "aslm.tools.multipos_table_tools": [[268, "module-aslm.tools.multipos_table_tools"]], "calc_num_tiles() (in module aslm.tools.multipos_table_tools)": [[269, "aslm.tools.multipos_table_tools.calc_num_tiles"]], "compute_tiles_from_bounding_box() (in module aslm.tools.multipos_table_tools)": [[270, "aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box"]], "sign() (in module aslm.tools.multipos_table_tools)": [[271, "aslm.tools.multipos_table_tools.sign"]], "update_table() (in module aslm.tools.multipos_table_tools)": [[272, "aslm.tools.multipos_table_tools.update_table"]], "aslm.tools.project_stats": [[273, "module-aslm.tools.project_stats"]], "countlines() (in module aslm.tools.project_stats)": [[274, "aslm.tools.project_stats.countlines"]], "aslm.tools.xml_tools": [[275, "module-aslm.tools.xml_tools"]], "dict_to_xml() (in module aslm.tools.xml_tools)": [[276, "aslm.tools.xml_tools.dict_to_xml"]], "parse_xml() (in module aslm.tools.xml_tools)": [[277, "aslm.tools.xml_tools.parse_xml"]], "aslm.view": [[278, "module-aslm.view"]], "aslm.view.main_window_content": [[279, "module-aslm.view.main_window_content"]], "aslm.view.main_window_content.acquire_bar_frame": [[280, "module-aslm.view.main_window_content.acquire_bar_frame"]], "aslm.view.main_window_content.channel_settings": [[281, "module-aslm.view.main_window_content.channel_settings"]], "aslm.view.main_window_content.channel_settings.channel_settings_frames": [[282, "module-aslm.view.main_window_content.channel_settings.channel_settings_frames"]], "aslm.view.main_window_content.stage_control": [[283, "module-aslm.view.main_window_content.stage_control"]], "aslm.view.main_window_content.stage_control.stage_control_frames": [[284, "module-aslm.view.main_window_content.stage_control.stage_control_frames"]], "aslm.view.menus": [[285, "module-aslm.view.menus"]]}})