Search.setIndex({"docnames": ["_autosummary/aslm.config", "_autosummary/aslm.config.config", "_autosummary/aslm.config.config.build_nested_dict", "_autosummary/aslm.config.config.get_aslm_path", "_autosummary/aslm.config.config.get_configuration_paths", "_autosummary/aslm.config.config.load_configs", "_autosummary/aslm.config.config.update_config_dict", "_autosummary/aslm.config.config.verify_experiment_config", "_autosummary/aslm.config.config.verify_waveform_constants", "_autosummary/aslm.controller", "_autosummary/aslm.controller.configuration_controller", "_autosummary/aslm.controller.configuration_controller.ConfigurationController", "_autosummary/aslm.controller.thread_pool", "_autosummary/aslm.controller.thread_pool.SelfLockThread", "_autosummary/aslm.controller.thread_pool.SynchronizedThreadPool", "_autosummary/aslm.controller.thread_pool.ThreadWaitlist", "_autosummary/aslm.log_files", "_autosummary/aslm.log_files.filters", "_autosummary/aslm.log_files.filters.NonPerfFilter", "_autosummary/aslm.log_files.filters.PerformanceFilter", "_autosummary/aslm.log_files.log_functions", "_autosummary/aslm.log_files.log_functions.find_filename", "_autosummary/aslm.log_files.log_functions.log_setup", "_autosummary/aslm.log_files.log_functions.main_process_listener", "_autosummary/aslm.log_files.log_functions.update_nested_dict", "_autosummary/aslm.model", "_autosummary/aslm.model.analysis", "_autosummary/aslm.model.analysis.boundary_detect", "_autosummary/aslm.model.analysis.boundary_detect.binary_detect", "_autosummary/aslm.model.analysis.boundary_detect.find_tissue_boundary_2d", "_autosummary/aslm.model.analysis.boundary_detect.has_tissue", "_autosummary/aslm.model.analysis.boundary_detect.map_boundary", "_autosummary/aslm.model.analysis.camera", "_autosummary/aslm.model.analysis.camera.compute_flatfield_map", "_autosummary/aslm.model.analysis.camera.compute_noise_sigma", "_autosummary/aslm.model.analysis.camera.compute_scmos_offset_and_variance_map", "_autosummary/aslm.model.analysis.camera.compute_signal_to_noise", "_autosummary/aslm.model.analysis.image_contrast", "_autosummary/aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy", "_autosummary/aslm.model.concurrency", "_autosummary/aslm.model.concurrency.concurrency_tools", "_autosummary/aslm.model.concurrency.concurrency_tools.CustodyThread", "_autosummary/aslm.model.concurrency.concurrency_tools.FancyThread", "_autosummary/aslm.model.concurrency.concurrency_tools.ObjectInSubprocess", "_autosummary/aslm.model.concurrency.concurrency_tools.PoliteThread", "_autosummary/aslm.model.concurrency.concurrency_tools.ResultThread", "_autosummary/aslm.model.concurrency.concurrency_tools.SharedNDArray", "_autosummary/aslm.model.data_sources", "_autosummary/aslm.model.data_sources.bdv_data_source", "_autosummary/aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource", "_autosummary/aslm.model.data_sources.data_source", "_autosummary/aslm.model.data_sources.data_source.DataSource", "_autosummary/aslm.model.data_sources.get_data_source", "_autosummary/aslm.model.data_sources.tiff_data_source", "_autosummary/aslm.model.data_sources.tiff_data_source.TiffDataSource", "_autosummary/aslm.model.device_startup_functions", "_autosummary/aslm.model.device_startup_functions.DummyDeviceConnection", "_autosummary/aslm.model.device_startup_functions.auto_redial", "_autosummary/aslm.model.device_startup_functions.device_not_found", "_autosummary/aslm.model.device_startup_functions.load_camera_connection", "_autosummary/aslm.model.device_startup_functions.load_devices", "_autosummary/aslm.model.device_startup_functions.load_filter_wheel_connection", "_autosummary/aslm.model.device_startup_functions.load_stages", "_autosummary/aslm.model.device_startup_functions.load_zoom_connection", "_autosummary/aslm.model.device_startup_functions.start_camera", "_autosummary/aslm.model.device_startup_functions.start_daq", "_autosummary/aslm.model.device_startup_functions.start_filter_wheel", "_autosummary/aslm.model.device_startup_functions.start_galvo", "_autosummary/aslm.model.device_startup_functions.start_lasers", "_autosummary/aslm.model.device_startup_functions.start_remote_focus_device", "_autosummary/aslm.model.device_startup_functions.start_shutter", "_autosummary/aslm.model.device_startup_functions.start_stage", "_autosummary/aslm.model.device_startup_functions.start_zoom", "_autosummary/aslm.model.devices", "_autosummary/aslm.model.devices.APIs", "_autosummary/aslm.model.devices.APIs.coherent", "_autosummary/aslm.model.devices.APIs.dynamixel", "_autosummary/aslm.model.devices.APIs.dynamixel.dynamixel_functions", "_autosummary/aslm.model.devices.APIs.dynamixel.dynamixel_functions.create_mock_dxl_device", "_autosummary/aslm.model.devices.APIs.omicron", "_autosummary/aslm.model.devices.camera", "_autosummary/aslm.model.devices.camera.camera_base", "_autosummary/aslm.model.devices.camera.camera_base.CameraBase", "_autosummary/aslm.model.devices.camera.camera_hamamatsu", "_autosummary/aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca", "_autosummary/aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning", "_autosummary/aslm.model.devices.camera.camera_photometrics", "_autosummary/aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix", "_autosummary/aslm.model.devices.camera.camera_synthetic", "_autosummary/aslm.model.devices.camera.camera_synthetic.SyntheticCamera", "_autosummary/aslm.model.devices.camera.camera_synthetic.SyntheticCameraController", "_autosummary/aslm.model.devices.daq", "_autosummary/aslm.model.devices.daq.daq_base", "_autosummary/aslm.model.devices.daq.daq_base.DAQBase", "_autosummary/aslm.model.devices.daq.daq_synthetic", "_autosummary/aslm.model.devices.daq.daq_synthetic.SyntheticDAQ", "_autosummary/aslm.model.devices.filter_wheel", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_asi", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_asi.build_filter_wheel_connection", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_base", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_synthetic", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel", "_autosummary/aslm.model.devices.galvo", "_autosummary/aslm.model.devices.galvo.galvo_base", "_autosummary/aslm.model.devices.galvo.galvo_base.GalvoBase", "_autosummary/aslm.model.devices.galvo.galvo_synthetic", "_autosummary/aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo", "_autosummary/aslm.model.devices.lasers", "_autosummary/aslm.model.devices.lasers.laser_base", "_autosummary/aslm.model.devices.lasers.laser_base.LaserBase", "_autosummary/aslm.model.devices.lasers.laser_synthetic", "_autosummary/aslm.model.devices.lasers.laser_synthetic.SyntheticLaser", "_autosummary/aslm.model.devices.objectives", "_autosummary/aslm.model.devices.objectives.Objective", "_autosummary/aslm.model.devices.remote_focus", "_autosummary/aslm.model.devices.remote_focus.remote_focus_base", "_autosummary/aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase", "_autosummary/aslm.model.devices.remote_focus.remote_focus_synthetic", "_autosummary/aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus", "_autosummary/aslm.model.devices.shutter", "_autosummary/aslm.model.devices.shutter.laser_shutter_base", "_autosummary/aslm.model.devices.shutter.laser_shutter_base.ShutterBase", "_autosummary/aslm.model.devices.shutter.laser_shutter_synthetic", "_autosummary/aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter", "_autosummary/aslm.model.devices.stages", "_autosummary/aslm.model.devices.stages.stage_asi", "_autosummary/aslm.model.devices.stages.stage_asi.ASIStage", "_autosummary/aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection", "_autosummary/aslm.model.devices.stages.stage_base", "_autosummary/aslm.model.devices.stages.stage_base.StageBase", "_autosummary/aslm.model.devices.stages.stage_galvo", "_autosummary/aslm.model.devices.stages.stage_galvo.GalvoNIStage", "_autosummary/aslm.model.devices.stages.stage_mcl", "_autosummary/aslm.model.devices.stages.stage_mcl.MCLStage", "_autosummary/aslm.model.devices.stages.stage_mcl.build_MCLStage_connection", "_autosummary/aslm.model.devices.stages.stage_pi", "_autosummary/aslm.model.devices.stages.stage_pi.PIStage", "_autosummary/aslm.model.devices.stages.stage_pi.build_PIStage_connection", "_autosummary/aslm.model.devices.stages.stage_sutter", "_autosummary/aslm.model.devices.stages.stage_sutter.SutterStage", "_autosummary/aslm.model.devices.stages.stage_sutter.build_MP285_connection", "_autosummary/aslm.model.devices.stages.stage_synthetic", "_autosummary/aslm.model.devices.stages.stage_synthetic.SyntheticStage", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection", "_autosummary/aslm.model.devices.zoom", "_autosummary/aslm.model.devices.zoom.zoom_base", "_autosummary/aslm.model.devices.zoom.zoom_base.ZoomBase", "_autosummary/aslm.model.devices.zoom.zoom_dynamixel", "_autosummary/aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom", "_autosummary/aslm.model.devices.zoom.zoom_dynamixel.build_dynamixel_zoom_connection", "_autosummary/aslm.model.devices.zoom.zoom_synthetic", "_autosummary/aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom", "_autosummary/aslm.model.dummy", "_autosummary/aslm.model.dummy.DummyController", "_autosummary/aslm.model.dummy.DummyDevice", "_autosummary/aslm.model.dummy.DummyMicroscope", "_autosummary/aslm.model.dummy.DummyModel", "_autosummary/aslm.model.features", "_autosummary/aslm.model.features.auto_tile_scan", "_autosummary/aslm.model.features.auto_tile_scan.CalculateFocusRange", "_autosummary/aslm.model.features.autofocus", "_autosummary/aslm.model.features.autofocus.Autofocus", "_autosummary/aslm.model.features.autofocus.power_tent", "_autosummary/aslm.model.features.common_features", "_autosummary/aslm.model.features.common_features.ChangeResolution", "_autosummary/aslm.model.features.common_features.ConProAcquisition", "_autosummary/aslm.model.features.common_features.FindTissueSimple2D", "_autosummary/aslm.model.features.common_features.LoopByCount", "_autosummary/aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable", "_autosummary/aslm.model.features.common_features.PrepareNextChannel", "_autosummary/aslm.model.features.common_features.Snap", "_autosummary/aslm.model.features.common_features.StackPause", "_autosummary/aslm.model.features.common_features.WaitToContinue", "_autosummary/aslm.model.features.common_features.ZStackAcquisition", "_autosummary/aslm.model.features.constant_velocity_acquisition", "_autosummary/aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition", "_autosummary/aslm.model.features.dummy_detective", "_autosummary/aslm.model.features.dummy_detective.Dummy_Detective", "_autosummary/aslm.model.features.feature_container", "_autosummary/aslm.model.features.feature_container.Container", "_autosummary/aslm.model.features.feature_container.DataContainer", "_autosummary/aslm.model.features.feature_container.DataNode", "_autosummary/aslm.model.features.feature_container.SignalContainer", "_autosummary/aslm.model.features.feature_container.SignalNode", "_autosummary/aslm.model.features.feature_container.TreeNode", "_autosummary/aslm.model.features.feature_container.dummy_True", "_autosummary/aslm.model.features.feature_container.dummy_func", "_autosummary/aslm.model.features.feature_container.get_registered_funcs", "_autosummary/aslm.model.features.feature_container.load_features", "_autosummary/aslm.model.features.feature_related_functions", "_autosummary/aslm.model.features.feature_related_functions.SharedList", "_autosummary/aslm.model.features.feature_related_functions.convert_feature_list_to_str", "_autosummary/aslm.model.features.feature_related_functions.convert_str_to_feature_list", "_autosummary/aslm.model.features.feature_related_functions.load_dynamic_parameter_functions", "_autosummary/aslm.model.features.image_writer", "_autosummary/aslm.model.features.image_writer.ImageWriter", "_autosummary/aslm.model.features.remove_empty_tiles", "_autosummary/aslm.model.features.remove_empty_tiles.DetectTissueInStack", "_autosummary/aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord", "_autosummary/aslm.model.features.remove_empty_tiles.RemoveEmptyPositions", "_autosummary/aslm.model.features.remove_empty_tiles.detect_tissue", "_autosummary/aslm.model.features.remove_empty_tiles.detect_tissue2", "_autosummary/aslm.model.features.restful_features", "_autosummary/aslm.model.features.restful_features.IlastikSegmentation", "_autosummary/aslm.model.features.restful_features.prepare_service", "_autosummary/aslm.model.features.volume_search", "_autosummary/aslm.model.features.volume_search.VolumeSearch", "_autosummary/aslm.model.features.volume_search.draw_box", "_autosummary/aslm.model.metadata_sources", "_autosummary/aslm.model.metadata_sources.bdv_metadata", "_autosummary/aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata", "_autosummary/aslm.model.metadata_sources.metadata", "_autosummary/aslm.model.metadata_sources.metadata.Metadata", "_autosummary/aslm.model.metadata_sources.metadata.XMLMetadata", "_autosummary/aslm.model.metadata_sources.ome_tiff_metadata", "_autosummary/aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata", "_autosummary/aslm.model.microscope", "_autosummary/aslm.model.microscope.Microscope", "_autosummary/aslm.model.model", "_autosummary/aslm.model.model.Model", "_autosummary/aslm.model.waveforms", "_autosummary/aslm.model.waveforms.camera_exposure", "_autosummary/aslm.model.waveforms.dc_value", "_autosummary/aslm.model.waveforms.remote_focus_ramp", "_autosummary/aslm.model.waveforms.sawtooth", "_autosummary/aslm.model.waveforms.sine_wave", "_autosummary/aslm.model.waveforms.single_pulse", "_autosummary/aslm.model.waveforms.smooth_waveform", "_autosummary/aslm.model.waveforms.square", "_autosummary/aslm.tools", "_autosummary/aslm.tools.beams", "_autosummary/aslm.tools.beams.fit_gaussian_beam_error", "_autosummary/aslm.tools.beams.fit_gaussian_beam_mse", "_autosummary/aslm.tools.beams.gaussian_beam", "_autosummary/aslm.tools.common_dict_tools", "_autosummary/aslm.tools.common_dict_tools.update_stage_dict", "_autosummary/aslm.tools.common_functions", "_autosummary/aslm.tools.common_functions.VariableWithLock", "_autosummary/aslm.tools.common_functions.build_ref_name", "_autosummary/aslm.tools.common_functions.combine_funcs", "_autosummary/aslm.tools.common_functions.copy_proxy_object", "_autosummary/aslm.tools.common_functions.load_module_from_file", "_autosummary/aslm.tools.decorators", "_autosummary/aslm.tools.decorators.FeatureList", "_autosummary/aslm.tools.decorators.function_timer", "_autosummary/aslm.tools.file_functions", "_autosummary/aslm.tools.file_functions.create_save_path", "_autosummary/aslm.tools.file_functions.delete_folder", "_autosummary/aslm.tools.file_functions.load_yaml_file", "_autosummary/aslm.tools.file_functions.save_yaml_file", "_autosummary/aslm.tools.image", "_autosummary/aslm.tools.image.create_arrow_image", "_autosummary/aslm.tools.image.text_array", "_autosummary/aslm.tools.image_loaders", "_autosummary/aslm.tools.image_loaders.LazyTiff", "_autosummary/aslm.tools.main_functions", "_autosummary/aslm.tools.main_functions.create_parser", "_autosummary/aslm.tools.main_functions.evaluate_parser_input_arguments", "_autosummary/aslm.tools.multipos_table_tools", "_autosummary/aslm.tools.multipos_table_tools.calc_num_tiles", "_autosummary/aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box", "_autosummary/aslm.tools.multipos_table_tools.sign", "_autosummary/aslm.tools.multipos_table_tools.update_table", "_autosummary/aslm.tools.project_stats", "_autosummary/aslm.tools.project_stats.countlines", "_autosummary/aslm.tools.sdf", "_autosummary/aslm.tools.sdf.box", "_autosummary/aslm.tools.sdf.sphere", "_autosummary/aslm.tools.sdf.volume_from_sdf", "_autosummary/aslm.tools.waveform_template_funcs", "_autosummary/aslm.tools.waveform_template_funcs.get_waveform_template_parameters", "_autosummary/aslm.tools.xml_tools", "_autosummary/aslm.tools.xml_tools.dict_to_xml", "_autosummary/aslm.tools.xml_tools.parse_xml", "_autosummary/aslm.view", "_autosummary/aslm.view.custom_widgets", "_autosummary/aslm.view.main_window_content", "_autosummary/aslm.view.popups", "_templates/custom_class", "_templates/custom_module", "api", "config", "contributing/contributing_guidelines", "contributing/contributing_hardware", "contributing/contributing_home", "contributing/contributing_model", "contributing/sphinx_numpydoc", "feature_container/feature_container_home", "implementations", "index", "software_configuration", "software_installation", "supported_hardware"], "filenames": ["_autosummary/aslm.config.rst", "_autosummary/aslm.config.config.rst", "_autosummary/aslm.config.config.build_nested_dict.rst", "_autosummary/aslm.config.config.get_aslm_path.rst", "_autosummary/aslm.config.config.get_configuration_paths.rst", "_autosummary/aslm.config.config.load_configs.rst", "_autosummary/aslm.config.config.update_config_dict.rst", "_autosummary/aslm.config.config.verify_experiment_config.rst", "_autosummary/aslm.config.config.verify_waveform_constants.rst", "_autosummary/aslm.controller.rst", "_autosummary/aslm.controller.configuration_controller.rst", "_autosummary/aslm.controller.configuration_controller.ConfigurationController.rst", "_autosummary/aslm.controller.thread_pool.rst", "_autosummary/aslm.controller.thread_pool.SelfLockThread.rst", "_autosummary/aslm.controller.thread_pool.SynchronizedThreadPool.rst", "_autosummary/aslm.controller.thread_pool.ThreadWaitlist.rst", "_autosummary/aslm.log_files.rst", "_autosummary/aslm.log_files.filters.rst", "_autosummary/aslm.log_files.filters.NonPerfFilter.rst", "_autosummary/aslm.log_files.filters.PerformanceFilter.rst", "_autosummary/aslm.log_files.log_functions.rst", "_autosummary/aslm.log_files.log_functions.find_filename.rst", "_autosummary/aslm.log_files.log_functions.log_setup.rst", "_autosummary/aslm.log_files.log_functions.main_process_listener.rst", "_autosummary/aslm.log_files.log_functions.update_nested_dict.rst", "_autosummary/aslm.model.rst", "_autosummary/aslm.model.analysis.rst", "_autosummary/aslm.model.analysis.boundary_detect.rst", "_autosummary/aslm.model.analysis.boundary_detect.binary_detect.rst", "_autosummary/aslm.model.analysis.boundary_detect.find_tissue_boundary_2d.rst", "_autosummary/aslm.model.analysis.boundary_detect.has_tissue.rst", "_autosummary/aslm.model.analysis.boundary_detect.map_boundary.rst", "_autosummary/aslm.model.analysis.camera.rst", "_autosummary/aslm.model.analysis.camera.compute_flatfield_map.rst", "_autosummary/aslm.model.analysis.camera.compute_noise_sigma.rst", "_autosummary/aslm.model.analysis.camera.compute_scmos_offset_and_variance_map.rst", "_autosummary/aslm.model.analysis.camera.compute_signal_to_noise.rst", "_autosummary/aslm.model.analysis.image_contrast.rst", "_autosummary/aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy.rst", "_autosummary/aslm.model.concurrency.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.CustodyThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.FancyThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.ObjectInSubprocess.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.PoliteThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.ResultThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.SharedNDArray.rst", "_autosummary/aslm.model.data_sources.rst", "_autosummary/aslm.model.data_sources.bdv_data_source.rst", "_autosummary/aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.rst", "_autosummary/aslm.model.data_sources.data_source.rst", "_autosummary/aslm.model.data_sources.data_source.DataSource.rst", "_autosummary/aslm.model.data_sources.get_data_source.rst", "_autosummary/aslm.model.data_sources.tiff_data_source.rst", "_autosummary/aslm.model.data_sources.tiff_data_source.TiffDataSource.rst", "_autosummary/aslm.model.device_startup_functions.rst", "_autosummary/aslm.model.device_startup_functions.DummyDeviceConnection.rst", "_autosummary/aslm.model.device_startup_functions.auto_redial.rst", "_autosummary/aslm.model.device_startup_functions.device_not_found.rst", "_autosummary/aslm.model.device_startup_functions.load_camera_connection.rst", "_autosummary/aslm.model.device_startup_functions.load_devices.rst", "_autosummary/aslm.model.device_startup_functions.load_filter_wheel_connection.rst", "_autosummary/aslm.model.device_startup_functions.load_stages.rst", "_autosummary/aslm.model.device_startup_functions.load_zoom_connection.rst", "_autosummary/aslm.model.device_startup_functions.start_camera.rst", "_autosummary/aslm.model.device_startup_functions.start_daq.rst", "_autosummary/aslm.model.device_startup_functions.start_filter_wheel.rst", "_autosummary/aslm.model.device_startup_functions.start_galvo.rst", "_autosummary/aslm.model.device_startup_functions.start_lasers.rst", "_autosummary/aslm.model.device_startup_functions.start_remote_focus_device.rst", "_autosummary/aslm.model.device_startup_functions.start_shutter.rst", "_autosummary/aslm.model.device_startup_functions.start_stage.rst", "_autosummary/aslm.model.device_startup_functions.start_zoom.rst", "_autosummary/aslm.model.devices.rst", "_autosummary/aslm.model.devices.APIs.rst", "_autosummary/aslm.model.devices.APIs.coherent.rst", "_autosummary/aslm.model.devices.APIs.dynamixel.rst", "_autosummary/aslm.model.devices.APIs.dynamixel.dynamixel_functions.rst", "_autosummary/aslm.model.devices.APIs.dynamixel.dynamixel_functions.create_mock_dxl_device.rst", "_autosummary/aslm.model.devices.APIs.omicron.rst", "_autosummary/aslm.model.devices.camera.rst", "_autosummary/aslm.model.devices.camera.camera_base.rst", "_autosummary/aslm.model.devices.camera.camera_base.CameraBase.rst", "_autosummary/aslm.model.devices.camera.camera_hamamatsu.rst", "_autosummary/aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.rst", "_autosummary/aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.rst", "_autosummary/aslm.model.devices.camera.camera_photometrics.rst", "_autosummary/aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.rst", "_autosummary/aslm.model.devices.camera.camera_synthetic.rst", "_autosummary/aslm.model.devices.camera.camera_synthetic.SyntheticCamera.rst", "_autosummary/aslm.model.devices.camera.camera_synthetic.SyntheticCameraController.rst", "_autosummary/aslm.model.devices.daq.rst", "_autosummary/aslm.model.devices.daq.daq_base.rst", "_autosummary/aslm.model.devices.daq.daq_base.DAQBase.rst", "_autosummary/aslm.model.devices.daq.daq_synthetic.rst", "_autosummary/aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.rst", "_autosummary/aslm.model.devices.filter_wheel.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_asi.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_asi.build_filter_wheel_connection.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_base.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_synthetic.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.rst", "_autosummary/aslm.model.devices.galvo.rst", "_autosummary/aslm.model.devices.galvo.galvo_base.rst", "_autosummary/aslm.model.devices.galvo.galvo_base.GalvoBase.rst", "_autosummary/aslm.model.devices.galvo.galvo_synthetic.rst", "_autosummary/aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.rst", "_autosummary/aslm.model.devices.lasers.rst", "_autosummary/aslm.model.devices.lasers.laser_base.rst", "_autosummary/aslm.model.devices.lasers.laser_base.LaserBase.rst", "_autosummary/aslm.model.devices.lasers.laser_synthetic.rst", "_autosummary/aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.rst", "_autosummary/aslm.model.devices.objectives.rst", "_autosummary/aslm.model.devices.objectives.Objective.rst", "_autosummary/aslm.model.devices.remote_focus.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_base.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_synthetic.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.rst", "_autosummary/aslm.model.devices.shutter.rst", "_autosummary/aslm.model.devices.shutter.laser_shutter_base.rst", "_autosummary/aslm.model.devices.shutter.laser_shutter_base.ShutterBase.rst", "_autosummary/aslm.model.devices.shutter.laser_shutter_synthetic.rst", "_autosummary/aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.rst", "_autosummary/aslm.model.devices.stages.rst", "_autosummary/aslm.model.devices.stages.stage_asi.rst", "_autosummary/aslm.model.devices.stages.stage_asi.ASIStage.rst", "_autosummary/aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection.rst", "_autosummary/aslm.model.devices.stages.stage_base.rst", "_autosummary/aslm.model.devices.stages.stage_base.StageBase.rst", "_autosummary/aslm.model.devices.stages.stage_galvo.rst", "_autosummary/aslm.model.devices.stages.stage_galvo.GalvoNIStage.rst", "_autosummary/aslm.model.devices.stages.stage_mcl.rst", "_autosummary/aslm.model.devices.stages.stage_mcl.MCLStage.rst", "_autosummary/aslm.model.devices.stages.stage_mcl.build_MCLStage_connection.rst", "_autosummary/aslm.model.devices.stages.stage_pi.rst", "_autosummary/aslm.model.devices.stages.stage_pi.PIStage.rst", "_autosummary/aslm.model.devices.stages.stage_pi.build_PIStage_connection.rst", "_autosummary/aslm.model.devices.stages.stage_sutter.rst", "_autosummary/aslm.model.devices.stages.stage_sutter.SutterStage.rst", "_autosummary/aslm.model.devices.stages.stage_sutter.build_MP285_connection.rst", "_autosummary/aslm.model.devices.stages.stage_synthetic.rst", "_autosummary/aslm.model.devices.stages.stage_synthetic.SyntheticStage.rst", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.rst", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.rst", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection.rst", "_autosummary/aslm.model.devices.zoom.rst", "_autosummary/aslm.model.devices.zoom.zoom_base.rst", "_autosummary/aslm.model.devices.zoom.zoom_base.ZoomBase.rst", "_autosummary/aslm.model.devices.zoom.zoom_dynamixel.rst", "_autosummary/aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.rst", "_autosummary/aslm.model.devices.zoom.zoom_dynamixel.build_dynamixel_zoom_connection.rst", "_autosummary/aslm.model.devices.zoom.zoom_synthetic.rst", "_autosummary/aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.rst", "_autosummary/aslm.model.dummy.rst", "_autosummary/aslm.model.dummy.DummyController.rst", "_autosummary/aslm.model.dummy.DummyDevice.rst", "_autosummary/aslm.model.dummy.DummyMicroscope.rst", "_autosummary/aslm.model.dummy.DummyModel.rst", "_autosummary/aslm.model.features.rst", "_autosummary/aslm.model.features.auto_tile_scan.rst", "_autosummary/aslm.model.features.auto_tile_scan.CalculateFocusRange.rst", "_autosummary/aslm.model.features.autofocus.rst", "_autosummary/aslm.model.features.autofocus.Autofocus.rst", "_autosummary/aslm.model.features.autofocus.power_tent.rst", "_autosummary/aslm.model.features.common_features.rst", "_autosummary/aslm.model.features.common_features.ChangeResolution.rst", "_autosummary/aslm.model.features.common_features.ConProAcquisition.rst", "_autosummary/aslm.model.features.common_features.FindTissueSimple2D.rst", "_autosummary/aslm.model.features.common_features.LoopByCount.rst", "_autosummary/aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable.rst", "_autosummary/aslm.model.features.common_features.PrepareNextChannel.rst", "_autosummary/aslm.model.features.common_features.Snap.rst", "_autosummary/aslm.model.features.common_features.StackPause.rst", "_autosummary/aslm.model.features.common_features.WaitToContinue.rst", "_autosummary/aslm.model.features.common_features.ZStackAcquisition.rst", "_autosummary/aslm.model.features.constant_velocity_acquisition.rst", "_autosummary/aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition.rst", "_autosummary/aslm.model.features.dummy_detective.rst", "_autosummary/aslm.model.features.dummy_detective.Dummy_Detective.rst", "_autosummary/aslm.model.features.feature_container.rst", "_autosummary/aslm.model.features.feature_container.Container.rst", "_autosummary/aslm.model.features.feature_container.DataContainer.rst", "_autosummary/aslm.model.features.feature_container.DataNode.rst", "_autosummary/aslm.model.features.feature_container.SignalContainer.rst", "_autosummary/aslm.model.features.feature_container.SignalNode.rst", "_autosummary/aslm.model.features.feature_container.TreeNode.rst", "_autosummary/aslm.model.features.feature_container.dummy_True.rst", "_autosummary/aslm.model.features.feature_container.dummy_func.rst", "_autosummary/aslm.model.features.feature_container.get_registered_funcs.rst", "_autosummary/aslm.model.features.feature_container.load_features.rst", "_autosummary/aslm.model.features.feature_related_functions.rst", "_autosummary/aslm.model.features.feature_related_functions.SharedList.rst", "_autosummary/aslm.model.features.feature_related_functions.convert_feature_list_to_str.rst", "_autosummary/aslm.model.features.feature_related_functions.convert_str_to_feature_list.rst", "_autosummary/aslm.model.features.feature_related_functions.load_dynamic_parameter_functions.rst", "_autosummary/aslm.model.features.image_writer.rst", "_autosummary/aslm.model.features.image_writer.ImageWriter.rst", "_autosummary/aslm.model.features.remove_empty_tiles.rst", "_autosummary/aslm.model.features.remove_empty_tiles.DetectTissueInStack.rst", "_autosummary/aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.rst", "_autosummary/aslm.model.features.remove_empty_tiles.RemoveEmptyPositions.rst", "_autosummary/aslm.model.features.remove_empty_tiles.detect_tissue.rst", "_autosummary/aslm.model.features.remove_empty_tiles.detect_tissue2.rst", "_autosummary/aslm.model.features.restful_features.rst", "_autosummary/aslm.model.features.restful_features.IlastikSegmentation.rst", "_autosummary/aslm.model.features.restful_features.prepare_service.rst", "_autosummary/aslm.model.features.volume_search.rst", "_autosummary/aslm.model.features.volume_search.VolumeSearch.rst", "_autosummary/aslm.model.features.volume_search.draw_box.rst", "_autosummary/aslm.model.metadata_sources.rst", "_autosummary/aslm.model.metadata_sources.bdv_metadata.rst", "_autosummary/aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.rst", "_autosummary/aslm.model.metadata_sources.metadata.rst", "_autosummary/aslm.model.metadata_sources.metadata.Metadata.rst", "_autosummary/aslm.model.metadata_sources.metadata.XMLMetadata.rst", "_autosummary/aslm.model.metadata_sources.ome_tiff_metadata.rst", "_autosummary/aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.rst", "_autosummary/aslm.model.microscope.rst", "_autosummary/aslm.model.microscope.Microscope.rst", "_autosummary/aslm.model.model.rst", "_autosummary/aslm.model.model.Model.rst", "_autosummary/aslm.model.waveforms.rst", "_autosummary/aslm.model.waveforms.camera_exposure.rst", "_autosummary/aslm.model.waveforms.dc_value.rst", "_autosummary/aslm.model.waveforms.remote_focus_ramp.rst", "_autosummary/aslm.model.waveforms.sawtooth.rst", "_autosummary/aslm.model.waveforms.sine_wave.rst", "_autosummary/aslm.model.waveforms.single_pulse.rst", "_autosummary/aslm.model.waveforms.smooth_waveform.rst", "_autosummary/aslm.model.waveforms.square.rst", "_autosummary/aslm.tools.rst", "_autosummary/aslm.tools.beams.rst", "_autosummary/aslm.tools.beams.fit_gaussian_beam_error.rst", "_autosummary/aslm.tools.beams.fit_gaussian_beam_mse.rst", "_autosummary/aslm.tools.beams.gaussian_beam.rst", "_autosummary/aslm.tools.common_dict_tools.rst", "_autosummary/aslm.tools.common_dict_tools.update_stage_dict.rst", "_autosummary/aslm.tools.common_functions.rst", "_autosummary/aslm.tools.common_functions.VariableWithLock.rst", "_autosummary/aslm.tools.common_functions.build_ref_name.rst", "_autosummary/aslm.tools.common_functions.combine_funcs.rst", "_autosummary/aslm.tools.common_functions.copy_proxy_object.rst", "_autosummary/aslm.tools.common_functions.load_module_from_file.rst", "_autosummary/aslm.tools.decorators.rst", "_autosummary/aslm.tools.decorators.FeatureList.rst", "_autosummary/aslm.tools.decorators.function_timer.rst", "_autosummary/aslm.tools.file_functions.rst", "_autosummary/aslm.tools.file_functions.create_save_path.rst", "_autosummary/aslm.tools.file_functions.delete_folder.rst", "_autosummary/aslm.tools.file_functions.load_yaml_file.rst", "_autosummary/aslm.tools.file_functions.save_yaml_file.rst", "_autosummary/aslm.tools.image.rst", "_autosummary/aslm.tools.image.create_arrow_image.rst", "_autosummary/aslm.tools.image.text_array.rst", "_autosummary/aslm.tools.image_loaders.rst", "_autosummary/aslm.tools.image_loaders.LazyTiff.rst", "_autosummary/aslm.tools.main_functions.rst", "_autosummary/aslm.tools.main_functions.create_parser.rst", "_autosummary/aslm.tools.main_functions.evaluate_parser_input_arguments.rst", "_autosummary/aslm.tools.multipos_table_tools.rst", "_autosummary/aslm.tools.multipos_table_tools.calc_num_tiles.rst", "_autosummary/aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box.rst", "_autosummary/aslm.tools.multipos_table_tools.sign.rst", "_autosummary/aslm.tools.multipos_table_tools.update_table.rst", "_autosummary/aslm.tools.project_stats.rst", "_autosummary/aslm.tools.project_stats.countlines.rst", "_autosummary/aslm.tools.sdf.rst", "_autosummary/aslm.tools.sdf.box.rst", "_autosummary/aslm.tools.sdf.sphere.rst", "_autosummary/aslm.tools.sdf.volume_from_sdf.rst", "_autosummary/aslm.tools.waveform_template_funcs.rst", "_autosummary/aslm.tools.waveform_template_funcs.get_waveform_template_parameters.rst", "_autosummary/aslm.tools.xml_tools.rst", "_autosummary/aslm.tools.xml_tools.dict_to_xml.rst", "_autosummary/aslm.tools.xml_tools.parse_xml.rst", "_autosummary/aslm.view.rst", "_autosummary/aslm.view.custom_widgets.rst", "_autosummary/aslm.view.main_window_content.rst", "_autosummary/aslm.view.popups.rst", "_templates/custom_class.rst", "_templates/custom_module.rst", "api.rst", "config.rst", "contributing/contributing_guidelines.rst", "contributing/contributing_hardware.rst", "contributing/contributing_home.rst", "contributing/contributing_model.rst", "contributing/sphinx_numpydoc.rst", "feature_container/feature_container_home.rst", "implementations.rst", "index.rst", "software_configuration.rst", "software_installation.rst", "supported_hardware.rst"], "titles": ["aslm.config", "aslm.config.config", "aslm.config.config.build_nested_dict", "aslm.config.config.get_aslm_path", "aslm.config.config.get_configuration_paths", "aslm.config.config.load_configs", "aslm.config.config.update_config_dict", "aslm.config.config.verify_experiment_config", "aslm.config.config.verify_waveform_constants", "aslm.controller", "aslm.controller.configuration_controller", "aslm.controller.configuration_controller.ConfigurationController", "aslm.controller.thread_pool", "aslm.controller.thread_pool.SelfLockThread", "aslm.controller.thread_pool.SynchronizedThreadPool", "aslm.controller.thread_pool.ThreadWaitlist", "aslm.log_files", "aslm.log_files.filters", "aslm.log_files.filters.NonPerfFilter", "aslm.log_files.filters.PerformanceFilter", "aslm.log_files.log_functions", "aslm.log_files.log_functions.find_filename", "aslm.log_files.log_functions.log_setup", "aslm.log_files.log_functions.main_process_listener", "aslm.log_files.log_functions.update_nested_dict", "aslm.model", "aslm.model.analysis", "aslm.model.analysis.boundary_detect", "aslm.model.analysis.boundary_detect.binary_detect", "aslm.model.analysis.boundary_detect.find_tissue_boundary_2d", "aslm.model.analysis.boundary_detect.has_tissue", "aslm.model.analysis.boundary_detect.map_boundary", "aslm.model.analysis.camera", "aslm.model.analysis.camera.compute_flatfield_map", "aslm.model.analysis.camera.compute_noise_sigma", "aslm.model.analysis.camera.compute_scmos_offset_and_variance_map", "aslm.model.analysis.camera.compute_signal_to_noise", "aslm.model.analysis.image_contrast", "aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy", "aslm.model.concurrency", "aslm.model.concurrency.concurrency_tools", "aslm.model.concurrency.concurrency_tools.CustodyThread", "aslm.model.concurrency.concurrency_tools.FancyThread", "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess", "aslm.model.concurrency.concurrency_tools.PoliteThread", "aslm.model.concurrency.concurrency_tools.ResultThread", "aslm.model.concurrency.concurrency_tools.SharedNDArray", "aslm.model.data_sources", "aslm.model.data_sources.bdv_data_source", "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource", "aslm.model.data_sources.data_source", "aslm.model.data_sources.data_source.DataSource", "aslm.model.data_sources.get_data_source", "aslm.model.data_sources.tiff_data_source", "aslm.model.data_sources.tiff_data_source.TiffDataSource", "aslm.model.device_startup_functions", "aslm.model.device_startup_functions.DummyDeviceConnection", "aslm.model.device_startup_functions.auto_redial", "aslm.model.device_startup_functions.device_not_found", "aslm.model.device_startup_functions.load_camera_connection", "aslm.model.device_startup_functions.load_devices", "aslm.model.device_startup_functions.load_filter_wheel_connection", "aslm.model.device_startup_functions.load_stages", "aslm.model.device_startup_functions.load_zoom_connection", "aslm.model.device_startup_functions.start_camera", "aslm.model.device_startup_functions.start_daq", "aslm.model.device_startup_functions.start_filter_wheel", "aslm.model.device_startup_functions.start_galvo", "aslm.model.device_startup_functions.start_lasers", "aslm.model.device_startup_functions.start_remote_focus_device", "aslm.model.device_startup_functions.start_shutter", "aslm.model.device_startup_functions.start_stage", "aslm.model.device_startup_functions.start_zoom", "aslm.model.devices", "aslm.model.devices.APIs", "aslm.model.devices.APIs.coherent", "aslm.model.devices.APIs.dynamixel", "aslm.model.devices.APIs.dynamixel.dynamixel_functions", "aslm.model.devices.APIs.dynamixel.dynamixel_functions.create_mock_dxl_device", "aslm.model.devices.APIs.omicron", "aslm.model.devices.camera", "aslm.model.devices.camera.camera_base", "aslm.model.devices.camera.camera_base.CameraBase", "aslm.model.devices.camera.camera_hamamatsu", "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca", "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning", "aslm.model.devices.camera.camera_photometrics", "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix", "aslm.model.devices.camera.camera_synthetic", "aslm.model.devices.camera.camera_synthetic.SyntheticCamera", "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController", "aslm.model.devices.daq", "aslm.model.devices.daq.daq_base", "aslm.model.devices.daq.daq_base.DAQBase", "aslm.model.devices.daq.daq_synthetic", "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ", "aslm.model.devices.filter_wheel", "aslm.model.devices.filter_wheel.filter_wheel_asi", "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel", "aslm.model.devices.filter_wheel.filter_wheel_asi.build_filter_wheel_connection", "aslm.model.devices.filter_wheel.filter_wheel_base", "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase", "aslm.model.devices.filter_wheel.filter_wheel_sutter", "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel", "aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection", "aslm.model.devices.filter_wheel.filter_wheel_synthetic", "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel", "aslm.model.devices.galvo", "aslm.model.devices.galvo.galvo_base", "aslm.model.devices.galvo.galvo_base.GalvoBase", "aslm.model.devices.galvo.galvo_synthetic", "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo", "aslm.model.devices.lasers", "aslm.model.devices.lasers.laser_base", "aslm.model.devices.lasers.laser_base.LaserBase", "aslm.model.devices.lasers.laser_synthetic", "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser", "aslm.model.devices.objectives", "aslm.model.devices.objectives.Objective", "aslm.model.devices.remote_focus", "aslm.model.devices.remote_focus.remote_focus_base", "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase", "aslm.model.devices.remote_focus.remote_focus_synthetic", "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus", "aslm.model.devices.shutter", "aslm.model.devices.shutter.laser_shutter_base", "aslm.model.devices.shutter.laser_shutter_base.ShutterBase", "aslm.model.devices.shutter.laser_shutter_synthetic", "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter", "aslm.model.devices.stages", "aslm.model.devices.stages.stage_asi", "aslm.model.devices.stages.stage_asi.ASIStage", "aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection", "aslm.model.devices.stages.stage_base", "aslm.model.devices.stages.stage_base.StageBase", "aslm.model.devices.stages.stage_galvo", "aslm.model.devices.stages.stage_galvo.GalvoNIStage", "aslm.model.devices.stages.stage_mcl", "aslm.model.devices.stages.stage_mcl.MCLStage", "aslm.model.devices.stages.stage_mcl.build_MCLStage_connection", "aslm.model.devices.stages.stage_pi", "aslm.model.devices.stages.stage_pi.PIStage", "aslm.model.devices.stages.stage_pi.build_PIStage_connection", "aslm.model.devices.stages.stage_sutter", "aslm.model.devices.stages.stage_sutter.SutterStage", "aslm.model.devices.stages.stage_sutter.build_MP285_connection", "aslm.model.devices.stages.stage_synthetic", "aslm.model.devices.stages.stage_synthetic.SyntheticStage", "aslm.model.devices.stages.stage_tl_kcube_inertial", "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage", "aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection", "aslm.model.devices.zoom", "aslm.model.devices.zoom.zoom_base", "aslm.model.devices.zoom.zoom_base.ZoomBase", "aslm.model.devices.zoom.zoom_dynamixel", "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom", "aslm.model.devices.zoom.zoom_dynamixel.build_dynamixel_zoom_connection", "aslm.model.devices.zoom.zoom_synthetic", "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom", "aslm.model.dummy", "aslm.model.dummy.DummyController", "aslm.model.dummy.DummyDevice", "aslm.model.dummy.DummyMicroscope", "aslm.model.dummy.DummyModel", "aslm.model.features", "aslm.model.features.auto_tile_scan", "aslm.model.features.auto_tile_scan.CalculateFocusRange", "aslm.model.features.autofocus", "aslm.model.features.autofocus.Autofocus", "aslm.model.features.autofocus.power_tent", "aslm.model.features.common_features", "aslm.model.features.common_features.ChangeResolution", "aslm.model.features.common_features.ConProAcquisition", "aslm.model.features.common_features.FindTissueSimple2D", "aslm.model.features.common_features.LoopByCount", "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable", "aslm.model.features.common_features.PrepareNextChannel", "aslm.model.features.common_features.Snap", "aslm.model.features.common_features.StackPause", "aslm.model.features.common_features.WaitToContinue", "aslm.model.features.common_features.ZStackAcquisition", "aslm.model.features.constant_velocity_acquisition", "aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition", "aslm.model.features.dummy_detective", "aslm.model.features.dummy_detective.Dummy_Detective", "aslm.model.features.feature_container", "aslm.model.features.feature_container.Container", "aslm.model.features.feature_container.DataContainer", "aslm.model.features.feature_container.DataNode", "aslm.model.features.feature_container.SignalContainer", "aslm.model.features.feature_container.SignalNode", "aslm.model.features.feature_container.TreeNode", "aslm.model.features.feature_container.dummy_True", "aslm.model.features.feature_container.dummy_func", "aslm.model.features.feature_container.get_registered_funcs", "aslm.model.features.feature_container.load_features", "aslm.model.features.feature_related_functions", "aslm.model.features.feature_related_functions.SharedList", "aslm.model.features.feature_related_functions.convert_feature_list_to_str", "aslm.model.features.feature_related_functions.convert_str_to_feature_list", "aslm.model.features.feature_related_functions.load_dynamic_parameter_functions", "aslm.model.features.image_writer", "aslm.model.features.image_writer.ImageWriter", "aslm.model.features.remove_empty_tiles", "aslm.model.features.remove_empty_tiles.DetectTissueInStack", "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord", "aslm.model.features.remove_empty_tiles.RemoveEmptyPositions", "aslm.model.features.remove_empty_tiles.detect_tissue", "aslm.model.features.remove_empty_tiles.detect_tissue2", "aslm.model.features.restful_features", "aslm.model.features.restful_features.IlastikSegmentation", "aslm.model.features.restful_features.prepare_service", "aslm.model.features.volume_search", "aslm.model.features.volume_search.VolumeSearch", "aslm.model.features.volume_search.draw_box", "aslm.model.metadata_sources", "aslm.model.metadata_sources.bdv_metadata", "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata", "aslm.model.metadata_sources.metadata", "aslm.model.metadata_sources.metadata.Metadata", "aslm.model.metadata_sources.metadata.XMLMetadata", "aslm.model.metadata_sources.ome_tiff_metadata", "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata", "aslm.model.microscope", "aslm.model.microscope.Microscope", "aslm.model.model", "aslm.model.model.Model", "aslm.model.waveforms", "aslm.model.waveforms.camera_exposure", "aslm.model.waveforms.dc_value", "aslm.model.waveforms.remote_focus_ramp", "aslm.model.waveforms.sawtooth", "aslm.model.waveforms.sine_wave", "aslm.model.waveforms.single_pulse", "aslm.model.waveforms.smooth_waveform", "aslm.model.waveforms.square", "aslm.tools", "aslm.tools.beams", "aslm.tools.beams.fit_gaussian_beam_error", "aslm.tools.beams.fit_gaussian_beam_mse", "aslm.tools.beams.gaussian_beam", "aslm.tools.common_dict_tools", "aslm.tools.common_dict_tools.update_stage_dict", "aslm.tools.common_functions", "aslm.tools.common_functions.VariableWithLock", "aslm.tools.common_functions.build_ref_name", "aslm.tools.common_functions.combine_funcs", "aslm.tools.common_functions.copy_proxy_object", "aslm.tools.common_functions.load_module_from_file", "aslm.tools.decorators", "aslm.tools.decorators.FeatureList", "aslm.tools.decorators.function_timer", "aslm.tools.file_functions", "aslm.tools.file_functions.create_save_path", "aslm.tools.file_functions.delete_folder", "aslm.tools.file_functions.load_yaml_file", "aslm.tools.file_functions.save_yaml_file", "aslm.tools.image", "aslm.tools.image.create_arrow_image", "aslm.tools.image.text_array", "aslm.tools.image_loaders", "aslm.tools.image_loaders.LazyTiff", "aslm.tools.main_functions", "aslm.tools.main_functions.create_parser", "aslm.tools.main_functions.evaluate_parser_input_arguments", "aslm.tools.multipos_table_tools", "aslm.tools.multipos_table_tools.calc_num_tiles", "aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box", "aslm.tools.multipos_table_tools.sign", "aslm.tools.multipos_table_tools.update_table", "aslm.tools.project_stats", "aslm.tools.project_stats.countlines", "aslm.tools.sdf", "aslm.tools.sdf.box", "aslm.tools.sdf.sphere", "aslm.tools.sdf.volume_from_sdf", "aslm.tools.waveform_template_funcs", "aslm.tools.waveform_template_funcs.get_waveform_template_parameters", "aslm.tools.xml_tools", "aslm.tools.xml_tools.dict_to_xml", "aslm.tools.xml_tools.parse_xml", "aslm.view", "aslm.view.custom_widgets", "aslm.view.main_window_content", "aslm.view.popups", "&lt;no title&gt;", "&lt;no title&gt;", "API Reference", "Configuring ASLM", "Contributing Guidelines", "Adding New Hardware", "Contributing to ASLM", "Adding New Model Features", "&lt;no title&gt;", "Feature Container", "Microscope Implementations", "<strong>Autonomous Software for Light Microscopy</strong>", "Configuration Overview", "Software Installation", "Supported Hardware"], "terms": {"modul": [0, 9, 13, 16, 18, 19, 25, 26, 39, 41, 45, 46, 47, 73, 74, 75, 76, 79, 80, 91, 96, 107, 112, 119, 124, 129, 151, 164, 194, 195, 215, 236, 248, 281, 282, 283, 284, 286, 293, 294, 295, 299], "function": [1, 8, 13, 14, 20, 23, 24, 27, 32, 37, 41, 45, 46, 47, 49, 55, 57, 77, 84, 85, 87, 89, 97, 102, 103, 130, 137, 140, 143, 148, 154, 163, 166, 167, 168, 169, 171, 172, 174, 175, 176, 177, 178, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 202, 203, 204, 205, 206, 207, 208, 209, 212, 224, 226, 227, 231, 235, 237, 238, 239, 241, 243, 245, 246, 247, 248, 249, 251, 252, 253, 257, 262, 265, 270, 272, 273, 274, 275, 276, 277, 278, 289, 293, 296, 297, 299], "manag": [2, 5, 6, 7, 8, 14, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 82, 84, 85, 87, 89, 126, 128, 131, 134, 136, 141, 153, 158, 163, 172, 175, 176, 178, 180, 186, 187, 189, 298, 299], "parent_dict": [2, 6], "key_nam": 2, "dict_data": 2, "nest": [2, 24, 46, 195, 217, 220, 222], "dictionari": [2, 5, 6, 8, 11, 21, 22, 24, 41, 45, 46, 60, 67, 68, 93, 95, 98, 101, 103, 106, 109, 111, 114, 116, 121, 123, 131, 134, 136, 138, 139, 141, 142, 144, 147, 149, 153, 155, 156, 158, 160, 162, 163, 166, 171, 172, 173, 174, 175, 176, 177, 179, 180, 188, 190, 191, 194, 195, 198, 200, 202, 204, 217, 220, 222, 224, 226, 242, 253, 255, 256, 264, 277, 279, 280, 288, 294, 297], "recurs": [2, 24, 46, 198], "paramet": [2, 4, 5, 6, 7, 8, 11, 13, 14, 18, 19, 21, 22, 23, 24, 28, 29, 30, 31, 33, 34, 35, 36, 38, 46, 49, 51, 52, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 82, 84, 85, 87, 89, 90, 93, 95, 98, 99, 101, 103, 106, 109, 111, 114, 116, 118, 121, 123, 126, 128, 131, 132, 134, 136, 138, 139, 141, 142, 144, 145, 147, 149, 150, 153, 155, 156, 158, 160, 161, 162, 163, 168, 169, 199, 202, 213, 224, 226, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 242, 245, 246, 247, 248, 251, 253, 254, 255, 256, 258, 259, 261, 263, 264, 266, 267, 268, 269, 271, 273, 274, 275, 277, 279, 280, 288, 293, 296, 297], "multiprocess": [2, 5, 6, 7, 8, 23, 59, 62, 64, 128, 131, 134, 136, 141, 158, 226], "share": [2, 5, 6, 7, 8, 41, 46, 95, 195, 197, 226, 289, 299], "object": [2, 5, 6, 7, 8, 11, 13, 14, 15, 41, 43, 45, 46, 49, 51, 54, 56, 57, 64, 66, 67, 68, 69, 70, 71, 72, 82, 84, 85, 87, 89, 90, 93, 95, 98, 99, 101, 109, 114, 116, 121, 123, 126, 128, 131, 132, 134, 136, 138, 141, 142, 144, 149, 153, 155, 158, 160, 161, 162, 163, 166, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 186, 188, 190, 191, 195, 197, 202, 204, 205, 206, 210, 213, 217, 219, 224, 226, 242, 244, 247, 250, 258, 261, 263, 264, 269, 275, 288, 289, 295, 296, 297, 299], "e": [2, 4, 5, 6, 7, 8, 11, 34, 46, 54, 84, 85, 87, 89, 99, 104, 106, 109, 111, 132, 142, 153, 155, 158, 173, 197, 200, 202, 220, 266, 288, 289, 294, 298, 299], "g": [2, 5, 6, 7, 8, 11, 46, 54, 84, 85, 87, 89, 99, 104, 106, 109, 111, 118, 132, 142, 153, 155, 158, 173, 200, 202, 220, 266, 288, 294, 298, 299], "dict": [2, 5, 6, 7, 8, 11, 13, 14, 24, 28, 49, 51, 54, 60, 82, 84, 85, 87, 89, 93, 95, 98, 101, 103, 106, 109, 111, 114, 116, 118, 121, 123, 131, 134, 136, 138, 139, 141, 142, 144, 147, 149, 153, 155, 156, 158, 160, 162, 163, 166, 168, 171, 172, 173, 174, 175, 176, 177, 179, 180, 188, 190, 191, 194, 202, 204, 224, 226, 242, 247, 253, 255, 256, 277, 279, 280, 288], "between": [2, 5, 6, 7, 8, 29, 46, 49, 51, 54, 87, 153, 155, 158, 173, 179, 180, 187, 189, 197, 213, 238, 239, 245, 266, 288, 297, 299], "process": [2, 5, 6, 7, 8, 23, 43, 46, 163, 166, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 187, 188, 190, 195, 198, 204, 205, 206, 226, 289, 294], "we": [2, 6, 21, 43, 45, 46, 49, 51, 54, 84, 85, 103, 106, 162, 202, 217, 220, 222, 224, 288, 289, 290, 291, 294, 297, 298, 299], "ar": [2, 6, 8, 11, 13, 24, 41, 45, 46, 54, 70, 84, 85, 87, 89, 95, 131, 134, 136, 138, 141, 144, 147, 149, 162, 163, 166, 168, 176, 179, 182, 186, 187, 188, 189, 190, 191, 194, 195, 198, 200, 202, 213, 220, 224, 226, 238, 239, 254, 261, 288, 289, 293, 294, 297, 298, 299], "ad": [2, 6, 8, 45, 46, 131, 195, 213, 263, 269, 291, 294, 296], "str": [2, 3, 4, 6, 11, 13, 14, 21, 22, 28, 29, 30, 33, 35, 46, 49, 51, 52, 54, 64, 66, 67, 68, 69, 70, 71, 72, 82, 84, 85, 87, 89, 90, 93, 95, 98, 99, 101, 103, 104, 106, 109, 111, 114, 116, 118, 121, 123, 126, 128, 131, 132, 134, 136, 138, 141, 142, 144, 145, 147, 149, 150, 153, 155, 158, 160, 162, 163, 171, 172, 173, 174, 178, 180, 188, 190, 191, 194, 197, 198, 199, 200, 202, 213, 217, 220, 222, 224, 226, 240, 245, 248, 253, 254, 255, 256, 258, 259, 261, 264, 271, 277, 279, 293], "name": [2, 6, 11, 13, 14, 18, 19, 41, 43, 45, 46, 49, 51, 54, 64, 66, 67, 68, 69, 70, 71, 72, 82, 84, 85, 87, 89, 90, 93, 95, 98, 101, 103, 106, 109, 111, 114, 116, 118, 121, 123, 126, 128, 131, 134, 136, 138, 141, 142, 144, 147, 149, 153, 155, 158, 162, 163, 188, 190, 191, 197, 198, 200, 202, 213, 224, 226, 245, 248, 254, 256, 277, 288, 289, 293, 294, 297, 299], "insert": [2, 46, 197, 294, 299], "return": [2, 3, 4, 5, 6, 11, 13, 14, 18, 19, 21, 24, 28, 29, 30, 31, 33, 34, 35, 36, 38, 41, 43, 45, 46, 49, 51, 52, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 78, 82, 84, 85, 87, 89, 90, 93, 95, 98, 99, 101, 103, 104, 106, 109, 111, 118, 121, 123, 126, 128, 131, 132, 134, 136, 138, 139, 141, 142, 144, 145, 147, 149, 150, 153, 155, 156, 158, 160, 161, 162, 163, 168, 169, 197, 199, 202, 217, 219, 220, 222, 224, 226, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 242, 245, 246, 247, 248, 251, 253, 255, 256, 258, 259, 261, 263, 264, 266, 267, 268, 269, 273, 274, 275, 277, 279, 280, 289, 293, 294], "type": [2, 3, 5, 6, 11, 13, 14, 15, 18, 19, 21, 24, 28, 29, 30, 31, 33, 34, 35, 36, 38, 46, 49, 51, 52, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 78, 82, 84, 85, 87, 89, 90, 93, 95, 98, 99, 101, 103, 104, 106, 109, 111, 114, 116, 118, 121, 123, 126, 128, 131, 132, 134, 136, 138, 139, 141, 142, 144, 145, 147, 149, 150, 153, 155, 156, 158, 160, 161, 162, 163, 166, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 187, 188, 190, 191, 194, 197, 199, 202, 219, 220, 222, 224, 226, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 242, 245, 246, 247, 248, 251, 253, 255, 256, 258, 259, 261, 263, 266, 267, 268, 269, 273, 274, 275, 279, 280, 288, 293, 294, 296, 297, 299], "none": [2, 13, 14, 22, 28, 30, 41, 43, 45, 46, 49, 51, 54, 84, 85, 87, 89, 95, 121, 123, 131, 134, 136, 138, 141, 144, 147, 149, 160, 166, 186, 187, 188, 189, 190, 191, 193, 197, 199, 202, 204, 205, 217, 219, 220, 222, 224, 226, 242, 255, 258, 263, 269, 271, 279, 293, 297], "exampl": [2, 3, 6, 21, 41, 45, 46, 52, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 131, 136, 138, 141, 144, 147, 149, 160, 161, 163, 202, 228, 229, 230, 231, 232, 233, 234, 235, 238, 254, 261, 275, 289, 290, 293, 294, 297, 298, 299], "establish": [3, 299], "program": [3, 13, 41, 45, 197, 289], "home": [3, 98], "directori": [3, 54, 180, 200, 202, 220, 253, 254, 256, 271, 297, 298], "appdata": [3, 288, 297], "local": [3, 14, 33, 46, 288, 297, 298], "window": [3, 207, 253, 288, 294, 297, 298, 299], "mac": [3, 288, 297, 298], "linux": [3, 288, 297, 298], "path": [3, 4, 5, 22, 31, 46, 54, 200, 248, 253, 254, 255, 261, 264, 271, 298], "c": [3, 46, 49, 51, 54, 142, 222, 288, 297, 298], "user": [3, 46, 198, 226, 253, 288, 291, 294, 296, 297, 298, 299], "usernam": [3, 298], "get": [4, 11, 14, 45, 46, 49, 52, 82, 84, 85, 87, 89, 126, 128, 131, 147, 162, 168, 180, 194, 224, 226, 277, 289, 298], "variou": [4, 166, 224, 288, 297, 299], "configur": [4, 5, 6, 7, 8, 11, 22, 49, 51, 54, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 82, 84, 85, 87, 89, 93, 95, 98, 101, 103, 106, 109, 111, 114, 116, 121, 123, 126, 128, 131, 134, 136, 138, 141, 144, 147, 149, 153, 155, 156, 158, 160, 162, 163, 166, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 194, 195, 198, 200, 202, 204, 213, 219, 220, 222, 224, 226, 264, 289, 294, 296, 298], "file": [4, 5, 6, 7, 22, 46, 49, 51, 52, 54, 82, 84, 85, 87, 89, 136, 198, 200, 202, 217, 219, 220, 222, 226, 248, 254, 255, 256, 261, 264, 271, 280, 288, 289, 294, 296, 298], "us": [4, 11, 13, 18, 19, 34, 41, 45, 46, 49, 89, 90, 136, 147, 160, 161, 162, 163, 166, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 200, 202, 204, 205, 206, 207, 208, 213, 220, 222, 224, 226, 228, 229, 230, 231, 232, 233, 235, 259, 261, 271, 288, 289, 290, 293, 294, 297, 298, 299], "configuration_path": [4, 264], "contain": [4, 5, 7, 8, 22, 28, 29, 30, 46, 138, 139, 141, 142, 144, 147, 149, 163, 166, 168, 187, 188, 189, 190, 191, 194, 195, 198, 200, 204, 205, 207, 208, 224, 226, 253, 261, 269, 288, 293, 296, 297], "global": [4, 14, 33, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 82, 84, 85, 87, 89, 126, 128, 131, 134, 136, 141, 153, 158, 226], "microscop": [4, 8, 11, 49, 51, 54, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 82, 84, 85, 87, 89, 93, 95, 98, 101, 103, 106, 109, 111, 114, 116, 121, 123, 126, 128, 131, 134, 136, 138, 141, 144, 147, 149, 153, 155, 158, 162, 163, 166, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 188, 190, 191, 204, 205, 206, 213, 226, 277, 289, 294, 296, 299], "i": [4, 13, 14, 18, 19, 24, 30, 34, 41, 45, 46, 49, 54, 58, 59, 82, 84, 85, 87, 89, 95, 98, 99, 101, 103, 106, 131, 134, 136, 138, 141, 144, 147, 149, 153, 155, 158, 160, 161, 162, 163, 166, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 200, 202, 204, 205, 206, 207, 208, 213, 220, 224, 226, 230, 238, 239, 240, 242, 254, 256, 264, 267, 269, 271, 275, 288, 289, 290, 293, 294, 295, 296, 297, 298, 299], "hardwar": [4, 46, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 82, 84, 85, 87, 89, 126, 128, 131, 134, 136, 138, 141, 144, 147, 149, 153, 158, 202, 224, 291, 294, 296, 298], "setup": [4, 22, 49, 161, 224, 288, 296, 297, 299], "experiment_path": [4, 264], "per": [4, 13, 41, 45, 46, 49, 51, 54, 98, 109, 111, 136, 182, 294, 299], "experi": [4, 7, 49, 51, 54, 166, 171, 172, 174, 175, 176, 177, 178, 179, 180, 202, 213, 219, 220, 222, 256, 264, 289, 294, 297, 298], "waveform_constants_path": [4, 264], "remot": [4, 8, 11, 69, 93, 95, 121, 123, 136, 224, 230, 264, 295, 296], "focu": [4, 8, 11, 69, 93, 95, 121, 123, 136, 153, 155, 158, 166, 168, 180, 217, 224, 226, 230, 267, 288, 294, 295], "all": [4, 7, 13, 14, 29, 41, 45, 46, 54, 87, 89, 93, 95, 131, 134, 136, 138, 141, 144, 147, 149, 162, 180, 182, 197, 224, 226, 254, 261, 266, 288, 289, 293, 294, 297, 299], "magnif": [4, 153, 155, 158, 173], "rest_api_path": [4, 264], "rest": [4, 87, 264, 288, 296], "api": [4, 46, 59, 84, 85, 87, 90, 131, 141, 264, 288, 296, 299], "waveform_templates_path": [4, 264], "waveform": [4, 8, 93, 95, 109, 111, 121, 123, 136, 224, 226, 264, 277, 289, 296, 299], "templat": [4, 46, 264, 277, 296], "kwarg": [5, 13, 14, 41, 45, 46, 57, 188, 190, 191, 211, 226, 293], "load": [5, 22, 46, 60, 82, 84, 85, 87, 89, 98, 147, 195, 200, 224, 226, 248, 255, 261, 289, 296], "list": [5, 11, 28, 29, 31, 46, 68, 131, 134, 136, 138, 141, 144, 147, 149, 160, 163, 166, 168, 173, 174, 177, 179, 180, 186, 187, 189, 192, 193, 195, 197, 198, 199, 200, 204, 205, 206, 213, 217, 222, 224, 226, 245, 246, 247, 255, 258, 269, 288, 293, 294, 296, 297], "config_dict": 5, "amalgam": 5, "input": [5, 46, 198, 208, 224, 253, 263, 264, 275, 299], "config_nam": 6, "new_config": 6, "bool": [6, 11, 13, 14, 18, 19, 21, 24, 28, 29, 30, 31, 33, 35, 46, 49, 51, 54, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 82, 84, 85, 87, 89, 95, 98, 101, 103, 106, 126, 128, 131, 134, 136, 138, 141, 144, 147, 149, 153, 155, 158, 161, 162, 163, 166, 171, 172, 174, 175, 176, 177, 179, 180, 186, 188, 189, 190, 191, 192, 204, 205, 206, 207, 208, 213, 217, 224, 226, 238, 240, 256, 267, 269, 271, 293], "read": [6, 46, 49, 51, 54, 103, 106, 153, 155, 158, 297], "new": [6, 11, 23, 24, 46, 54, 131, 136, 138, 141, 144, 147, 149, 172, 176, 180, 182, 213, 224, 246, 253, 258, 269, 289, 291, 293, 294, 296, 297, 298], "updat": [6, 8, 24, 46, 95, 171, 172, 174, 175, 180, 188, 190, 191, 195, 200, 205, 224, 226, 242, 258, 269, 288, 296, 298], "info": [6, 11, 224], "subdictionari": 6, "replac": [6, 46, 200, 288, 297], "valu": [6, 8, 11, 13, 21, 24, 28, 38, 41, 45, 46, 84, 85, 90, 131, 134, 136, 138, 141, 144, 147, 149, 153, 155, 158, 166, 168, 169, 171, 172, 174, 175, 176, 177, 179, 180, 188, 190, 191, 192, 197, 199, 200, 207, 213, 220, 229, 266, 275, 288, 289, 293, 294, 297, 298], "yaml": [6, 7, 22, 200, 255, 256, 289, 297], "true": [6, 13, 18, 19, 21, 31, 41, 45, 46, 84, 85, 87, 98, 103, 106, 131, 134, 136, 138, 141, 144, 147, 149, 163, 188, 190, 192, 194, 204, 205, 206, 207, 224, 226, 238, 256, 271, 293, 294], "fals": [6, 13, 18, 19, 21, 33, 41, 43, 45, 46, 54, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 84, 85, 87, 89, 131, 134, 136, 138, 141, 144, 147, 149, 153, 155, 158, 162, 163, 180, 188, 189, 190, 191, 197, 204, 205, 207, 208, 213, 224, 226, 238, 256, 267, 269, 293], "verifi": [7, 8, 131, 134, 136, 138, 141, 144, 147, 149], "waveform_const": [7, 93, 95, 297], "constant": [8, 93, 95, 147, 182, 264, 296, 299], "thi": [8, 13, 14, 18, 19, 22, 23, 24, 41, 43, 45, 46, 49, 51, 54, 84, 85, 87, 95, 123, 131, 134, 136, 138, 141, 144, 147, 149, 153, 155, 158, 160, 163, 166, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 200, 202, 204, 205, 206, 207, 208, 220, 224, 226, 240, 245, 246, 247, 248, 253, 254, 266, 271, 277, 288, 289, 290, 293, 294, 295, 296, 297, 298, 299], "check": [8, 13, 21, 46, 57, 98, 101, 103, 106, 153, 158, 166, 180, 204, 205, 226], "ensur": [8, 131, 134, 136, 138, 141, 144, 147, 149, 175, 176, 178, 179, 194, 224, 289], "given": [8, 13, 34, 41, 45, 46, 52, 84, 85, 87, 89, 98, 101, 103, 106, 109, 111, 123, 194, 197, 198, 200, 207, 269, 293, 294, 298], "conform": 8, "expect": [8, 45, 49, 51, 54, 103, 131, 134, 136, 138, 141, 144, 147, 149, 180, 188, 190, 191, 193, 288, 289, 297], "structur": [8, 46, 195, 222, 226, 294], "It": [8, 13, 14, 18, 19, 24, 41, 45, 46, 49, 163, 166, 168, 173, 174, 178, 179, 182, 186, 187, 188, 189, 190, 192, 193, 194, 195, 197, 200, 204, 205, 206, 207, 224, 253, 288, 293, 294, 296, 297, 298, 299], "relat": [8, 14, 163, 166, 175, 177, 180, 188, 190, 191, 259, 288, 297], "devic": [8, 56, 57, 58, 59, 60, 64, 66, 67, 68, 69, 70, 71, 72, 161, 162, 163, 166, 168, 182, 188, 189, 190, 191, 224, 226, 288, 295, 296, 297], "laser": [8, 11, 68, 95, 126, 162, 224, 232, 233, 235, 288, 294, 295, 296], "galvo": [8, 11, 58, 67, 93, 95, 136, 162, 224, 229, 231, 264, 289, 295], "multipl": [8, 13, 33, 35, 41, 45, 46, 176, 220, 293, 299], "The": [8, 11, 13, 14, 15, 18, 19, 41, 45, 46, 49, 57, 95, 103, 111, 116, 123, 131, 147, 153, 155, 158, 160, 161, 162, 163, 166, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 186, 187, 188, 189, 190, 191, 194, 195, 197, 198, 200, 204, 205, 206, 207, 208, 224, 230, 234, 242, 251, 266, 268, 271, 275, 288, 289, 293, 296, 297, 298, 299], "If": [8, 18, 19, 38, 41, 43, 45, 46, 49, 51, 54, 82, 84, 85, 87, 89, 95, 98, 101, 103, 106, 131, 134, 136, 138, 141, 144, 147, 149, 155, 168, 194, 197, 199, 202, 204, 205, 207, 226, 238, 261, 264, 288, 289, 293, 294, 297, 298, 299], "miss": [8, 46, 194], "default": [8, 11, 13, 14, 22, 41, 45, 46, 84, 85, 87, 89, 99, 106, 131, 134, 136, 138, 141, 144, 147, 149, 166, 171, 173, 174, 178, 180, 182, 186, 187, 188, 189, 190, 191, 194, 197, 202, 204, 205, 206, 207, 208, 224, 226, 232, 256, 259, 264, 288, 289, 293, 294, 297, 299], "empti": [8, 11, 46, 103, 106, 131, 134, 136, 138, 141, 144, 147, 149, 166, 168, 186, 187, 189, 197, 205, 206, 297], "necessari": [8, 46, 93, 95, 98, 103, 106, 175, 187, 189, 204, 205, 224, 251, 253, 288, 289, 290, 294, 297, 299], "valid": [8, 198, 199], "convert": [8, 46, 82, 84, 87, 89, 141, 144, 198, 199, 217, 219, 220, 222, 259, 269], "float": [8, 11, 13, 28, 29, 30, 33, 34, 35, 38, 41, 45, 46, 49, 51, 54, 82, 84, 85, 87, 89, 93, 95, 98, 99, 103, 104, 106, 109, 111, 118, 121, 123, 131, 134, 136, 138, 141, 144, 145, 147, 149, 153, 155, 158, 160, 161, 162, 168, 169, 172, 173, 180, 204, 205, 207, 208, 213, 217, 224, 226, 228, 229, 230, 231, 232, 233, 235, 238, 239, 240, 266, 267, 268, 274, 275, 288], "possibl": [8, 43, 46, 207, 230, 291, 294, 297], "non": [8, 13, 18, 24, 41, 45, 46, 264], "exist": [8, 46, 98, 101, 103, 106, 153, 158, 188, 190, 191, 226, 255, 258, 289, 294], "zoom": [8, 63, 72, 171, 173, 213, 288, 296], "level": [8, 46, 49, 173, 279, 293], "remov": [8, 14, 46, 197, 206, 288, 294, 297], "from": [8, 11, 13, 14, 22, 23, 33, 36, 41, 45, 46, 49, 51, 54, 57, 60, 82, 84, 85, 87, 89, 103, 106, 118, 128, 136, 141, 144, 168, 174, 186, 187, 188, 189, 190, 191, 197, 200, 206, 219, 220, 222, 224, 226, 230, 248, 253, 254, 255, 259, 266, 271, 273, 274, 275, 279, 288, 289, 290, 293, 294, 296, 298, 299], "class": [10, 11, 12, 13, 14, 15, 17, 18, 19, 40, 41, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 105, 106, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 146, 147, 148, 149, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 196, 197, 201, 202, 203, 204, 205, 206, 209, 210, 212, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 243, 244, 248, 249, 250, 260, 261, 289, 290, 293], "base": [11, 13, 14, 15, 18, 19, 24, 29, 41, 43, 45, 46, 49, 51, 54, 56, 82, 84, 85, 87, 89, 90, 93, 95, 98, 101, 103, 106, 109, 111, 113, 114, 116, 118, 121, 123, 126, 128, 131, 134, 136, 138, 141, 144, 147, 149, 153, 155, 158, 160, 161, 162, 163, 166, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 186, 187, 188, 189, 190, 191, 197, 200, 202, 204, 205, 206, 208, 210, 213, 217, 219, 220, 222, 224, 226, 244, 250, 261, 267, 269, 288, 289, 290, 298, 299], "__init__": [11, 13, 14, 15, 18, 19, 41, 43, 45, 46, 49, 51, 54, 56, 57, 82, 84, 85, 87, 89, 90, 93, 95, 98, 101, 103, 106, 109, 111, 114, 116, 118, 121, 123, 126, 128, 131, 134, 136, 138, 141, 144, 147, 149, 153, 155, 158, 160, 161, 162, 163, 166, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 186, 187, 188, 189, 190, 191, 197, 202, 204, 205, 206, 210, 213, 217, 219, 220, 222, 224, 226, 244, 250, 261, 293, 294], "initi": [11, 13, 14, 15, 18, 19, 22, 41, 43, 45, 46, 49, 51, 54, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 82, 84, 85, 87, 89, 90, 93, 95, 98, 101, 103, 106, 109, 111, 114, 116, 121, 123, 126, 128, 131, 132, 134, 136, 138, 141, 144, 147, 149, 153, 155, 158, 160, 161, 162, 163, 166, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 188, 190, 191, 197, 204, 205, 217, 224, 226, 297, 299], "method": [11, 13, 14, 15, 18, 19, 41, 43, 45, 46, 49, 51, 54, 56, 82, 84, 85, 87, 89, 90, 93, 95, 98, 101, 103, 106, 109, 111, 114, 116, 118, 121, 123, 126, 128, 131, 134, 136, 138, 141, 144, 147, 149, 153, 155, 158, 160, 161, 162, 163, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 202, 208, 210, 213, 217, 219, 220, 222, 224, 226, 244, 250, 261, 293, 294], "attribut": [11, 13, 14, 15, 41, 45, 46, 49, 51, 54, 82, 84, 85, 87, 89, 93, 95, 98, 101, 103, 106, 109, 111, 114, 116, 121, 123, 126, 128, 131, 134, 136, 138, 141, 144, 147, 149, 153, 155, 158, 160, 161, 162, 163, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 217, 219, 220, 222, 224, 226, 261, 293], "change_microscop": 11, "accord": [11, 24, 46, 49, 51, 54, 84, 85, 87, 89, 197, 293], "result": [11, 45, 46, 57, 84, 85, 87, 153, 155, 158, 166, 188, 190, 198, 207, 224, 247, 289], "get_microscope_configuration_dict": 11, "microscope_configuration_dict": 11, "get_stage_position_limit": 11, "suffix": 11, "posit": [11, 28, 30, 46, 49, 51, 54, 98, 101, 103, 106, 131, 134, 136, 138, 141, 144, 147, 149, 153, 155, 158, 160, 163, 168, 172, 173, 175, 180, 204, 205, 206, 213, 217, 224, 226, 242, 266, 267, 269, 288, 297, 299], "limit": [11, 46, 131, 134, 136, 138, 141, 144, 147, 149, 155, 224, 289, 293], "stage": [11, 62, 71, 153, 155, 158, 160, 162, 166, 168, 172, 175, 179, 180, 182, 204, 205, 213, 217, 224, 226, 289, 290, 294, 295, 296], "_min": 11, "_max": 11, "position_limit": 11, "depend": [11, 46, 98, 267, 294, 296], "min": [11, 28, 30, 46, 84, 109, 111, 121, 123, 288, 297], "max": [11, 46, 84, 87, 109, 111, 121, 123, 288, 297, 299], "x": [11, 30, 38, 46, 49, 51, 54, 82, 84, 85, 87, 89, 131, 134, 136, 138, 141, 144, 147, 149, 169, 213, 217, 226, 238, 239, 258, 259, 261, 266, 267, 268, 269, 275, 288, 297], "2000": [11, 46, 288, 299], "y": [11, 30, 46, 49, 51, 54, 82, 84, 85, 87, 89, 131, 134, 136, 138, 141, 144, 147, 149, 169, 213, 217, 226, 258, 259, 261, 267, 269, 275, 288, 297], "z": [11, 46, 49, 51, 54, 118, 131, 134, 136, 138, 141, 144, 147, 149, 180, 182, 204, 205, 213, 217, 238, 239, 240, 267, 269, 275, 288, 294, 297], "theta": [11, 131, 134, 136, 138, 141, 144, 147, 149, 217, 267, 288, 297], "0": [11, 29, 30, 34, 46, 49, 57, 59, 67, 68, 71, 84, 85, 87, 99, 104, 106, 109, 111, 131, 134, 136, 138, 141, 144, 145, 147, 149, 153, 155, 158, 161, 162, 173, 197, 204, 205, 207, 208, 213, 222, 226, 228, 229, 230, 231, 232, 233, 235, 238, 239, 240, 259, 266, 271, 275, 279, 288, 293, 295, 297], "f": [11, 45, 46, 131, 134, 136, 138, 141, 144, 147, 149, 153, 155, 158, 168, 180, 204, 205, 217, 267, 269, 288, 289, 295, 297, 299], "properti": [11, 13, 41, 45, 46, 49, 51, 54, 82, 84, 85, 87, 89, 90, 118, 126, 128, 188, 190, 191, 217, 219, 220, 222, 261, 289, 293, 294], "camera_config_dict": 11, "camera": [11, 28, 30, 46, 59, 64, 93, 95, 109, 111, 121, 123, 136, 162, 163, 177, 224, 226, 228, 288, 295, 296], "camera_set": 11, "set": [11, 13, 33, 41, 45, 46, 49, 51, 54, 82, 84, 85, 87, 89, 90, 95, 98, 103, 106, 114, 116, 131, 134, 136, 141, 144, 147, 153, 155, 158, 161, 163, 166, 171, 186, 187, 188, 189, 190, 191, 197, 200, 224, 226, 269, 288, 290, 293, 294, 297, 298], "camera_flip_flag": 11, "flip": [11, 213], "flag": [11, 46, 84, 85, 87, 89, 95, 98, 101, 103, 106, 161, 162, 163, 172, 180, 186, 187, 189, 197, 206, 224, 226, 298], "flip_flag": 11, "camera_pixel": 11, "pixel": [11, 28, 29, 30, 34, 49, 51, 54, 82, 84, 85, 87, 89, 226, 238, 239, 240, 259, 275], "x_pixel": [11, 82, 84, 85, 87, 89, 297], "int": [11, 28, 29, 30, 33, 35, 46, 49, 51, 54, 57, 59, 67, 68, 71, 82, 84, 85, 87, 89, 90, 93, 95, 98, 99, 101, 103, 104, 106, 109, 111, 114, 116, 121, 123, 131, 132, 134, 136, 138, 139, 141, 144, 145, 147, 149, 153, 155, 156, 158, 161, 162, 163, 168, 172, 174, 175, 178, 180, 189, 202, 204, 205, 217, 222, 224, 226, 232, 234, 240, 258, 259, 266, 267, 268, 271, 275, 277, 288, 293], "number": [11, 13, 41, 45, 46, 49, 51, 54, 57, 82, 84, 85, 87, 89, 93, 95, 98, 103, 106, 109, 111, 121, 123, 131, 136, 139, 142, 149, 150, 155, 156, 163, 168, 172, 174, 175, 178, 180, 189, 197, 202, 204, 205, 207, 224, 226, 266, 267, 268, 271, 277, 288, 289, 293, 296], "y_pixel": [11, 82, 84, 85, 87, 89, 297], "channels_info": 11, "channel": [11, 49, 51, 54, 93, 95, 109, 111, 121, 123, 136, 149, 162, 168, 172, 176, 180, 202, 224, 226, 297, 299], "popul": [11, 89], "combobox": 11, "avail": [11, 13, 41, 45, 46, 98, 101, 103, 106, 131, 134, 136, 138, 141, 144, 147, 149, 153, 155, 158, 163, 202, 224, 288, 289, 294, 298, 299], "488nm": [11, 297], "561nm": 11, "642nm": [11, 297], "filter": [11, 61, 66, 98, 99, 101, 103, 104, 106, 224, 295, 296], "align": [11, 46, 103, 106, 131, 134, 136, 138, 141, 144, 147, 149, 297], "gfp": [11, 106, 297], "ff01": [11, 297], "515": [11, 297], "30": [11, 46, 275, 288, 297], "32": [11, 46, 202, 297], "daq_sample_r": 11, "daq": [11, 65, 68, 70, 121, 123, 136, 162, 224, 226, 288, 295], "sampl": [11, 93, 95, 109, 111, 121, 123, 136, 147, 238, 239, 240, 294, 295, 299], "rate": [11, 84, 85, 87, 89, 93, 95, 99, 104, 106, 109, 111, 121, 123, 132, 136, 145], "filter_wheel_setting_dict": 11, "wheel": [11, 61, 66, 98, 99, 101, 103, 104, 106, 224, 295, 296], "galvo_num": 11, "galvo_parameter_dict": 11, "lasers_info": 11, "laser_list": 11, "microscope_config": [11, 226], "microscope_nam": [11, 58, 64, 66, 67, 68, 69, 70, 71, 72, 82, 84, 85, 87, 89, 93, 95, 98, 101, 103, 106, 109, 111, 114, 116, 121, 123, 126, 128, 131, 134, 136, 138, 141, 144, 147, 149, 153, 155, 158, 162, 224, 226], "number_of_channel": 11, "remote_focus_dict": 11, "delay_perc": [11, 84, 297], "pulse_perc": [11, 84, 297], "remote_focus_paramet": 11, "percent": [11, 109, 111, 121, 123, 131, 136, 213, 228, 230, 231, 233, 235, 288], "delai": [11, 93, 95, 98, 103, 109, 111, 121, 123, 136, 141, 153, 155, 158, 224, 230, 233], "puls": [11, 93, 95, 131, 233, 297, 299], "stage_default_posit": 11, "current": [11, 13, 29, 41, 45, 46, 82, 84, 85, 87, 89, 90, 136, 147, 149, 153, 155, 158, 162, 168, 172, 175, 180, 182, 186, 187, 188, 189, 190, 197, 202, 213, 224, 226, 288, 296, 297], "stage_flip_flag": 11, "stage_setting_dict": 11, "stage_step": 11, "step": [11, 46, 49, 51, 54, 82, 84, 85, 87, 89, 163, 166, 168, 171, 172, 173, 174, 175, 176, 179, 180, 182, 186, 187, 188, 190, 191, 288, 294, 297, 298], "size": [11, 28, 29, 30, 46, 49, 51, 54, 82, 84, 85, 87, 89, 168, 172, 180, 182, 202, 217, 219, 220, 222, 226, 238, 239, 240, 259, 266, 288, 297], "same": [11, 13, 28, 30, 41, 45, 46, 153, 155, 158, 166, 222, 256, 261, 293, 297], "group": [13, 41, 45], "target": [13, 14, 29, 41, 45, 141, 153, 155, 158, 173, 226, 242], "arg": [13, 14, 41, 45, 46, 57, 58, 160, 172, 187, 188, 189, 190, 192, 193, 198, 200, 226, 245, 264, 293, 294], "daemon": [13, 41, 45], "thread": [13, 14, 15, 41, 43, 45, 61, 62, 63, 65, 66, 70, 72, 163, 168, 175, 178, 180, 226], "A": [13, 14, 15, 18, 19, 41, 45, 46, 131, 134, 136, 138, 141, 144, 147, 149, 166, 171, 172, 173, 174, 175, 176, 177, 179, 180, 186, 187, 188, 189, 190, 191, 194, 195, 197, 198, 199, 200, 204, 205, 206, 207, 213, 255, 261, 266, 275, 289, 294, 297, 299], "custom": [13, 14, 15, 18, 19, 197, 204, 205, 296, 299], "self": [13, 45, 46, 84, 85, 93, 95, 103, 134, 141, 153, 155, 158, 168, 202, 213, 289, 293, 294], "lock": [13, 15, 46, 95, 179, 226], "capabl": [13, 15, 172, 188, 190], "extend": [13, 187, 189, 197, 205], "python": [13, 18, 19, 22, 41, 43, 45, 46, 49, 51, 54, 219, 220, 222, 248, 254, 279, 288, 293, 294, 296, 297], "provid": [13, 14, 46, 90, 166, 171, 172, 174, 175, 176, 177, 178, 180, 186, 187, 188, 189, 190, 191, 197, 264, 288, 289, 290, 294, 297, 299], "abil": 13, "unlock": 13, "explicitli": [13, 224, 299], "scenario": 13, "where": [13, 41, 45, 46, 188, 190, 191, 192, 193, 198, 200, 202, 205, 226, 288, 290, 294, 297, 298], "synchron": [13, 14, 15, 178, 179, 299], "requir": [13, 46, 70, 131, 134, 136, 138, 141, 144, 147, 149, 166, 171, 193, 204, 205, 207, 226, 293, 295, 298, 299], "addit": [13, 22, 46, 51, 98, 103, 131, 166, 172, 188, 190, 197, 226], "over": [13, 14, 29, 46, 198, 298], "execut": [13, 160, 166, 174, 179, 186, 187, 188, 189, 190, 191, 206, 251, 294], "wait": [13, 41, 45, 84, 85, 87, 89, 95, 98, 103, 106, 131, 136, 141, 144, 160, 179, 187, 189, 190, 224, 226, 294], "allow": [13, 14, 18, 19, 46, 172, 174, 178, 179, 180, 186, 188, 190, 191, 226, 288, 289, 294, 296, 297, 298, 299], "whether": [13, 14, 41, 45, 46, 59, 82, 84, 85, 87, 89, 131, 134, 136, 138, 141, 144, 147, 149, 166, 172, 174, 175, 180, 186, 188, 189, 190, 191, 202, 204, 205, 271], "islock": 13, "threadgroup": [13, 41, 45], "option": [13, 14, 22, 28, 29, 30, 41, 43, 45, 46, 49, 87, 95, 131, 134, 136, 138, 141, 144, 147, 149, 166, 171, 173, 174, 178, 180, 186, 187, 188, 189, 190, 191, 194, 197, 198, 200, 204, 205, 206, 207, 208, 217, 220, 222, 224, 232, 288, 293, 294], "callabl": [13, 14, 41, 43, 45], "tupl": [13, 14, 35, 41, 45, 46, 49, 51, 54, 57, 141, 188, 190, 192, 193, 195, 198, 200, 217, 219, 220, 222, 259, 261, 273], "argument": [13, 14, 41, 43, 45, 46, 49, 51, 54, 57, 98, 103, 106, 172, 187, 188, 189, 190, 191, 192, 193, 198, 200, 226, 245, 263, 264, 293, 294], "keyword": [13, 14, 41, 45, 46, 49, 51, 54, 188, 190, 191, 226, 293], "getnam": [13, 41, 45], "string": [13, 41, 43, 45, 46, 54, 98, 101, 103, 106, 114, 121, 147, 149, 155, 174, 197, 198, 199, 202, 226, 255, 256, 279, 293], "identif": [13, 41, 45, 197], "purpos": [13, 41, 45, 46, 93, 95, 147, 298], "onli": [13, 41, 45, 46, 95, 131, 136, 182, 228, 275, 288, 289, 293, 297, 298, 299], "deprec": [13, 41, 45, 46], "instead": [13, 41, 45, 46, 288, 293], "isdaemon": [13, 41, 45], "is_al": [13, 41, 45], "aliv": [13, 41, 45], "just": [13, 41, 45, 46, 294], "befor": [13, 41, 45, 46, 114, 116, 144, 160, 166, 172, 176, 180, 190, 197, 226, 269, 293, 294, 298], "run": [13, 14, 24, 41, 45, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 95, 163, 168, 186, 187, 188, 189, 190, 226, 288, 289, 294, 297, 298, 299], "start": [13, 18, 19, 30, 41, 45, 46, 87, 95, 109, 111, 121, 123, 131, 147, 163, 172, 180, 197, 224, 226, 230, 267, 271, 288, 289, 293, 294, 298, 299], "until": [13, 41, 45, 95, 103, 131, 136, 138, 141, 144, 147, 149, 163, 179, 224, 226], "after": [13, 41, 45, 46, 90, 153, 158, 163, 171, 175, 180, 190, 226, 289, 293, 294, 297, 298], "termin": [13, 41, 45, 163, 186, 224, 226, 289, 297, 298, 299], "see": [13, 41, 45, 46, 220, 280, 289, 293, 294, 296, 297, 298], "also": [13, 41, 45, 46, 195, 202, 205, 289, 293, 298, 299], "enumer": [13, 41, 45], "join": [13, 41, 45], "timeout": [13, 41, 45, 99, 104, 145, 155, 161, 226], "block": [13, 41, 45, 46, 49, 131, 136, 138, 141, 144, 147, 149, 286, 293], "call": [13, 14, 41, 43, 45, 46, 49, 95, 138, 168, 176, 193, 197, 202, 204, 205, 226, 288, 297, 298], "whose": [13, 18, 19, 41, 45, 46], "either": [13, 41, 45, 46, 89, 174, 194, 288, 293, 297], "normal": [13, 41, 45, 46, 82, 84, 85, 87, 89, 162, 224, 297], "through": [13, 18, 19, 24, 38, 41, 45, 46, 172, 180, 187, 188, 189, 190, 191, 200, 204, 213, 224, 294], "an": [13, 24, 28, 29, 30, 33, 34, 35, 36, 38, 41, 43, 45, 46, 57, 82, 84, 85, 87, 89, 131, 134, 136, 138, 141, 144, 147, 149, 155, 166, 174, 180, 186, 187, 189, 197, 205, 206, 207, 208, 217, 220, 224, 226, 258, 264, 266, 269, 275, 280, 288, 289, 290, 293, 294, 297, 299], "unhandl": [13, 41, 45], "except": [13, 14, 41, 45, 46, 57, 131, 134, 136, 138, 141, 144, 147, 149, 293], "occur": [13, 41, 45, 46, 131, 290], "when": [13, 41, 43, 45, 46, 163, 179, 186, 187, 188, 189, 190, 191, 193, 197, 224, 226, 288, 289, 294, 297, 298, 299], "present": [13, 30, 41, 45, 82, 84, 85, 87, 89, 155, 194, 197, 198], "should": [13, 18, 19, 41, 45, 46, 84, 85, 87, 103, 131, 166, 174, 177, 179, 186, 187, 188, 189, 190, 191, 200, 204, 205, 207, 266, 288, 289, 293, 297, 298, 299], "point": [13, 41, 45, 46, 54, 186, 202, 258, 273, 274, 275, 288], "specifi": [13, 18, 19, 41, 45, 46, 103, 106, 147, 171, 173, 174, 178, 186, 187, 188, 189, 190, 191, 194, 198, 200, 202, 204, 205, 206, 207, 208, 253, 256, 288, 293, 294, 297], "oper": [13, 14, 41, 43, 45, 144, 162, 163, 166, 182, 186, 192, 193, 202, 224, 290, 294, 295, 297, 298, 299], "second": [13, 41, 45, 46, 49, 51, 54, 84, 85, 87, 89, 109, 111, 123, 162, 224, 228, 229, 230, 231, 232, 233, 235, 288, 293, 297], "fraction": [13, 41, 45, 266, 267], "thereof": [13, 41, 45], "As": [13, 41, 43, 45, 46, 294, 299], "alwai": [13, 41, 45, 46, 49, 51, 54, 192, 208], "you": [13, 41, 43, 45, 46, 197, 288, 289, 294, 297, 298, 299], "must": [13, 28, 30, 41, 45, 46, 49, 103, 275, 289, 293, 294, 299], "decid": [13, 41, 45, 174, 288, 297], "happen": [13, 41, 45, 294], "still": [13, 41, 45, 46, 179, 288, 297, 298, 299], "time": [13, 41, 45, 46, 49, 51, 54, 57, 82, 84, 85, 87, 89, 93, 95, 98, 103, 106, 109, 111, 121, 123, 131, 136, 145, 155, 160, 161, 162, 172, 178, 180, 182, 189, 202, 224, 226, 228, 251, 288, 290, 297, 299], "out": [13, 18, 19, 41, 45, 46, 84, 85, 103, 131, 134, 136, 138, 141, 144, 147, 149, 161, 166, 168, 171, 173, 197, 207, 213, 233, 266, 267, 288, 289, 293, 297, 299], "can": [13, 41, 43, 45, 46, 49, 51, 54, 87, 89, 98, 103, 166, 171, 174, 188, 190, 191, 197, 198, 199, 220, 226, 261, 288, 289, 290, 293, 294, 297, 298, 299], "ed": [13, 41, 45], "mani": [13, 41, 45, 46, 168, 189, 289, 294, 297, 299], "rais": [13, 41, 45, 46, 49, 51, 54, 58, 82, 84, 85, 87, 89, 98, 101, 103, 104, 106, 144, 155, 197, 261, 293], "runtimeerror": [13, 41, 45, 46], "attempt": [13, 41, 45, 46, 57], "made": [13, 41, 45, 46], "would": [13, 41, 45, 46, 198, 200, 207, 288, 297, 299], "caus": [13, 41, 45, 46, 299], "deadlock": [13, 41, 45], "error": [13, 41, 45, 46, 58, 103, 144, 238, 239, 255, 259, 289, 293, 298], "ha": [13, 41, 45, 46, 103, 131, 134, 136, 138, 141, 144, 147, 149, 180, 182, 186, 188, 190, 191, 255, 266, 288, 293, 294, 295, 297, 299], "been": [13, 41, 45, 180, 186, 188, 190, 191, 204, 205, 299], "do": [13, 18, 19, 41, 45, 46, 84, 85, 95, 131, 193, 194, 217, 220, 222, 288, 289, 293, 294, 297, 298, 299], "so": [13, 41, 45, 46, 95, 182, 288, 298, 299], "setdaemon": [13, 41, 45], "setnam": [13, 41, 45], "": [13, 34, 41, 43, 45, 46, 82, 84, 87, 89, 103, 145, 147, 171, 173, 186, 187, 189, 190, 194, 202, 206, 224, 226, 288, 289, 293, 294, 298], "activ": [13, 41, 45, 84, 85, 87, 89, 93, 95, 98, 163, 171, 172, 176, 177, 180, 226, 289, 296, 297, 298, 299], "most": [13, 41, 45, 46, 289, 297, 299], "onc": [13, 41, 45, 46, 197, 294, 297, 298, 299], "arrang": [13, 41, 45], "invok": [13, 41, 45, 46], "separ": [13, 41, 45, 46, 163, 220, 245, 289, 293, 295], "more": [13, 41, 45, 46, 131, 134, 136, 138, 141, 144, 147, 149, 288, 289, 296, 298, 299], "than": [13, 28, 30, 41, 45, 46, 49, 84, 85, 87, 207, 289, 299], "finish": [13, 144, 168], "boolean": [13, 41, 45, 46, 166, 171, 172, 174, 175, 176, 177, 179, 180, 186, 188, 189, 190, 191, 192], "indic": [13, 28, 41, 45, 46, 49, 166, 171, 172, 174, 175, 176, 177, 179, 180, 186, 188, 189, 190, 191, 202, 206, 208, 213, 224, 266, 294], "otherwis": [13, 14, 18, 19, 21, 41, 45, 46, 84, 85, 87, 162, 163, 188, 190, 191, 204, 205, 207, 224, 256, 293], "Its": [13, 41, 45], "inherit": [13, 41, 45, 46, 57, 188, 190], "creat": [13, 14, 41, 45, 46, 78, 95, 131, 136, 138, 141, 144, 149, 195, 226, 229, 231, 232, 233, 235, 253, 258, 259, 267, 289, 293, 296, 298, 299], "main": [13, 23, 41, 45, 166, 176, 177, 178, 179, 188, 190, 194, 206, 289, 294], "therefor": [13, 41, 45, 46], "entir": [13, 41, 45, 213], "exit": [13, 41, 43, 45, 114, 116, 174, 294], "left": [13, 41, 45, 46, 230, 258, 259, 266, 298], "ident": [13, 41, 45, 294, 297], "identifi": [13, 41, 45, 103, 188, 190, 191, 197, 299], "nonzero": [13, 41, 45, 46], "integ": [13, 41, 45, 46, 174, 228, 229, 230, 231, 233, 235, 289], "get_id": [13, 41, 45], "mai": [13, 41, 45, 46, 166, 179, 200, 289, 293, 294, 298, 299], "recycl": [13, 41, 45], "anoth": [13, 41, 45, 46, 288, 289, 297, 298, 299], "even": [13, 33, 41, 45, 46], "semant": [13, 41, 45], "constructor": [13, 41, 45], "native_id": [13, 41, 45], "nativ": [13, 41, 45, 46], "integr": [13, 41, 45, 299], "id": [13, 41, 45, 58, 59, 67, 68, 71, 87, 89, 109, 111, 114, 116, 134, 138, 141, 147, 149, 155, 163, 166, 168, 173, 174, 177, 179, 180, 204, 205, 226], "neg": [13, 41, 45], "get_native_id": [13, 41, 45], "repres": [13, 41, 45, 174, 186, 188, 190, 191, 195, 198, 199, 204, 205, 206, 207, 288, 297], "report": [13, 41, 45, 131, 136, 138, 141, 144, 147, 149, 226, 289], "kernel": [13, 41, 45], "selflock": 13, "pool": 14, "featur": [14, 45, 163, 226, 289, 291, 296], "associ": [14, 166, 171, 172, 173, 174, 175, 176, 177, 179, 180, 186, 187, 188, 189, 190, 191, 289], "differ": [14, 46, 153, 155, 158, 166, 171, 186, 188, 190, 191, 197, 204, 288, 290, 294, 296, 297, 298, 299], "resourc": [14, 41, 186, 187, 189], "regist": [14, 194, 299], "wrap": [14, 251], "task": [14, 95, 109, 111, 121, 123, 182, 195, 299], "other": [14, 46, 95, 118, 179, 208, 224, 288, 289, 293, 294, 299], "explicit": 14, "creation": [14, 46], "effici": [14, 34], "clear": [14, 46, 160, 161, 186, 187, 189, 197, 226], "move": [14, 46, 98, 103, 106, 123, 131, 134, 136, 138, 141, 144, 147, 149, 153, 155, 158, 168, 172, 175, 180, 204, 205, 213, 224, 226, 288, 294, 297, 299], "todeletelist": 14, "later": 14, "delet": [14, 202, 254, 296], "createthread": 14, "resourcenam": 14, "callback": 14, "cbarg": 14, "cbkarg": 14, "add": [14, 188, 190, 263, 264, 288, 289, 294, 297, 298], "waitlist": [14, 15], "selflockthread": 14, "getrunningthread": 14, "globaltrac": 14, "frame": [14, 33, 34, 35, 36, 84, 85, 87, 89, 163, 166, 168, 172, 173, 174, 177, 179, 180, 188, 204, 205, 213, 224, 226, 295, 299], "event": [14, 18, 19, 190, 191, 206, 226], "trace": [14, 46], "ani": [14, 41, 45, 46, 49, 51, 54, 131, 134, 136, 138, 141, 144, 147, 149, 176, 179, 188, 190, 193, 194, 204, 205, 293, 294, 299], "killthreadinlist": 14, "threadlist": 14, "kill": 14, "localtrac": 14, "movetodelet": 14, "taskthread": 14, "registerresourc": 14, "removethread": 14, "threadtaskwrap": 14, "dequ": 15, "waitlistlock": 15, "log": [18, 19, 22, 23, 49, 51, 54, 84, 85, 177, 264], "exclud": [18, 19], "perform": [18, 19, 28, 103, 163, 166, 171, 173, 174, 179, 180, 186, 187, 189, 193, 208, 224, 294, 296, 299], "messag": [18, 19, 58, 161], "design": [18, 19, 98, 101, 103, 106, 155, 187, 189, 192, 197, 200, 202, 294, 299], "record": [18, 19, 46, 163, 205], "spec": [18, 19, 49, 217, 222], "logger": [18, 19, 22, 49, 51, 54, 226], "which": [18, 19, 43, 46, 49, 51, 54, 131, 134, 136, 138, 141, 144, 147, 149, 166, 174, 177, 179, 186, 187, 188, 189, 190, 191, 195, 198, 206, 213, 226, 273, 274, 288, 289, 294, 295, 297, 299], "togeth": [18, 19], "its": [18, 19, 46, 131, 136, 138, 141, 144, 147, 149, 187, 188, 189, 191, 197, 198, 294], "children": [18, 19], "have": [18, 19, 43, 46, 95, 172, 180, 186, 187, 189, 193, 204, 205, 220, 288, 289, 293, 294, 297, 298, 299], "everi": [18, 19, 131, 275, 288, 297, 299], "logrecord": [18, 19], "includ": [19, 46, 109, 111, 131, 134, 136, 138, 141, 144, 147, 149, 166, 171, 172, 175, 176, 179, 180, 186, 187, 188, 189, 190, 191, 194, 197, 217, 220, 222, 288, 293, 294, 296, 297, 298, 299], "k": [21, 46], "v": [21, 46, 118], "ve": [21, 294], "met": [21, 24], "condit": [21, 24, 46], "kei": [21, 24, 46, 109, 111, 121, 123, 153, 155, 158, 166, 188, 190, 191, 197, 198, 200, 279, 289, 296], "filenam": [21, 46, 54, 89, 202, 226, 256], "test": [21, 46, 78, 147, 160, 161, 162, 163], "logging_configur": 22, "logging_path": [22, 264], "inform": [22, 46, 84, 85, 87, 98, 103, 138, 139, 175, 177, 226, 253, 256, 266, 288, 289, 297, 298], "format": [22, 46, 49, 51, 54, 93, 95, 198, 202, 217, 220, 288, 289, 293, 294, 297], "here": [22, 24, 84, 85, 230, 288, 289, 290, 293, 297], "http": [22, 34, 49, 51, 54, 98, 103, 131, 217, 219, 220, 222, 254, 293, 297, 298, 299], "doc": [22, 98, 131, 222, 254, 293], "org": [22, 217, 222, 254], "3": [22, 46, 217, 222, 235, 238, 239, 254, 273, 274, 275, 293, 294, 295, 297, 298], "librari": [22, 46, 254, 289, 296], "config": [22, 224, 296, 297, 298], "html": [22, 222, 254, 293], "dictschema": 22, "rel": [22, 131, 182, 271, 299], "locat": [22, 28, 46, 103, 153, 155, 158, 264, 288, 298, 299], "folder": [22, 226, 254, 261, 289, 298], "store": [22, 46, 49, 51, 54, 82, 87, 89, 217, 219, 220, 222, 289], "aslm_path": 22, "queue": [23, 168, 206, 226, 299], "listen": [23, 161], "put": [23, 46, 206, 297], "sub": [23, 46, 180, 202, 254], "via": [23, 46, 70, 95, 104, 160, 234, 288, 299], "d": [24, 46, 89, 279, 280], "find_func": 24, "apply_func": 24, "appli": [24, 46, 131, 173, 195, 197, 207], "loop": [24, 46, 163, 174, 294], "todo": [24, 84, 85, 168, 202, 220, 280, 292], "highli": 24, "gener": [24, 46, 54, 89, 136, 147, 161, 172, 173, 202, 222, 238, 239, 240, 275, 293, 294], "doesn": [24, 46], "t": [24, 43, 45, 46, 49, 51, 54, 84, 85, 95, 103, 131, 222], "belong": 24, "might": 24, "nice": 24, "make": [24, 41, 43, 45, 46, 267, 288, 289, 291, 294, 297], "func": [24, 57, 250, 251], "accept": [24, 41, 45, 46, 131, 264, 275, 293, 294], "pair": [24, 188, 190, 191, 226, 294], "match": [24, 46, 200, 240, 275, 288, 293, 299], "d2": 24, "version": [24, 46, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 208, 295, 297, 298], "pass": [24, 41, 45, 46, 54, 93, 95, 187, 188, 189, 190, 197, 226, 288, 290, 293], "img_data": 28, "union": [28, 29, 30, 33, 35, 49, 51, 54, 217, 222, 240], "_supportsarrai": [28, 29, 30, 33, 35, 49, 51, 54, 217, 240], "dtype": [28, 29, 30, 33, 35, 45, 46, 49, 51, 54, 217, 240], "_nestedsequ": [28, 29, 30, 33, 35, 49, 51, 54, 217, 240], "complex": [28, 29, 30, 33, 35, 46, 49, 51, 54, 217, 240], "byte": [28, 29, 30, 33, 35, 46, 49, 51, 54, 103, 106, 217, 240], "boundari": [28, 29, 31, 213, 266], "width": [28, 30, 46, 82, 84, 85, 87, 89, 163, 207, 224, 238, 239, 240, 258, 273], "1": [28, 29, 30, 34, 45, 46, 49, 51, 54, 59, 84, 87, 90, 109, 111, 131, 160, 162, 173, 174, 182, 189, 197, 204, 205, 207, 213, 222, 224, 226, 229, 230, 231, 232, 233, 235, 238, 239, 240, 266, 275, 288, 293, 294, 297, 299], "offset": [28, 30, 33, 35, 36, 46, 82, 84, 85, 87, 89, 121, 123, 153, 155, 158, 160, 168, 169, 172, 173, 224, 226, 230, 231, 232, 233, 235, 238, 239, 240, 259, 297], "varianc": [28, 30, 35, 36, 46, 82, 84, 85, 87, 89, 226], "binari": [28, 46, 259], "search": [28, 200, 298], "tissu": [28, 29, 30, 31, 173, 204, 205, 207, 208, 213], "imag": [28, 29, 30, 31, 33, 35, 36, 38, 46, 49, 54, 82, 84, 85, 87, 89, 95, 118, 163, 168, 171, 173, 176, 180, 202, 204, 205, 207, 208, 213, 224, 226, 238, 239, 240, 261, 267, 275, 294, 295, 299], "npt": [28, 29, 30, 33, 35, 49, 51, 54, 273, 274, 275], "arraylik": [28, 29, 30, 33, 35, 49, 51, 54, 273, 274, 275], "xy": [28, 33, 35, 36, 258], "presenc": [28, 204, 205], "subimag": [28, 30], "smaller": [28, 30, 46], "image_data": [28, 29, 30, 207, 208], "shape": [28, 30, 46, 49, 51, 54, 217, 219, 220, 222, 261], "map": [28, 30, 31, 33, 35, 36, 46, 82, 84, 85, 87, 89, 131, 136, 147, 149, 220, 226, 288, 297], "row": [28, 29, 31, 46, 269, 288], "downsampl": [28, 29, 31, 173], "mag_ratio": 29, "find": [29, 46, 213, 288, 294, 297, 298, 299], "otsu": [29, 173], "threshold": [29, 136, 173, 175, 207, 208], "space": [29, 46, 173, 202, 266, 267], "resampl": 29, "ratio": [29, 36], "tile": [29, 173, 213, 266, 267], "determin": [30, 46, 49, 136, 166, 172, 173, 174, 178, 179, 180, 188, 204, 205, 207, 208], "direct": [31, 46, 82, 84, 85, 87, 89, 213, 238, 239, 240, 258, 299], "offset_map": [33, 35, 36], "comput": [33, 34, 35, 36, 173, 193, 224, 288, 297, 298, 299], "flatfield": 33, "evenli": 33, "illumin": 33, "scmo": [33, 34, 35], "zyx": [33, 35, 36, 49], "defocus": 33, "signal": [33, 34, 35, 36, 95, 123, 161, 163, 166, 171, 172, 174, 175, 179, 180, 186, 189, 190, 191, 194, 195, 204, 205, 206, 226, 231, 294, 299], "np": [33, 34, 36, 38, 45, 46, 82, 84, 85, 87, 89, 103, 162, 202, 207, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 259, 267, 269], "absenc": [33, 35, 36], "oppos": 33, "flatfield_map": 33, "fn": 34, "qe": 34, "82": 34, "ib": 34, "nr": 34, "4": [34, 46, 84, 87, 118, 228, 229, 231, 232, 233, 235, 238, 239, 293, 294, 295, 297], "m": [34, 82, 84, 89, 118, 142, 226, 288, 297, 298], "nois": [34, 36], "www": [34, 103, 299], "hamamatsu": [34, 84, 85, 87, 295], "com": [34, 49, 51, 54, 98, 103, 131, 145, 219, 220, 222, 298, 299], "content": [34, 46, 199, 247, 255, 256, 294], "dam": 34, "photon": 34, "site": 34, "document": [34, 46, 78, 84, 85, 87, 131, 293, 294, 296, 298], "99_sales_librari": 34, "sy": [34, 46], "scas0134e_c13440": 34, "20cu_tec": 34, "pdf": [34, 103], "mean": [34, 41, 45, 46, 239], "sigma": [34, 168, 169], "excess": 34, "factor": [34, 136, 289], "unitless": 34, "quantum": 34, "arrai": [34, 36, 46, 49, 51, 54, 207, 208, 229, 230, 231, 232, 233, 234, 235, 238, 240, 259, 261, 267, 269, 273, 274], "background": [34, 238, 239, 240], "readout": [34, 82, 84, 85, 87, 89, 109, 111, 121, 123, 162, 224], "rm": 34, "em": 34, "gain": [34, 155], "estim": [34, 98, 202], "electron": 34, "numpi": [35, 46, 84, 85, 89, 121, 123, 207, 208, 224, 229, 230, 231, 232, 233, 234, 235, 261, 293], "_array_lik": 35, "_nested_sequ": 35, "dark": 35, "taken": [35, 41, 45, 153, 155, 158], "sequenti": [35, 41, 45, 224], "variance_map": 36, "snr": 36, "input_arrai": 38, "psf_support_diameter_xi": 38, "calcul": [38, 46, 82, 84, 85, 87, 89, 93, 95, 103, 106, 118, 136, 166, 168, 173, 178, 182, 207, 224, 226, 228, 266, 299], "entropi": [38, 168, 226], "ndarrai": [38, 46, 82, 84, 85, 87, 89, 121, 123, 162, 163, 202, 207, 208, 224, 238, 239, 240], "2d": [38, 46, 173, 238, 240], "3d": [38, 49], "iter": [38, 46, 163, 187, 188, 189, 190, 191, 197, 200, 224], "each": [38, 46, 49, 51, 54, 57, 93, 95, 121, 123, 131, 136, 147, 153, 155, 158, 163, 166, 168, 176, 179, 188, 190, 191, 195, 197, 200, 202, 204, 205, 224, 226, 245, 266, 267, 269, 275, 288, 289, 290, 293, 294, 297, 299], "plane": [38, 172, 204, 205, 294, 299], "support": [38, 46, 49, 136, 200, 293, 296, 297], "psf": 38, "dimens": [38, 46, 49, 51, 54, 226, 266, 267, 297], "first_resourc": 41, "resultthread": [41, 42], "access": [41, 45, 46, 49, 51, 54, 288, 298], "order": [41, 46, 179, 187, 189, 197, 288, 297], "thei": [41, 43, 46, 95, 194, 288, 293, 297, 298, 299], "were": [41, 46, 202, 297, 298], "launch": [41, 45, 226, 297], "docstr": [41, 289, 293], "top": [41, 82, 84, 85, 87, 89, 254, 288, 297], "reserv": [41, 45], "futur": [41, 45, 46, 289, 299], "extens": [41, 45, 202], "implement": [41, 45, 46, 49, 51, 54, 87, 136, 138, 144, 147, 149, 192, 220, 288, 296, 299], "noth": [41, 45, 193, 194], "By": [41, 45, 46, 293, 297, 299], "uniqu": [41, 45, 299], "construct": [41, 45, 46, 153, 155, 158, 213], "form": [41, 45, 46, 207, 289, 293, 294, 299], "n": [41, 45, 46, 54, 171, 173, 213, 238, 239, 240, 273, 274, 275, 289, 293, 297, 298], "small": [41, 45, 289], "decim": [41, 45, 46], "invoc": [41, 45], "subclass": [41, 45, 46], "overrid": [41, 45, 49], "sure": [41, 45, 46, 288, 297], "anyth": [41, 45], "els": [41, 45], "get_result": [41, 45], "timeouterror": [41, 45], "standard": [41, 45, 46, 293, 296], "respect": [41, 45, 46, 198, 207, 297], "control": [41, 45, 46, 59, 98, 99, 101, 103, 131, 132, 136, 138, 142, 149, 150, 155, 158, 160, 161, 162, 163, 166, 172, 174, 175, 178, 179, 180, 186, 187, 188, 189, 190, 191, 202, 224, 226, 242, 288, 289, 294, 296, 297], "alia": [42, 44, 46], "initarg": 43, "custom_loop": 43, "close_method_nam": 43, "closearg": 43, "closekwarg": 43, "with_lock": 43, "initkwarg": 43, "child": [43, 45, 188, 190, 191, 195], "act": [43, 46, 296], "like": [43, 46, 261, 266, 288, 293, 297, 298, 299], "isn": [43, 103], "much": [43, 299], "try": [43, 45, 289, 298], "instanc": [43, 46, 166, 171, 195, 269, 288, 297], "behav": [43, 46, 288, 289, 297], "re": [43, 45], "live": [43, 46, 226, 289], "parent": [43, 45, 82, 93, 101, 109, 121, 126, 134, 153], "cours": 43, "spare": 43, "core": [43, 46], "your": [43, 46, 254, 288, 289, 294, 296, 297, 299], "machin": [43, 46, 131, 298], "turn": [43, 109, 111, 114, 116, 224, 226, 288, 294, 297, 299], "cpu": [43, 46], "bound": [43, 131, 134, 136, 138, 141, 144, 147, 149, 173, 288, 297], "parallel": [43, 299], "io": [43, 293], "without": [43, 45, 46, 190, 202, 288, 289, 297, 299], "too": [43, 295], "mental": 43, "overhead": [43, 226], "coder": [43, 289], "our": [43, 45, 46, 87, 89, 217, 220, 222, 288, 289, 296, 297, 298, 299], "automat": [43, 289, 294, 299], "close_method": 43, "custodythread": 44, "simpl": [45, 46, 192, 294], "wish": 45, "had": 45, "chang": [45, 46, 84, 85, 87, 89, 98, 103, 106, 131, 153, 155, 158, 171, 173, 175, 226, 293, 294, 297, 298, 299], "trivial": 45, "save": [45, 54, 87, 131, 134, 136, 138, 141, 144, 147, 149, 168, 180, 198, 202, 226, 253, 256, 294], "u": [45, 46, 289, 299], "line": [45, 46, 82, 84, 85, 87, 89, 226, 258, 271, 289, 293, 294, 297], "code": [45, 46, 49, 51, 54, 87, 90, 160, 168, 219, 220, 222, 271, 288, 291, 293, 294, 296, 297, 298], "def": [45, 293, 294], "doe": [45, 46, 51, 54, 172, 193, 280, 288, 297, 298, 299], "someth": [45, 46, 289, 297], "sum": [45, 46], "ones": 45, "2": [45, 46, 84, 87, 109, 111, 161, 208, 217, 230, 231, 238, 239, 275, 288, 293, 294, 295, 297, 299], "uint8": [45, 46], "problem": [45, 46, 298], "th": [45, 46], "redefin": 45, "solut": [45, 295], "res_th": 45, "assert": 45, "handl": [45, 136, 138, 172, 178, 180, 187, 188, 189, 190, 195, 288, 297], "idea": 45, "attributeerror": [45, 46, 293], "print": [45, 46, 84, 85, 87, 89, 271, 293], "wa": [45, 46, 87, 131, 136, 138, 141, 144, 147, 149, 172, 202, 205, 226, 256], "assertionerror": 45, "dure": [45, 49, 51, 54, 163, 166, 168, 171, 172, 174, 175, 176, 177, 178, 179, 180, 188, 189, 204, 205, 230], "evalu": [45, 46, 202, 251, 273, 274, 275, 289, 297], "rerais": 45, "traceback": [45, 46], "stderr": 45, "don": [45, 84, 85, 131], "affect": [45, 46], "yet": [45, 192, 288], "note": [45, 46, 163, 293, 297], "modifi": [45, 171, 197, 289, 294, 297], "excepthook": 45, "copi": [45, 46, 197, 297], "past": 45, "definit": 45, "work": [45, 46, 95, 289, 298], "shared_memory_nam": 46, "stride": 46, "memori": [46, 226, 289], "output": [46, 68, 70, 95, 131, 136, 233, 293, 299], "objectinsubprocess": 46, "serial": [46, 84, 85, 87, 89, 98, 99, 103, 104, 106, 139, 142, 145, 149, 150, 247, 299], "pretti": 46, "fast": [46, 131], "larg": [46, 289], "regularli": 46, "deal": [46, 220], "sens": 46, "wai": [46, 226, 266, 288, 289, 293, 297], "avoid": [46, 259, 289, 297], "slow": 46, "mayb": 46, "want": [46, 103, 106, 288, 291, 294, 297, 298, 299], "write": [46, 49, 51, 54, 95, 180, 202, 217, 220, 222, 226, 289], "look": [46, 90, 266, 288, 297, 299], "data_buf": 46, "zero": [46, 134, 141, 240], "400": 46, "uint16": 46, "display_buf": 46, "preprocessor": 46, "displai": [46, 58, 93, 95, 198, 226, 294], "num_imag": 46, "show": [46, 226, 294, 298, 299], "payoff": 46, "own": [46, 297], "AND": 46, "realli": 46, "To": [46, 220, 288, 289, 291, 294, 297, 299], "memmap": 46, "axi": [46, 131, 134, 136, 138, 141, 144, 147, 149, 153, 155, 158, 182, 266, 275, 288, 297, 299], "keepdim": 46, "element": [46, 160, 197, 217, 280], "refer": [46, 142, 174, 178, 188, 190, 191, 224, 230, 245, 296], "full": [46, 85, 288, 299], "equival": [46, 298, 299], "argmax": 46, "maximum": [46, 82, 84, 85, 87, 89, 131, 136, 168, 202, 226, 288, 296, 297], "along": [46, 49, 131, 136, 138, 141, 144, 147, 149, 226, 266, 267], "argmin": 46, "minimum": [46, 82, 84, 85, 87, 89, 136, 182, 204, 205, 207, 288, 295, 297], "detail": [46, 103], "argpartit": 46, "kth": 46, "kind": 46, "introselect": 46, "partit": 46, "8": [46, 297], "argsort": 46, "sort": [46, 197], "astyp": 46, "cast": 46, "unsaf": 46, "subok": 46, "typecod": 46, "data": [46, 49, 51, 52, 54, 65, 84, 85, 87, 89, 93, 95, 136, 162, 163, 166, 168, 171, 174, 175, 177, 178, 179, 180, 182, 187, 188, 194, 195, 197, 202, 204, 205, 207, 208, 224, 226, 253, 256, 269, 288, 294, 295, 296], "layout": 46, "fortran": 46, "contigu": 46, "close": [46, 49, 51, 54, 82, 84, 85, 87, 89, 95, 98, 103, 106, 109, 111, 114, 116, 121, 123, 126, 128, 131, 134, 136, 138, 141, 144, 147, 149, 155, 186, 187, 189, 202, 224, 226, 266, 294], "appear": [46, 294, 297], "equiv": 46, "safe": 46, "same_kind": 46, "what": [46, 240, 266, 288, 294, 297], "backward": 46, "compat": [46, 49, 289], "preserv": 46, "within": [46, 131, 134, 136, 138, 141, 144, 147, 149, 195, 198, 207, 275, 289, 294, 297, 298, 299], "float64": 46, "float32": 46, "convers": [46, 84, 85], "done": [46, 84, 85, 103, 224, 226, 288, 297, 298, 299], "forc": 46, "newli": [46, 226], "alloc": 46, "satisfi": [46, 294], "arr_t": 46, "unless": [46, 289], "descript": [46, 293], "17": [46, 299], "one": [46, 54, 131, 134, 136, 138, 141, 144, 147, 149, 179, 187, 188, 190, 191, 226, 288, 293, 294, 299], "field": [46, 288, 297], "9": [46, 297, 298], "numer": [46, 238, 239, 240, 293, 296], "mode": [46, 49, 51, 54, 82, 84, 85, 87, 89, 95, 142, 144, 147, 162, 171, 172, 180, 182, 224, 226, 294, 295, 297, 299], "length": [46, 192, 193, 266, 267, 275, 293], "long": 46, "enough": 46, "complexwarn": 46, "real": [46, 192, 193, 226], "5": [46, 207, 230, 288, 294, 295, 297, 299], "byteswap": 46, "inplac": 46, "swap": 46, "toggl": 46, "low": [46, 266, 295], "endian": 46, "big": [46, 202], "represent": [46, 49, 51, 54, 197, 198, 219, 220, 222, 280, 294], "place": [46, 197, 288, 297, 299], "imaginari": 46, "part": [46, 197, 289], "individu": [46, 177, 296], "view": [46, 160, 161, 162, 163, 217, 222, 226, 289, 296], "256": 46, "8755": 46, "int16": 46, "hex": 46, "0x1": 46, "0x100": 46, "0x2233": 46, "13090": 46, "0x3322": 46, "b": [46, 103, 104], "ceg": 46, "fac": 46, "s3": 46, "newbyteord": 46, "produc": [46, 279], "choos": [46, 293, 294], "choic": [46, 294], "index": [46, 49, 67, 68, 95, 103, 153, 155, 158, 175, 180, 197, 202, 222, 224, 226, 238, 239, 240, 261, 288, 297], "clip": 46, "One": [46, 54], "compress": [46, 202], "select": [46, 93, 95, 121, 123, 224, 294, 299], "slice": [46, 49, 261, 275], "conj": 46, "conjug": 46, "wise": 46, "veri": 46, "similar": [46, 188, 190, 191, 288, 289, 293, 297], "behavior": [46, 188, 190, 191, 289, 293, 294, 299], "copyto": 46, "prefer": 46, "6": [46, 222, 294, 297], "fill": [46, 168, 214], "c_contigu": 46, "cumprod": 46, "cumul": 46, "product": [46, 131, 289, 296, 299], "cumsum": 46, "diagon": 46, "axis1": 46, "axis2": 46, "In": [46, 220, 288, 289, 294, 297, 299], "previou": [46, 89], "restrict": 46, "dump": 46, "pickl": 46, "back": [46, 217, 220, 230, 294, 299], "pathlib": 46, "now": [46, 172, 217, 298], "scalar": 46, "assign": [46, 194], "flatten": [46, 238], "collaps": 46, "major": 46, "style": [46, 293, 299], "column": 46, "ravel": [46, 238], "flat": 46, "getfield": 46, "certain": [46, 297], "need": [46, 84, 85, 87, 89, 166, 168, 171, 172, 182, 187, 188, 190, 191, 192, 193, 195, 197, 202, 224, 226, 266, 288, 293, 294, 297, 298, 299], "fit": [46, 168, 169, 238, 239, 293], "complex128": 46, "16": [46, 202], "take": [46, 195, 198, 200, 207, 224, 267], "bit": [46, 49, 51, 54, 202, 220], "12": [46, 297], "larger": 46, "itself": [46, 197, 293], "skip": 46, "begin": [46, 166, 186, 187, 189, 204, 205], "diag": 46, "j": [46, 118], "item": [46, 197, 286, 288, 297], "variabl": [46, 118, 179, 192, 193, 195, 204, 205, 207, 289, 293, 298, 299], "case": [46, 289], "int_typ": 46, "interpret": 46, "singl": [46, 49, 118, 131, 136, 138, 141, 144, 147, 149, 233, 261, 266], "nd": 46, "suitabl": 46, "longdoubl": 46, "clongdoubl": 46, "becaus": [46, 288], "lose": 46, "void": 46, "buffer": [46, 84, 85, 87, 89, 162, 163, 202, 224, 226], "defin": [46, 57, 166, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 187, 189, 191, 194, 220, 275, 288, 294, 297], "speed": [46, 103, 131, 144, 147, 155, 289, 295], "up": [46, 49, 51, 54, 87, 90, 95, 136, 161, 166, 180, 182, 258, 294, 297, 299], "arithmet": 46, "optim": [46, 166, 299], "math": 46, "random": [46, 89], "seed": 46, "123": 46, "randint": 46, "7": [46, 230, 294, 295, 297, 298], "itemset": 46, "There": [46, 220, 299], "least": 46, "last": [46, 197, 266, 298], "Then": [46, 294], "faster": [46, 179], "two": [46, 197, 226, 288, 293, 297, 299], "first": [46, 153, 155, 158, 160, 179, 197, 220, 266, 288, 293, 294, 297, 298, 299], "compar": [46, 168], "syntax": 46, "some": [46, 49, 51, 54, 219, 220, 222, 289, 294, 298, 299], "increas": [46, 289], "particular": [46, 299], "howev": [46, 289, 299], "discourag": 46, "among": 46, "complic": 46, "insid": [46, 298], "amax": 46, "averag": 46, "amin": 46, "new_ord": 46, "arr": 46, "newbytord": 46, "specif": [46, 103, 131, 166, 176, 177, 178, 190, 191, 192, 288, 297, 299], "below": [46, 288, 289, 293, 294, 297, 298], "opposit": 46, "littl": 46, "byteord": 46, "ignor": [46, 217, 289], "new_arr": 46, "reflect": [46, 297], "rearrang": 46, "equal": [46, 197, 207, 293], "greater": [46, 207], "behind": 46, "undefin": 46, "sequenc": [46, 186, 187, 188, 189, 190, 191, 261, 294], "final": [46, 166, 186, 187, 189, 288, 297], "them": [46, 187, 189, 194, 195, 197, 289, 298, 299], "sinc": [46, 299], "22": [46, 182], "algorithm": 46, "etc": [46, 49, 51, 54, 87, 131, 134, 136, 138, 141, 144, 147, 149, 219, 220, 222, 264, 266, 296], "unspecifi": 46, "come": [46, 89], "break": [46, 289, 293], "ti": 46, "paritit": 46, "indirect": 46, "prod": 46, "ptp": 46, "peak": [46, 230, 238, 239, 240], "repeat": [46, 93, 95, 277, 295, 297], "reshap": 46, "unlik": [46, 208], "free": [46, 299], "For": [46, 95, 131, 136, 138, 141, 144, 147, 149, 208, 254, 288, 289, 294, 297, 299], "10": [46, 57, 84, 103, 104, 131, 173, 207, 228, 230, 231, 232, 233, 234, 235, 288, 295, 297], "11": [46, 142, 297, 299], "resiz": 46, "new_shap": 46, "refcheck": 46, "count": [46, 131, 161, 174, 178, 180, 182, 197, 207, 271, 288, 297], "valueerror": [46, 98, 101, 103, 106, 155, 197, 293], "pypi": 46, "reliabl": 46, "systemerror": 46, "behaviour": 46, "bug": [46, 289], "realloc": 46, "area": [46, 207], "consecut": 46, "shrink": 46, "enlarg": 46, "abov": [46, 297], "entri": [46, 186, 242, 288, 294, 297, 299], "referenc": 46, "prevent": 46, "recent": [46, 299], "cannot": 46, "round": 46, "around": [46, 294], "searchsort": 46, "side": [46, 193, 266], "sorter": 46, "maintain": [46, 179, 186, 197], "setfield": 46, "val": [46, 57], "ey": 46, "int32": 46, "0e": 46, "000": 46, "5e": 46, "323": 46, "setflag": 46, "uic": 46, "writeabl": 46, "writebackifcopi": 46, "updateifcopi": 46, "These": [46, 171, 186, 187, 189, 200, 288, 299], "how": [46, 168, 189, 288, 289, 293, 294, 297, 298], "actual": [46, 49, 51, 54, 84, 85, 193, 208, 228, 266, 289], "never": 46, "ultim": 46, "owner": 46, "expos": 46, "interfac": [46, 87, 293], "unpickl": 46, "describ": [46, 293, 294], "written": [46, 49, 202, 289, 293], "properli": [46, 288, 299], "about": [46, 177, 256, 266, 289], "four": [46, 299], "w": [46, 49, 51, 54, 273], "appropri": [46, 289, 298, 299], "compil": 46, "pyarray_resolvewritebackifcopi": 46, "upper": [46, 259, 293], "letter": 46, "well": [46, 296], "f_contigu": 46, "owndata": 46, "stdin": 46, "quicksort": 46, "mergesort": 46, "heapsort": 46, "stabl": [46, 197], "both": [46, 49, 70, 131, 176, 220, 293, 294, 298], "timsort": 46, "under": [46, 288, 294, 296, 297, 299], "cover": [46, 266, 299], "vari": 46, "datatyp": 46, "retain": 46, "15": [46, 240, 275], "lexsort": 46, "partial": 46, "s1": 46, "i8": 46, "squeez": 46, "ax": [46, 131, 134, 136, 138, 141, 144, 147, 149, 288], "std": 46, "ddof": 46, "deviat": [46, 290], "swapax": 46, "interchang": 46, "tobyt": 46, "raw": 46, "short": 46, "exhibit": 46, "u2": 46, "x00": 46, "x01": 46, "x02": 46, "x03": 46, "tofil": 46, "fid": 46, "sep": 46, "text": [46, 259, 293, 294, 298], "independ": [46, 299], "recov": 46, "fromfil": 46, "open": [46, 49, 51, 54, 126, 128, 155, 226, 289, 294, 298, 299], "closest": 46, "conveni": 46, "quick": [46, 131], "storag": [46, 163], "precis": [46, 299], "lost": 46, "good": [46, 289], "intend": [46, 198], "archiv": 46, "transport": 46, "overcom": 46, "expens": 46, "directli": [46, 84, 85, 174, 294, 299], "bypass": 46, "gzipfil": 46, "fileno": 46, "bytesio": 46, "tolist": 46, "ndim": 46, "deep": 46, "nearest": 46, "builtin": 46, "depth": 46, "possibli": [46, 166], "recreat": 46, "although": 46, "sometim": 46, "1d": 46, "almost": 46, "uint32": 46, "a_list": 46, "a_tolist": 46, "addition": [46, 224], "0d": 46, "typeerror": 46, "tostr": 46, "exactli": 46, "despit": 46, "19": 46, "transpos": 46, "effect": [46, 193, 238, 239, 240], "vector": 46, "simpli": [46, 193, 289], "atleast2d": 46, "achiev": 46, "newaxi": 46, "matrix": [46, 103, 217], "permut": 46, "revers": [46, 197], "becom": 46, "altern": [46, 87, 219, 220, 222, 293], "give": [46, 197, 288], "var": 46, "omit": 46, "former": [46, 224], "float_": 46, "descriptor": 46, "again": 46, "omiss": 46, "some_dtyp": 46, "reinterpret": 46, "ndarray_subclass": 46, "regular": [46, 289, 293], "predict": 46, "superfici": 46, "shown": [46, 294, 298], "versu": 46, "int8": 46, "513": 46, "xv": 46, "underli": 46, "20": [46, 207, 297], "i1": 46, "recarrai": 46, "i2": 46, "ctype": 46, "simplifi": 46, "interact": [46, 297], "easier": [46, 197], "themselv": [46, 294], "possess": 46, "ctypeslib": 46, "public": [46, 293], "guid": [46, 131, 289], "undocu": 46, "privat": [46, 293], "_ctype": 46, "pointer": [46, 49, 51, 54, 294], "correct": [46, 136], "arbitrari": [46, 49, 51, 54, 293, 294], "troubl": 46, "crash": [46, 289], "bewar": 46, "_array_interface_": 46, "data_a": 46, "kept": 46, "c_void_p": 46, "dealloc": 46, "spelt": 46, "basetyp": 46, "correspond": [46, 131, 136, 138, 144, 163, 173, 188, 190, 191, 198, 200, 288, 297, 299], "p": [46, 49, 155, 273, 274, 275], "platform": 46, "c_intp": 46, "could": [46, 104, 136, 254, 294, 299], "c_int": 46, "c_long": 46, "c_longlong": 46, "import": [46, 289, 294, 296, 297, 299], "jump": 46, "next": [46, 160, 168, 175, 176, 224, 293, 294, 299], "obj": [46, 98, 103, 155, 293], "_as_parameter_": 46, "perhap": 46, "c_doubl": 46, "keep": [46, 189, 289], "shape_a": 46, "c_short": 46, "strides_a": 46, "as_paramet": 46, "31962608": 46, "c_uint32": 46, "__main__": 46, "lp_c_uint": 46, "0x7ff2fc1fc200": 46, "c_uint": 46, "c_uint64": 46, "c_ulong": 46, "4294967296": 46, "_intern": 46, "c_long_array_2": 46, "0x7ff2fc1fce60": 46, "0x7ff2fc1ff320": 46, "segment": [46, 226], "o": [46, 248, 254, 255, 259, 298], "borrow": [46, 49, 51, 54, 219, 220, 222], "subsequ": [46, 297], "while": [46, 144, 288], "remain": [46, 131, 174, 178, 179, 189], "alreadi": [46, 188, 289, 298], "circumst": 46, "alter": [46, 131], "previous": 46, "onto": [46, 299], "fnc": 46, "carrai": 46, "ca": 46, "farrai": 46, "fa": 46, "lowercas": 46, "arbitrarili": 46, "truli": [46, 299], "simultan": [46, 54, 131, 289, 299], "dimension": 46, "higher": [46, 168], "dim": [46, 261], "hold": [46, 256], "items": 46, "flatit": 46, "similarli": [46, 220], "built": [46, 197, 290], "arang": 46, "sqrt": 46, "0j": 46, "1j": 46, "70710678": 46, "nbyte": [46, 49, 51, 54], "total": [46, 136, 168, 175, 189, 207, 226, 266, 288], "consum": 46, "480": 46, "usual": 46, "infer": 46, "fail": [46, 288, 294, 297], "unchang": 46, "incompat": 46, "modif": [46, 289], "desir": [46, 84, 85, 87, 89, 153, 155, 158, 171, 173, 226, 264], "obtain": 46, "suggest": 46, "int_": 46, "relev": [46, 177, 192, 293], "further": 46, "overflow": 46, "fix": [46, 174, 289], "travers": 46, "explan": 46, "found": [46, 58, 82, 84, 85, 87, 89, 98, 103, 226, 288, 289, 297, 298], "rst": 46, "imagin": 46, "40": 46, "known": [46, 299], "tell": [46, 288, 289], "lib": 46, "stride_trick": 46, "as_strid": 46, "13": 46, "14": [46, 275, 297], "18": 46, "21": 46, "23": 46, "48": 46, "224": 46, "1344": 46, "813": 46, "file_nam": [49, 51, 54, 217, 220, 222], "datasourc": [49, 52, 54, 202], "bigdataview": [49, 217, 220], "sourc": [49, 51, 52, 54, 136, 182, 202, 295, 299], "hdf5": 49, "n5": 49, "multi": [49, 172, 175, 180, 188, 190, 191, 294, 299], "resolut": [49, 144, 171, 173, 182, 213, 226, 295], "pyramid": [49, 51, 54], "subdivid": 49, "32x32x1": 49, "r": [49, 51, 54, 269, 274], "h5py": 49, "zarr": 49, "n5store": 49, "ds_name": 49, "dataset": 49, "metadata": [49, 51, 54, 172, 217, 222], "bigdataviewermetadata": 49, "set_metadata_from_configuration_experi": [49, 51, 54], "kw": [49, 51, 54, 217, 220, 222], "metdata": [49, 51, 54], "concept": [49, 51, 54, 219, 220, 222], "microscopi": [49, 51, 54, 118, 166, 171, 172, 174, 175, 176, 177, 178, 179, 180, 219, 220, 222], "github": [49, 51, 54, 219, 220, 222, 296, 297, 298], "dx": [49, 51, 54], "micron": [49, 51, 54, 131, 134, 136, 141, 144, 295], "dy": [49, 51, 54], "dz": [49, 51, 54], "dt": [49, 51, 54], "displac": [49, 51, 54], "dc": [49, 51, 54, 229], "shape_x": [49, 51, 54], "shape_i": [49, 51, 54], "shape_z": [49, 51, 54], "shape_t": [49, 51, 54], "shape_c": [49, 51, 54], "voxel_s": [49, 51, 54, 217, 219, 220, 222], "voxel": [49, 51, 54, 217, 219, 220, 222], "xyczt": [49, 51, 54, 217, 219, 220, 222], "clean": [49, 51, 54, 180, 182, 296], "leftov": [49, 51, 54], "get_slic": 49, "subdiv": 49, "grab": [49, 160], "timepoint": [49, 54, 172, 178, 297], "subdivis": 49, "dictproxi": [49, 51, 54, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 82, 84, 85, 87, 89, 126, 128, 131, 134, 136, 141, 153, 158], "notimplementederror": [49, 51, 54], "deriv": [49, 51, 54], "getter": [49, 51, 54, 293], "account": [49, 51, 54, 109, 111, 280], "xyz": [49, 131], "bdv": 49, "rather": [49, 299], "file_typ": [52, 202, 217, 220, 222], "tif": [52, 54, 202, 261], "tifdatasourc": 52, "is_bigtiff": 54, "tiff": [54, 89, 202, 220, 222, 261], "bigtiff": 54, "tifffil": 54, "save_directori": [54, 202, 253], "generate_image_nam": [54, 202], "current_channel": [54, 162, 202, 224], "current_time_point": [54, 202], "intern": [54, 182, 219, 220, 222], "ch00_000000": [54, 202], "stack": [54, 87, 89, 168, 172, 178, 180, 182, 204, 205, 294, 299], "At": 54, "imsav": 54, "dummi": [56, 192, 193, 194], "n_tri": 57, "retri": 57, "connect": [57, 64, 66, 67, 68, 69, 70, 71, 72, 82, 84, 85, 87, 89, 95, 98, 99, 101, 103, 104, 106, 109, 111, 114, 116, 121, 123, 126, 128, 131, 132, 134, 136, 138, 139, 141, 142, 144, 145, 147, 149, 150, 153, 155, 156, 158, 224, 226, 288, 297, 299], "startup": [57, 288, 297], "tri": [57, 289], "redial": 57, "baseexcept": 57, "dcam": [57, 299], "incorrect": 58, "device_typ": 58, "camera_id": 59, "is_synthet": [59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 162, 224, 289], "synthet": [59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 89, 90, 95, 128, 147, 162, 224, 226, 288, 290, 297], "dedic": [61, 62, 63, 65, 66, 70, 72], "multiproces": [61, 63, 65, 66, 67, 68, 69, 70, 71, 72, 82, 84, 85, 87, 89, 126, 153], "device_connect": [64, 66, 67, 68, 69, 70, 71, 72, 82, 84, 85, 87, 89, 98, 101, 103, 106, 109, 111, 114, 116, 121, 123, 126, 128, 131, 134, 136, 138, 141, 144, 147, 149, 155, 158, 224, 289], "acquisit": [65, 82, 84, 85, 87, 89, 93, 95, 109, 111, 136, 166, 171, 172, 174, 175, 178, 179, 180, 182, 202, 224, 226, 294, 295, 296], "filterwheel": 66, "scan": [67, 87, 131, 147, 172, 182, 204, 205, 295, 299], "switch": [68, 103, 226, 230, 288, 297, 299], "analog": [68, 95, 136, 232, 233, 235, 295], "digit": [68, 70, 299], "trigger": [68, 70, 95, 128, 136, 145, 182, 206, 228, 299], "focus": [69, 121, 230, 264, 295, 296], "shutter": [70, 82, 84, 85, 89, 226, 296], "thorlabsshutt": 70, "syntheticshutt": 70, "ni": [70, 288, 297], "card": [70, 136, 226, 296], "thu": [70, 297, 299], "enabl": [70, 93, 95, 106, 131, 134, 136, 138, 141, 144, 147, 149, 155, 180, 290, 293, 295, 299], "mock": 78, "dxl_lib": 78, "magicmock": 78, "nameerror": 82, "calculate_light_sheet_exposure_tim": [82, 84, 85, 87, 89], "full_chip_exposure_tim": [82, 84, 85, 87, 89], "shutter_width": [82, 84, 85, 87, 89], "exposur": [82, 84, 85, 87, 89, 93, 95, 109, 111, 121, 123, 136, 162, 182, 224, 226, 228, 288], "light": [82, 84, 85, 87, 89, 226, 297, 299], "sheet": [82, 84, 85, 87, 89, 226, 297, 299], "roll": [82, 84, 89], "exposure_tim": [82, 84, 85, 87, 89, 93, 95, 109, 111, 121, 123, 136, 224, 226, 230, 288, 297], "camera_line_interv": [82, 84, 85, 87, 89, 226], "hamamatsuorca": [82, 85, 87, 89, 288, 297], "interv": [82, 84, 85, 87, 89, 226, 288, 299], "durat": [82, 84, 85, 87, 89, 95, 98, 103, 106, 136, 145, 155, 226, 228, 251], "close_camera": [82, 84, 85, 87, 89], "get_line_interv": [82, 84, 85, 87, 89], "line_interv": [82, 87, 89, 297], "get_offset_variance_map": [82, 84, 85, 87, 89, 226], "filenotfounderror": [82, 84, 85, 87, 89, 261], "set_readout_direct": [82, 84, 85, 87, 89], "bottom": [82, 84, 85, 87, 89, 294, 297], "bytrigg": [82, 84, 85, 89], "diverg": [82, 84, 85, 89], "camera_control": [82, 84, 85, 87, 89], "camera_paramet": [82, 84, 85, 87, 89], "is_acquir": [82, 84, 85, 87, 89, 226], "acquir": [82, 84, 85, 87, 89, 172, 173, 175, 180, 182, 202, 224, 226, 288, 294, 299], "max_image_height": [82, 84, 85, 87, 89], "height": [82, 84, 85, 87, 89, 163, 224, 258], "max_image_width": [82, 84, 85, 87, 89], "min_image_height": [82, 84, 85, 87, 89], "min_image_width": [82, 84, 85, 87, 89], "step_image_height": [82, 84, 85, 87, 89], "step_image_width": [82, 84, 85, 87, 89], "camerabas": [84, 87, 89], "orca": [84, 87], "flash": [84, 87, 295], "fusion": 84, "lightn": 84, "serial_numb": [84, 85, 87, 89, 142, 149, 288, 297], "302158": [84, 288, 297], "302159": 84, "302352": [84, 288, 297], "lightsheet_rolling_shutter_width": [84, 297], "608": [84, 297], "defect_correct_mod": [84, 297], "off": [84, 109, 111, 114, 116, 160, 224, 226, 294], "On": 84, "x_pixels_step": 84, "y_pixels_step": 84, "x_pixels_min": 84, "y_pixels_min": 84, "exposure_time_rang": [84, 297], "1000": [84, 288, 289, 297], "flip_x": 84, "flip_i": 84, "calculate_readout_tim": [84, 85, 87, 89], "assum": [84, 85, 98, 153, 155, 158, 182, 202, 213, 217, 220, 222, 254, 261, 267, 288, 298], "c13440": [84, 85], "link": [84, 85, 254], "commun": [84, 85, 99, 104, 106, 132, 163, 288, 297, 299], "pull": [84, 85, 289, 297], "readout_tim": [84, 85, 87, 89, 123, 162, 224], "max_frame_r": [84, 85, 87, 89], "framer": [84, 85, 87, 89], "think": [84, 85], "get_property_valu": [84, 85, 90], "close_image_seri": [84, 85, 87, 89], "seri": [84, 85, 87, 89], "stop": [84, 85, 87, 89, 95, 109, 111, 121, 123, 131, 134, 136, 138, 141, 144, 147, 149, 161, 163, 186, 189, 197, 224, 226], "line_interval_tim": [84, 85, 87, 89], "get_minimum_waiting_tim": [84, 85, 87, 89], "cyclic_trigger_period": [84, 85, 87], "minimum_trigger_blank": [84, 85, 87], "minimum_trigger_interv": [84, 85, 87], "trigger_blank": [84, 85, 87], "bigger": [84, 85, 87], "trigger_interv": [84, 85, 87], "get_new_fram": [84, 85, 87, 89], "initialize_image_seri": [84, 85, 87, 89], "data_buff": [84, 85, 87, 89, 162, 163, 202, 224, 226], "number_of_fram": [84, 85, 87, 89, 163, 224, 226], "100": [84, 85, 87, 89, 161, 288, 295, 297], "report_set": [84, 85, 87, 89], "consol": [84, 85], "set_roi": [84, 85, 87, 89], "roi_height": [84, 85, 87, 89], "2048": [84, 85, 89, 297], "roi_width": [84, 85, 87, 89], "region": [84, 85, 87, 89, 173, 266], "success": [84, 85, 131, 136, 138, 141, 144, 147, 149, 171, 172, 176, 177, 179, 206, 224, 226, 293], "set_bin": [84, 85, 87, 89], "binning_str": [84, 85, 87, 89], "bin": [84, 85, 87, 89, 226, 297], "1x1": [84, 85, 87, 297], "2x2": [84, 85, 87, 89], "4x4": [84, 85, 87, 89], "8x8": [84, 85, 87, 89], "16x16": [84, 85, 87], "1x2": [84, 85, 87], "2x4": [84, 85, 87], "set_exposure_tim": [84, 85, 87, 89], "unit": [84, 85, 87, 89, 131, 134, 141, 228, 229, 230, 231, 232, 233, 235, 295, 299], "millisecond": [84, 85, 87, 89, 136, 226, 288, 290, 297], "set_line_interv": [84, 85, 87, 89], "set_sensor_mod": [84, 85, 87, 89], "sensor": [84, 85, 87, 89, 189, 226], "chip": 85, "photometr": 87, "kinetix": 87, "warn": [87, 103], "Not": [87, 90, 147, 220, 228], "hard": [87, 90, 168], "3200": 87, "successfulli": [87, 132, 163, 224, 256, 299], "down": [87, 230, 258, 294], "programm": 87, "static": [87, 168], "generate_new_fram": 89, "load_imag": [89, 226], "pre": [89, 93, 95, 194, 226, 294], "camera_exposure_tim": 89, "current_frame_idx": 89, "num_of_fram": [89, 226], "pre_frame_idx": 89, "random_imag": 89, "idprop": 90, "property_dict": 90, "property_valu": 90, "set_property_valu": 90, "calculate_all_waveform": [93, 95, 224], "sweep_tim": [93, 95, 109, 111, 121, 123, 136, 224, 228, 229, 230, 231, 232, 233, 235, 297], "organ": [93, 95, 195], "sweep": [93, 95, 109, 111, 121, 123, 136, 162, 224], "waveform_dict": [93, 95, 109, 111, 121, 123, 136], "etl": [93, 95, 264], "plu": [93, 95], "enable_microscop": [93, 95], "camera_delai": [93, 95, 228, 230], "camera_delay_perc": [93, 95, 109, 111, 121, 123, 136], "percentag": [93, 95, 173, 204, 205, 207, 208, 224, 234], "camera_high_tim": [93, 95], "high": [93, 95, 171, 266, 295], "camera_pulse_perc": [93, 95], "daq_paramet": [93, 95], "remote_focus_ramp_fal": [93, 95, 109, 111, 121, 123, 136], "ramp": [93, 95, 109, 111, 121, 123, 230], "fall": [93, 95, 121, 123, 230], "sample_r": [93, 95, 109, 111, 121, 123, 136, 228, 229, 230, 231, 232, 233, 235, 297], "waveform_expand_num": [93, 95], "expand": [93, 95, 277, 297], "waveform_repeat_num": [93, 95], "daqbas": 95, "add_camera": 95, "close_task": [95, 109, 111, 121, 123], "counter": [95, 299], "create_camera_task": 95, "create_galvo_remote_focus_task": 95, "create_master_trigger_task": 95, "master": 95, "prepare_acquisit": [95, 224, 226], "channel_kei": [95, 109, 111, 121, 123], "prepar": [95, 109, 111, 121, 123, 166, 168, 176, 179, 182, 186, 187, 189, 224, 226], "run_acquisit": [95, 226], "set_external_trigg": 95, "external_trigg": 95, "extern": [95, 200, 297, 299], "start_task": [95, 109, 111, 121, 123], "won": 95, "run_task": 95, "stop_acquisit": [95, 226], "stop_task": [95, 109, 111, 121, 123], "update_analog_task": 95, "board_nam": 95, "board": [95, 299], "write_waveforms_to_task": 95, "analog_output": 95, "is_updating_analog_task": 95, "trigger_mod": [95, 297], "wait_to_run_lock": 95, "filterwheelbas": [98, 103, 106], "asi": [98, 99, 131, 132, 182, 288, 297], "asiimag": [98, 131], "fw_1000": 98, "fw": 98, "1000_ascii_command_set": 98, "check_if_filter_in_filter_dictionari": [98, 101, 103, 106], "filter_nam": [98, 101, 103, 106], "filter_exist": [98, 101, 103, 106], "port": [98, 99, 103, 104, 106, 116, 132, 145, 155, 156, 288, 297, 299], "filter_change_delai": [98, 103, 106], "40m": 98, "adjac": 98, "set_filt": [98, 103, 106], "wait_until_don": [98, 103, 106, 131, 136, 138, 141, 144, 147, 149, 153, 155, 158, 224, 226], "active_filter_wheel": 98, "filter_dictionari": [98, 101, 103, 106], "tiger": [98, 99, 131, 132, 224], "filter_wheel_posit": 98, "number_of_filter_wheel": [98, 103, 106], "wait_until_done_delai": [98, 103, 106], "wheel_posit": [98, 101, 103, 106], "comport": [99, 104, 106], "baudrat": [99, 104, 106, 288, 297], "115200": [99, 132, 288, 297], "25": [99, 104, 145], "build": [99, 104, 139, 145, 245, 253, 294], "asifilterwheel": 99, "com1": [99, 104, 106, 132], "baud": [99, 104, 106, 132, 145], "tiger_control": [99, 131, 224], "tigercontrol": 99, "sutter": [103, 104, 145, 290, 295], "lambda": [103, 104, 275, 295], "manual": 103, "lb10": 103, "3_opman": 103, "retriev": [103, 136, 163, 194, 253, 264, 289], "delay_matrix": 103, "page": [103, 118], "38": [103, 297], "rang": [103, 131, 166, 168, 172, 197, 293], "num_byt": [103, 106], "userwarn": [103, 104, 144], "respond": 103, "init_finish": 103, "softwar": [103, 136, 138, 147, 149, 226, 288, 289, 291, 294, 297, 299], "complet": [103, 179, 188, 190, 194, 294], "read_on_init": 103, "movement": [103, 131, 134, 136, 138, 141, 144, 147, 149, 175, 180, 288, 297], "sutterfilterwheel": [104, 288, 297], "9600": [104, 106, 132, 288, 297], "instal": [106, 226, 296, 299], "period": [106, 230], "galvo_id": [109, 111], "galvanomet": [109, 224, 296], "adjust": [109, 111, 121, 123, 171, 172, 224, 226, 288, 299], "basi": [109, 111, 299], "channel_1": [109, 111], "channel_2": [109, 111], "prepare_task": [109, 111, 121, 123], "turn_off": [109, 111, 114, 116], "device_config": [109, 111, 114, 116, 121, 123, 289], "galvo_max_voltag": [109, 111, 136], "voltag": [109, 111, 121, 123, 136, 229, 230, 232, 235], "galvo_min_voltag": [109, 111, 136], "galvo_nam": [109, 111], "galvo_waveform": [109, 111, 289], "sawtooth": [109, 111, 230, 289], "rise": [109, 111, 230], "galvobas": 111, "laser_id": [114, 116], "initialize_las": [114, 116], "set_pow": [114, 116], "laser_intens": [114, 116], "power": [114, 116, 169, 224, 288, 291, 294, 297, 299], "intens": [114, 116, 202, 233, 238, 239, 240], "turn_on": [114, 116], "laserbas": 116, "calculate_entrance_pupil": 118, "entranc": 118, "pupil": 118, "incid": 118, "angl": 118, "fluoresc": 118, "interfer": 118, "contrast": 118, "carolin": 118, "ajo": 118, "franklin": 118, "prasad": 118, "ganesan": 118, "steven": 118, "boxer": 118, "biophi": 118, "volum": [118, 275], "89": 118, "issu": [118, 289, 298], "octob": 118, "2005": 118, "2759": 118, "2769": 118, "entrance_pupil_diamet": 118, "diamet": 118, "millimet": [118, 141], "nidaqmx": 121, "percent_smooth": [121, 123, 234, 297], "smooth": [121, 123, 224, 234, 297], "remote_focus_delai": [121, 123, 136, 230], "remote_focus_max_voltag": [121, 123], "remote_focus_min_voltag": [121, 123], "remotefocusbas": 123, "volt": [123, 136, 229, 230, 231, 232, 233, 235, 299], "close_shutt": [126, 128], "open_shutt": [126, 128], "shutter_st": [126, 128], "state": [126, 128, 131, 186, 187, 189, 226, 277, 288, 294, 297], "shutterbas": 128, "deliv": [128, 299], "device_id": [131, 134, 136, 138, 141, 144, 147, 149], "stagebas": [131, 136, 138, 141, 144, 147, 149], "scientif": 131, "instrument": [131, 136, 141, 142, 288, 295], "serial_command": 131, "command_quick_start": 131, "firmwar": 131, "distanc": [131, 136, 168, 175, 180, 266, 273, 274, 275, 290], "10th": 131, "ever": 131, "ftp": [131, 299], "stilt": 131, "strain": 131, "system": [131, 195, 202, 224, 226, 238, 239, 240, 288, 289, 295, 297, 298, 299], "get_abs_posit": [131, 134, 136, 138, 141, 144, 147, 149], "axis_ab": [131, 134, 136, 138, 141, 144, 147, 149], "request": [131, 134, 136, 138, 141, 144, 147, 149, 163, 289], "absolut": [131, 134, 136, 138, 141, 144, 147, 149, 289], "get_axis_posit": [131, 147], "get_position_dict": [131, 134, 136, 138, 141, 144, 147, 149], "get_spe": [131, 147], "veloc": [131, 144, 147, 182, 288, 297, 299], "move_absolut": [131, 136, 138, 141, 144, 147, 149], "move_dictionari": [131, 134, 136, 138, 141, 144, 147, 149], "x_ab": [131, 134, 136, 138, 141, 144, 147, 149], "micromet": [131, 134, 136, 138, 141, 144, 147, 149, 290], "degre": [131, 134, 136, 138, 141, 144, 147, 149, 182], "spot": [131, 136, 138, 141, 144, 147, 149], "move_axis_absolut": [131, 136, 138, 141, 144, 147, 149], "abs_po": [131, 136, 138, 141, 144, 147, 149], "command": [131, 153, 158, 160, 226, 289, 298], "prefix": [131, 136], "x_min": [131, 136, 144, 288, 297], "report_posit": [131, 136, 138, 141, 144, 147, 149], "scanr": [131, 147], "start_position_mm": [131, 147], "end_position_mm": [131, 147], "enc_divid": [131, 147], "end": [131, 147, 163, 168, 172, 179, 180, 186, 187, 189, 194, 197, 204, 205, 224, 226, 288, 289, 293, 294], "encod": [131, 147, 182, 299], "set_spe": [131, 147], "velocity_dict": [131, 147], "start_scan": [131, 147], "abruptli": [131, 134, 136, 138, 141, 144, 147], "stop_scan": [131, 147], "verify_abs_posit": [131, 134, 136, 138, 141, 144, 147, 149], "is_strict": [131, 134, 136, 138, 141, 144, 147, 149], "y_ab": [131, 134, 136, 138, 141, 144, 147, 149], "abs_posit": [131, 134, 136, 138, 141, 144, 147, 149], "verify_mov": 131, "submit": 131, "aren": 131, "res_dict": 131, "axes_map": [131, 134, 136, 138, 141, 144, 147, 149, 288, 297], "stage_feedback": [131, 134, 136, 138, 141, 144, 147, 149], "feedback": [131, 134, 136, 138, 141, 144, 147, 149], "stage_limit": [131, 134, 136, 138, 141, 144, 147, 149], "com_port": [132, 145], "baud_rat": [132, 145], "asi_stag": 132, "x_po": [134, 141, 288], "y_po": [134, 141, 288], "matter": [134, 141], "piezo": [136, 295], "nation": [136, 295], "send": [136, 161, 163], "calculate_waveform": 136, "logic": [136, 138, 144, 147, 149, 189, 190], "axes_channel": [136, 297], "distance_threshold": 136, "stage_settle_dur": 136, "settl": 136, "trigger_sourc": [136, 297, 299], "volts_per_micron": [136, 297], "scale": [136, 275], "mad": [138, 139, 295], "citi": [138, 139, 295], "lab": [138, 139, 289, 295, 298], "mcl": 138, "mcl_control": 138, "serialnum": [139, 150], "stage_connect": [139, 142], "physik": [141, 142], "pi": [141, 142, 231, 235, 288, 297], "xyzf": 141, "position_dict": [141, 147, 149], "wait_on_target": 141, "pi_ax": 141, "pi_devic": [141, 142], "pi_tool": [141, 142], "controller_nam": 142, "reference_mod": 142, "863": 142, "0112345678": 142, "111": 142, "1dg": 142, "frf": [142, 288, 297], "mp": [144, 290], "285": [144, 290], "mp285": [144, 145, 295], "device_ax": 144, "stage_x_po": 144, "stage_y_po": 144, "stage_z_po": 144, "sutterstag": 145, "load_sampl": 147, "mm": [147, 182], "divid": [147, 182, 207, 266], "unload_sampl": 147, "unload": [147, 226], "default_spe": 147, "thorlab": [149, 150, 288, 295, 297], "kim": [149, 150], "kim_ax": 149, "kim_control": [149, 150], "device_control": 153, "build_stage_dict": [153, 155, 158], "stage_posit": [153, 155, 158, 224, 297], "ideal": [153, 155, 158, 294], "solvent": [153, 155, 158], "babb": [153, 155, 158, 297], "63x": [153, 155, 158, 297], "1x": [153, 155, 158, 297], "70775": [153, 155, 158], "2x": [153, 155, 158, 230, 295, 297], "72455": [153, 155, 158], "3x": [153, 155, 158, 297], "72710": [153, 155, 158], "4x": [153, 155, 158, 297], "72795": [153, 155, 158], "5x": [153, 155, 158, 297], "72850": [153, 155, 158], "6x": [153, 155, 158, 297], "72880": [153, 155, 158], "refract": [153, 155, 158, 238, 239, 240], "follow": [153, 155, 158, 166, 173, 176, 198, 200, 289, 293, 294, 297, 298], "servo": [153, 155, 156, 158, 299], "read_posit": [153, 155, 158], "cur_posit": [153, 155, 158], "set_zoom": [153, 155, 158], "confirm": [153, 155, 158, 202, 294, 299], "tha": [153, 158], "zoomdict": [153, 155, 158], "zoomvalu": [153, 155, 158], "zoombas": [155, 158], "dynamixel": 155, "4096": 155, "addr_mx_goal_posit": 155, "goal": 155, "addr_mx_moving_spe": 155, "addr_mx_p_gain": 155, "addr_mx_present_posit": 155, "addr_mx_torque_en": 155, "torqu": [155, 299], "addr_mx_torque_limit": 155, "goal_position_offset": 155, "port_num": [155, 156], "sleeptim": 155, "sleep": 155, "torque_dis": 155, "disabl": [155, 297], "torque_en": 155, "dynamixelzoom": [156, 288, 297], "dummyview": 160, "sec": 160, "append": [160, 163, 197, 226, 269], "sent": 160, "oldest": 160, "pop": [160, 197], "move_stag": [160, 224, 226], "configuration_control": 160, "configurationcontrol": 160, "menu_control": 160, "menu": [160, 294], "menucontrol": 160, "off_stage_po": 160, "stage_po": 160, "timecost": 161, "cost": 161, "pipe": [161, 163, 226], "generate_messag": 161, "sendout": 161, "receiv": [161, 163, 180, 190, 191, 204, 205, 226, 299], "in_port": 161, "msg_count": 161, "out_port": 161, "sendout_msg_count": 161, "stop_flag": [161, 163], "devices_dict": [162, 224], "calculate_exposure_sweep_tim": [162, 224], "data_func": [163, 173, 174, 177, 179, 226], "respons": [163, 166, 169, 171, 173, 175, 186, 187, 188, 189, 190, 191, 194, 224, 296], "continu": [163, 172, 174, 175, 180, 298, 299], "applic": [163, 166, 187, 189, 289], "shutdown": [163, 299], "signal_func": [163, 171, 172, 174, 175, 176, 178, 179, 180, 206], "reset": [163, 182, 186, 187, 189], "frame_id": [163, 166, 168, 173, 174, 177, 179, 180, 202, 204, 205, 226], "increment": [163, 204, 205, 288, 295], "util": [163, 166], "end_flag": [163, 186, 189], "feature_list": [163, 195, 198, 199, 200, 226], "active_microscop": [163, 226], "dummymicroscop": 163, "active_microscope_nam": [163, 213, 226], "data_buffer_posit": [163, 226], "data_contain": 163, "data_pip": 163, "data_record": 163, "data_thread": [163, 226], "dummydevic": 163, "img_height": [163, 224, 226], "img_width": [163, 224, 226], "signal_contain": 163, "signal_pip": 163, "signal_record": 163, "signal_thread": [163, 226], "autofocu": [166, 226, 294], "measur": [166, 266], "microscopemodel": [166, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180], "config_t": [166, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 202, 204, 294], "node": [166, 172, 179, 180, 186, 187, 188, 189, 190, 191, 195, 294], "pre_func_sign": [166, 168, 182, 204, 205, 294], "in_func_sign": [166, 168, 204, 205, 294], "action": [166, 171, 180, 186, 190, 191], "end_func_sign": [166, 168, 204, 205, 294], "pre_func_data": [166, 168, 204, 205, 294], "in_func_data": [166, 168, 204, 205, 294], "end_func_data": [166, 168, 204, 205, 294], "involv": [166, 171, 172, 174, 175, 176, 177, 178, 179, 180, 187, 189], "autom": [166, 175, 296], "carri": [166, 171], "device_ref": 168, "autofocus_frame_queu": 168, "autofocus_pos_queu": 168, "max_entropi": [168, 226], "f_frame_id": 168, "frame_num": 168, "init_po": 168, "f_po": [168, 288], "focus_po": [168, 226], "target_frame_id": 168, "get_frames_num": 168, "plot_data": 168, "total_frame_num": 168, "fine_step_s": 168, "fine": [168, 289], "fine_pos_offset": 168, "coarse_step_s": 168, "coars": [168, 295], "coarse_step": 168, "signal_id": 168, "target_channel": 168, "routin": [168, 169, 296], "get_autofocus_frame_num": 168, "best": [168, 289], "get_step": 168, "step_siz": [168, 288, 297], "autofocus": 168, "travel": 168, "pos_offset": 168, "figur": [168, 289], "robust_autofocu": 168, "robust": 168, "amplitud": [168, 169, 229, 230, 231, 232, 233, 235, 297], "alpha": [168, 169], "unfortun": 168, "unstabl": 168, "x_offset": [169, 288, 297], "y_offset": [169, 288, 297], "tent": 169, "curv": 169, "resolution_mod": 171, "zoom_valu": 171, "reconfigur": [171, 294], "accordingli": [171, 175, 178], "typic": [171, 175, 176, 177, 186, 187, 189, 190, 194, 198, 200, 230, 289], "adapt": 171, "resum": [171, 175, 226, 293], "cleanup": [171, 175, 179, 180, 182, 186, 187, 189, 195, 294], "generate_meta_data": [172, 202], "pre_signal_func": [172, 179, 180], "signal_end": [172, 180], "cycl": [172, 180], "update_channel": [172, 180], "confoc": [172, 297], "project": [172, 202, 297], "conpro_cycling_mod": 172, "n_plane": [172, 297], "need_to_move_new_plan": 172, "offset_end": 172, "offset_start": 172, "offset_step_s": 172, "offset_update_tim": 172, "scanrang": 172, "overlap": [173, 213, 266, 267], "target_resolut": [173, 213], "nanoscal": [173, 213, 297], "target_zoom": [173, 213], "detect": [173, 204, 205, 207, 208], "grid": [173, 267], "interest": 173, "box": [173, 275, 294, 298, 299], "flexibl": [174, 178, 299], "dynam": [174, 178, 200, 294], "track": [174, 179, 186, 189, 204, 205, 267], "decrement": 174, "data_fram": 174, "step_by_fram": 174, "advanc": [175, 288, 289, 294], "tabl": [175, 180, 194, 269], "proper": [175, 298, 299], "paus": [175, 178, 226, 288], "current_idx": 175, "being": [175, 180, 242], "multiposition_t": 175, "position_count": 175, "pre_z": 175, "stage_distance_threshold": 175, "virtual": [176, 224, 226], "primari": [176, 294], "readi": [176, 207, 224, 226, 297], "transit": [176, 187, 189], "prepare_next_channel": [176, 224], "captur": [177, 204, 205], "pause_num": 178, "microscopest": [178, 202, 213, 294], "manner": [179, 288, 297], "slower": 179, "improv": [179, 289], "proce": 179, "first_enter_nod": 179, "enter": [179, 298], "help": [179, 288, 293, 297], "releas": 179, "held": 179, "pre_data_func": [179, 180], "variablewithlock": 179, "pause_data_lock": 179, "pause_signal_lock": 179, "get_origin": 180, "saving_flag": 180, "saving_dir": 180, "origin": [180, 298], "cleanup_data_func": 180, "end_data_func": 180, "in_data_func": 180, "incom": 180, "current_focus_posit": 180, "current_position_idx": 180, "current_z_posit": 180, "defocu": 180, "focus_step_s": 180, "image_writ": [180, 226], "writer": [180, 226], "imagewrit": [180, 226, 294], "need_to_move_new_posit": 180, "need_to_move_z_posit": 180, "number_z_step": 180, "stack_cycling_mod": 180, "start_focu": 180, "start_z_posit": 180, "z_position_moved_tim": 180, "z_step_siz": 180, "inject": 182, "rotari": 182, "45": 182, "396": 182, "nm": [182, 238, 239, 240, 295], "quadratur": 182, "88": 182, "motion": [182, 295], "optic": [182, 238, 239, 240, 297], "root": [186, 187, 189, 195, 217, 220, 222, 279, 280], "cleanup_list": [186, 187, 189], "tree": [186, 187, 188, 189, 190, 191, 195, 294], "consist": [186, 189, 288, 289, 293], "treenod": [186, 187, 188, 189, 190], "curr_nod": [186, 189], "is_clos": [186, 189], "serv": [186, 192, 193], "special": [187, 188, 189, 293], "analysi": [187, 294], "mark": [187, 188, 226], "feature_nam": [188, 190, 191], "func_dict": [188, 190, 191], "node_typ": [188, 190, 191, 294], "device_rel": [188, 190, 191, 294], "need_respons": [188, 190, 191, 294], "those": [188, 190, 191], "is_mark": 188, "node_nam": [188, 190, 191], "node_func": [188, 190, 191], "is_initi": [188, 190, 191], "sibl": [188, 190, 191, 195], "statu": 188, "meet": [188, 289], "criteria": 188, "set_properti": [188, 190, 191], "number_of_execut": 189, "remaining_number_of_execut": 189, "wait_respons": [189, 190], "placehold": [192, 193, 208], "unus": [192, 193], "often": [192, 297], "situat": [192, 193], "context": 192, "feature_modul": 194, "func_typ": 194, "essenti": 194, "init": [194, 294], "dummy_func": 194, "dummy_tru": 194, "signalnod": 195, "datanod": 195, "signalcontain": 195, "datacontain": 195, "shared_vari": 195, "create_nod": 195, "build_feature_tre": 195, "assist": 195, "particularli": 197, "shared_list__": 197, "__name__": 197, "__str__": 197, "compon": [197, 224, 299], "meaning": 197, "shallow": 197, "occurr": 197, "9223372036854775807": 197, "indexerror": 197, "IN": 197, "ascend": 197, "descend": 197, "transmit": 198, "parenthes": [198, 294, 298], "squar": [198, 207, 239], "bracket": [198, 297], "easili": 198, "network": 198, "func1": [198, 200], "arg1": [198, 200], "arg2": [198, 200], "func2": [198, 200], "func3": [198, 200], "arg3": [198, 200], "func4": [198, 200], "feature_parameter_setting_path": 200, "function_nam": 200, "yml": [200, 256], "inspect": 200, "value1": 200, "value2": 200, "sub_dir": 202, "image_nam": 202, "disk": [202, 254, 255, 256], "sharedndarrai": [202, 224, 226, 289], "ext": [202, 299], "meta": 202, "save_imag": 202, "data_sourc": 202, "mip": 202, "mip_directori": 202, "num_of_channel": 202, "calculate_and_check_disk_spac": 202, "suffici": [202, 204, 205], "wherea": [202, 297], "64": 202, "color": 202, "vestigi": 202, "75": [204, 205], "detect_func": [204, 205], "analyz": [204, 205, 208], "consid": [204, 205, 207, 208, 224, 289], "detect_tissu": [204, 205], "phase": [204, 205, 231, 232, 235, 297], "position_record": [205, 206], "detecttissueinstack": [205, 294], "position_flag": 206, "remove_posit": 206, "exce": 207, "slide": 207, "approach": [207, 299], "preprocess": 207, "service_url": 211, "flipx": 213, "flipi": 213, "debug": 213, "outer": 213, "img": 214, "xl": 214, "yl": 214, "xu": 214, "yu": 214, "65535": 214, "xmlmetadata": [217, 222], "xml": [217, 220, 222, 279, 280], "section": [217, 293, 296, 298], "arxiv": 217, "ab": 217, "1412": 217, "0488": 217, "affine_matrix_to_stage_posit": 217, "mat": 217, "affin": 217, "parse_xml": [217, 220], "pars": [217, 220, 264, 279, 280], "stage_positions_to_affine_matrix": 217, "to_xml": [217, 220, 222], "write_xml": [217, 220, 222], "header": [217, 220, 222, 271], "om": [220, 222, 280], "proprietari": 220, "address": [220, 298], "_xml_dict": 220, "ome_tiff_xml_dict": [220, 222], "Will": [220, 290], "xml_tool": 220, "openmicroscopi": 222, "uid": 222, "heirarch": 222, "ome_dict": 222, "is_virtu": 224, "assemble_device_config_list": 224, "device_nam": [224, 289], "device_name_dict": 224, "assembl": 224, "device_config_list": 224, "device_name_list": 224, "end_acquisit": [224, 226], "get_readout_tim": 224, "get_stage_posit": [224, 226], "load_and_start_devic": 224, "is_list": 224, "device_ref_nam": 224, "move_remote_focu": 224, "pos_dict": [224, 226, 242], "update_focu": 224, "central": 224, "move_stage_offset": 224, "former_microscop": 224, "experiment": 224, "stop_stag": [224, 226], "turn_off_las": 224, "turn_on_las": 224, "update_data_buff": [224, 226], "update_stage_limit": 224, "limits_flag": 224, "ask_stage_for_posit": 224, "ask": [224, 226], "available_channel": 224, "central_focu": 224, "current_laser_index": 224, "laser_wavelength": 224, "wavelength": [224, 238, 239, 240, 297], "ret_pos_dict": [224, 226], "stages_list": 224, "event_queu": 226, "architectur": [226, 289, 295, 296], "argpars": [226, 264], "namespac": [226, 264, 280], "change_resolut": 226, "resolution_valu": 226, "create_pip": 226, "pipe_nam": 226, "duplex": 226, "end1": 226, "destroy_virtual_microscop": 226, "destroi": 226, "disconnect": 226, "get_active_microscop": 226, "get_camera_line_interval_and_exposure_tim": 226, "number_of_pixel": 226, "get_data_buff": 226, "512": 226, "get_feature_list": 226, "idx": 226, "feature_list_str": 226, "get_microscope_info": 226, "microscope_info": 226, "offset_variance_map": 226, "launch_virtual_microscop": 226, "load_feature_list_from_fil": 226, "load_feature_list_from_str": 226, "load_feature_record": 226, "folcer": 226, "pause_data_thread": 226, "turn_off_flag": 226, "release_pip": 226, "resume_data_thread": 226, "run_command": 226, "run_data_process": 226, "run_live_acquisit": 226, "stream": 226, "gui": [226, 269, 296], "recalcul": 226, "therebi": 226, "peopl": 226, "simplified_data_process": 226, "show_img_pip": 226, "snap_imag": 226, "due": 226, "update_ilastik_set": 226, "display_segment": 226, "mark_posit": 226, "target_label": 226, "ilastik": [226, 297], "label": 226, "acquisition_count": 226, "ask_to_pause_data_thread": 226, "autofocus_on": 226, "camera_wait_iter": 226, "abort": 226, "current_exposure_tim": 226, "f_posit": 226, "image_count": 226, "imaging_mod": 226, "is_liv": 226, "is_sav": 226, "physic": [226, 288, 297], "pause_data_ev": 226, "pause_data_ready_lock": 226, "plot_pip": 226, "plot": 226, "pre_exposure_tim": 226, "start_tim": 226, "stop_send_sign": 226, "total_acquisition_count": 226, "total_image_count": 226, "virtual_microscop": 226, "100000": [228, 229, 230, 231, 232, 233, 235, 288, 297], "meant": 228, "visual": 228, "hz": [228, 229, 230, 231, 232, 233, 235], "exposure_start": 228, "exposure_end": 228, "reson": [229, 295], "drive": [229, 232, 235, 296, 299], "typical_galvo": [229, 231], "24": 230, "stai": 230, "linearli": 230, "drop": [230, 294], "right": [230, 258, 266, 294, 298, 299], "exchang": 230, "etl_ramp": 230, "tunable_lens_ramp": 230, "etl_delai": 230, "frequenc": [231, 232, 235, 297], "duty_cycl": [231, 235, 297], "50": [231, 235, 297], "5707963267948966": 231, "radian": [231, 232, 235], "sine": [232, 297], "typical_las": [232, 235], "pulse_width": 233, "ttl": 233, "typical_ttl_puls": 233, "convolut": 234, "smoothed_waveform": 234, "141592653589793": 235, "na": [238, 239, 240], "wvl": [238, 239, 240], "pixel_s": [238, 239, 240, 275, 297], "gaussian": [238, 239, 240], "radial": [238, 239, 240], "waist": [238, 239, 240], "apertur": [238, 239, 240], "r0": [238, 240], "z0": [238, 240], "w0": [238, 240], "i0": [238, 240], "bg0": 238, "rl": 240, "zl": 240, "33": 240, "488": [240, 295, 297], "bg": 240, "common": [242, 299], "model": [242, 289, 291, 294, 296], "variabletyp": 244, "ref_nam": 245, "funclist": 246, "combin": [246, 296], "new_func": 246, "proxi": [247, 298], "module_nam": 248, "file_path": [248, 255], "statement": [251, 289], "wrap_func": 251, "saving_set": 253, "popup": [253, 294], "walk": 254, "everyth": 254, "reachabl": 254, "symbol": 254, "caution": 254, "danger": 254, "config_data": 255, "file_directori": 256, "content_dict": 256, "image_width": 258, "300": 258, "image_height": 258, "200": [258, 288, 295, 297], "draw": 258, "arrow": 258, "ojbect": 258, "piec": [259, 290], "font": 259, "font_siz": 259, "fp": 261, "lazi": 261, "pil": 261, "containt": 261, "low_res_fp": 261, "2022": 261, "07": 261, "02": 261, "cell_001": 261, "low_r": 261, "imshow": 261, "500": [261, 288, 297], "parser": [263, 264], "argumentpars": [263, 264], "argumentparserobject": 263, "dist": 266, "roi_length": 266, "roi": [266, 267], "watch": 266, "sign": [266, 267, 273, 274], "num_til": 266, "x_start": 267, "x_tile": 267, "x_length": 267, "x_overlap": 267, "y_start": 267, "y_tile": 267, "y_length": 267, "y_overlap": 267, "z_start": 267, "z_tile": 267, "z_length": 267, "z_overlap": 267, "theta_start": 267, "theta_til": 267, "theta_length": 267, "theta_overlap": 267, "f_start": 267, "f_tile": 267, "f_length": 267, "f_overlap": 267, "f_track_with_z": 267, "fov": 267, "rotat": [267, 297], "n_posit": 267, "po": 269, "redraw": 269, "panda": 269, "datafram": 269, "multi_position_t": 269, "multiposit": 269, "begin_start": 271, "half": 273, "radiu": 274, "subsample_z": 275, "nxnxn": 275, "euclidean": 275, "rescal": 275, "subsampl": [275, 297], "128": 275, "29": 275, "waveform_template_nam": 277, "waveform_template_dict": 277, "microscope_state_dict": 277, "repeat_num": 277, "expand_num": 277, "tag": 279, "elementtre": 280, "etre": 280, "fullnam": [285, 286], "escap": [285, 286], "underlin": [285, 286], "rubric": 286, "endfor": 286, "endif": 286, "endblock": 286, "filter_wheel": [288, 297], "com19": [288, 297], "number_of_wheel": [288, 297], "controllernam": [288, 297], "884": [288, 297], "l": [288, 295, 297], "509": [288, 295, 297], "20dg10": [288, 295, 297], "40dg10": [288, 297], "060": [288, 297], "dg": [288, 297], "406": [288, 297], "4pd": [288, 297], "nostag": [288, 297], "refmod": [288, 297], "119060508": [288, 297], "74000375": [288, 297], "servo_id": [288, 297], "com18": [288, 297], "1000000": [288, 297], "manufactur": [288, 290, 297, 299], "123456789": [288, 297], "com7": [288, 297], "instanti": [288, 297], "eg": [288, 297], "emploi": [288, 297], "syntheticstag": [288, 297], "987654321": [288, 297], "notic": [288, 297], "syntheticzoom": [288, 297], "abbrevi": 288, "y_unload_posit": 288, "10000": [288, 297], "y_load_posit": 288, "90000": 288, "startfocu": 288, "75000": 288, "x_max": [288, 297], "33500": 288, "16000": 288, "y_max": [288, 297], "y_min": [288, 297], "z_max": [288, 297], "50000": 288, "z_min": [288, 297], "25000": 288, "f_max": [288, 297], "f_min": [288, 297], "theta_max": [288, 297], "360": [288, 297], "theta_min": [288, 297], "x_rot_posit": 288, "y_rot_posit": 288, "z_rot_posit": 288, "x_step": [288, 297], "y_step": [288, 297], "z_step": [288, 297], "theta_step": [288, 297], "f_step": [288, 297], "25250": 288, "40000": 288, "z_po": 288, "70000": 288, "theta_po": 288, "z_offset": [288, 297], "f_offset": [288, 297], "theta_offset": [288, 297], "explicil": [288, 297], "explictli": 288, "fashion": 288, "queri": 288, "awar": 288, "pimikromov": 288, "third": [288, 297], "spinbox": [288, 297], "develop": [288, 296, 297, 299], "plan": [288, 297], "go": [288, 297, 298], "forward": [288, 297], "widget": [288, 297], "tab": 288, "interval_tim": [288, 297], "eventu": 288, "frequent": [288, 298], "ch00": 288, "ch01": 288, "ch02": 288, "laser_pow": [288, 297], "inclus": 288, "stack_acquisit": [288, 297], "start_po": [288, 297], "end_po": [288, 297], "stack_paus": [288, 297], "5000": [288, 297], "welcom": 289, "pleas": [289, 297, 298], "fork": 289, "branch": 289, "review": 289, "practic": 289, "outlin": [289, 297], "refactor": 289, "reach": 289, "prior": [289, 299], "happi": 289, "bring": 289, "discuss": 289, "strong": 289, "especi": 289, "disrupt": 289, "clariti": 289, "team": 289, "merg": 289, "aslm": [289, 290, 294, 296, 297, 298, 299], "repositori": [289, 296, 298], "conda": [289, 298], "pip": [289, 298], "dev": [289, 299], "pep8": 289, "camelcas": 289, "lowercase_and_separated_by_underscor": 289, "numpydoc": [289, 293], "sphinx": [289, 293], "leverag": 289, "workflow": [289, 294], "enforc": 289, "rare": 289, "ruff": 289, "complain": 289, "start_stag": 289, "exec": 289, "device_startup_funct": 289, "start_": 289, "noqa": 289, "comment": [289, 293], "easi": [289, 298], "opportun": 289, "alert": 289, "pytest": 289, "appl": 289, "encount": 289, "resolv": 289, "oserror": 289, "ulimit": 289, "hand": 289, "abstract": [290, 296], "layer": [290, 296], "divers": [290, 299], "equip": [290, 295], "accompani": 290, "contribut": [290, 294, 296], "encourag": [291, 294], "engag": [291, 294], "collabor": [291, 294], "guidelin": [291, 296], "restructuredtext": 293, "liter": 293, "example_numpi": 293, "py": 293, "blank": 293, "implicitli": 293, "anytim": 293, "bodi": 293, "indent": 293, "stand": 293, "surround": 293, "unind": 293, "module_level_variable1": 293, "inlin": 293, "immedi": 293, "mix": [293, 295, 299], "convent": 293, "_numpi": 293, "readthedoc": 293, "en": 293, "latest": 293, "12345": 293, "module_level_variable2": 293, "98765": 293, "span": 293, "colon": 293, "function_with_types_in_docstr": 293, "param1": 293, "param2": 293, "pep": 293, "484": 293, "annot": 293, "_": [293, 299], "function_with_pep484_type_annot": 293, "duplic": 293, "compli": 293, "module_level_funct": 293, "obviou": [293, 296], "paragraph": 293, "example_gener": 293, "yield": 293, "doctest": 293, "illustr": 293, "exampleerror": 293, "msg": 293, "human": 293, "readabl": 293, "exampleclass": 293, "summari": 293, "declar": 293, "decor": [293, 294], "attr1": 293, "attr2": 293, "param3": 293, "attr3": 293, "attr4": 293, "attr5": 293, "readonly_properti": 293, "readwrite_properti": 293, "setter": 293, "notabl": 293, "mention": [293, 297], "example_method": 293, "__special__": 293, "member": 293, "doubl": 293, "underscor": 293, "napoleon_include_special_with_doc": 293, "conf": 293, "__special_without_docstring__": 293, "_privat": 293, "napoleon_include_private_with_doc": 293, "_private_without_docstr": 293, "snap": 294, "pictur": 294, "common_featur": 294, "zstackacquisit": 294, "discret": 294, "cosin": 294, "transform": 294, "volumesearch": 294, "ilastiksegment": 294, "detecttissueinstackandrecord": 294, "removeemptyposit": 294, "constantvelocityacquisit": 294, "changeresolut": 294, "conproacquisit": 294, "findtissuesimple2d": 294, "loopbycount": 294, "movetonextpositioninmultipositiont": 294, "preparenextchannel": 294, "stackpaus": 294, "waittocontinu": 294, "dictat": 294, "few": 294, "cleanup_func_sign": 294, "cleanup_func_data": 294, "acqusit": 294, "failsaf": 294, "latter": 294, "inde": 294, "proceed": 294, "intellig": 294, "explain": 294, "featurelist": 294, "tool": [294, 296, 299], "feature_related_funct": 294, "feature_exampl": 294, "selected_channel": 294, "navig": [294, 298], "4a": 294, "dialog": 294, "analys": 294, "whole": 294, "preview": 294, "ok": 294, "click": [294, 298, 299], "button": [294, 299], "graphic": 294, "omicron": 295, "lighthub": 295, "ultra": 295, "acc": 295, "642": 295, "561": 295, "obi": 295, "unidirect": 295, "bidirect": 295, "repeatablil": 295, "borderlin": 295, "gpu": 295, "nvidia": 295, "titan": 295, "rtx": 295, "cuda": 295, "driver": [295, 299], "456": 295, "71": 295, "grabber": [295, 299], "optotun": 295, "electrotun": 295, "len": 295, "blink": 295, "pxie": [295, 299], "1073": 295, "chassi": 295, "pxi6733": [295, 297], "pxi6259": [295, 297, 299], "32mm": 295, "position": 295, "nano": 295, "coher": 295, "647": 295, "piezojena": 295, "pcie": 295, "6738": 295, "lfa": [295, 299], "2010": [295, 299], "linear": [295, 299], "actuat": [295, 299], "novanta": [295, 299], "cr": 295, "khz": 295, "ut": 296, "southwestern": 296, "ecosystem": 296, "aim": 296, "recip": 296, "maker": 296, "minim": 296, "priorit": 296, "stabil": 296, "brutal": 296, "maxim": 296, "biolog": 296, "download": [296, 299], "git": 296, "environ": [296, 297], "troubleshoot": 296, "multiscal": 296, "expans": 296, "opm": 296, "v2": 296, "ct": 296, "v1": 296, "spectral": 296, "tirf": 296, "overview": 296, "dichroic": 296, "turret": 296, "mechan": [296, 297], "deform": 296, "mirror": 296, "introduct": 296, "edit": 296, "log_fil": 296, "zach": 296, "marin": 296, "anni": 296, "wang": 296, "dax": 296, "collison": 296, "kevin": 296, "dean": [296, 298], "sampath": 296, "rapuri": 296, "renil": 296, "gupta": 296, "samir": 296, "mamtani": 296, "andrew": 296, "jamieson": 296, "york": 296, "nathaniel": 296, "thayer": 296, "rest_api_config": 297, "waveform_templ": 297, "exact": 297, "confus": 297, "recommend": [297, 298], "anaconda": [297, 298], "prompt": [297, 298, 299], "sh": [297, 298], "thereaft": 297, "conflict": 297, "master_trigger_out_lin": [297, 299], "camera_trigger_out_lin": [297, 299], "laser_port_switch": 297, "laser_switch_st": 297, "pixel_size_in_micron": 297, "sensor_mod": 297, "progress": [297, 299], "readout_direct": 297, "readout_spe": 297, "trigger_act": 297, "trigger_polar": 297, "throughout": 297, "000075": 297, "display_acquisition_subsampl": 297, "average_frame_r": 297, "969": 297, "frames_to_averag": 297, "remote_focus_devic": 297, "ao2": [297, 299], "ramp_rising_perc": 297, "85": 297, "ramp_falling_perc": 297, "ao0": [297, 299], "99": 297, "57079": 297, "wheel_numb": 297, "filter_wheel_delai": 297, "030": 297, "available_filt": 297, "rfp": 297, "595": 297, "31": 297, "far": [297, 298], "red": 297, "blp01": 297, "647r": 297, "blocked1": 297, "blocked2": 297, "blocked3": 297, "blocked4": 297, "blocked5": 297, "blocked6": 297, "earlier": 297, "joystick_ax": 297, "coordin": 297, "agre": [297, 299], "vertic": [297, 299], "vice": 297, "versa": 297, "627": 297, "1711": 297, "2301": 297, "2710": 297, "3079": 297, "3383": 297, "609": 297, "255": 297, "044": 297, "port0": [297, 299], "line0": 297, "onoff": [297, 299], "line2": 297, "luxx": 297, "87": 297, "remote_focus_const": 297, "336": 297, "percent_delai": 297, "562nm": 297, "galvo_const": 297, "mesoscal": 297, "other_const": 297, "duty_wait_dur": 297, "url": 297, "127": 297, "repo": 298, "desktop": 298, "friendli": 298, "head": 298, "miniconda": 298, "websit": 298, "handi": 298, "cheatsheet": 298, "accustom": 298, "pin": [298, 299], "taskbar": 298, "mycomput": 298, "firewal": 298, "utsw": 298, "campu": 298, "circumv": 298, "activatin": 298, "packag": 298, "upgrad": 298, "clone": 298, "cd": 298, "mkdir": 298, "myfoldernam": 298, "thedeanlab": 298, "completet": 298, "upon": [298, 299], "shortcut": 298, "windir": 298, "system32": 298, "cmd": 298, "ex": 298, "script": 298, "bat": 298, "http_proxi": 298, "swmed": 298, "edu": 298, "3128": 298, "https_proxi": 298, "typo": 298, "perspect": 298, "onlin": 298, "usersuserprofil": 298, "condarc": 298, "usersuserprofilepippip": 298, "ini": 298, "password": 298, "8080": 298, "sever": 299, "6733": 299, "daqmx": 299, "recogn": 299, "visibl": 299, "scb": 299, "68a": 299, "breakout": 299, "pinout": 299, "mislead": 299, "aspect": 299, "wire": 299, "receipt": 299, "determinist": 299, "jitter": 299, "anticip": 299, "dev1": 299, "dev2": 299, "commonli": 299, "line1": 299, "pfi0": 299, "p0": 299, "pfio": 299, "gate": 299, "attach": 299, "outsid": 299, "bank": 299, "ao6": 299, "ao8": 299, "ao9": 299, "ao10": 299, "compet": 299, "ao": 299, "distribut": 299, "across": 299, "ao14": 299, "ao19": 299, "pxi6723": 299, "With": 299, "ctr0out": 299, "lead": 299, "ground": 299, "36": 299, "usb": 299, "came": 299, "hcimagel": 299, "silicon": 299, "firebird": 299, "framegrabb": 299, "x16": 299, "slot": 299, "motherboard": 299, "excap": 299, "ctr0": 299, "tbd": 299, "pvcam": 299, "sdk": 299, "term": 299, "unknown": 299, "broadcom": 299, "pci": 299, "kit": 299, "bridg": 299, "abl": 299, "pvcamtest": 299, "voic": 299, "coil": 299, "plai": 299, "crucial": 299, "role": 299, "aberr": 299, "electromagnet": 299, "axial": 299, "focal": 299, "shift": 299, "begun": 299, "longer": 299, "sca814": 299, "pneumat": 299, "empow": 299, "cater": 299, "modal": 299, "suit": 299, "seamless": 299, "versatil": 299, "tailor": 299, "research": 299, "sync": 299, "less": 299, "perz": 299, "differenti": 299, "post": 299, "potenti": 299, "damag": 299, "cambridg": 299, "technologi": 299, "scannermax": 299, "mixtur": 299}, "objects": {"aslm": [[0, 0, 0, "-", "config"], [9, 0, 0, "-", "controller"], [16, 0, 0, "-", "log_files"], [25, 0, 0, "-", "model"], [236, 0, 0, "-", "tools"], [281, 0, 0, "-", "view"]], "aslm.config": [[1, 0, 0, "-", "config"]], "aslm.config.config": [[2, 1, 1, "", "build_nested_dict"], [3, 1, 1, "", "get_aslm_path"], [4, 1, 1, "", "get_configuration_paths"], [5, 1, 1, "", "load_configs"], [6, 1, 1, "", "update_config_dict"], [7, 1, 1, "", "verify_experiment_config"], [8, 1, 1, "", "verify_waveform_constants"]], "aslm.controller": [[10, 0, 0, "-", "configuration_controller"], [12, 0, 0, "-", "thread_pool"]], "aslm.controller.configuration_controller": [[11, 2, 1, "", "ConfigurationController"]], "aslm.controller.configuration_controller.ConfigurationController": [[11, 3, 1, "", "__init__"], [11, 4, 1, "", "camera_config_dict"], [11, 4, 1, "", "camera_flip_flags"], [11, 4, 1, "", "camera_pixels"], [11, 3, 1, "", "change_microscope"], [11, 4, 1, "", "channels_info"], [11, 5, 1, "", "configuration"], [11, 4, 1, "", "daq_sample_rate"], [11, 4, 1, "", "filter_wheel_setting_dict"], [11, 5, 1, "", "galvo_num"], [11, 4, 1, "", "galvo_parameter_dict"], [11, 3, 1, "", "get_microscope_configuration_dict"], [11, 3, 1, "", "get_stage_position_limits"], [11, 4, 1, "", "lasers_info"], [11, 5, 1, "", "microscope_config"], [11, 5, 1, "", "microscope_name"], [11, 4, 1, "", "number_of_channels"], [11, 4, 1, "", "remote_focus_dict"], [11, 4, 1, "", "stage_default_position"], [11, 4, 1, "", "stage_flip_flags"], [11, 4, 1, "", "stage_setting_dict"], [11, 4, 1, "", "stage_step"]], "aslm.controller.thread_pool": [[13, 2, 1, "", "SelfLockThread"], [14, 2, 1, "", "SynchronizedThreadPool"], [15, 2, 1, "", "ThreadWaitlist"]], "aslm.controller.thread_pool.SelfLockThread": [[13, 3, 1, "", "__init__"], [13, 4, 1, "", "daemon"], [13, 3, 1, "", "getName"], [13, 4, 1, "", "ident"], [13, 3, 1, "", "isDaemon"], [13, 3, 1, "", "isLocked"], [13, 3, 1, "", "is_alive"], [13, 3, 1, "", "join"], [13, 4, 1, "", "name"], [13, 4, 1, "", "native_id"], [13, 3, 1, "", "run"], [13, 5, 1, "", "selfLock"], [13, 3, 1, "", "setDaemon"], [13, 3, 1, "", "setName"], [13, 3, 1, "", "start"], [13, 3, 1, "", "unlock"], [13, 3, 1, "", "wait"]], "aslm.controller.thread_pool.SynchronizedThreadPool": [[14, 3, 1, "", "__init__"], [14, 3, 1, "", "clear"], [14, 3, 1, "", "createThread"], [14, 3, 1, "", "getRunningThread"], [14, 3, 1, "", "globaltrace"], [14, 3, 1, "", "killThreadInList"], [14, 3, 1, "", "localtrace"], [14, 3, 1, "", "moveToDelete"], [14, 3, 1, "", "registerResource"], [14, 3, 1, "", "removeThread"], [14, 5, 1, "", "resources"], [14, 3, 1, "", "threadTaskWrapping"], [14, 5, 1, "", "toDeleteList"]], "aslm.controller.thread_pool.ThreadWaitlist": [[15, 3, 1, "", "__init__"], [15, 5, 1, "", "waitlist"], [15, 5, 1, "", "waitlistLock"]], "aslm.log_files": [[17, 0, 0, "-", "filters"], [20, 0, 0, "-", "log_functions"]], "aslm.log_files.filters": [[18, 2, 1, "", "NonPerfFilter"], [19, 2, 1, "", "PerformanceFilter"]], "aslm.log_files.filters.NonPerfFilter": [[18, 3, 1, "", "__init__"], [18, 3, 1, "", "filter"]], "aslm.log_files.filters.PerformanceFilter": [[19, 3, 1, "", "__init__"], [19, 3, 1, "", "filter"]], "aslm.log_files.log_functions": [[21, 1, 1, "", "find_filename"], [22, 1, 1, "", "log_setup"], [23, 1, 1, "", "main_process_listener"], [24, 1, 1, "", "update_nested_dict"]], "aslm.model": [[26, 0, 0, "-", "analysis"], [39, 0, 0, "-", "concurrency"], [47, 0, 0, "-", "data_sources"], [55, 0, 0, "-", "device_startup_functions"], [73, 0, 0, "-", "devices"], [159, 0, 0, "-", "dummy"], [164, 0, 0, "-", "features"], [215, 0, 0, "-", "metadata_sources"], [223, 0, 0, "-", "microscope"], [225, 0, 0, "-", "model"], [227, 0, 0, "-", "waveforms"]], "aslm.model.analysis": [[27, 0, 0, "-", "boundary_detect"], [32, 0, 0, "-", "camera"], [37, 0, 0, "-", "image_contrast"]], "aslm.model.analysis.boundary_detect": [[28, 1, 1, "", "binary_detect"], [29, 1, 1, "", "find_tissue_boundary_2d"], [30, 1, 1, "", "has_tissue"], [31, 1, 1, "", "map_boundary"]], "aslm.model.analysis.camera": [[33, 1, 1, "", "compute_flatfield_map"], [34, 1, 1, "", "compute_noise_sigma"], [35, 1, 1, "", "compute_scmos_offset_and_variance_map"], [36, 1, 1, "", "compute_signal_to_noise"]], "aslm.model.analysis.image_contrast": [[38, 1, 1, "", "fast_normalized_dct_shannon_entropy"]], "aslm.model.concurrency": [[40, 0, 0, "-", "concurrency_tools"]], "aslm.model.concurrency.concurrency_tools": [[41, 2, 1, "", "CustodyThread"], [42, 5, 1, "", "FancyThread"], [43, 2, 1, "", "ObjectInSubprocess"], [44, 5, 1, "", "PoliteThread"], [45, 2, 1, "", "ResultThread"], [46, 2, 1, "", "SharedNDArray"]], "aslm.model.concurrency.concurrency_tools.CustodyThread": [[41, 3, 1, "", "__init__"], [41, 4, 1, "", "daemon"], [41, 3, 1, "", "getName"], [41, 3, 1, "", "get_result"], [41, 4, 1, "", "ident"], [41, 3, 1, "", "isDaemon"], [41, 3, 1, "", "is_alive"], [41, 3, 1, "", "join"], [41, 4, 1, "", "name"], [41, 4, 1, "", "native_id"], [41, 3, 1, "", "run"], [41, 3, 1, "", "setDaemon"], [41, 3, 1, "", "setName"], [41, 3, 1, "", "start"]], "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess": [[43, 3, 1, "", "__init__"]], "aslm.model.concurrency.concurrency_tools.ResultThread": [[45, 3, 1, "", "__init__"], [45, 4, 1, "", "daemon"], [45, 3, 1, "", "getName"], [45, 3, 1, "", "get_result"], [45, 4, 1, "", "ident"], [45, 3, 1, "", "isDaemon"], [45, 3, 1, "", "is_alive"], [45, 3, 1, "", "join"], [45, 4, 1, "", "name"], [45, 4, 1, "", "native_id"], [45, 3, 1, "", "run"], [45, 3, 1, "", "setDaemon"], [45, 3, 1, "", "setName"], [45, 3, 1, "", "start"]], "aslm.model.concurrency.concurrency_tools.SharedNDArray": [[46, 5, 1, "", "ALIGNED"], [46, 5, 1, "", "BEHAVED"], [46, 5, 1, "", "CARRAY"], [46, 5, 1, "", "C_CONTIGUOUS"], [46, 5, 1, "", "FARRAY"], [46, 5, 1, "", "FNC"], [46, 5, 1, "", "FORC"], [46, 5, 1, "", "F_CONTIGUOUS"], [46, 5, 1, "", "OWNDATA"], [46, 5, 1, "", "T"], [46, 5, 1, "", "UPDATEIFCOPY"], [46, 5, 1, "", "WRITEABLE"], [46, 5, 1, "", "WRITEBACKIFCOPY"], [46, 3, 1, "", "__init__"], [46, 3, 1, "", "all"], [46, 3, 1, "", "any"], [46, 3, 1, "", "argmax"], [46, 3, 1, "", "argmin"], [46, 3, 1, "", "argpartition"], [46, 3, 1, "", "argsort"], [46, 3, 1, "", "astype"], [46, 5, 1, "", "base"], [46, 3, 1, "", "byteswap"], [46, 3, 1, "", "choose"], [46, 3, 1, "", "clip"], [46, 3, 1, "", "compress"], [46, 3, 1, "", "conj"], [46, 3, 1, "", "conjugate"], [46, 3, 1, "", "copy"], [46, 5, 1, "", "ctypes"], [46, 3, 1, "", "cumprod"], [46, 3, 1, "", "cumsum"], [46, 5, 1, "", "data"], [46, 3, 1, "", "diagonal"], [46, 5, 1, "", "dtype"], [46, 3, 1, "", "dump"], [46, 3, 1, "", "dumps"], [46, 3, 1, "", "fill"], [46, 5, 1, "", "flags"], [46, 5, 1, "", "flat"], [46, 3, 1, "", "flatten"], [46, 3, 1, "", "getfield"], [46, 5, 1, "", "imag"], [46, 3, 1, "", "item"], [46, 3, 1, "", "itemset"], [46, 5, 1, "", "itemsize"], [46, 3, 1, "", "max"], [46, 3, 1, "", "mean"], [46, 3, 1, "", "min"], [46, 5, 1, "", "nbytes"], [46, 5, 1, "", "ndim"], [46, 3, 1, "", "newbyteorder"], [46, 3, 1, "", "nonzero"], [46, 3, 1, "", "partition"], [46, 3, 1, "", "prod"], [46, 3, 1, "", "ptp"], [46, 3, 1, "", "put"], [46, 3, 1, "", "ravel"], [46, 5, 1, "", "real"], [46, 3, 1, "", "repeat"], [46, 3, 1, "", "reshape"], [46, 3, 1, "", "resize"], [46, 3, 1, "", "round"], [46, 3, 1, "", "searchsorted"], [46, 3, 1, "", "setfield"], [46, 3, 1, "", "setflags"], [46, 5, 1, "", "shape"], [46, 5, 1, "", "size"], [46, 3, 1, "", "sort"], [46, 3, 1, "", "squeeze"], [46, 3, 1, "", "std"], [46, 5, 1, "", "strides"], [46, 3, 1, "", "sum"], [46, 3, 1, "", "swapaxes"], [46, 3, 1, "", "take"], [46, 3, 1, "", "tobytes"], [46, 3, 1, "", "tofile"], [46, 3, 1, "", "tolist"], [46, 3, 1, "", "tostring"], [46, 3, 1, "", "trace"], [46, 3, 1, "", "transpose"], [46, 3, 1, "", "var"], [46, 3, 1, "", "view"]], "aslm.model.data_sources": [[48, 0, 0, "-", "bdv_data_source"], [50, 0, 0, "-", "data_source"], [52, 1, 1, "", "get_data_source"], [53, 0, 0, "-", "tiff_data_source"]], "aslm.model.data_sources.bdv_data_source": [[49, 2, 1, "", "BigDataViewerDataSource"]], "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource": [[49, 3, 1, "", "__init__"], [49, 5, 1, "", "bits"], [49, 3, 1, "id6", "close"], [49, 4, 1, "", "data"], [49, 5, 1, "", "dc"], [49, 5, 1, "", "ds_name"], [49, 5, 1, "", "dt"], [49, 5, 1, "", "dx"], [49, 5, 1, "", "dy"], [49, 5, 1, "", "dz"], [49, 5, 1, "", "file_name"], [49, 3, 1, "", "get_slice"], [49, 5, 1, "", "image"], [49, 5, 1, "", "logger"], [49, 5, 1, "id0", "metadata"], [49, 4, 1, "id10", "mode"], [49, 4, 1, "id11", "nbytes"], [49, 5, 1, "", "positions"], [49, 3, 1, "id7", "read"], [49, 4, 1, "", "resolutions"], [49, 3, 1, "id8", "set_metadata_from_configuration_experiment"], [49, 5, 1, "", "setup"], [49, 4, 1, "id12", "shape"], [49, 5, 1, "", "shape_c"], [49, 5, 1, "", "shape_t"], [49, 5, 1, "", "shape_x"], [49, 5, 1, "", "shape_y"], [49, 5, 1, "", "shape_z"], [49, 4, 1, "", "shapes"], [49, 4, 1, "", "subdivisions"], [49, 4, 1, "id13", "voxel_size"], [49, 3, 1, "id9", "write"]], "aslm.model.data_sources.data_source": [[51, 2, 1, "", "DataSource"]], "aslm.model.data_sources.data_source.DataSource": [[51, 3, 1, "", "__init__"], [51, 5, 1, "", "bits"], [51, 3, 1, "id1", "close"], [51, 4, 1, "", "data"], [51, 5, 1, "", "dc"], [51, 5, 1, "", "dt"], [51, 5, 1, "", "dx"], [51, 5, 1, "", "dy"], [51, 5, 1, "", "dz"], [51, 5, 1, "", "file_name"], [51, 5, 1, "", "logger"], [51, 5, 1, "", "metadata"], [51, 4, 1, "id5", "mode"], [51, 4, 1, "id6", "nbytes"], [51, 5, 1, "", "positions"], [51, 3, 1, "id2", "read"], [51, 3, 1, "id3", "set_metadata_from_configuration_experiment"], [51, 4, 1, "id7", "shape"], [51, 5, 1, "", "shape_c"], [51, 5, 1, "", "shape_t"], [51, 5, 1, "", "shape_x"], [51, 5, 1, "", "shape_y"], [51, 5, 1, "", "shape_z"], [51, 4, 1, "id8", "voxel_size"], [51, 3, 1, "id4", "write"]], "aslm.model.data_sources.tiff_data_source": [[54, 2, 1, "", "TiffDataSource"]], "aslm.model.data_sources.tiff_data_source.TiffDataSource": [[54, 3, 1, "", "__init__"], [54, 5, 1, "", "bits"], [54, 3, 1, "id5", "close"], [54, 4, 1, "", "data"], [54, 5, 1, "", "dc"], [54, 5, 1, "", "dt"], [54, 5, 1, "", "dx"], [54, 5, 1, "", "dy"], [54, 5, 1, "", "dz"], [54, 5, 1, "", "file_name"], [54, 3, 1, "id6", "generate_image_name"], [54, 5, 1, "", "image"], [54, 5, 1, "", "logger"], [54, 5, 1, "id0", "metadata"], [54, 4, 1, "id10", "mode"], [54, 4, 1, "id11", "nbytes"], [54, 5, 1, "", "positions"], [54, 3, 1, "id7", "read"], [54, 5, 1, "", "save_directory"], [54, 3, 1, "id8", "set_metadata_from_configuration_experiment"], [54, 4, 1, "id12", "shape"], [54, 5, 1, "", "shape_c"], [54, 5, 1, "", "shape_t"], [54, 5, 1, "", "shape_x"], [54, 5, 1, "", "shape_y"], [54, 5, 1, "", "shape_z"], [54, 4, 1, "id13", "voxel_size"], [54, 3, 1, "id9", "write"]], "aslm.model.device_startup_functions": [[56, 2, 1, "", "DummyDeviceConnection"], [57, 1, 1, "", "auto_redial"], [58, 1, 1, "", "device_not_found"], [59, 1, 1, "", "load_camera_connection"], [60, 1, 1, "", "load_devices"], [61, 1, 1, "", "load_filter_wheel_connection"], [62, 1, 1, "", "load_stages"], [63, 1, 1, "", "load_zoom_connection"], [64, 1, 1, "", "start_camera"], [65, 1, 1, "", "start_daq"], [66, 1, 1, "", "start_filter_wheel"], [67, 1, 1, "", "start_galvo"], [68, 1, 1, "", "start_lasers"], [69, 1, 1, "", "start_remote_focus_device"], [70, 1, 1, "", "start_shutter"], [71, 1, 1, "", "start_stage"], [72, 1, 1, "", "start_zoom"]], "aslm.model.device_startup_functions.DummyDeviceConnection": [[56, 3, 1, "", "__init__"]], "aslm.model.devices": [[74, 0, 0, "-", "APIs"], [80, 0, 0, "-", "camera"], [91, 0, 0, "-", "daq"], [96, 0, 0, "-", "filter_wheel"], [107, 0, 0, "-", "galvo"], [112, 0, 0, "-", "lasers"], [117, 0, 0, "-", "objectives"], [119, 0, 0, "-", "remote_focus"], [124, 0, 0, "-", "shutter"], [129, 0, 0, "-", "stages"], [151, 0, 0, "-", "zoom"]], "aslm.model.devices.APIs": [[75, 0, 0, "-", "coherent"], [76, 0, 0, "-", "dynamixel"], [79, 0, 0, "-", "omicron"]], "aslm.model.devices.APIs.dynamixel": [[77, 0, 0, "-", "dynamixel_functions"]], "aslm.model.devices.APIs.dynamixel.dynamixel_functions": [[78, 1, 1, "", "create_mock_dxl_device"]], "aslm.model.devices.camera": [[81, 0, 0, "-", "camera_base"], [83, 0, 0, "-", "camera_hamamatsu"], [86, 0, 0, "-", "camera_photometrics"], [88, 0, 0, "-", "camera_synthetic"]], "aslm.model.devices.camera.camera_base": [[82, 2, 1, "", "CameraBase"]], "aslm.model.devices.camera.camera_base.CameraBase": [[82, 3, 1, "", "__init__"], [82, 3, 1, "", "calculate_light_sheet_exposure_time"], [82, 5, 1, "", "camera_controller"], [82, 5, 1, "", "camera_parameters"], [82, 3, 1, "", "close_camera"], [82, 5, 1, "", "configuration"], [82, 3, 1, "", "get_line_interval"], [82, 3, 1, "", "get_offset_variance_maps"], [82, 5, 1, "", "is_acquiring"], [82, 5, 1, "", "max_image_height"], [82, 5, 1, "", "max_image_width"], [82, 5, 1, "", "min_image_height"], [82, 5, 1, "", "min_image_width"], [82, 4, 1, "", "offset"], [82, 3, 1, "", "set_readout_direction"], [82, 5, 1, "", "step_image_height"], [82, 5, 1, "", "step_image_width"], [82, 4, 1, "", "variance"], [82, 5, 1, "", "x_pixels"], [82, 5, 1, "", "y_pixels"]], "aslm.model.devices.camera.camera_hamamatsu": [[84, 2, 1, "", "HamamatsuOrca"], [85, 2, 1, "", "HamamatsuOrcaLightning"]], "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca": [[84, 3, 1, "", "__init__"], [84, 3, 1, "", "calculate_light_sheet_exposure_time"], [84, 3, 1, "", "calculate_readout_time"], [84, 5, 1, "", "camera_controller"], [84, 5, 1, "", "camera_parameters"], [84, 3, 1, "", "close_camera"], [84, 3, 1, "", "close_image_series"], [84, 5, 1, "", "configuration"], [84, 3, 1, "", "get_line_interval"], [84, 3, 1, "", "get_minimum_waiting_time"], [84, 3, 1, "", "get_new_frame"], [84, 3, 1, "", "get_offset_variance_maps"], [84, 3, 1, "", "initialize_image_series"], [84, 5, 1, "", "is_acquiring"], [84, 4, 1, "", "max_image_height"], [84, 4, 1, "", "max_image_width"], [84, 4, 1, "", "min_image_height"], [84, 4, 1, "", "min_image_width"], [84, 4, 1, "", "offset"], [84, 3, 1, "", "report_settings"], [84, 4, 1, "", "serial_number"], [84, 3, 1, "", "set_ROI"], [84, 3, 1, "", "set_binning"], [84, 3, 1, "", "set_exposure_time"], [84, 3, 1, "", "set_line_interval"], [84, 3, 1, "", "set_readout_direction"], [84, 3, 1, "", "set_sensor_mode"], [84, 4, 1, "", "step_image_height"], [84, 4, 1, "", "step_image_width"], [84, 4, 1, "", "variance"], [84, 5, 1, "", "x_pixels"], [84, 5, 1, "", "y_pixels"]], "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning": [[85, 3, 1, "", "__init__"], [85, 3, 1, "", "calculate_light_sheet_exposure_time"], [85, 3, 1, "", "calculate_readout_time"], [85, 5, 1, "", "camera_controller"], [85, 5, 1, "", "camera_parameters"], [85, 3, 1, "", "close_camera"], [85, 3, 1, "", "close_image_series"], [85, 5, 1, "", "configuration"], [85, 3, 1, "", "get_line_interval"], [85, 3, 1, "", "get_minimum_waiting_time"], [85, 3, 1, "", "get_new_frame"], [85, 3, 1, "", "get_offset_variance_maps"], [85, 3, 1, "", "initialize_image_series"], [85, 5, 1, "", "is_acquiring"], [85, 4, 1, "", "max_image_height"], [85, 4, 1, "", "max_image_width"], [85, 4, 1, "", "min_image_height"], [85, 4, 1, "", "min_image_width"], [85, 4, 1, "", "offset"], [85, 3, 1, "", "report_settings"], [85, 4, 1, "", "serial_number"], [85, 3, 1, "", "set_ROI"], [85, 3, 1, "", "set_binning"], [85, 3, 1, "", "set_exposure_time"], [85, 3, 1, "", "set_line_interval"], [85, 3, 1, "", "set_readout_direction"], [85, 3, 1, "", "set_sensor_mode"], [85, 4, 1, "", "step_image_height"], [85, 4, 1, "", "step_image_width"], [85, 4, 1, "", "variance"], [85, 5, 1, "", "x_pixels"], [85, 5, 1, "", "y_pixels"]], "aslm.model.devices.camera.camera_photometrics": [[87, 2, 1, "", "PhotometricsKinetix"]], "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix": [[87, 3, 1, "", "__init__"], [87, 3, 1, "", "calculate_light_sheet_exposure_time"], [87, 3, 1, "", "calculate_readout_time"], [87, 5, 1, "", "camera_controller"], [87, 5, 1, "", "camera_parameters"], [87, 3, 1, "", "close_camera"], [87, 3, 1, "", "close_image_series"], [87, 5, 1, "", "configuration"], [87, 3, 1, "", "get_line_interval"], [87, 3, 1, "", "get_minimum_waiting_time"], [87, 3, 1, "", "get_new_frame"], [87, 3, 1, "", "get_offset_variance_maps"], [87, 3, 1, "", "initialize_image_series"], [87, 5, 1, "", "is_acquiring"], [87, 5, 1, "", "max_image_height"], [87, 5, 1, "", "max_image_width"], [87, 5, 1, "", "min_image_height"], [87, 5, 1, "", "min_image_width"], [87, 4, 1, "", "offset"], [87, 3, 1, "", "report_settings"], [87, 4, 1, "", "serial_number"], [87, 3, 1, "", "set_ROI"], [87, 3, 1, "", "set_binning"], [87, 3, 1, "", "set_exposure_time"], [87, 3, 1, "", "set_line_interval"], [87, 3, 1, "", "set_readout_direction"], [87, 3, 1, "", "set_sensor_mode"], [87, 5, 1, "", "step_image_height"], [87, 5, 1, "", "step_image_width"], [87, 4, 1, "", "variance"], [87, 5, 1, "", "x_pixels"], [87, 5, 1, "", "y_pixels"]], "aslm.model.devices.camera.camera_synthetic": [[89, 2, 1, "", "SyntheticCamera"], [90, 2, 1, "", "SyntheticCameraController"]], "aslm.model.devices.camera.camera_synthetic.SyntheticCamera": [[89, 3, 1, "", "__init__"], [89, 3, 1, "", "calculate_light_sheet_exposure_time"], [89, 3, 1, "", "calculate_readout_time"], [89, 5, 1, "", "camera_controller"], [89, 5, 1, "", "camera_exposure_time"], [89, 5, 1, "", "camera_parameters"], [89, 3, 1, "", "close_camera"], [89, 3, 1, "", "close_image_series"], [89, 5, 1, "", "configuration"], [89, 5, 1, "", "current_frame_idx"], [89, 5, 1, "", "data_buffer"], [89, 3, 1, "", "generate_new_frame"], [89, 3, 1, "", "get_line_interval"], [89, 3, 1, "", "get_minimum_waiting_time"], [89, 3, 1, "", "get_new_frame"], [89, 3, 1, "", "get_offset_variance_maps"], [89, 3, 1, "", "initialize_image_series"], [89, 5, 1, "", "is_acquiring"], [89, 3, 1, "", "load_images"], [89, 5, 1, "", "max_image_height"], [89, 5, 1, "", "max_image_width"], [89, 5, 1, "", "min_image_height"], [89, 5, 1, "", "min_image_width"], [89, 5, 1, "", "num_of_frame"], [89, 4, 1, "", "offset"], [89, 5, 1, "", "pre_frame_idx"], [89, 5, 1, "", "random_image"], [89, 3, 1, "", "report_settings"], [89, 5, 1, "", "serial_number"], [89, 3, 1, "", "set_ROI"], [89, 3, 1, "", "set_binning"], [89, 3, 1, "", "set_exposure_time"], [89, 3, 1, "", "set_line_interval"], [89, 3, 1, "", "set_readout_direction"], [89, 3, 1, "", "set_sensor_mode"], [89, 5, 1, "", "step_image_height"], [89, 5, 1, "", "step_image_width"], [89, 4, 1, "", "variance"], [89, 5, 1, "", "x_pixels"], [89, 5, 1, "", "y_pixels"]], "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController": [[90, 3, 1, "", "__init__"], [90, 3, 1, "", "get_property_value"], [90, 3, 1, "", "set_property_value"]], "aslm.model.devices.daq": [[92, 0, 0, "-", "daq_base"], [94, 0, 0, "-", "daq_synthetic"]], "aslm.model.devices.daq.daq_base": [[93, 2, 1, "", "DAQBase"]], "aslm.model.devices.daq.daq_base.DAQBase": [[93, 3, 1, "", "__init__"], [93, 3, 1, "", "calculate_all_waveforms"], [93, 5, 1, "", "camera_delay"], [93, 5, 1, "", "camera_delay_percent"], [93, 5, 1, "", "camera_high_time"], [93, 5, 1, "", "camera_pulse_percent"], [93, 5, 1, "", "configuration"], [93, 5, 1, "", "daq_parameters"], [93, 3, 1, "", "enable_microscope"], [93, 5, 1, "", "microscope_name"], [93, 5, 1, "", "remote_focus_ramp_falling"], [93, 5, 1, "", "sample_rate"], [93, 5, 1, "", "sweep_time"], [93, 5, 1, "", "waveform_constants"], [93, 5, 1, "", "waveform_dict"], [93, 5, 1, "", "waveform_expand_num"], [93, 5, 1, "", "waveform_repeat_num"]], "aslm.model.devices.daq.daq_synthetic": [[95, 2, 1, "", "SyntheticDAQ"]], "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ": [[95, 3, 1, "", "__init__"], [95, 3, 1, "", "add_camera"], [95, 5, 1, "", "analog_outputs"], [95, 3, 1, "", "calculate_all_waveforms"], [95, 5, 1, "", "camera"], [95, 5, 1, "", "camera_delay"], [95, 5, 1, "", "camera_delay_percent"], [95, 5, 1, "", "camera_high_time"], [95, 5, 1, "", "camera_pulse_percent"], [95, 3, 1, "", "close_tasks"], [95, 5, 1, "", "configuration"], [95, 3, 1, "", "create_camera_task"], [95, 3, 1, "", "create_galvo_remote_focus_tasks"], [95, 3, 1, "", "create_master_trigger_task"], [95, 5, 1, "", "daq_parameters"], [95, 3, 1, "", "enable_microscope"], [95, 5, 1, "", "is_updating_analog_task"], [95, 5, 1, "", "microscope_name"], [95, 3, 1, "", "prepare_acquisition"], [95, 5, 1, "", "remote_focus_ramp_falling"], [95, 3, 1, "", "run_acquisition"], [95, 5, 1, "", "sample_rate"], [95, 3, 1, "", "set_external_trigger"], [95, 3, 1, "", "start_tasks"], [95, 3, 1, "", "stop_acquisition"], [95, 3, 1, "", "stop_tasks"], [95, 5, 1, "", "sweep_time"], [95, 5, 1, "", "trigger_mode"], [95, 3, 1, "", "update_analog_task"], [95, 5, 1, "", "wait_to_run_lock"], [95, 5, 1, "", "waveform_constants"], [95, 5, 1, "", "waveform_dict"], [95, 5, 1, "", "waveform_expand_num"], [95, 5, 1, "", "waveform_repeat_num"], [95, 3, 1, "", "write_waveforms_to_tasks"]], "aslm.model.devices.filter_wheel": [[97, 0, 0, "-", "filter_wheel_asi"], [100, 0, 0, "-", "filter_wheel_base"], [102, 0, 0, "-", "filter_wheel_sutter"], [105, 0, 0, "-", "filter_wheel_synthetic"]], "aslm.model.devices.filter_wheel.filter_wheel_asi": [[98, 2, 1, "", "ASIFilterWheel"], [99, 1, 1, "", "build_filter_wheel_connection"]], "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel": [[98, 3, 1, "", "__init__"], [98, 5, 1, "", "active_filter_wheel"], [98, 3, 1, "", "check_if_filter_in_filter_dictionary"], [98, 3, 1, "", "close"], [98, 3, 1, "", "filter_change_delay"], [98, 5, 1, "", "filter_dictionary"], [98, 5, 1, "", "filter_wheel"], [98, 5, 1, "", "filter_wheel_position"], [98, 5, 1, "", "microscope_name"], [98, 5, 1, "", "number_of_filter_wheels"], [98, 3, 1, "", "set_filter"], [98, 5, 1, "", "wait_until_done_delay"], [98, 5, 1, "", "wheel_position"]], "aslm.model.devices.filter_wheel.filter_wheel_base": [[101, 2, 1, "", "FilterWheelBase"]], "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase": [[101, 3, 1, "", "__init__"], [101, 3, 1, "", "check_if_filter_in_filter_dictionary"], [101, 5, 1, "", "filter_dictionary"], [101, 5, 1, "", "wheel_position"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter": [[103, 2, 1, "", "SutterFilterWheel"], [104, 5, 1, "", "baudrate"], [104, 1, 1, "", "build_filter_wheel_connection"], [104, 5, 1, "", "comport"], [104, 5, 1, "", "timeout"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel": [[103, 3, 1, "", "__init__"], [103, 3, 1, "", "check_if_filter_in_filter_dictionary"], [103, 3, 1, "", "close"], [103, 5, 1, "", "delay_matrix"], [103, 3, 1, "", "filter_change_delay"], [103, 5, 1, "", "filter_dictionary"], [103, 5, 1, "", "init_finished"], [103, 5, 1, "", "microscope_name"], [103, 5, 1, "", "number_of_filter_wheels"], [103, 3, 1, "", "read"], [103, 5, 1, "", "read_on_init"], [103, 5, 1, "", "serial"], [103, 3, 1, "", "set_filter"], [103, 5, 1, "", "speed"], [103, 5, 1, "", "wait_until_done"], [103, 5, 1, "", "wait_until_done_delay"], [103, 5, 1, "", "wheel_position"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic": [[106, 2, 1, "", "SyntheticFilterWheel"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel": [[106, 3, 1, "", "__init__"], [106, 5, 1, "", "baudrate"], [106, 3, 1, "", "check_if_filter_in_filter_dictionary"], [106, 3, 1, "", "close"], [106, 5, 1, "", "comport"], [106, 3, 1, "", "filter_change_delay"], [106, 5, 1, "id0", "filter_dictionary"], [106, 5, 1, "", "number_of_filter_wheels"], [106, 3, 1, "", "read"], [106, 3, 1, "", "set_filter"], [106, 5, 1, "id1", "wheel_position"]], "aslm.model.devices.galvo": [[108, 0, 0, "-", "galvo_base"], [110, 0, 0, "-", "galvo_synthetic"]], "aslm.model.devices.galvo.galvo_base": [[109, 2, 1, "", "GalvoBase"]], "aslm.model.devices.galvo.galvo_base.GalvoBase": [[109, 3, 1, "", "__init__"], [109, 3, 1, "", "adjust"], [109, 5, 1, "", "camera_delay_percent"], [109, 3, 1, "", "close_task"], [109, 5, 1, "", "configuration"], [109, 5, 1, "", "device_config"], [109, 5, 1, "", "galvo_max_voltage"], [109, 5, 1, "", "galvo_min_voltage"], [109, 5, 1, "", "galvo_name"], [109, 5, 1, "", "galvo_waveform"], [109, 5, 1, "", "microscope_name"], [109, 3, 1, "", "prepare_task"], [109, 5, 1, "", "remote_focus_ramp_falling"], [109, 5, 1, "", "sample_rate"], [109, 5, 1, "", "samples"], [109, 3, 1, "", "start_task"], [109, 3, 1, "", "stop_task"], [109, 5, 1, "", "sweep_time"], [109, 3, 1, "", "turn_off"], [109, 5, 1, "", "waveform_dict"]], "aslm.model.devices.galvo.galvo_synthetic": [[111, 2, 1, "", "SyntheticGalvo"]], "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo": [[111, 3, 1, "", "__init__"], [111, 3, 1, "", "adjust"], [111, 5, 1, "", "camera_delay_percent"], [111, 3, 1, "", "close_task"], [111, 5, 1, "", "configuration"], [111, 5, 1, "", "device_config"], [111, 5, 1, "", "galvo_max_voltage"], [111, 5, 1, "", "galvo_min_voltage"], [111, 5, 1, "", "galvo_name"], [111, 5, 1, "", "galvo_waveform"], [111, 5, 1, "", "microscope_name"], [111, 3, 1, "", "prepare_task"], [111, 5, 1, "", "remote_focus_ramp_falling"], [111, 5, 1, "", "sample_rate"], [111, 5, 1, "", "samples"], [111, 3, 1, "", "start_task"], [111, 3, 1, "", "stop_task"], [111, 5, 1, "", "sweep_time"], [111, 3, 1, "", "turn_off"], [111, 5, 1, "", "waveform_dict"]], "aslm.model.devices.lasers": [[113, 0, 0, "-", "laser_base"], [115, 0, 0, "-", "laser_synthetic"]], "aslm.model.devices.lasers.laser_base": [[114, 2, 1, "", "LaserBase"]], "aslm.model.devices.lasers.laser_base.LaserBase": [[114, 3, 1, "", "__init__"], [114, 3, 1, "", "close"], [114, 5, 1, "", "configuration"], [114, 5, 1, "", "device_config"], [114, 3, 1, "", "initialize_laser"], [114, 5, 1, "", "microscope_name"], [114, 3, 1, "", "set_power"], [114, 3, 1, "", "turn_off"], [114, 3, 1, "", "turn_on"]], "aslm.model.devices.lasers.laser_synthetic": [[116, 2, 1, "", "SyntheticLaser"]], "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser": [[116, 3, 1, "", "__init__"], [116, 3, 1, "", "close"], [116, 5, 1, "", "configuration"], [116, 5, 1, "", "device_config"], [116, 3, 1, "", "initialize_laser"], [116, 5, 1, "", "microscope_name"], [116, 3, 1, "", "set_power"], [116, 3, 1, "", "turn_off"], [116, 3, 1, "", "turn_on"]], "aslm.model.devices.objectives": [[118, 2, 1, "", "Objective"]], "aslm.model.devices.objectives.Objective": [[118, 3, 1, "", "__init__"], [118, 3, 1, "", "calculate_entrance_pupil"]], "aslm.model.devices.remote_focus": [[120, 0, 0, "-", "remote_focus_base"], [122, 0, 0, "-", "remote_focus_synthetic"]], "aslm.model.devices.remote_focus.remote_focus_base": [[121, 2, 1, "", "RemoteFocusBase"]], "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase": [[121, 3, 1, "", "__init__"], [121, 3, 1, "", "adjust"], [121, 5, 1, "", "camera_delay_percent"], [121, 3, 1, "", "close_task"], [121, 5, 1, "", "configuration"], [121, 5, 1, "", "device_config"], [121, 5, 1, "", "microscope_name"], [121, 5, 1, "", "percent_smoothing"], [121, 3, 1, "", "prepare_task"], [121, 5, 1, "", "remote_focus_delay"], [121, 5, 1, "", "remote_focus_max_voltage"], [121, 5, 1, "", "remote_focus_min_voltage"], [121, 5, 1, "", "remote_focus_ramp_falling"], [121, 5, 1, "", "sample_rate"], [121, 5, 1, "", "samples"], [121, 3, 1, "", "start_task"], [121, 3, 1, "", "stop_task"], [121, 5, 1, "", "sweep_time"], [121, 5, 1, "", "waveform_dict"]], "aslm.model.devices.remote_focus.remote_focus_synthetic": [[123, 2, 1, "", "SyntheticRemoteFocus"]], "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus": [[123, 3, 1, "", "__init__"], [123, 3, 1, "", "adjust"], [123, 5, 1, "", "camera_delay_percent"], [123, 3, 1, "", "close_task"], [123, 5, 1, "", "configuration"], [123, 5, 1, "", "device_config"], [123, 5, 1, "", "microscope_name"], [123, 3, 1, "", "move"], [123, 5, 1, "", "percent_smoothing"], [123, 3, 1, "", "prepare_task"], [123, 5, 1, "", "remote_focus_delay"], [123, 5, 1, "", "remote_focus_max_voltage"], [123, 5, 1, "", "remote_focus_min_voltage"], [123, 5, 1, "", "remote_focus_ramp_falling"], [123, 5, 1, "", "sample_rate"], [123, 5, 1, "", "samples"], [123, 3, 1, "", "start_task"], [123, 3, 1, "", "stop_task"], [123, 5, 1, "", "sweep_time"], [123, 5, 1, "", "waveform_dict"]], "aslm.model.devices.shutter": [[125, 0, 0, "-", "laser_shutter_base"], [127, 0, 0, "-", "laser_shutter_synthetic"]], "aslm.model.devices.shutter.laser_shutter_base": [[126, 2, 1, "", "ShutterBase"]], "aslm.model.devices.shutter.laser_shutter_base.ShutterBase": [[126, 3, 1, "", "__init__"], [126, 3, 1, "", "close_shutter"], [126, 3, 1, "", "open_shutter"], [126, 5, 1, "", "shutter_state"], [126, 4, 1, "", "state"]], "aslm.model.devices.shutter.laser_shutter_synthetic": [[128, 2, 1, "", "SyntheticShutter"]], "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter": [[128, 3, 1, "", "__init__"], [128, 3, 1, "", "close_shutter"], [128, 3, 1, "", "open_shutter"], [128, 5, 1, "", "shutter_state"], [128, 4, 1, "", "state"]], "aslm.model.devices.stages": [[130, 0, 0, "-", "stage_asi"], [133, 0, 0, "-", "stage_base"], [135, 0, 0, "-", "stage_galvo"], [137, 0, 0, "-", "stage_mcl"], [140, 0, 0, "-", "stage_pi"], [143, 0, 0, "-", "stage_sutter"], [146, 0, 0, "-", "stage_synthetic"], [148, 0, 0, "-", "stage_tl_kcube_inertial"]], "aslm.model.devices.stages.stage_asi": [[131, 2, 1, "", "ASIStage"], [132, 1, 1, "", "build_ASI_Stage_connection"]], "aslm.model.devices.stages.stage_asi.ASIStage": [[131, 3, 1, "", "__init__"], [131, 5, 1, "", "axes"], [131, 5, 1, "", "axes_mapping"], [131, 3, 1, "", "close"], [131, 3, 1, "", "get_abs_position"], [131, 3, 1, "", "get_axis_position"], [131, 3, 1, "", "get_position_dict"], [131, 3, 1, "", "get_speed"], [131, 3, 1, "", "move_absolute"], [131, 3, 1, "", "move_axis_absolute"], [131, 3, 1, "", "report_position"], [131, 3, 1, "", "scanr"], [131, 3, 1, "", "set_speed"], [131, 5, 1, "", "stage_feedback"], [131, 5, 1, "", "stage_limits"], [131, 3, 1, "", "start_scan"], [131, 3, 1, "", "stop"], [131, 3, 1, "", "stop_scan"], [131, 5, 1, "", "tiger_controller"], [131, 3, 1, "", "verify_abs_position"], [131, 3, 1, "", "verify_move"]], "aslm.model.devices.stages.stage_base": [[134, 2, 1, "", "StageBase"]], "aslm.model.devices.stages.stage_base.StageBase": [[134, 3, 1, "", "__init__"], [134, 5, 1, "", "axes"], [134, 5, 1, "", "axes_mapping"], [134, 3, 1, "", "close"], [134, 3, 1, "", "get_abs_position"], [134, 3, 1, "", "get_position_dict"], [134, 5, 1, "", "stage_feedback"], [134, 5, 1, "", "stage_limits"], [134, 3, 1, "", "stop"], [134, 3, 1, "", "verify_abs_position"]], "aslm.model.devices.stages.stage_galvo": [[136, 2, 1, "", "GalvoNIStage"]], "aslm.model.devices.stages.stage_galvo.GalvoNIStage": [[136, 3, 1, "", "__init__"], [136, 5, 1, "", "axes"], [136, 5, 1, "", "axes_channels"], [136, 5, 1, "", "axes_mapping"], [136, 3, 1, "", "calculate_waveform"], [136, 5, 1, "", "camera_delay_percent"], [136, 3, 1, "", "close"], [136, 5, 1, "", "configuration"], [136, 5, 1, "", "daq"], [136, 5, 1, "", "distance_threshold"], [136, 5, 1, "", "exposure_times"], [136, 5, 1, "", "galvo_max_voltage"], [136, 5, 1, "", "galvo_min_voltage"], [136, 3, 1, "", "get_abs_position"], [136, 3, 1, "", "get_position_dict"], [136, 5, 1, "", "microscope_name"], [136, 3, 1, "", "move_absolute"], [136, 3, 1, "", "move_axis_absolute"], [136, 5, 1, "", "remote_focus_delay"], [136, 5, 1, "", "remote_focus_ramp_falling"], [136, 3, 1, "", "report_position"], [136, 5, 1, "", "sample_rate"], [136, 5, 1, "", "samples"], [136, 5, 1, "", "stage_feedback"], [136, 5, 1, "", "stage_limits"], [136, 5, 1, "", "stage_settle_duration"], [136, 3, 1, "", "stop"], [136, 5, 1, "", "sweep_time"], [136, 5, 1, "", "sweep_times"], [136, 5, 1, "", "trigger_source"], [136, 3, 1, "", "verify_abs_position"], [136, 5, 1, "", "volts_per_micron"], [136, 5, 1, "", "waveform_dict"]], "aslm.model.devices.stages.stage_mcl": [[138, 2, 1, "", "MCLStage"], [139, 1, 1, "", "build_MCLStage_connection"]], "aslm.model.devices.stages.stage_mcl.MCLStage": [[138, 3, 1, "", "__init__"], [138, 5, 1, "", "axes"], [138, 5, 1, "", "axes_mapping"], [138, 3, 1, "", "close"], [138, 3, 1, "", "get_abs_position"], [138, 3, 1, "", "get_position_dict"], [138, 5, 1, "", "handle"], [138, 5, 1, "", "mcl_controller"], [138, 3, 1, "", "move_absolute"], [138, 3, 1, "", "move_axis_absolute"], [138, 3, 1, "", "report_position"], [138, 5, 1, "", "stage_feedback"], [138, 5, 1, "", "stage_limits"], [138, 3, 1, "", "stop"], [138, 3, 1, "", "verify_abs_position"]], "aslm.model.devices.stages.stage_pi": [[141, 2, 1, "", "PIStage"], [142, 1, 1, "", "build_PIStage_connection"]], "aslm.model.devices.stages.stage_pi.PIStage": [[141, 3, 1, "", "__init__"], [141, 5, 1, "", "axes"], [141, 5, 1, "", "axes_mapping"], [141, 3, 1, "", "close"], [141, 3, 1, "", "get_abs_position"], [141, 3, 1, "", "get_position_dict"], [141, 3, 1, "", "move_absolute"], [141, 3, 1, "", "move_axis_absolute"], [141, 5, 1, "", "pi_axes"], [141, 5, 1, "", "pi_device"], [141, 5, 1, "", "pi_tools"], [141, 3, 1, "", "report_position"], [141, 5, 1, "", "stage_feedback"], [141, 5, 1, "", "stage_limits"], [141, 3, 1, "", "stop"], [141, 3, 1, "", "verify_abs_position"], [141, 3, 1, "", "wait_on_target"]], "aslm.model.devices.stages.stage_sutter": [[144, 2, 1, "", "SutterStage"], [145, 1, 1, "", "build_MP285_connection"]], "aslm.model.devices.stages.stage_sutter.SutterStage": [[144, 3, 1, "", "__init__"], [144, 5, 1, "", "axes"], [144, 5, 1, "", "axes_mapping"], [144, 3, 1, "", "close"], [144, 5, 1, "", "device_axes"], [144, 3, 1, "", "get_abs_position"], [144, 3, 1, "", "get_position_dict"], [144, 3, 1, "", "move_absolute"], [144, 3, 1, "", "move_axis_absolute"], [144, 3, 1, "", "report_position"], [144, 5, 1, "", "resolution"], [144, 5, 1, "", "speed"], [144, 5, 1, "", "stage"], [144, 5, 1, "", "stage_feedback"], [144, 5, 1, "", "stage_limits"], [144, 5, 1, "", "stage_x_pos"], [144, 5, 1, "", "stage_y_pos"], [144, 5, 1, "", "stage_z_pos"], [144, 3, 1, "", "stop"], [144, 3, 1, "", "verify_abs_position"]], "aslm.model.devices.stages.stage_synthetic": [[147, 2, 1, "", "SyntheticStage"]], "aslm.model.devices.stages.stage_synthetic.SyntheticStage": [[147, 3, 1, "", "__init__"], [147, 5, 1, "", "axes"], [147, 5, 1, "", "axes_mapping"], [147, 3, 1, "", "close"], [147, 5, 1, "", "default_speed"], [147, 3, 1, "", "get_abs_position"], [147, 3, 1, "", "get_axis_position"], [147, 3, 1, "", "get_position_dict"], [147, 3, 1, "", "get_speed"], [147, 3, 1, "", "load_sample"], [147, 3, 1, "", "move_absolute"], [147, 3, 1, "", "move_axis_absolute"], [147, 3, 1, "", "report_position"], [147, 3, 1, "", "scanr"], [147, 3, 1, "", "set_speed"], [147, 5, 1, "", "stage_feedback"], [147, 5, 1, "", "stage_limits"], [147, 3, 1, "", "start_scan"], [147, 3, 1, "", "stop"], [147, 3, 1, "", "stop_scan"], [147, 3, 1, "", "unload_sample"], [147, 3, 1, "", "verify_abs_position"]], "aslm.model.devices.stages.stage_tl_kcube_inertial": [[149, 2, 1, "", "TLKIMStage"], [150, 1, 1, "", "build_TLKIMStage_connection"]], "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage": [[149, 3, 1, "", "__init__"], [149, 5, 1, "", "axes"], [149, 5, 1, "", "axes_mapping"], [149, 3, 1, "", "close"], [149, 3, 1, "", "get_abs_position"], [149, 3, 1, "", "get_position_dict"], [149, 5, 1, "", "kim_axes"], [149, 5, 1, "", "kim_controller"], [149, 3, 1, "", "move_absolute"], [149, 3, 1, "", "move_axis_absolute"], [149, 3, 1, "", "report_position"], [149, 5, 1, "", "serial_number"], [149, 5, 1, "", "stage_feedback"], [149, 5, 1, "", "stage_limits"], [149, 3, 1, "", "stop"], [149, 3, 1, "", "verify_abs_position"]], "aslm.model.devices.zoom": [[152, 0, 0, "-", "zoom_base"], [154, 0, 0, "-", "zoom_dynamixel"], [157, 0, 0, "-", "zoom_synthetic"]], "aslm.model.devices.zoom.zoom_base": [[153, 2, 1, "", "ZoomBase"]], "aslm.model.devices.zoom.zoom_base.ZoomBase": [[153, 3, 1, "", "__init__"], [153, 3, 1, "", "build_stage_dict"], [153, 5, 1, "", "configuration"], [153, 3, 1, "", "move"], [153, 3, 1, "", "read_position"], [153, 3, 1, "", "set_zoom"], [153, 5, 1, "", "zoomdict"], [153, 5, 1, "", "zoomvalue"]], "aslm.model.devices.zoom.zoom_dynamixel": [[155, 2, 1, "", "DynamixelZoom"], [156, 1, 1, "", "build_dynamixel_zoom_connection"]], "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom": [[155, 3, 1, "", "__init__"], [155, 5, 1, "", "addr_mx_goal_position"], [155, 5, 1, "", "addr_mx_moving_speed"], [155, 5, 1, "", "addr_mx_p_gain"], [155, 5, 1, "", "addr_mx_present_position"], [155, 5, 1, "", "addr_mx_torque_enable"], [155, 5, 1, "", "addr_mx_torque_limit"], [155, 3, 1, "", "build_stage_dict"], [155, 5, 1, "", "configuration"], [155, 5, 1, "", "dynamixel"], [155, 5, 1, "", "goal_position_offset"], [155, 5, 1, "", "id"], [155, 3, 1, "", "move"], [155, 5, 1, "", "port_num"], [155, 3, 1, "", "read_position"], [155, 3, 1, "", "set_zoom"], [155, 5, 1, "", "sleeptime"], [155, 5, 1, "", "timeout"], [155, 5, 1, "", "torque_disable"], [155, 5, 1, "", "torque_enable"], [155, 5, 1, "", "zoomdict"], [155, 5, 1, "", "zoomvalue"]], "aslm.model.devices.zoom.zoom_synthetic": [[158, 2, 1, "", "SyntheticZoom"]], "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom": [[158, 3, 1, "", "__init__"], [158, 3, 1, "", "build_stage_dict"], [158, 5, 1, "", "configuration"], [158, 3, 1, "", "move"], [158, 3, 1, "", "read_position"], [158, 3, 1, "", "set_zoom"], [158, 5, 1, "", "zoomdict"], [158, 5, 1, "", "zoomvalue"]], "aslm.model.dummy": [[160, 2, 1, "", "DummyController"], [161, 2, 1, "", "DummyDevice"], [162, 2, 1, "", "DummyMicroscope"], [163, 2, 1, "", "DummyModel"]], "aslm.model.dummy.DummyController": [[160, 3, 1, "", "__init__"], [160, 3, 1, "", "clear"], [160, 5, 1, "", "commands"], [160, 5, 1, "", "configuration"], [160, 5, 1, "", "configuration_controller"], [160, 3, 1, "", "execute"], [160, 5, 1, "", "menu_controller"], [160, 5, 1, "", "off_stage_pos"], [160, 3, 1, "", "pop"], [160, 5, 1, "", "stage_pos"], [160, 5, 1, "", "view"]], "aslm.model.dummy.DummyDevice": [[161, 3, 1, "", "__init__"], [161, 3, 1, "", "clear"], [161, 3, 1, "", "generate_message"], [161, 5, 1, "", "in_port"], [161, 3, 1, "", "listen"], [161, 5, 1, "", "msg_count"], [161, 5, 1, "", "out_port"], [161, 3, 1, "", "sendout"], [161, 5, 1, "", "sendout_msg_count"], [161, 3, 1, "", "setup"], [161, 5, 1, "", "stop_flag"], [161, 5, 1, "", "timecost"]], "aslm.model.dummy.DummyMicroscope": [[162, 3, 1, "", "__init__"], [162, 3, 1, "", "calculate_exposure_sweep_times"], [162, 5, 1, "", "configuration"], [162, 5, 1, "", "current_channel"], [162, 5, 1, "", "daq"], [162, 5, 1, "", "data_buffer"], [162, 5, 1, "", "galvo"], [162, 5, 1, "", "lasers"], [162, 5, 1, "", "microscope_name"], [162, 5, 1, "", "stages"]], "aslm.model.dummy.DummyModel": [[163, 3, 1, "", "__init__"], [163, 5, 1, "", "active_microscope"], [163, 5, 1, "", "active_microscope_name"], [163, 5, 1, "", "camera"], [163, 5, 1, "", "configuration"], [163, 5, 1, "", "data"], [163, 5, 1, "", "data_buffer"], [163, 5, 1, "", "data_buffer_positions"], [163, 5, 1, "", "data_container"], [163, 3, 1, "", "data_func"], [163, 5, 1, "", "data_pipe"], [163, 5, 1, "", "data_records"], [163, 5, 1, "", "data_thread"], [163, 5, 1, "", "device"], [163, 5, 1, "", "frame_id"], [163, 5, 1, "", "img_height"], [163, 5, 1, "", "img_width"], [163, 5, 1, "", "manager"], [163, 5, 1, "", "number_of_frames"], [163, 5, 1, "", "signal_container"], [163, 3, 1, "", "signal_func"], [163, 5, 1, "", "signal_pipe"], [163, 5, 1, "", "signal_records"], [163, 5, 1, "", "signal_thread"], [163, 3, 1, "", "start"], [163, 5, 1, "", "stop_flag"]], "aslm.model.features": [[165, 0, 0, "-", "auto_tile_scan"], [167, 0, 0, "-", "autofocus"], [170, 0, 0, "-", "common_features"], [181, 0, 0, "-", "constant_velocity_acquisition"], [183, 0, 0, "-", "dummy_detective"], [185, 0, 0, "-", "feature_container"], [196, 0, 0, "-", "feature_related_functions"], [201, 0, 0, "-", "image_writer"], [203, 0, 0, "-", "remove_empty_tiles"], [209, 0, 0, "-", "restful_features"], [212, 0, 0, "-", "volume_search"]], "aslm.model.features.auto_tile_scan": [[166, 2, 1, "", "CalculateFocusRange"]], "aslm.model.features.auto_tile_scan.CalculateFocusRange": [[166, 3, 1, "", "__init__"], [166, 3, 1, "", "end_func_data"], [166, 3, 1, "", "end_func_signal"], [166, 3, 1, "", "in_func_data"], [166, 3, 1, "", "in_func_signal"], [166, 3, 1, "", "pre_func_data"], [166, 3, 1, "", "pre_func_signal"]], "aslm.model.features.autofocus": [[168, 2, 1, "", "Autofocus"], [169, 1, 1, "", "power_tent"]], "aslm.model.features.autofocus.Autofocus": [[168, 3, 1, "", "__init__"], [168, 5, 1, "", "autofocus_frame_queue"], [168, 5, 1, "", "autofocus_pos_queue"], [168, 5, 1, "", "coarse_step_size"], [168, 5, 1, "", "coarse_steps"], [168, 3, 1, "", "end_func_data"], [168, 3, 1, "", "end_func_signal"], [168, 5, 1, "", "f_frame_id"], [168, 5, 1, "", "f_pos"], [168, 5, 1, "", "fine_pos_offset"], [168, 5, 1, "", "fine_step_size"], [168, 5, 1, "", "focus_pos"], [168, 5, 1, "", "frame_num"], [168, 3, 1, "", "get_autofocus_frame_num"], [168, 5, 1, "", "get_frames_num"], [168, 3, 1, "", "get_steps"], [168, 3, 1, "", "in_func_data"], [168, 3, 1, "", "in_func_signal"], [168, 5, 1, "", "init_pos"], [168, 5, 1, "", "max_entropy"], [168, 5, 1, "", "plot_data"], [168, 3, 1, "", "pre_func_data"], [168, 3, 1, "", "pre_func_signal"], [168, 3, 1, "", "robust_autofocus"], [168, 3, 1, "id0", "run"], [168, 5, 1, "", "signal_id"], [168, 5, 1, "", "target_channel"], [168, 5, 1, "", "target_frame_id"], [168, 5, 1, "", "total_frame_num"]], "aslm.model.features.common_features": [[171, 2, 1, "", "ChangeResolution"], [172, 2, 1, "", "ConProAcquisition"], [173, 2, 1, "", "FindTissueSimple2D"], [174, 2, 1, "", "LoopByCount"], [175, 2, 1, "", "MoveToNextPositionInMultiPositionTable"], [176, 2, 1, "", "PrepareNextChannel"], [177, 2, 1, "", "Snap"], [178, 2, 1, "", "StackPause"], [179, 2, 1, "", "WaitToContinue"], [180, 2, 1, "", "ZStackAcquisition"]], "aslm.model.features.common_features.ChangeResolution": [[171, 3, 1, "", "__init__"], [171, 3, 1, "", "cleanup"], [171, 5, 1, "", "config_table"], [171, 5, 1, "", "model"], [171, 5, 1, "", "resolution_mode"], [171, 3, 1, "", "signal_func"], [171, 5, 1, "", "zoom_value"]], "aslm.model.features.common_features.ConProAcquisition": [[172, 3, 1, "", "__init__"], [172, 5, 1, "", "channels"], [172, 5, 1, "", "config_table"], [172, 5, 1, "", "conpro_cycling_mode"], [172, 3, 1, "", "generate_meta_data"], [172, 5, 1, "", "model"], [172, 5, 1, "", "n_plane"], [172, 5, 1, "", "need_to_move_new_plane"], [172, 5, 1, "", "offset_end"], [172, 5, 1, "", "offset_start"], [172, 5, 1, "", "offset_step_size"], [172, 5, 1, "", "offset_update_time"], [172, 3, 1, "", "pre_signal_func"], [172, 5, 1, "", "scanrange"], [172, 3, 1, "", "signal_end"], [172, 3, 1, "", "signal_func"], [172, 5, 1, "", "timepoints"], [172, 3, 1, "", "update_channel"]], "aslm.model.features.common_features.FindTissueSimple2D": [[173, 3, 1, "", "__init__"], [173, 5, 1, "", "config_table"], [173, 3, 1, "", "data_func"], [173, 5, 1, "", "model"], [173, 5, 1, "", "overlap"], [173, 5, 1, "", "target_resolution"], [173, 5, 1, "", "target_zoom"]], "aslm.model.features.common_features.LoopByCount": [[174, 3, 1, "", "__init__"], [174, 5, 1, "", "config_table"], [174, 5, 1, "", "data_frames"], [174, 3, 1, "", "data_func"], [174, 5, 1, "", "model"], [174, 3, 1, "", "signal_func"], [174, 5, 1, "", "signals"], [174, 5, 1, "", "step_by_frame"], [174, 5, 1, "", "steps"]], "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable": [[175, 3, 1, "", "__init__"], [175, 3, 1, "", "cleanup"], [175, 5, 1, "", "config_table"], [175, 5, 1, "", "current_idx"], [175, 5, 1, "", "model"], [175, 5, 1, "", "multiposition_table"], [175, 5, 1, "", "position_count"], [175, 5, 1, "", "pre_z"], [175, 3, 1, "", "signal_func"], [175, 5, 1, "", "stage_distance_threshold"]], "aslm.model.features.common_features.PrepareNextChannel": [[176, 3, 1, "", "__init__"], [176, 5, 1, "", "config_table"], [176, 5, 1, "", "model"], [176, 3, 1, "", "signal_func"]], "aslm.model.features.common_features.Snap": [[177, 3, 1, "", "__init__"], [177, 5, 1, "", "config_table"], [177, 3, 1, "", "data_func"], [177, 5, 1, "", "model"]], "aslm.model.features.common_features.StackPause": [[178, 3, 1, "", "__init__"], [178, 3, 1, "", "signal_func"]], "aslm.model.features.common_features.WaitToContinue": [[179, 3, 1, "", "__init__"], [179, 3, 1, "", "cleanup"], [179, 5, 1, "", "config_table"], [179, 3, 1, "", "data_func"], [179, 5, 1, "", "first_enter_node"], [179, 5, 1, "", "model"], [179, 5, 1, "", "pause_data_lock"], [179, 5, 1, "", "pause_signal_lock"], [179, 3, 1, "", "pre_data_func"], [179, 3, 1, "", "pre_signal_func"], [179, 3, 1, "", "signal_func"]], "aslm.model.features.common_features.ZStackAcquisition": [[180, 3, 1, "", "__init__"], [180, 5, 1, "", "channels"], [180, 3, 1, "", "cleanup_data_func"], [180, 5, 1, "", "config_table"], [180, 5, 1, "", "current_focus_position"], [180, 5, 1, "", "current_position_idx"], [180, 5, 1, "", "current_z_position"], [180, 5, 1, "", "defocus"], [180, 3, 1, "", "end_data_func"], [180, 5, 1, "", "focus_step_size"], [180, 5, 1, "", "get_origin"], [180, 5, 1, "", "image_writer"], [180, 3, 1, "", "in_data_func"], [180, 5, 1, "", "model"], [180, 5, 1, "", "need_to_move_new_position"], [180, 5, 1, "", "need_to_move_z_position"], [180, 5, 1, "", "number_z_steps"], [180, 5, 1, "", "positions"], [180, 3, 1, "", "pre_data_func"], [180, 3, 1, "", "pre_signal_func"], [180, 3, 1, "", "signal_end"], [180, 3, 1, "", "signal_func"], [180, 5, 1, "", "stack_cycling_mode"], [180, 5, 1, "", "start_focus"], [180, 5, 1, "", "start_z_position"], [180, 3, 1, "", "update_channel"], [180, 5, 1, "", "z_position_moved_time"], [180, 5, 1, "", "z_step_size"]], "aslm.model.features.constant_velocity_acquisition": [[182, 2, 1, "", "ConstantVelocityAcquisition"]], "aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition": [[182, 3, 1, "", "__init__"], [182, 3, 1, "", "cleanup"], [182, 3, 1, "", "pre_func_signal"]], "aslm.model.features.dummy_detective": [[184, 2, 1, "", "Dummy_Detective"]], "aslm.model.features.dummy_detective.Dummy_Detective": [[184, 3, 1, "", "__init__"]], "aslm.model.features.feature_container": [[186, 2, 1, "", "Container"], [187, 2, 1, "", "DataContainer"], [188, 2, 1, "", "DataNode"], [189, 2, 1, "", "SignalContainer"], [190, 2, 1, "", "SignalNode"], [191, 2, 1, "", "TreeNode"], [192, 1, 1, "", "dummy_True"], [193, 1, 1, "", "dummy_func"], [194, 1, 1, "", "get_registered_funcs"], [195, 1, 1, "", "load_features"]], "aslm.model.features.feature_container.Container": [[186, 3, 1, "", "__init__"], [186, 3, 1, "", "cleanup"], [186, 3, 1, "", "reset"]], "aslm.model.features.feature_container.DataContainer": [[187, 3, 1, "", "__init__"], [187, 3, 1, "", "cleanup"], [187, 3, 1, "", "reset"], [187, 3, 1, "", "run"]], "aslm.model.features.feature_container.DataNode": [[188, 3, 1, "", "__init__"], [188, 3, 1, "", "run"], [188, 3, 1, "", "set_property"]], "aslm.model.features.feature_container.SignalContainer": [[189, 3, 1, "", "__init__"], [189, 3, 1, "", "cleanup"], [189, 3, 1, "", "reset"], [189, 3, 1, "", "run"]], "aslm.model.features.feature_container.SignalNode": [[190, 3, 1, "", "__init__"], [190, 3, 1, "", "run"], [190, 3, 1, "", "set_property"]], "aslm.model.features.feature_container.TreeNode": [[191, 3, 1, "", "__init__"], [191, 3, 1, "", "set_property"]], "aslm.model.features.feature_related_functions": [[197, 2, 1, "", "SharedList"], [198, 1, 1, "", "convert_feature_list_to_str"], [199, 1, 1, "", "convert_str_to_feature_list"], [200, 1, 1, "", "load_dynamic_parameter_functions"]], "aslm.model.features.feature_related_functions.SharedList": [[197, 3, 1, "", "__init__"], [197, 3, 1, "", "append"], [197, 3, 1, "", "clear"], [197, 3, 1, "", "copy"], [197, 3, 1, "", "count"], [197, 3, 1, "", "extend"], [197, 3, 1, "", "index"], [197, 3, 1, "", "insert"], [197, 3, 1, "", "pop"], [197, 3, 1, "", "remove"], [197, 3, 1, "", "reverse"], [197, 3, 1, "", "sort"]], "aslm.model.features.image_writer": [[202, 2, 1, "", "ImageWriter"]], "aslm.model.features.image_writer.ImageWriter": [[202, 3, 1, "", "__init__"], [202, 3, 1, "", "calculate_and_check_disk_space"], [202, 3, 1, "id0", "close"], [202, 5, 1, "", "config_table"], [202, 5, 1, "", "current_time_point"], [202, 5, 1, "", "data_buffer"], [202, 5, 1, "", "data_source"], [202, 5, 1, "", "file_type"], [202, 3, 1, "id1", "generate_image_name"], [202, 3, 1, "id2", "generate_meta_data"], [202, 5, 1, "", "mip"], [202, 5, 1, "", "mip_directory"], [202, 5, 1, "", "model"], [202, 5, 1, "", "num_of_channels"], [202, 5, 1, "", "save_directory"], [202, 3, 1, "id3", "save_image"], [202, 5, 1, "", "sub_dir"]], "aslm.model.features.remove_empty_tiles": [[204, 2, 1, "", "DetectTissueInStack"], [205, 2, 1, "", "DetectTissueInStackAndRecord"], [206, 2, 1, "", "RemoveEmptyPositions"], [207, 1, 1, "", "detect_tissue"], [208, 1, 1, "", "detect_tissue2"]], "aslm.model.features.remove_empty_tiles.DetectTissueInStack": [[204, 3, 1, "", "__init__"], [204, 3, 1, "", "end_func_data"], [204, 3, 1, "", "end_func_signal"], [204, 3, 1, "", "in_func_data"], [204, 3, 1, "", "in_func_signal"], [204, 3, 1, "", "pre_func_data"], [204, 3, 1, "", "pre_func_signal"]], "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord": [[205, 3, 1, "", "__init__"], [205, 3, 1, "", "end_func_data"], [205, 3, 1, "", "end_func_signal"], [205, 3, 1, "", "in_func_data"], [205, 3, 1, "", "in_func_signal"], [205, 3, 1, "", "pre_func_data"], [205, 3, 1, "", "pre_func_signal"]], "aslm.model.features.remove_empty_tiles.RemoveEmptyPositions": [[206, 3, 1, "", "__init__"], [206, 3, 1, "", "signal_func"]], "aslm.model.features.restful_features": [[210, 2, 1, "", "IlastikSegmentation"], [211, 1, 1, "", "prepare_service"]], "aslm.model.features.restful_features.IlastikSegmentation": [[210, 3, 1, "", "__init__"]], "aslm.model.features.volume_search": [[213, 2, 1, "", "VolumeSearch"], [214, 1, 1, "", "draw_box"]], "aslm.model.features.volume_search.VolumeSearch": [[213, 3, 1, "", "__init__"]], "aslm.model.metadata_sources": [[216, 0, 0, "-", "bdv_metadata"], [218, 0, 0, "-", "metadata"], [221, 0, 0, "-", "ome_tiff_metadata"]], "aslm.model.metadata_sources.bdv_metadata": [[217, 2, 1, "", "BigDataViewerMetadata"]], "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata": [[217, 3, 1, "", "__init__"], [217, 3, 1, "", "affine_matrix_to_stage_positions"], [217, 3, 1, "", "parse_xml"], [217, 4, 1, "", "shape"], [217, 3, 1, "", "stage_positions_to_affine_matrix"], [217, 3, 1, "", "to_xml"], [217, 4, 1, "", "voxel_size"], [217, 3, 1, "", "write_xml"]], "aslm.model.metadata_sources.metadata": [[219, 2, 1, "", "Metadata"], [220, 2, 1, "", "XMLMetadata"]], "aslm.model.metadata_sources.metadata.Metadata": [[219, 3, 1, "", "__init__"], [219, 4, 1, "", "shape"], [219, 4, 1, "", "voxel_size"]], "aslm.model.metadata_sources.metadata.XMLMetadata": [[220, 3, 1, "", "__init__"], [220, 4, 1, "", "shape"], [220, 3, 1, "", "to_xml"], [220, 4, 1, "", "voxel_size"], [220, 3, 1, "", "write_xml"]], "aslm.model.metadata_sources.ome_tiff_metadata": [[222, 2, 1, "", "OMETIFFMetadata"]], "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata": [[222, 3, 1, "", "__init__"], [222, 3, 1, "", "ome_tiff_xml_dict"], [222, 4, 1, "", "shape"], [222, 3, 1, "", "to_xml"], [222, 4, 1, "", "voxel_size"], [222, 3, 1, "", "write_xml"]], "aslm.model.microscope": [[224, 2, 1, "", "Microscope"]], "aslm.model.microscope.Microscope": [[224, 3, 1, "", "__init__"], [224, 5, 1, "", "ask_stage_for_position"], [224, 3, 1, "", "assemble_device_config_lists"], [224, 5, 1, "", "available_channels"], [224, 3, 1, "", "calculate_all_waveform"], [224, 3, 1, "", "calculate_exposure_sweep_times"], [224, 5, 1, "", "central_focus"], [224, 5, 1, "", "channels"], [224, 5, 1, "", "configuration"], [224, 5, 1, "", "current_channel"], [224, 5, 1, "", "current_laser_index"], [224, 5, 1, "", "daq"], [224, 5, 1, "", "data_buffer"], [224, 3, 1, "", "end_acquisition"], [224, 5, 1, "", "galvo"], [224, 3, 1, "", "get_readout_time"], [224, 3, 1, "", "get_stage_position"], [224, 5, 1, "", "info"], [224, 5, 1, "", "is_synthetic"], [224, 5, 1, "", "laser_wavelength"], [224, 5, 1, "", "lasers"], [224, 3, 1, "", "load_and_start_devices"], [224, 5, 1, "", "microscope_name"], [224, 3, 1, "", "move_remote_focus"], [224, 3, 1, "", "move_stage"], [224, 3, 1, "", "move_stage_offset"], [224, 5, 1, "", "number_of_frames"], [224, 3, 1, "", "prepare_acquisition"], [224, 3, 1, "", "prepare_next_channel"], [224, 5, 1, "", "ret_pos_dict"], [224, 5, 1, "", "stages"], [224, 5, 1, "", "stages_list"], [224, 3, 1, "", "stop_stage"], [224, 3, 1, "", "terminate"], [224, 5, 1, "", "tiger_controller"], [224, 3, 1, "", "turn_off_lasers"], [224, 3, 1, "", "turn_on_laser"], [224, 3, 1, "", "update_data_buffer"], [224, 3, 1, "", "update_stage_limits"]], "aslm.model.model": [[226, 2, 1, "", "Model"]], "aslm.model.model.Model": [[226, 3, 1, "", "__init__"], [226, 5, 1, "", "acquisition_count"], [226, 5, 1, "", "active_microscope"], [226, 5, 1, "", "active_microscope_name"], [226, 5, 1, "", "ask_to_pause_data_thread"], [226, 5, 1, "", "autofocus_on"], [226, 5, 1, "", "binning"], [226, 5, 1, "", "camera_wait_iterations"], [226, 3, 1, "", "change_resolution"], [226, 5, 1, "", "configuration"], [226, 3, 1, "", "create_pipe"], [226, 5, 1, "", "current_exposure_time"], [226, 5, 1, "", "data_buffer"], [226, 5, 1, "", "data_buffer_positions"], [226, 5, 1, "", "data_thread"], [226, 3, 1, "", "destroy_virtual_microscope"], [226, 3, 1, "", "end_acquisition"], [226, 5, 1, "", "event_queue"], [226, 5, 1, "", "f_position"], [226, 5, 1, "", "feature_list"], [226, 5, 1, "", "focus_pos"], [226, 5, 1, "", "frame_id"], [226, 3, 1, "", "get_active_microscope"], [226, 3, 1, "", "get_camera_line_interval_and_exposure_time"], [226, 3, 1, "", "get_data_buffer"], [226, 3, 1, "", "get_feature_list"], [226, 3, 1, "", "get_microscope_info"], [226, 3, 1, "", "get_offset_variance_maps"], [226, 3, 1, "", "get_stage_position"], [226, 5, 1, "", "image_count"], [226, 5, 1, "", "image_writer"], [226, 5, 1, "", "imaging_mode"], [226, 5, 1, "", "img_height"], [226, 5, 1, "", "img_width"], [226, 5, 1, "", "is_acquiring"], [226, 5, 1, "", "is_live"], [226, 5, 1, "", "is_save"], [226, 3, 1, "", "launch_virtual_microscope"], [226, 3, 1, "", "load_feature_list_from_file"], [226, 3, 1, "", "load_feature_list_from_str"], [226, 3, 1, "", "load_feature_records"], [226, 3, 1, "", "load_images"], [226, 5, 1, "", "logger"], [226, 5, 1, "", "max_entropy"], [226, 5, 1, "", "microscopes"], [226, 3, 1, "", "move_stage"], [226, 5, 1, "", "number_of_frames"], [226, 5, 1, "", "pause_data_event"], [226, 5, 1, "", "pause_data_ready_lock"], [226, 3, 1, "", "pause_data_thread"], [226, 5, 1, "", "plot_pipe"], [226, 5, 1, "", "pre_exposure_time"], [226, 3, 1, "", "prepare_acquisition"], [226, 3, 1, "", "release_pipe"], [226, 3, 1, "", "resume_data_thread"], [226, 3, 1, "", "run_acquisition"], [226, 3, 1, "", "run_command"], [226, 3, 1, "", "run_data_process"], [226, 3, 1, "", "run_live_acquisition"], [226, 5, 1, "", "show_img_pipe"], [226, 5, 1, "", "signal_thread"], [226, 3, 1, "", "simplified_data_process"], [226, 3, 1, "", "snap_image"], [226, 5, 1, "", "start_time"], [226, 5, 1, "", "stop_acquisition"], [226, 5, 1, "", "stop_send_signal"], [226, 3, 1, "", "stop_stage"], [226, 3, 1, "", "terminate"], [226, 5, 1, "", "total_acquisition_count"], [226, 5, 1, "", "total_image_count"], [226, 3, 1, "", "update_data_buffer"], [226, 3, 1, "", "update_ilastik_setting"], [226, 5, 1, "", "virtual_microscopes"]], "aslm.model.waveforms": [[228, 1, 1, "", "camera_exposure"], [229, 1, 1, "", "dc_value"], [230, 1, 1, "", "remote_focus_ramp"], [231, 1, 1, "", "sawtooth"], [232, 1, 1, "", "sine_wave"], [233, 1, 1, "", "single_pulse"], [234, 1, 1, "", "smooth_waveform"], [235, 1, 1, "", "square"]], "aslm.tools": [[237, 0, 0, "-", "beams"], [241, 0, 0, "-", "common_dict_tools"], [243, 0, 0, "-", "common_functions"], [249, 0, 0, "-", "decorators"], [252, 0, 0, "-", "file_functions"], [257, 0, 0, "-", "image"], [260, 0, 0, "-", "image_loaders"], [262, 0, 0, "-", "main_functions"], [265, 0, 0, "-", "multipos_table_tools"], [270, 0, 0, "-", "project_stats"], [272, 0, 0, "-", "sdf"], [276, 0, 0, "-", "waveform_template_funcs"], [278, 0, 0, "-", "xml_tools"]], "aslm.tools.beams": [[238, 1, 1, "", "fit_gaussian_beam_error"], [239, 1, 1, "", "fit_gaussian_beam_mse"], [240, 1, 1, "", "gaussian_beam"]], "aslm.tools.common_dict_tools": [[242, 1, 1, "", "update_stage_dict"]], "aslm.tools.common_functions": [[244, 2, 1, "", "VariableWithLock"], [245, 1, 1, "", "build_ref_name"], [246, 1, 1, "", "combine_funcs"], [247, 1, 1, "", "copy_proxy_object"], [248, 1, 1, "", "load_module_from_file"]], "aslm.tools.common_functions.VariableWithLock": [[244, 3, 1, "", "__init__"]], "aslm.tools.decorators": [[250, 2, 1, "", "FeatureList"], [251, 1, 1, "", "function_timer"]], "aslm.tools.decorators.FeatureList": [[250, 3, 1, "", "__init__"]], "aslm.tools.file_functions": [[253, 1, 1, "", "create_save_path"], [254, 1, 1, "", "delete_folder"], [255, 1, 1, "", "load_yaml_file"], [256, 1, 1, "", "save_yaml_file"]], "aslm.tools.image": [[258, 1, 1, "", "create_arrow_image"], [259, 1, 1, "", "text_array"]], "aslm.tools.image_loaders": [[261, 2, 1, "", "LazyTiff"]], "aslm.tools.image_loaders.LazyTiff": [[261, 3, 1, "", "__init__"], [261, 4, 1, "", "shape"]], "aslm.tools.main_functions": [[263, 1, 1, "", "create_parser"], [264, 1, 1, "", "evaluate_parser_input_arguments"]], "aslm.tools.multipos_table_tools": [[266, 1, 1, "", "calc_num_tiles"], [267, 1, 1, "", "compute_tiles_from_bounding_box"], [268, 1, 1, "", "sign"], [269, 1, 1, "", "update_table"]], "aslm.tools.project_stats": [[271, 1, 1, "", "countlines"]], "aslm.tools.sdf": [[273, 1, 1, "", "box"], [274, 1, 1, "", "sphere"], [275, 1, 1, "", "volume_from_sdf"]], "aslm.tools.waveform_template_funcs": [[277, 1, 1, "", "get_waveform_template_parameters"]], "aslm.tools.xml_tools": [[279, 1, 1, "", "dict_to_xml"], [280, 1, 1, "", "parse_xml"]], "aslm.view": [[282, 0, 0, "-", "custom_widgets"], [283, 0, 0, "-", "main_window_content"], [284, 0, 0, "-", "popups"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:property", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"aslm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 288, 291, 295], "config": [0, 1, 2, 3, 4, 5, 6, 7, 8], "build_nested_dict": 2, "get_aslm_path": 3, "get_configuration_path": 4, "load_config": 5, "update_config_dict": 6, "verify_experiment_config": 7, "verify_waveform_const": 8, "control": [9, 10, 11, 12, 13, 14, 15, 299], "configuration_control": [10, 11], "configurationcontrol": 11, "thread_pool": [12, 13, 14, 15], "selflockthread": 13, "synchronizedthreadpool": 14, "threadwaitlist": 15, "log_fil": [16, 17, 18, 19, 20, 21, 22, 23, 24], "filter": [17, 18, 19, 297, 299], "nonperffilt": 18, "performancefilt": 19, "log_funct": [20, 21, 22, 23, 24], "find_filenam": 21, "log_setup": 22, "main_process_listen": 23, "update_nested_dict": 24, "model": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 292], "analysi": [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "boundary_detect": [27, 28, 29, 30, 31], "binary_detect": 28, "find_tissue_boundary_2d": 29, "has_tissu": 30, "map_boundari": 31, "camera": [32, 33, 34, 35, 36, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 297, 299], "compute_flatfield_map": 33, "compute_noise_sigma": 34, "compute_scmos_offset_and_variance_map": 35, "compute_signal_to_nois": 36, "image_contrast": [37, 38], "fast_normalized_dct_shannon_entropi": 38, "concurr": [39, 40, 41, 42, 43, 44, 45, 46], "concurrency_tool": [40, 41, 42, 43, 44, 45, 46], "custodythread": 41, "fancythread": 42, "objectinsubprocess": 43, "politethread": 44, "resultthread": 45, "sharedndarrai": 46, "data_sourc": [47, 48, 49, 50, 51, 52, 53, 54], "bdv_data_sourc": [48, 49], "bigdataviewerdatasourc": 49, "datasourc": 51, "get_data_sourc": 52, "tiff_data_sourc": [53, 54], "tiffdatasourc": 54, "device_startup_funct": [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72], "dummydeviceconnect": 56, "auto_redi": 57, "device_not_found": 58, "load_camera_connect": 59, "load_devic": 60, "load_filter_wheel_connect": 61, "load_stag": 62, "load_zoom_connect": 63, "start_camera": 64, "start_daq": 65, "start_filter_wheel": 66, "start_galvo": 67, "start_las": 68, "start_remote_focus_devic": 69, "start_shutt": 70, "start_stag": 71, "start_zoom": 72, "devic": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 299], "api": [74, 75, 76, 77, 78, 79, 287, 297], "coher": [75, 299], "dynamixel": [76, 77, 78, 299], "dynamixel_funct": [77, 78], "create_mock_dxl_devic": 78, "omicron": [79, 299], "camera_bas": [81, 82], "camerabas": 82, "camera_hamamatsu": [83, 84, 85], "hamamatsuorca": 84, "hamamatsuorcalightn": 85, "camera_photometr": [86, 87], "photometricskinetix": 87, "camera_synthet": [88, 89, 90], "syntheticcamera": 89, "syntheticcameracontrol": 90, "daq": [91, 92, 93, 94, 95, 297, 299], "daq_bas": [92, 93], "daqbas": 93, "daq_synthet": [94, 95], "syntheticdaq": 95, "filter_wheel": [96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106], "filter_wheel_asi": [97, 98, 99], "asifilterwheel": 98, "build_filter_wheel_connect": [99, 104], "filter_wheel_bas": [100, 101], "filterwheelbas": 101, "filter_wheel_sutt": [102, 103, 104], "sutterfilterwheel": 103, "filter_wheel_synthet": [105, 106], "syntheticfilterwheel": 106, "galvo": [107, 108, 109, 110, 111, 297, 299], "galvo_bas": [108, 109], "galvobas": 109, "galvo_synthet": [110, 111], "syntheticgalvo": 111, "laser": [112, 113, 114, 115, 116, 297, 299], "laser_bas": [113, 114], "laserbas": 114, "laser_synthet": [115, 116], "syntheticlas": 116, "object": [117, 118, 294], "remote_focu": [119, 120, 121, 122, 123], "remote_focus_bas": [120, 121], "remotefocusbas": 121, "remote_focus_synthet": [122, 123], "syntheticremotefocu": 123, "shutter": [124, 125, 126, 127, 128, 297, 299], "laser_shutter_bas": [125, 126], "shutterbas": 126, "laser_shutter_synthet": [127, 128], "syntheticshutt": 128, "stage": [129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 288, 297, 299], "stage_asi": [130, 131, 132], "asistag": 131, "build_asi_stage_connect": 132, "stage_bas": [133, 134], "stagebas": 134, "stage_galvo": [135, 136], "galvonistag": 136, "stage_mcl": [137, 138, 139], "mclstage": 138, "build_mclstage_connect": 139, "stage_pi": [140, 141, 142], "pistag": 141, "build_pistage_connect": 142, "stage_sutt": [143, 144, 145], "sutterstag": 144, "build_mp285_connect": 145, "stage_synthet": [146, 147], "syntheticstag": 147, "stage_tl_kcube_inerti": [148, 149, 150], "tlkimstag": 149, "build_tlkimstage_connect": 150, "zoom": [151, 152, 153, 154, 155, 156, 157, 158, 297, 299], "zoom_bas": [152, 153], "zoombas": 153, "zoom_dynamixel": [154, 155, 156], "dynamixelzoom": 155, "build_dynamixel_zoom_connect": 156, "zoom_synthet": [157, 158], "syntheticzoom": 158, "dummi": [159, 160, 161, 162, 163], "dummycontrol": 160, "dummydevic": 161, "dummymicroscop": 162, "dummymodel": 163, "featur": [164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 292, 294], "auto_tile_scan": [165, 166], "calculatefocusrang": 166, "paramet": [166, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 200, 204, 205, 206, 207, 208, 294], "attribut": [166, 186, 188, 189, 190, 191, 197, 204, 205, 206], "method": [166, 186, 187, 188, 189, 190, 191, 197, 204, 205, 206], "note": [166, 171, 172, 174, 175, 176, 177, 178, 179, 180, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 200, 207, 208], "return": [166, 171, 172, 174, 175, 176, 177, 179, 180, 188, 190, 191, 192, 193, 194, 195, 198, 204, 205, 206, 207, 208], "autofocu": [167, 168, 169], "power_t": 169, "common_featur": [170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180], "changeresolut": 171, "conproacquisit": 172, "findtissuesimple2d": 173, "loopbycount": 174, "movetonextpositioninmultipositiont": 175, "preparenextchannel": 176, "snap": 177, "stackpaus": 178, "waittocontinu": 179, "zstackacquisit": 180, "constant_velocity_acquisit": [181, 182], "constantvelocityacquisit": 182, "dummy_detect": [183, 184], "feature_contain": [185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195], "contain": [186, 294], "datacontain": 187, "datanod": 188, "signalcontain": 189, "signalnod": 190, "treenod": 191, "dummy_tru": 192, "dummy_func": 193, "get_registered_func": 194, "load_featur": 195, "feature_related_funct": [196, 197, 198, 199, 200], "sharedlist": 197, "convert_feature_list_to_str": 198, "exampl": [198, 200, 207, 288], "convert_str_to_feature_list": 199, "load_dynamic_parameter_funct": 200, "image_writ": [201, 202], "imagewrit": 202, "remove_empty_til": [203, 204, 205, 206, 207, 208], "detecttissueinstack": 204, "detecttissueinstackandrecord": 205, "removeemptyposit": 206, "detect_tissu": 207, "detect_tissue2": 208, "restful_featur": [209, 210, 211], "ilastiksegment": 210, "prepare_servic": 211, "volume_search": [212, 213, 214], "volumesearch": 213, "draw_box": 214, "metadata_sourc": [215, 216, 217, 218, 219, 220, 221, 222], "bdv_metadata": [216, 217], "bigdataviewermetadata": 217, "metadata": [218, 219, 220], "xmlmetadata": 220, "ome_tiff_metadata": [221, 222], "ometiffmetadata": 222, "microscop": [223, 224, 288, 295, 297], "waveform": [227, 228, 229, 230, 231, 232, 233, 234, 235, 297], "camera_exposur": 228, "dc_valu": 229, "remote_focus_ramp": 230, "sawtooth": 231, "sine_wav": 232, "single_puls": 233, "smooth_waveform": 234, "squar": 235, "tool": [236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280], "beam": [237, 238, 239, 240], "fit_gaussian_beam_error": 238, "fit_gaussian_beam_ms": 239, "gaussian_beam": 240, "common_dict_tool": [241, 242], "update_stage_dict": 242, "common_funct": [243, 244, 245, 246, 247, 248], "variablewithlock": 244, "build_ref_nam": 245, "combine_func": 246, "copy_proxy_object": 247, "load_module_from_fil": 248, "decor": [249, 250, 251], "featurelist": 250, "function_tim": 251, "file_funct": [252, 253, 254, 255, 256], "create_save_path": 253, "delete_fold": 254, "load_yaml_fil": 255, "save_yaml_fil": 256, "imag": [257, 258, 259], "create_arrow_imag": 258, "text_arrai": 259, "image_load": [260, 261], "lazytiff": 261, "main_funct": [262, 263, 264], "create_pars": 263, "evaluate_parser_input_argu": 264, "multipos_table_tool": [265, 266, 267, 268, 269], "calc_num_til": 266, "compute_tiles_from_bounding_box": 267, "sign": 268, "update_t": 269, "project_stat": [270, 271], "countlin": 271, "sdf": [272, 273, 274, 275], "box": 273, "sphere": 274, "volume_from_sdf": 275, "waveform_template_func": [276, 277], "get_waveform_template_paramet": 277, "xml_tool": [278, 279, 280], "dict_to_xml": 279, "parse_xml": 280, "view": [281, 282, 283, 284], "custom_widget": 282, "main_window_cont": 283, "popup": 284, "refer": 287, "configur": [288, 297, 299], "yaml": 288, "hardwar": [288, 290, 297, 299], "section": [288, 297], "gui": [288, 297], "channel": 288, "stack": 288, "acquisit": [288, 299], "timepoint": 288, "contribut": [289, 291], "guidelin": 289, "gener": 289, "principl": 289, "instal": [289, 298], "develop": 289, "depend": 289, "code": 289, "style": 289, "document": 289, "pre": 289, "commit": 289, "hook": 289, "dictionari": 289, "pars": 289, "unit": [289, 290], "test": 289, "mac": 289, "ad": [290, 292], "new": [290, 292], "scientif": 290, "how": 290, "add": 290, "introduct": 294, "current": 294, "implement": [294, 295], "The": 294, "creat": 294, "custom": 294, "combin": 294, "load": 294, "function": 294, "edit": 294, "delet": 294, "multiscal": 295, "expans": 295, "opm": 295, "v2": 295, "ct": 295, "v1": 295, "spectral": 295, "tirf": 295, "autonom": 296, "softwar": [296, 298], "light": 296, "microscopi": 296, "project": 296, "philosophi": 296, "content": 296, "author": 296, "index": 296, "search": 296, "overview": 297, "file": [297, 299], "remot": [297, 299], "focu": [297, 299], "wheel": [297, 299], "ax": 297, "definit": 297, "joystick": 297, "constant": 297, "other": 297, "templat": 297, "rest": 297, "download": 298, "git": 298, "setup": 298, "your": 298, "python": 298, "environ": 298, "troubleshoot": 298, "support": 299, "data": 299, "card": 299, "ni": 299, "pcie": 299, "6738": 299, "pxi": 299, "6259": 299, "6723": 299, "hamamatsu": 299, "flash": 299, "4": 299, "0": 299, "fusion": 299, "lightn": 299, "photometr": 299, "iri": 299, "15": 299, "focus": 299, "equip": 299, "solut": 299, "thorlab": 299, "blink": 299, "optotun": 299, "tunabl": 299, "len": 299, "synthet": 299, "asi": 299, "tiger": 299, "sutter": 299, "mp": 299, "285": 299, "physik": 299, "instrument": 299, "analog": 299, "piezo": 299, "etc": 299, "dichroic": 299, "turret": 299, "turrett": 299, "galvanomet": 299, "mechan": 299, "synethet": 299, "deform": 299, "mirror": 299, "imagin": 299, "optic": 299}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"aslm.config": [[0, "module-aslm.config"]], "aslm.config.config": [[1, "module-aslm.config.config"]], "aslm.config.config.build_nested_dict": [[2, "aslm-config-config-build-nested-dict"]], "aslm.config.config.get_aslm_path": [[3, "aslm-config-config-get-aslm-path"]], "aslm.config.config.get_configuration_paths": [[4, "aslm-config-config-get-configuration-paths"]], "aslm.config.config.load_configs": [[5, "aslm-config-config-load-configs"]], "aslm.config.config.update_config_dict": [[6, "aslm-config-config-update-config-dict"]], "aslm.config.config.verify_experiment_config": [[7, "aslm-config-config-verify-experiment-config"]], "aslm.config.config.verify_waveform_constants": [[8, "aslm-config-config-verify-waveform-constants"]], "aslm.controller": [[9, "module-aslm.controller"]], "aslm.controller.configuration_controller": [[10, "module-aslm.controller.configuration_controller"]], "aslm.controller.configuration_controller.ConfigurationController": [[11, "aslm-controller-configuration-controller-configurationcontroller"]], "aslm.controller.thread_pool": [[12, "module-aslm.controller.thread_pool"]], "aslm.controller.thread_pool.SelfLockThread": [[13, "aslm-controller-thread-pool-selflockthread"]], "aslm.controller.thread_pool.SynchronizedThreadPool": [[14, "aslm-controller-thread-pool-synchronizedthreadpool"]], "aslm.controller.thread_pool.ThreadWaitlist": [[15, "aslm-controller-thread-pool-threadwaitlist"]], "aslm.log_files": [[16, "module-aslm.log_files"]], "aslm.log_files.filters": [[17, "module-aslm.log_files.filters"]], "aslm.log_files.filters.NonPerfFilter": [[18, "aslm-log-files-filters-nonperffilter"]], "aslm.log_files.filters.PerformanceFilter": [[19, "aslm-log-files-filters-performancefilter"]], "aslm.log_files.log_functions": [[20, "module-aslm.log_files.log_functions"]], "aslm.log_files.log_functions.find_filename": [[21, "aslm-log-files-log-functions-find-filename"]], "aslm.log_files.log_functions.log_setup": [[22, "aslm-log-files-log-functions-log-setup"]], "aslm.log_files.log_functions.main_process_listener": [[23, "aslm-log-files-log-functions-main-process-listener"]], "aslm.log_files.log_functions.update_nested_dict": [[24, "aslm-log-files-log-functions-update-nested-dict"]], "aslm.model": [[25, "module-aslm.model"]], "aslm.model.analysis": [[26, "module-aslm.model.analysis"]], "aslm.model.analysis.boundary_detect": [[27, "module-aslm.model.analysis.boundary_detect"]], "aslm.model.analysis.boundary_detect.binary_detect": [[28, "aslm-model-analysis-boundary-detect-binary-detect"]], "aslm.model.analysis.boundary_detect.find_tissue_boundary_2d": [[29, "aslm-model-analysis-boundary-detect-find-tissue-boundary-2d"]], "aslm.model.analysis.boundary_detect.has_tissue": [[30, "aslm-model-analysis-boundary-detect-has-tissue"]], "aslm.model.analysis.boundary_detect.map_boundary": [[31, "aslm-model-analysis-boundary-detect-map-boundary"]], "aslm.model.analysis.camera": [[32, "module-aslm.model.analysis.camera"]], "aslm.model.analysis.camera.compute_flatfield_map": [[33, "aslm-model-analysis-camera-compute-flatfield-map"]], "aslm.model.analysis.camera.compute_noise_sigma": [[34, "aslm-model-analysis-camera-compute-noise-sigma"]], "aslm.model.analysis.camera.compute_scmos_offset_and_variance_map": [[35, "aslm-model-analysis-camera-compute-scmos-offset-and-variance-map"]], "aslm.model.analysis.camera.compute_signal_to_noise": [[36, "aslm-model-analysis-camera-compute-signal-to-noise"]], "aslm.model.analysis.image_contrast": [[37, "module-aslm.model.analysis.image_contrast"]], "aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy": [[38, "aslm-model-analysis-image-contrast-fast-normalized-dct-shannon-entropy"]], "aslm.model.concurrency": [[39, "module-aslm.model.concurrency"]], "aslm.model.concurrency.concurrency_tools": [[40, "module-aslm.model.concurrency.concurrency_tools"]], "aslm.model.concurrency.concurrency_tools.CustodyThread": [[41, "aslm-model-concurrency-concurrency-tools-custodythread"]], "aslm.model.concurrency.concurrency_tools.FancyThread": [[42, "aslm-model-concurrency-concurrency-tools-fancythread"]], "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess": [[43, "aslm-model-concurrency-concurrency-tools-objectinsubprocess"]], "aslm.model.concurrency.concurrency_tools.PoliteThread": [[44, "aslm-model-concurrency-concurrency-tools-politethread"]], "aslm.model.concurrency.concurrency_tools.ResultThread": [[45, "aslm-model-concurrency-concurrency-tools-resultthread"]], "aslm.model.concurrency.concurrency_tools.SharedNDArray": [[46, "aslm-model-concurrency-concurrency-tools-sharedndarray"]], "aslm.model.data_sources": [[47, "module-aslm.model.data_sources"]], "aslm.model.data_sources.bdv_data_source": [[48, "module-aslm.model.data_sources.bdv_data_source"]], "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource": [[49, "aslm-model-data-sources-bdv-data-source-bigdataviewerdatasource"]], "aslm.model.data_sources.data_source": [[50, "module-aslm.model.data_sources.data_source"]], "aslm.model.data_sources.data_source.DataSource": [[51, "aslm-model-data-sources-data-source-datasource"]], "aslm.model.data_sources.get_data_source": [[52, "aslm-model-data-sources-get-data-source"]], "aslm.model.data_sources.tiff_data_source": [[53, "module-aslm.model.data_sources.tiff_data_source"]], "aslm.model.data_sources.tiff_data_source.TiffDataSource": [[54, "aslm-model-data-sources-tiff-data-source-tiffdatasource"]], "aslm.model.device_startup_functions": [[55, "module-aslm.model.device_startup_functions"]], "aslm.model.device_startup_functions.DummyDeviceConnection": [[56, "aslm-model-device-startup-functions-dummydeviceconnection"]], "aslm.model.device_startup_functions.auto_redial": [[57, "aslm-model-device-startup-functions-auto-redial"]], "aslm.model.device_startup_functions.device_not_found": [[58, "aslm-model-device-startup-functions-device-not-found"]], "aslm.model.device_startup_functions.load_camera_connection": [[59, "aslm-model-device-startup-functions-load-camera-connection"]], "aslm.model.device_startup_functions.load_devices": [[60, "aslm-model-device-startup-functions-load-devices"]], "aslm.model.device_startup_functions.load_filter_wheel_connection": [[61, "aslm-model-device-startup-functions-load-filter-wheel-connection"]], "aslm.model.device_startup_functions.load_stages": [[62, "aslm-model-device-startup-functions-load-stages"]], "aslm.model.device_startup_functions.load_zoom_connection": [[63, "aslm-model-device-startup-functions-load-zoom-connection"]], "aslm.model.device_startup_functions.start_camera": [[64, "aslm-model-device-startup-functions-start-camera"]], "aslm.model.device_startup_functions.start_daq": [[65, "aslm-model-device-startup-functions-start-daq"]], "aslm.model.device_startup_functions.start_filter_wheel": [[66, "aslm-model-device-startup-functions-start-filter-wheel"]], "aslm.model.device_startup_functions.start_galvo": [[67, "aslm-model-device-startup-functions-start-galvo"]], "aslm.model.device_startup_functions.start_lasers": [[68, "aslm-model-device-startup-functions-start-lasers"]], "aslm.model.device_startup_functions.start_remote_focus_device": [[69, "aslm-model-device-startup-functions-start-remote-focus-device"]], "aslm.model.device_startup_functions.start_shutter": [[70, "aslm-model-device-startup-functions-start-shutter"]], "aslm.model.device_startup_functions.start_stage": [[71, "aslm-model-device-startup-functions-start-stage"]], "aslm.model.device_startup_functions.start_zoom": [[72, "aslm-model-device-startup-functions-start-zoom"]], "aslm.model.devices": [[73, "module-aslm.model.devices"]], "aslm.model.devices.APIs": [[74, "module-aslm.model.devices.APIs"]], "aslm.model.devices.APIs.coherent": [[75, "module-aslm.model.devices.APIs.coherent"]], "aslm.model.devices.APIs.dynamixel": [[76, "module-aslm.model.devices.APIs.dynamixel"]], "aslm.model.devices.APIs.dynamixel.dynamixel_functions": [[77, "module-aslm.model.devices.APIs.dynamixel.dynamixel_functions"]], "aslm.model.devices.APIs.dynamixel.dynamixel_functions.create_mock_dxl_device": [[78, "aslm-model-devices-apis-dynamixel-dynamixel-functions-create-mock-dxl-device"]], "aslm.model.devices.APIs.omicron": [[79, "module-aslm.model.devices.APIs.omicron"]], "aslm.model.devices.camera": [[80, "module-aslm.model.devices.camera"]], "aslm.model.devices.camera.camera_base": [[81, "module-aslm.model.devices.camera.camera_base"]], "aslm.model.devices.camera.camera_base.CameraBase": [[82, "aslm-model-devices-camera-camera-base-camerabase"]], "aslm.model.devices.camera.camera_hamamatsu": [[83, "module-aslm.model.devices.camera.camera_hamamatsu"]], "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca": [[84, "aslm-model-devices-camera-camera-hamamatsu-hamamatsuorca"]], "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning": [[85, "aslm-model-devices-camera-camera-hamamatsu-hamamatsuorcalightning"]], "aslm.model.devices.camera.camera_photometrics": [[86, "module-aslm.model.devices.camera.camera_photometrics"]], "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix": [[87, "aslm-model-devices-camera-camera-photometrics-photometricskinetix"]], "aslm.model.devices.camera.camera_synthetic": [[88, "module-aslm.model.devices.camera.camera_synthetic"]], "aslm.model.devices.camera.camera_synthetic.SyntheticCamera": [[89, "aslm-model-devices-camera-camera-synthetic-syntheticcamera"]], "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController": [[90, "aslm-model-devices-camera-camera-synthetic-syntheticcameracontroller"]], "aslm.model.devices.daq": [[91, "module-aslm.model.devices.daq"]], "aslm.model.devices.daq.daq_base": [[92, "module-aslm.model.devices.daq.daq_base"]], "aslm.model.devices.daq.daq_base.DAQBase": [[93, "aslm-model-devices-daq-daq-base-daqbase"]], "aslm.model.devices.daq.daq_synthetic": [[94, "module-aslm.model.devices.daq.daq_synthetic"]], "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ": [[95, "aslm-model-devices-daq-daq-synthetic-syntheticdaq"]], "aslm.model.devices.filter_wheel": [[96, "module-aslm.model.devices.filter_wheel"]], "aslm.model.devices.filter_wheel.filter_wheel_asi": [[97, "module-aslm.model.devices.filter_wheel.filter_wheel_asi"]], "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel": [[98, "aslm-model-devices-filter-wheel-filter-wheel-asi-asifilterwheel"]], "aslm.model.devices.filter_wheel.filter_wheel_asi.build_filter_wheel_connection": [[99, "aslm-model-devices-filter-wheel-filter-wheel-asi-build-filter-wheel-connection"]], "aslm.model.devices.filter_wheel.filter_wheel_base": [[100, "module-aslm.model.devices.filter_wheel.filter_wheel_base"]], "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase": [[101, "aslm-model-devices-filter-wheel-filter-wheel-base-filterwheelbase"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter": [[102, "module-aslm.model.devices.filter_wheel.filter_wheel_sutter"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel": [[103, "aslm-model-devices-filter-wheel-filter-wheel-sutter-sutterfilterwheel"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection": [[104, "aslm-model-devices-filter-wheel-filter-wheel-sutter-build-filter-wheel-connection"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic": [[105, "module-aslm.model.devices.filter_wheel.filter_wheel_synthetic"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel": [[106, "aslm-model-devices-filter-wheel-filter-wheel-synthetic-syntheticfilterwheel"]], "aslm.model.devices.galvo": [[107, "module-aslm.model.devices.galvo"]], "aslm.model.devices.galvo.galvo_base": [[108, "module-aslm.model.devices.galvo.galvo_base"]], "aslm.model.devices.galvo.galvo_base.GalvoBase": [[109, "aslm-model-devices-galvo-galvo-base-galvobase"]], "aslm.model.devices.galvo.galvo_synthetic": [[110, "module-aslm.model.devices.galvo.galvo_synthetic"]], "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo": [[111, "aslm-model-devices-galvo-galvo-synthetic-syntheticgalvo"]], "aslm.model.devices.lasers": [[112, "module-aslm.model.devices.lasers"]], "aslm.model.devices.lasers.laser_base": [[113, "module-aslm.model.devices.lasers.laser_base"]], "aslm.model.devices.lasers.laser_base.LaserBase": [[114, "aslm-model-devices-lasers-laser-base-laserbase"]], "aslm.model.devices.lasers.laser_synthetic": [[115, "module-aslm.model.devices.lasers.laser_synthetic"]], "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser": [[116, "aslm-model-devices-lasers-laser-synthetic-syntheticlaser"]], "aslm.model.devices.objectives": [[117, "module-aslm.model.devices.objectives"]], "aslm.model.devices.objectives.Objective": [[118, "aslm-model-devices-objectives-objective"]], "aslm.model.devices.remote_focus": [[119, "module-aslm.model.devices.remote_focus"]], "aslm.model.devices.remote_focus.remote_focus_base": [[120, "module-aslm.model.devices.remote_focus.remote_focus_base"]], "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase": [[121, "aslm-model-devices-remote-focus-remote-focus-base-remotefocusbase"]], "aslm.model.devices.remote_focus.remote_focus_synthetic": [[122, "module-aslm.model.devices.remote_focus.remote_focus_synthetic"]], "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus": [[123, "aslm-model-devices-remote-focus-remote-focus-synthetic-syntheticremotefocus"]], "aslm.model.devices.shutter": [[124, "module-aslm.model.devices.shutter"]], "aslm.model.devices.shutter.laser_shutter_base": [[125, "module-aslm.model.devices.shutter.laser_shutter_base"]], "aslm.model.devices.shutter.laser_shutter_base.ShutterBase": [[126, "aslm-model-devices-shutter-laser-shutter-base-shutterbase"]], "aslm.model.devices.shutter.laser_shutter_synthetic": [[127, "module-aslm.model.devices.shutter.laser_shutter_synthetic"]], "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter": [[128, "aslm-model-devices-shutter-laser-shutter-synthetic-syntheticshutter"]], "aslm.model.devices.stages": [[129, "module-aslm.model.devices.stages"]], "aslm.model.devices.stages.stage_asi": [[130, "module-aslm.model.devices.stages.stage_asi"]], "aslm.model.devices.stages.stage_asi.ASIStage": [[131, "aslm-model-devices-stages-stage-asi-asistage"]], "aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection": [[132, "aslm-model-devices-stages-stage-asi-build-asi-stage-connection"]], "aslm.model.devices.stages.stage_base": [[133, "module-aslm.model.devices.stages.stage_base"]], "aslm.model.devices.stages.stage_base.StageBase": [[134, "aslm-model-devices-stages-stage-base-stagebase"]], "aslm.model.devices.stages.stage_galvo": [[135, "module-aslm.model.devices.stages.stage_galvo"]], "aslm.model.devices.stages.stage_galvo.GalvoNIStage": [[136, "aslm-model-devices-stages-stage-galvo-galvonistage"]], "aslm.model.devices.stages.stage_mcl": [[137, "module-aslm.model.devices.stages.stage_mcl"]], "aslm.model.devices.stages.stage_mcl.MCLStage": [[138, "aslm-model-devices-stages-stage-mcl-mclstage"]], "aslm.model.devices.stages.stage_mcl.build_MCLStage_connection": [[139, "aslm-model-devices-stages-stage-mcl-build-mclstage-connection"]], "aslm.model.devices.stages.stage_pi": [[140, "module-aslm.model.devices.stages.stage_pi"]], "aslm.model.devices.stages.stage_pi.PIStage": [[141, "aslm-model-devices-stages-stage-pi-pistage"]], "aslm.model.devices.stages.stage_pi.build_PIStage_connection": [[142, "aslm-model-devices-stages-stage-pi-build-pistage-connection"]], "aslm.model.devices.stages.stage_sutter": [[143, "module-aslm.model.devices.stages.stage_sutter"]], "aslm.model.devices.stages.stage_sutter.SutterStage": [[144, "aslm-model-devices-stages-stage-sutter-sutterstage"]], "aslm.model.devices.stages.stage_sutter.build_MP285_connection": [[145, "aslm-model-devices-stages-stage-sutter-build-mp285-connection"]], "aslm.model.devices.stages.stage_synthetic": [[146, "module-aslm.model.devices.stages.stage_synthetic"]], "aslm.model.devices.stages.stage_synthetic.SyntheticStage": [[147, "aslm-model-devices-stages-stage-synthetic-syntheticstage"]], "aslm.model.devices.stages.stage_tl_kcube_inertial": [[148, "module-aslm.model.devices.stages.stage_tl_kcube_inertial"]], "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage": [[149, "aslm-model-devices-stages-stage-tl-kcube-inertial-tlkimstage"]], "aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection": [[150, "aslm-model-devices-stages-stage-tl-kcube-inertial-build-tlkimstage-connection"]], "aslm.model.devices.zoom": [[151, "module-aslm.model.devices.zoom"]], "aslm.model.devices.zoom.zoom_base": [[152, "module-aslm.model.devices.zoom.zoom_base"]], "aslm.model.devices.zoom.zoom_base.ZoomBase": [[153, "aslm-model-devices-zoom-zoom-base-zoombase"]], "aslm.model.devices.zoom.zoom_dynamixel": [[154, "module-aslm.model.devices.zoom.zoom_dynamixel"]], "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom": [[155, "aslm-model-devices-zoom-zoom-dynamixel-dynamixelzoom"]], "aslm.model.devices.zoom.zoom_dynamixel.build_dynamixel_zoom_connection": [[156, "aslm-model-devices-zoom-zoom-dynamixel-build-dynamixel-zoom-connection"]], "aslm.model.devices.zoom.zoom_synthetic": [[157, "module-aslm.model.devices.zoom.zoom_synthetic"]], "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom": [[158, "aslm-model-devices-zoom-zoom-synthetic-syntheticzoom"]], "aslm.model.dummy": [[159, "module-aslm.model.dummy"]], "aslm.model.dummy.DummyController": [[160, "aslm-model-dummy-dummycontroller"]], "aslm.model.dummy.DummyDevice": [[161, "aslm-model-dummy-dummydevice"]], "aslm.model.dummy.DummyMicroscope": [[162, "aslm-model-dummy-dummymicroscope"]], "aslm.model.dummy.DummyModel": [[163, "aslm-model-dummy-dummymodel"]], "aslm.model.features": [[164, "module-aslm.model.features"]], "aslm.model.features.auto_tile_scan": [[165, "module-aslm.model.features.auto_tile_scan"]], "aslm.model.features.auto_tile_scan.CalculateFocusRange": [[166, "aslm-model-features-auto-tile-scan-calculatefocusrange"]], "Parameters:": [[166, "parameters"], [166, "id1"], [166, "id2"], [166, "id4"], [166, "id6"], [166, "id8"], [166, "id10"], [171, "parameters"], [172, "parameters"], [172, "id1"], [173, "parameters"], [173, "id1"], [174, "parameters"], [174, "id1"], [175, "parameters"], [176, "parameters"], [177, "parameters"], [177, "id1"], [178, "parameters"], [179, "parameters"], [179, "id1"], [180, "parameters"], [180, "id1"], [186, "parameters"], [187, "parameters"], [187, "id3"], [188, "parameters"], [188, "id3"], [188, "id6"], [189, "parameters"], [189, "id3"], [190, "parameters"], [190, "id3"], [190, "id6"], [191, "parameters"], [191, "id3"], [192, "parameters"], [193, "parameters"], [194, "parameters"], [195, "parameters"], [197, "parameters"], [197, "id1"], [198, "parameters"], [200, "parameters"], [204, "parameters"], [204, "id2"], [205, "parameters"], [205, "id2"], [206, "parameters"], [207, "parameters"], [208, "parameters"]], "Attributes:": [[166, "attributes"], [186, "attributes"], [188, "attributes"], [189, "attributes"], [190, "attributes"], [191, "attributes"], [197, "attributes"], [204, "attributes"], [205, "attributes"], [206, "attributes"]], "Methods:": [[166, "methods"], [186, "methods"], [187, "methods"], [188, "methods"], [189, "methods"], [190, "methods"], [191, "methods"], [197, "methods"], [204, "methods"], [205, "methods"], [206, "methods"]], "Notes:": [[166, "notes"], [171, "notes"], [172, "notes"], [174, "notes"], [175, "notes"], [176, "notes"], [177, "notes"], [178, "notes"], [179, "notes"], [180, "notes"], [186, "notes"], [187, "notes"], [187, "id6"], [188, "notes"], [189, "notes"], [189, "id6"], [190, "notes"], [191, "notes"], [192, "notes"], [193, "notes"], [194, "notes"], [195, "notes"], [197, "notes"], [198, "notes"], [200, "notes"], [207, "notes"], [208, "notes"]], "Returns:": [[166, "returns"], [166, "id3"], [166, "id5"], [166, "id7"], [166, "id9"], [166, "id11"], [171, "returns"], [172, "returns"], [172, "id4"], [172, "id5"], [174, "returns"], [174, "id2"], [175, "returns"], [176, "returns"], [177, "returns"], [179, "returns"], [179, "id2"], [180, "returns"], [180, "id2"], [180, "id3"], [188, "returns"], [188, "id9"], [190, "returns"], [190, "id9"], [191, "returns"], [192, "returns"], [193, "returns"], [194, "returns"], [195, "returns"], [198, "returns"], [204, "returns"], [204, "id1"], [204, "id3"], [204, "id4"], [204, "id5"], [204, "id6"], [205, "returns"], [205, "id1"], [205, "id3"], [205, "id4"], [205, "id5"], [205, "id6"], [206, "returns"], [207, "returns"], [208, "returns"]], "aslm.model.features.autofocus": [[167, "module-aslm.model.features.autofocus"]], "aslm.model.features.autofocus.Autofocus": [[168, "aslm-model-features-autofocus-autofocus"]], "aslm.model.features.autofocus.power_tent": [[169, "aslm-model-features-autofocus-power-tent"]], "aslm.model.features.common_features": [[170, "module-aslm.model.features.common_features"]], "aslm.model.features.common_features.ChangeResolution": [[171, "aslm-model-features-common-features-changeresolution"]], "aslm.model.features.common_features.ConProAcquisition": [[172, "aslm-model-features-common-features-conproacquisition"]], "aslm.model.features.common_features.FindTissueSimple2D": [[173, "aslm-model-features-common-features-findtissuesimple2d"]], "aslm.model.features.common_features.LoopByCount": [[174, "aslm-model-features-common-features-loopbycount"]], "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable": [[175, "aslm-model-features-common-features-movetonextpositioninmultipositiontable"]], "aslm.model.features.common_features.PrepareNextChannel": [[176, "aslm-model-features-common-features-preparenextchannel"]], "aslm.model.features.common_features.Snap": [[177, "aslm-model-features-common-features-snap"]], "aslm.model.features.common_features.StackPause": [[178, "aslm-model-features-common-features-stackpause"]], "aslm.model.features.common_features.WaitToContinue": [[179, "aslm-model-features-common-features-waittocontinue"]], "aslm.model.features.common_features.ZStackAcquisition": [[180, "aslm-model-features-common-features-zstackacquisition"]], "aslm.model.features.constant_velocity_acquisition": [[181, "module-aslm.model.features.constant_velocity_acquisition"]], "aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition": [[182, "aslm-model-features-constant-velocity-acquisition-constantvelocityacquisition"]], "aslm.model.features.dummy_detective": [[183, "module-aslm.model.features.dummy_detective"]], "aslm.model.features.dummy_detective.Dummy_Detective": [[184, "aslm-model-features-dummy-detective-dummy-detective"]], "aslm.model.features.feature_container": [[185, "module-aslm.model.features.feature_container"]], "aslm.model.features.feature_container.Container": [[186, "aslm-model-features-feature-container-container"]], "aslm.model.features.feature_container.DataContainer": [[187, "aslm-model-features-feature-container-datacontainer"]], "aslm.model.features.feature_container.DataNode": [[188, "aslm-model-features-feature-container-datanode"]], "aslm.model.features.feature_container.SignalContainer": [[189, "aslm-model-features-feature-container-signalcontainer"]], "aslm.model.features.feature_container.SignalNode": [[190, "aslm-model-features-feature-container-signalnode"]], "aslm.model.features.feature_container.TreeNode": [[191, "aslm-model-features-feature-container-treenode"]], "aslm.model.features.feature_container.dummy_True": [[192, "aslm-model-features-feature-container-dummy-true"]], "aslm.model.features.feature_container.dummy_func": [[193, "aslm-model-features-feature-container-dummy-func"]], "aslm.model.features.feature_container.get_registered_funcs": [[194, "aslm-model-features-feature-container-get-registered-funcs"]], "aslm.model.features.feature_container.load_features": [[195, "aslm-model-features-feature-container-load-features"]], "aslm.model.features.feature_related_functions": [[196, "module-aslm.model.features.feature_related_functions"]], "aslm.model.features.feature_related_functions.SharedList": [[197, "aslm-model-features-feature-related-functions-sharedlist"]], "aslm.model.features.feature_related_functions.convert_feature_list_to_str": [[198, "aslm-model-features-feature-related-functions-convert-feature-list-to-str"]], "Example:": [[198, "example"], [200, "example"], [207, "example"]], "]": [[198, "id3"], [200, "id5"]], "aslm.model.features.feature_related_functions.convert_str_to_feature_list": [[199, "aslm-model-features-feature-related-functions-convert-str-to-feature-list"]], "aslm.model.features.feature_related_functions.load_dynamic_parameter_functions": [[200, "aslm-model-features-feature-related-functions-load-dynamic-parameter-functions"]], "aslm.model.features.image_writer": [[201, "module-aslm.model.features.image_writer"]], "aslm.model.features.image_writer.ImageWriter": [[202, "aslm-model-features-image-writer-imagewriter"]], "aslm.model.features.remove_empty_tiles": [[203, "module-aslm.model.features.remove_empty_tiles"]], "aslm.model.features.remove_empty_tiles.DetectTissueInStack": [[204, "aslm-model-features-remove-empty-tiles-detecttissueinstack"]], "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord": [[205, "aslm-model-features-remove-empty-tiles-detecttissueinstackandrecord"]], "aslm.model.features.remove_empty_tiles.RemoveEmptyPositions": [[206, "aslm-model-features-remove-empty-tiles-removeemptypositions"]], "aslm.model.features.remove_empty_tiles.detect_tissue": [[207, "aslm-model-features-remove-empty-tiles-detect-tissue"]], "aslm.model.features.remove_empty_tiles.detect_tissue2": [[208, "aslm-model-features-remove-empty-tiles-detect-tissue2"]], "aslm.model.features.restful_features": [[209, "module-aslm.model.features.restful_features"]], "aslm.model.features.restful_features.IlastikSegmentation": [[210, "aslm-model-features-restful-features-ilastiksegmentation"]], "aslm.model.features.restful_features.prepare_service": [[211, "aslm-model-features-restful-features-prepare-service"]], "aslm.model.features.volume_search": [[212, "module-aslm.model.features.volume_search"]], "aslm.model.features.volume_search.VolumeSearch": [[213, "aslm-model-features-volume-search-volumesearch"]], "aslm.model.features.volume_search.draw_box": [[214, "aslm-model-features-volume-search-draw-box"]], "aslm.model.metadata_sources": [[215, "module-aslm.model.metadata_sources"]], "aslm.model.metadata_sources.bdv_metadata": [[216, "module-aslm.model.metadata_sources.bdv_metadata"]], "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata": [[217, "aslm-model-metadata-sources-bdv-metadata-bigdataviewermetadata"]], "aslm.model.metadata_sources.metadata": [[218, "module-aslm.model.metadata_sources.metadata"]], "aslm.model.metadata_sources.metadata.Metadata": [[219, "aslm-model-metadata-sources-metadata-metadata"]], "aslm.model.metadata_sources.metadata.XMLMetadata": [[220, "aslm-model-metadata-sources-metadata-xmlmetadata"]], "aslm.model.metadata_sources.ome_tiff_metadata": [[221, "module-aslm.model.metadata_sources.ome_tiff_metadata"]], "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata": [[222, "aslm-model-metadata-sources-ome-tiff-metadata-ometiffmetadata"]], "aslm.model.microscope": [[223, "module-aslm.model.microscope"]], "aslm.model.microscope.Microscope": [[224, "aslm-model-microscope-microscope"]], "aslm.model.model": [[225, "module-aslm.model.model"]], "aslm.model.model.Model": [[226, "aslm-model-model-model"]], "aslm.model.waveforms": [[227, "module-aslm.model.waveforms"]], "aslm.model.waveforms.camera_exposure": [[228, "aslm-model-waveforms-camera-exposure"]], "aslm.model.waveforms.dc_value": [[229, "aslm-model-waveforms-dc-value"]], "aslm.model.waveforms.remote_focus_ramp": [[230, "aslm-model-waveforms-remote-focus-ramp"]], "aslm.model.waveforms.sawtooth": [[231, "aslm-model-waveforms-sawtooth"]], "aslm.model.waveforms.sine_wave": [[232, "aslm-model-waveforms-sine-wave"]], "aslm.model.waveforms.single_pulse": [[233, "aslm-model-waveforms-single-pulse"]], "aslm.model.waveforms.smooth_waveform": [[234, "aslm-model-waveforms-smooth-waveform"]], "aslm.model.waveforms.square": [[235, "aslm-model-waveforms-square"]], "aslm.tools": [[236, "module-aslm.tools"]], "aslm.tools.beams": [[237, "module-aslm.tools.beams"]], "aslm.tools.beams.fit_gaussian_beam_error": [[238, "aslm-tools-beams-fit-gaussian-beam-error"]], "aslm.tools.beams.fit_gaussian_beam_mse": [[239, "aslm-tools-beams-fit-gaussian-beam-mse"]], "aslm.tools.beams.gaussian_beam": [[240, "aslm-tools-beams-gaussian-beam"]], "aslm.tools.common_dict_tools": [[241, "module-aslm.tools.common_dict_tools"]], "aslm.tools.common_dict_tools.update_stage_dict": [[242, "aslm-tools-common-dict-tools-update-stage-dict"]], "aslm.tools.common_functions": [[243, "module-aslm.tools.common_functions"]], "aslm.tools.common_functions.VariableWithLock": [[244, "aslm-tools-common-functions-variablewithlock"]], "aslm.tools.common_functions.build_ref_name": [[245, "aslm-tools-common-functions-build-ref-name"]], "aslm.tools.common_functions.combine_funcs": [[246, "aslm-tools-common-functions-combine-funcs"]], "aslm.tools.common_functions.copy_proxy_object": [[247, "aslm-tools-common-functions-copy-proxy-object"]], "aslm.tools.common_functions.load_module_from_file": [[248, "aslm-tools-common-functions-load-module-from-file"]], "aslm.tools.decorators": [[249, "module-aslm.tools.decorators"]], "aslm.tools.decorators.FeatureList": [[250, "aslm-tools-decorators-featurelist"]], "aslm.tools.decorators.function_timer": [[251, "aslm-tools-decorators-function-timer"]], "aslm.tools.file_functions": [[252, "module-aslm.tools.file_functions"]], "aslm.tools.file_functions.create_save_path": [[253, "aslm-tools-file-functions-create-save-path"]], "aslm.tools.file_functions.delete_folder": [[254, "aslm-tools-file-functions-delete-folder"]], "aslm.tools.file_functions.load_yaml_file": [[255, "aslm-tools-file-functions-load-yaml-file"]], "aslm.tools.file_functions.save_yaml_file": [[256, "aslm-tools-file-functions-save-yaml-file"]], "aslm.tools.image": [[257, "module-aslm.tools.image"]], "aslm.tools.image.create_arrow_image": [[258, "aslm-tools-image-create-arrow-image"]], "aslm.tools.image.text_array": [[259, "aslm-tools-image-text-array"]], "aslm.tools.image_loaders": [[260, "module-aslm.tools.image_loaders"]], "aslm.tools.image_loaders.LazyTiff": [[261, "aslm-tools-image-loaders-lazytiff"]], "aslm.tools.main_functions": [[262, "module-aslm.tools.main_functions"]], "aslm.tools.main_functions.create_parser": [[263, "aslm-tools-main-functions-create-parser"]], "aslm.tools.main_functions.evaluate_parser_input_arguments": [[264, "aslm-tools-main-functions-evaluate-parser-input-arguments"]], "aslm.tools.multipos_table_tools": [[265, "module-aslm.tools.multipos_table_tools"]], "aslm.tools.multipos_table_tools.calc_num_tiles": [[266, "aslm-tools-multipos-table-tools-calc-num-tiles"]], "aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box": [[267, "aslm-tools-multipos-table-tools-compute-tiles-from-bounding-box"]], "aslm.tools.multipos_table_tools.sign": [[268, "aslm-tools-multipos-table-tools-sign"]], "aslm.tools.multipos_table_tools.update_table": [[269, "aslm-tools-multipos-table-tools-update-table"]], "aslm.tools.project_stats": [[270, "module-aslm.tools.project_stats"]], "aslm.tools.project_stats.countlines": [[271, "aslm-tools-project-stats-countlines"]], "aslm.tools.sdf": [[272, "module-aslm.tools.sdf"]], "aslm.tools.sdf.box": [[273, "aslm-tools-sdf-box"]], "aslm.tools.sdf.sphere": [[274, "aslm-tools-sdf-sphere"]], "aslm.tools.sdf.volume_from_sdf": [[275, "aslm-tools-sdf-volume-from-sdf"]], "aslm.tools.waveform_template_funcs": [[276, "module-aslm.tools.waveform_template_funcs"]], "aslm.tools.waveform_template_funcs.get_waveform_template_parameters": [[277, "aslm-tools-waveform-template-funcs-get-waveform-template-parameters"]], "aslm.tools.xml_tools": [[278, "module-aslm.tools.xml_tools"]], "aslm.tools.xml_tools.dict_to_xml": [[279, "aslm-tools-xml-tools-dict-to-xml"]], "aslm.tools.xml_tools.parse_xml": [[280, "aslm-tools-xml-tools-parse-xml"]], "aslm.view": [[281, "module-aslm.view"]], "aslm.view.custom_widgets": [[282, "module-aslm.view.custom_widgets"]], "aslm.view.main_window_content": [[283, "module-aslm.view.main_window_content"]], "aslm.view.popups": [[284, "module-aslm.view.popups"]], "API Reference": [[287, "api-reference"]], "Configuring ASLM": [[288, "configuring-aslm"]], "Configuration.yaml": [[288, "configuration-yaml"]], "Hardware Section": [[288, "hardware-section"], [297, "hardware-section"]], "Microscope Section": [[288, "microscope-section"], [297, "microscope-section"]], "Configuring stages": [[288, "configuring-stages"]], "GUI Section": [[288, "gui-section"], [297, "gui-section"]], "Channels": [[288, "channels"]], "Stack Acquisition": [[288, "stack-acquisition"]], "Timepoint": [[288, "timepoint"]], "Example YAML Configuration": [[288, "example-yaml-configuration"]], "Contributing Guidelines": [[289, "contributing-guidelines"]], "General Principles": [[289, "general-principles"]], "Installation of Developer Dependencies": [[289, "installation-of-developer-dependencies"]], "Coding Style": [[289, "coding-style"]], "Documentation": [[289, "documentation"]], "Pre-Commit Hooks": [[289, "pre-commit-hooks"]], "Dictionary Parsing": [[289, "dictionary-parsing"]], "Unit Tests": [[289, "unit-tests"]], "Developing with a Mac": [[289, "developing-with-a-mac"]], "Adding New Hardware": [[290, "adding-new-hardware"]], "Scientific Units": [[290, "scientific-units"]], "How to Add New Hardware": [[290, "how-to-add-new-hardware"]], "Contributing to ASLM": [[291, "contributing-to-aslm"]], "Adding New Model Features": [[292, "adding-new-model-features"]], "Feature Container": [[294, "feature-container"]], "Introduction": [[294, "introduction"]], "Currently Implemented Features": [[294, "currently-implemented-features"]], "The Feature Object": [[294, "the-feature-object"]], "Creating Custom Features": [[294, "creating-custom-features"]], "Combining Features": [[294, "combining-features"]], "Loading Custom Functions": [[294, "loading-custom-functions"]], "Editing Function Parameters": [[294, "editing-function-parameters"]], "Deleting Features": [[294, "deleting-features"]], "Microscope Implementations": [[295, "microscope-implementations"]], "Multiscale Microscope": [[295, "multiscale-microscope"]], "Expansion ASLM": [[295, "expansion-aslm"]], "OPM-V2": [[295, "opm-v2"]], "CT-ASLM-V1": [[295, "ct-aslm-v1"]], "CT-ASLM-V2": [[295, "ct-aslm-v2"]], "Spectral TIRF": [[295, "spectral-tirf"]], "Autonomous Software for Light Microscopy": [[296, "autonomous-software-for-light-microscopy"]], "Project Philosophy": [[296, "project-philosophy"]], "Contents": [[296, "contents"]], "Authors": [[296, "authors"]], "Index and search": [[296, "index-and-search"]], "Configuration Overview": [[297, "configuration-overview"]], "Configuration File": [[297, "configuration-file"], [299, "configuration-file"], [299, "id1"], [299, "id2"], [299, "id3"]], "DAQ Section": [[297, "daq-section"]], "Camera Section": [[297, "camera-section"]], "Remote Focus Section": [[297, "remote-focus-section"]], "Galvo Section": [[297, "galvo-section"]], "Filter Wheel Section": [[297, "filter-wheel-section"]], "Stage Section": [[297, "stage-section"]], "Stage Axes Definition": [[297, "stage-axes-definition"]], "Joystick Axes Definition": [[297, "joystick-axes-definition"]], "Zoom Section": [[297, "zoom-section"]], "Shutter Section": [[297, "shutter-section"]], "Laser Section": [[297, "laser-section"]], "Waveform Constants File": [[297, "waveform-constants-file"]], "Remote Constants Section": [[297, "remote-constants-section"]], "Galvo Constants Section": [[297, "galvo-constants-section"]], "Other Constants Section": [[297, "other-constants-section"]], "Waveform Templates File": [[297, "waveform-templates-file"]], "Rest API Configuration File": [[297, "rest-api-configuration-file"]], "Software Installation": [[298, "software-installation"]], "Download Git": [[298, "download-git"]], "Setup your Python Environment": [[298, "setup-your-python-environment"]], "Troubleshooting": [[298, "troubleshooting"]], "Supported Hardware": [[299, "supported-hardware"]], "Data Acquisition Card": [[299, "data-acquisition-card"]], "NI": [[299, "ni"]], "PCIe-6738": [[299, "pcie-6738"]], "PXI-6259": [[299, "pxi-6259"]], "PXI-6723": [[299, "pxi-6723"]], "Cameras": [[299, "cameras"]], "Hamamatsu Flash 4.0": [[299, "hamamatsu-flash-4-0"]], "Hamamatsu Fusion": [[299, "hamamatsu-fusion"]], "Hamamatsu Lightning": [[299, "hamamatsu-lightning"]], "Photometrics Iris 15": [[299, "photometrics-iris-15"]], "Remote Focusing Devices": [[299, "remote-focusing-devices"]], "Equipment Solutions": [[299, "equipment-solutions"]], "Thorlabs BLINK": [[299, "thorlabs-blink"]], "Optotune Focus Tunable Lens": [[299, "optotune-focus-tunable-lens"]], "Synthetic Remote Focus Device": [[299, "synthetic-remote-focus-device"]], "Stages": [[299, "stages"]], "ASI Tiger Controller": [[299, "asi-tiger-controller"]], "Sutter MP-285": [[299, "sutter-mp-285"]], "Physik Instrumente": [[299, "physik-instrumente"]], "Thorlabs": [[299, "thorlabs"], [299, "id6"]], "Analog Controlled (Galvo/Piezo/etc.)": [[299, "analog-controlled-galvo-piezo-etc"]], "Synthetic Stage": [[299, "synthetic-stage"]], "Dichroic Turret": [[299, "dichroic-turret"]], "ASI": [[299, "asi"], [299, "id4"]], "Synthetic Dichroic Turrett": [[299, "synthetic-dichroic-turrett"]], "Filter Wheels": [[299, "filter-wheels"]], "Sutter": [[299, "sutter"]], "Synthetic Filter Wheel": [[299, "synthetic-filter-wheel"]], "Galvanometers": [[299, "galvanometers"]], "DAQ Control": [[299, "daq-control"], [299, "id5"]], "Synthetic Galvanometer": [[299, "synthetic-galvanometer"]], "Lasers": [[299, "lasers"]], "Coherent": [[299, "coherent"]], "Omicron": [[299, "omicron"]], "Synthetic Laser": [[299, "synthetic-laser"]], "Shutters": [[299, "shutters"]], "Synthetic Shutter": [[299, "synthetic-shutter"]], "Mechanical Zoom": [[299, "mechanical-zoom"]], "Dynamixel Zoom": [[299, "dynamixel-zoom"]], "Synethetic Zoom": [[299, "synethetic-zoom"]], "Deformable Mirrors": [[299, "deformable-mirrors"]], "Imagine Optics": [[299, "imagine-optics"]]}, "indexentries": {"aslm.config": [[0, "module-aslm.config"]], "module": [[0, "module-aslm.config"], [1, "module-aslm.config.config"], [9, "module-aslm.controller"], [10, "module-aslm.controller.configuration_controller"], [12, "module-aslm.controller.thread_pool"], [16, "module-aslm.log_files"], [17, "module-aslm.log_files.filters"], [20, "module-aslm.log_files.log_functions"], [25, "module-aslm.model"], [26, "module-aslm.model.analysis"], [27, "module-aslm.model.analysis.boundary_detect"], [32, "module-aslm.model.analysis.camera"], [37, "module-aslm.model.analysis.image_contrast"], [39, "module-aslm.model.concurrency"], [40, "module-aslm.model.concurrency.concurrency_tools"], [47, "module-aslm.model.data_sources"], [48, "module-aslm.model.data_sources.bdv_data_source"], [50, "module-aslm.model.data_sources.data_source"], [53, "module-aslm.model.data_sources.tiff_data_source"], [55, "module-aslm.model.device_startup_functions"], [73, "module-aslm.model.devices"], [74, "module-aslm.model.devices.APIs"], [75, "module-aslm.model.devices.APIs.coherent"], [76, "module-aslm.model.devices.APIs.dynamixel"], [77, "module-aslm.model.devices.APIs.dynamixel.dynamixel_functions"], [79, "module-aslm.model.devices.APIs.omicron"], [80, "module-aslm.model.devices.camera"], [81, "module-aslm.model.devices.camera.camera_base"], [83, "module-aslm.model.devices.camera.camera_hamamatsu"], [86, "module-aslm.model.devices.camera.camera_photometrics"], [88, "module-aslm.model.devices.camera.camera_synthetic"], [91, "module-aslm.model.devices.daq"], [92, "module-aslm.model.devices.daq.daq_base"], [94, "module-aslm.model.devices.daq.daq_synthetic"], [96, "module-aslm.model.devices.filter_wheel"], [97, "module-aslm.model.devices.filter_wheel.filter_wheel_asi"], [100, "module-aslm.model.devices.filter_wheel.filter_wheel_base"], [102, "module-aslm.model.devices.filter_wheel.filter_wheel_sutter"], [105, "module-aslm.model.devices.filter_wheel.filter_wheel_synthetic"], [107, "module-aslm.model.devices.galvo"], [108, "module-aslm.model.devices.galvo.galvo_base"], [110, "module-aslm.model.devices.galvo.galvo_synthetic"], [112, "module-aslm.model.devices.lasers"], [113, "module-aslm.model.devices.lasers.laser_base"], [115, "module-aslm.model.devices.lasers.laser_synthetic"], [117, "module-aslm.model.devices.objectives"], [119, "module-aslm.model.devices.remote_focus"], [120, "module-aslm.model.devices.remote_focus.remote_focus_base"], [122, "module-aslm.model.devices.remote_focus.remote_focus_synthetic"], [124, "module-aslm.model.devices.shutter"], [125, "module-aslm.model.devices.shutter.laser_shutter_base"], [127, "module-aslm.model.devices.shutter.laser_shutter_synthetic"], [129, "module-aslm.model.devices.stages"], [130, "module-aslm.model.devices.stages.stage_asi"], [133, "module-aslm.model.devices.stages.stage_base"], [135, "module-aslm.model.devices.stages.stage_galvo"], [137, "module-aslm.model.devices.stages.stage_mcl"], [140, "module-aslm.model.devices.stages.stage_pi"], [143, "module-aslm.model.devices.stages.stage_sutter"], [146, "module-aslm.model.devices.stages.stage_synthetic"], [148, "module-aslm.model.devices.stages.stage_tl_kcube_inertial"], [151, "module-aslm.model.devices.zoom"], [152, "module-aslm.model.devices.zoom.zoom_base"], [154, "module-aslm.model.devices.zoom.zoom_dynamixel"], [157, "module-aslm.model.devices.zoom.zoom_synthetic"], [159, "module-aslm.model.dummy"], [164, "module-aslm.model.features"], [165, "module-aslm.model.features.auto_tile_scan"], [167, "module-aslm.model.features.autofocus"], [170, "module-aslm.model.features.common_features"], [181, "module-aslm.model.features.constant_velocity_acquisition"], [183, "module-aslm.model.features.dummy_detective"], [185, "module-aslm.model.features.feature_container"], [196, "module-aslm.model.features.feature_related_functions"], [201, "module-aslm.model.features.image_writer"], [203, "module-aslm.model.features.remove_empty_tiles"], [209, "module-aslm.model.features.restful_features"], [212, "module-aslm.model.features.volume_search"], [215, "module-aslm.model.metadata_sources"], [216, "module-aslm.model.metadata_sources.bdv_metadata"], [218, "module-aslm.model.metadata_sources.metadata"], [221, "module-aslm.model.metadata_sources.ome_tiff_metadata"], [223, "module-aslm.model.microscope"], [225, "module-aslm.model.model"], [227, "module-aslm.model.waveforms"], [236, "module-aslm.tools"], [237, "module-aslm.tools.beams"], [241, "module-aslm.tools.common_dict_tools"], [243, "module-aslm.tools.common_functions"], [249, "module-aslm.tools.decorators"], [252, "module-aslm.tools.file_functions"], [257, "module-aslm.tools.image"], [260, "module-aslm.tools.image_loaders"], [262, "module-aslm.tools.main_functions"], [265, "module-aslm.tools.multipos_table_tools"], [270, "module-aslm.tools.project_stats"], [272, "module-aslm.tools.sdf"], [276, "module-aslm.tools.waveform_template_funcs"], [278, "module-aslm.tools.xml_tools"], [281, "module-aslm.view"], [282, "module-aslm.view.custom_widgets"], [283, "module-aslm.view.main_window_content"], [284, "module-aslm.view.popups"]], "aslm.config.config": [[1, "module-aslm.config.config"]], "build_nested_dict() (in module aslm.config.config)": [[2, "aslm.config.config.build_nested_dict"]], "get_aslm_path() (in module aslm.config.config)": [[3, "aslm.config.config.get_aslm_path"]], "get_configuration_paths() (in module aslm.config.config)": [[4, "aslm.config.config.get_configuration_paths"]], "load_configs() (in module aslm.config.config)": [[5, "aslm.config.config.load_configs"]], "update_config_dict() (in module aslm.config.config)": [[6, "aslm.config.config.update_config_dict"]], "verify_experiment_config() (in module aslm.config.config)": [[7, "aslm.config.config.verify_experiment_config"]], "verify_waveform_constants() (in module aslm.config.config)": [[8, "aslm.config.config.verify_waveform_constants"]], "aslm.controller": [[9, "module-aslm.controller"]], "aslm.controller.configuration_controller": [[10, "module-aslm.controller.configuration_controller"]], "configurationcontroller (class in aslm.controller.configuration_controller)": [[11, "aslm.controller.configuration_controller.ConfigurationController"]], "__init__() (aslm.controller.configuration_controller.configurationcontroller method)": [[11, "aslm.controller.configuration_controller.ConfigurationController.__init__"]], "camera_config_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.camera_config_dict"]], "camera_flip_flags (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.camera_flip_flags"]], "camera_pixels (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.camera_pixels"]], "change_microscope() (aslm.controller.configuration_controller.configurationcontroller method)": [[11, "aslm.controller.configuration_controller.ConfigurationController.change_microscope"]], "channels_info (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.channels_info"]], "configuration (aslm.controller.configuration_controller.configurationcontroller attribute)": [[11, "aslm.controller.configuration_controller.ConfigurationController.configuration"]], "daq_sample_rate (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.daq_sample_rate"]], "filter_wheel_setting_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.filter_wheel_setting_dict"]], "galvo_num (aslm.controller.configuration_controller.configurationcontroller attribute)": [[11, "aslm.controller.configuration_controller.ConfigurationController.galvo_num"]], "galvo_parameter_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.galvo_parameter_dict"]], "get_microscope_configuration_dict() (aslm.controller.configuration_controller.configurationcontroller method)": [[11, "aslm.controller.configuration_controller.ConfigurationController.get_microscope_configuration_dict"]], "get_stage_position_limits() (aslm.controller.configuration_controller.configurationcontroller method)": [[11, "aslm.controller.configuration_controller.ConfigurationController.get_stage_position_limits"]], "lasers_info (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.lasers_info"]], "microscope_config (aslm.controller.configuration_controller.configurationcontroller attribute)": [[11, "aslm.controller.configuration_controller.ConfigurationController.microscope_config"]], "microscope_name (aslm.controller.configuration_controller.configurationcontroller attribute)": [[11, "aslm.controller.configuration_controller.ConfigurationController.microscope_name"]], "number_of_channels (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.number_of_channels"]], "remote_focus_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.remote_focus_dict"]], "stage_default_position (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.stage_default_position"]], "stage_flip_flags (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.stage_flip_flags"]], "stage_setting_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.stage_setting_dict"]], "stage_step (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.stage_step"]], "aslm.controller.thread_pool": [[12, "module-aslm.controller.thread_pool"]], "selflockthread (class in aslm.controller.thread_pool)": [[13, "aslm.controller.thread_pool.SelfLockThread"]], "__init__() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.__init__"]], "daemon (aslm.controller.thread_pool.selflockthread property)": [[13, "aslm.controller.thread_pool.SelfLockThread.daemon"]], "getname() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.getName"]], "ident (aslm.controller.thread_pool.selflockthread property)": [[13, "aslm.controller.thread_pool.SelfLockThread.ident"]], "isdaemon() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.isDaemon"]], "islocked() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.isLocked"]], "is_alive() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.is_alive"]], "join() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.join"]], "name (aslm.controller.thread_pool.selflockthread property)": [[13, "aslm.controller.thread_pool.SelfLockThread.name"]], "native_id (aslm.controller.thread_pool.selflockthread property)": [[13, "aslm.controller.thread_pool.SelfLockThread.native_id"]], "run() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.run"]], "selflock (aslm.controller.thread_pool.selflockthread attribute)": [[13, "aslm.controller.thread_pool.SelfLockThread.selfLock"]], "setdaemon() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.setDaemon"]], "setname() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.setName"]], "start() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.start"]], "unlock() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.unlock"]], "wait() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.wait"]], "synchronizedthreadpool (class in aslm.controller.thread_pool)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool"]], "__init__() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.__init__"]], "clear() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.clear"]], "createthread() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.createThread"]], "getrunningthread() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.getRunningThread"]], "globaltrace() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.globaltrace"]], "killthreadinlist() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.killThreadInList"]], "localtrace() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.localtrace"]], "movetodelete() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.moveToDelete"]], "registerresource() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.registerResource"]], "removethread() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.removeThread"]], "resources (aslm.controller.thread_pool.synchronizedthreadpool attribute)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.resources"]], "threadtaskwrapping() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.threadTaskWrapping"]], "todeletelist (aslm.controller.thread_pool.synchronizedthreadpool attribute)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.toDeleteList"]], "threadwaitlist (class in aslm.controller.thread_pool)": [[15, "aslm.controller.thread_pool.ThreadWaitlist"]], "__init__() (aslm.controller.thread_pool.threadwaitlist method)": [[15, "aslm.controller.thread_pool.ThreadWaitlist.__init__"]], "waitlist (aslm.controller.thread_pool.threadwaitlist attribute)": [[15, "aslm.controller.thread_pool.ThreadWaitlist.waitlist"]], "waitlistlock (aslm.controller.thread_pool.threadwaitlist attribute)": [[15, "aslm.controller.thread_pool.ThreadWaitlist.waitlistLock"]], "aslm.log_files": [[16, "module-aslm.log_files"]], "aslm.log_files.filters": [[17, "module-aslm.log_files.filters"]], "nonperffilter (class in aslm.log_files.filters)": [[18, "aslm.log_files.filters.NonPerfFilter"]], "__init__() (aslm.log_files.filters.nonperffilter method)": [[18, "aslm.log_files.filters.NonPerfFilter.__init__"]], "filter() (aslm.log_files.filters.nonperffilter method)": [[18, "aslm.log_files.filters.NonPerfFilter.filter"]], "performancefilter (class in aslm.log_files.filters)": [[19, "aslm.log_files.filters.PerformanceFilter"]], "__init__() (aslm.log_files.filters.performancefilter method)": [[19, "aslm.log_files.filters.PerformanceFilter.__init__"]], "filter() (aslm.log_files.filters.performancefilter method)": [[19, "aslm.log_files.filters.PerformanceFilter.filter"]], "aslm.log_files.log_functions": [[20, "module-aslm.log_files.log_functions"]], "find_filename() (in module aslm.log_files.log_functions)": [[21, "aslm.log_files.log_functions.find_filename"]], "log_setup() (in module aslm.log_files.log_functions)": [[22, "aslm.log_files.log_functions.log_setup"]], "main_process_listener() (in module aslm.log_files.log_functions)": [[23, "aslm.log_files.log_functions.main_process_listener"]], "update_nested_dict() (in module aslm.log_files.log_functions)": [[24, "aslm.log_files.log_functions.update_nested_dict"]], "aslm.model": [[25, "module-aslm.model"]], "aslm.model.analysis": [[26, "module-aslm.model.analysis"]], "aslm.model.analysis.boundary_detect": [[27, "module-aslm.model.analysis.boundary_detect"]], "binary_detect() (in module aslm.model.analysis.boundary_detect)": [[28, "aslm.model.analysis.boundary_detect.binary_detect"]], "find_tissue_boundary_2d() (in module aslm.model.analysis.boundary_detect)": [[29, "aslm.model.analysis.boundary_detect.find_tissue_boundary_2d"]], "has_tissue() (in module aslm.model.analysis.boundary_detect)": [[30, "aslm.model.analysis.boundary_detect.has_tissue"]], "map_boundary() (in module aslm.model.analysis.boundary_detect)": [[31, "aslm.model.analysis.boundary_detect.map_boundary"]], "aslm.model.analysis.camera": [[32, "module-aslm.model.analysis.camera"]], "compute_flatfield_map() (in module aslm.model.analysis.camera)": [[33, "aslm.model.analysis.camera.compute_flatfield_map"]], "compute_noise_sigma() (in module aslm.model.analysis.camera)": [[34, "aslm.model.analysis.camera.compute_noise_sigma"]], "compute_scmos_offset_and_variance_map() (in module aslm.model.analysis.camera)": [[35, "aslm.model.analysis.camera.compute_scmos_offset_and_variance_map"]], "compute_signal_to_noise() (in module aslm.model.analysis.camera)": [[36, "aslm.model.analysis.camera.compute_signal_to_noise"]], "aslm.model.analysis.image_contrast": [[37, "module-aslm.model.analysis.image_contrast"]], "fast_normalized_dct_shannon_entropy() (in module aslm.model.analysis.image_contrast)": [[38, "aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy"]], "aslm.model.concurrency": [[39, "module-aslm.model.concurrency"]], "aslm.model.concurrency.concurrency_tools": [[40, "module-aslm.model.concurrency.concurrency_tools"]], "custodythread (class in aslm.model.concurrency.concurrency_tools)": [[41, "aslm.model.concurrency.concurrency_tools.CustodyThread"]], "__init__() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[41, "aslm.model.concurrency.concurrency_tools.CustodyThread.__init__"]], "daemon (aslm.model.concurrency.concurrency_tools.custodythread property)": [[41, "aslm.model.concurrency.concurrency_tools.CustodyThread.daemon"]], "getname() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[41, "aslm.model.concurrency.concurrency_tools.CustodyThread.getName"]], "get_result() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[41, "aslm.model.concurrency.concurrency_tools.CustodyThread.get_result"]], "ident (aslm.model.concurrency.concurrency_tools.custodythread property)": [[41, "aslm.model.concurrency.concurrency_tools.CustodyThread.ident"]], "isdaemon() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[41, "aslm.model.concurrency.concurrency_tools.CustodyThread.isDaemon"]], "is_alive() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[41, "aslm.model.concurrency.concurrency_tools.CustodyThread.is_alive"]], "join() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[41, "aslm.model.concurrency.concurrency_tools.CustodyThread.join"]], "name (aslm.model.concurrency.concurrency_tools.custodythread property)": [[41, "aslm.model.concurrency.concurrency_tools.CustodyThread.name"]], "native_id (aslm.model.concurrency.concurrency_tools.custodythread property)": [[41, "aslm.model.concurrency.concurrency_tools.CustodyThread.native_id"]], "run() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[41, "aslm.model.concurrency.concurrency_tools.CustodyThread.run"]], "setdaemon() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[41, "aslm.model.concurrency.concurrency_tools.CustodyThread.setDaemon"]], "setname() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[41, "aslm.model.concurrency.concurrency_tools.CustodyThread.setName"]], "start() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[41, "aslm.model.concurrency.concurrency_tools.CustodyThread.start"]], "fancythread (in module aslm.model.concurrency.concurrency_tools)": [[42, "aslm.model.concurrency.concurrency_tools.FancyThread"]], "objectinsubprocess (class in aslm.model.concurrency.concurrency_tools)": [[43, "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess"]], "__init__() (aslm.model.concurrency.concurrency_tools.objectinsubprocess method)": [[43, "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess.__init__"]], "politethread (in module aslm.model.concurrency.concurrency_tools)": [[44, "aslm.model.concurrency.concurrency_tools.PoliteThread"]], "resultthread (class in aslm.model.concurrency.concurrency_tools)": [[45, "aslm.model.concurrency.concurrency_tools.ResultThread"]], "__init__() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[45, "aslm.model.concurrency.concurrency_tools.ResultThread.__init__"]], "daemon (aslm.model.concurrency.concurrency_tools.resultthread property)": [[45, "aslm.model.concurrency.concurrency_tools.ResultThread.daemon"]], "getname() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[45, "aslm.model.concurrency.concurrency_tools.ResultThread.getName"]], "get_result() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[45, "aslm.model.concurrency.concurrency_tools.ResultThread.get_result"]], "ident (aslm.model.concurrency.concurrency_tools.resultthread property)": [[45, "aslm.model.concurrency.concurrency_tools.ResultThread.ident"]], "isdaemon() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[45, "aslm.model.concurrency.concurrency_tools.ResultThread.isDaemon"]], "is_alive() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[45, "aslm.model.concurrency.concurrency_tools.ResultThread.is_alive"]], "join() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[45, "aslm.model.concurrency.concurrency_tools.ResultThread.join"]], "name (aslm.model.concurrency.concurrency_tools.resultthread property)": [[45, "aslm.model.concurrency.concurrency_tools.ResultThread.name"]], "native_id (aslm.model.concurrency.concurrency_tools.resultthread property)": [[45, "aslm.model.concurrency.concurrency_tools.ResultThread.native_id"]], "run() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[45, "aslm.model.concurrency.concurrency_tools.ResultThread.run"]], "setdaemon() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[45, "aslm.model.concurrency.concurrency_tools.ResultThread.setDaemon"]], "setname() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[45, "aslm.model.concurrency.concurrency_tools.ResultThread.setName"]], "start() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[45, "aslm.model.concurrency.concurrency_tools.ResultThread.start"]], "aligned (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ALIGNED"]], "behaved (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.BEHAVED"]], "carray (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.CARRAY"]], "c_contiguous (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.C_CONTIGUOUS"]], "farray (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.FARRAY"]], "fnc (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.FNC"]], "forc (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.FORC"]], "f_contiguous (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.F_CONTIGUOUS"]], "owndata (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.OWNDATA"]], "sharedndarray (class in aslm.model.concurrency.concurrency_tools)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray"]], "t (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.T"]], "updateifcopy (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.UPDATEIFCOPY"]], "writeable (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.WRITEABLE"]], "writebackifcopy (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.WRITEBACKIFCOPY"]], "__init__() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.__init__"]], "all() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.all"]], "any() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.any"]], "argmax() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.argmax"]], "argmin() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.argmin"]], "argpartition() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.argpartition"]], "argsort() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.argsort"]], "astype() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.astype"]], "base (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.base"]], "byteswap() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.byteswap"]], "choose() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.choose"]], "clip() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.clip"]], "compress() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.compress"]], "conj() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.conj"]], "conjugate() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.conjugate"]], "copy() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.copy"]], "ctypes (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ctypes"]], "cumprod() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.cumprod"]], "cumsum() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.cumsum"]], "data (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.data"]], "diagonal() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.diagonal"]], "dtype (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.dtype"]], "dump() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.dump"]], "dumps() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.dumps"]], "fill() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.fill"]], "flags (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.flags"]], "flat (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.flat"]], "flatten() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.flatten"]], "getfield() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.getfield"]], "imag (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.imag"]], "item() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.item"]], "itemset() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.itemset"]], "itemsize (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.itemsize"]], "max() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.max"]], "mean() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.mean"]], "min() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.min"]], "nbytes (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.nbytes"]], "ndim (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ndim"]], "newbyteorder() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.newbyteorder"]], "nonzero() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.nonzero"]], "partition() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.partition"]], "prod() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.prod"]], "ptp() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ptp"]], "put() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.put"]], "ravel() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ravel"]], "real (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.real"]], "repeat() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.repeat"]], "reshape() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.reshape"]], "resize() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.resize"]], "round() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.round"]], "searchsorted() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.searchsorted"]], "setfield() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.setfield"]], "setflags() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.setflags"]], "shape (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.shape"]], "size (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.size"]], "sort() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.sort"]], "squeeze() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.squeeze"]], "std() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.std"]], "strides (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.strides"]], "sum() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.sum"]], "swapaxes() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.swapaxes"]], "take() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.take"]], "tobytes() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.tobytes"]], "tofile() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.tofile"]], "tolist() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.tolist"]], "tostring() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.tostring"]], "trace() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.trace"]], "transpose() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.transpose"]], "var() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.var"]], "view() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.view"]], "aslm.model.data_sources": [[47, "module-aslm.model.data_sources"]], "aslm.model.data_sources.bdv_data_source": [[48, "module-aslm.model.data_sources.bdv_data_source"]], "bigdataviewerdatasource (class in aslm.model.data_sources.bdv_data_source)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource"]], "__init__() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.__init__"]], "bits (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.bits"]], "close() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.close"], [49, "id5"], [49, "id6"]], "data (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.data"]], "dc (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.dc"]], "ds_name (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.ds_name"]], "dt (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.dt"]], "dx (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.dx"]], "dy (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.dy"]], "dz (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.dz"]], "file_name (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.file_name"]], "get_slice() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.get_slice"]], "image (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.image"]], "logger (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.logger"]], "metadata (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.metadata"], [49, "id0"]], "mode (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.mode"]], "mode (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[49, "id10"]], "mode() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[49, "id1"]], "nbytes (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[49, "id11"]], "nbytes() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.nbytes"]], "positions (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.positions"]], "read() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.read"], [49, "id3"], [49, "id7"]], "resolutions (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.resolutions"]], "set_metadata_from_configuration_experiment() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.set_metadata_from_configuration_experiment"], [49, "id2"], [49, "id8"]], "setup (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.setup"]], "shape (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[49, "id12"]], "shape() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.shape"]], "shape_c (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.shape_c"]], "shape_t (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.shape_t"]], "shape_x (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.shape_x"]], "shape_y (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.shape_y"]], "shape_z (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.shape_z"]], "shapes (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.shapes"]], "subdivisions (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.subdivisions"]], "voxel_size (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[49, "id13"]], "voxel_size() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.voxel_size"]], "write() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.write"], [49, "id4"], [49, "id9"]], "aslm.model.data_sources.data_source": [[50, "module-aslm.model.data_sources.data_source"]], "datasource (class in aslm.model.data_sources.data_source)": [[51, "aslm.model.data_sources.data_source.DataSource"]], "__init__() (aslm.model.data_sources.data_source.datasource method)": [[51, "aslm.model.data_sources.data_source.DataSource.__init__"]], "bits (aslm.model.data_sources.data_source.datasource attribute)": [[51, "aslm.model.data_sources.data_source.DataSource.bits"]], "close() (aslm.model.data_sources.data_source.datasource method)": [[51, "aslm.model.data_sources.data_source.DataSource.close"], [51, "id1"]], "data (aslm.model.data_sources.data_source.datasource property)": [[51, "aslm.model.data_sources.data_source.DataSource.data"]], "dc (aslm.model.data_sources.data_source.datasource attribute)": [[51, "aslm.model.data_sources.data_source.DataSource.dc"]], "dt (aslm.model.data_sources.data_source.datasource attribute)": [[51, "aslm.model.data_sources.data_source.DataSource.dt"]], "dx (aslm.model.data_sources.data_source.datasource attribute)": [[51, "aslm.model.data_sources.data_source.DataSource.dx"]], "dy (aslm.model.data_sources.data_source.datasource attribute)": [[51, "aslm.model.data_sources.data_source.DataSource.dy"]], "dz (aslm.model.data_sources.data_source.datasource attribute)": [[51, "aslm.model.data_sources.data_source.DataSource.dz"]], "file_name (aslm.model.data_sources.data_source.datasource attribute)": [[51, "aslm.model.data_sources.data_source.DataSource.file_name"]], "logger (aslm.model.data_sources.data_source.datasource attribute)": [[51, "aslm.model.data_sources.data_source.DataSource.logger"]], "metadata (aslm.model.data_sources.data_source.datasource attribute)": [[51, "aslm.model.data_sources.data_source.DataSource.metadata"]], "mode (aslm.model.data_sources.data_source.datasource attribute)": [[51, "aslm.model.data_sources.data_source.DataSource.mode"]], "mode (aslm.model.data_sources.data_source.datasource property)": [[51, "id5"]], "mode() (aslm.model.data_sources.data_source.datasource method)": [[51, "id0"]], "nbytes (aslm.model.data_sources.data_source.datasource property)": [[51, "id6"]], "nbytes() (aslm.model.data_sources.data_source.datasource method)": [[51, "aslm.model.data_sources.data_source.DataSource.nbytes"]], "positions (aslm.model.data_sources.data_source.datasource attribute)": [[51, "aslm.model.data_sources.data_source.DataSource.positions"]], "read() (aslm.model.data_sources.data_source.datasource method)": [[51, "aslm.model.data_sources.data_source.DataSource.read"], [51, "id2"]], "set_metadata_from_configuration_experiment() (aslm.model.data_sources.data_source.datasource method)": [[51, "aslm.model.data_sources.data_source.DataSource.set_metadata_from_configuration_experiment"], [51, "id3"]], "shape (aslm.model.data_sources.data_source.datasource property)": [[51, "id7"]], "shape() (aslm.model.data_sources.data_source.datasource method)": [[51, "aslm.model.data_sources.data_source.DataSource.shape"]], "shape_c (aslm.model.data_sources.data_source.datasource attribute)": [[51, "aslm.model.data_sources.data_source.DataSource.shape_c"]], "shape_t (aslm.model.data_sources.data_source.datasource attribute)": [[51, "aslm.model.data_sources.data_source.DataSource.shape_t"]], "shape_x (aslm.model.data_sources.data_source.datasource attribute)": [[51, "aslm.model.data_sources.data_source.DataSource.shape_x"]], "shape_y (aslm.model.data_sources.data_source.datasource attribute)": [[51, "aslm.model.data_sources.data_source.DataSource.shape_y"]], "shape_z (aslm.model.data_sources.data_source.datasource attribute)": [[51, "aslm.model.data_sources.data_source.DataSource.shape_z"]], "voxel_size (aslm.model.data_sources.data_source.datasource property)": [[51, "id8"]], "voxel_size() (aslm.model.data_sources.data_source.datasource method)": [[51, "aslm.model.data_sources.data_source.DataSource.voxel_size"]], "write() (aslm.model.data_sources.data_source.datasource method)": [[51, "aslm.model.data_sources.data_source.DataSource.write"], [51, "id4"]], "get_data_source() (in module aslm.model.data_sources)": [[52, "aslm.model.data_sources.get_data_source"]], "aslm.model.data_sources.tiff_data_source": [[53, "module-aslm.model.data_sources.tiff_data_source"]], "tiffdatasource (class in aslm.model.data_sources.tiff_data_source)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource"]], "__init__() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.__init__"]], "bits (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.bits"]], "close() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.close"], [54, "id4"], [54, "id5"]], "data (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.data"]], "dc (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.dc"]], "dt (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.dt"]], "dx (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.dx"]], "dy (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.dy"]], "dz (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.dz"]], "file_name (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.file_name"]], "generate_image_name() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.generate_image_name"], [54, "id6"]], "image (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.image"]], "logger (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.logger"]], "metadata (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.metadata"], [54, "id0"]], "mode (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.mode"]], "mode (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[54, "id10"]], "mode() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[54, "id1"]], "nbytes (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[54, "id11"]], "nbytes() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.nbytes"]], "positions (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.positions"]], "read() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.read"], [54, "id2"], [54, "id7"]], "save_directory (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.save_directory"]], "set_metadata_from_configuration_experiment() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.set_metadata_from_configuration_experiment"], [54, "id8"]], "shape (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[54, "id12"]], "shape() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.shape"]], "shape_c (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.shape_c"]], "shape_t (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.shape_t"]], "shape_x (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.shape_x"]], "shape_y (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.shape_y"]], "shape_z (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.shape_z"]], "voxel_size (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[54, "id13"]], "voxel_size() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.voxel_size"]], "write() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.write"], [54, "id3"], [54, "id9"]], "aslm.model.device_startup_functions": [[55, "module-aslm.model.device_startup_functions"]], "dummydeviceconnection (class in aslm.model.device_startup_functions)": [[56, "aslm.model.device_startup_functions.DummyDeviceConnection"]], "__init__() (aslm.model.device_startup_functions.dummydeviceconnection method)": [[56, "aslm.model.device_startup_functions.DummyDeviceConnection.__init__"]], "auto_redial() (in module aslm.model.device_startup_functions)": [[57, "aslm.model.device_startup_functions.auto_redial"]], "device_not_found() (in module aslm.model.device_startup_functions)": [[58, "aslm.model.device_startup_functions.device_not_found"]], "load_camera_connection() (in module aslm.model.device_startup_functions)": [[59, "aslm.model.device_startup_functions.load_camera_connection"]], "load_devices() (in module aslm.model.device_startup_functions)": [[60, "aslm.model.device_startup_functions.load_devices"]], "load_filter_wheel_connection() (in module aslm.model.device_startup_functions)": [[61, "aslm.model.device_startup_functions.load_filter_wheel_connection"]], "load_stages() (in module aslm.model.device_startup_functions)": [[62, "aslm.model.device_startup_functions.load_stages"]], "load_zoom_connection() (in module aslm.model.device_startup_functions)": [[63, "aslm.model.device_startup_functions.load_zoom_connection"]], "start_camera() (in module aslm.model.device_startup_functions)": [[64, "aslm.model.device_startup_functions.start_camera"]], "start_daq() (in module aslm.model.device_startup_functions)": [[65, "aslm.model.device_startup_functions.start_daq"]], "start_filter_wheel() (in module aslm.model.device_startup_functions)": [[66, "aslm.model.device_startup_functions.start_filter_wheel"]], "start_galvo() (in module aslm.model.device_startup_functions)": [[67, "aslm.model.device_startup_functions.start_galvo"]], "start_lasers() (in module aslm.model.device_startup_functions)": [[68, "aslm.model.device_startup_functions.start_lasers"]], "start_remote_focus_device() (in module aslm.model.device_startup_functions)": [[69, "aslm.model.device_startup_functions.start_remote_focus_device"]], "start_shutter() (in module aslm.model.device_startup_functions)": [[70, "aslm.model.device_startup_functions.start_shutter"]], "start_stage() (in module aslm.model.device_startup_functions)": [[71, "aslm.model.device_startup_functions.start_stage"]], "start_zoom() (in module aslm.model.device_startup_functions)": [[72, "aslm.model.device_startup_functions.start_zoom"]], "aslm.model.devices": [[73, "module-aslm.model.devices"]], "aslm.model.devices.apis": [[74, "module-aslm.model.devices.APIs"]], "aslm.model.devices.apis.coherent": [[75, "module-aslm.model.devices.APIs.coherent"]], "aslm.model.devices.apis.dynamixel": [[76, "module-aslm.model.devices.APIs.dynamixel"]], "aslm.model.devices.apis.dynamixel.dynamixel_functions": [[77, "module-aslm.model.devices.APIs.dynamixel.dynamixel_functions"]], "create_mock_dxl_device() (in module aslm.model.devices.apis.dynamixel.dynamixel_functions)": [[78, "aslm.model.devices.APIs.dynamixel.dynamixel_functions.create_mock_dxl_device"]], "aslm.model.devices.apis.omicron": [[79, "module-aslm.model.devices.APIs.omicron"]], "aslm.model.devices.camera": [[80, "module-aslm.model.devices.camera"]], "aslm.model.devices.camera.camera_base": [[81, "module-aslm.model.devices.camera.camera_base"]], "camerabase (class in aslm.model.devices.camera.camera_base)": [[82, "aslm.model.devices.camera.camera_base.CameraBase"]], "__init__() (aslm.model.devices.camera.camera_base.camerabase method)": [[82, "aslm.model.devices.camera.camera_base.CameraBase.__init__"]], "calculate_light_sheet_exposure_time() (aslm.model.devices.camera.camera_base.camerabase method)": [[82, "aslm.model.devices.camera.camera_base.CameraBase.calculate_light_sheet_exposure_time"]], "camera_controller (aslm.model.devices.camera.camera_base.camerabase attribute)": [[82, "aslm.model.devices.camera.camera_base.CameraBase.camera_controller"]], "camera_parameters (aslm.model.devices.camera.camera_base.camerabase attribute)": [[82, "aslm.model.devices.camera.camera_base.CameraBase.camera_parameters"]], "close_camera() (aslm.model.devices.camera.camera_base.camerabase method)": [[82, "aslm.model.devices.camera.camera_base.CameraBase.close_camera"]], "configuration (aslm.model.devices.camera.camera_base.camerabase attribute)": [[82, "aslm.model.devices.camera.camera_base.CameraBase.configuration"]], "get_line_interval() (aslm.model.devices.camera.camera_base.camerabase method)": [[82, "aslm.model.devices.camera.camera_base.CameraBase.get_line_interval"]], "get_offset_variance_maps() (aslm.model.devices.camera.camera_base.camerabase method)": [[82, "aslm.model.devices.camera.camera_base.CameraBase.get_offset_variance_maps"]], "is_acquiring (aslm.model.devices.camera.camera_base.camerabase attribute)": [[82, "aslm.model.devices.camera.camera_base.CameraBase.is_acquiring"]], "max_image_height (aslm.model.devices.camera.camera_base.camerabase attribute)": [[82, "aslm.model.devices.camera.camera_base.CameraBase.max_image_height"]], "max_image_width (aslm.model.devices.camera.camera_base.camerabase attribute)": [[82, "aslm.model.devices.camera.camera_base.CameraBase.max_image_width"]], "min_image_height (aslm.model.devices.camera.camera_base.camerabase attribute)": [[82, "aslm.model.devices.camera.camera_base.CameraBase.min_image_height"]], "min_image_width (aslm.model.devices.camera.camera_base.camerabase attribute)": [[82, "aslm.model.devices.camera.camera_base.CameraBase.min_image_width"]], "offset (aslm.model.devices.camera.camera_base.camerabase property)": [[82, "aslm.model.devices.camera.camera_base.CameraBase.offset"]], "set_readout_direction() (aslm.model.devices.camera.camera_base.camerabase method)": [[82, "aslm.model.devices.camera.camera_base.CameraBase.set_readout_direction"]], "step_image_height (aslm.model.devices.camera.camera_base.camerabase attribute)": [[82, "aslm.model.devices.camera.camera_base.CameraBase.step_image_height"]], "step_image_width (aslm.model.devices.camera.camera_base.camerabase attribute)": [[82, "aslm.model.devices.camera.camera_base.CameraBase.step_image_width"]], "variance (aslm.model.devices.camera.camera_base.camerabase property)": [[82, "aslm.model.devices.camera.camera_base.CameraBase.variance"]], "x_pixels (aslm.model.devices.camera.camera_base.camerabase attribute)": [[82, "aslm.model.devices.camera.camera_base.CameraBase.x_pixels"]], "y_pixels (aslm.model.devices.camera.camera_base.camerabase attribute)": [[82, "aslm.model.devices.camera.camera_base.CameraBase.y_pixels"]], "aslm.model.devices.camera.camera_hamamatsu": [[83, "module-aslm.model.devices.camera.camera_hamamatsu"]], "hamamatsuorca (class in aslm.model.devices.camera.camera_hamamatsu)": [[84, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca"]], "__init__() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[84, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.__init__"]], "calculate_light_sheet_exposure_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[84, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.calculate_light_sheet_exposure_time"]], "calculate_readout_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[84, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.calculate_readout_time"]], "camera_controller (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca attribute)": [[84, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.camera_controller"]], "camera_parameters (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca attribute)": [[84, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.camera_parameters"]], "close_camera() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[84, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.close_camera"]], "close_image_series() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[84, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.close_image_series"]], "configuration (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca attribute)": [[84, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.configuration"]], "get_line_interval() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[84, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.get_line_interval"]], "get_minimum_waiting_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[84, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.get_minimum_waiting_time"]], "get_new_frame() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[84, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.get_new_frame"]], "get_offset_variance_maps() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[84, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.get_offset_variance_maps"]], "initialize_image_series() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[84, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.initialize_image_series"]], "is_acquiring (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca attribute)": [[84, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.is_acquiring"]], "max_image_height (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[84, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.max_image_height"]], "max_image_width (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[84, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.max_image_width"]], "min_image_height (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[84, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.min_image_height"]], "min_image_width (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[84, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.min_image_width"]], "offset (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[84, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.offset"]], "report_settings() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[84, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.report_settings"]], "serial_number (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[84, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.serial_number"]], "set_roi() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[84, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_ROI"]], "set_binning() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[84, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_binning"]], "set_exposure_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[84, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_exposure_time"]], "set_line_interval() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[84, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_line_interval"]], "set_readout_direction() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[84, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_readout_direction"]], "set_sensor_mode() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[84, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_sensor_mode"]], "step_image_height (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[84, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.step_image_height"]], "step_image_width (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[84, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.step_image_width"]], "variance (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[84, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.variance"]], "x_pixels (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca attribute)": [[84, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.x_pixels"]], "y_pixels (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca attribute)": [[84, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.y_pixels"]], "hamamatsuorcalightning (class in aslm.model.devices.camera.camera_hamamatsu)": [[85, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning"]], "__init__() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[85, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.__init__"]], "calculate_light_sheet_exposure_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[85, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.calculate_light_sheet_exposure_time"]], "calculate_readout_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[85, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.calculate_readout_time"]], "camera_controller (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning attribute)": [[85, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.camera_controller"]], "camera_parameters (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning attribute)": [[85, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.camera_parameters"]], "close_camera() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[85, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.close_camera"]], "close_image_series() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[85, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.close_image_series"]], "configuration (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning attribute)": [[85, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.configuration"]], "get_line_interval() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[85, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.get_line_interval"]], "get_minimum_waiting_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[85, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.get_minimum_waiting_time"]], "get_new_frame() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[85, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.get_new_frame"]], "get_offset_variance_maps() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[85, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.get_offset_variance_maps"]], "initialize_image_series() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[85, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.initialize_image_series"]], "is_acquiring (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning attribute)": [[85, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.is_acquiring"]], "max_image_height (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning property)": [[85, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.max_image_height"]], "max_image_width (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning property)": [[85, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.max_image_width"]], "min_image_height (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning property)": [[85, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.min_image_height"]], "min_image_width (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning property)": [[85, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.min_image_width"]], "offset (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning property)": [[85, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.offset"]], "report_settings() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[85, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.report_settings"]], "serial_number (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning property)": [[85, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.serial_number"]], "set_roi() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[85, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.set_ROI"]], "set_binning() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[85, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.set_binning"]], "set_exposure_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[85, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.set_exposure_time"]], "set_line_interval() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[85, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.set_line_interval"]], "set_readout_direction() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[85, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.set_readout_direction"]], "set_sensor_mode() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[85, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.set_sensor_mode"]], "step_image_height (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning property)": [[85, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.step_image_height"]], "step_image_width (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning property)": [[85, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.step_image_width"]], "variance (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning property)": [[85, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.variance"]], "x_pixels (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning attribute)": [[85, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.x_pixels"]], "y_pixels (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning attribute)": [[85, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.y_pixels"]], "aslm.model.devices.camera.camera_photometrics": [[86, "module-aslm.model.devices.camera.camera_photometrics"]], "photometricskinetix (class in aslm.model.devices.camera.camera_photometrics)": [[87, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix"]], "__init__() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[87, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.__init__"]], "calculate_light_sheet_exposure_time() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[87, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.calculate_light_sheet_exposure_time"]], "calculate_readout_time() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[87, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.calculate_readout_time"]], "camera_controller (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[87, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.camera_controller"]], "camera_parameters (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[87, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.camera_parameters"]], "close_camera() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[87, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.close_camera"]], "close_image_series() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[87, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.close_image_series"]], "configuration (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[87, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.configuration"]], "get_line_interval() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[87, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.get_line_interval"]], "get_minimum_waiting_time() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[87, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.get_minimum_waiting_time"]], "get_new_frame() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[87, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.get_new_frame"]], "get_offset_variance_maps() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[87, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.get_offset_variance_maps"]], "initialize_image_series() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[87, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.initialize_image_series"]], "is_acquiring (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[87, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.is_acquiring"]], "max_image_height (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[87, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.max_image_height"]], "max_image_width (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[87, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.max_image_width"]], "min_image_height (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[87, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.min_image_height"]], "min_image_width (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[87, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.min_image_width"]], "offset (aslm.model.devices.camera.camera_photometrics.photometricskinetix property)": [[87, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.offset"]], "report_settings() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[87, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.report_settings"]], "serial_number (aslm.model.devices.camera.camera_photometrics.photometricskinetix property)": [[87, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.serial_number"]], "set_roi() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[87, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.set_ROI"]], "set_binning() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[87, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.set_binning"]], "set_exposure_time() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[87, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.set_exposure_time"]], "set_line_interval() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[87, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.set_line_interval"]], "set_readout_direction() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[87, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.set_readout_direction"]], "set_sensor_mode() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[87, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.set_sensor_mode"]], "step_image_height (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[87, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.step_image_height"]], "step_image_width (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[87, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.step_image_width"]], "variance (aslm.model.devices.camera.camera_photometrics.photometricskinetix property)": [[87, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.variance"]], "x_pixels (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[87, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.x_pixels"]], "y_pixels (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[87, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.y_pixels"]], "aslm.model.devices.camera.camera_synthetic": [[88, "module-aslm.model.devices.camera.camera_synthetic"]], "syntheticcamera (class in aslm.model.devices.camera.camera_synthetic)": [[89, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera"]], "__init__() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[89, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.__init__"]], "calculate_light_sheet_exposure_time() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[89, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.calculate_light_sheet_exposure_time"]], "calculate_readout_time() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[89, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.calculate_readout_time"]], "camera_controller (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[89, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.camera_controller"]], "camera_exposure_time (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[89, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.camera_exposure_time"]], "camera_parameters (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[89, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.camera_parameters"]], "close_camera() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[89, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.close_camera"]], "close_image_series() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[89, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.close_image_series"]], "configuration (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[89, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.configuration"]], "current_frame_idx (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[89, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.current_frame_idx"]], "data_buffer (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[89, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.data_buffer"]], "generate_new_frame() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[89, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.generate_new_frame"]], "get_line_interval() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[89, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.get_line_interval"]], "get_minimum_waiting_time() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[89, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.get_minimum_waiting_time"]], "get_new_frame() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[89, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.get_new_frame"]], "get_offset_variance_maps() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[89, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.get_offset_variance_maps"]], "initialize_image_series() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[89, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.initialize_image_series"]], "is_acquiring (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[89, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.is_acquiring"]], "load_images() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[89, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.load_images"]], "max_image_height (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[89, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.max_image_height"]], "max_image_width (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[89, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.max_image_width"]], "min_image_height (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[89, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.min_image_height"]], "min_image_width (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[89, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.min_image_width"]], "num_of_frame (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[89, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.num_of_frame"]], "offset (aslm.model.devices.camera.camera_synthetic.syntheticcamera property)": [[89, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.offset"]], "pre_frame_idx (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[89, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.pre_frame_idx"]], "random_image (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[89, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.random_image"]], "report_settings() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[89, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.report_settings"]], "serial_number (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[89, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.serial_number"]], "set_roi() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[89, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_ROI"]], "set_binning() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[89, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_binning"]], "set_exposure_time() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[89, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_exposure_time"]], "set_line_interval() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[89, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_line_interval"]], "set_readout_direction() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[89, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_readout_direction"]], "set_sensor_mode() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[89, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_sensor_mode"]], "step_image_height (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[89, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.step_image_height"]], "step_image_width (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[89, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.step_image_width"]], "variance (aslm.model.devices.camera.camera_synthetic.syntheticcamera property)": [[89, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.variance"]], "x_pixels (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[89, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.x_pixels"]], "y_pixels (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[89, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.y_pixels"]], "syntheticcameracontroller (class in aslm.model.devices.camera.camera_synthetic)": [[90, "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController"]], "__init__() (aslm.model.devices.camera.camera_synthetic.syntheticcameracontroller method)": [[90, "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController.__init__"]], "get_property_value() (aslm.model.devices.camera.camera_synthetic.syntheticcameracontroller method)": [[90, "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController.get_property_value"]], "set_property_value() (aslm.model.devices.camera.camera_synthetic.syntheticcameracontroller method)": [[90, "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController.set_property_value"]], "aslm.model.devices.daq": [[91, "module-aslm.model.devices.daq"]], "aslm.model.devices.daq.daq_base": [[92, "module-aslm.model.devices.daq.daq_base"]], "daqbase (class in aslm.model.devices.daq.daq_base)": [[93, "aslm.model.devices.daq.daq_base.DAQBase"]], "__init__() (aslm.model.devices.daq.daq_base.daqbase method)": [[93, "aslm.model.devices.daq.daq_base.DAQBase.__init__"]], "calculate_all_waveforms() (aslm.model.devices.daq.daq_base.daqbase method)": [[93, "aslm.model.devices.daq.daq_base.DAQBase.calculate_all_waveforms"]], "camera_delay (aslm.model.devices.daq.daq_base.daqbase attribute)": [[93, "aslm.model.devices.daq.daq_base.DAQBase.camera_delay"]], "camera_delay_percent (aslm.model.devices.daq.daq_base.daqbase attribute)": [[93, "aslm.model.devices.daq.daq_base.DAQBase.camera_delay_percent"]], "camera_high_time (aslm.model.devices.daq.daq_base.daqbase attribute)": [[93, "aslm.model.devices.daq.daq_base.DAQBase.camera_high_time"]], "camera_pulse_percent (aslm.model.devices.daq.daq_base.daqbase attribute)": [[93, "aslm.model.devices.daq.daq_base.DAQBase.camera_pulse_percent"]], "configuration (aslm.model.devices.daq.daq_base.daqbase attribute)": [[93, "aslm.model.devices.daq.daq_base.DAQBase.configuration"]], "daq_parameters (aslm.model.devices.daq.daq_base.daqbase attribute)": [[93, "aslm.model.devices.daq.daq_base.DAQBase.daq_parameters"]], "enable_microscope() (aslm.model.devices.daq.daq_base.daqbase method)": [[93, "aslm.model.devices.daq.daq_base.DAQBase.enable_microscope"]], "microscope_name (aslm.model.devices.daq.daq_base.daqbase attribute)": [[93, "aslm.model.devices.daq.daq_base.DAQBase.microscope_name"]], "remote_focus_ramp_falling (aslm.model.devices.daq.daq_base.daqbase attribute)": [[93, "aslm.model.devices.daq.daq_base.DAQBase.remote_focus_ramp_falling"]], "sample_rate (aslm.model.devices.daq.daq_base.daqbase attribute)": [[93, "aslm.model.devices.daq.daq_base.DAQBase.sample_rate"]], "sweep_time (aslm.model.devices.daq.daq_base.daqbase attribute)": [[93, "aslm.model.devices.daq.daq_base.DAQBase.sweep_time"]], "waveform_constants (aslm.model.devices.daq.daq_base.daqbase attribute)": [[93, "aslm.model.devices.daq.daq_base.DAQBase.waveform_constants"]], "waveform_dict (aslm.model.devices.daq.daq_base.daqbase attribute)": [[93, "aslm.model.devices.daq.daq_base.DAQBase.waveform_dict"]], "waveform_expand_num (aslm.model.devices.daq.daq_base.daqbase attribute)": [[93, "aslm.model.devices.daq.daq_base.DAQBase.waveform_expand_num"]], "waveform_repeat_num (aslm.model.devices.daq.daq_base.daqbase attribute)": [[93, "aslm.model.devices.daq.daq_base.DAQBase.waveform_repeat_num"]], "aslm.model.devices.daq.daq_synthetic": [[94, "module-aslm.model.devices.daq.daq_synthetic"]], "syntheticdaq (class in aslm.model.devices.daq.daq_synthetic)": [[95, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ"]], "__init__() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[95, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.__init__"]], "add_camera() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[95, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.add_camera"]], "analog_outputs (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[95, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.analog_outputs"]], "calculate_all_waveforms() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[95, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.calculate_all_waveforms"]], "camera (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[95, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.camera"]], "camera_delay (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[95, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.camera_delay"]], "camera_delay_percent (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[95, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.camera_delay_percent"]], "camera_high_time (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[95, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.camera_high_time"]], "camera_pulse_percent (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[95, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.camera_pulse_percent"]], "close_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[95, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.close_tasks"]], "configuration (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[95, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.configuration"]], "create_camera_task() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[95, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.create_camera_task"]], "create_galvo_remote_focus_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[95, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.create_galvo_remote_focus_tasks"]], "create_master_trigger_task() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[95, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.create_master_trigger_task"]], "daq_parameters (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[95, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.daq_parameters"]], "enable_microscope() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[95, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.enable_microscope"]], "is_updating_analog_task (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[95, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.is_updating_analog_task"]], "microscope_name (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[95, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.microscope_name"]], "prepare_acquisition() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[95, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.prepare_acquisition"]], "remote_focus_ramp_falling (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[95, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.remote_focus_ramp_falling"]], "run_acquisition() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[95, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.run_acquisition"]], "sample_rate (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[95, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.sample_rate"]], "set_external_trigger() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[95, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.set_external_trigger"]], "start_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[95, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.start_tasks"]], "stop_acquisition() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[95, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.stop_acquisition"]], "stop_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[95, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.stop_tasks"]], "sweep_time (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[95, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.sweep_time"]], "trigger_mode (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[95, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.trigger_mode"]], "update_analog_task() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[95, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.update_analog_task"]], "wait_to_run_lock (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[95, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.wait_to_run_lock"]], "waveform_constants (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[95, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.waveform_constants"]], "waveform_dict (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[95, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.waveform_dict"]], "waveform_expand_num (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[95, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.waveform_expand_num"]], "waveform_repeat_num (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[95, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.waveform_repeat_num"]], "write_waveforms_to_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[95, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.write_waveforms_to_tasks"]], "aslm.model.devices.filter_wheel": [[96, "module-aslm.model.devices.filter_wheel"]], "aslm.model.devices.filter_wheel.filter_wheel_asi": [[97, "module-aslm.model.devices.filter_wheel.filter_wheel_asi"]], "asifilterwheel (class in aslm.model.devices.filter_wheel.filter_wheel_asi)": [[98, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel"]], "__init__() (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel method)": [[98, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.__init__"]], "active_filter_wheel (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel attribute)": [[98, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.active_filter_wheel"]], "check_if_filter_in_filter_dictionary() (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel method)": [[98, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.check_if_filter_in_filter_dictionary"]], "close() (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel method)": [[98, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.close"]], "filter_change_delay() (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel method)": [[98, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.filter_change_delay"]], "filter_dictionary (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel attribute)": [[98, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.filter_dictionary"]], "filter_wheel (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel attribute)": [[98, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.filter_wheel"]], "filter_wheel_position (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel attribute)": [[98, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.filter_wheel_position"]], "microscope_name (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel attribute)": [[98, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.microscope_name"]], "number_of_filter_wheels (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel attribute)": [[98, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.number_of_filter_wheels"]], "set_filter() (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel method)": [[98, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.set_filter"]], "wait_until_done_delay (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel attribute)": [[98, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.wait_until_done_delay"]], "wheel_position (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel attribute)": [[98, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.wheel_position"]], "build_filter_wheel_connection() (in module aslm.model.devices.filter_wheel.filter_wheel_asi)": [[99, "aslm.model.devices.filter_wheel.filter_wheel_asi.build_filter_wheel_connection"]], "aslm.model.devices.filter_wheel.filter_wheel_base": [[100, "module-aslm.model.devices.filter_wheel.filter_wheel_base"]], "filterwheelbase (class in aslm.model.devices.filter_wheel.filter_wheel_base)": [[101, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase"]], "__init__() (aslm.model.devices.filter_wheel.filter_wheel_base.filterwheelbase method)": [[101, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.__init__"]], "check_if_filter_in_filter_dictionary() (aslm.model.devices.filter_wheel.filter_wheel_base.filterwheelbase method)": [[101, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.check_if_filter_in_filter_dictionary"]], "filter_dictionary (aslm.model.devices.filter_wheel.filter_wheel_base.filterwheelbase attribute)": [[101, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.filter_dictionary"]], "wheel_position (aslm.model.devices.filter_wheel.filter_wheel_base.filterwheelbase attribute)": [[101, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.wheel_position"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter": [[102, "module-aslm.model.devices.filter_wheel.filter_wheel_sutter"]], "sutterfilterwheel (class in aslm.model.devices.filter_wheel.filter_wheel_sutter)": [[103, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel"]], "__init__() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[103, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.__init__"]], "check_if_filter_in_filter_dictionary() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[103, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.check_if_filter_in_filter_dictionary"]], "close() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[103, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.close"]], "delay_matrix (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[103, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.delay_matrix"]], "filter_change_delay() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[103, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.filter_change_delay"]], "filter_dictionary (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[103, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.filter_dictionary"]], "init_finished (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[103, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.init_finished"]], "microscope_name (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[103, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.microscope_name"]], "number_of_filter_wheels (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[103, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.number_of_filter_wheels"]], "read() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[103, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.read"]], "read_on_init (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[103, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.read_on_init"]], "serial (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[103, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.serial"]], "set_filter() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[103, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.set_filter"]], "speed (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[103, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.speed"]], "wait_until_done (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[103, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.wait_until_done"]], "wait_until_done_delay (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[103, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.wait_until_done_delay"]], "wheel_position (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[103, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.wheel_position"]], "baudrate (in module aslm.model.devices.filter_wheel.filter_wheel_sutter)": [[104, "aslm.model.devices.filter_wheel.filter_wheel_sutter.baudrate"]], "build_filter_wheel_connection() (in module aslm.model.devices.filter_wheel.filter_wheel_sutter)": [[104, "aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection"]], "comport (in module aslm.model.devices.filter_wheel.filter_wheel_sutter)": [[104, "aslm.model.devices.filter_wheel.filter_wheel_sutter.comport"]], "timeout (in module aslm.model.devices.filter_wheel.filter_wheel_sutter)": [[104, "aslm.model.devices.filter_wheel.filter_wheel_sutter.timeout"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic": [[105, "module-aslm.model.devices.filter_wheel.filter_wheel_synthetic"]], "syntheticfilterwheel (class in aslm.model.devices.filter_wheel.filter_wheel_synthetic)": [[106, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel"]], "__init__() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[106, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.__init__"]], "baudrate (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[106, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.baudrate"]], "check_if_filter_in_filter_dictionary() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[106, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.check_if_filter_in_filter_dictionary"]], "close() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[106, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.close"]], "comport (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[106, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.comport"]], "filter_change_delay() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[106, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.filter_change_delay"]], "filter_dictionary (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[106, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.filter_dictionary"], [106, "id0"]], "number_of_filter_wheels (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[106, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.number_of_filter_wheels"]], "read() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[106, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.read"]], "set_filter() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[106, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.set_filter"]], "wheel_position (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[106, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.wheel_position"], [106, "id1"]], "aslm.model.devices.galvo": [[107, "module-aslm.model.devices.galvo"]], "aslm.model.devices.galvo.galvo_base": [[108, "module-aslm.model.devices.galvo.galvo_base"]], "galvobase (class in aslm.model.devices.galvo.galvo_base)": [[109, "aslm.model.devices.galvo.galvo_base.GalvoBase"]], "__init__() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[109, "aslm.model.devices.galvo.galvo_base.GalvoBase.__init__"]], "adjust() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[109, "aslm.model.devices.galvo.galvo_base.GalvoBase.adjust"]], "camera_delay_percent (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[109, "aslm.model.devices.galvo.galvo_base.GalvoBase.camera_delay_percent"]], "close_task() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[109, "aslm.model.devices.galvo.galvo_base.GalvoBase.close_task"]], "configuration (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[109, "aslm.model.devices.galvo.galvo_base.GalvoBase.configuration"]], "device_config (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[109, "aslm.model.devices.galvo.galvo_base.GalvoBase.device_config"]], "galvo_max_voltage (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[109, "aslm.model.devices.galvo.galvo_base.GalvoBase.galvo_max_voltage"]], "galvo_min_voltage (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[109, "aslm.model.devices.galvo.galvo_base.GalvoBase.galvo_min_voltage"]], "galvo_name (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[109, "aslm.model.devices.galvo.galvo_base.GalvoBase.galvo_name"]], "galvo_waveform (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[109, "aslm.model.devices.galvo.galvo_base.GalvoBase.galvo_waveform"]], "microscope_name (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[109, "aslm.model.devices.galvo.galvo_base.GalvoBase.microscope_name"]], "prepare_task() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[109, "aslm.model.devices.galvo.galvo_base.GalvoBase.prepare_task"]], "remote_focus_ramp_falling (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[109, "aslm.model.devices.galvo.galvo_base.GalvoBase.remote_focus_ramp_falling"]], "sample_rate (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[109, "aslm.model.devices.galvo.galvo_base.GalvoBase.sample_rate"]], "samples (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[109, "aslm.model.devices.galvo.galvo_base.GalvoBase.samples"]], "start_task() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[109, "aslm.model.devices.galvo.galvo_base.GalvoBase.start_task"]], "stop_task() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[109, "aslm.model.devices.galvo.galvo_base.GalvoBase.stop_task"]], "sweep_time (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[109, "aslm.model.devices.galvo.galvo_base.GalvoBase.sweep_time"]], "turn_off() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[109, "aslm.model.devices.galvo.galvo_base.GalvoBase.turn_off"]], "waveform_dict (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[109, "aslm.model.devices.galvo.galvo_base.GalvoBase.waveform_dict"]], "aslm.model.devices.galvo.galvo_synthetic": [[110, "module-aslm.model.devices.galvo.galvo_synthetic"]], "syntheticgalvo (class in aslm.model.devices.galvo.galvo_synthetic)": [[111, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo"]], "__init__() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[111, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.__init__"]], "adjust() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[111, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.adjust"]], "camera_delay_percent (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[111, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.camera_delay_percent"]], "close_task() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[111, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.close_task"]], "configuration (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[111, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.configuration"]], "device_config (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[111, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.device_config"]], "galvo_max_voltage (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[111, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.galvo_max_voltage"]], "galvo_min_voltage (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[111, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.galvo_min_voltage"]], "galvo_name (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[111, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.galvo_name"]], "galvo_waveform (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[111, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.galvo_waveform"]], "microscope_name (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[111, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.microscope_name"]], "prepare_task() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[111, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.prepare_task"]], "remote_focus_ramp_falling (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[111, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.remote_focus_ramp_falling"]], "sample_rate (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[111, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.sample_rate"]], "samples (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[111, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.samples"]], "start_task() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[111, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.start_task"]], "stop_task() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[111, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.stop_task"]], "sweep_time (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[111, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.sweep_time"]], "turn_off() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[111, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.turn_off"]], "waveform_dict (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[111, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.waveform_dict"]], "aslm.model.devices.lasers": [[112, "module-aslm.model.devices.lasers"]], "aslm.model.devices.lasers.laser_base": [[113, "module-aslm.model.devices.lasers.laser_base"]], "laserbase (class in aslm.model.devices.lasers.laser_base)": [[114, "aslm.model.devices.lasers.laser_base.LaserBase"]], "__init__() (aslm.model.devices.lasers.laser_base.laserbase method)": [[114, "aslm.model.devices.lasers.laser_base.LaserBase.__init__"]], "close() (aslm.model.devices.lasers.laser_base.laserbase method)": [[114, "aslm.model.devices.lasers.laser_base.LaserBase.close"]], "configuration (aslm.model.devices.lasers.laser_base.laserbase attribute)": [[114, "aslm.model.devices.lasers.laser_base.LaserBase.configuration"]], "device_config (aslm.model.devices.lasers.laser_base.laserbase attribute)": [[114, "aslm.model.devices.lasers.laser_base.LaserBase.device_config"]], "initialize_laser() (aslm.model.devices.lasers.laser_base.laserbase method)": [[114, "aslm.model.devices.lasers.laser_base.LaserBase.initialize_laser"]], "microscope_name (aslm.model.devices.lasers.laser_base.laserbase attribute)": [[114, "aslm.model.devices.lasers.laser_base.LaserBase.microscope_name"]], "set_power() (aslm.model.devices.lasers.laser_base.laserbase method)": [[114, "aslm.model.devices.lasers.laser_base.LaserBase.set_power"]], "turn_off() (aslm.model.devices.lasers.laser_base.laserbase method)": [[114, "aslm.model.devices.lasers.laser_base.LaserBase.turn_off"]], "turn_on() (aslm.model.devices.lasers.laser_base.laserbase method)": [[114, "aslm.model.devices.lasers.laser_base.LaserBase.turn_on"]], "aslm.model.devices.lasers.laser_synthetic": [[115, "module-aslm.model.devices.lasers.laser_synthetic"]], "syntheticlaser (class in aslm.model.devices.lasers.laser_synthetic)": [[116, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser"]], "__init__() (aslm.model.devices.lasers.laser_synthetic.syntheticlaser method)": [[116, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.__init__"]], "close() (aslm.model.devices.lasers.laser_synthetic.syntheticlaser method)": [[116, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.close"]], "configuration (aslm.model.devices.lasers.laser_synthetic.syntheticlaser attribute)": [[116, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.configuration"]], "device_config (aslm.model.devices.lasers.laser_synthetic.syntheticlaser attribute)": [[116, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.device_config"]], "initialize_laser() (aslm.model.devices.lasers.laser_synthetic.syntheticlaser method)": [[116, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.initialize_laser"]], "microscope_name (aslm.model.devices.lasers.laser_synthetic.syntheticlaser attribute)": [[116, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.microscope_name"]], "set_power() (aslm.model.devices.lasers.laser_synthetic.syntheticlaser method)": [[116, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.set_power"]], "turn_off() (aslm.model.devices.lasers.laser_synthetic.syntheticlaser method)": [[116, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.turn_off"]], "turn_on() (aslm.model.devices.lasers.laser_synthetic.syntheticlaser method)": [[116, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.turn_on"]], "aslm.model.devices.objectives": [[117, "module-aslm.model.devices.objectives"]], "objective (class in aslm.model.devices.objectives)": [[118, "aslm.model.devices.objectives.Objective"]], "__init__() (aslm.model.devices.objectives.objective method)": [[118, "aslm.model.devices.objectives.Objective.__init__"]], "calculate_entrance_pupil() (aslm.model.devices.objectives.objective method)": [[118, "aslm.model.devices.objectives.Objective.calculate_entrance_pupil"]], "aslm.model.devices.remote_focus": [[119, "module-aslm.model.devices.remote_focus"]], "aslm.model.devices.remote_focus.remote_focus_base": [[120, "module-aslm.model.devices.remote_focus.remote_focus_base"]], "remotefocusbase (class in aslm.model.devices.remote_focus.remote_focus_base)": [[121, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase"]], "__init__() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[121, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.__init__"]], "adjust() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[121, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.adjust"]], "camera_delay_percent (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[121, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.camera_delay_percent"]], "close_task() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[121, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.close_task"]], "configuration (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[121, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.configuration"]], "device_config (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[121, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.device_config"]], "microscope_name (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[121, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.microscope_name"]], "percent_smoothing (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[121, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.percent_smoothing"]], "prepare_task() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[121, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.prepare_task"]], "remote_focus_delay (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[121, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.remote_focus_delay"]], "remote_focus_max_voltage (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[121, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.remote_focus_max_voltage"]], "remote_focus_min_voltage (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[121, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.remote_focus_min_voltage"]], "remote_focus_ramp_falling (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[121, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.remote_focus_ramp_falling"]], "sample_rate (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[121, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.sample_rate"]], "samples (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[121, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.samples"]], "start_task() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[121, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.start_task"]], "stop_task() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[121, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.stop_task"]], "sweep_time (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[121, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.sweep_time"]], "waveform_dict (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[121, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.waveform_dict"]], "aslm.model.devices.remote_focus.remote_focus_synthetic": [[122, "module-aslm.model.devices.remote_focus.remote_focus_synthetic"]], "syntheticremotefocus (class in aslm.model.devices.remote_focus.remote_focus_synthetic)": [[123, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus"]], "__init__() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[123, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.__init__"]], "adjust() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[123, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.adjust"]], "camera_delay_percent (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[123, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.camera_delay_percent"]], "close_task() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[123, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.close_task"]], "configuration (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[123, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.configuration"]], "device_config (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[123, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.device_config"]], "microscope_name (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[123, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.microscope_name"]], "move() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[123, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.move"]], "percent_smoothing (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[123, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.percent_smoothing"]], "prepare_task() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[123, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.prepare_task"]], "remote_focus_delay (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[123, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.remote_focus_delay"]], "remote_focus_max_voltage (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[123, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.remote_focus_max_voltage"]], "remote_focus_min_voltage (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[123, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.remote_focus_min_voltage"]], "remote_focus_ramp_falling (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[123, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.remote_focus_ramp_falling"]], "sample_rate (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[123, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.sample_rate"]], "samples (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[123, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.samples"]], "start_task() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[123, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.start_task"]], "stop_task() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[123, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.stop_task"]], "sweep_time (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[123, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.sweep_time"]], "waveform_dict (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[123, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.waveform_dict"]], "aslm.model.devices.shutter": [[124, "module-aslm.model.devices.shutter"]], "aslm.model.devices.shutter.laser_shutter_base": [[125, "module-aslm.model.devices.shutter.laser_shutter_base"]], "shutterbase (class in aslm.model.devices.shutter.laser_shutter_base)": [[126, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase"]], "__init__() (aslm.model.devices.shutter.laser_shutter_base.shutterbase method)": [[126, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.__init__"]], "close_shutter() (aslm.model.devices.shutter.laser_shutter_base.shutterbase method)": [[126, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.close_shutter"]], "open_shutter() (aslm.model.devices.shutter.laser_shutter_base.shutterbase method)": [[126, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.open_shutter"]], "shutter_state (aslm.model.devices.shutter.laser_shutter_base.shutterbase attribute)": [[126, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.shutter_state"]], "state (aslm.model.devices.shutter.laser_shutter_base.shutterbase property)": [[126, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.state"]], "aslm.model.devices.shutter.laser_shutter_synthetic": [[127, "module-aslm.model.devices.shutter.laser_shutter_synthetic"]], "syntheticshutter (class in aslm.model.devices.shutter.laser_shutter_synthetic)": [[128, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter"]], "__init__() (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter method)": [[128, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.__init__"]], "close_shutter() (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter method)": [[128, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.close_shutter"]], "open_shutter() (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter method)": [[128, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.open_shutter"]], "shutter_state (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter attribute)": [[128, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.shutter_state"]], "state (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter property)": [[128, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.state"]], "aslm.model.devices.stages": [[129, "module-aslm.model.devices.stages"]], "aslm.model.devices.stages.stage_asi": [[130, "module-aslm.model.devices.stages.stage_asi"]], "asistage (class in aslm.model.devices.stages.stage_asi)": [[131, "aslm.model.devices.stages.stage_asi.ASIStage"]], "__init__() (aslm.model.devices.stages.stage_asi.asistage method)": [[131, "aslm.model.devices.stages.stage_asi.ASIStage.__init__"]], "axes (aslm.model.devices.stages.stage_asi.asistage attribute)": [[131, "aslm.model.devices.stages.stage_asi.ASIStage.axes"]], "axes_mapping (aslm.model.devices.stages.stage_asi.asistage attribute)": [[131, "aslm.model.devices.stages.stage_asi.ASIStage.axes_mapping"]], "close() (aslm.model.devices.stages.stage_asi.asistage method)": [[131, "aslm.model.devices.stages.stage_asi.ASIStage.close"]], "get_abs_position() (aslm.model.devices.stages.stage_asi.asistage method)": [[131, "aslm.model.devices.stages.stage_asi.ASIStage.get_abs_position"]], "get_axis_position() (aslm.model.devices.stages.stage_asi.asistage method)": [[131, "aslm.model.devices.stages.stage_asi.ASIStage.get_axis_position"]], "get_position_dict() (aslm.model.devices.stages.stage_asi.asistage method)": [[131, "aslm.model.devices.stages.stage_asi.ASIStage.get_position_dict"]], "get_speed() (aslm.model.devices.stages.stage_asi.asistage method)": [[131, "aslm.model.devices.stages.stage_asi.ASIStage.get_speed"]], "move_absolute() (aslm.model.devices.stages.stage_asi.asistage method)": [[131, "aslm.model.devices.stages.stage_asi.ASIStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_asi.asistage method)": [[131, "aslm.model.devices.stages.stage_asi.ASIStage.move_axis_absolute"]], "report_position() (aslm.model.devices.stages.stage_asi.asistage method)": [[131, "aslm.model.devices.stages.stage_asi.ASIStage.report_position"]], "scanr() (aslm.model.devices.stages.stage_asi.asistage method)": [[131, "aslm.model.devices.stages.stage_asi.ASIStage.scanr"]], "set_speed() (aslm.model.devices.stages.stage_asi.asistage method)": [[131, "aslm.model.devices.stages.stage_asi.ASIStage.set_speed"]], "stage_feedback (aslm.model.devices.stages.stage_asi.asistage attribute)": [[131, "aslm.model.devices.stages.stage_asi.ASIStage.stage_feedback"]], "stage_limits (aslm.model.devices.stages.stage_asi.asistage attribute)": [[131, "aslm.model.devices.stages.stage_asi.ASIStage.stage_limits"]], "start_scan() (aslm.model.devices.stages.stage_asi.asistage method)": [[131, "aslm.model.devices.stages.stage_asi.ASIStage.start_scan"]], "stop() (aslm.model.devices.stages.stage_asi.asistage method)": [[131, "aslm.model.devices.stages.stage_asi.ASIStage.stop"]], "stop_scan() (aslm.model.devices.stages.stage_asi.asistage method)": [[131, "aslm.model.devices.stages.stage_asi.ASIStage.stop_scan"]], "tiger_controller (aslm.model.devices.stages.stage_asi.asistage attribute)": [[131, "aslm.model.devices.stages.stage_asi.ASIStage.tiger_controller"]], "verify_abs_position() (aslm.model.devices.stages.stage_asi.asistage method)": [[131, "aslm.model.devices.stages.stage_asi.ASIStage.verify_abs_position"]], "verify_move() (aslm.model.devices.stages.stage_asi.asistage method)": [[131, "aslm.model.devices.stages.stage_asi.ASIStage.verify_move"]], "build_asi_stage_connection() (in module aslm.model.devices.stages.stage_asi)": [[132, "aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection"]], "aslm.model.devices.stages.stage_base": [[133, "module-aslm.model.devices.stages.stage_base"]], "stagebase (class in aslm.model.devices.stages.stage_base)": [[134, "aslm.model.devices.stages.stage_base.StageBase"]], "__init__() (aslm.model.devices.stages.stage_base.stagebase method)": [[134, "aslm.model.devices.stages.stage_base.StageBase.__init__"]], "axes (aslm.model.devices.stages.stage_base.stagebase attribute)": [[134, "aslm.model.devices.stages.stage_base.StageBase.axes"]], "axes_mapping (aslm.model.devices.stages.stage_base.stagebase attribute)": [[134, "aslm.model.devices.stages.stage_base.StageBase.axes_mapping"]], "close() (aslm.model.devices.stages.stage_base.stagebase method)": [[134, "aslm.model.devices.stages.stage_base.StageBase.close"]], "get_abs_position() (aslm.model.devices.stages.stage_base.stagebase method)": [[134, "aslm.model.devices.stages.stage_base.StageBase.get_abs_position"]], "get_position_dict() (aslm.model.devices.stages.stage_base.stagebase method)": [[134, "aslm.model.devices.stages.stage_base.StageBase.get_position_dict"]], "stage_feedback (aslm.model.devices.stages.stage_base.stagebase attribute)": [[134, "aslm.model.devices.stages.stage_base.StageBase.stage_feedback"]], "stage_limits (aslm.model.devices.stages.stage_base.stagebase attribute)": [[134, "aslm.model.devices.stages.stage_base.StageBase.stage_limits"]], "stop() (aslm.model.devices.stages.stage_base.stagebase method)": [[134, "aslm.model.devices.stages.stage_base.StageBase.stop"]], "verify_abs_position() (aslm.model.devices.stages.stage_base.stagebase method)": [[134, "aslm.model.devices.stages.stage_base.StageBase.verify_abs_position"]], "aslm.model.devices.stages.stage_galvo": [[135, "module-aslm.model.devices.stages.stage_galvo"]], "galvonistage (class in aslm.model.devices.stages.stage_galvo)": [[136, "aslm.model.devices.stages.stage_galvo.GalvoNIStage"]], "__init__() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[136, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.__init__"]], "axes (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[136, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.axes"]], "axes_channels (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[136, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.axes_channels"]], "axes_mapping (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[136, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.axes_mapping"]], "calculate_waveform() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[136, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.calculate_waveform"]], "camera_delay_percent (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[136, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.camera_delay_percent"]], "close() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[136, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.close"]], "configuration (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[136, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.configuration"]], "daq (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[136, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.daq"]], "distance_threshold (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[136, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.distance_threshold"]], "exposure_times (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[136, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.exposure_times"]], "galvo_max_voltage (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[136, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.galvo_max_voltage"]], "galvo_min_voltage (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[136, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.galvo_min_voltage"]], "get_abs_position() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[136, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.get_abs_position"]], "get_position_dict() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[136, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.get_position_dict"]], "microscope_name (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[136, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.microscope_name"]], "move_absolute() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[136, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[136, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.move_axis_absolute"]], "remote_focus_delay (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[136, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.remote_focus_delay"]], "remote_focus_ramp_falling (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[136, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.remote_focus_ramp_falling"]], "report_position() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[136, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.report_position"]], "sample_rate (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[136, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.sample_rate"]], "samples (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[136, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.samples"]], "stage_feedback (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[136, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.stage_feedback"]], "stage_limits (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[136, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.stage_limits"]], "stage_settle_duration (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[136, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.stage_settle_duration"]], "stop() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[136, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.stop"]], "sweep_time (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[136, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.sweep_time"]], "sweep_times (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[136, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.sweep_times"]], "trigger_source (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[136, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.trigger_source"]], "verify_abs_position() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[136, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.verify_abs_position"]], "volts_per_micron (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[136, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.volts_per_micron"]], "waveform_dict (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[136, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.waveform_dict"]], "aslm.model.devices.stages.stage_mcl": [[137, "module-aslm.model.devices.stages.stage_mcl"]], "mclstage (class in aslm.model.devices.stages.stage_mcl)": [[138, "aslm.model.devices.stages.stage_mcl.MCLStage"]], "__init__() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[138, "aslm.model.devices.stages.stage_mcl.MCLStage.__init__"]], "axes (aslm.model.devices.stages.stage_mcl.mclstage attribute)": [[138, "aslm.model.devices.stages.stage_mcl.MCLStage.axes"]], "axes_mapping (aslm.model.devices.stages.stage_mcl.mclstage attribute)": [[138, "aslm.model.devices.stages.stage_mcl.MCLStage.axes_mapping"]], "close() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[138, "aslm.model.devices.stages.stage_mcl.MCLStage.close"]], "get_abs_position() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[138, "aslm.model.devices.stages.stage_mcl.MCLStage.get_abs_position"]], "get_position_dict() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[138, "aslm.model.devices.stages.stage_mcl.MCLStage.get_position_dict"]], "handle (aslm.model.devices.stages.stage_mcl.mclstage attribute)": [[138, "aslm.model.devices.stages.stage_mcl.MCLStage.handle"]], "mcl_controller (aslm.model.devices.stages.stage_mcl.mclstage attribute)": [[138, "aslm.model.devices.stages.stage_mcl.MCLStage.mcl_controller"]], "move_absolute() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[138, "aslm.model.devices.stages.stage_mcl.MCLStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[138, "aslm.model.devices.stages.stage_mcl.MCLStage.move_axis_absolute"]], "report_position() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[138, "aslm.model.devices.stages.stage_mcl.MCLStage.report_position"]], "stage_feedback (aslm.model.devices.stages.stage_mcl.mclstage attribute)": [[138, "aslm.model.devices.stages.stage_mcl.MCLStage.stage_feedback"]], "stage_limits (aslm.model.devices.stages.stage_mcl.mclstage attribute)": [[138, "aslm.model.devices.stages.stage_mcl.MCLStage.stage_limits"]], "stop() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[138, "aslm.model.devices.stages.stage_mcl.MCLStage.stop"]], "verify_abs_position() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[138, "aslm.model.devices.stages.stage_mcl.MCLStage.verify_abs_position"]], "build_mclstage_connection() (in module aslm.model.devices.stages.stage_mcl)": [[139, "aslm.model.devices.stages.stage_mcl.build_MCLStage_connection"]], "aslm.model.devices.stages.stage_pi": [[140, "module-aslm.model.devices.stages.stage_pi"]], "pistage (class in aslm.model.devices.stages.stage_pi)": [[141, "aslm.model.devices.stages.stage_pi.PIStage"]], "__init__() (aslm.model.devices.stages.stage_pi.pistage method)": [[141, "aslm.model.devices.stages.stage_pi.PIStage.__init__"]], "axes (aslm.model.devices.stages.stage_pi.pistage attribute)": [[141, "aslm.model.devices.stages.stage_pi.PIStage.axes"]], "axes_mapping (aslm.model.devices.stages.stage_pi.pistage attribute)": [[141, "aslm.model.devices.stages.stage_pi.PIStage.axes_mapping"]], "close() (aslm.model.devices.stages.stage_pi.pistage method)": [[141, "aslm.model.devices.stages.stage_pi.PIStage.close"]], "get_abs_position() (aslm.model.devices.stages.stage_pi.pistage method)": [[141, "aslm.model.devices.stages.stage_pi.PIStage.get_abs_position"]], "get_position_dict() (aslm.model.devices.stages.stage_pi.pistage method)": [[141, "aslm.model.devices.stages.stage_pi.PIStage.get_position_dict"]], "move_absolute() (aslm.model.devices.stages.stage_pi.pistage method)": [[141, "aslm.model.devices.stages.stage_pi.PIStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_pi.pistage method)": [[141, "aslm.model.devices.stages.stage_pi.PIStage.move_axis_absolute"]], "pi_axes (aslm.model.devices.stages.stage_pi.pistage attribute)": [[141, "aslm.model.devices.stages.stage_pi.PIStage.pi_axes"]], "pi_device (aslm.model.devices.stages.stage_pi.pistage attribute)": [[141, "aslm.model.devices.stages.stage_pi.PIStage.pi_device"]], "pi_tools (aslm.model.devices.stages.stage_pi.pistage attribute)": [[141, "aslm.model.devices.stages.stage_pi.PIStage.pi_tools"]], "report_position() (aslm.model.devices.stages.stage_pi.pistage method)": [[141, "aslm.model.devices.stages.stage_pi.PIStage.report_position"]], "stage_feedback (aslm.model.devices.stages.stage_pi.pistage attribute)": [[141, "aslm.model.devices.stages.stage_pi.PIStage.stage_feedback"]], "stage_limits (aslm.model.devices.stages.stage_pi.pistage attribute)": [[141, "aslm.model.devices.stages.stage_pi.PIStage.stage_limits"]], "stop() (aslm.model.devices.stages.stage_pi.pistage method)": [[141, "aslm.model.devices.stages.stage_pi.PIStage.stop"]], "verify_abs_position() (aslm.model.devices.stages.stage_pi.pistage method)": [[141, "aslm.model.devices.stages.stage_pi.PIStage.verify_abs_position"]], "wait_on_target() (aslm.model.devices.stages.stage_pi.pistage method)": [[141, "aslm.model.devices.stages.stage_pi.PIStage.wait_on_target"]], "build_pistage_connection() (in module aslm.model.devices.stages.stage_pi)": [[142, "aslm.model.devices.stages.stage_pi.build_PIStage_connection"]], "aslm.model.devices.stages.stage_sutter": [[143, "module-aslm.model.devices.stages.stage_sutter"]], "sutterstage (class in aslm.model.devices.stages.stage_sutter)": [[144, "aslm.model.devices.stages.stage_sutter.SutterStage"]], "__init__() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[144, "aslm.model.devices.stages.stage_sutter.SutterStage.__init__"]], "axes (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[144, "aslm.model.devices.stages.stage_sutter.SutterStage.axes"]], "axes_mapping (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[144, "aslm.model.devices.stages.stage_sutter.SutterStage.axes_mapping"]], "close() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[144, "aslm.model.devices.stages.stage_sutter.SutterStage.close"]], "device_axes (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[144, "aslm.model.devices.stages.stage_sutter.SutterStage.device_axes"]], "get_abs_position() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[144, "aslm.model.devices.stages.stage_sutter.SutterStage.get_abs_position"]], "get_position_dict() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[144, "aslm.model.devices.stages.stage_sutter.SutterStage.get_position_dict"]], "move_absolute() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[144, "aslm.model.devices.stages.stage_sutter.SutterStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[144, "aslm.model.devices.stages.stage_sutter.SutterStage.move_axis_absolute"]], "report_position() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[144, "aslm.model.devices.stages.stage_sutter.SutterStage.report_position"]], "resolution (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[144, "aslm.model.devices.stages.stage_sutter.SutterStage.resolution"]], "speed (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[144, "aslm.model.devices.stages.stage_sutter.SutterStage.speed"]], "stage (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[144, "aslm.model.devices.stages.stage_sutter.SutterStage.stage"]], "stage_feedback (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[144, "aslm.model.devices.stages.stage_sutter.SutterStage.stage_feedback"]], "stage_limits (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[144, "aslm.model.devices.stages.stage_sutter.SutterStage.stage_limits"]], "stage_x_pos (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[144, "aslm.model.devices.stages.stage_sutter.SutterStage.stage_x_pos"]], "stage_y_pos (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[144, "aslm.model.devices.stages.stage_sutter.SutterStage.stage_y_pos"]], "stage_z_pos (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[144, "aslm.model.devices.stages.stage_sutter.SutterStage.stage_z_pos"]], "stop() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[144, "aslm.model.devices.stages.stage_sutter.SutterStage.stop"]], "verify_abs_position() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[144, "aslm.model.devices.stages.stage_sutter.SutterStage.verify_abs_position"]], "build_mp285_connection() (in module aslm.model.devices.stages.stage_sutter)": [[145, "aslm.model.devices.stages.stage_sutter.build_MP285_connection"]], "aslm.model.devices.stages.stage_synthetic": [[146, "module-aslm.model.devices.stages.stage_synthetic"]], "syntheticstage (class in aslm.model.devices.stages.stage_synthetic)": [[147, "aslm.model.devices.stages.stage_synthetic.SyntheticStage"]], "__init__() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[147, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.__init__"]], "axes (aslm.model.devices.stages.stage_synthetic.syntheticstage attribute)": [[147, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.axes"]], "axes_mapping (aslm.model.devices.stages.stage_synthetic.syntheticstage attribute)": [[147, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.axes_mapping"]], "close() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[147, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.close"]], "default_speed (aslm.model.devices.stages.stage_synthetic.syntheticstage attribute)": [[147, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.default_speed"]], "get_abs_position() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[147, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.get_abs_position"]], "get_axis_position() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[147, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.get_axis_position"]], "get_position_dict() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[147, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.get_position_dict"]], "get_speed() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[147, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.get_speed"]], "load_sample() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[147, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.load_sample"]], "move_absolute() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[147, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[147, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.move_axis_absolute"]], "report_position() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[147, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.report_position"]], "scanr() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[147, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.scanr"]], "set_speed() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[147, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.set_speed"]], "stage_feedback (aslm.model.devices.stages.stage_synthetic.syntheticstage attribute)": [[147, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.stage_feedback"]], "stage_limits (aslm.model.devices.stages.stage_synthetic.syntheticstage attribute)": [[147, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.stage_limits"]], "start_scan() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[147, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.start_scan"]], "stop() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[147, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.stop"]], "stop_scan() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[147, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.stop_scan"]], "unload_sample() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[147, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.unload_sample"]], "verify_abs_position() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[147, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.verify_abs_position"]], "aslm.model.devices.stages.stage_tl_kcube_inertial": [[148, "module-aslm.model.devices.stages.stage_tl_kcube_inertial"]], "tlkimstage (class in aslm.model.devices.stages.stage_tl_kcube_inertial)": [[149, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage"]], "__init__() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[149, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.__init__"]], "axes (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage attribute)": [[149, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.axes"]], "axes_mapping (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage attribute)": [[149, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.axes_mapping"]], "close() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[149, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.close"]], "get_abs_position() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[149, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.get_abs_position"]], "get_position_dict() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[149, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.get_position_dict"]], "kim_axes (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage attribute)": [[149, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.kim_axes"]], "kim_controller (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage attribute)": [[149, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.kim_controller"]], "move_absolute() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[149, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[149, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.move_axis_absolute"]], "report_position() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[149, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.report_position"]], "serial_number (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage attribute)": [[149, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.serial_number"]], "stage_feedback (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage attribute)": [[149, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.stage_feedback"]], "stage_limits (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage attribute)": [[149, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.stage_limits"]], "stop() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[149, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.stop"]], "verify_abs_position() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[149, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.verify_abs_position"]], "build_tlkimstage_connection() (in module aslm.model.devices.stages.stage_tl_kcube_inertial)": [[150, "aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection"]], "aslm.model.devices.zoom": [[151, "module-aslm.model.devices.zoom"]], "aslm.model.devices.zoom.zoom_base": [[152, "module-aslm.model.devices.zoom.zoom_base"]], "zoombase (class in aslm.model.devices.zoom.zoom_base)": [[153, "aslm.model.devices.zoom.zoom_base.ZoomBase"]], "__init__() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[153, "aslm.model.devices.zoom.zoom_base.ZoomBase.__init__"]], "build_stage_dict() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[153, "aslm.model.devices.zoom.zoom_base.ZoomBase.build_stage_dict"]], "configuration (aslm.model.devices.zoom.zoom_base.zoombase attribute)": [[153, "aslm.model.devices.zoom.zoom_base.ZoomBase.configuration"]], "move() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[153, "aslm.model.devices.zoom.zoom_base.ZoomBase.move"]], "read_position() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[153, "aslm.model.devices.zoom.zoom_base.ZoomBase.read_position"]], "set_zoom() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[153, "aslm.model.devices.zoom.zoom_base.ZoomBase.set_zoom"]], "zoomdict (aslm.model.devices.zoom.zoom_base.zoombase attribute)": [[153, "aslm.model.devices.zoom.zoom_base.ZoomBase.zoomdict"]], "zoomvalue (aslm.model.devices.zoom.zoom_base.zoombase attribute)": [[153, "aslm.model.devices.zoom.zoom_base.ZoomBase.zoomvalue"]], "aslm.model.devices.zoom.zoom_dynamixel": [[154, "module-aslm.model.devices.zoom.zoom_dynamixel"]], "dynamixelzoom (class in aslm.model.devices.zoom.zoom_dynamixel)": [[155, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom"]], "__init__() (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom method)": [[155, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.__init__"]], "addr_mx_goal_position (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[155, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.addr_mx_goal_position"]], "addr_mx_moving_speed (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[155, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.addr_mx_moving_speed"]], "addr_mx_p_gain (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[155, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.addr_mx_p_gain"]], "addr_mx_present_position (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[155, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.addr_mx_present_position"]], "addr_mx_torque_enable (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[155, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.addr_mx_torque_enable"]], "addr_mx_torque_limit (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[155, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.addr_mx_torque_limit"]], "build_stage_dict() (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom method)": [[155, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.build_stage_dict"]], "configuration (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[155, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.configuration"]], "dynamixel (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[155, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.dynamixel"]], "goal_position_offset (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[155, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.goal_position_offset"]], "id (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[155, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.id"]], "move() (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom method)": [[155, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.move"]], "port_num (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[155, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.port_num"]], "read_position() (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom method)": [[155, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.read_position"]], "set_zoom() (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom method)": [[155, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.set_zoom"]], "sleeptime (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[155, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.sleeptime"]], "timeout (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[155, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.timeout"]], "torque_disable (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[155, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.torque_disable"]], "torque_enable (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[155, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.torque_enable"]], "zoomdict (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[155, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.zoomdict"]], "zoomvalue (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[155, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.zoomvalue"]], "build_dynamixel_zoom_connection() (in module aslm.model.devices.zoom.zoom_dynamixel)": [[156, "aslm.model.devices.zoom.zoom_dynamixel.build_dynamixel_zoom_connection"]], "aslm.model.devices.zoom.zoom_synthetic": [[157, "module-aslm.model.devices.zoom.zoom_synthetic"]], "syntheticzoom (class in aslm.model.devices.zoom.zoom_synthetic)": [[158, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom"]], "__init__() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[158, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.__init__"]], "build_stage_dict() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[158, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.build_stage_dict"]], "configuration (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom attribute)": [[158, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.configuration"]], "move() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[158, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.move"]], "read_position() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[158, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.read_position"]], "set_zoom() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[158, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.set_zoom"]], "zoomdict (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom attribute)": [[158, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.zoomdict"]], "zoomvalue (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom attribute)": [[158, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.zoomvalue"]], "aslm.model.dummy": [[159, "module-aslm.model.dummy"]], "dummycontroller (class in aslm.model.dummy)": [[160, "aslm.model.dummy.DummyController"]], "__init__() (aslm.model.dummy.dummycontroller method)": [[160, "aslm.model.dummy.DummyController.__init__"]], "clear() (aslm.model.dummy.dummycontroller method)": [[160, "aslm.model.dummy.DummyController.clear"]], "commands (aslm.model.dummy.dummycontroller attribute)": [[160, "aslm.model.dummy.DummyController.commands"]], "configuration (aslm.model.dummy.dummycontroller attribute)": [[160, "aslm.model.dummy.DummyController.configuration"]], "configuration_controller (aslm.model.dummy.dummycontroller attribute)": [[160, "aslm.model.dummy.DummyController.configuration_controller"]], "execute() (aslm.model.dummy.dummycontroller method)": [[160, "aslm.model.dummy.DummyController.execute"]], "menu_controller (aslm.model.dummy.dummycontroller attribute)": [[160, "aslm.model.dummy.DummyController.menu_controller"]], "off_stage_pos (aslm.model.dummy.dummycontroller attribute)": [[160, "aslm.model.dummy.DummyController.off_stage_pos"]], "pop() (aslm.model.dummy.dummycontroller method)": [[160, "aslm.model.dummy.DummyController.pop"]], "stage_pos (aslm.model.dummy.dummycontroller attribute)": [[160, "aslm.model.dummy.DummyController.stage_pos"]], "view (aslm.model.dummy.dummycontroller attribute)": [[160, "aslm.model.dummy.DummyController.view"]], "dummydevice (class in aslm.model.dummy)": [[161, "aslm.model.dummy.DummyDevice"]], "__init__() (aslm.model.dummy.dummydevice method)": [[161, "aslm.model.dummy.DummyDevice.__init__"]], "clear() (aslm.model.dummy.dummydevice method)": [[161, "aslm.model.dummy.DummyDevice.clear"]], "generate_message() (aslm.model.dummy.dummydevice method)": [[161, "aslm.model.dummy.DummyDevice.generate_message"]], "in_port (aslm.model.dummy.dummydevice attribute)": [[161, "aslm.model.dummy.DummyDevice.in_port"]], "listen() (aslm.model.dummy.dummydevice method)": [[161, "aslm.model.dummy.DummyDevice.listen"]], "msg_count (aslm.model.dummy.dummydevice attribute)": [[161, "aslm.model.dummy.DummyDevice.msg_count"]], "out_port (aslm.model.dummy.dummydevice attribute)": [[161, "aslm.model.dummy.DummyDevice.out_port"]], "sendout() (aslm.model.dummy.dummydevice method)": [[161, "aslm.model.dummy.DummyDevice.sendout"]], "sendout_msg_count (aslm.model.dummy.dummydevice attribute)": [[161, "aslm.model.dummy.DummyDevice.sendout_msg_count"]], "setup() (aslm.model.dummy.dummydevice method)": [[161, "aslm.model.dummy.DummyDevice.setup"]], "stop_flag (aslm.model.dummy.dummydevice attribute)": [[161, "aslm.model.dummy.DummyDevice.stop_flag"]], "timecost (aslm.model.dummy.dummydevice attribute)": [[161, "aslm.model.dummy.DummyDevice.timecost"]], "dummymicroscope (class in aslm.model.dummy)": [[162, "aslm.model.dummy.DummyMicroscope"]], "__init__() (aslm.model.dummy.dummymicroscope method)": [[162, "aslm.model.dummy.DummyMicroscope.__init__"]], "calculate_exposure_sweep_times() (aslm.model.dummy.dummymicroscope method)": [[162, "aslm.model.dummy.DummyMicroscope.calculate_exposure_sweep_times"]], "configuration (aslm.model.dummy.dummymicroscope attribute)": [[162, "aslm.model.dummy.DummyMicroscope.configuration"]], "current_channel (aslm.model.dummy.dummymicroscope attribute)": [[162, "aslm.model.dummy.DummyMicroscope.current_channel"]], "daq (aslm.model.dummy.dummymicroscope attribute)": [[162, "aslm.model.dummy.DummyMicroscope.daq"]], "data_buffer (aslm.model.dummy.dummymicroscope attribute)": [[162, "aslm.model.dummy.DummyMicroscope.data_buffer"]], "galvo (aslm.model.dummy.dummymicroscope attribute)": [[162, "aslm.model.dummy.DummyMicroscope.galvo"]], "lasers (aslm.model.dummy.dummymicroscope attribute)": [[162, "aslm.model.dummy.DummyMicroscope.lasers"]], "microscope_name (aslm.model.dummy.dummymicroscope attribute)": [[162, "aslm.model.dummy.DummyMicroscope.microscope_name"]], "stages (aslm.model.dummy.dummymicroscope attribute)": [[162, "aslm.model.dummy.DummyMicroscope.stages"]], "dummymodel (class in aslm.model.dummy)": [[163, "aslm.model.dummy.DummyModel"]], "__init__() (aslm.model.dummy.dummymodel method)": [[163, "aslm.model.dummy.DummyModel.__init__"]], "active_microscope (aslm.model.dummy.dummymodel attribute)": [[163, "aslm.model.dummy.DummyModel.active_microscope"]], "active_microscope_name (aslm.model.dummy.dummymodel attribute)": [[163, "aslm.model.dummy.DummyModel.active_microscope_name"]], "camera (aslm.model.dummy.dummymodel attribute)": [[163, "aslm.model.dummy.DummyModel.camera"]], "configuration (aslm.model.dummy.dummymodel attribute)": [[163, "aslm.model.dummy.DummyModel.configuration"]], "data (aslm.model.dummy.dummymodel attribute)": [[163, "aslm.model.dummy.DummyModel.data"]], "data_buffer (aslm.model.dummy.dummymodel attribute)": [[163, "aslm.model.dummy.DummyModel.data_buffer"]], "data_buffer_positions (aslm.model.dummy.dummymodel attribute)": [[163, "aslm.model.dummy.DummyModel.data_buffer_positions"]], "data_container (aslm.model.dummy.dummymodel attribute)": [[163, "aslm.model.dummy.DummyModel.data_container"]], "data_func() (aslm.model.dummy.dummymodel method)": [[163, "aslm.model.dummy.DummyModel.data_func"]], "data_pipe (aslm.model.dummy.dummymodel attribute)": [[163, "aslm.model.dummy.DummyModel.data_pipe"]], "data_records (aslm.model.dummy.dummymodel attribute)": [[163, "aslm.model.dummy.DummyModel.data_records"]], "data_thread (aslm.model.dummy.dummymodel attribute)": [[163, "aslm.model.dummy.DummyModel.data_thread"]], "device (aslm.model.dummy.dummymodel attribute)": [[163, "aslm.model.dummy.DummyModel.device"]], "frame_id (aslm.model.dummy.dummymodel attribute)": [[163, "aslm.model.dummy.DummyModel.frame_id"]], "img_height (aslm.model.dummy.dummymodel attribute)": [[163, "aslm.model.dummy.DummyModel.img_height"]], "img_width (aslm.model.dummy.dummymodel attribute)": [[163, "aslm.model.dummy.DummyModel.img_width"]], "manager (aslm.model.dummy.dummymodel attribute)": [[163, "aslm.model.dummy.DummyModel.manager"]], "number_of_frames (aslm.model.dummy.dummymodel attribute)": [[163, "aslm.model.dummy.DummyModel.number_of_frames"]], "signal_container (aslm.model.dummy.dummymodel attribute)": [[163, "aslm.model.dummy.DummyModel.signal_container"]], "signal_func() (aslm.model.dummy.dummymodel method)": [[163, "aslm.model.dummy.DummyModel.signal_func"]], "signal_pipe (aslm.model.dummy.dummymodel attribute)": [[163, "aslm.model.dummy.DummyModel.signal_pipe"]], "signal_records (aslm.model.dummy.dummymodel attribute)": [[163, "aslm.model.dummy.DummyModel.signal_records"]], "signal_thread (aslm.model.dummy.dummymodel attribute)": [[163, "aslm.model.dummy.DummyModel.signal_thread"]], "start() (aslm.model.dummy.dummymodel method)": [[163, "aslm.model.dummy.DummyModel.start"]], "stop_flag (aslm.model.dummy.dummymodel attribute)": [[163, "aslm.model.dummy.DummyModel.stop_flag"]], "aslm.model.features": [[164, "module-aslm.model.features"]], "aslm.model.features.auto_tile_scan": [[165, "module-aslm.model.features.auto_tile_scan"]], "calculatefocusrange (class in aslm.model.features.auto_tile_scan)": [[166, "aslm.model.features.auto_tile_scan.CalculateFocusRange"]], "__init__() (aslm.model.features.auto_tile_scan.calculatefocusrange method)": [[166, "aslm.model.features.auto_tile_scan.CalculateFocusRange.__init__"]], "end_func_data() (aslm.model.features.auto_tile_scan.calculatefocusrange method)": [[166, "aslm.model.features.auto_tile_scan.CalculateFocusRange.end_func_data"]], "end_func_signal() (aslm.model.features.auto_tile_scan.calculatefocusrange method)": [[166, "aslm.model.features.auto_tile_scan.CalculateFocusRange.end_func_signal"]], "in_func_data() (aslm.model.features.auto_tile_scan.calculatefocusrange method)": [[166, "aslm.model.features.auto_tile_scan.CalculateFocusRange.in_func_data"]], "in_func_signal() (aslm.model.features.auto_tile_scan.calculatefocusrange method)": [[166, "aslm.model.features.auto_tile_scan.CalculateFocusRange.in_func_signal"]], "pre_func_data() (aslm.model.features.auto_tile_scan.calculatefocusrange method)": [[166, "aslm.model.features.auto_tile_scan.CalculateFocusRange.pre_func_data"]], "pre_func_signal() (aslm.model.features.auto_tile_scan.calculatefocusrange method)": [[166, "aslm.model.features.auto_tile_scan.CalculateFocusRange.pre_func_signal"]], "aslm.model.features.autofocus": [[167, "module-aslm.model.features.autofocus"]], "autofocus (class in aslm.model.features.autofocus)": [[168, "aslm.model.features.autofocus.Autofocus"]], "__init__() (aslm.model.features.autofocus.autofocus method)": [[168, "aslm.model.features.autofocus.Autofocus.__init__"]], "autofocus_frame_queue (aslm.model.features.autofocus.autofocus attribute)": [[168, "aslm.model.features.autofocus.Autofocus.autofocus_frame_queue"]], "autofocus_pos_queue (aslm.model.features.autofocus.autofocus attribute)": [[168, "aslm.model.features.autofocus.Autofocus.autofocus_pos_queue"]], "coarse_step_size (aslm.model.features.autofocus.autofocus attribute)": [[168, "aslm.model.features.autofocus.Autofocus.coarse_step_size"]], "coarse_steps (aslm.model.features.autofocus.autofocus attribute)": [[168, "aslm.model.features.autofocus.Autofocus.coarse_steps"]], "end_func_data() (aslm.model.features.autofocus.autofocus method)": [[168, "aslm.model.features.autofocus.Autofocus.end_func_data"]], "end_func_signal() (aslm.model.features.autofocus.autofocus method)": [[168, "aslm.model.features.autofocus.Autofocus.end_func_signal"]], "f_frame_id (aslm.model.features.autofocus.autofocus attribute)": [[168, "aslm.model.features.autofocus.Autofocus.f_frame_id"]], "f_pos (aslm.model.features.autofocus.autofocus attribute)": [[168, "aslm.model.features.autofocus.Autofocus.f_pos"]], "fine_pos_offset (aslm.model.features.autofocus.autofocus attribute)": [[168, "aslm.model.features.autofocus.Autofocus.fine_pos_offset"]], "fine_step_size (aslm.model.features.autofocus.autofocus attribute)": [[168, "aslm.model.features.autofocus.Autofocus.fine_step_size"]], "focus_pos (aslm.model.features.autofocus.autofocus attribute)": [[168, "aslm.model.features.autofocus.Autofocus.focus_pos"]], "frame_num (aslm.model.features.autofocus.autofocus attribute)": [[168, "aslm.model.features.autofocus.Autofocus.frame_num"]], "get_autofocus_frame_num() (aslm.model.features.autofocus.autofocus method)": [[168, "aslm.model.features.autofocus.Autofocus.get_autofocus_frame_num"]], "get_frames_num (aslm.model.features.autofocus.autofocus attribute)": [[168, "aslm.model.features.autofocus.Autofocus.get_frames_num"]], "get_steps() (aslm.model.features.autofocus.autofocus static method)": [[168, "aslm.model.features.autofocus.Autofocus.get_steps"]], "in_func_data() (aslm.model.features.autofocus.autofocus method)": [[168, "aslm.model.features.autofocus.Autofocus.in_func_data"]], "in_func_signal() (aslm.model.features.autofocus.autofocus method)": [[168, "aslm.model.features.autofocus.Autofocus.in_func_signal"]], "init_pos (aslm.model.features.autofocus.autofocus attribute)": [[168, "aslm.model.features.autofocus.Autofocus.init_pos"]], "max_entropy (aslm.model.features.autofocus.autofocus attribute)": [[168, "aslm.model.features.autofocus.Autofocus.max_entropy"]], "plot_data (aslm.model.features.autofocus.autofocus attribute)": [[168, "aslm.model.features.autofocus.Autofocus.plot_data"]], "pre_func_data() (aslm.model.features.autofocus.autofocus method)": [[168, "aslm.model.features.autofocus.Autofocus.pre_func_data"]], "pre_func_signal() (aslm.model.features.autofocus.autofocus method)": [[168, "aslm.model.features.autofocus.Autofocus.pre_func_signal"]], "robust_autofocus() (aslm.model.features.autofocus.autofocus method)": [[168, "aslm.model.features.autofocus.Autofocus.robust_autofocus"]], "run() (aslm.model.features.autofocus.autofocus method)": [[168, "aslm.model.features.autofocus.Autofocus.run"], [168, "id0"]], "signal_id (aslm.model.features.autofocus.autofocus attribute)": [[168, "aslm.model.features.autofocus.Autofocus.signal_id"]], "target_channel (aslm.model.features.autofocus.autofocus attribute)": [[168, "aslm.model.features.autofocus.Autofocus.target_channel"]], "target_frame_id (aslm.model.features.autofocus.autofocus attribute)": [[168, "aslm.model.features.autofocus.Autofocus.target_frame_id"]], "total_frame_num (aslm.model.features.autofocus.autofocus attribute)": [[168, "aslm.model.features.autofocus.Autofocus.total_frame_num"]], "power_tent() (in module aslm.model.features.autofocus)": [[169, "aslm.model.features.autofocus.power_tent"]], "aslm.model.features.common_features": [[170, "module-aslm.model.features.common_features"]], "changeresolution (class in aslm.model.features.common_features)": [[171, "aslm.model.features.common_features.ChangeResolution"]], "__init__() (aslm.model.features.common_features.changeresolution method)": [[171, "aslm.model.features.common_features.ChangeResolution.__init__"]], "cleanup() (aslm.model.features.common_features.changeresolution method)": [[171, "aslm.model.features.common_features.ChangeResolution.cleanup"]], "config_table (aslm.model.features.common_features.changeresolution attribute)": [[171, "aslm.model.features.common_features.ChangeResolution.config_table"]], "model (aslm.model.features.common_features.changeresolution attribute)": [[171, "aslm.model.features.common_features.ChangeResolution.model"]], "resolution_mode (aslm.model.features.common_features.changeresolution attribute)": [[171, "aslm.model.features.common_features.ChangeResolution.resolution_mode"]], "signal_func() (aslm.model.features.common_features.changeresolution method)": [[171, "aslm.model.features.common_features.ChangeResolution.signal_func"]], "zoom_value (aslm.model.features.common_features.changeresolution attribute)": [[171, "aslm.model.features.common_features.ChangeResolution.zoom_value"]], "conproacquisition (class in aslm.model.features.common_features)": [[172, "aslm.model.features.common_features.ConProAcquisition"]], "__init__() (aslm.model.features.common_features.conproacquisition method)": [[172, "aslm.model.features.common_features.ConProAcquisition.__init__"]], "channels (aslm.model.features.common_features.conproacquisition attribute)": [[172, "aslm.model.features.common_features.ConProAcquisition.channels"]], "config_table (aslm.model.features.common_features.conproacquisition attribute)": [[172, "aslm.model.features.common_features.ConProAcquisition.config_table"]], "conpro_cycling_mode (aslm.model.features.common_features.conproacquisition attribute)": [[172, "aslm.model.features.common_features.ConProAcquisition.conpro_cycling_mode"]], "generate_meta_data() (aslm.model.features.common_features.conproacquisition method)": [[172, "aslm.model.features.common_features.ConProAcquisition.generate_meta_data"]], "model (aslm.model.features.common_features.conproacquisition attribute)": [[172, "aslm.model.features.common_features.ConProAcquisition.model"]], "n_plane (aslm.model.features.common_features.conproacquisition attribute)": [[172, "aslm.model.features.common_features.ConProAcquisition.n_plane"]], "need_to_move_new_plane (aslm.model.features.common_features.conproacquisition attribute)": [[172, "aslm.model.features.common_features.ConProAcquisition.need_to_move_new_plane"]], "offset_end (aslm.model.features.common_features.conproacquisition attribute)": [[172, "aslm.model.features.common_features.ConProAcquisition.offset_end"]], "offset_start (aslm.model.features.common_features.conproacquisition attribute)": [[172, "aslm.model.features.common_features.ConProAcquisition.offset_start"]], "offset_step_size (aslm.model.features.common_features.conproacquisition attribute)": [[172, "aslm.model.features.common_features.ConProAcquisition.offset_step_size"]], "offset_update_time (aslm.model.features.common_features.conproacquisition attribute)": [[172, "aslm.model.features.common_features.ConProAcquisition.offset_update_time"]], "pre_signal_func() (aslm.model.features.common_features.conproacquisition method)": [[172, "aslm.model.features.common_features.ConProAcquisition.pre_signal_func"]], "scanrange (aslm.model.features.common_features.conproacquisition attribute)": [[172, "aslm.model.features.common_features.ConProAcquisition.scanrange"]], "signal_end() (aslm.model.features.common_features.conproacquisition method)": [[172, "aslm.model.features.common_features.ConProAcquisition.signal_end"]], "signal_func() (aslm.model.features.common_features.conproacquisition method)": [[172, "aslm.model.features.common_features.ConProAcquisition.signal_func"]], "timepoints (aslm.model.features.common_features.conproacquisition attribute)": [[172, "aslm.model.features.common_features.ConProAcquisition.timepoints"]], "update_channel() (aslm.model.features.common_features.conproacquisition method)": [[172, "aslm.model.features.common_features.ConProAcquisition.update_channel"]], "findtissuesimple2d (class in aslm.model.features.common_features)": [[173, "aslm.model.features.common_features.FindTissueSimple2D"]], "__init__() (aslm.model.features.common_features.findtissuesimple2d method)": [[173, "aslm.model.features.common_features.FindTissueSimple2D.__init__"]], "config_table (aslm.model.features.common_features.findtissuesimple2d attribute)": [[173, "aslm.model.features.common_features.FindTissueSimple2D.config_table"]], "data_func() (aslm.model.features.common_features.findtissuesimple2d method)": [[173, "aslm.model.features.common_features.FindTissueSimple2D.data_func"]], "model (aslm.model.features.common_features.findtissuesimple2d attribute)": [[173, "aslm.model.features.common_features.FindTissueSimple2D.model"]], "overlap (aslm.model.features.common_features.findtissuesimple2d attribute)": [[173, "aslm.model.features.common_features.FindTissueSimple2D.overlap"]], "target_resolution (aslm.model.features.common_features.findtissuesimple2d attribute)": [[173, "aslm.model.features.common_features.FindTissueSimple2D.target_resolution"]], "target_zoom (aslm.model.features.common_features.findtissuesimple2d attribute)": [[173, "aslm.model.features.common_features.FindTissueSimple2D.target_zoom"]], "loopbycount (class in aslm.model.features.common_features)": [[174, "aslm.model.features.common_features.LoopByCount"]], "__init__() (aslm.model.features.common_features.loopbycount method)": [[174, "aslm.model.features.common_features.LoopByCount.__init__"]], "config_table (aslm.model.features.common_features.loopbycount attribute)": [[174, "aslm.model.features.common_features.LoopByCount.config_table"]], "data_frames (aslm.model.features.common_features.loopbycount attribute)": [[174, "aslm.model.features.common_features.LoopByCount.data_frames"]], "data_func() (aslm.model.features.common_features.loopbycount method)": [[174, "aslm.model.features.common_features.LoopByCount.data_func"]], "model (aslm.model.features.common_features.loopbycount attribute)": [[174, "aslm.model.features.common_features.LoopByCount.model"]], "signal_func() (aslm.model.features.common_features.loopbycount method)": [[174, "aslm.model.features.common_features.LoopByCount.signal_func"]], "signals (aslm.model.features.common_features.loopbycount attribute)": [[174, "aslm.model.features.common_features.LoopByCount.signals"]], "step_by_frame (aslm.model.features.common_features.loopbycount attribute)": [[174, "aslm.model.features.common_features.LoopByCount.step_by_frame"]], "steps (aslm.model.features.common_features.loopbycount attribute)": [[174, "aslm.model.features.common_features.LoopByCount.steps"]], "movetonextpositioninmultipositiontable (class in aslm.model.features.common_features)": [[175, "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable"]], "__init__() (aslm.model.features.common_features.movetonextpositioninmultipositiontable method)": [[175, "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable.__init__"]], "cleanup() (aslm.model.features.common_features.movetonextpositioninmultipositiontable method)": [[175, "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable.cleanup"]], "config_table (aslm.model.features.common_features.movetonextpositioninmultipositiontable attribute)": [[175, "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable.config_table"]], "current_idx (aslm.model.features.common_features.movetonextpositioninmultipositiontable attribute)": [[175, "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable.current_idx"]], "model (aslm.model.features.common_features.movetonextpositioninmultipositiontable attribute)": [[175, "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable.model"]], "multiposition_table (aslm.model.features.common_features.movetonextpositioninmultipositiontable attribute)": [[175, "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable.multiposition_table"]], "position_count (aslm.model.features.common_features.movetonextpositioninmultipositiontable attribute)": [[175, "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable.position_count"]], "pre_z (aslm.model.features.common_features.movetonextpositioninmultipositiontable attribute)": [[175, "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable.pre_z"]], "signal_func() (aslm.model.features.common_features.movetonextpositioninmultipositiontable method)": [[175, "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable.signal_func"]], "stage_distance_threshold (aslm.model.features.common_features.movetonextpositioninmultipositiontable attribute)": [[175, "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable.stage_distance_threshold"]], "preparenextchannel (class in aslm.model.features.common_features)": [[176, "aslm.model.features.common_features.PrepareNextChannel"]], "__init__() (aslm.model.features.common_features.preparenextchannel method)": [[176, "aslm.model.features.common_features.PrepareNextChannel.__init__"]], "config_table (aslm.model.features.common_features.preparenextchannel attribute)": [[176, "aslm.model.features.common_features.PrepareNextChannel.config_table"]], "model (aslm.model.features.common_features.preparenextchannel attribute)": [[176, "aslm.model.features.common_features.PrepareNextChannel.model"]], "signal_func() (aslm.model.features.common_features.preparenextchannel method)": [[176, "aslm.model.features.common_features.PrepareNextChannel.signal_func"]], "snap (class in aslm.model.features.common_features)": [[177, "aslm.model.features.common_features.Snap"]], "__init__() (aslm.model.features.common_features.snap method)": [[177, "aslm.model.features.common_features.Snap.__init__"]], "config_table (aslm.model.features.common_features.snap attribute)": [[177, "aslm.model.features.common_features.Snap.config_table"]], "data_func() (aslm.model.features.common_features.snap method)": [[177, "aslm.model.features.common_features.Snap.data_func"]], "model (aslm.model.features.common_features.snap attribute)": [[177, "aslm.model.features.common_features.Snap.model"]], "stackpause (class in aslm.model.features.common_features)": [[178, "aslm.model.features.common_features.StackPause"]], "__init__() (aslm.model.features.common_features.stackpause method)": [[178, "aslm.model.features.common_features.StackPause.__init__"]], "signal_func() (aslm.model.features.common_features.stackpause method)": [[178, "aslm.model.features.common_features.StackPause.signal_func"]], "waittocontinue (class in aslm.model.features.common_features)": [[179, "aslm.model.features.common_features.WaitToContinue"]], "__init__() (aslm.model.features.common_features.waittocontinue method)": [[179, "aslm.model.features.common_features.WaitToContinue.__init__"]], "cleanup() (aslm.model.features.common_features.waittocontinue method)": [[179, "aslm.model.features.common_features.WaitToContinue.cleanup"]], "config_table (aslm.model.features.common_features.waittocontinue attribute)": [[179, "aslm.model.features.common_features.WaitToContinue.config_table"]], "data_func() (aslm.model.features.common_features.waittocontinue method)": [[179, "aslm.model.features.common_features.WaitToContinue.data_func"]], "first_enter_node (aslm.model.features.common_features.waittocontinue attribute)": [[179, "aslm.model.features.common_features.WaitToContinue.first_enter_node"]], "model (aslm.model.features.common_features.waittocontinue attribute)": [[179, "aslm.model.features.common_features.WaitToContinue.model"]], "pause_data_lock (aslm.model.features.common_features.waittocontinue attribute)": [[179, "aslm.model.features.common_features.WaitToContinue.pause_data_lock"]], "pause_signal_lock (aslm.model.features.common_features.waittocontinue attribute)": [[179, "aslm.model.features.common_features.WaitToContinue.pause_signal_lock"]], "pre_data_func() (aslm.model.features.common_features.waittocontinue method)": [[179, "aslm.model.features.common_features.WaitToContinue.pre_data_func"]], "pre_signal_func() (aslm.model.features.common_features.waittocontinue method)": [[179, "aslm.model.features.common_features.WaitToContinue.pre_signal_func"]], "signal_func() (aslm.model.features.common_features.waittocontinue method)": [[179, "aslm.model.features.common_features.WaitToContinue.signal_func"]], "zstackacquisition (class in aslm.model.features.common_features)": [[180, "aslm.model.features.common_features.ZStackAcquisition"]], "__init__() (aslm.model.features.common_features.zstackacquisition method)": [[180, "aslm.model.features.common_features.ZStackAcquisition.__init__"]], "channels (aslm.model.features.common_features.zstackacquisition attribute)": [[180, "aslm.model.features.common_features.ZStackAcquisition.channels"]], "cleanup_data_func() (aslm.model.features.common_features.zstackacquisition method)": [[180, "aslm.model.features.common_features.ZStackAcquisition.cleanup_data_func"]], "config_table (aslm.model.features.common_features.zstackacquisition attribute)": [[180, "aslm.model.features.common_features.ZStackAcquisition.config_table"]], "current_focus_position (aslm.model.features.common_features.zstackacquisition attribute)": [[180, "aslm.model.features.common_features.ZStackAcquisition.current_focus_position"]], "current_position_idx (aslm.model.features.common_features.zstackacquisition attribute)": [[180, "aslm.model.features.common_features.ZStackAcquisition.current_position_idx"]], "current_z_position (aslm.model.features.common_features.zstackacquisition attribute)": [[180, "aslm.model.features.common_features.ZStackAcquisition.current_z_position"]], "defocus (aslm.model.features.common_features.zstackacquisition attribute)": [[180, "aslm.model.features.common_features.ZStackAcquisition.defocus"]], "end_data_func() (aslm.model.features.common_features.zstackacquisition method)": [[180, "aslm.model.features.common_features.ZStackAcquisition.end_data_func"]], "focus_step_size (aslm.model.features.common_features.zstackacquisition attribute)": [[180, "aslm.model.features.common_features.ZStackAcquisition.focus_step_size"]], "get_origin (aslm.model.features.common_features.zstackacquisition attribute)": [[180, "aslm.model.features.common_features.ZStackAcquisition.get_origin"]], "image_writer (aslm.model.features.common_features.zstackacquisition attribute)": [[180, "aslm.model.features.common_features.ZStackAcquisition.image_writer"]], "in_data_func() (aslm.model.features.common_features.zstackacquisition method)": [[180, "aslm.model.features.common_features.ZStackAcquisition.in_data_func"]], "model (aslm.model.features.common_features.zstackacquisition attribute)": [[180, "aslm.model.features.common_features.ZStackAcquisition.model"]], "need_to_move_new_position (aslm.model.features.common_features.zstackacquisition attribute)": [[180, "aslm.model.features.common_features.ZStackAcquisition.need_to_move_new_position"]], "need_to_move_z_position (aslm.model.features.common_features.zstackacquisition attribute)": [[180, "aslm.model.features.common_features.ZStackAcquisition.need_to_move_z_position"]], "number_z_steps (aslm.model.features.common_features.zstackacquisition attribute)": [[180, "aslm.model.features.common_features.ZStackAcquisition.number_z_steps"]], "positions (aslm.model.features.common_features.zstackacquisition attribute)": [[180, "aslm.model.features.common_features.ZStackAcquisition.positions"]], "pre_data_func() (aslm.model.features.common_features.zstackacquisition method)": [[180, "aslm.model.features.common_features.ZStackAcquisition.pre_data_func"]], "pre_signal_func() (aslm.model.features.common_features.zstackacquisition method)": [[180, "aslm.model.features.common_features.ZStackAcquisition.pre_signal_func"]], "signal_end() (aslm.model.features.common_features.zstackacquisition method)": [[180, "aslm.model.features.common_features.ZStackAcquisition.signal_end"]], "signal_func() (aslm.model.features.common_features.zstackacquisition method)": [[180, "aslm.model.features.common_features.ZStackAcquisition.signal_func"]], "stack_cycling_mode (aslm.model.features.common_features.zstackacquisition attribute)": [[180, "aslm.model.features.common_features.ZStackAcquisition.stack_cycling_mode"]], "start_focus (aslm.model.features.common_features.zstackacquisition attribute)": [[180, "aslm.model.features.common_features.ZStackAcquisition.start_focus"]], "start_z_position (aslm.model.features.common_features.zstackacquisition attribute)": [[180, "aslm.model.features.common_features.ZStackAcquisition.start_z_position"]], "update_channel() (aslm.model.features.common_features.zstackacquisition method)": [[180, "aslm.model.features.common_features.ZStackAcquisition.update_channel"]], "z_position_moved_time (aslm.model.features.common_features.zstackacquisition attribute)": [[180, "aslm.model.features.common_features.ZStackAcquisition.z_position_moved_time"]], "z_step_size (aslm.model.features.common_features.zstackacquisition attribute)": [[180, "aslm.model.features.common_features.ZStackAcquisition.z_step_size"]], "aslm.model.features.constant_velocity_acquisition": [[181, "module-aslm.model.features.constant_velocity_acquisition"]], "constantvelocityacquisition (class in aslm.model.features.constant_velocity_acquisition)": [[182, "aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition"]], "__init__() (aslm.model.features.constant_velocity_acquisition.constantvelocityacquisition method)": [[182, "aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition.__init__"]], "cleanup() (aslm.model.features.constant_velocity_acquisition.constantvelocityacquisition method)": [[182, "aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition.cleanup"]], "pre_func_signal() (aslm.model.features.constant_velocity_acquisition.constantvelocityacquisition method)": [[182, "aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition.pre_func_signal"]], "aslm.model.features.dummy_detective": [[183, "module-aslm.model.features.dummy_detective"]], "dummy_detective (class in aslm.model.features.dummy_detective)": [[184, "aslm.model.features.dummy_detective.Dummy_Detective"]], "__init__() (aslm.model.features.dummy_detective.dummy_detective method)": [[184, "aslm.model.features.dummy_detective.Dummy_Detective.__init__"]], "aslm.model.features.feature_container": [[185, "module-aslm.model.features.feature_container"]], "container (class in aslm.model.features.feature_container)": [[186, "aslm.model.features.feature_container.Container"]], "__init__() (aslm.model.features.feature_container.container method)": [[186, "aslm.model.features.feature_container.Container.__init__"]], "cleanup() (aslm.model.features.feature_container.container method)": [[186, "aslm.model.features.feature_container.Container.cleanup"]], "reset() (aslm.model.features.feature_container.container method)": [[186, "aslm.model.features.feature_container.Container.reset"]], "datacontainer (class in aslm.model.features.feature_container)": [[187, "aslm.model.features.feature_container.DataContainer"]], "__init__() (aslm.model.features.feature_container.datacontainer method)": [[187, "aslm.model.features.feature_container.DataContainer.__init__"]], "cleanup() (aslm.model.features.feature_container.datacontainer method)": [[187, "aslm.model.features.feature_container.DataContainer.cleanup"]], "reset() (aslm.model.features.feature_container.datacontainer method)": [[187, "aslm.model.features.feature_container.DataContainer.reset"]], "run() (aslm.model.features.feature_container.datacontainer method)": [[187, "aslm.model.features.feature_container.DataContainer.run"]], "datanode (class in aslm.model.features.feature_container)": [[188, "aslm.model.features.feature_container.DataNode"]], "__init__() (aslm.model.features.feature_container.datanode method)": [[188, "aslm.model.features.feature_container.DataNode.__init__"]], "run() (aslm.model.features.feature_container.datanode method)": [[188, "aslm.model.features.feature_container.DataNode.run"]], "set_property() (aslm.model.features.feature_container.datanode method)": [[188, "aslm.model.features.feature_container.DataNode.set_property"]], "signalcontainer (class in aslm.model.features.feature_container)": [[189, "aslm.model.features.feature_container.SignalContainer"]], "__init__() (aslm.model.features.feature_container.signalcontainer method)": [[189, "aslm.model.features.feature_container.SignalContainer.__init__"]], "cleanup() (aslm.model.features.feature_container.signalcontainer method)": [[189, "aslm.model.features.feature_container.SignalContainer.cleanup"]], "reset() (aslm.model.features.feature_container.signalcontainer method)": [[189, "aslm.model.features.feature_container.SignalContainer.reset"]], "run() (aslm.model.features.feature_container.signalcontainer method)": [[189, "aslm.model.features.feature_container.SignalContainer.run"]], "signalnode (class in aslm.model.features.feature_container)": [[190, "aslm.model.features.feature_container.SignalNode"]], "__init__() (aslm.model.features.feature_container.signalnode method)": [[190, "aslm.model.features.feature_container.SignalNode.__init__"]], "run() (aslm.model.features.feature_container.signalnode method)": [[190, "aslm.model.features.feature_container.SignalNode.run"]], "set_property() (aslm.model.features.feature_container.signalnode method)": [[190, "aslm.model.features.feature_container.SignalNode.set_property"]], "treenode (class in aslm.model.features.feature_container)": [[191, "aslm.model.features.feature_container.TreeNode"]], "__init__() (aslm.model.features.feature_container.treenode method)": [[191, "aslm.model.features.feature_container.TreeNode.__init__"]], "set_property() (aslm.model.features.feature_container.treenode method)": [[191, "aslm.model.features.feature_container.TreeNode.set_property"]], "dummy_true() (in module aslm.model.features.feature_container)": [[192, "aslm.model.features.feature_container.dummy_True"]], "dummy_func() (in module aslm.model.features.feature_container)": [[193, "aslm.model.features.feature_container.dummy_func"]], "get_registered_funcs() (in module aslm.model.features.feature_container)": [[194, "aslm.model.features.feature_container.get_registered_funcs"]], "load_features() (in module aslm.model.features.feature_container)": [[195, "aslm.model.features.feature_container.load_features"]], "aslm.model.features.feature_related_functions": [[196, "module-aslm.model.features.feature_related_functions"]], "sharedlist (class in aslm.model.features.feature_related_functions)": [[197, "aslm.model.features.feature_related_functions.SharedList"]], "__init__() (aslm.model.features.feature_related_functions.sharedlist method)": [[197, "aslm.model.features.feature_related_functions.SharedList.__init__"]], "append() (aslm.model.features.feature_related_functions.sharedlist method)": [[197, "aslm.model.features.feature_related_functions.SharedList.append"]], "clear() (aslm.model.features.feature_related_functions.sharedlist method)": [[197, "aslm.model.features.feature_related_functions.SharedList.clear"]], "copy() (aslm.model.features.feature_related_functions.sharedlist method)": [[197, "aslm.model.features.feature_related_functions.SharedList.copy"]], "count() (aslm.model.features.feature_related_functions.sharedlist method)": [[197, "aslm.model.features.feature_related_functions.SharedList.count"]], "extend() (aslm.model.features.feature_related_functions.sharedlist method)": [[197, "aslm.model.features.feature_related_functions.SharedList.extend"]], "index() (aslm.model.features.feature_related_functions.sharedlist method)": [[197, "aslm.model.features.feature_related_functions.SharedList.index"]], "insert() (aslm.model.features.feature_related_functions.sharedlist method)": [[197, "aslm.model.features.feature_related_functions.SharedList.insert"]], "pop() (aslm.model.features.feature_related_functions.sharedlist method)": [[197, "aslm.model.features.feature_related_functions.SharedList.pop"]], "remove() (aslm.model.features.feature_related_functions.sharedlist method)": [[197, "aslm.model.features.feature_related_functions.SharedList.remove"]], "reverse() (aslm.model.features.feature_related_functions.sharedlist method)": [[197, "aslm.model.features.feature_related_functions.SharedList.reverse"]], "sort() (aslm.model.features.feature_related_functions.sharedlist method)": [[197, "aslm.model.features.feature_related_functions.SharedList.sort"]], "convert_feature_list_to_str() (in module aslm.model.features.feature_related_functions)": [[198, "aslm.model.features.feature_related_functions.convert_feature_list_to_str"]], "convert_str_to_feature_list() (in module aslm.model.features.feature_related_functions)": [[199, "aslm.model.features.feature_related_functions.convert_str_to_feature_list"]], "load_dynamic_parameter_functions() (in module aslm.model.features.feature_related_functions)": [[200, "aslm.model.features.feature_related_functions.load_dynamic_parameter_functions"]], "aslm.model.features.image_writer": [[201, "module-aslm.model.features.image_writer"]], "imagewriter (class in aslm.model.features.image_writer)": [[202, "aslm.model.features.image_writer.ImageWriter"]], "__init__() (aslm.model.features.image_writer.imagewriter method)": [[202, "aslm.model.features.image_writer.ImageWriter.__init__"]], "calculate_and_check_disk_space() (aslm.model.features.image_writer.imagewriter method)": [[202, "aslm.model.features.image_writer.ImageWriter.calculate_and_check_disk_space"]], "close() (aslm.model.features.image_writer.imagewriter method)": [[202, "aslm.model.features.image_writer.ImageWriter.close"], [202, "id0"]], "config_table (aslm.model.features.image_writer.imagewriter attribute)": [[202, "aslm.model.features.image_writer.ImageWriter.config_table"]], "current_time_point (aslm.model.features.image_writer.imagewriter attribute)": [[202, "aslm.model.features.image_writer.ImageWriter.current_time_point"]], "data_buffer (aslm.model.features.image_writer.imagewriter attribute)": [[202, "aslm.model.features.image_writer.ImageWriter.data_buffer"]], "data_source (aslm.model.features.image_writer.imagewriter attribute)": [[202, "aslm.model.features.image_writer.ImageWriter.data_source"]], "file_type (aslm.model.features.image_writer.imagewriter attribute)": [[202, "aslm.model.features.image_writer.ImageWriter.file_type"]], "generate_image_name() (aslm.model.features.image_writer.imagewriter method)": [[202, "aslm.model.features.image_writer.ImageWriter.generate_image_name"], [202, "id1"]], "generate_meta_data() (aslm.model.features.image_writer.imagewriter method)": [[202, "aslm.model.features.image_writer.ImageWriter.generate_meta_data"], [202, "id2"]], "mip (aslm.model.features.image_writer.imagewriter attribute)": [[202, "aslm.model.features.image_writer.ImageWriter.mip"]], "mip_directory (aslm.model.features.image_writer.imagewriter attribute)": [[202, "aslm.model.features.image_writer.ImageWriter.mip_directory"]], "model (aslm.model.features.image_writer.imagewriter attribute)": [[202, "aslm.model.features.image_writer.ImageWriter.model"]], "num_of_channels (aslm.model.features.image_writer.imagewriter attribute)": [[202, "aslm.model.features.image_writer.ImageWriter.num_of_channels"]], "save_directory (aslm.model.features.image_writer.imagewriter attribute)": [[202, "aslm.model.features.image_writer.ImageWriter.save_directory"]], "save_image() (aslm.model.features.image_writer.imagewriter method)": [[202, "aslm.model.features.image_writer.ImageWriter.save_image"], [202, "id3"]], "sub_dir (aslm.model.features.image_writer.imagewriter attribute)": [[202, "aslm.model.features.image_writer.ImageWriter.sub_dir"]], "aslm.model.features.remove_empty_tiles": [[203, "module-aslm.model.features.remove_empty_tiles"]], "detecttissueinstack (class in aslm.model.features.remove_empty_tiles)": [[204, "aslm.model.features.remove_empty_tiles.DetectTissueInStack"]], "__init__() (aslm.model.features.remove_empty_tiles.detecttissueinstack method)": [[204, "aslm.model.features.remove_empty_tiles.DetectTissueInStack.__init__"]], "end_func_data() (aslm.model.features.remove_empty_tiles.detecttissueinstack method)": [[204, "aslm.model.features.remove_empty_tiles.DetectTissueInStack.end_func_data"]], "end_func_signal() (aslm.model.features.remove_empty_tiles.detecttissueinstack method)": [[204, "aslm.model.features.remove_empty_tiles.DetectTissueInStack.end_func_signal"]], "in_func_data() (aslm.model.features.remove_empty_tiles.detecttissueinstack method)": [[204, "aslm.model.features.remove_empty_tiles.DetectTissueInStack.in_func_data"]], "in_func_signal() (aslm.model.features.remove_empty_tiles.detecttissueinstack method)": [[204, "aslm.model.features.remove_empty_tiles.DetectTissueInStack.in_func_signal"]], "pre_func_data() (aslm.model.features.remove_empty_tiles.detecttissueinstack method)": [[204, "aslm.model.features.remove_empty_tiles.DetectTissueInStack.pre_func_data"]], "pre_func_signal() (aslm.model.features.remove_empty_tiles.detecttissueinstack method)": [[204, "aslm.model.features.remove_empty_tiles.DetectTissueInStack.pre_func_signal"]], "detecttissueinstackandrecord (class in aslm.model.features.remove_empty_tiles)": [[205, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord"]], "__init__() (aslm.model.features.remove_empty_tiles.detecttissueinstackandrecord method)": [[205, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.__init__"]], "end_func_data() (aslm.model.features.remove_empty_tiles.detecttissueinstackandrecord method)": [[205, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.end_func_data"]], "end_func_signal() (aslm.model.features.remove_empty_tiles.detecttissueinstackandrecord method)": [[205, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.end_func_signal"]], "in_func_data() (aslm.model.features.remove_empty_tiles.detecttissueinstackandrecord method)": [[205, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.in_func_data"]], "in_func_signal() (aslm.model.features.remove_empty_tiles.detecttissueinstackandrecord method)": [[205, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.in_func_signal"]], "pre_func_data() (aslm.model.features.remove_empty_tiles.detecttissueinstackandrecord method)": [[205, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.pre_func_data"]], "pre_func_signal() (aslm.model.features.remove_empty_tiles.detecttissueinstackandrecord method)": [[205, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.pre_func_signal"]], "removeemptypositions (class in aslm.model.features.remove_empty_tiles)": [[206, "aslm.model.features.remove_empty_tiles.RemoveEmptyPositions"]], "__init__() (aslm.model.features.remove_empty_tiles.removeemptypositions method)": [[206, "aslm.model.features.remove_empty_tiles.RemoveEmptyPositions.__init__"]], "signal_func() (aslm.model.features.remove_empty_tiles.removeemptypositions method)": [[206, "aslm.model.features.remove_empty_tiles.RemoveEmptyPositions.signal_func"]], "detect_tissue() (in module aslm.model.features.remove_empty_tiles)": [[207, "aslm.model.features.remove_empty_tiles.detect_tissue"]], "detect_tissue2() (in module aslm.model.features.remove_empty_tiles)": [[208, "aslm.model.features.remove_empty_tiles.detect_tissue2"]], "aslm.model.features.restful_features": [[209, "module-aslm.model.features.restful_features"]], "ilastiksegmentation (class in aslm.model.features.restful_features)": [[210, "aslm.model.features.restful_features.IlastikSegmentation"]], "__init__() (aslm.model.features.restful_features.ilastiksegmentation method)": [[210, "aslm.model.features.restful_features.IlastikSegmentation.__init__"]], "prepare_service() (in module aslm.model.features.restful_features)": [[211, "aslm.model.features.restful_features.prepare_service"]], "aslm.model.features.volume_search": [[212, "module-aslm.model.features.volume_search"]], "volumesearch (class in aslm.model.features.volume_search)": [[213, "aslm.model.features.volume_search.VolumeSearch"]], "__init__() (aslm.model.features.volume_search.volumesearch method)": [[213, "aslm.model.features.volume_search.VolumeSearch.__init__"]], "draw_box() (in module aslm.model.features.volume_search)": [[214, "aslm.model.features.volume_search.draw_box"]], "aslm.model.metadata_sources": [[215, "module-aslm.model.metadata_sources"]], "aslm.model.metadata_sources.bdv_metadata": [[216, "module-aslm.model.metadata_sources.bdv_metadata"]], "bigdataviewermetadata (class in aslm.model.metadata_sources.bdv_metadata)": [[217, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata"]], "__init__() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[217, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.__init__"]], "affine_matrix_to_stage_positions() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[217, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.affine_matrix_to_stage_positions"]], "parse_xml() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[217, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.parse_xml"]], "shape (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata property)": [[217, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.shape"]], "stage_positions_to_affine_matrix() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[217, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.stage_positions_to_affine_matrix"]], "to_xml() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[217, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.to_xml"]], "voxel_size (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata property)": [[217, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.voxel_size"]], "write_xml() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[217, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.write_xml"]], "aslm.model.metadata_sources.metadata": [[218, "module-aslm.model.metadata_sources.metadata"]], "metadata (class in aslm.model.metadata_sources.metadata)": [[219, "aslm.model.metadata_sources.metadata.Metadata"]], "__init__() (aslm.model.metadata_sources.metadata.metadata method)": [[219, "aslm.model.metadata_sources.metadata.Metadata.__init__"]], "shape (aslm.model.metadata_sources.metadata.metadata property)": [[219, "aslm.model.metadata_sources.metadata.Metadata.shape"]], "voxel_size (aslm.model.metadata_sources.metadata.metadata property)": [[219, "aslm.model.metadata_sources.metadata.Metadata.voxel_size"]], "xmlmetadata (class in aslm.model.metadata_sources.metadata)": [[220, "aslm.model.metadata_sources.metadata.XMLMetadata"]], "__init__() (aslm.model.metadata_sources.metadata.xmlmetadata method)": [[220, "aslm.model.metadata_sources.metadata.XMLMetadata.__init__"]], "shape (aslm.model.metadata_sources.metadata.xmlmetadata property)": [[220, "aslm.model.metadata_sources.metadata.XMLMetadata.shape"]], "to_xml() (aslm.model.metadata_sources.metadata.xmlmetadata method)": [[220, "aslm.model.metadata_sources.metadata.XMLMetadata.to_xml"]], "voxel_size (aslm.model.metadata_sources.metadata.xmlmetadata property)": [[220, "aslm.model.metadata_sources.metadata.XMLMetadata.voxel_size"]], "write_xml() (aslm.model.metadata_sources.metadata.xmlmetadata method)": [[220, "aslm.model.metadata_sources.metadata.XMLMetadata.write_xml"]], "aslm.model.metadata_sources.ome_tiff_metadata": [[221, "module-aslm.model.metadata_sources.ome_tiff_metadata"]], "ometiffmetadata (class in aslm.model.metadata_sources.ome_tiff_metadata)": [[222, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata"]], "__init__() (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata method)": [[222, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.__init__"]], "ome_tiff_xml_dict() (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata method)": [[222, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.ome_tiff_xml_dict"]], "shape (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata property)": [[222, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.shape"]], "to_xml() (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata method)": [[222, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.to_xml"]], "voxel_size (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata property)": [[222, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.voxel_size"]], "write_xml() (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata method)": [[222, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.write_xml"]], "aslm.model.microscope": [[223, "module-aslm.model.microscope"]], "microscope (class in aslm.model.microscope)": [[224, "aslm.model.microscope.Microscope"]], "__init__() (aslm.model.microscope.microscope method)": [[224, "aslm.model.microscope.Microscope.__init__"]], "ask_stage_for_position (aslm.model.microscope.microscope attribute)": [[224, "aslm.model.microscope.Microscope.ask_stage_for_position"]], "assemble_device_config_lists() (aslm.model.microscope.microscope method)": [[224, "aslm.model.microscope.Microscope.assemble_device_config_lists"]], "available_channels (aslm.model.microscope.microscope attribute)": [[224, "aslm.model.microscope.Microscope.available_channels"]], "calculate_all_waveform() (aslm.model.microscope.microscope method)": [[224, "aslm.model.microscope.Microscope.calculate_all_waveform"]], "calculate_exposure_sweep_times() (aslm.model.microscope.microscope method)": [[224, "aslm.model.microscope.Microscope.calculate_exposure_sweep_times"]], "central_focus (aslm.model.microscope.microscope attribute)": [[224, "aslm.model.microscope.Microscope.central_focus"]], "channels (aslm.model.microscope.microscope attribute)": [[224, "aslm.model.microscope.Microscope.channels"]], "configuration (aslm.model.microscope.microscope attribute)": [[224, "aslm.model.microscope.Microscope.configuration"]], "current_channel (aslm.model.microscope.microscope attribute)": [[224, "aslm.model.microscope.Microscope.current_channel"]], "current_laser_index (aslm.model.microscope.microscope attribute)": [[224, "aslm.model.microscope.Microscope.current_laser_index"]], "daq (aslm.model.microscope.microscope attribute)": [[224, "aslm.model.microscope.Microscope.daq"]], "data_buffer (aslm.model.microscope.microscope attribute)": [[224, "aslm.model.microscope.Microscope.data_buffer"]], "end_acquisition() (aslm.model.microscope.microscope method)": [[224, "aslm.model.microscope.Microscope.end_acquisition"]], "galvo (aslm.model.microscope.microscope attribute)": [[224, "aslm.model.microscope.Microscope.galvo"]], "get_readout_time() (aslm.model.microscope.microscope method)": [[224, "aslm.model.microscope.Microscope.get_readout_time"]], "get_stage_position() (aslm.model.microscope.microscope method)": [[224, "aslm.model.microscope.Microscope.get_stage_position"]], "info (aslm.model.microscope.microscope attribute)": [[224, "aslm.model.microscope.Microscope.info"]], "is_synthetic (aslm.model.microscope.microscope attribute)": [[224, "aslm.model.microscope.Microscope.is_synthetic"]], "laser_wavelength (aslm.model.microscope.microscope attribute)": [[224, "aslm.model.microscope.Microscope.laser_wavelength"]], "lasers (aslm.model.microscope.microscope attribute)": [[224, "aslm.model.microscope.Microscope.lasers"]], "load_and_start_devices() (aslm.model.microscope.microscope method)": [[224, "aslm.model.microscope.Microscope.load_and_start_devices"]], "microscope_name (aslm.model.microscope.microscope attribute)": [[224, "aslm.model.microscope.Microscope.microscope_name"]], "move_remote_focus() (aslm.model.microscope.microscope method)": [[224, "aslm.model.microscope.Microscope.move_remote_focus"]], "move_stage() (aslm.model.microscope.microscope method)": [[224, "aslm.model.microscope.Microscope.move_stage"]], "move_stage_offset() (aslm.model.microscope.microscope method)": [[224, "aslm.model.microscope.Microscope.move_stage_offset"]], "number_of_frames (aslm.model.microscope.microscope attribute)": [[224, "aslm.model.microscope.Microscope.number_of_frames"]], "prepare_acquisition() (aslm.model.microscope.microscope method)": [[224, "aslm.model.microscope.Microscope.prepare_acquisition"]], "prepare_next_channel() (aslm.model.microscope.microscope method)": [[224, "aslm.model.microscope.Microscope.prepare_next_channel"]], "ret_pos_dict (aslm.model.microscope.microscope attribute)": [[224, "aslm.model.microscope.Microscope.ret_pos_dict"]], "stages (aslm.model.microscope.microscope attribute)": [[224, "aslm.model.microscope.Microscope.stages"]], "stages_list (aslm.model.microscope.microscope attribute)": [[224, "aslm.model.microscope.Microscope.stages_list"]], "stop_stage() (aslm.model.microscope.microscope method)": [[224, "aslm.model.microscope.Microscope.stop_stage"]], "terminate() (aslm.model.microscope.microscope method)": [[224, "aslm.model.microscope.Microscope.terminate"]], "tiger_controller (aslm.model.microscope.microscope attribute)": [[224, "aslm.model.microscope.Microscope.tiger_controller"]], "turn_off_lasers() (aslm.model.microscope.microscope method)": [[224, "aslm.model.microscope.Microscope.turn_off_lasers"]], "turn_on_laser() (aslm.model.microscope.microscope method)": [[224, "aslm.model.microscope.Microscope.turn_on_laser"]], "update_data_buffer() (aslm.model.microscope.microscope method)": [[224, "aslm.model.microscope.Microscope.update_data_buffer"]], "update_stage_limits() (aslm.model.microscope.microscope method)": [[224, "aslm.model.microscope.Microscope.update_stage_limits"]], "aslm.model.model": [[225, "module-aslm.model.model"]], "model (class in aslm.model.model)": [[226, "aslm.model.model.Model"]], "__init__() (aslm.model.model.model method)": [[226, "aslm.model.model.Model.__init__"]], "acquisition_count (aslm.model.model.model attribute)": [[226, "aslm.model.model.Model.acquisition_count"]], "active_microscope (aslm.model.model.model attribute)": [[226, "aslm.model.model.Model.active_microscope"]], "active_microscope_name (aslm.model.model.model attribute)": [[226, "aslm.model.model.Model.active_microscope_name"]], "ask_to_pause_data_thread (aslm.model.model.model attribute)": [[226, "aslm.model.model.Model.ask_to_pause_data_thread"]], "autofocus_on (aslm.model.model.model attribute)": [[226, "aslm.model.model.Model.autofocus_on"]], "binning (aslm.model.model.model attribute)": [[226, "aslm.model.model.Model.binning"]], "camera_wait_iterations (aslm.model.model.model attribute)": [[226, "aslm.model.model.Model.camera_wait_iterations"]], "change_resolution() (aslm.model.model.model method)": [[226, "aslm.model.model.Model.change_resolution"]], "configuration (aslm.model.model.model attribute)": [[226, "aslm.model.model.Model.configuration"]], "create_pipe() (aslm.model.model.model method)": [[226, "aslm.model.model.Model.create_pipe"]], "current_exposure_time (aslm.model.model.model attribute)": [[226, "aslm.model.model.Model.current_exposure_time"]], "data_buffer (aslm.model.model.model attribute)": [[226, "aslm.model.model.Model.data_buffer"]], "data_buffer_positions (aslm.model.model.model attribute)": [[226, "aslm.model.model.Model.data_buffer_positions"]], "data_thread (aslm.model.model.model attribute)": [[226, "aslm.model.model.Model.data_thread"]], "destroy_virtual_microscope() (aslm.model.model.model method)": [[226, "aslm.model.model.Model.destroy_virtual_microscope"]], "end_acquisition() (aslm.model.model.model method)": [[226, "aslm.model.model.Model.end_acquisition"]], "event_queue (aslm.model.model.model attribute)": [[226, "aslm.model.model.Model.event_queue"]], "f_position (aslm.model.model.model attribute)": [[226, "aslm.model.model.Model.f_position"]], "feature_list (aslm.model.model.model attribute)": [[226, "aslm.model.model.Model.feature_list"]], "focus_pos (aslm.model.model.model attribute)": [[226, "aslm.model.model.Model.focus_pos"]], "frame_id (aslm.model.model.model attribute)": [[226, "aslm.model.model.Model.frame_id"]], "get_active_microscope() (aslm.model.model.model method)": [[226, "aslm.model.model.Model.get_active_microscope"]], "get_camera_line_interval_and_exposure_time() (aslm.model.model.model method)": [[226, "aslm.model.model.Model.get_camera_line_interval_and_exposure_time"]], "get_data_buffer() (aslm.model.model.model method)": [[226, "aslm.model.model.Model.get_data_buffer"]], "get_feature_list() (aslm.model.model.model method)": [[226, "aslm.model.model.Model.get_feature_list"]], "get_microscope_info() (aslm.model.model.model method)": [[226, "aslm.model.model.Model.get_microscope_info"]], "get_offset_variance_maps() (aslm.model.model.model method)": [[226, "aslm.model.model.Model.get_offset_variance_maps"]], "get_stage_position() (aslm.model.model.model method)": [[226, "aslm.model.model.Model.get_stage_position"]], "image_count (aslm.model.model.model attribute)": [[226, "aslm.model.model.Model.image_count"]], "image_writer (aslm.model.model.model attribute)": [[226, "aslm.model.model.Model.image_writer"]], "imaging_mode (aslm.model.model.model attribute)": [[226, "aslm.model.model.Model.imaging_mode"]], "img_height (aslm.model.model.model attribute)": [[226, "aslm.model.model.Model.img_height"]], "img_width (aslm.model.model.model attribute)": [[226, "aslm.model.model.Model.img_width"]], "is_acquiring (aslm.model.model.model attribute)": [[226, "aslm.model.model.Model.is_acquiring"]], "is_live (aslm.model.model.model attribute)": [[226, "aslm.model.model.Model.is_live"]], "is_save (aslm.model.model.model attribute)": [[226, "aslm.model.model.Model.is_save"]], "launch_virtual_microscope() (aslm.model.model.model method)": [[226, "aslm.model.model.Model.launch_virtual_microscope"]], "load_feature_list_from_file() (aslm.model.model.model method)": [[226, "aslm.model.model.Model.load_feature_list_from_file"]], "load_feature_list_from_str() (aslm.model.model.model method)": [[226, "aslm.model.model.Model.load_feature_list_from_str"]], "load_feature_records() (aslm.model.model.model method)": [[226, "aslm.model.model.Model.load_feature_records"]], "load_images() (aslm.model.model.model method)": [[226, "aslm.model.model.Model.load_images"]], "logger (aslm.model.model.model attribute)": [[226, "aslm.model.model.Model.logger"]], "max_entropy (aslm.model.model.model attribute)": [[226, "aslm.model.model.Model.max_entropy"]], "microscopes (aslm.model.model.model attribute)": [[226, "aslm.model.model.Model.microscopes"]], "move_stage() (aslm.model.model.model method)": [[226, "aslm.model.model.Model.move_stage"]], "number_of_frames (aslm.model.model.model attribute)": [[226, "aslm.model.model.Model.number_of_frames"]], "pause_data_event (aslm.model.model.model attribute)": [[226, "aslm.model.model.Model.pause_data_event"]], "pause_data_ready_lock (aslm.model.model.model attribute)": [[226, "aslm.model.model.Model.pause_data_ready_lock"]], "pause_data_thread() (aslm.model.model.model method)": [[226, "aslm.model.model.Model.pause_data_thread"]], "plot_pipe (aslm.model.model.model attribute)": [[226, "aslm.model.model.Model.plot_pipe"]], "pre_exposure_time (aslm.model.model.model attribute)": [[226, "aslm.model.model.Model.pre_exposure_time"]], "prepare_acquisition() (aslm.model.model.model method)": [[226, "aslm.model.model.Model.prepare_acquisition"]], "release_pipe() (aslm.model.model.model method)": [[226, "aslm.model.model.Model.release_pipe"]], "resume_data_thread() (aslm.model.model.model method)": [[226, "aslm.model.model.Model.resume_data_thread"]], "run_acquisition() (aslm.model.model.model method)": [[226, "aslm.model.model.Model.run_acquisition"]], "run_command() (aslm.model.model.model method)": [[226, "aslm.model.model.Model.run_command"]], "run_data_process() (aslm.model.model.model method)": [[226, "aslm.model.model.Model.run_data_process"]], "run_live_acquisition() (aslm.model.model.model method)": [[226, "aslm.model.model.Model.run_live_acquisition"]], "show_img_pipe (aslm.model.model.model attribute)": [[226, "aslm.model.model.Model.show_img_pipe"]], "signal_thread (aslm.model.model.model attribute)": [[226, "aslm.model.model.Model.signal_thread"]], "simplified_data_process() (aslm.model.model.model method)": [[226, "aslm.model.model.Model.simplified_data_process"]], "snap_image() (aslm.model.model.model method)": [[226, "aslm.model.model.Model.snap_image"]], "start_time (aslm.model.model.model attribute)": [[226, "aslm.model.model.Model.start_time"]], "stop_acquisition (aslm.model.model.model attribute)": [[226, "aslm.model.model.Model.stop_acquisition"]], "stop_send_signal (aslm.model.model.model attribute)": [[226, "aslm.model.model.Model.stop_send_signal"]], "stop_stage() (aslm.model.model.model method)": [[226, "aslm.model.model.Model.stop_stage"]], "terminate() (aslm.model.model.model method)": [[226, "aslm.model.model.Model.terminate"]], "total_acquisition_count (aslm.model.model.model attribute)": [[226, "aslm.model.model.Model.total_acquisition_count"]], "total_image_count (aslm.model.model.model attribute)": [[226, "aslm.model.model.Model.total_image_count"]], "update_data_buffer() (aslm.model.model.model method)": [[226, "aslm.model.model.Model.update_data_buffer"]], "update_ilastik_setting() (aslm.model.model.model method)": [[226, "aslm.model.model.Model.update_ilastik_setting"]], "virtual_microscopes (aslm.model.model.model attribute)": [[226, "aslm.model.model.Model.virtual_microscopes"]], "aslm.model.waveforms": [[227, "module-aslm.model.waveforms"]], "camera_exposure() (in module aslm.model.waveforms)": [[228, "aslm.model.waveforms.camera_exposure"]], "dc_value() (in module aslm.model.waveforms)": [[229, "aslm.model.waveforms.dc_value"]], "remote_focus_ramp() (in module aslm.model.waveforms)": [[230, "aslm.model.waveforms.remote_focus_ramp"]], "sawtooth() (in module aslm.model.waveforms)": [[231, "aslm.model.waveforms.sawtooth"]], "sine_wave() (in module aslm.model.waveforms)": [[232, "aslm.model.waveforms.sine_wave"]], "single_pulse() (in module aslm.model.waveforms)": [[233, "aslm.model.waveforms.single_pulse"]], "smooth_waveform() (in module aslm.model.waveforms)": [[234, "aslm.model.waveforms.smooth_waveform"]], "square() (in module aslm.model.waveforms)": [[235, "aslm.model.waveforms.square"]], "aslm.tools": [[236, "module-aslm.tools"]], "aslm.tools.beams": [[237, "module-aslm.tools.beams"]], "fit_gaussian_beam_error() (in module aslm.tools.beams)": [[238, "aslm.tools.beams.fit_gaussian_beam_error"]], "fit_gaussian_beam_mse() (in module aslm.tools.beams)": [[239, "aslm.tools.beams.fit_gaussian_beam_mse"]], "gaussian_beam() (in module aslm.tools.beams)": [[240, "aslm.tools.beams.gaussian_beam"]], "aslm.tools.common_dict_tools": [[241, "module-aslm.tools.common_dict_tools"]], "update_stage_dict() (in module aslm.tools.common_dict_tools)": [[242, "aslm.tools.common_dict_tools.update_stage_dict"]], "aslm.tools.common_functions": [[243, "module-aslm.tools.common_functions"]], "variablewithlock (class in aslm.tools.common_functions)": [[244, "aslm.tools.common_functions.VariableWithLock"]], "__init__() (aslm.tools.common_functions.variablewithlock method)": [[244, "aslm.tools.common_functions.VariableWithLock.__init__"]], "build_ref_name() (in module aslm.tools.common_functions)": [[245, "aslm.tools.common_functions.build_ref_name"]], "combine_funcs() (in module aslm.tools.common_functions)": [[246, "aslm.tools.common_functions.combine_funcs"]], "copy_proxy_object() (in module aslm.tools.common_functions)": [[247, "aslm.tools.common_functions.copy_proxy_object"]], "load_module_from_file() (in module aslm.tools.common_functions)": [[248, "aslm.tools.common_functions.load_module_from_file"]], "aslm.tools.decorators": [[249, "module-aslm.tools.decorators"]], "featurelist (class in aslm.tools.decorators)": [[250, "aslm.tools.decorators.FeatureList"]], "__init__() (aslm.tools.decorators.featurelist method)": [[250, "aslm.tools.decorators.FeatureList.__init__"]], "function_timer() (in module aslm.tools.decorators)": [[251, "aslm.tools.decorators.function_timer"]], "aslm.tools.file_functions": [[252, "module-aslm.tools.file_functions"]], "create_save_path() (in module aslm.tools.file_functions)": [[253, "aslm.tools.file_functions.create_save_path"]], "delete_folder() (in module aslm.tools.file_functions)": [[254, "aslm.tools.file_functions.delete_folder"]], "load_yaml_file() (in module aslm.tools.file_functions)": [[255, "aslm.tools.file_functions.load_yaml_file"]], "save_yaml_file() (in module aslm.tools.file_functions)": [[256, "aslm.tools.file_functions.save_yaml_file"]], "aslm.tools.image": [[257, "module-aslm.tools.image"]], "create_arrow_image() (in module aslm.tools.image)": [[258, "aslm.tools.image.create_arrow_image"]], "text_array() (in module aslm.tools.image)": [[259, "aslm.tools.image.text_array"]], "aslm.tools.image_loaders": [[260, "module-aslm.tools.image_loaders"]], "lazytiff (class in aslm.tools.image_loaders)": [[261, "aslm.tools.image_loaders.LazyTiff"]], "__init__() (aslm.tools.image_loaders.lazytiff method)": [[261, "aslm.tools.image_loaders.LazyTiff.__init__"]], "shape (aslm.tools.image_loaders.lazytiff property)": [[261, "aslm.tools.image_loaders.LazyTiff.shape"]], "aslm.tools.main_functions": [[262, "module-aslm.tools.main_functions"]], "create_parser() (in module aslm.tools.main_functions)": [[263, "aslm.tools.main_functions.create_parser"]], "evaluate_parser_input_arguments() (in module aslm.tools.main_functions)": [[264, "aslm.tools.main_functions.evaluate_parser_input_arguments"]], "aslm.tools.multipos_table_tools": [[265, "module-aslm.tools.multipos_table_tools"]], "calc_num_tiles() (in module aslm.tools.multipos_table_tools)": [[266, "aslm.tools.multipos_table_tools.calc_num_tiles"]], "compute_tiles_from_bounding_box() (in module aslm.tools.multipos_table_tools)": [[267, "aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box"]], "sign() (in module aslm.tools.multipos_table_tools)": [[268, "aslm.tools.multipos_table_tools.sign"]], "update_table() (in module aslm.tools.multipos_table_tools)": [[269, "aslm.tools.multipos_table_tools.update_table"]], "aslm.tools.project_stats": [[270, "module-aslm.tools.project_stats"]], "countlines() (in module aslm.tools.project_stats)": [[271, "aslm.tools.project_stats.countlines"]], "aslm.tools.sdf": [[272, "module-aslm.tools.sdf"]], "box() (in module aslm.tools.sdf)": [[273, "aslm.tools.sdf.box"]], "sphere() (in module aslm.tools.sdf)": [[274, "aslm.tools.sdf.sphere"]], "volume_from_sdf() (in module aslm.tools.sdf)": [[275, "aslm.tools.sdf.volume_from_sdf"]], "aslm.tools.waveform_template_funcs": [[276, "module-aslm.tools.waveform_template_funcs"]], "get_waveform_template_parameters() (in module aslm.tools.waveform_template_funcs)": [[277, "aslm.tools.waveform_template_funcs.get_waveform_template_parameters"]], "aslm.tools.xml_tools": [[278, "module-aslm.tools.xml_tools"]], "dict_to_xml() (in module aslm.tools.xml_tools)": [[279, "aslm.tools.xml_tools.dict_to_xml"]], "parse_xml() (in module aslm.tools.xml_tools)": [[280, "aslm.tools.xml_tools.parse_xml"]], "aslm.view": [[281, "module-aslm.view"]], "aslm.view.custom_widgets": [[282, "module-aslm.view.custom_widgets"]], "aslm.view.main_window_content": [[283, "module-aslm.view.main_window_content"]], "aslm.view.popups": [[284, "module-aslm.view.popups"]]}})