Search.setIndex({"docnames": ["_autosummary/aslm.config", "_autosummary/aslm.config.config", "_autosummary/aslm.config.config.build_nested_dict", "_autosummary/aslm.config.config.get_aslm_path", "_autosummary/aslm.config.config.get_configuration_paths", "_autosummary/aslm.config.config.load_configs", "_autosummary/aslm.config.config.update_config_dict", "_autosummary/aslm.controller", "_autosummary/aslm.controller.configuration_controller", "_autosummary/aslm.controller.configuration_controller.ConfigurationController", "_autosummary/aslm.controller.thread_pool", "_autosummary/aslm.controller.thread_pool.SelfLockThread", "_autosummary/aslm.controller.thread_pool.SynchronizedThreadPool", "_autosummary/aslm.controller.thread_pool.ThreadWaitlist", "_autosummary/aslm.model", "_autosummary/aslm.model.analysis", "_autosummary/aslm.model.analysis.boundary_detect", "_autosummary/aslm.model.analysis.boundary_detect.binary_detect", "_autosummary/aslm.model.analysis.boundary_detect.find_tissue_boundary_2d", "_autosummary/aslm.model.analysis.boundary_detect.has_tissue", "_autosummary/aslm.model.analysis.boundary_detect.map_boundary", "_autosummary/aslm.model.analysis.camera", "_autosummary/aslm.model.analysis.camera.compute_flatfield_map", "_autosummary/aslm.model.analysis.camera.compute_noise_sigma", "_autosummary/aslm.model.analysis.camera.compute_scmos_offset_and_variance_map", "_autosummary/aslm.model.analysis.camera.compute_signal_to_noise", "_autosummary/aslm.model.analysis.detection", "_autosummary/aslm.model.analysis.detection.add_median_border", "_autosummary/aslm.model.analysis.detection.combine_images", "_autosummary/aslm.model.analysis.detection.log_detection", "_autosummary/aslm.model.analysis.detection.make_inside_image", "_autosummary/aslm.model.analysis.detection.make_normalized_image", "_autosummary/aslm.model.analysis.detection.make_sphere_3D", "_autosummary/aslm.model.analysis.detection.multiscale_surface_filter_3D", "_autosummary/aslm.model.analysis.detection.surface_filter_gauss_3D", "_autosummary/aslm.model.analysis.detection.three_level_segmentation", "_autosummary/aslm.model.analysis.image_contrast", "_autosummary/aslm.model.analysis.image_contrast.estimate_and_correct_flatfield", "_autosummary/aslm.model.analysis.image_contrast.estimate_image_resolution", "_autosummary/aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy", "_autosummary/aslm.model.analysis.image_contrast.image_intensity", "_autosummary/aslm.model.analysis.image_contrast.normalized_dct_shannon_entropy", "_autosummary/aslm.model.analysis.image_decorrelation", "_autosummary/aslm.model.analysis.image_decorrelation.apodize_image", "_autosummary/aslm.model.analysis.image_decorrelation.get_correlation_coefficient", "_autosummary/aslm.model.analysis.image_decorrelation.get_decorrelation_local_maxima", "_autosummary/aslm.model.analysis.image_decorrelation.get_image_decorrelation", "_autosummary/aslm.model.analysis.image_decorrelation.get_radial_average", "_autosummary/aslm.model.analysis.image_decorrelation.image_to_polar", "_autosummary/aslm.model.analysis.image_decorrelation.linear_map", "_autosummary/aslm.model.analysis.image_decorrelation.main_image_decorr", "_autosummary/aslm.model.analysis.image_transform", "_autosummary/aslm.model.analysis.image_transform.deskew_image", "_autosummary/aslm.model.analysis.image_transform.initiate_gpu", "_autosummary/aslm.model.analysis.spectral_unmixing", "_autosummary/aslm.model.analysis.spectral_unmixing.to_do", "_autosummary/aslm.model.concurrency", "_autosummary/aslm.model.concurrency.concurrency_tools", "_autosummary/aslm.model.concurrency.concurrency_tools.CustodyThread", "_autosummary/aslm.model.concurrency.concurrency_tools.FancyThread", "_autosummary/aslm.model.concurrency.concurrency_tools.MyTestClass", "_autosummary/aslm.model.concurrency.concurrency_tools.ObjectInSubprocess", "_autosummary/aslm.model.concurrency.concurrency_tools.PoliteThread", "_autosummary/aslm.model.concurrency.concurrency_tools.ResultThread", "_autosummary/aslm.model.concurrency.concurrency_tools.SharedNDArray", "_autosummary/aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess", "_autosummary/aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread", "_autosummary/aslm.model.concurrency.concurrency_tools.TestSharedNDArray", "_autosummary/aslm.model.concurrency.proxy_objects", "_autosummary/aslm.model.concurrency.proxy_objects.ProxyManager", "_autosummary/aslm.model.concurrency.proxy_objects.ProxyObject", "_autosummary/aslm.model.concurrency.proxy_objects.launch_custody_thread", "_autosummary/aslm.model.concurrency.proxy_objects.launch_thread", "_autosummary/aslm.model.concurrency.write_parameters", "_autosummary/aslm.model.concurrency.write_parameters.write_Params", "_autosummary/aslm.model.data_sources", "_autosummary/aslm.model.data_sources.bdv_data_source", "_autosummary/aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource", "_autosummary/aslm.model.data_sources.data_source", "_autosummary/aslm.model.data_sources.data_source.DataSource", "_autosummary/aslm.model.data_sources.get_data_source", "_autosummary/aslm.model.data_sources.tiff_data_source", "_autosummary/aslm.model.data_sources.tiff_data_source.TiffDataSource", "_autosummary/aslm.model.data_sources.zarr_data_source", "_autosummary/aslm.model.data_sources.zarr_data_source.ZarrDataSource", "_autosummary/aslm.model.device_startup_functions", "_autosummary/aslm.model.device_startup_functions.DummyDeviceConnection", "_autosummary/aslm.model.device_startup_functions.auto_redial", "_autosummary/aslm.model.device_startup_functions.device_not_found", "_autosummary/aslm.model.device_startup_functions.load_camera_connection", "_autosummary/aslm.model.device_startup_functions.load_devices", "_autosummary/aslm.model.device_startup_functions.load_filter_wheel_connection", "_autosummary/aslm.model.device_startup_functions.load_stages", "_autosummary/aslm.model.device_startup_functions.load_zoom_connection", "_autosummary/aslm.model.device_startup_functions.start_camera", "_autosummary/aslm.model.device_startup_functions.start_daq", "_autosummary/aslm.model.device_startup_functions.start_filter_wheel", "_autosummary/aslm.model.device_startup_functions.start_galvo", "_autosummary/aslm.model.device_startup_functions.start_lasers", "_autosummary/aslm.model.device_startup_functions.start_remote_focus_device", "_autosummary/aslm.model.device_startup_functions.start_shutter", "_autosummary/aslm.model.device_startup_functions.start_stage", "_autosummary/aslm.model.device_startup_functions.start_zoom", "_autosummary/aslm.model.devices", "_autosummary/aslm.model.devices.APIs", "_autosummary/aslm.model.devices.APIs.coherent", "_autosummary/aslm.model.devices.APIs.dynamixel", "_autosummary/aslm.model.devices.APIs.logitech", "_autosummary/aslm.model.devices.APIs.omicron", "_autosummary/aslm.model.devices.camera", "_autosummary/aslm.model.devices.camera.camera_base", "_autosummary/aslm.model.devices.camera.camera_base.CameraBase", "_autosummary/aslm.model.devices.camera.camera_hamamatsu", "_autosummary/aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca", "_autosummary/aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning", "_autosummary/aslm.model.devices.camera.camera_synthetic", "_autosummary/aslm.model.devices.camera.camera_synthetic.SyntheticCamera", "_autosummary/aslm.model.devices.camera.camera_synthetic.SyntheticCameraController", "_autosummary/aslm.model.devices.daq", "_autosummary/aslm.model.devices.daq.daq_base", "_autosummary/aslm.model.devices.daq.daq_base.DAQBase", "_autosummary/aslm.model.devices.daq.daq_synthetic", "_autosummary/aslm.model.devices.daq.daq_synthetic.SyntheticDAQ", "_autosummary/aslm.model.devices.filter_wheel", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_asi", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_asi.build_filter_wheel_connection", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_base", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_synthetic", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel", "_autosummary/aslm.model.devices.galvo", "_autosummary/aslm.model.devices.galvo.galvo_base", "_autosummary/aslm.model.devices.galvo.galvo_base.GalvoBase", "_autosummary/aslm.model.devices.galvo.galvo_synthetic", "_autosummary/aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo", "_autosummary/aslm.model.devices.joystick", "_autosummary/aslm.model.devices.joystick.joystick_base", "_autosummary/aslm.model.devices.joystick.joystick_base.JoystickBase", "_autosummary/aslm.model.devices.joystick.joystick_synthetic", "_autosummary/aslm.model.devices.joystick.joystick_synthetic.SyntheticJoystick", "_autosummary/aslm.model.devices.lasers", "_autosummary/aslm.model.devices.lasers.laser_base", "_autosummary/aslm.model.devices.lasers.laser_base.LaserBase", "_autosummary/aslm.model.devices.lasers.laser_synthetic", "_autosummary/aslm.model.devices.lasers.laser_synthetic.SyntheticLaser", "_autosummary/aslm.model.devices.lasers.laser_trigger_base", "_autosummary/aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase", "_autosummary/aslm.model.devices.lasers.laser_trigger_synthetic", "_autosummary/aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers", "_autosummary/aslm.model.devices.objectives", "_autosummary/aslm.model.devices.objectives.Objective", "_autosummary/aslm.model.devices.remote_focus", "_autosummary/aslm.model.devices.remote_focus.remote_focus_base", "_autosummary/aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase", "_autosummary/aslm.model.devices.remote_focus.remote_focus_equipment_solutions", "_autosummary/aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions", "_autosummary/aslm.model.devices.remote_focus.remote_focus_synthetic", "_autosummary/aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus", "_autosummary/aslm.model.devices.shutter", "_autosummary/aslm.model.devices.shutter.laser_shutter_base", "_autosummary/aslm.model.devices.shutter.laser_shutter_base.ShutterBase", "_autosummary/aslm.model.devices.shutter.laser_shutter_synthetic", "_autosummary/aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter", "_autosummary/aslm.model.devices.stages", "_autosummary/aslm.model.devices.stages.stage_asi", "_autosummary/aslm.model.devices.stages.stage_asi.ASIStage", "_autosummary/aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection", "_autosummary/aslm.model.devices.stages.stage_base", "_autosummary/aslm.model.devices.stages.stage_base.StageBase", "_autosummary/aslm.model.devices.stages.stage_galvo", "_autosummary/aslm.model.devices.stages.stage_galvo.GalvoNIStage", "_autosummary/aslm.model.devices.stages.stage_mcl", "_autosummary/aslm.model.devices.stages.stage_mcl.MCLStage", "_autosummary/aslm.model.devices.stages.stage_mcl.build_MCLStage_connection", "_autosummary/aslm.model.devices.stages.stage_pi", "_autosummary/aslm.model.devices.stages.stage_pi.PIStage", "_autosummary/aslm.model.devices.stages.stage_pi.build_PIStage_connection", "_autosummary/aslm.model.devices.stages.stage_sutter", "_autosummary/aslm.model.devices.stages.stage_sutter.SutterStage", "_autosummary/aslm.model.devices.stages.stage_sutter.build_MP285_connection", "_autosummary/aslm.model.devices.stages.stage_synthetic", "_autosummary/aslm.model.devices.stages.stage_synthetic.SyntheticStage", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection", "_autosummary/aslm.model.devices.zoom", "_autosummary/aslm.model.devices.zoom.zoom_base", "_autosummary/aslm.model.devices.zoom.zoom_base.ZoomBase", "_autosummary/aslm.model.devices.zoom.zoom_synthetic", "_autosummary/aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom", "_autosummary/aslm.model.dummy", "_autosummary/aslm.model.dummy.DummyController", "_autosummary/aslm.model.dummy.DummyDevice", "_autosummary/aslm.model.dummy.DummyMicroscope", "_autosummary/aslm.model.dummy.DummyModel", "_autosummary/aslm.model.features", "_autosummary/aslm.model.features.auto_tile_scan", "_autosummary/aslm.model.features.auto_tile_scan.CalculateFocusRange", "_autosummary/aslm.model.features.autofocus", "_autosummary/aslm.model.features.autofocus.Autofocus", "_autosummary/aslm.model.features.autofocus.power_tent", "_autosummary/aslm.model.features.common_features", "_autosummary/aslm.model.features.common_features.ChangeResolution", "_autosummary/aslm.model.features.common_features.ConProAcquisition", "_autosummary/aslm.model.features.common_features.FindTissueSimple2D", "_autosummary/aslm.model.features.common_features.LoopByCount", "_autosummary/aslm.model.features.common_features.MoveToNextPositionInMultiPostionTable", "_autosummary/aslm.model.features.common_features.PrepareNextChannel", "_autosummary/aslm.model.features.common_features.Snap", "_autosummary/aslm.model.features.common_features.StackPause", "_autosummary/aslm.model.features.common_features.WaitToContinue", "_autosummary/aslm.model.features.common_features.ZStackAcquisition", "_autosummary/aslm.model.features.constant_velocity_acquisition", "_autosummary/aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition", "_autosummary/aslm.model.features.dummy_detective", "_autosummary/aslm.model.features.dummy_detective.Dummy_Detective", "_autosummary/aslm.model.features.feature_container", "_autosummary/aslm.model.features.feature_container.Container", "_autosummary/aslm.model.features.feature_container.DataContainer", "_autosummary/aslm.model.features.feature_container.DataNode", "_autosummary/aslm.model.features.feature_container.SignalContainer", "_autosummary/aslm.model.features.feature_container.SignalNode", "_autosummary/aslm.model.features.feature_container.TreeNode", "_autosummary/aslm.model.features.feature_container.dummy_True", "_autosummary/aslm.model.features.feature_container.dummy_func", "_autosummary/aslm.model.features.feature_container.get_registered_funcs", "_autosummary/aslm.model.features.feature_container.load_features", "_autosummary/aslm.model.features.image_writer", "_autosummary/aslm.model.features.image_writer.ImageWriter", "_autosummary/aslm.model.features.restful_features", "_autosummary/aslm.model.features.restful_features.IlastikSegmentation", "_autosummary/aslm.model.features.restful_features.prepare_service", "_autosummary/aslm.model.features.volume_search", "_autosummary/aslm.model.features.volume_search.VolumeSearch", "_autosummary/aslm.model.features.volume_search.draw_box", "_autosummary/aslm.model.metadata_sources", "_autosummary/aslm.model.metadata_sources.bdv_metadata", "_autosummary/aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata", "_autosummary/aslm.model.metadata_sources.metadata", "_autosummary/aslm.model.metadata_sources.metadata.Metadata", "_autosummary/aslm.model.metadata_sources.metadata.XMLMetadata", "_autosummary/aslm.model.metadata_sources.ome_tiff_metadata", "_autosummary/aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata", "_autosummary/aslm.model.microscope", "_autosummary/aslm.model.microscope.Microscope", "_autosummary/aslm.model.model", "_autosummary/aslm.model.model.Model", "_autosummary/aslm.model.waveforms", "_autosummary/aslm.model.waveforms.camera_exposure", "_autosummary/aslm.model.waveforms.dc_value", "_autosummary/aslm.model.waveforms.remote_focus_ramp", "_autosummary/aslm.model.waveforms.sawtooth", "_autosummary/aslm.model.waveforms.sine_wave", "_autosummary/aslm.model.waveforms.single_pulse", "_autosummary/aslm.model.waveforms.smooth_waveform", "_autosummary/aslm.model.waveforms.square", "_autosummary/aslm.tools", "_autosummary/aslm.tools.beams", "_autosummary/aslm.tools.beams.fit_gaussian_beam_error", "_autosummary/aslm.tools.beams.fit_gaussian_beam_mse", "_autosummary/aslm.tools.beams.gaussian_beam", "_autosummary/aslm.tools.common_dict_tools", "_autosummary/aslm.tools.common_dict_tools.update_stage_dict", "_autosummary/aslm.tools.common_functions", "_autosummary/aslm.tools.common_functions.build_ref_name", "_autosummary/aslm.tools.common_functions.combine_funcs", "_autosummary/aslm.tools.common_functions.copy_proxy_object", "_autosummary/aslm.tools.decorators", "_autosummary/aslm.tools.decorators.function_timer", "_autosummary/aslm.tools.file_functions", "_autosummary/aslm.tools.file_functions.create_save_path", "_autosummary/aslm.tools.file_functions.delete_folder", "_autosummary/aslm.tools.file_functions.save_yaml_file", "_autosummary/aslm.tools.image", "_autosummary/aslm.tools.image.text_array", "_autosummary/aslm.tools.image_loaders", "_autosummary/aslm.tools.image_loaders.LazyTiff", "_autosummary/aslm.tools.main_functions", "_autosummary/aslm.tools.main_functions.create_parser", "_autosummary/aslm.tools.main_functions.evaluate_parser_input_arguments", "_autosummary/aslm.tools.main_functions.identify_gpu", "_autosummary/aslm.tools.multipos_table_tools", "_autosummary/aslm.tools.multipos_table_tools.calc_num_tiles", "_autosummary/aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box", "_autosummary/aslm.tools.multipos_table_tools.sign", "_autosummary/aslm.tools.multipos_table_tools.update_table", "_autosummary/aslm.tools.project_stats", "_autosummary/aslm.tools.project_stats.countlines", "_autosummary/aslm.tools.sdf", "_autosummary/aslm.tools.sdf.box", "_autosummary/aslm.tools.sdf.sphere", "_autosummary/aslm.tools.sdf.volume_from_sdf", "_autosummary/aslm.tools.waveform_template_funcs", "_autosummary/aslm.tools.waveform_template_funcs.get_waveform_template_parameters", "_autosummary/aslm.tools.xml_tools", "_autosummary/aslm.tools.xml_tools.dict_to_xml", "_autosummary/aslm.tools.xml_tools.parse_xml", "_autosummary/aslm.view", "_autosummary/aslm.view.main_window_content", "_autosummary/aslm.view.popups", "_templates/custom_class", "_templates/custom_module", "api", "config", "contributing_feature_container", "contributing_guidelines", "contributing_hardware", "contributing_home", "contributing_model", "implementations", "index", "software_configuration", "software_installation", "supported_hardware", "userguide"], "filenames": ["_autosummary/aslm.config.rst", "_autosummary/aslm.config.config.rst", "_autosummary/aslm.config.config.build_nested_dict.rst", "_autosummary/aslm.config.config.get_aslm_path.rst", "_autosummary/aslm.config.config.get_configuration_paths.rst", "_autosummary/aslm.config.config.load_configs.rst", "_autosummary/aslm.config.config.update_config_dict.rst", "_autosummary/aslm.controller.rst", "_autosummary/aslm.controller.configuration_controller.rst", "_autosummary/aslm.controller.configuration_controller.ConfigurationController.rst", "_autosummary/aslm.controller.thread_pool.rst", "_autosummary/aslm.controller.thread_pool.SelfLockThread.rst", "_autosummary/aslm.controller.thread_pool.SynchronizedThreadPool.rst", "_autosummary/aslm.controller.thread_pool.ThreadWaitlist.rst", "_autosummary/aslm.model.rst", "_autosummary/aslm.model.analysis.rst", "_autosummary/aslm.model.analysis.boundary_detect.rst", "_autosummary/aslm.model.analysis.boundary_detect.binary_detect.rst", "_autosummary/aslm.model.analysis.boundary_detect.find_tissue_boundary_2d.rst", "_autosummary/aslm.model.analysis.boundary_detect.has_tissue.rst", "_autosummary/aslm.model.analysis.boundary_detect.map_boundary.rst", "_autosummary/aslm.model.analysis.camera.rst", "_autosummary/aslm.model.analysis.camera.compute_flatfield_map.rst", "_autosummary/aslm.model.analysis.camera.compute_noise_sigma.rst", "_autosummary/aslm.model.analysis.camera.compute_scmos_offset_and_variance_map.rst", "_autosummary/aslm.model.analysis.camera.compute_signal_to_noise.rst", "_autosummary/aslm.model.analysis.detection.rst", "_autosummary/aslm.model.analysis.detection.add_median_border.rst", "_autosummary/aslm.model.analysis.detection.combine_images.rst", "_autosummary/aslm.model.analysis.detection.log_detection.rst", "_autosummary/aslm.model.analysis.detection.make_inside_image.rst", "_autosummary/aslm.model.analysis.detection.make_normalized_image.rst", "_autosummary/aslm.model.analysis.detection.make_sphere_3D.rst", "_autosummary/aslm.model.analysis.detection.multiscale_surface_filter_3D.rst", "_autosummary/aslm.model.analysis.detection.surface_filter_gauss_3D.rst", "_autosummary/aslm.model.analysis.detection.three_level_segmentation.rst", "_autosummary/aslm.model.analysis.image_contrast.rst", "_autosummary/aslm.model.analysis.image_contrast.estimate_and_correct_flatfield.rst", "_autosummary/aslm.model.analysis.image_contrast.estimate_image_resolution.rst", "_autosummary/aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy.rst", "_autosummary/aslm.model.analysis.image_contrast.image_intensity.rst", "_autosummary/aslm.model.analysis.image_contrast.normalized_dct_shannon_entropy.rst", "_autosummary/aslm.model.analysis.image_decorrelation.rst", "_autosummary/aslm.model.analysis.image_decorrelation.apodize_image.rst", "_autosummary/aslm.model.analysis.image_decorrelation.get_correlation_coefficient.rst", "_autosummary/aslm.model.analysis.image_decorrelation.get_decorrelation_local_maxima.rst", "_autosummary/aslm.model.analysis.image_decorrelation.get_image_decorrelation.rst", "_autosummary/aslm.model.analysis.image_decorrelation.get_radial_average.rst", "_autosummary/aslm.model.analysis.image_decorrelation.image_to_polar.rst", "_autosummary/aslm.model.analysis.image_decorrelation.linear_map.rst", "_autosummary/aslm.model.analysis.image_decorrelation.main_image_decorr.rst", "_autosummary/aslm.model.analysis.image_transform.rst", "_autosummary/aslm.model.analysis.image_transform.deskew_image.rst", "_autosummary/aslm.model.analysis.image_transform.initiate_gpu.rst", "_autosummary/aslm.model.analysis.spectral_unmixing.rst", "_autosummary/aslm.model.analysis.spectral_unmixing.to_do.rst", "_autosummary/aslm.model.concurrency.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.CustodyThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.FancyThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.MyTestClass.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.ObjectInSubprocess.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.PoliteThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.ResultThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.SharedNDArray.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.TestSharedNDArray.rst", "_autosummary/aslm.model.concurrency.proxy_objects.rst", "_autosummary/aslm.model.concurrency.proxy_objects.ProxyManager.rst", "_autosummary/aslm.model.concurrency.proxy_objects.ProxyObject.rst", "_autosummary/aslm.model.concurrency.proxy_objects.launch_custody_thread.rst", "_autosummary/aslm.model.concurrency.proxy_objects.launch_thread.rst", "_autosummary/aslm.model.concurrency.write_parameters.rst", "_autosummary/aslm.model.concurrency.write_parameters.write_Params.rst", "_autosummary/aslm.model.data_sources.rst", "_autosummary/aslm.model.data_sources.bdv_data_source.rst", "_autosummary/aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.rst", "_autosummary/aslm.model.data_sources.data_source.rst", "_autosummary/aslm.model.data_sources.data_source.DataSource.rst", "_autosummary/aslm.model.data_sources.get_data_source.rst", "_autosummary/aslm.model.data_sources.tiff_data_source.rst", "_autosummary/aslm.model.data_sources.tiff_data_source.TiffDataSource.rst", "_autosummary/aslm.model.data_sources.zarr_data_source.rst", "_autosummary/aslm.model.data_sources.zarr_data_source.ZarrDataSource.rst", "_autosummary/aslm.model.device_startup_functions.rst", "_autosummary/aslm.model.device_startup_functions.DummyDeviceConnection.rst", "_autosummary/aslm.model.device_startup_functions.auto_redial.rst", "_autosummary/aslm.model.device_startup_functions.device_not_found.rst", "_autosummary/aslm.model.device_startup_functions.load_camera_connection.rst", "_autosummary/aslm.model.device_startup_functions.load_devices.rst", "_autosummary/aslm.model.device_startup_functions.load_filter_wheel_connection.rst", "_autosummary/aslm.model.device_startup_functions.load_stages.rst", "_autosummary/aslm.model.device_startup_functions.load_zoom_connection.rst", "_autosummary/aslm.model.device_startup_functions.start_camera.rst", "_autosummary/aslm.model.device_startup_functions.start_daq.rst", "_autosummary/aslm.model.device_startup_functions.start_filter_wheel.rst", "_autosummary/aslm.model.device_startup_functions.start_galvo.rst", "_autosummary/aslm.model.device_startup_functions.start_lasers.rst", "_autosummary/aslm.model.device_startup_functions.start_remote_focus_device.rst", "_autosummary/aslm.model.device_startup_functions.start_shutter.rst", "_autosummary/aslm.model.device_startup_functions.start_stage.rst", "_autosummary/aslm.model.device_startup_functions.start_zoom.rst", "_autosummary/aslm.model.devices.rst", "_autosummary/aslm.model.devices.APIs.rst", "_autosummary/aslm.model.devices.APIs.coherent.rst", "_autosummary/aslm.model.devices.APIs.dynamixel.rst", "_autosummary/aslm.model.devices.APIs.logitech.rst", "_autosummary/aslm.model.devices.APIs.omicron.rst", "_autosummary/aslm.model.devices.camera.rst", "_autosummary/aslm.model.devices.camera.camera_base.rst", "_autosummary/aslm.model.devices.camera.camera_base.CameraBase.rst", "_autosummary/aslm.model.devices.camera.camera_hamamatsu.rst", "_autosummary/aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.rst", "_autosummary/aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.rst", "_autosummary/aslm.model.devices.camera.camera_synthetic.rst", "_autosummary/aslm.model.devices.camera.camera_synthetic.SyntheticCamera.rst", "_autosummary/aslm.model.devices.camera.camera_synthetic.SyntheticCameraController.rst", "_autosummary/aslm.model.devices.daq.rst", "_autosummary/aslm.model.devices.daq.daq_base.rst", "_autosummary/aslm.model.devices.daq.daq_base.DAQBase.rst", "_autosummary/aslm.model.devices.daq.daq_synthetic.rst", "_autosummary/aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.rst", "_autosummary/aslm.model.devices.filter_wheel.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_asi.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_asi.build_filter_wheel_connection.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_base.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_synthetic.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.rst", "_autosummary/aslm.model.devices.galvo.rst", "_autosummary/aslm.model.devices.galvo.galvo_base.rst", "_autosummary/aslm.model.devices.galvo.galvo_base.GalvoBase.rst", "_autosummary/aslm.model.devices.galvo.galvo_synthetic.rst", "_autosummary/aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.rst", "_autosummary/aslm.model.devices.joystick.rst", "_autosummary/aslm.model.devices.joystick.joystick_base.rst", "_autosummary/aslm.model.devices.joystick.joystick_base.JoystickBase.rst", "_autosummary/aslm.model.devices.joystick.joystick_synthetic.rst", "_autosummary/aslm.model.devices.joystick.joystick_synthetic.SyntheticJoystick.rst", "_autosummary/aslm.model.devices.lasers.rst", "_autosummary/aslm.model.devices.lasers.laser_base.rst", "_autosummary/aslm.model.devices.lasers.laser_base.LaserBase.rst", "_autosummary/aslm.model.devices.lasers.laser_synthetic.rst", "_autosummary/aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.rst", "_autosummary/aslm.model.devices.lasers.laser_trigger_base.rst", "_autosummary/aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase.rst", "_autosummary/aslm.model.devices.lasers.laser_trigger_synthetic.rst", "_autosummary/aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers.rst", "_autosummary/aslm.model.devices.objectives.rst", "_autosummary/aslm.model.devices.objectives.Objective.rst", "_autosummary/aslm.model.devices.remote_focus.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_base.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_equipment_solutions.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_synthetic.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.rst", "_autosummary/aslm.model.devices.shutter.rst", "_autosummary/aslm.model.devices.shutter.laser_shutter_base.rst", "_autosummary/aslm.model.devices.shutter.laser_shutter_base.ShutterBase.rst", "_autosummary/aslm.model.devices.shutter.laser_shutter_synthetic.rst", "_autosummary/aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.rst", "_autosummary/aslm.model.devices.stages.rst", "_autosummary/aslm.model.devices.stages.stage_asi.rst", "_autosummary/aslm.model.devices.stages.stage_asi.ASIStage.rst", "_autosummary/aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection.rst", "_autosummary/aslm.model.devices.stages.stage_base.rst", "_autosummary/aslm.model.devices.stages.stage_base.StageBase.rst", "_autosummary/aslm.model.devices.stages.stage_galvo.rst", "_autosummary/aslm.model.devices.stages.stage_galvo.GalvoNIStage.rst", "_autosummary/aslm.model.devices.stages.stage_mcl.rst", "_autosummary/aslm.model.devices.stages.stage_mcl.MCLStage.rst", "_autosummary/aslm.model.devices.stages.stage_mcl.build_MCLStage_connection.rst", "_autosummary/aslm.model.devices.stages.stage_pi.rst", "_autosummary/aslm.model.devices.stages.stage_pi.PIStage.rst", "_autosummary/aslm.model.devices.stages.stage_pi.build_PIStage_connection.rst", "_autosummary/aslm.model.devices.stages.stage_sutter.rst", "_autosummary/aslm.model.devices.stages.stage_sutter.SutterStage.rst", "_autosummary/aslm.model.devices.stages.stage_sutter.build_MP285_connection.rst", "_autosummary/aslm.model.devices.stages.stage_synthetic.rst", "_autosummary/aslm.model.devices.stages.stage_synthetic.SyntheticStage.rst", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.rst", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.rst", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection.rst", "_autosummary/aslm.model.devices.zoom.rst", "_autosummary/aslm.model.devices.zoom.zoom_base.rst", "_autosummary/aslm.model.devices.zoom.zoom_base.ZoomBase.rst", "_autosummary/aslm.model.devices.zoom.zoom_synthetic.rst", "_autosummary/aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.rst", "_autosummary/aslm.model.dummy.rst", "_autosummary/aslm.model.dummy.DummyController.rst", "_autosummary/aslm.model.dummy.DummyDevice.rst", "_autosummary/aslm.model.dummy.DummyMicroscope.rst", "_autosummary/aslm.model.dummy.DummyModel.rst", "_autosummary/aslm.model.features.rst", "_autosummary/aslm.model.features.auto_tile_scan.rst", "_autosummary/aslm.model.features.auto_tile_scan.CalculateFocusRange.rst", "_autosummary/aslm.model.features.autofocus.rst", "_autosummary/aslm.model.features.autofocus.Autofocus.rst", "_autosummary/aslm.model.features.autofocus.power_tent.rst", "_autosummary/aslm.model.features.common_features.rst", "_autosummary/aslm.model.features.common_features.ChangeResolution.rst", "_autosummary/aslm.model.features.common_features.ConProAcquisition.rst", "_autosummary/aslm.model.features.common_features.FindTissueSimple2D.rst", "_autosummary/aslm.model.features.common_features.LoopByCount.rst", "_autosummary/aslm.model.features.common_features.MoveToNextPositionInMultiPostionTable.rst", "_autosummary/aslm.model.features.common_features.PrepareNextChannel.rst", "_autosummary/aslm.model.features.common_features.Snap.rst", "_autosummary/aslm.model.features.common_features.StackPause.rst", "_autosummary/aslm.model.features.common_features.WaitToContinue.rst", "_autosummary/aslm.model.features.common_features.ZStackAcquisition.rst", "_autosummary/aslm.model.features.constant_velocity_acquisition.rst", "_autosummary/aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition.rst", "_autosummary/aslm.model.features.dummy_detective.rst", "_autosummary/aslm.model.features.dummy_detective.Dummy_Detective.rst", "_autosummary/aslm.model.features.feature_container.rst", "_autosummary/aslm.model.features.feature_container.Container.rst", "_autosummary/aslm.model.features.feature_container.DataContainer.rst", "_autosummary/aslm.model.features.feature_container.DataNode.rst", "_autosummary/aslm.model.features.feature_container.SignalContainer.rst", "_autosummary/aslm.model.features.feature_container.SignalNode.rst", "_autosummary/aslm.model.features.feature_container.TreeNode.rst", "_autosummary/aslm.model.features.feature_container.dummy_True.rst", "_autosummary/aslm.model.features.feature_container.dummy_func.rst", "_autosummary/aslm.model.features.feature_container.get_registered_funcs.rst", "_autosummary/aslm.model.features.feature_container.load_features.rst", "_autosummary/aslm.model.features.image_writer.rst", "_autosummary/aslm.model.features.image_writer.ImageWriter.rst", "_autosummary/aslm.model.features.restful_features.rst", "_autosummary/aslm.model.features.restful_features.IlastikSegmentation.rst", "_autosummary/aslm.model.features.restful_features.prepare_service.rst", "_autosummary/aslm.model.features.volume_search.rst", "_autosummary/aslm.model.features.volume_search.VolumeSearch.rst", "_autosummary/aslm.model.features.volume_search.draw_box.rst", "_autosummary/aslm.model.metadata_sources.rst", "_autosummary/aslm.model.metadata_sources.bdv_metadata.rst", "_autosummary/aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.rst", "_autosummary/aslm.model.metadata_sources.metadata.rst", "_autosummary/aslm.model.metadata_sources.metadata.Metadata.rst", "_autosummary/aslm.model.metadata_sources.metadata.XMLMetadata.rst", "_autosummary/aslm.model.metadata_sources.ome_tiff_metadata.rst", "_autosummary/aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.rst", "_autosummary/aslm.model.microscope.rst", "_autosummary/aslm.model.microscope.Microscope.rst", "_autosummary/aslm.model.model.rst", "_autosummary/aslm.model.model.Model.rst", "_autosummary/aslm.model.waveforms.rst", "_autosummary/aslm.model.waveforms.camera_exposure.rst", "_autosummary/aslm.model.waveforms.dc_value.rst", "_autosummary/aslm.model.waveforms.remote_focus_ramp.rst", "_autosummary/aslm.model.waveforms.sawtooth.rst", "_autosummary/aslm.model.waveforms.sine_wave.rst", "_autosummary/aslm.model.waveforms.single_pulse.rst", "_autosummary/aslm.model.waveforms.smooth_waveform.rst", "_autosummary/aslm.model.waveforms.square.rst", "_autosummary/aslm.tools.rst", "_autosummary/aslm.tools.beams.rst", "_autosummary/aslm.tools.beams.fit_gaussian_beam_error.rst", "_autosummary/aslm.tools.beams.fit_gaussian_beam_mse.rst", "_autosummary/aslm.tools.beams.gaussian_beam.rst", "_autosummary/aslm.tools.common_dict_tools.rst", "_autosummary/aslm.tools.common_dict_tools.update_stage_dict.rst", "_autosummary/aslm.tools.common_functions.rst", "_autosummary/aslm.tools.common_functions.build_ref_name.rst", "_autosummary/aslm.tools.common_functions.combine_funcs.rst", "_autosummary/aslm.tools.common_functions.copy_proxy_object.rst", "_autosummary/aslm.tools.decorators.rst", "_autosummary/aslm.tools.decorators.function_timer.rst", "_autosummary/aslm.tools.file_functions.rst", "_autosummary/aslm.tools.file_functions.create_save_path.rst", "_autosummary/aslm.tools.file_functions.delete_folder.rst", "_autosummary/aslm.tools.file_functions.save_yaml_file.rst", "_autosummary/aslm.tools.image.rst", "_autosummary/aslm.tools.image.text_array.rst", "_autosummary/aslm.tools.image_loaders.rst", "_autosummary/aslm.tools.image_loaders.LazyTiff.rst", "_autosummary/aslm.tools.main_functions.rst", "_autosummary/aslm.tools.main_functions.create_parser.rst", "_autosummary/aslm.tools.main_functions.evaluate_parser_input_arguments.rst", "_autosummary/aslm.tools.main_functions.identify_gpu.rst", "_autosummary/aslm.tools.multipos_table_tools.rst", "_autosummary/aslm.tools.multipos_table_tools.calc_num_tiles.rst", "_autosummary/aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box.rst", "_autosummary/aslm.tools.multipos_table_tools.sign.rst", "_autosummary/aslm.tools.multipos_table_tools.update_table.rst", "_autosummary/aslm.tools.project_stats.rst", "_autosummary/aslm.tools.project_stats.countlines.rst", "_autosummary/aslm.tools.sdf.rst", "_autosummary/aslm.tools.sdf.box.rst", "_autosummary/aslm.tools.sdf.sphere.rst", "_autosummary/aslm.tools.sdf.volume_from_sdf.rst", "_autosummary/aslm.tools.waveform_template_funcs.rst", "_autosummary/aslm.tools.waveform_template_funcs.get_waveform_template_parameters.rst", "_autosummary/aslm.tools.xml_tools.rst", "_autosummary/aslm.tools.xml_tools.dict_to_xml.rst", "_autosummary/aslm.tools.xml_tools.parse_xml.rst", "_autosummary/aslm.view.rst", "_autosummary/aslm.view.main_window_content.rst", "_autosummary/aslm.view.popups.rst", "_templates/custom_class.rst", "_templates/custom_module.rst", "api.rst", "config.rst", "contributing_feature_container.rst", "contributing_guidelines.rst", "contributing_hardware.rst", "contributing_home.rst", "contributing_model.rst", "implementations.rst", "index.rst", "software_configuration.rst", "software_installation.rst", "supported_hardware.rst", "userguide.rst"], "titles": ["aslm.config", "aslm.config.config", "aslm.config.config.build_nested_dict", "aslm.config.config.get_aslm_path", "aslm.config.config.get_configuration_paths", "aslm.config.config.load_configs", "aslm.config.config.update_config_dict", "aslm.controller", "aslm.controller.configuration_controller", "aslm.controller.configuration_controller.ConfigurationController", "aslm.controller.thread_pool", "aslm.controller.thread_pool.SelfLockThread", "aslm.controller.thread_pool.SynchronizedThreadPool", "aslm.controller.thread_pool.ThreadWaitlist", "aslm.model", "aslm.model.analysis", "aslm.model.analysis.boundary_detect", "aslm.model.analysis.boundary_detect.binary_detect", "aslm.model.analysis.boundary_detect.find_tissue_boundary_2d", "aslm.model.analysis.boundary_detect.has_tissue", "aslm.model.analysis.boundary_detect.map_boundary", "aslm.model.analysis.camera", "aslm.model.analysis.camera.compute_flatfield_map", "aslm.model.analysis.camera.compute_noise_sigma", "aslm.model.analysis.camera.compute_scmos_offset_and_variance_map", "aslm.model.analysis.camera.compute_signal_to_noise", "aslm.model.analysis.detection", "aslm.model.analysis.detection.add_median_border", "aslm.model.analysis.detection.combine_images", "aslm.model.analysis.detection.log_detection", "aslm.model.analysis.detection.make_inside_image", "aslm.model.analysis.detection.make_normalized_image", "aslm.model.analysis.detection.make_sphere_3D", "aslm.model.analysis.detection.multiscale_surface_filter_3D", "aslm.model.analysis.detection.surface_filter_gauss_3D", "aslm.model.analysis.detection.three_level_segmentation", "aslm.model.analysis.image_contrast", "aslm.model.analysis.image_contrast.estimate_and_correct_flatfield", "aslm.model.analysis.image_contrast.estimate_image_resolution", "aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy", "aslm.model.analysis.image_contrast.image_intensity", "aslm.model.analysis.image_contrast.normalized_dct_shannon_entropy", "aslm.model.analysis.image_decorrelation", "aslm.model.analysis.image_decorrelation.apodize_image", "aslm.model.analysis.image_decorrelation.get_correlation_coefficient", "aslm.model.analysis.image_decorrelation.get_decorrelation_local_maxima", "aslm.model.analysis.image_decorrelation.get_image_decorrelation", "aslm.model.analysis.image_decorrelation.get_radial_average", "aslm.model.analysis.image_decorrelation.image_to_polar", "aslm.model.analysis.image_decorrelation.linear_map", "aslm.model.analysis.image_decorrelation.main_image_decorr", "aslm.model.analysis.image_transform", "aslm.model.analysis.image_transform.deskew_image", "aslm.model.analysis.image_transform.initiate_gpu", "aslm.model.analysis.spectral_unmixing", "aslm.model.analysis.spectral_unmixing.to_do", "aslm.model.concurrency", "aslm.model.concurrency.concurrency_tools", "aslm.model.concurrency.concurrency_tools.CustodyThread", "aslm.model.concurrency.concurrency_tools.FancyThread", "aslm.model.concurrency.concurrency_tools.MyTestClass", "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess", "aslm.model.concurrency.concurrency_tools.PoliteThread", "aslm.model.concurrency.concurrency_tools.ResultThread", "aslm.model.concurrency.concurrency_tools.SharedNDArray", "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess", "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread", "aslm.model.concurrency.concurrency_tools.TestSharedNDArray", "aslm.model.concurrency.proxy_objects", "aslm.model.concurrency.proxy_objects.ProxyManager", "aslm.model.concurrency.proxy_objects.ProxyObject", "aslm.model.concurrency.proxy_objects.launch_custody_thread", "aslm.model.concurrency.proxy_objects.launch_thread", "aslm.model.concurrency.write_parameters", "aslm.model.concurrency.write_parameters.write_Params", "aslm.model.data_sources", "aslm.model.data_sources.bdv_data_source", "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource", "aslm.model.data_sources.data_source", "aslm.model.data_sources.data_source.DataSource", "aslm.model.data_sources.get_data_source", "aslm.model.data_sources.tiff_data_source", "aslm.model.data_sources.tiff_data_source.TiffDataSource", "aslm.model.data_sources.zarr_data_source", "aslm.model.data_sources.zarr_data_source.ZarrDataSource", "aslm.model.device_startup_functions", "aslm.model.device_startup_functions.DummyDeviceConnection", "aslm.model.device_startup_functions.auto_redial", "aslm.model.device_startup_functions.device_not_found", "aslm.model.device_startup_functions.load_camera_connection", "aslm.model.device_startup_functions.load_devices", "aslm.model.device_startup_functions.load_filter_wheel_connection", "aslm.model.device_startup_functions.load_stages", "aslm.model.device_startup_functions.load_zoom_connection", "aslm.model.device_startup_functions.start_camera", "aslm.model.device_startup_functions.start_daq", "aslm.model.device_startup_functions.start_filter_wheel", "aslm.model.device_startup_functions.start_galvo", "aslm.model.device_startup_functions.start_lasers", "aslm.model.device_startup_functions.start_remote_focus_device", "aslm.model.device_startup_functions.start_shutter", "aslm.model.device_startup_functions.start_stage", "aslm.model.device_startup_functions.start_zoom", "aslm.model.devices", "aslm.model.devices.APIs", "aslm.model.devices.APIs.coherent", "aslm.model.devices.APIs.dynamixel", "aslm.model.devices.APIs.logitech", "aslm.model.devices.APIs.omicron", "aslm.model.devices.camera", "aslm.model.devices.camera.camera_base", "aslm.model.devices.camera.camera_base.CameraBase", "aslm.model.devices.camera.camera_hamamatsu", "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca", "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning", "aslm.model.devices.camera.camera_synthetic", "aslm.model.devices.camera.camera_synthetic.SyntheticCamera", "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController", "aslm.model.devices.daq", "aslm.model.devices.daq.daq_base", "aslm.model.devices.daq.daq_base.DAQBase", "aslm.model.devices.daq.daq_synthetic", "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ", "aslm.model.devices.filter_wheel", "aslm.model.devices.filter_wheel.filter_wheel_asi", "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel", "aslm.model.devices.filter_wheel.filter_wheel_asi.build_filter_wheel_connection", "aslm.model.devices.filter_wheel.filter_wheel_base", "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase", "aslm.model.devices.filter_wheel.filter_wheel_sutter", "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel", "aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection", "aslm.model.devices.filter_wheel.filter_wheel_synthetic", "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel", "aslm.model.devices.galvo", "aslm.model.devices.galvo.galvo_base", "aslm.model.devices.galvo.galvo_base.GalvoBase", "aslm.model.devices.galvo.galvo_synthetic", "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo", "aslm.model.devices.joystick", "aslm.model.devices.joystick.joystick_base", "aslm.model.devices.joystick.joystick_base.JoystickBase", "aslm.model.devices.joystick.joystick_synthetic", "aslm.model.devices.joystick.joystick_synthetic.SyntheticJoystick", "aslm.model.devices.lasers", "aslm.model.devices.lasers.laser_base", "aslm.model.devices.lasers.laser_base.LaserBase", "aslm.model.devices.lasers.laser_synthetic", "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser", "aslm.model.devices.lasers.laser_trigger_base", "aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase", "aslm.model.devices.lasers.laser_trigger_synthetic", "aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers", "aslm.model.devices.objectives", "aslm.model.devices.objectives.Objective", "aslm.model.devices.remote_focus", "aslm.model.devices.remote_focus.remote_focus_base", "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase", "aslm.model.devices.remote_focus.remote_focus_equipment_solutions", "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions", "aslm.model.devices.remote_focus.remote_focus_synthetic", "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus", "aslm.model.devices.shutter", "aslm.model.devices.shutter.laser_shutter_base", "aslm.model.devices.shutter.laser_shutter_base.ShutterBase", "aslm.model.devices.shutter.laser_shutter_synthetic", "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter", "aslm.model.devices.stages", "aslm.model.devices.stages.stage_asi", "aslm.model.devices.stages.stage_asi.ASIStage", "aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection", "aslm.model.devices.stages.stage_base", "aslm.model.devices.stages.stage_base.StageBase", "aslm.model.devices.stages.stage_galvo", "aslm.model.devices.stages.stage_galvo.GalvoNIStage", "aslm.model.devices.stages.stage_mcl", "aslm.model.devices.stages.stage_mcl.MCLStage", "aslm.model.devices.stages.stage_mcl.build_MCLStage_connection", "aslm.model.devices.stages.stage_pi", "aslm.model.devices.stages.stage_pi.PIStage", "aslm.model.devices.stages.stage_pi.build_PIStage_connection", "aslm.model.devices.stages.stage_sutter", "aslm.model.devices.stages.stage_sutter.SutterStage", "aslm.model.devices.stages.stage_sutter.build_MP285_connection", "aslm.model.devices.stages.stage_synthetic", "aslm.model.devices.stages.stage_synthetic.SyntheticStage", "aslm.model.devices.stages.stage_tl_kcube_inertial", "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage", "aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection", "aslm.model.devices.zoom", "aslm.model.devices.zoom.zoom_base", "aslm.model.devices.zoom.zoom_base.ZoomBase", "aslm.model.devices.zoom.zoom_synthetic", "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom", "aslm.model.dummy", "aslm.model.dummy.DummyController", "aslm.model.dummy.DummyDevice", "aslm.model.dummy.DummyMicroscope", "aslm.model.dummy.DummyModel", "aslm.model.features", "aslm.model.features.auto_tile_scan", "aslm.model.features.auto_tile_scan.CalculateFocusRange", "aslm.model.features.autofocus", "aslm.model.features.autofocus.Autofocus", "aslm.model.features.autofocus.power_tent", "aslm.model.features.common_features", "aslm.model.features.common_features.ChangeResolution", "aslm.model.features.common_features.ConProAcquisition", "aslm.model.features.common_features.FindTissueSimple2D", "aslm.model.features.common_features.LoopByCount", "aslm.model.features.common_features.MoveToNextPositionInMultiPostionTable", "aslm.model.features.common_features.PrepareNextChannel", "aslm.model.features.common_features.Snap", "aslm.model.features.common_features.StackPause", "aslm.model.features.common_features.WaitToContinue", "aslm.model.features.common_features.ZStackAcquisition", "aslm.model.features.constant_velocity_acquisition", "aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition", "aslm.model.features.dummy_detective", "aslm.model.features.dummy_detective.Dummy_Detective", "aslm.model.features.feature_container", "aslm.model.features.feature_container.Container", "aslm.model.features.feature_container.DataContainer", "aslm.model.features.feature_container.DataNode", "aslm.model.features.feature_container.SignalContainer", "aslm.model.features.feature_container.SignalNode", "aslm.model.features.feature_container.TreeNode", "aslm.model.features.feature_container.dummy_True", "aslm.model.features.feature_container.dummy_func", "aslm.model.features.feature_container.get_registered_funcs", "aslm.model.features.feature_container.load_features", "aslm.model.features.image_writer", "aslm.model.features.image_writer.ImageWriter", "aslm.model.features.restful_features", "aslm.model.features.restful_features.IlastikSegmentation", "aslm.model.features.restful_features.prepare_service", "aslm.model.features.volume_search", "aslm.model.features.volume_search.VolumeSearch", "aslm.model.features.volume_search.draw_box", "aslm.model.metadata_sources", "aslm.model.metadata_sources.bdv_metadata", "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata", "aslm.model.metadata_sources.metadata", "aslm.model.metadata_sources.metadata.Metadata", "aslm.model.metadata_sources.metadata.XMLMetadata", "aslm.model.metadata_sources.ome_tiff_metadata", "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata", "aslm.model.microscope", "aslm.model.microscope.Microscope", "aslm.model.model", "aslm.model.model.Model", "aslm.model.waveforms", "aslm.model.waveforms.camera_exposure", "aslm.model.waveforms.dc_value", "aslm.model.waveforms.remote_focus_ramp", "aslm.model.waveforms.sawtooth", "aslm.model.waveforms.sine_wave", "aslm.model.waveforms.single_pulse", "aslm.model.waveforms.smooth_waveform", "aslm.model.waveforms.square", "aslm.tools", "aslm.tools.beams", "aslm.tools.beams.fit_gaussian_beam_error", "aslm.tools.beams.fit_gaussian_beam_mse", "aslm.tools.beams.gaussian_beam", "aslm.tools.common_dict_tools", "aslm.tools.common_dict_tools.update_stage_dict", "aslm.tools.common_functions", "aslm.tools.common_functions.build_ref_name", "aslm.tools.common_functions.combine_funcs", "aslm.tools.common_functions.copy_proxy_object", "aslm.tools.decorators", "aslm.tools.decorators.function_timer", "aslm.tools.file_functions", "aslm.tools.file_functions.create_save_path", "aslm.tools.file_functions.delete_folder", "aslm.tools.file_functions.save_yaml_file", "aslm.tools.image", "aslm.tools.image.text_array", "aslm.tools.image_loaders", "aslm.tools.image_loaders.LazyTiff", "aslm.tools.main_functions", "aslm.tools.main_functions.create_parser", "aslm.tools.main_functions.evaluate_parser_input_arguments", "aslm.tools.main_functions.identify_gpu", "aslm.tools.multipos_table_tools", "aslm.tools.multipos_table_tools.calc_num_tiles", "aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box", "aslm.tools.multipos_table_tools.sign", "aslm.tools.multipos_table_tools.update_table", "aslm.tools.project_stats", "aslm.tools.project_stats.countlines", "aslm.tools.sdf", "aslm.tools.sdf.box", "aslm.tools.sdf.sphere", "aslm.tools.sdf.volume_from_sdf", "aslm.tools.waveform_template_funcs", "aslm.tools.waveform_template_funcs.get_waveform_template_parameters", "aslm.tools.xml_tools", "aslm.tools.xml_tools.dict_to_xml", "aslm.tools.xml_tools.parse_xml", "aslm.view", "aslm.view.main_window_content", "aslm.view.popups", "&lt;no title&gt;", "&lt;no title&gt;", "API Reference", "Configuring ASLM", "ASLM Feature Container", "Contributing Guidelines", "Adding New Hardware", "Contributing to ASLM", "Adding New Model Features", "Microscope Implementations", "<strong>Autonomous Software for Light Microscopy</strong>", "Software Configuration", "Software Installation", "Supported Hardware", "User Guide"], "terms": {"modul": [0, 7, 11, 14, 15, 56, 58, 63, 64, 71, 72, 75, 103, 104, 105, 106, 107, 108, 109, 118, 123, 134, 139, 144, 155, 162, 167, 189, 199, 239, 260, 301, 302, 303, 305, 313], "function": [1, 11, 12, 16, 21, 26, 28, 30, 33, 34, 36, 42, 45, 51, 52, 54, 55, 58, 60, 63, 64, 65, 66, 67, 68, 71, 72, 75, 85, 87, 113, 114, 116, 124, 129, 168, 175, 178, 181, 186, 198, 202, 203, 204, 220, 232, 233, 236, 250, 251, 255, 259, 261, 262, 263, 265, 267, 268, 269, 270, 271, 272, 273, 274, 277, 281, 285, 290, 292, 293, 294, 295, 296, 297, 298, 308, 309, 313, 315, 317], "manag": [2, 5, 6, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 111, 113, 116, 120, 122, 164, 166, 169, 172, 174, 179, 191, 316, 317], "parent_dict": [2, 6], "key_nam": 2, "dict_data": 2, "nest": [2, 64, 241, 244, 246], "dictionari": [2, 5, 6, 9, 11, 58, 63, 64, 90, 97, 98, 120, 122, 125, 128, 130, 133, 136, 138, 157, 169, 172, 174, 176, 179, 180, 182, 185, 187, 191, 193, 241, 244, 246, 248, 250, 266, 274, 276, 283, 297, 299, 300, 307, 308, 315], "recurs": [2, 64], "paramet": [2, 4, 5, 6, 9, 12, 17, 18, 19, 22, 23, 24, 37, 60, 64, 65, 66, 67, 77, 79, 80, 82, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 111, 113, 114, 116, 117, 120, 122, 125, 128, 130, 133, 136, 138, 154, 157, 159, 161, 169, 170, 172, 174, 176, 179, 180, 182, 183, 185, 187, 191, 193, 195, 196, 198, 203, 204, 217, 232, 237, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 266, 268, 269, 270, 272, 274, 275, 276, 278, 280, 282, 283, 284, 286, 287, 288, 289, 291, 293, 294, 295, 297, 299, 300, 307, 315], "multiprocess": [2, 5, 6, 69, 89, 92, 94, 169, 172, 174, 179], "share": [2, 5, 6, 58, 64, 69, 70, 71, 122, 250, 309], "object": [2, 5, 6, 9, 11, 12, 13, 58, 60, 61, 63, 64, 65, 69, 70, 71, 74, 79, 86, 87, 94, 96, 97, 98, 99, 100, 101, 102, 111, 113, 116, 117, 120, 128, 136, 141, 146, 150, 157, 164, 166, 169, 170, 172, 174, 179, 180, 182, 191, 193, 195, 196, 197, 198, 201, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 221, 226, 232, 234, 237, 243, 248, 250, 266, 270, 280, 282, 283, 284, 289, 295, 307, 309, 313, 315], "e": [2, 4, 5, 6, 9, 23, 64, 82, 113, 114, 116, 126, 128, 130, 131, 133, 170, 180, 191, 193, 232, 244, 286, 307, 308, 316, 317], "g": [2, 5, 6, 9, 64, 82, 113, 114, 116, 126, 128, 130, 131, 133, 154, 170, 180, 191, 193, 232, 244, 286, 307, 308, 316, 317], "dict": [2, 5, 6, 9, 12, 17, 77, 79, 82, 84, 90, 120, 122, 128, 130, 133, 136, 138, 154, 157, 161, 169, 172, 174, 176, 179, 180, 182, 185, 187, 191, 193, 203, 232, 248, 250, 266, 270, 274, 276, 297, 299, 300], "between": [2, 5, 6, 18, 64, 191, 193, 237, 262, 263, 268, 286, 307, 315, 317], "process": [2, 5, 6, 61, 64, 69, 70, 72, 159, 203, 250, 308, 309], "we": [2, 6, 60, 61, 63, 64, 67, 70, 77, 79, 82, 84, 113, 114, 120, 122, 130, 133, 232, 241, 244, 246, 248, 307, 308, 309, 310, 311, 315, 316, 317], "ar": [2, 6, 9, 11, 58, 63, 64, 65, 82, 84, 100, 113, 114, 116, 120, 122, 159, 169, 172, 174, 176, 179, 182, 185, 187, 203, 217, 232, 237, 244, 248, 250, 262, 263, 275, 280, 307, 308, 309, 313, 315, 316, 317], "ad": [2, 6, 60, 63, 64, 169, 237, 282, 289, 311, 314], "str": [2, 3, 4, 6, 9, 12, 17, 18, 19, 22, 24, 60, 64, 65, 66, 67, 77, 79, 80, 82, 84, 94, 96, 97, 98, 99, 100, 101, 102, 111, 113, 114, 116, 117, 120, 122, 125, 126, 128, 130, 131, 133, 136, 138, 154, 157, 159, 161, 164, 166, 169, 170, 172, 174, 176, 179, 180, 182, 183, 185, 187, 191, 195, 232, 237, 241, 244, 246, 248, 250, 264, 268, 274, 275, 276, 278, 280, 283, 291, 297, 299], "name": [2, 6, 9, 11, 12, 58, 60, 61, 63, 64, 65, 66, 67, 77, 79, 82, 84, 94, 96, 97, 98, 99, 100, 101, 102, 111, 113, 116, 117, 120, 122, 125, 128, 130, 133, 136, 138, 154, 157, 161, 164, 166, 169, 172, 174, 179, 180, 182, 191, 197, 232, 237, 248, 250, 268, 275, 276, 297, 307, 309, 315, 317], "insert": [2, 64, 317], "return": [2, 3, 4, 5, 6, 9, 11, 17, 18, 19, 23, 34, 37, 41, 44, 45, 47, 52, 58, 60, 61, 63, 64, 70, 77, 79, 80, 82, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 111, 113, 114, 116, 117, 120, 122, 125, 128, 130, 133, 136, 138, 154, 157, 159, 161, 166, 169, 170, 172, 174, 176, 179, 180, 182, 183, 185, 187, 191, 193, 195, 196, 198, 203, 204, 217, 232, 241, 243, 244, 246, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 266, 268, 269, 270, 272, 274, 276, 278, 280, 282, 283, 284, 286, 287, 288, 289, 293, 294, 295, 297, 299, 300, 309], "type": [2, 3, 5, 6, 9, 18, 19, 23, 24, 37, 64, 77, 79, 80, 82, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 113, 114, 117, 120, 122, 125, 126, 128, 130, 131, 133, 136, 138, 154, 157, 159, 161, 164, 166, 169, 170, 172, 174, 176, 179, 180, 182, 183, 185, 187, 191, 193, 195, 196, 197, 198, 203, 204, 217, 232, 241, 243, 244, 246, 248, 250, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 266, 268, 269, 270, 272, 274, 276, 278, 280, 282, 284, 286, 287, 288, 289, 293, 294, 295, 299, 300, 307, 314, 315], "none": [2, 11, 12, 17, 18, 19, 29, 44, 46, 49, 58, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 77, 79, 82, 84, 113, 114, 116, 136, 138, 143, 157, 159, 161, 179, 182, 195, 196, 198, 203, 217, 221, 222, 224, 232, 241, 243, 244, 246, 248, 250, 266, 280, 282, 289, 291, 299, 315], "exampl": [2, 3, 6, 58, 63, 64, 71, 72, 77, 79, 80, 82, 84, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 136, 138, 157, 159, 161, 169, 174, 176, 179, 182, 185, 187, 195, 196, 197, 198, 232, 252, 253, 254, 255, 256, 257, 259, 262, 275, 280, 284, 295, 307, 308, 309, 310, 315, 316], "establish": [3, 159], "program": [3, 11, 58, 63, 309], "home": [3, 125], "directori": [3, 232, 244, 274, 275, 276, 291, 315, 316], "appdata": [3, 307, 315], "local": [3, 12, 22, 45, 46, 64, 307, 315, 316], "window": [3, 274, 307, 315, 316, 317], "mac": [3, 307, 315, 316], "linux": [3, 307, 315, 316], "path": [3, 4, 5, 64, 150, 152, 250, 274, 275, 280, 283, 291, 309, 316], "c": [3, 64, 180, 246, 307, 315, 316], "user": [3, 64, 159, 250, 274, 284, 307, 311, 314, 315, 316], "usernam": [3, 316], "get": [4, 9, 12, 63, 64, 77, 79, 80, 82, 84, 113, 114, 116, 169, 203, 248, 250, 297, 309, 316], "variou": [4, 66, 67, 307, 315], "configur": [4, 5, 6, 9, 77, 79, 82, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 111, 113, 114, 116, 120, 122, 125, 128, 130, 133, 136, 138, 146, 148, 150, 152, 157, 161, 164, 166, 169, 172, 174, 176, 179, 182, 185, 187, 191, 193, 197, 198, 232, 237, 241, 243, 244, 246, 248, 250, 283, 308, 309, 314, 316, 317, 318], "file": [4, 5, 6, 55, 64, 77, 79, 80, 82, 84, 116, 232, 241, 243, 244, 246, 250, 275, 276, 280, 283, 291, 300, 307, 309, 314, 316, 317], "us": [4, 9, 11, 23, 37, 38, 55, 58, 60, 63, 64, 65, 66, 67, 69, 70, 71, 72, 117, 138, 159, 195, 196, 197, 198, 204, 217, 232, 237, 244, 246, 248, 250, 252, 253, 254, 255, 256, 257, 259, 278, 280, 291, 307, 308, 309, 310, 315, 316, 317], "configuration_path": [4, 283], "contain": [4, 5, 17, 18, 19, 64, 179, 180, 182, 198, 203, 222, 224, 250, 274, 280, 289, 307, 311, 314, 315], "global": [4, 12, 22, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 111, 113, 116, 120, 122, 164, 166, 169, 172, 174, 179, 191, 250], "microscop": [4, 9, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 111, 113, 116, 120, 122, 136, 138, 157, 161, 164, 166, 169, 172, 174, 179, 182, 191, 193, 197, 203, 237, 250, 297, 308, 309, 314, 316], "i": [4, 9, 11, 19, 23, 27, 52, 55, 58, 60, 63, 64, 65, 67, 71, 72, 82, 84, 88, 89, 113, 114, 116, 122, 125, 138, 150, 152, 159, 169, 172, 174, 176, 179, 182, 185, 187, 191, 193, 195, 196, 197, 198, 203, 217, 232, 237, 244, 248, 250, 254, 262, 263, 264, 266, 275, 276, 283, 284, 287, 289, 291, 295, 307, 308, 309, 310, 313, 314, 315, 316, 317], "hardwar": [4, 64, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 111, 113, 116, 164, 166, 169, 172, 174, 176, 179, 187, 191, 232, 308, 311, 314, 316, 318], "setup": [4, 196, 197, 307, 314, 315, 317], "experiment_path": [4, 283], "per": [4, 11, 58, 63, 64, 77, 84, 125, 169, 217, 308, 317], "experi": [4, 77, 79, 82, 84, 150, 152, 213, 232, 237, 241, 243, 244, 246, 276, 283, 309, 316], "waveform_constants_path": [4, 283], "remot": [4, 9, 99, 122, 136, 157, 159, 161, 254, 283, 313], "focu": [4, 9, 99, 122, 136, 157, 159, 161, 169, 172, 191, 193, 203, 241, 254, 287, 307, 308, 317], "all": [4, 11, 12, 18, 58, 60, 63, 64, 65, 66, 67, 82, 113, 114, 116, 120, 122, 169, 172, 174, 176, 179, 182, 185, 187, 217, 248, 250, 275, 280, 286, 307, 308, 309, 315, 317], "magnif": [4, 191, 193], "rest_api_path": [4, 283], "rest": [4, 283, 307, 314], "api": [4, 64, 89, 113, 114, 117, 169, 179, 283, 307, 311, 314, 317], "waveform_templates_path": [4, 283], "waveform": [4, 120, 122, 136, 138, 157, 159, 161, 248, 250, 283, 297, 309, 314, 317], "templat": [4, 64, 283, 297, 314], "kwarg": [5, 11, 12, 58, 60, 63, 64, 65, 66, 67, 71, 72, 87, 223, 225, 235, 250], "load": [5, 64, 90, 125, 248, 250, 280, 309], "list": [5, 9, 17, 18, 33, 64, 98, 179, 182, 198, 203, 230, 237, 241, 246, 248, 250, 268, 269, 270, 289, 307, 314, 315], "config_dict": 5, "amalgam": 5, "input": [5, 33, 37, 43, 44, 45, 46, 47, 48, 49, 64, 159, 274, 282, 283, 295, 317], "config_nam": 6, "new_config": 6, "bool": [6, 9, 17, 18, 19, 22, 24, 60, 64, 65, 66, 67, 77, 79, 82, 84, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 113, 114, 125, 128, 130, 133, 159, 169, 174, 176, 179, 182, 185, 187, 191, 193, 198, 237, 241, 248, 250, 262, 264, 276, 284, 289, 291], "read": [6, 64, 77, 79, 82, 84, 130, 133, 159, 182, 191, 193, 315], "new": [6, 9, 49, 64, 82, 169, 174, 176, 179, 182, 185, 187, 217, 237, 269, 274, 289, 309, 311, 314, 315, 316], "updat": [6, 64, 248, 250, 266, 289, 307, 314, 316], "info": [6, 9], "subdictionari": 6, "replac": [6, 64, 307, 315], "valu": [6, 9, 11, 17, 41, 49, 58, 63, 64, 113, 114, 117, 169, 172, 174, 176, 179, 182, 185, 187, 191, 193, 203, 204, 237, 244, 253, 286, 295, 307, 308, 309, 315, 316], "true": [6, 11, 20, 58, 60, 63, 64, 65, 66, 67, 125, 130, 133, 169, 172, 174, 176, 179, 182, 185, 187, 250, 262, 276, 284, 291, 308], "fals": [6, 11, 22, 41, 58, 60, 61, 63, 64, 65, 66, 67, 82, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 113, 114, 116, 169, 172, 174, 176, 179, 182, 185, 187, 191, 193, 197, 215, 223, 225, 226, 237, 248, 250, 262, 276, 289], "class": [8, 9, 10, 11, 12, 13, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 124, 125, 127, 128, 129, 130, 132, 133, 135, 136, 137, 138, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 168, 169, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 231, 232, 233, 234, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 279, 280, 309, 310], "base": [9, 11, 12, 13, 18, 46, 58, 60, 61, 63, 64, 65, 66, 67, 69, 70, 74, 77, 79, 82, 84, 86, 111, 113, 114, 116, 117, 120, 122, 125, 128, 130, 133, 136, 138, 141, 143, 145, 146, 148, 150, 152, 154, 157, 159, 161, 164, 166, 169, 172, 174, 176, 179, 182, 185, 187, 191, 193, 195, 196, 197, 198, 201, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 221, 222, 223, 224, 225, 226, 232, 234, 237, 241, 243, 244, 246, 248, 250, 280, 287, 289, 309, 310, 316, 317], "thi": [9, 11, 52, 55, 58, 60, 61, 63, 64, 65, 66, 67, 70, 71, 72, 77, 79, 82, 84, 113, 114, 116, 122, 138, 169, 172, 174, 176, 179, 182, 185, 187, 191, 193, 195, 196, 197, 198, 203, 232, 244, 248, 250, 264, 268, 269, 270, 274, 275, 286, 287, 291, 297, 307, 308, 309, 310, 313, 314, 315, 316, 317], "The": [9, 11, 12, 58, 63, 64, 71, 72, 87, 122, 138, 159, 161, 191, 193, 195, 196, 197, 198, 203, 232, 254, 258, 266, 272, 286, 288, 291, 295, 307, 309, 314, 315, 316, 317], "microscope_nam": [9, 88, 94, 96, 97, 98, 99, 100, 101, 102, 111, 113, 114, 116, 120, 122, 125, 128, 130, 133, 136, 138, 146, 148, 157, 161, 164, 166, 169, 172, 174, 176, 179, 182, 185, 187, 191, 193, 248], "microscope_config": 9, "change_microscop": 9, "accord": [9, 64, 113, 114, 116, 150, 152], "get_microscope_configuration_dict": 9, "get_stage_position_limit": 9, "suffix": 9, "posit": [9, 17, 19, 45, 64, 82, 125, 128, 130, 133, 169, 172, 174, 176, 179, 182, 185, 187, 191, 193, 203, 237, 241, 248, 250, 266, 286, 287, 289, 307, 315, 317], "limit": [9, 60, 64, 65, 66, 67, 169, 172, 174, 179, 309], "stage": [9, 92, 101, 191, 193, 203, 217, 237, 241, 248, 250, 308, 309, 310, 314], "__init__": [9, 11, 12, 13, 58, 60, 61, 63, 64, 65, 66, 67, 69, 70, 74, 77, 79, 82, 84, 86, 87, 111, 113, 114, 116, 117, 120, 122, 125, 128, 130, 133, 136, 138, 141, 143, 146, 148, 150, 152, 154, 157, 159, 161, 164, 166, 169, 172, 174, 176, 179, 182, 185, 187, 191, 193, 195, 196, 197, 198, 201, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 221, 222, 223, 224, 225, 226, 232, 234, 237, 241, 243, 244, 246, 248, 250, 280, 308], "method": [9, 11, 12, 13, 58, 60, 61, 63, 64, 65, 66, 67, 69, 70, 74, 77, 79, 82, 84, 86, 111, 113, 114, 116, 117, 120, 122, 125, 128, 130, 133, 136, 138, 141, 143, 146, 148, 150, 152, 154, 157, 159, 161, 164, 166, 169, 172, 174, 176, 179, 182, 185, 187, 191, 193, 195, 196, 197, 198, 201, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 221, 222, 223, 224, 225, 226, 232, 234, 237, 241, 243, 244, 246, 248, 250, 280, 308], "attribut": [9, 11, 58, 63, 64, 65, 77, 79, 82, 84, 111, 113, 114, 116, 126, 131, 164, 166, 169, 172, 174, 176, 179, 182, 185, 187, 241, 243, 244, 246, 280], "result": [9, 63, 64, 72, 87, 113, 114, 191, 193, 270, 309], "microscope_configuration_dict": 9, "_min": 9, "_max": 9, "position_limit": 9, "depend": [9, 64, 125, 287, 308, 314], "min": [9, 17, 19, 64, 169, 172, 174, 179, 307, 315], "max": [9, 64, 169, 172, 174, 179, 307, 315, 317], "x": [9, 19, 41, 64, 77, 79, 82, 84, 169, 172, 174, 176, 179, 182, 185, 187, 204, 237, 241, 250, 262, 263, 278, 280, 286, 287, 288, 289, 295, 307, 315], "2000": [9, 64, 307, 317], "y": [9, 19, 34, 41, 64, 77, 79, 82, 84, 169, 172, 174, 176, 179, 182, 185, 187, 204, 237, 241, 250, 278, 280, 287, 289, 295, 307, 315], "z": [9, 34, 64, 77, 79, 82, 84, 154, 169, 172, 174, 176, 179, 182, 185, 187, 215, 217, 237, 241, 262, 263, 264, 287, 289, 295, 307, 308, 315], "theta": [9, 169, 172, 174, 176, 179, 182, 185, 187, 241, 287, 307, 315], "0": [9, 18, 19, 23, 29, 46, 64, 87, 89, 97, 98, 101, 113, 114, 116, 126, 128, 130, 131, 133, 136, 138, 157, 159, 161, 169, 172, 174, 176, 179, 182, 183, 185, 187, 191, 193, 196, 203, 208, 232, 237, 246, 250, 252, 253, 254, 255, 256, 257, 259, 262, 263, 264, 278, 286, 291, 295, 307, 313, 315], "f": [9, 63, 64, 169, 172, 174, 176, 179, 182, 185, 187, 191, 193, 241, 287, 289, 307, 309, 313, 315, 317], "properti": [9, 11, 58, 63, 64, 77, 79, 82, 84, 113, 114, 116, 154, 241, 243, 244, 246, 280, 308, 309], "camera_config_dict": 9, "camera": [9, 17, 19, 64, 84, 89, 94, 120, 122, 136, 138, 157, 248, 250, 252, 307, 313, 314], "camera_set": 9, "set": [9, 11, 22, 58, 60, 63, 64, 77, 79, 82, 84, 111, 113, 114, 116, 122, 125, 130, 133, 146, 148, 150, 152, 169, 172, 174, 176, 179, 182, 185, 187, 196, 197, 250, 289, 307, 308, 310, 315, 316], "camera_pixel": 9, "default": [9, 11, 12, 37, 46, 58, 60, 63, 64, 113, 114, 116, 128, 130, 133, 136, 169, 217, 232, 248, 250, 256, 276, 278, 283, 309, 315, 317], "pixel": [9, 17, 18, 19, 23, 43, 250, 262, 263, 264, 278, 295], "from": [9, 11, 12, 22, 25, 31, 37, 48, 49, 55, 58, 60, 63, 64, 65, 69, 71, 72, 77, 79, 82, 84, 87, 90, 113, 114, 116, 130, 133, 138, 154, 159, 166, 179, 182, 203, 241, 243, 244, 246, 248, 250, 254, 274, 275, 278, 286, 291, 293, 294, 295, 299, 307, 309, 310, 314, 316, 317], "x_pixel": [9, 315], "int": [9, 17, 18, 19, 22, 24, 60, 64, 65, 66, 67, 77, 79, 82, 84, 87, 89, 97, 98, 101, 111, 113, 114, 116, 117, 122, 126, 128, 130, 131, 133, 136, 138, 157, 159, 170, 182, 183, 191, 193, 198, 203, 232, 241, 246, 248, 250, 256, 258, 264, 278, 286, 287, 288, 291, 295, 297], "number": [9, 11, 43, 46, 58, 63, 64, 87, 113, 114, 116, 130, 133, 136, 157, 159, 169, 180, 203, 248, 250, 286, 287, 288, 291, 297, 309, 314], "y_pixel": [9, 315], "channels_info": 9, "channel": [9, 82, 84, 122, 136, 138, 157, 159, 161, 187, 203, 232, 248, 250, 307, 315, 317], "popul": [9, 116], "combobox": 9, "avail": [9, 11, 58, 63, 64, 71, 191, 193, 284, 309, 316, 317], "laser": [9, 98, 122, 164, 256, 257, 259, 308, 313, 314], "488nm": [9, 315], "561nm": 9, "642nm": [9, 315], "filter": [9, 46, 91, 96, 125, 126, 128, 130, 131, 133, 182, 313, 314], "empti": [9, 64, 130, 133, 182, 203, 315], "align": [9, 64, 130, 133, 315], "gfp": [9, 128, 130, 133, 315], "ff01": [9, 315], "515": [9, 315], "30": [9, 64, 295, 307, 315], "32": [9, 37, 64, 315], "daq_sample_r": 9, "daq": [9, 95, 98, 100, 150, 152, 248, 250, 307], "sampl": [9, 46, 136, 157, 262, 263, 264, 308, 313], "rate": [9, 113, 114, 116, 126, 131, 133, 136, 157, 159, 170, 183], "float": [9, 11, 17, 18, 19, 22, 23, 24, 37, 58, 60, 63, 64, 65, 66, 67, 77, 79, 82, 84, 111, 113, 114, 116, 120, 122, 130, 133, 136, 138, 154, 157, 159, 161, 169, 172, 174, 176, 179, 182, 183, 185, 187, 195, 203, 204, 237, 241, 248, 252, 253, 254, 255, 256, 257, 259, 262, 263, 264, 286, 287, 288, 294, 295], "filter_wheel_setting_dict": 9, "wheel": [9, 91, 96, 125, 126, 128, 130, 131, 133, 182, 313, 314], "galvo_parameter_dict": 9, "galvo": [9, 88, 97, 120, 122, 174, 253, 255, 283, 309], "lasers_info": 9, "laser_list": 9, "number_of_channel": 9, "remote_focus_dict": 9, "delay_perc": [9, 315], "pulse_perc": [9, 315], "remote_focus_paramet": 9, "percent": [9, 136, 157, 237, 252, 254, 255, 257, 259], "delai": [9, 136, 157, 191, 193, 254, 257], "puls": [9, 169, 257, 315, 317], "stage_default_posit": 9, "current": [9, 11, 18, 58, 63, 64, 113, 114, 116, 117, 166, 169, 179, 191, 193, 203, 217, 232, 237, 250, 287, 307, 315], "stage_setting_dict": 9, "stage_step": 9, "step": [9, 64, 159, 203, 209, 217, 223, 225, 226, 307, 308, 315, 316], "size": [9, 17, 18, 19, 64, 77, 79, 82, 84, 113, 114, 116, 203, 217, 241, 243, 244, 246, 250, 262, 263, 264, 278, 286, 307, 315], "same": [9, 11, 17, 19, 58, 63, 64, 159, 191, 193, 246, 276, 280], "group": [11, 58, 63], "target": [11, 12, 18, 58, 63, 71, 72, 179, 191, 193, 250, 266], "arg": [11, 12, 58, 60, 63, 64, 65, 66, 67, 71, 72, 87, 88, 203, 227, 228, 250, 268, 283, 284], "daemon": [11, 58, 63], "thread": [11, 12, 58, 61, 63, 65, 71, 72, 91, 92, 93, 95, 96, 98, 100, 102, 198, 203, 250], "constructor": [11, 58, 63], "should": [11, 58, 63, 64, 71, 72, 84, 113, 114, 116, 159, 169, 286, 307, 309, 315, 316, 317], "alwai": [11, 58, 63, 64], "call": [11, 58, 60, 61, 63, 64, 71, 72, 122, 174, 176, 182, 185, 187, 203, 250, 307, 315, 316], "keyword": [11, 12, 58, 63, 64, 71, 77, 79, 82, 84, 250], "argument": [11, 12, 58, 60, 61, 63, 64, 65, 66, 67, 70, 71, 77, 79, 82, 84, 87, 125, 130, 133, 250, 268, 282, 283, 308], "reserv": [11, 58, 63], "futur": [11, 58, 63, 64, 309], "extens": [11, 58, 63, 232, 309], "when": [11, 58, 61, 63, 64, 72, 169, 248, 250, 307, 308, 309, 315, 316, 317], "threadgroup": [11, 58, 63], "implement": [11, 58, 63, 64, 77, 79, 82, 84, 174, 176, 182, 185, 187, 244], "callabl": [11, 12, 58, 60, 61, 63, 65, 66, 67, 70], "invok": [11, 58, 63, 64], "run": [11, 12, 58, 60, 63, 65, 66, 67, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 122, 203, 250, 307, 308, 309, 315, 316, 317], "mean": [11, 23, 58, 63, 64, 263], "noth": [11, 58, 63], "By": [11, 58, 60, 63, 64, 315], "uniqu": [11, 58, 63], "construct": [11, 58, 63, 64, 191, 193, 237], "form": [11, 58, 63, 64, 309, 317], "n": [11, 58, 63, 64, 82, 206, 208, 237, 262, 263, 264, 293, 294, 295, 309, 315, 316], "where": [11, 58, 63, 64, 232, 250, 308, 310, 315, 316], "small": [11, 58, 63, 309], "decim": [11, 58, 63, 64], "tupl": [11, 12, 24, 58, 63, 64, 77, 79, 82, 84, 87, 241, 243, 244, 246, 278, 280, 293], "invoc": [11, 58, 63], "If": [11, 41, 58, 60, 61, 63, 64, 65, 66, 67, 69, 70, 72, 84, 122, 159, 203, 250, 262, 280, 283, 307, 309, 315, 316], "subclass": [11, 58, 60, 63, 64], "overrid": [11, 58, 63, 232], "must": [11, 17, 19, 58, 63, 64, 71, 130, 295, 308, 309, 317], "make": [11, 32, 58, 61, 63, 64, 70, 84, 169, 172, 174, 179, 287, 307, 309, 311, 315], "sure": [11, 58, 63, 64, 169, 172, 174, 179, 307, 315], "befor": [11, 58, 63, 64, 146, 148, 182, 195, 289, 308, 316], "do": [11, 55, 58, 63, 64, 113, 114, 122, 169, 241, 244, 246, 307, 309, 315, 316, 317], "anyth": [11, 58, 63], "els": [11, 58, 63], "getnam": [11, 58, 63], "string": [11, 58, 60, 61, 63, 64, 82, 125, 128, 130, 133, 138, 232, 276, 299], "identif": [11, 58, 63], "purpos": [11, 58, 63, 64, 72, 120, 122, 138, 316], "onli": [11, 58, 63, 64, 84, 122, 169, 174, 217, 252, 295, 307, 309, 315, 316], "deprec": [11, 58, 63, 64], "instead": [11, 58, 63, 64, 72, 307, 315], "isdaemon": [11, 58, 63], "whether": [11, 58, 63, 64, 89, 169, 172, 174, 176, 179, 182, 185, 187, 250, 291], "islock": 11, "check": [11, 64, 87, 125, 128, 130, 133, 159, 191, 193, 250], "lock": [11, 64], "is_al": [11, 58, 63], "aliv": [11, 58, 63], "just": [11, 58, 63, 64, 65], "start": [11, 19, 58, 60, 63, 64, 122, 136, 138, 157, 159, 161, 169, 198, 248, 250, 254, 287, 291, 308, 309, 316, 317], "until": [11, 58, 63, 71, 122, 169, 174, 176, 179, 182, 185, 187, 248, 250], "after": [11, 58, 63, 64, 117, 169, 191, 193, 250, 309, 315, 316], "termin": [11, 58, 63, 309, 315, 316, 317], "see": [11, 58, 60, 63, 64, 71, 72, 128, 130, 244, 300, 309, 314, 316], "also": [11, 58, 63, 64, 309, 316, 317], "enumer": [11, 58, 63], "join": [11, 58, 63, 72], "timeout": [11, 58, 63, 126, 131, 159, 170, 183, 196], "wait": [11, 58, 63, 71, 113, 114, 116, 122, 125, 130, 133, 159, 170, 179, 182, 195, 248, 250, 308], "block": [11, 58, 63, 64, 169, 174, 176, 179, 182, 185, 187, 305], "whose": [11, 58, 63, 64], "either": [11, 58, 63, 64, 116, 307, 315], "normal": [11, 28, 31, 44, 46, 58, 63, 64, 111, 113, 114, 116, 120, 122, 248, 315], "through": [11, 41, 58, 63, 64, 237], "an": [11, 17, 18, 19, 22, 24, 25, 38, 48, 52, 58, 60, 61, 63, 64, 65, 66, 67, 70, 71, 72, 87, 111, 113, 114, 116, 169, 172, 174, 176, 179, 182, 185, 187, 241, 244, 250, 283, 286, 289, 295, 300, 307, 308, 309, 310, 315, 317], "unhandl": [11, 58, 63], "except": [11, 58, 60, 63, 64, 65, 66, 67, 72, 87, 169, 172, 174, 176, 179, 182, 185, 187], "option": [11, 12, 18, 58, 61, 63, 64, 136, 232, 248, 256, 307, 308, 309], "occur": [11, 58, 63, 64, 169, 310], "present": [11, 19, 58, 63], "point": [11, 58, 60, 63, 64, 82, 232, 293, 294, 295], "specifi": [11, 58, 63, 64, 130, 133, 159, 232, 274, 276, 307, 308, 315], "oper": [11, 58, 61, 63, 67, 70, 120, 122, 169, 172, 174, 179, 217, 308, 310, 313, 315, 316, 317], "second": [11, 58, 63, 64, 113, 114, 116, 120, 122, 130, 136, 138, 157, 159, 161, 169, 248, 252, 253, 254, 255, 256, 257, 259, 307, 315], "fraction": [11, 58, 63, 286, 287], "thereof": [11, 58, 63], "As": [11, 58, 61, 63, 64, 70, 308], "you": [11, 58, 61, 63, 64, 69, 70, 71, 72, 307, 309, 315, 316, 317], "decid": [11, 58, 63, 307, 315], "happen": [11, 58, 63, 308], "still": [11, 58, 63, 64, 307, 308, 315, 316, 317], "time": [11, 58, 63, 64, 82, 87, 111, 113, 114, 116, 120, 122, 125, 130, 133, 136, 138, 157, 159, 161, 170, 183, 195, 217, 232, 248, 250, 252, 272, 310, 315, 317], "out": [11, 58, 60, 63, 64, 113, 114, 196, 203, 208, 237, 257, 286, 287, 307, 309, 315, 317], "A": [11, 58, 63, 64, 71, 72, 169, 172, 174, 176, 179, 182, 185, 187, 206, 208, 237, 280, 286, 295, 308, 309, 315, 317], "can": [11, 58, 61, 63, 64, 65, 69, 72, 77, 79, 82, 84, 116, 159, 169, 244, 250, 280, 307, 308, 309, 310, 315, 316], "ed": [11, 58, 63], "mani": [11, 58, 63, 64, 84, 203, 308, 309, 315], "rais": [11, 58, 60, 63, 64, 65, 66, 67, 72, 88, 280], "runtimeerror": [11, 58, 63, 64, 65], "attempt": [11, 58, 63, 64, 87], "made": [11, 58, 63, 64], "would": [11, 58, 60, 63, 64, 307, 315, 317], "caus": [11, 58, 63, 64], "deadlock": [11, 58, 63], "It": [11, 58, 63, 64, 203, 217, 274, 307, 314, 315, 316, 317], "error": [11, 58, 63, 64, 72, 88, 262, 263, 278, 309, 316], "ha": [11, 58, 63, 64, 69, 159, 169, 174, 176, 179, 182, 185, 187, 217, 284, 286, 307, 308, 313, 315], "been": [11, 58, 63], "so": [11, 58, 63, 64, 72, 122, 217, 307, 316, 317], "setdaemon": [11, 58, 63], "setnam": [11, 58, 63], "": [11, 23, 58, 61, 63, 64, 111, 113, 114, 116, 183, 232, 307, 308, 309, 316], "activ": [11, 58, 63, 113, 114, 116, 120, 122, 250, 309, 314, 315, 316, 317], "most": [11, 58, 63, 64, 309, 315, 317], "onc": [11, 58, 63, 64, 159, 308, 316, 317], "arrang": [11, 58, 63], "separ": [11, 58, 63, 64, 244, 268, 309, 313], "more": [11, 58, 63, 64, 84, 169, 172, 174, 176, 179, 182, 185, 187, 307, 309, 314, 316], "than": [11, 17, 19, 58, 63, 64, 77, 84, 113, 114, 116, 309, 317], "unlock": 11, "finish": [11, 182, 203], "boolean": [11, 58, 63, 64], "indic": [11, 17, 58, 63, 64, 232, 237, 248, 286, 308], "otherwis": [11, 58, 63, 64, 120, 122, 276], "Its": [11, 58, 63], "initi": [11, 13, 58, 61, 63, 64, 69, 70, 77, 79, 82, 84, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 113, 114, 116, 122, 146, 148, 159, 169, 170, 172, 174, 176, 179, 182, 185, 187, 195, 203, 250, 315], "inherit": [11, 58, 63, 64, 87], "creat": [11, 12, 58, 60, 63, 64, 72, 122, 169, 174, 176, 179, 182, 187, 250, 253, 255, 256, 257, 259, 274, 278, 287, 309, 316, 317], "main": [11, 58, 63, 72, 308, 309], "therefor": [11, 58, 63, 64], "entir": [11, 58, 63, 237], "python": [11, 58, 61, 63, 64, 70, 77, 79, 82, 84, 241, 243, 244, 246, 275, 299, 307, 314, 315], "exit": [11, 58, 61, 63, 146, 148, 308], "left": [11, 58, 63, 64, 166, 254, 278, 286, 316], "ident": [11, 58, 63, 315], "identifi": [11, 33, 34, 58, 63, 130, 317], "nonzero": [11, 58, 63, 64], "integ": [11, 58, 63, 64, 252, 253, 254, 255, 257, 259, 309], "get_id": [11, 58, 63], "mai": [11, 58, 63, 64, 308, 309, 316, 317], "recycl": [11, 58, 63], "anoth": [11, 58, 60, 63, 64, 72, 307, 309, 315, 316], "even": [11, 22, 58, 63, 64], "semant": [11, 58, 63], "multipl": [11, 22, 24, 33, 58, 63, 64, 65, 244, 317], "given": [11, 23, 58, 63, 64, 80, 113, 114, 116, 125, 128, 130, 133, 136, 138, 161, 289, 316], "native_id": [11, 58, 63], "nativ": [11, 58, 63, 64], "integr": [11, 58, 63], "id": [11, 58, 63, 88, 89, 97, 98, 101, 136, 138, 198, 203], "non": [11, 58, 63, 64, 283], "neg": [11, 58, 63], "get_native_id": [11, 58, 63], "repres": [11, 58, 63, 307, 315], "report": [11, 58, 63, 169, 174, 176, 179, 182, 187, 250, 309], "kernel": [11, 58, 63], "clear": [12, 64, 196, 250], "pool": 12, "createthread": 12, "resourcenam": 12, "callback": 12, "cbarg": 12, "cbkarg": 12, "add": [12, 27, 60, 282, 283, 307, 309, 315, 316], "waitlist": 12, "resourc": [12, 58, 65, 71], "getrunningthread": 12, "globaltrac": 12, "frame": [12, 22, 23, 24, 84, 113, 114, 116, 198, 203, 237, 248, 250, 313, 317], "event": 12, "trace": [12, 64], "ani": [12, 58, 60, 63, 64, 77, 79, 82, 84, 308], "killthreadinlist": 12, "threadlist": 12, "kill": 12, "localtrac": 12, "movetodelet": 12, "taskthread": 12, "move": [12, 55, 64, 84, 125, 130, 133, 169, 172, 174, 176, 179, 182, 185, 187, 191, 193, 203, 237, 248, 250, 307, 308, 315], "todeletelist": 12, "selflockthread": 12, "registerresourc": 12, "regist": [12, 317], "removethread": 12, "remov": [12, 64, 307, 315], "threadtaskwrap": 12, "wrap": [12, 272], "img_data": 17, "_supportsarrai": [17, 18, 19, 22, 24, 77, 79, 82, 84, 241, 264], "dtype": [17, 18, 19, 22, 24, 63, 64, 67, 69, 77, 79, 82, 84, 241, 264], "_nestedsequ": [17, 18, 19, 22, 24, 77, 79, 82, 84, 241, 264], "complex": [17, 18, 19, 22, 24, 44, 64, 77, 79, 82, 84, 241, 264], "byte": [17, 18, 19, 22, 24, 64, 77, 79, 82, 84, 130, 133, 159, 182, 241, 264], "boundari": [17, 18, 20, 237, 286], "width": [17, 19, 64, 111, 113, 114, 116, 248, 262, 263, 264, 293], "1": [17, 18, 19, 23, 44, 46, 63, 64, 77, 79, 82, 84, 89, 117, 120, 122, 136, 138, 157, 159, 161, 169, 195, 203, 208, 209, 217, 224, 237, 246, 248, 250, 253, 254, 255, 256, 257, 259, 262, 263, 264, 286, 295, 307, 315, 316, 317], "offset": [17, 19, 22, 24, 25, 64, 191, 193, 203, 204, 248, 250, 254, 255, 256, 257, 259, 262, 263, 264, 278, 315], "varianc": [17, 19, 24, 25, 64, 250], "perform": [17, 49, 60, 65, 66, 67, 130, 308, 314, 317], "binari": [17, 64, 278], "search": [17, 316], "tissu": [17, 18, 19, 208, 237], "imag": [17, 18, 19, 22, 24, 25, 27, 28, 31, 34, 37, 38, 41, 43, 44, 46, 47, 48, 52, 64, 113, 114, 116, 122, 154, 203, 208, 232, 237, 248, 250, 262, 263, 264, 280, 287, 295, 308, 313, 317], "locat": [17, 64, 130, 191, 193, 283, 307, 316, 317], "image_data": [17, 18, 19, 27, 29, 31, 34, 35, 37, 52], "npt": [17, 18, 19, 22, 24, 77, 79, 82, 84, 293, 294, 295], "arraylik": [17, 18, 19, 22, 24, 77, 79, 82, 84, 293, 294, 295], "xy": [17, 22], "presenc": 17, "subimag": [17, 19], "smaller": [17, 19, 64], "shape": [17, 19, 32, 64, 67, 69, 77, 79, 82, 84, 241, 243, 244, 246, 280], "map": [17, 19, 22, 24, 25, 49, 64, 244, 250, 307, 315], "mag_ratio": 18, "find": [18, 64, 237, 307, 308, 315, 316, 317], "otsu": [18, 30, 31], "threshold": [18, 30, 31], "space": [18, 44, 46, 64, 208, 286, 287], "resampl": 18, "ratio": 18, "over": [18, 64, 316], "tile": [18, 237, 286, 287], "row": [18, 64, 289], "downsampl": 18, "determin": [19, 64], "direct": [20, 34, 64, 111, 113, 114, 116, 237, 262, 263, 264, 309, 316, 317], "offset_map": [22, 25], "comput": [22, 24, 25, 307, 315, 316, 317], "flatfield": 22, "evenli": 22, "illumin": 22, "scmo": [22, 23, 24], "zyx": [22, 24, 77], "defocus": 22, "signal": [22, 23, 122, 196, 197, 198, 229, 250, 255, 308], "np": [22, 23, 63, 64, 130, 232, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 278, 287, 289], "absenc": 22, "oppos": 22, "fn": 23, "qe": 23, "82": 23, "ib": 23, "nr": 23, "4": [23, 64, 113, 154, 252, 253, 255, 256, 257, 259, 262, 263, 313, 315, 316], "m": [23, 38, 111, 113, 114, 116, 154, 180, 307, 315, 316], "http": [23, 38, 77, 79, 82, 84, 125, 130, 159, 169, 241, 243, 244, 246, 275, 315, 316, 317], "www": [23, 130, 317], "hamamatsu": [23, 113, 114, 313], "com": [23, 38, 77, 79, 82, 84, 125, 130, 159, 169, 183, 241, 243, 244, 246, 316, 317], "content": [23, 64, 270, 276], "dam": 23, "photon": 23, "site": 23, "document": [23, 64, 113, 114, 116, 169, 309, 314, 316], "99_sales_librari": 23, "sy": [23, 64], "scas0134e_c13440": 23, "20cu_tec": 23, "pdf": [23, 130], "nois": 23, "sigma": [23, 34, 203, 204], "excess": 23, "factor": [23, 169, 309], "unitless": 23, "quantum": 23, "effici": 23, "arrai": [23, 64, 67, 69, 77, 79, 82, 84, 253, 254, 255, 256, 257, 258, 259, 262, 264, 278, 280, 287, 289, 293, 294], "background": [23, 262, 263, 264], "readout": [23, 111, 113, 114, 116, 120, 122, 136, 138, 157, 159, 161, 248], "rm": 23, "em": 23, "gain": 23, "estim": [23, 38, 46, 125], "electron": 23, "union": 24, "numpi": [24, 64, 69, 116, 157, 159, 161, 248, 253, 254, 255, 256, 257, 258, 259, 280], "_array_lik": 24, "_nested_sequ": 24, "dark": 24, "taken": [24, 58, 63, 159, 191, 193], "sequenti": [24, 58, 63], "variance_map": 25, "snr": 25, "border": 27, "median": 27, "requir": [27, 55, 64, 100, 169, 172, 174, 176, 179, 182, 185, 187, 250, 313, 316], "3d": [27, 32, 41], "inside_imag": 28, "normalized_cel": 28, "surface_cel": 28, "combin": [28, 269], "insid": [28, 64, 316], "cell": [28, 30], "surfac": [28, 33, 34], "image_threshold": 29, "pixel_s": [29, 38, 262, 263, 264, 295, 315], "206": 29, "padded_image_data": 30, "insidegamma": 30, "insideblur": 30, "insidedilateradiu": 30, "insideeroderadiu": 30, "tri": [30, 87, 309], "fill": [30, 64, 203, 238], "interior": 30, "gaussian": [30, 262, 263, 264], "blur": 30, "follow": [30, 191, 193, 308, 309, 315, 316], "dilat": 30, "hole": 30, "eros": 30, "subtract": 31, "standard": [31, 58, 63, 64, 314], "deviat": [31, 64, 310], "radiu": [32, 294], "structur": [32, 64, 246, 250], "element": [32, 64, 195, 300], "sphere": 32, "scale": [33, 295], "each": [34, 41, 64, 69, 77, 79, 82, 84, 87, 122, 169, 191, 193, 203, 250, 268, 286, 287, 289, 295, 307, 308, 309, 310, 315, 317], "ndarrai": [37, 64, 67, 130, 157, 159, 161, 232, 248, 262, 263, 264], "calcul": [37, 64, 111, 113, 114, 116, 120, 122, 130, 133, 154, 203, 217, 248, 250, 252, 286, 317], "flat": [37, 64], "dark_field": 37, "correct": [37, 64, 150, 152], "bit": [37, 64, 159, 244], "data": [37, 52, 64, 77, 79, 80, 82, 84, 95, 113, 114, 116, 120, 122, 159, 196, 197, 198, 203, 217, 232, 248, 250, 274, 276, 289, 308, 313, 314], "16": [37, 64], "param": 37, "flat_field": 37, "input_arrai": [38, 39, 40, 41], "number_high_pass_filt": 38, "10": [38, 46, 64, 87, 169, 252, 254, 255, 256, 257, 258, 259, 307, 315, 316], "fourier_sampl": [38, 46], "50": [38, 46, 255, 259, 315], "apodization_pixel": 38, "20": [38, 64, 315], "resolut": [38, 77, 150, 152, 182, 217, 237, 250, 313], "decorrel": [38, 45, 46], "github": [38, 77, 79, 82, 84, 241, 243, 244, 246, 314, 315, 316], "ades91": 38, "imdecorr": 38, "blob": 38, "master": [38, 122], "main_imagedecorr": 38, "psf_support_diameter_xi": [39, 40, 41], "use_gpu": [41, 250, 284], "2d": [41, 43, 46, 64, 262, 264], "iter": [41, 64], "plane": [41, 308], "otf_support_x": 41, "support": [41, 64, 174, 314, 318], "otf": 41, "dimens": [41, 64, 77, 79, 82, 84, 250, 286, 287, 315], "otf_support_i": 41, "entropi": [41, 203], "input_imag": [43, 46, 47, 48], "number_pixel": 43, "apod": 43, "edg": 43, "output": [43, 44, 45, 46, 47, 48, 49, 60, 64, 98, 100, 122, 169, 257, 317], "output_imag": 43, "image_1": 44, "image_2": 44, "c1": 44, "c2": 44, "correl": 44, "coeffici": 44, "express": 44, "fourier": [44, 46], "transform": [44, 48, 308], "2": [44, 63, 64, 196, 241, 254, 255, 262, 263, 295, 307, 313, 315, 316, 317], "correlation_coeffici": 44, "cross": 44, "decorrelation_funct": 45, "maxima": [45, 46], "max_index": 45, "max_amplitud": 45, "amplitud": [45, 46, 203, 204, 253, 254, 255, 256, 257, 259, 315], "number_highpass_filt": 46, "cut": 46, "off": [46, 195, 250, 308], "frequenc": [46, 255, 256, 259, 315], "analyz": 46, "linspac": 46, "high": [46, 206, 286, 313], "pass": [46, 58, 63, 64, 69, 70, 82, 120, 122, 250, 307, 310], "kcmax": 46, "a0": 46, "d0": [46, 159], "radial": [47, 262, 263, 264], "averag": [47, 60, 64, 65, 66, 67], "squar": [47, 263], "im": 47, "r": [47, 77, 79, 82, 84, 289, 294], "imp": 48, "im2pol": 48, "imc": 48, "carthesian": 48, "polar": 48, "coordin": [48, 315], "input_valu": 49, "minimum_valu": 49, "maximum_valu": 49, "mapped_minimum_valu": 49, "mapped_maximum_valu": 49, "linear": [49, 317], "rang": [49, 169, 203], "minimum": [49, 64, 113, 114, 116, 136, 157, 217, 307, 313, 315], "maximum": [49, 64, 113, 114, 116, 136, 146, 148, 157, 203, 232, 307, 314, 315], "rescaled_valu": 49, "rescal": [49, 295], "shear_angl": 52, "z_pixel_s": 52, "xy_pixel_s": 52, "design": [52, 125, 128, 130, 133, 317], "deskew": 52, "uint16": [52, 64], "save": [52, 63, 169, 172, 174, 176, 179, 182, 185, 187, 203, 232, 274, 276], "tiff": [52, 82, 116, 244, 246, 280], "spectral": 55, "unmix": 55, "need": [55, 64, 72, 113, 114, 116, 130, 203, 217, 248, 250, 286, 307, 308, 315, 316, 317], "repo": [55, 316], "here": [55, 113, 114, 254, 307, 309, 310, 315], "signific": 55, "organ": [55, 120, 122], "overhaul": 55, "first_resourc": [58, 71], "resultthread": [58, 59, 66], "access": [58, 63, 64, 65, 69, 77, 79, 82, 84, 307, 316], "order": [58, 64, 65, 307, 315], "thei": [58, 61, 64, 70, 122, 307, 315, 316], "were": [58, 64, 316], "launch": [58, 63, 72, 315], "docstr": [58, 71, 72, 309], "top": [58, 71, 72, 111, 113, 114, 116, 275, 307, 315], "get_result": [58, 63], "accept": [58, 63, 64, 71, 169, 283, 295, 308], "timeouterror": [58, 60, 63, 65, 66, 67], "respect": [58, 63, 64, 307, 315], "control": [58, 63, 64, 89, 125, 128, 130, 159, 170, 180, 193, 195, 196, 197, 198, 232, 248, 250, 266, 307, 308, 309, 314, 315], "alia": [59, 62, 64], "homemad": 60, "test": [60, 64, 65, 66, 67, 138, 195, 196, 197, 198], "mostli": 60, "written": [60, 64, 309], "curios": 60, "what": [60, 64, 264, 286, 307, 308, 315], "featur": [60, 63, 198, 250, 309, 311, 314], "want": [60, 64, 69, 130, 133, 307, 311, 315, 316], "could": [60, 64, 275, 309], "done": [60, 64, 248, 250, 307, 315, 316, 317], "easili": 60, "without": [60, 61, 63, 64, 65, 69, 70, 307, 309, 315], "import": [60, 64, 138, 309, 314, 315, 317], "Not": [60, 117, 244, 252], "real": [60, 64, 250], "packag": [60, 316], "wasn": 60, "t": [60, 61, 63, 64, 70, 113, 114, 122, 246, 317], "To": [60, 64, 159, 169, 244, 307, 309, 311, 315, 317], "test_": [60, 65, 66, 67], "expect": [60, 63, 65, 66, 71, 77, 79, 82, 84, 169, 172, 174, 176, 179, 182, 185, 187, 307, 309, 315], "gener": [60, 64, 82, 116, 196, 232, 246, 262, 263, 264, 295, 308], "specif": [60, 64, 65, 66, 67, 169, 307, 315], "print": [60, 63, 64, 113, 114, 116, 159, 291], "stdout": 60, "test_prefix": [60, 65, 66, 67], "fail": [60, 64, 65, 66, 67, 307, 308, 315], "fail_fast": [60, 65, 66, 67], "begin": [60, 64, 65, 66, 67], "time_it": [60, 65, 66, 67], "n_loop": [60, 65, 66, 67], "func": [60, 65, 66, 67, 87, 272], "timeout_u": [60, 65, 66, 67], "allow": [60, 64, 65, 66, 67, 250, 307, 308, 309, 314, 315, 316], "durat": [60, 65, 66, 67, 111, 113, 114, 116, 122, 125, 130, 133, 159, 183, 252, 272], "exce": [60, 65, 66, 67], "bar": [60, 65, 66, 67], "format": [60, 64, 65, 66, 67, 77, 79, 82, 84, 120, 122, 244, 307, 309, 315], "progress": [60, 65, 66, 67, 315, 317], "initarg": [61, 69, 70], "custom_loop": [61, 69, 70], "close_method_nam": [61, 70], "closearg": [61, 70], "closekwarg": [61, 70], "with_lock": 61, "initkwarg": [61, 69, 70], "child": [61, 63, 70, 230], "act": [61, 64, 70, 314], "like": [61, 64, 70, 71, 72, 280, 286, 307, 315, 316, 317], "isn": [61, 70], "much": [61, 70], "possibl": [61, 64, 70, 254, 311], "try": [61, 63, 70, 309, 316], "instanc": [61, 64, 70, 71, 289, 307, 315], "behav": [61, 64, 67, 70, 307, 309, 315], "re": [61, 63, 70], "live": [61, 64, 70, 250, 309], "parent": [61, 63, 69, 70, 111, 120, 128, 136, 143, 157, 164, 172, 191], "cours": [61, 70], "have": [61, 64, 70, 122, 244, 307, 308, 309, 315, 316, 317], "spare": [61, 70], "core": [61, 64, 70], "your": [61, 64, 69, 70, 72, 275, 307, 309, 314, 315, 317], "machin": [61, 64, 70, 169, 309, 316], "turn": [61, 70, 230, 250, 307, 308, 315, 317], "cpu": [61, 64, 70], "bound": [61, 70, 169, 172, 174, 176, 179, 182, 185, 187, 307, 315], "which": [61, 64, 71, 77, 79, 82, 84, 150, 152, 169, 172, 174, 176, 179, 182, 185, 187, 237, 250, 293, 294, 307, 308, 309, 313, 315, 317], "parallel": [61, 317], "io": [61, 70, 159], "too": [61, 70, 313], "mental": [61, 70], "overhead": [61, 65, 70, 250], "coder": [61, 70, 309], "our": [61, 63, 64, 69, 113, 114, 116, 241, 244, 246, 307, 309, 314, 315, 316], "automat": 61, "close_method": 61, "custodythread": [62, 65, 66], "simpl": [63, 64], "wish": 63, "had": 63, "chang": [63, 64, 113, 114, 116, 125, 130, 133, 169, 191, 193, 250, 287, 315, 316, 317], "self": [63, 64, 113, 114, 120, 122, 130, 169, 172, 174, 176, 179, 182, 185, 187, 191, 193, 203, 232, 237, 308, 309], "trivial": 63, "u": [63, 64, 309, 317], "line": [63, 64, 71, 111, 113, 114, 116, 291, 309, 315], "code": [63, 64, 77, 79, 82, 84, 117, 195, 203, 241, 243, 244, 246, 291, 307, 311, 314, 315, 316], "def": 63, "doe": [63, 64, 138, 300, 307, 315, 316, 317], "someth": [63, 64, 307, 309, 315], "sum": [63, 64], "ones": 63, "uint8": [63, 64, 69], "problem": [63, 64, 316], "th": [63, 64], "redefin": 63, "solut": 63, "res_th": 63, "assert": 63, "handl": [63, 307, 315], "idea": 63, "attributeerror": [63, 64], "wa": [63, 64, 169, 174, 176, 179, 182, 185, 187, 250, 276], "assertionerror": 63, "dure": [63, 77, 79, 82, 84, 203, 254], "evalu": [63, 64, 150, 152, 272, 284, 293, 294, 295, 309, 315], "rerais": 63, "traceback": [63, 64], "stderr": 63, "don": [63, 113, 114, 317], "affect": [63, 64], "yet": 63, "note": [63, 64, 169], "modifi": [63, 308, 309, 315], "excepthook": 63, "copi": [63, 64, 315], "past": 63, "definit": [63, 71, 72], "work": [63, 64, 122, 309, 316], "shared_memory_nam": 64, "stride": 64, "memori": [64, 69, 70, 250, 309], "objectinsubprocess": [64, 65], "serial": [64, 67, 69, 113, 114, 125, 126, 130, 131, 133, 180, 182, 183, 270], "pretti": 64, "fast": [64, 169], "larg": [64, 309], "regularli": 64, "deal": [64, 244], "sens": 64, "provid": [64, 117, 169, 283, 307, 309, 310, 315, 317], "wai": [64, 250, 286, 307, 309, 315], "via": [64, 100, 122, 195, 258, 307], "avoid": [64, 159, 278, 309, 315], "slow": [64, 69], "mayb": [64, 71, 72], "write": [64, 77, 79, 82, 84, 122, 159, 232, 241, 244, 246, 250, 309], "look": [64, 117, 286, 307, 315, 317], "data_buf": 64, "zero": [64, 169, 172, 174, 176, 179, 182, 185, 187, 264], "400": 64, "display_buf": 64, "preprocessor": 64, "displai": [64, 88, 120, 122, 250], "record": 64, "num_imag": 64, "show": [64, 316, 317], "payoff": 64, "its": [64, 169, 174, 176, 179, 182, 185, 187, 308], "own": [64, 315], "AND": 64, "realli": 64, "memmap": 64, "axi": [64, 169, 172, 174, 176, 179, 182, 185, 187, 191, 193, 217, 286, 295, 307, 315], "keepdim": 64, "refer": [64, 180, 248, 254, 268, 311, 314], "full": [64, 307, 317], "equival": [64, 316, 317], "argmax": 64, "along": [64, 71, 72, 169, 174, 176, 179, 182, 185, 187, 250, 286, 287], "argmin": 64, "detail": [64, 130, 169], "argpartit": 64, "kth": 64, "kind": 64, "introselect": 64, "partit": 64, "version": [64, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 313, 315, 316], "8": [64, 130, 315, 316], "argsort": 64, "sort": 64, "astyp": 64, "k": 64, "cast": 64, "unsaf": 64, "subok": 64, "typecod": 64, "layout": 64, "fortran": 64, "contigu": 64, "close": [64, 77, 79, 82, 84, 113, 114, 116, 122, 125, 130, 133, 136, 138, 146, 148, 157, 159, 161, 166, 182, 232, 250, 286, 308], "appear": 64, "equiv": 64, "safe": 64, "same_kind": 64, "backward": 64, "compat": [64, 316], "preserv": 64, "within": [64, 72, 169, 172, 174, 176, 179, 182, 185, 187, 295, 315, 316, 317], "float64": 64, "float32": 64, "convers": 64, "sub": [64, 232, 275], "forc": 64, "newli": [64, 250], "alloc": [64, 69], "satisfi": 64, "arr_t": 64, "unless": [64, 309], "other": [64, 69, 122, 154, 159, 307, 309], "condit": 64, "descript": 64, "17": 64, "one": [64, 71, 72, 82, 84, 169, 172, 174, 176, 179, 182, 185, 187, 223, 225, 226, 250, 307, 308, 317], "field": [64, 307, 315], "9": [64, 315, 316], "numer": [64, 262, 263, 264, 314], "mode": [64, 77, 79, 82, 84, 111, 113, 114, 116, 120, 122, 146, 148, 150, 152, 159, 180, 217, 248, 250, 313, 315, 317], "length": [64, 286, 287, 295], "long": 64, "enough": 64, "store": [64, 77, 79, 82, 84, 241, 243, 244, 246, 309], "convert": [64, 111, 113, 114, 116, 169, 179, 182, 241, 243, 244, 246, 278, 289], "complexwarn": 64, "5": [64, 254, 307, 313, 315, 317], "byteswap": 64, "inplac": 64, "swap": 64, "toggl": 64, "low": [64, 286, 313], "endian": 64, "big": 64, "represent": [64, 77, 79, 82, 84, 241, 243, 244, 246, 300], "place": [64, 307, 315], "imaginari": 64, "part": [64, 309], "individu": [64, 314], "view": [64, 69, 74, 195, 196, 197, 198, 241, 246, 250, 309, 314], "256": 64, "8755": 64, "int16": 64, "hex": 64, "0x1": 64, "0x100": 64, "0x2233": 64, "13090": 64, "0x3322": 64, "b": 64, "ceg": 64, "fac": 64, "s3": 64, "newbyteord": 64, "produc": [64, 299], "differ": [64, 191, 193, 307, 310, 314, 315, 316, 317], "3": [64, 84, 241, 246, 259, 262, 263, 275, 293, 294, 295, 315, 316], "choos": 64, "choic": 64, "index": [64, 97, 98, 122, 150, 152, 191, 193, 232, 246, 248, 262, 263, 264, 280, 307, 315], "clip": 64, "One": [64, 82], "compress": 64, "select": [64, 84, 150, 152, 317], "slice": [64, 67, 280, 295], "conj": 64, "conjug": 64, "wise": 64, "match": [64, 264, 295, 307], "veri": 64, "similar": [64, 307, 309, 315], "behavior": [64, 66, 287, 308, 309, 317], "copyto": 64, "prefer": 64, "6": [64, 246, 315], "flag": [64, 113, 114, 116, 125, 128, 130, 133, 198, 250, 287, 316], "c_contigu": 64, "cumprod": 64, "cumul": 64, "product": [64, 169, 309, 314, 317], "cumsum": 64, "diagon": 64, "axis1": 64, "axis2": 64, "In": [64, 244, 307, 309, 315, 317], "previou": 64, "restrict": 64, "dump": 64, "pickl": 64, "back": [64, 159, 244, 254, 317], "pathlib": 64, "now": [64, 241, 316], "scalar": 64, "assign": 64, "flatten": [64, 262], "collaps": 64, "major": 64, "style": [64, 317], "column": 64, "ravel": [64, 262], "d": [64, 116, 299, 300], "getfield": 64, "certain": 64, "fit": [64, 203, 204, 262, 263], "complex128": 64, "take": [64, 84, 287], "12": [64, 315], "larger": 64, "itself": 64, "skip": 64, "diag": 64, "j": [64, 154], "item": [64, 305, 307, 315], "variabl": [64, 154, 309, 316], "case": [64, 309], "int_typ": 64, "interpret": 64, "singl": [64, 84, 154, 159, 169, 174, 176, 179, 182, 185, 187, 257, 280, 286], "nd": 64, "suitabl": 64, "longdoubl": 64, "clongdoubl": 64, "becaus": [64, 307], "lose": 64, "inform": [64, 113, 114, 116, 130, 250, 274, 276, 286, 307, 309, 315, 316], "void": 64, "buffer": [64, 113, 114, 116, 159, 248, 250], "defin": [64, 87, 244, 295, 315], "speed": [64, 130, 169, 182, 309, 313], "up": [64, 77, 79, 82, 84, 117, 122, 196, 197, 217, 315, 317], "arithmet": 64, "optim": 64, "math": 64, "random": [64, 67], "seed": 64, "123": 64, "randint": 64, "7": [64, 254, 313, 315, 316], "itemset": 64, "There": [64, 244, 317], "least": 64, "last": [64, 286, 316], "Then": 64, "faster": 64, "two": [64, 250, 307, 315], "first": [64, 69, 191, 193, 195, 244, 286, 307, 315, 316, 317], "compar": [64, 203], "syntax": 64, "some": [64, 69, 77, 79, 82, 84, 241, 243, 244, 246, 308, 309, 316, 317], "increas": [64, 309], "particular": 64, "howev": [64, 309, 317], "discourag": 64, "among": 64, "complic": 64, "loop": 64, "amax": 64, "amin": 64, "new_ord": 64, "arr": 64, "newbytord": 64, "below": [64, 307, 308, 309, 313, 315, 316], "opposit": 64, "littl": 64, "byteord": 64, "ignor": [64, 241, 309], "new_arr": 64, "reflect": [64, 315], "rearrang": 64, "equal": 64, "greater": 64, "behind": 64, "undefin": 64, "sequenc": [64, 280, 308], "final": [64, 307, 315], "them": [64, 309, 316], "sinc": [64, 287], "22": [64, 217], "algorithm": 64, "etc": [64, 77, 79, 82, 84, 169, 172, 174, 176, 179, 182, 185, 187, 241, 243, 244, 246, 283, 286, 314], "unspecifi": 64, "come": [64, 116], "break": [64, 309], "ti": 64, "paritit": 64, "indirect": 64, "prod": 64, "ptp": 64, "peak": [64, 254, 262, 263, 264], "put": [64, 65], "repeat": [64, 297, 313, 315], "reshap": 64, "unlik": 64, "free": 64, "For": [64, 84, 122, 169, 174, 176, 179, 182, 185, 187, 275, 307, 309, 315, 317], "11": [64, 180, 315, 316], "resiz": 64, "new_shap": 64, "refcheck": 64, "count": [64, 169, 217, 291, 307, 315], "valueerror": 64, "exist": [64, 125, 128, 130, 133, 191, 193, 308, 309], "pypi": 64, "reliabl": 64, "systemerror": 64, "behaviour": 64, "bug": [64, 309], "realloc": 64, "area": 64, "necessari": [64, 120, 122, 125, 130, 133, 159, 272, 274, 307, 309, 310, 315, 317], "consecut": 64, "shrink": 64, "enlarg": 64, "abov": [64, 307, 315], "miss": 64, "entri": [64, 266, 307, 308, 315], "doesn": 64, "referenc": 64, "prevent": 64, "recent": 64, "cannot": 64, "round": 64, "around": [64, 71, 72], "searchsort": 64, "v": [64, 154], "side": [64, 286], "sorter": 64, "maintain": 64, "setfield": 64, "val": [64, 87], "ey": 64, "int32": 64, "0e": 64, "000": 64, "5e": 64, "323": 64, "setflag": 64, "uic": 64, "writeabl": 64, "writebackifcopi": 64, "updateifcopi": 64, "These": [64, 316, 317], "how": [64, 67, 203, 307, 309, 315, 316], "actual": [64, 77, 79, 82, 84, 113, 114, 252, 286, 309], "never": 64, "ultim": [64, 309], "owner": 64, "expos": 64, "interfac": 64, "unpickl": 64, "describ": [64, 308], "properli": [64, 307, 317], "about": [64, 276, 286, 309], "four": 64, "w": [64, 77, 79, 82, 84, 293], "appropri": [64, 309, 316], "compil": 64, "pyarray_resolvewritebackifcopi": 64, "upper": [64, 278], "letter": 64, "well": [64, 314], "f_contigu": 64, "owndata": 64, "stdin": 64, "quicksort": 64, "mergesort": 64, "heapsort": 64, "stabl": 64, "both": [64, 100, 166, 169, 244, 308, 316], "timsort": 64, "under": [64, 307, 308, 314, 315, 317], "cover": [64, 286, 317], "vari": 64, "datatyp": 64, "retain": 64, "15": [64, 264, 295, 316], "lexsort": 64, "kei": [64, 136, 138, 157, 159, 161, 191, 193, 299, 309, 314], "partial": 64, "s1": 64, "i8": 64, "squeez": 64, "ax": [64, 169, 172, 174, 176, 179, 182, 185, 187, 307], "std": 64, "ddof": 64, "swapax": 64, "interchang": 64, "tobyt": 64, "raw": 64, "short": 64, "exhibit": 64, "u2": 64, "x00": 64, "x01": 64, "x02": 64, "x03": 64, "tofil": 64, "fid": 64, "sep": 64, "text": [64, 278, 316], "independ": 64, "recov": 64, "fromfil": 64, "open": [64, 77, 79, 82, 84, 166, 250, 309, 316, 317], "filenam": [64, 82, 116, 232, 250, 276], "closest": 64, "conveni": 64, "quick": [64, 169], "storag": 64, "precis": [64, 317], "lost": 64, "good": [64, 309], "intend": 64, "archiv": 64, "transport": 64, "overcom": 64, "expens": 64, "directli": [64, 71, 72, 113, 114], "bypass": 64, "gzipfil": 64, "fileno": 64, "bytesio": 64, "tolist": 64, "ndim": 64, "level": 64, "deep": 64, "nearest": 64, "builtin": 64, "depth": 64, "possibli": 64, "recreat": 64, "although": 64, "sometim": 64, "1d": 64, "almost": [64, 71], "uint32": 64, "a_list": 64, "a_tolist": 64, "addition": 64, "appli": 64, "0d": 64, "typeerror": 64, "tostr": 64, "exactli": 64, "despit": 64, "19": 64, "transpos": 64, "effect": [64, 262, 263, 264], "vector": 64, "simpli": [64, 309], "addit": [64, 77, 79, 84, 250], "atleast2d": 64, "achiev": 64, "newaxi": 64, "matrix": [64, 130, 241], "permut": 64, "revers": 64, "becom": 64, "altern": [64, 241, 243, 244, 246, 309], "give": [64, 307], "var": 64, "omit": 64, "former": [64, 248], "float_": 64, "descriptor": 64, "again": 64, "omiss": 64, "some_dtyp": 64, "reinterpret": 64, "ndarray_subclass": 64, "regular": [64, 309], "predict": 64, "superfici": 64, "shown": [64, 308, 316], "versu": 64, "int8": 64, "513": 64, "xv": 64, "underli": 64, "i1": 64, "recarrai": 64, "i2": 64, "ctype": 64, "simplifi": 64, "interact": 64, "easier": 64, "librari": [64, 275, 309, 314], "themselv": [64, 308], "possess": 64, "ctypeslib": 64, "public": 64, "guid": [64, 169, 309], "undocu": 64, "privat": 64, "_ctype": 64, "pointer": [64, 77, 79, 82, 84, 308], "arbitrari": [64, 77, 79, 82, 84], "troubl": 64, "includ": [64, 169, 172, 174, 176, 179, 182, 185, 187, 241, 244, 246, 307, 308, 314, 315, 316, 317], "crash": [64, 309], "bewar": 64, "_array_interface_": 64, "data_a": 64, "kept": 64, "c_void_p": 64, "dealloc": 64, "spelt": 64, "basetyp": 64, "correspond": [64, 169, 174, 307, 315, 317], "p": [64, 293, 294, 295], "platform": 64, "c_intp": 64, "c_int": 64, "c_long": 64, "c_longlong": 64, "jump": 64, "next": [64, 159, 195, 203, 248, 308, 317], "obj": 64, "_as_parameter_": 64, "perhap": 64, "c_doubl": 64, "keep": [64, 309], "shape_a": 64, "c_short": 64, "strides_a": 64, "as_paramet": 64, "31962608": 64, "c_uint32": 64, "__main__": 64, "lp_c_uint": 64, "0x7ff2fc1fc200": 64, "c_uint": 64, "c_uint64": 64, "c_ulong": 64, "4294967296": 64, "_intern": 64, "c_long_array_2": 64, "0x7ff2fc1fce60": 64, "0x7ff2fc1ff320": 64, "segment": [64, 250], "o": [64, 275, 278, 316], "borrow": [64, 77, 79, 82, 84, 241, 243, 244, 246], "creation": 64, "subsequ": [64, 315], "while": [64, 65, 159, 307], "remain": [64, 169], "alreadi": [64, 309, 316], "circumst": 64, "alter": [64, 169], "previous": 64, "onto": [64, 317], "fnc": 64, "carrai": 64, "ca": 64, "farrai": 64, "fa": 64, "lowercas": 64, "arbitrarili": 64, "truli": 64, "simultan": [64, 82, 169, 309], "dimension": 64, "higher": [64, 203], "dim": [64, 280], "hold": [64, 276], "items": 64, "flatit": 64, "similarli": [64, 244], "built": [64, 310], "arang": 64, "sqrt": 64, "0j": 64, "1j": 64, "70710678": 64, "nbyte": 64, "total": [64, 203, 286], "consum": 64, "480": 64, "usual": 64, "infer": 64, "unchang": 64, "incompat": 64, "modif": [64, 309], "desir": [64, 113, 114, 116, 250, 283], "obtain": 64, "suggest": 64, "int_": 64, "relev": 64, "further": 64, "overflow": [64, 159], "fix": [64, 309], "travers": 64, "explan": 64, "found": [64, 88, 307, 309, 315, 316], "rst": 64, "imagin": 64, "40": 64, "known": 64, "tell": [64, 307, 309], "lib": 64, "stride_trick": 64, "as_strid": 64, "13": 64, "14": [64, 295, 315], "18": 64, "21": 64, "23": 64, "48": 64, "224": 64, "1344": 64, "813": 64, "mytestclass": [65, 66, 67], "testclass": 65, "toi": 65, "subprocess": 65, "test_incorrect_thread_manag": 65, "custodi": [65, 71, 72], "test_lock_with_waitlist": 65, "stai": [65, 254], "objectsinsubprocess": 65, "mock": 65, "_waitinglist": [65, 71], "test_object_in_subprocess_overhead": 65, "test_sending_shared_arrai": 65, "send": [65, 159, 196, 197, 198], "sharedndarrai": [65, 67, 232, 250, 309], "test_ndarraylike_behavior": 67, "broke": 67, "suppos": 67, "test_seri": 67, "deseri": 67, "test_serializing_and_deseri": 67, "shared_memory_s": 69, "spawn": 69, "proxi": [69, 70, 270, 316], "proxyobject": [69, 71, 72], "shared_numpy_arrai": 69, "which_mp_arrai": 69, "shared_mp_arrai": 70, "proxymanag": [70, 71, 72], "thin": [71, 72], "wrapper": [71, 72], "few": [71, 72, 308], "usag": [71, 72], "_custodi": 71, "switch_from": 71, "_wait_in_lin": 71, "immedi": 71, "acquir": [72, 217, 232, 248, 250, 308, 317], "releas": 72, "launch_custody_thread": 72, "feel": 72, "detect": [72, 208], "occour": 72, "file_nam": [77, 79, 82, 84, 241, 244, 246], "datasourc": [77, 80, 82, 84, 232], "sourc": [77, 79, 80, 82, 84, 217, 232, 313, 317], "metdata": [77, 79, 82, 84], "metadata": [77, 79, 82, 84, 241, 246], "concept": [77, 79, 82, 84, 241, 243, 244, 246], "microscopi": [77, 79, 82, 84, 154, 241, 243, 244, 246], "clean": [77, 79, 82, 84, 217, 314], "leftov": [77, 79, 82, 84], "set_metadata_from_configuration_experi": [77, 79, 82, 84], "dictproxi": [77, 79, 82, 84, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 111, 113, 116, 120, 122, 164, 166, 169, 172, 174, 179, 191], "kw": [77, 79, 82, 84, 241, 244, 246], "xyz": [77, 169], "bdv": 77, "spec": [77, 241, 246], "xyczt": [77, 79, 82, 84, 241, 243, 244, 246], "rather": [77, 317], "subdivis": 77, "voxel_s": [77, 79, 82, 84, 241, 243, 244, 246], "voxel": [77, 79, 82, 84, 241, 243, 244, 246], "file_typ": [80, 241, 244, 246], "tif": [80, 82, 232, 280], "tifdatasourc": 80, "is_bigtiff": 82, "intern": [82, 217, 241, 243, 244, 246], "generate_image_nam": [82, 232], "current_channel": [82, 232], "current_time_point": [82, 232], "ch00_000000": [82, 232], "timepoint": [82, 213, 307, 315], "stack": [82, 116, 203, 215, 217, 308, 317], "At": 82, "tifffil": 82, "imsav": 82, "copy_to_zarr": 84, "frame_id": [84, 198, 203, 232], "zarr": 84, "Will": [84, 244, 310], "fom": 84, "sharednd": 84, "three": 84, "assumpt": 84, "acquisit": [84, 95, 111, 113, 114, 116, 120, 122, 217, 232, 248, 250, 308, 313, 314], "dummi": 86, "devic": [86, 87, 88, 89, 90, 94, 96, 97, 98, 99, 100, 101, 102, 196, 197, 217, 248, 250, 307, 313, 315, 316, 317], "n_tri": 87, "retri": 87, "connect": [87, 94, 96, 97, 98, 99, 100, 101, 102, 111, 113, 116, 122, 126, 131, 136, 138, 159, 161, 164, 166, 169, 170, 172, 174, 179, 180, 183, 191, 248, 250, 307, 315, 317], "startup": [87, 307, 315], "redial": 87, "baseexcept": 87, "dcam": [87, 317], "messag": [88, 159, 196], "incorrect": 88, "device_typ": 88, "camera_id": 89, "is_synthet": [89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 197, 248, 309], "synthet": [89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 116, 117, 138, 147, 166, 250, 307, 310, 315], "dedic": [91, 92, 93, 95, 96, 98, 100, 102], "multiproces": [91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 111, 113, 116, 120, 122, 164, 166, 191], "zoom": [93, 102, 237, 307, 314], "device_connect": [94, 96, 97, 98, 99, 100, 101, 102, 111, 113, 114, 116, 125, 128, 130, 133, 136, 138, 146, 148, 157, 161, 164, 166, 169, 172, 174, 176, 179, 182, 185, 187, 191, 193, 248, 309], "filterwheel": 96, "scan": [97, 169, 217, 313, 317], "trigger": [98, 100, 122, 150, 152, 166, 183, 217, 252, 317], "switch": [98, 130, 250, 254, 307, 315, 317], "analog": [98, 122, 256, 257, 259, 313], "digit": [98, 100, 317], "focus": [99, 157, 254, 283, 313], "shutter": [100, 111, 113, 114, 116, 250, 314], "thorlabsshutt": 100, "syntheticshutt": 100, "ni": [100, 307, 315], "card": [100, 250, 314], "thu": [100, 315], "enabl": [100, 130, 133, 159, 309, 310, 313], "calculate_light_sheet_exposure_tim": [111, 113, 114, 116], "full_chip_exposure_tim": [111, 113, 114, 116], "shutter_width": [111, 113, 114, 116], "exposur": [111, 113, 114, 116, 122, 217, 252], "light": [111, 113, 114, 116, 315], "sheet": [111, 113, 114, 116, 315], "roll": [111, 113, 114, 116], "exposure_tim": [111, 113, 114, 116, 122, 254, 307, 315], "camera_line_interv": [111, 113, 114, 116], "hamamatsuorca": [111, 114, 116, 307, 315], "interv": [111, 113, 114, 116, 317], "set_readout_direct": [111, 113, 114, 116], "bottom": [111, 113, 114, 116, 315], "bytrigg": [111, 113, 114, 116], "diverg": [111, 113, 114, 116], "camerabas": [113, 116], "orca": 113, "flash": [113, 313], "calculate_readout_tim": [113, 114, 116], "assum": [113, 114, 125, 191, 193, 217, 237, 241, 244, 246, 275, 280, 307, 316], "c13440": [113, 114], "link": [113, 114, 275], "commun": [113, 114, 126, 130, 131, 133, 159, 170, 182, 307, 315], "pull": [113, 114, 309, 315], "readout_tim": [113, 114, 116, 120, 122, 136, 138, 157, 159, 161, 248], "max_frame_r": [113, 114, 116], "framer": [113, 114, 116], "todo": [113, 114, 203, 232, 241, 244, 250, 287, 300, 312], "think": [113, 114], "camera_control": [113, 114], "get_property_valu": [113, 114, 117], "close_camera": [113, 114, 116], "close_image_seri": [113, 114, 116], "seri": [113, 114, 116], "stop": [113, 114, 116, 122, 136, 138, 157, 159, 161, 169, 172, 174, 176, 179, 182, 185, 187, 198, 248, 250], "is_acquir": [113, 114, 116], "get_minimum_waiting_tim": [113, 114, 116], "cyclic_trigger_period": [113, 114, 116], "minimum_trigger_blank": [113, 114, 116], "minimum_trigger_interv": [113, 114, 116], "trigger_blank": [113, 114, 116], "bigger": [113, 114, 116], "trigger_interv": [113, 114, 116], "get_new_fram": [113, 114, 116], "initialize_image_seri": [113, 114, 116], "data_buff": [113, 114, 116, 232, 248, 250], "number_of_fram": [113, 114, 116, 248], "100": [113, 114, 116, 196, 307, 313, 315], "report_set": [113, 114, 116], "set_roi": [113, 114, 116], "roi_height": [113, 114, 116], "2048": [113, 114, 116, 315], "roi_width": [113, 114, 116], "region": [113, 114, 116, 286], "height": [113, 114, 116, 248], "set_bin": [113, 114, 116], "binning_str": [113, 114, 116], "bin": [113, 114, 116, 315], "1x1": [113, 114, 315], "2x2": [113, 114, 116], "4x4": [113, 114, 116], "8x8": [113, 114, 116], "16x16": [113, 114], "1x2": [113, 114], "2x4": [113, 114], "set_exposure_tim": [113, 114, 116], "unit": [113, 114, 116, 169, 252, 253, 254, 255, 256, 257, 259, 313], "millisecond": [113, 114, 116, 170, 310, 315], "set_line_interv": [113, 114, 116], "line_interval_tim": [113, 114, 116], "set_sensor_mod": [113, 114, 116], "sensor": [113, 114, 116, 250], "serial_numb": [113, 114, 180, 307, 315], "generate_new_fram": 116, "load_imag": [116, 250], "pre": [116, 120, 122, 308, 309], "idprop": 117, "property_dict": 117, "property_valu": 117, "hard": [117, 203], "calculate_all_waveform": [120, 122, 248], "waveform_dict": [120, 122, 136, 157], "etl": [120, 122, 283], "plu": [120, 122], "daqbas": 122, "add_camera": 122, "close_task": [122, 136, 138, 157, 161], "task": [122, 136, 138, 157, 159, 161, 217, 317], "counter": [122, 317], "create_camera_task": 122, "create_galvo_remote_focus_task": 122, "create_master_trigger_task": 122, "prepare_acquisit": [122, 248, 250], "channel_kei": [122, 136, 138, 157, 159, 161], "prepar": [122, 136, 138, 157, 159, 161, 203, 217, 248, 250], "run_acquisit": [122, 250], "start_task": [122, 136, 138, 157, 159, 161], "won": 122, "run_task": 122, "stop_acquisit": 122, "stop_task": [122, 136, 138, 157, 159, 161], "write_waveforms_to_task": 122, "filterwheelbas": [125, 130, 133], "asi": [125, 169, 170, 217, 307, 315], "asiimag": [125, 169], "doc": [125, 169, 246, 275], "fw_1000": 125, "fw": 125, "1000_ascii_command_set": 125, "check_if_filter_in_filter_dictionari": [125, 128, 130, 133], "filter_nam": [125, 128, 130, 133], "filter_exist": [125, 128, 130, 133], "port": [125, 126, 130, 131, 133, 146, 148, 159, 170, 182, 183, 307, 315, 317], "filter_change_delai": [125, 130, 133], "40m": 125, "adjac": 125, "set_filt": [125, 130, 133], "wait_until_don": [125, 130, 133, 169, 174, 176, 179, 182, 185, 187, 191, 193, 248, 250], "comport": [126, 131, 133, 159], "baudrat": [126, 131, 133, 159, 307, 315], "115200": [126, 170, 307, 315], "25": [126, 131, 183], "build": [126, 131, 183, 268, 274], "asifilterwheel": 126, "com1": [126, 131, 133, 170], "baud": [126, 131, 133, 159, 170, 183], "9600": [126, 131, 133, 170, 307, 315], "filter_dictionari": [128, 130, 133], "instal": [128, 130, 133, 309, 314, 317, 318], "wheel_posit": [128, 130, 133], "sutter": [130, 310], "lambda": [130, 295], "manual": 130, "lb10": 130, "3_opman": 130, "number_of_filter_wheel": [130, 133], "wait_until_done_delai": [130, 133], "period": [130, 133, 254], "delay_matrix": 130, "movement": [130, 169, 172, 174, 176, 179, 182, 185, 187, 307, 315], "fastest": 130, "slowest": 130, "occupi": 130, "num_byt": [130, 133, 159, 182], "retriev": [130, 274, 283, 309], "page": [130, 154], "38": [130, 315], "sutterfilterwheel": [131, 307, 315], "galvo_id": [136, 138], "galvanomet": [136, 314], "galvo_nam": 136, "device_config": [136, 157, 309], "sample_r": [136, 157, 252, 253, 254, 255, 256, 257, 259, 315], "sweep_tim": [136, 157, 252, 253, 254, 255, 256, 257, 259, 315], "sweep": [136, 157], "camera_delay_perc": [136, 157], "galvo_max_voltag": 136, "voltag": [136, 150, 152, 157, 253, 254, 256, 259], "galvo_min_voltag": 136, "remote_focus_ramp_fal": [136, 157], "ramp": [136, 157, 254], "fall": [136, 157, 254], "prepare_task": [136, 138, 157, 159, 161], "adjust": [136, 138, 157, 159, 161, 250], "account": [136, 138, 300], "488": [136, 138, 157, 159, 264, 313, 315], "galvobas": 138, "joystickbas": 143, "laser_id": [146, 148], "initialize_las": [146, 148], "power": [146, 148, 204, 311, 315], "cw": [146, 148], "apc": [146, 148], "laserbas": 148, "enable_high_resolution_las": [150, 152], "enable_low_resolution_las": [150, 152], "set_laser_analog_voltag": [150, 152], "current_laser_index": [150, 152], "current_laser_intens": [150, 152], "constant": [150, 152, 217, 283, 314], "intens": [150, 152, 232, 257, 262, 263, 264], "percentag": [150, 152, 258], "lasertriggerbas": 152, "calculate_entrance_pupil": 154, "entranc": 154, "pupil": 154, "incid": 154, "angl": 154, "fluoresc": 154, "interfer": 154, "contrast": 154, "carolin": 154, "ajo": 154, "franklin": 154, "prasad": 154, "ganesan": 154, "steven": 154, "boxer": 154, "biophi": 154, "volum": [154, 295], "89": 154, "issu": [154, 309, 316], "octob": 154, "2005": 154, "2759": 154, "2769": 154, "entrance_pupil_diamet": 154, "diamet": 154, "millimet": [154, 169, 179], "remote_focus_delai": [157, 254], "remote_focus_max_voltag": 157, "remote_focus_min_voltag": 157, "nidaqmx": [157, 159, 161], "remotefocusbas": [159, 161], "sca814": [159, 317], "charact": 159, "proper": [159, 316, 317], "echo": 159, "advis": 159, "verifi": [159, 169, 172, 174, 176, 179, 182, 185, 187], "receiv": [159, 250], "sent": [159, 195], "pyseri": 159, "readthedoc": 159, "en": 159, "latest": 159, "pyserial_api": 159, "html": [159, 246, 275], "debug": [159, 237], "voic": 159, "coil": 159, "baud_rat": [159, 170, 183], "byte_s": 159, "pariti": 159, "stop_bit": 159, "read_on_init": 159, "upon": [159, 316, 317], "statement": [159, 272, 309], "read_byt": 159, "send_command": 159, "command": [159, 169, 191, 193, 195, 250, 309, 316], "close_connect": 159, "received_byt": 159, "bytearrai": 159, "shutdown": [159, 196, 197, 317], "deviceconnect": 161, "shutterbas": 166, "deliv": [166, 317], "open_left": 166, "right": [166, 254, 286, 316, 317], "open_right": 166, "close_shutt": 166, "state": [166, 169, 203, 250, 297, 307, 308, 315], "device_id": [169, 172, 174, 176, 179, 182, 185, 187], "stagebas": [169, 174, 176, 179, 182, 185, 187], "serial_command": 169, "command_quick_start": 169, "distanc": [169, 203, 286, 293, 294, 295, 310], "10th": 169, "micron": [169, 182, 313], "divis": 169, "ever": 169, "rel": [169, 217, 291], "ftp": [169, 317], "stilt": 169, "strain": 169, "system": [169, 262, 263, 264, 307, 309, 313, 315, 316, 317], "x_po": [169, 172, 174, 176, 179, 182, 185, 187, 307], "y_po": [169, 172, 174, 176, 179, 182, 185, 187, 307], "z_po": [169, 172, 307], "f_po": [169, 172, 203, 307], "theta_po": [169, 172, 307], "rotat": [169, 172, 287, 315], "position_dict": [169, 179, 182], "x_max": [169, 172, 307, 315], "y_max": [169, 172, 307, 315], "z_max": [169, 172, 307, 315], "f_max": [169, 172, 307, 315], "theta_max": [169, 172, 307, 315], "x_min": [169, 172, 174, 182, 307, 315], "y_min": [169, 172, 307, 315], "z_min": [169, 172, 307, 315], "f_min": [169, 172, 307, 315], "theta_min": [169, 172, 307, 315], "default_spe": 169, "get_position_dict": [169, 172, 174, 176, 179, 182, 185, 187], "get_abs_posit": [169, 172, 174, 176, 179, 182, 185, 187], "emerg": [169, 172, 174, 179], "halt": [169, 172, 174, 179], "get_axis_posit": 169, "move_axis_absolut": [169, 174, 176, 179, 182, 185, 187], "move_absolut": [169, 174, 176, 179, 182, 185, 187], "set_spe": 169, "veloc": [169, 217, 307, 315], "get_spe": 169, "report_posit": [169, 174, 176, 179, 182, 187], "scanr": 169, "end": [169, 203, 248, 250, 308, 309], "enc_divid": 169, "start_scan": 169, "stop_scan": 169, "verify_abs_posit": [169, 172, 174, 176, 179, 182, 185, 187], "axis_ab": [169, 172, 174, 176, 179, 182, 185, 187], "ensur": [169, 172, 174, 176, 179, 182, 185, 187, 309], "request": [169, 172, 174, 176, 179, 182, 185, 187, 284, 309], "absolut": [169, 172, 174, 176, 179, 182, 185, 187, 309], "axo": 169, "move_dictionari": [169, 172, 174, 176, 179, 182, 185, 187], "x_ab": [169, 172, 174, 176, 179, 182, 185, 187], "micromet": [169, 172, 174, 176, 179, 182, 185, 187, 310], "degre": [169, 172, 174, 176, 179, 182, 185, 187, 217], "spot": [169, 174, 176, 179, 182, 185, 187], "success": [169, 174, 176, 179, 182, 185, 187, 250], "abs_po": [169, 174, 176, 179, 182, 185, 187], "prefix": [169, 174], "start_position_mm": 169, "end_position_mm": 169, "everi": [169, 295, 315, 317], "encod": [169, 217, 317], "velocity_dict": 169, "abruptli": [169, 172, 174, 176, 179, 182, 185], "is_strict": [169, 172, 174, 176, 179, 182, 185, 187], "y_ab": [169, 172, 174, 176, 179, 182, 185, 187], "abs_posit": [169, 172, 174, 176, 179, 182, 185, 187], "axes_map": [169, 172, 174, 176, 179, 182, 185, 187, 307], "matter": [169, 172, 174, 176, 179, 182, 185, 187], "com_port": [170, 183], "1000": [170, 307, 309, 315], "tiger": 170, "asi_stag": 170, "successfulli": [170, 276, 317], "positoin": 172, "create_position_dict": 174, "logic": [174, 176, 182, 185, 187], "serialnum": [177, 188], "physik": [179, 180], "instrument": [179, 180, 307, 313], "pi_tool": [179, 180], "tool": [179, 317], "pi_devic": [179, 180], "pi_ax": 179, "xyzf": 179, "pi": [179, 255, 259, 307, 315], "wait_on_target": 179, "controller_nam": 180, "reference_mod": 180, "863": 180, "0112345678": 180, "111": 180, "1dg": 180, "frf": [180, 307, 315], "stage_connect": 180, "mp": [182, 310], "285": [182, 310], "mp285": [182, 183], "sutter_ax": 182, "sutterstag": 183, "device_control": 191, "build_stage_dict": [191, 193], "stage_posit": [191, 193, 248, 315], "ideal": [191, 193, 308, 309], "solvent": [191, 193], "babb": [191, 193, 315], "63x": [191, 193, 315], "1x": [191, 193, 315], "70775": [191, 193], "2x": [191, 193, 254, 313, 315], "72455": [191, 193], "3x": [191, 193, 315], "72710": [191, 193], "4x": [191, 193, 315], "72795": [191, 193], "5x": [191, 193, 315], "72850": [191, 193], "6x": [191, 193, 315], "72880": [191, 193], "refract": [191, 193, 262, 263, 264], "servo": [191, 193, 317], "read_posit": [191, 193], "cur_posit": [191, 193], "set_zoom": [191, 193], "confirm": [191, 193, 308, 317], "tha": [191, 193], "zoomdict": [191, 193], "zoombas": 193, "dynamixelzoom": [193, 307, 315], "dummyview": 195, "execut": [195, 272, 308], "sec": 195, "append": [195, 289], "oldest": 195, "pop": 195, "move_stag": [195, 248, 250], "grab": 195, "timecost": 196, "signal_pip": [196, 197, 198], "pipe": [196, 197, 198, 250], "data_pip": [196, 197, 198], "generate_messag": 196, "listen": 196, "sendout": 196, "devices_dict": [197, 248], "signal_contain": 198, "signalcontain": 198, "data_contain": 198, "datacontain": 198, "signal_thread": 198, "data_thread": 198, "stop_flag": 198, "signal_func": 198, "data_func": [198, 250], "feature_list": [198, 230], "autofocus_frame_queu": 203, "autofocus_pos_queu": 203, "queue": [203, 317], "max_entropi": 203, "f_frame_id": 203, "frame_num": 203, "init_po": 203, "focus_po": 203, "target_frame_id": 203, "get_frames_num": 203, "plot_data": 203, "total_frame_num": 203, "fine_step_s": 203, "fine": [203, 309], "fine_pos_offset": 203, "coarse_step_s": 203, "coars": [203, 313], "coarse_step": 203, "signal_id": 203, "target_channel": 203, "end_func_data": [203, 308], "routin": [203, 204, 284, 314, 316], "end_func_sign": [203, 308], "get_autofocus_frame_num": 203, "best": [203, 309], "static": 203, "get_step": 203, "step_siz": [203, 307, 315], "autofocus": 203, "travel": 203, "pos_offset": 203, "figur": [203, 309], "in_func_data": [203, 308], "in_func_sign": [203, 308], "pre_func_data": [203, 308], "pre_func_sign": [203, 217, 308], "robust_autofocu": 203, "robust": 203, "alpha": [203, 204], "unfortun": 203, "unstabl": 203, "x_offset": [204, 307, 315], "y_offset": [204, 307, 315], "tent": 204, "respons": [204, 314], "curv": 204, "resolution_mod": 206, "zoom_valu": 206, "overlap": [208, 237, 286, 287], "target_resolut": [208, 237], "nanoscal": [208, 237, 315], "target_zoom": [208, 237], "grid": [208, 287], "pause_num": 213, "microscopest": [213, 232, 237], "get_origin": 215, "saving_flag": 215, "saving_dir": 215, "cleanup": [217, 250, 308], "reset": 217, "inject": 217, "divid": [217, 286], "rotari": 217, "45": 217, "396": 217, "mm": 217, "nm": [217, 262, 263, 264, 313], "quadratur": 217, "88": 217, "motion": [217, 313], "optic": [217, 262, 263, 264, 315], "root": [221, 222, 224, 241, 244, 246, 299, 300], "cleanup_list": [221, 222, 224], "feature_nam": [223, 225, 226], "func_dict": [223, 225, 226], "node_typ": [223, 225, 226, 308], "device_rel": [223, 225, 226, 308], "need_respons": [223, 225, 226, 308], "treenod": [223, 225], "number_of_execut": 224, "feature_modul": 229, "func_typ": 229, "sibl": 230, "tree": [230, 308], "sub_dir": 232, "image_nam": 232, "disk": [232, 275, 276], "save_directori": [232, 274], "scheme": 232, "data_sourc": 232, "mip_directori": 232, "project": [232, 315], "mip": 232, "data_bff": 232, "ext": 232, "color": 232, "generate_meta_data": 232, "meta": 232, "vestigi": 232, "delet": [232, 275], "save_imag": 232, "service_url": 235, "flipx": 237, "flipi": 237, "outer": 237, "active_microscope_nam": 237, "flip": 237, "img": 238, "xl": 238, "yl": 238, "xu": 238, "yu": 238, "65535": 238, "xmlmetadata": [241, 246], "bigdataview": [241, 244], "xml": [241, 244, 246, 299, 300], "section": [241, 308, 314, 316], "arxiv": 241, "org": [241, 246, 275], "ab": 241, "1412": 241, "0488": 241, "parse_bdv_xml": 241, "pars": [241, 244, 283, 299, 300], "incomplet": 241, "stage_positions_to_affine_matrix": 241, "affin": 241, "to_xml": [241, 244, 246], "write_xml": [241, 244, 246], "header": [241, 244, 246, 291], "om": [244, 246, 300], "proprietari": 244, "address": [244, 316], "_xml_dict": 244, "ome_tiff_xml_dict": [244, 246], "xml_tool": 244, "parse_xml": 244, "openmicroscopi": 246, "uid": 246, "heirarch": 246, "ome_dict": 246, "is_virtu": 248, "listproxi": 248, "update_data_buff": [248, 250], "img_width": [248, 250], "img_height": [248, 250], "move_stage_offset": 248, "former_microscop": 248, "end_acquisit": [248, 250], "get_readout_tim": [248, 250], "assemble_device_config_list": 248, "device_nam": [248, 309], "device_name_dict": 248, "assembl": 248, "config": [248, 315, 316], "device_config_list": 248, "device_name_list": 248, "get_stage_posit": [248, 250], "load_and_start_devic": 248, "is_list": 248, "device_ref_nam": 248, "pos_dict": [248, 250, 266], "prepare_next_channel": 248, "stop_stag": [248, 250], "event_queu": 250, "softwar": [250, 307, 309, 311, 313, 317, 318], "architectur": [250, 309, 313, 314], "leverag": [250, 309], "cuda": [250, 284, 313, 316], "analysi": [250, 284, 308], "engin": 250, "get_data_buff": 250, "create_pip": 250, "release_pip": 250, "run_command": 250, "run_data_process": 250, "run_single_channel_acquisit": 250, "run_single_acquisit": 250, "snap_imag": 250, "run_live_acquisit": 250, "run_z_stack_acquisit": 250, "run_single_channel_acquisition_with_featur": 250, "change_resolut": 250, "resolution_valu": 250, "pipe_nam": 250, "pair": 250, "duplex": 250, "end1": 250, "disconnect": 250, "get_active_microscop": 250, "512": 250, "get_microscope_info": 250, "get_offset_variance_map": 250, "offset_variance_map": 250, "ret_pos_dict": 250, "unload": 250, "pause_data_thread": 250, "paus": 250, "turn_off_flag": 250, "resume_data_thread": 250, "resum": 250, "num_of_fram": 250, "stream": 250, "gui": [250, 289, 314], "recalcul": 250, "therebi": 250, "peopl": 250, "due": 250, "update_ilastik_set": 250, "display_segment": 250, "mark_posit": 250, "target_label": 250, "ilastik": [250, 315], "mark": 250, "label": 250, "100000": [252, 253, 254, 255, 256, 257, 259, 307, 315], "camera_delai": [252, 254], "meant": 252, "visual": [252, 316], "hz": [252, 253, 254, 255, 256, 257, 259], "exposure_start": 252, "exposure_end": 252, "dc": 253, "reson": 253, "drive": [253, 256, 259, 314], "volt": [253, 254, 255, 256, 257, 259, 317], "typical_galvo": [253, 255], "24": 254, "sawtooth": [254, 309], "typic": [254, 309], "rise": 254, "linearli": 254, "drop": 254, "down": 254, "exchang": 254, "etl_ramp": 254, "tunable_lens_ramp": 254, "etl_delai": 254, "duty_cycl": [255, 259, 315], "phase": [255, 256, 259, 315], "5707963267948966": 255, "radian": [255, 256, 259], "sine": [256, 315], "typical_las": [256, 259], "pulse_width": 257, "ttl": 257, "typical_ttl_puls": 257, "percent_smooth": [258, 315], "smooth": [258, 315], "convolut": 258, "smoothed_waveform": 258, "141592653589793": 259, "na": [262, 263, 264], "wvl": [262, 263, 264], "waist": [262, 263, 264], "apertur": [262, 263, 264], "wavelength": [262, 263, 264, 315], "r0": [262, 264], "z0": [262, 264], "w0": [262, 264], "i0": [262, 264], "bg0": 262, "rl": 264, "zl": 264, "33": 264, "bg": 264, "common": [266, 317], "model": [266, 308, 309, 311, 314], "being": 266, "ref_nam": 268, "funclist": 269, "new_func": 269, "wrap_func": 272, "saving_set": 274, "popup": 274, "folder": [275, 280, 309, 316], "walk": 275, "everyth": 275, "reachabl": 275, "symbol": 275, "caution": 275, "danger": 275, "file_directori": 276, "content_dict": 276, "yml": 276, "yaml": [276, 309, 315], "piec": [278, 310], "font": 278, "relat": [278, 307, 315], "font_siz": 278, "fp": 280, "lazi": 280, "pil": 280, "containt": 280, "filenotfounderror": 280, "low_res_fp": 280, "2022": 280, "07": 280, "02": [280, 316], "cell_001": 280, "low_r": 280, "imshow": 280, "500": [280, 307, 315], "parser": [282, 283], "argumentpars": [282, 283], "argumentparserobject": 282, "argpars": [283, 284], "namespac": [283, 284, 300], "logging_path": 283, "log": 283, "gpu": [284, 313, 314], "statu": 284, "dist": 286, "roi_length": 286, "roi": [286, 287], "watch": 286, "sign": [286, 287, 293, 294], "measur": 286, "num_til": 286, "x_start": 287, "x_tile": 287, "x_length": 287, "x_overlap": 287, "y_start": 287, "y_tile": 287, "y_length": 287, "y_overlap": 287, "z_start": 287, "z_tile": 287, "z_length": 287, "z_overlap": 287, "theta_start": 287, "theta_til": 287, "theta_length": 287, "theta_overlap": 287, "f_start": 287, "f_tile": 287, "f_length": 287, "f_overlap": 287, "fov": 287, "track": 287, "n_posit": 287, "tabl": 289, "po": 289, "redraw": 289, "panda": 289, "datafram": 289, "multi_position_t": 289, "multiposit": 289, "begin_start": 291, "half": 293, "subsample_z": 295, "nxnxn": 295, "euclidean": 295, "subsampl": [295, 315], "box": [295, 316, 317], "128": 295, "29": 295, "waveform_template_nam": 297, "waveform_template_dict": 297, "microscope_state_dict": 297, "repeat_num": 297, "expand_num": 297, "expand": [297, 315], "tag": 299, "elementtre": 300, "etre": 300, "fullnam": [304, 305], "escap": [304, 305], "underlin": [304, 305], "rubric": 305, "endfor": 305, "endif": 305, "endblock": 305, "302158": [307, 315], "302352": [307, 315], "filter_wheel": [307, 315], "com19": [307, 315], "number_of_wheel": [307, 315], "controllernam": [307, 315], "884": [307, 315], "l": [307, 313, 315], "509": [307, 313, 315], "20dg10": [307, 313, 315], "40dg10": [307, 315], "060": [307, 315], "dg": [307, 315], "406": [307, 315], "4pd": [307, 315], "nostag": [307, 315], "refmod": [307, 315], "119060508": [307, 315], "thorlab": [307, 313, 315], "74000375": [307, 315], "servo_id": [307, 315], "com18": [307, 315], "1000000": [307, 315], "manufactur": [307, 310, 315, 317], "123456789": [307, 315], "com7": [307, 315], "instanti": [307, 315], "eg": [307, 315], "help": [307, 309, 315], "emploi": [307, 315], "syntheticstag": [307, 315], "987654321": [307, 315], "notic": [307, 315], "syntheticzoom": [307, 315], "abbrevi": 307, "y_unload_posit": 307, "10000": [307, 315], "y_load_posit": 307, "90000": 307, "startfocu": 307, "75000": 307, "33500": 307, "16000": 307, "50000": 307, "25000": 307, "360": [307, 315], "x_rot_posit": 307, "y_rot_posit": 307, "z_rot_posit": 307, "x_step": [307, 315], "y_step": [307, 315], "z_step": [307, 315], "theta_step": [307, 315], "f_step": [307, 315], "25250": 307, "40000": 307, "70000": 307, "z_offset": [307, 315], "f_offset": [307, 315], "theta_offset": [307, 315], "explicil": [307, 315], "explictli": 307, "consist": [307, 309], "fashion": 307, "queri": 307, "awar": 307, "advanc": [307, 309], "pimikromov": 307, "physic": [307, 315], "third": [307, 315], "laser_pow": [307, 315], "interval_tim": [307, 315], "stack_acquisit": [307, 315], "200": [307, 315], "start_po": [307, 315], "5000": [307, 315], "end_po": [307, 315], "stack_paus": [307, 315], "widget": [307, 315], "spinbox": [307, 315], "develop": [307, 308, 314, 315, 317], "plan": [307, 315], "go": [307, 315, 316], "forward": [307, 315], "manner": [307, 315], "reconfigur": 308, "snap": 308, "pictur": 308, "common_featur": 308, "zstackacquisit": 308, "autofocu": 308, "discret": 308, "cosin": 308, "dictat": 308, "complet": 308, "config_t": 308, "init": 308, "cleanup_func_sign": 308, "cleanup_func_data": 308, "node": 308, "multi": [308, 317], "primari": 308, "acqusit": 308, "failsaf": 308, "latter": 308, "inde": 308, "proceed": 308, "welcom": 309, "pleas": [309, 316], "fork": 309, "branch": 309, "review": 309, "practic": 309, "outlin": 309, "consid": 309, "refactor": 309, "reach": 309, "prior": [309, 317], "happi": 309, "bring": 309, "discuss": 309, "meet": 309, "strong": 309, "especi": 309, "disrupt": 309, "improv": 309, "clariti": 309, "team": 309, "merg": 309, "pep8": 309, "importantli": 309, "camelcas": 309, "lowercase_and_separated_by_underscor": 309, "numpydoc": 309, "commit": 309, "workflow": 309, "enforc": 309, "ruff": 309, "linter": 309, "black": 309, "formatt": 309, "vscode": 309, "whatev": [309, 317], "conda": [309, 316], "aslm": [309, 310, 314, 315, 316, 317, 318], "pip": [309, 316], "cd": [309, 316], "rare": 309, "complain": 309, "start_stag": 309, "exec": 309, "device_startup_funct": 309, "start_": 309, "noqa": 309, "comment": 309, "easi": [309, 316], "opportun": 309, "galvo_waveform": 309, "associ": 309, "alert": 309, "applic": 309, "pytest": 309, "lab": [309, 313, 316], "appl": 309, "encount": 309, "resolv": 309, "oserror": 309, "ulimit": 309, "hand": 309, "abstract": [310, 314], "layer": [310, 314], "divers": 310, "equip": [310, 313], "accompani": 310, "contribut": [310, 314, 318], "encourag": 311, "engag": 311, "collabor": 311, "guidelin": [311, 314], "omicron": 313, "lighthub": 313, "ultra": 313, "acc": 313, "642": 313, "561": 313, "mix": 313, "obi": 313, "unidirect": 313, "bidirect": 313, "repeatablil": 313, "increment": 313, "borderlin": 313, "nvidia": [313, 316], "titan": 313, "rtx": 313, "driver": [313, 316, 317], "456": 313, "71": 313, "framegrabb": [313, 317], "optotun": 313, "electrotun": 313, "len": 313, "blink": 313, "nation": 313, "pxie": [313, 317], "1073": 313, "chassi": 313, "pxi6733": [313, 315], "pxi6259": [313, 315, 317], "32mm": 313, "position": 313, "mad": 313, "citi": 313, "nano": 313, "grabber": [313, 317], "ut": 314, "southwestern": 314, "ecosystem": 314, "aim": 314, "custom": 314, "recip": 314, "maker": 314, "autom": 314, "repositori": [314, 316], "minim": 314, "priorit": 314, "stabil": 314, "brutal": 314, "obviou": 314, "maxim": 314, "biolog": 314, "download": [314, 317], "git": 314, "environ": [314, 315], "troubleshoot": 314, "voicecoil": 314, "deform": 314, "mirror": 314, "mechan": [314, 315], "zach": 314, "marin": 314, "anni": 314, "wang": 314, "dax": 314, "collison": 314, "kevin": 314, "dean": [314, 316], "sampath": 314, "rapuri": 314, "renil": 314, "gupta": 314, "samir": 314, "mamtani": 314, "andrew": 314, "jamieson": 314, "york": 314, "nathaniel": 314, "thayer": 314, "confus": 315, "recommend": [315, 316], "anaconda": [315, 316], "prompt": [315, 316, 317], "sh": [315, 316], "thereaft": 315, "conflict": 315, "master_trigger_out_lin": [315, 317], "camera_trigger_out_lin": [315, 317], "trigger_sourc": [315, 317], "laser_port_switch": 315, "laser_switch_st": 315, "pixel_size_in_micron": 315, "sensor_mod": 315, "readout_direct": 315, "lightsheet_rolling_shutter_width": 315, "608": 315, "defect_correct_mod": 315, "readout_spe": 315, "trigger_act": 315, "trigger_mod": 315, "extern": [315, 317], "trigger_polar": 315, "throughout": 315, "line_interv": 315, "000075": 315, "display_acquisition_subsampl": 315, "average_frame_r": 315, "969": 315, "frames_to_averag": 315, "exposure_time_rang": 315, "remote_focus_devic": 315, "ao2": 315, "ramp_rising_perc": 315, "85": 315, "ramp_falling_perc": 315, "ao0": 315, "99": 315, "57079": 315, "wheel_numb": 315, "filter_wheel_delai": 315, "030": 315, "available_filt": 315, "rfp": 315, "595": 315, "31": 315, "far": [315, 316], "red": 315, "blp01": 315, "647r": 315, "blocked1": 315, "blocked2": 315, "blocked3": 315, "blocked4": 315, "blocked5": 315, "blocked6": 315, "earlier": 315, "volts_per_micron": 315, "axes_channel": 315, "agre": [315, 317], "vertic": 315, "wherea": 315, "often": 315, "vice": 315, "versa": 315, "627": 315, "1711": 315, "2301": 315, "2710": 315, "3079": 315, "3383": 315, "609": 315, "255": 315, "044": 315, "port0": [315, 317], "line0": 315, "onoff": 315, "line2": 315, "luxx": 315, "87": 315, "remote_focus_const": 315, "336": 315, "percent_delai": 315, "562nm": 315, "galvo_const": 315, "mesoscal": 315, "other_const": 315, "duty_wait_dur": 315, "confoc": 315, "n_plane": 315, "url": 315, "127": 315, "desktop": 316, "friendli": 316, "head": 316, "miniconda": 316, "websit": 316, "handi": 316, "cheatsheet": 316, "accustom": 316, "frequent": 316, "pin": [316, 317], "taskbar": 316, "mycomput": 316, "firewal": 316, "utsw": 316, "campu": 316, "circumv": 316, "parenthes": 316, "origin": 316, "activatin": 316, "upgrad": 316, "clone": 316, "mkdir": 316, "myfoldernam": 316, "thedeanlab": 316, "completet": 316, "shortcut": 316, "click": [316, 317], "navig": 316, "enter": 316, "windir": 316, "system32": 316, "cmd": 316, "ex": 316, "script": 316, "bat": 316, "feedback": 316, "acceler": 316, "tensorflow": 316, "pytorch": 316, "cupi": 316, "excel": 316, "cudnn": 316, "sdk": [316, 317], "graphic": 316, "450": 316, "80": 316, "tensorrt": 316, "microsoft": 316, "redistribut": 316, "studio": 316, "2015": 316, "2017": 316, "2019": 316, "http_proxi": 316, "swmed": 316, "edu": 316, "3128": 316, "https_proxi": 316, "typo": 316, "continu": [316, 317], "perspect": 316, "onlin": 316, "usersuserprofil": 316, "condarc": 316, "usersuserprofilepippip": 316, "ini": 316, "password": 316, "8080": 316, "sever": 317, "pcie": 317, "6738": 317, "6259": 317, "6733": 317, "daqmx": 317, "recogn": 317, "visibl": 317, "pinout": 317, "scb": 317, "68a": 317, "breakout": 317, "mislead": 317, "aspect": 317, "wire": 317, "board": 317, "receipt": 317, "determinist": 317, "basi": 317, "jitter": 317, "anticip": 317, "dev1": 317, "dev2": 317, "commonli": 317, "line1": 317, "pfi0": 317, "p0": 317, "pfio": 317, "gate": 317, "usb": 317, "came": 317, "hcimagel": 317, "intal": 317, "silicon": 317, "firebird": 317, "button": 317, "apporpri": 317, "x16": 317, "slot": 317, "motherboard": 317, "excap": 317, "ctr0": 317, "pvcam": 317, "term": 317, "unknown": 317, "broadcom": 317, "pci": 317, "kit": 317, "bridg": 317, "dev": 317, "_": 317, "abl": 317, "pvcamtest": 317, "lfa": 317, "2010": 317, "actuat": 317, "sync": 317, "ignal": 317, "synchron": 317, "less": 317, "perz": 317}, "objects": {"aslm": [[0, 0, 0, "-", "config"], [7, 0, 0, "-", "controller"], [14, 0, 0, "-", "model"], [260, 0, 0, "-", "tools"], [301, 0, 0, "-", "view"]], "aslm.config": [[1, 0, 0, "-", "config"]], "aslm.config.config": [[2, 1, 1, "", "build_nested_dict"], [3, 1, 1, "", "get_aslm_path"], [4, 1, 1, "", "get_configuration_paths"], [5, 1, 1, "", "load_configs"], [6, 1, 1, "", "update_config_dict"]], "aslm.controller": [[8, 0, 0, "-", "configuration_controller"], [10, 0, 0, "-", "thread_pool"]], "aslm.controller.configuration_controller": [[9, 2, 1, "", "ConfigurationController"]], "aslm.controller.configuration_controller.ConfigurationController": [[9, 3, 1, "", "__init__"], [9, 4, 1, "", "camera_config_dict"], [9, 4, 1, "", "camera_pixels"], [9, 3, 1, "id0", "change_microscope"], [9, 4, 1, "", "channels_info"], [9, 4, 1, "", "daq_sample_rate"], [9, 4, 1, "", "filter_wheel_setting_dict"], [9, 4, 1, "", "galvo_parameter_dict"], [9, 3, 1, "id1", "get_microscope_configuration_dict"], [9, 3, 1, "id2", "get_stage_position_limits"], [9, 4, 1, "", "lasers_info"], [9, 4, 1, "", "number_of_channels"], [9, 4, 1, "", "remote_focus_dict"], [9, 4, 1, "", "stage_default_position"], [9, 4, 1, "", "stage_setting_dict"], [9, 4, 1, "", "stage_step"]], "aslm.controller.thread_pool": [[11, 2, 1, "", "SelfLockThread"], [12, 2, 1, "", "SynchronizedThreadPool"], [13, 2, 1, "", "ThreadWaitlist"]], "aslm.controller.thread_pool.SelfLockThread": [[11, 3, 1, "", "__init__"], [11, 4, 1, "", "daemon"], [11, 3, 1, "", "getName"], [11, 4, 1, "", "ident"], [11, 3, 1, "", "isDaemon"], [11, 3, 1, "", "isLocked"], [11, 3, 1, "", "is_alive"], [11, 3, 1, "", "join"], [11, 4, 1, "", "name"], [11, 4, 1, "", "native_id"], [11, 3, 1, "", "run"], [11, 3, 1, "", "setDaemon"], [11, 3, 1, "", "setName"], [11, 3, 1, "", "start"], [11, 3, 1, "", "unlock"], [11, 3, 1, "", "wait"]], "aslm.controller.thread_pool.SynchronizedThreadPool": [[12, 3, 1, "", "__init__"], [12, 3, 1, "", "clear"], [12, 3, 1, "", "createThread"], [12, 3, 1, "", "getRunningThread"], [12, 3, 1, "", "globaltrace"], [12, 3, 1, "", "killThreadInList"], [12, 3, 1, "", "localtrace"], [12, 3, 1, "", "moveToDelete"], [12, 3, 1, "", "registerResource"], [12, 3, 1, "", "removeThread"], [12, 3, 1, "", "threadTaskWrapping"]], "aslm.controller.thread_pool.ThreadWaitlist": [[13, 3, 1, "", "__init__"]], "aslm.model": [[15, 0, 0, "-", "analysis"], [56, 0, 0, "-", "concurrency"], [75, 0, 0, "-", "data_sources"], [85, 0, 0, "-", "device_startup_functions"], [103, 0, 0, "-", "devices"], [194, 0, 0, "-", "dummy"], [199, 0, 0, "-", "features"], [239, 0, 0, "-", "metadata_sources"], [247, 0, 0, "-", "microscope"], [249, 0, 0, "-", "model"], [251, 0, 0, "-", "waveforms"]], "aslm.model.analysis": [[16, 0, 0, "-", "boundary_detect"], [21, 0, 0, "-", "camera"], [26, 0, 0, "-", "detection"], [36, 0, 0, "-", "image_contrast"], [42, 0, 0, "-", "image_decorrelation"], [51, 0, 0, "-", "image_transform"], [54, 0, 0, "-", "spectral_unmixing"]], "aslm.model.analysis.boundary_detect": [[17, 1, 1, "", "binary_detect"], [18, 1, 1, "", "find_tissue_boundary_2d"], [19, 1, 1, "", "has_tissue"], [20, 1, 1, "", "map_boundary"]], "aslm.model.analysis.camera": [[22, 1, 1, "", "compute_flatfield_map"], [23, 1, 1, "", "compute_noise_sigma"], [24, 1, 1, "", "compute_scmos_offset_and_variance_map"], [25, 1, 1, "", "compute_signal_to_noise"]], "aslm.model.analysis.detection": [[27, 1, 1, "", "add_median_border"], [28, 1, 1, "", "combine_images"], [29, 1, 1, "", "log_detection"], [30, 1, 1, "", "make_inside_image"], [31, 1, 1, "", "make_normalized_image"], [32, 1, 1, "", "make_sphere_3D"], [33, 1, 1, "", "multiscale_surface_filter_3D"], [34, 1, 1, "", "surface_filter_gauss_3D"], [35, 1, 1, "", "three_level_segmentation"]], "aslm.model.analysis.image_contrast": [[37, 1, 1, "", "estimate_and_correct_flatfield"], [38, 1, 1, "", "estimate_image_resolution"], [39, 1, 1, "", "fast_normalized_dct_shannon_entropy"], [40, 1, 1, "", "image_intensity"], [41, 1, 1, "", "normalized_dct_shannon_entropy"]], "aslm.model.analysis.image_decorrelation": [[43, 1, 1, "", "apodize_image"], [44, 1, 1, "", "get_correlation_coefficient"], [45, 1, 1, "", "get_decorrelation_local_maxima"], [46, 1, 1, "", "get_image_decorrelation"], [47, 1, 1, "", "get_radial_average"], [48, 1, 1, "", "image_to_polar"], [49, 1, 1, "", "linear_map"], [50, 1, 1, "", "main_image_decorr"]], "aslm.model.analysis.image_transform": [[52, 1, 1, "", "deskew_image"], [53, 1, 1, "", "initiate_gpu"]], "aslm.model.analysis.spectral_unmixing": [[55, 1, 1, "", "to_do"]], "aslm.model.concurrency": [[57, 0, 0, "-", "concurrency_tools"], [68, 0, 0, "-", "proxy_objects"], [73, 0, 0, "-", "write_parameters"]], "aslm.model.concurrency.concurrency_tools": [[58, 2, 1, "", "CustodyThread"], [59, 5, 1, "", "FancyThread"], [60, 2, 1, "", "MyTestClass"], [61, 2, 1, "", "ObjectInSubprocess"], [62, 5, 1, "", "PoliteThread"], [63, 2, 1, "", "ResultThread"], [64, 2, 1, "", "SharedNDArray"], [65, 2, 1, "", "TestObjectInSubprocess"], [66, 2, 1, "", "TestResultThreadAndCustodyThread"], [67, 2, 1, "", "TestSharedNDArray"]], "aslm.model.concurrency.concurrency_tools.CustodyThread": [[58, 3, 1, "", "__init__"], [58, 4, 1, "", "daemon"], [58, 3, 1, "", "getName"], [58, 3, 1, "", "get_result"], [58, 4, 1, "", "ident"], [58, 3, 1, "", "isDaemon"], [58, 3, 1, "", "is_alive"], [58, 3, 1, "", "join"], [58, 4, 1, "", "name"], [58, 4, 1, "", "native_id"], [58, 3, 1, "", "run"], [58, 3, 1, "", "setDaemon"], [58, 3, 1, "", "setName"], [58, 3, 1, "", "start"]], "aslm.model.concurrency.concurrency_tools.MyTestClass": [[60, 3, 1, "", "__init__"], [60, 3, 1, "", "run"], [60, 3, 1, "", "time_it"]], "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess": [[61, 3, 1, "", "__init__"]], "aslm.model.concurrency.concurrency_tools.ResultThread": [[63, 3, 1, "", "__init__"], [63, 4, 1, "", "daemon"], [63, 3, 1, "", "getName"], [63, 3, 1, "", "get_result"], [63, 4, 1, "", "ident"], [63, 3, 1, "", "isDaemon"], [63, 3, 1, "", "is_alive"], [63, 3, 1, "", "join"], [63, 4, 1, "", "name"], [63, 4, 1, "", "native_id"], [63, 3, 1, "", "run"], [63, 3, 1, "", "setDaemon"], [63, 3, 1, "", "setName"], [63, 3, 1, "", "start"]], "aslm.model.concurrency.concurrency_tools.SharedNDArray": [[64, 5, 1, "", "ALIGNED"], [64, 5, 1, "", "BEHAVED"], [64, 5, 1, "", "CARRAY"], [64, 5, 1, "", "C_CONTIGUOUS"], [64, 5, 1, "", "FARRAY"], [64, 5, 1, "", "FNC"], [64, 5, 1, "", "FORC"], [64, 5, 1, "", "F_CONTIGUOUS"], [64, 5, 1, "", "OWNDATA"], [64, 5, 1, "", "T"], [64, 5, 1, "", "UPDATEIFCOPY"], [64, 5, 1, "", "WRITEABLE"], [64, 5, 1, "", "WRITEBACKIFCOPY"], [64, 3, 1, "", "__init__"], [64, 3, 1, "", "all"], [64, 3, 1, "", "any"], [64, 3, 1, "", "argmax"], [64, 3, 1, "", "argmin"], [64, 3, 1, "", "argpartition"], [64, 3, 1, "", "argsort"], [64, 3, 1, "", "astype"], [64, 5, 1, "", "base"], [64, 3, 1, "", "byteswap"], [64, 3, 1, "", "choose"], [64, 3, 1, "", "clip"], [64, 3, 1, "", "compress"], [64, 3, 1, "", "conj"], [64, 3, 1, "", "conjugate"], [64, 3, 1, "", "copy"], [64, 5, 1, "", "ctypes"], [64, 3, 1, "", "cumprod"], [64, 3, 1, "", "cumsum"], [64, 5, 1, "", "data"], [64, 3, 1, "", "diagonal"], [64, 5, 1, "", "dtype"], [64, 3, 1, "", "dump"], [64, 3, 1, "", "dumps"], [64, 3, 1, "", "fill"], [64, 5, 1, "", "flags"], [64, 5, 1, "", "flat"], [64, 3, 1, "", "flatten"], [64, 3, 1, "", "getfield"], [64, 5, 1, "", "imag"], [64, 3, 1, "", "item"], [64, 3, 1, "", "itemset"], [64, 5, 1, "", "itemsize"], [64, 3, 1, "", "max"], [64, 3, 1, "", "mean"], [64, 3, 1, "", "min"], [64, 5, 1, "", "nbytes"], [64, 5, 1, "", "ndim"], [64, 3, 1, "", "newbyteorder"], [64, 3, 1, "", "nonzero"], [64, 3, 1, "", "partition"], [64, 3, 1, "", "prod"], [64, 3, 1, "", "ptp"], [64, 3, 1, "", "put"], [64, 3, 1, "", "ravel"], [64, 5, 1, "", "real"], [64, 3, 1, "", "repeat"], [64, 3, 1, "", "reshape"], [64, 3, 1, "", "resize"], [64, 3, 1, "", "round"], [64, 3, 1, "", "searchsorted"], [64, 3, 1, "", "setfield"], [64, 3, 1, "", "setflags"], [64, 5, 1, "", "shape"], [64, 5, 1, "", "size"], [64, 3, 1, "", "sort"], [64, 3, 1, "", "squeeze"], [64, 3, 1, "", "std"], [64, 5, 1, "", "strides"], [64, 3, 1, "", "sum"], [64, 3, 1, "", "swapaxes"], [64, 3, 1, "", "take"], [64, 3, 1, "", "tobytes"], [64, 3, 1, "", "tofile"], [64, 3, 1, "", "tolist"], [64, 3, 1, "", "tostring"], [64, 3, 1, "", "trace"], [64, 3, 1, "", "transpose"], [64, 3, 1, "", "var"], [64, 3, 1, "", "view"]], "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess": [[65, 2, 1, "", "TestClass"], [65, 3, 1, "", "__init__"], [65, 3, 1, "", "run"], [65, 3, 1, "", "test_incorrect_thread_management"], [65, 3, 1, "", "test_lock_with_waitlist"], [65, 3, 1, "", "test_object_in_subprocess_overhead"], [65, 3, 1, "", "test_sending_shared_arrays"], [65, 3, 1, "", "time_it"]], "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread": [[66, 3, 1, "", "__init__"], [66, 3, 1, "", "run"], [66, 3, 1, "", "time_it"]], "aslm.model.concurrency.concurrency_tools.TestSharedNDArray": [[67, 3, 1, "", "__init__"], [67, 3, 1, "", "run"], [67, 3, 1, "", "test_ndarraylike_behavior"], [67, 3, 1, "", "test_serialization"], [67, 3, 1, "", "test_serializing_and_deserializing"], [67, 3, 1, "", "time_it"]], "aslm.model.concurrency.proxy_objects": [[69, 2, 1, "", "ProxyManager"], [70, 2, 1, "", "ProxyObject"], [71, 1, 1, "", "launch_custody_thread"], [72, 1, 1, "", "launch_thread"]], "aslm.model.concurrency.proxy_objects.ProxyManager": [[69, 3, 1, "", "__init__"], [69, 3, 1, "", "proxy_object"], [69, 3, 1, "", "shared_numpy_array"]], "aslm.model.concurrency.proxy_objects.ProxyObject": [[70, 3, 1, "", "__init__"]], "aslm.model.concurrency.write_parameters": [[74, 2, 1, "", "write_Params"]], "aslm.model.concurrency.write_parameters.write_Params": [[74, 3, 1, "", "__init__"]], "aslm.model.data_sources": [[76, 0, 0, "-", "bdv_data_source"], [78, 0, 0, "-", "data_source"], [80, 1, 1, "", "get_data_source"], [81, 0, 0, "-", "tiff_data_source"], [83, 0, 0, "-", "zarr_data_source"]], "aslm.model.data_sources.bdv_data_source": [[77, 2, 1, "", "BigDataViewerDataSource"]], "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource": [[77, 3, 1, "", "__init__"], [77, 3, 1, "", "close"], [77, 4, 1, "id3", "data"], [77, 5, 1, "id0", "file_name"], [77, 5, 1, "id2", "metadata"], [77, 4, 1, "", "mode"], [77, 3, 1, "", "read"], [77, 4, 1, "", "resolutions"], [77, 3, 1, "", "set_metadata_from_configuration_experiment"], [77, 4, 1, "", "shape"], [77, 4, 1, "", "shapes"], [77, 4, 1, "", "subdivisions"], [77, 4, 1, "", "voxel_size"], [77, 3, 1, "", "write"]], "aslm.model.data_sources.data_source": [[79, 2, 1, "", "DataSource"]], "aslm.model.data_sources.data_source.DataSource": [[79, 3, 1, "", "__init__"], [79, 3, 1, "", "close"], [79, 4, 1, "id3", "data"], [79, 5, 1, "id0", "file_name"], [79, 5, 1, "id2", "metadata"], [79, 4, 1, "", "mode"], [79, 3, 1, "", "read"], [79, 3, 1, "", "set_metadata_from_configuration_experiment"], [79, 4, 1, "", "shape"], [79, 4, 1, "", "voxel_size"], [79, 3, 1, "", "write"]], "aslm.model.data_sources.tiff_data_source": [[82, 2, 1, "", "TiffDataSource"]], "aslm.model.data_sources.tiff_data_source.TiffDataSource": [[82, 3, 1, "", "__init__"], [82, 3, 1, "", "close"], [82, 4, 1, "id3", "data"], [82, 5, 1, "id0", "file_name"], [82, 3, 1, "", "generate_image_name"], [82, 5, 1, "id2", "metadata"], [82, 4, 1, "", "mode"], [82, 3, 1, "", "read"], [82, 3, 1, "", "set_metadata_from_configuration_experiment"], [82, 4, 1, "", "shape"], [82, 4, 1, "", "voxel_size"], [82, 3, 1, "", "write"]], "aslm.model.data_sources.zarr_data_source": [[84, 2, 1, "", "ZarrDataSource"]], "aslm.model.data_sources.zarr_data_source.ZarrDataSource": [[84, 3, 1, "", "__init__"], [84, 3, 1, "", "close"], [84, 3, 1, "", "copy_to_zarr"], [84, 4, 1, "id3", "data"], [84, 5, 1, "id0", "file_name"], [84, 5, 1, "id2", "metadata"], [84, 4, 1, "", "mode"], [84, 3, 1, "", "read"], [84, 3, 1, "", "set_metadata_from_configuration_experiment"], [84, 4, 1, "", "shape"], [84, 4, 1, "", "voxel_size"], [84, 3, 1, "", "write"]], "aslm.model.device_startup_functions": [[86, 2, 1, "", "DummyDeviceConnection"], [87, 1, 1, "", "auto_redial"], [88, 1, 1, "", "device_not_found"], [89, 1, 1, "", "load_camera_connection"], [90, 1, 1, "", "load_devices"], [91, 1, 1, "", "load_filter_wheel_connection"], [92, 1, 1, "", "load_stages"], [93, 1, 1, "", "load_zoom_connection"], [94, 1, 1, "", "start_camera"], [95, 1, 1, "", "start_daq"], [96, 1, 1, "", "start_filter_wheel"], [97, 1, 1, "", "start_galvo"], [98, 1, 1, "", "start_lasers"], [99, 1, 1, "", "start_remote_focus_device"], [100, 1, 1, "", "start_shutter"], [101, 1, 1, "", "start_stage"], [102, 1, 1, "", "start_zoom"]], "aslm.model.device_startup_functions.DummyDeviceConnection": [[86, 3, 1, "", "__init__"]], "aslm.model.devices": [[104, 0, 0, "-", "APIs"], [109, 0, 0, "-", "camera"], [118, 0, 0, "-", "daq"], [123, 0, 0, "-", "filter_wheel"], [134, 0, 0, "-", "galvo"], [139, 0, 0, "-", "joystick"], [144, 0, 0, "-", "lasers"], [153, 0, 0, "-", "objectives"], [155, 0, 0, "-", "remote_focus"], [162, 0, 0, "-", "shutter"], [167, 0, 0, "-", "stages"], [189, 0, 0, "-", "zoom"]], "aslm.model.devices.APIs": [[105, 0, 0, "-", "coherent"], [106, 0, 0, "-", "dynamixel"], [107, 0, 0, "-", "logitech"], [108, 0, 0, "-", "omicron"]], "aslm.model.devices.camera": [[110, 0, 0, "-", "camera_base"], [112, 0, 0, "-", "camera_hamamatsu"], [115, 0, 0, "-", "camera_synthetic"]], "aslm.model.devices.camera.camera_base": [[111, 2, 1, "", "CameraBase"]], "aslm.model.devices.camera.camera_base.CameraBase": [[111, 3, 1, "", "__init__"], [111, 3, 1, "", "calculate_light_sheet_exposure_time"], [111, 3, 1, "", "set_readout_direction"]], "aslm.model.devices.camera.camera_hamamatsu": [[113, 2, 1, "", "HamamatsuOrca"], [114, 2, 1, "", "HamamatsuOrcaLightning"]], "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca": [[113, 3, 1, "", "__init__"], [113, 3, 1, "", "calculate_light_sheet_exposure_time"], [113, 3, 1, "", "calculate_readout_time"], [113, 3, 1, "", "close_camera"], [113, 3, 1, "", "close_image_series"], [113, 3, 1, "", "get_minimum_waiting_time"], [113, 3, 1, "", "get_new_frame"], [113, 3, 1, "", "initialize_image_series"], [113, 3, 1, "", "report_settings"], [113, 4, 1, "", "serial_number"], [113, 3, 1, "", "set_ROI"], [113, 3, 1, "", "set_binning"], [113, 3, 1, "", "set_exposure_time"], [113, 3, 1, "", "set_line_interval"], [113, 3, 1, "", "set_readout_direction"], [113, 3, 1, "", "set_sensor_mode"]], "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning": [[114, 3, 1, "", "__init__"], [114, 3, 1, "", "calculate_light_sheet_exposure_time"], [114, 3, 1, "", "calculate_readout_time"], [114, 3, 1, "", "close_camera"], [114, 3, 1, "", "close_image_series"], [114, 3, 1, "", "get_minimum_waiting_time"], [114, 3, 1, "", "get_new_frame"], [114, 3, 1, "", "initialize_image_series"], [114, 3, 1, "", "report_settings"], [114, 4, 1, "", "serial_number"], [114, 3, 1, "", "set_ROI"], [114, 3, 1, "", "set_binning"], [114, 3, 1, "", "set_exposure_time"], [114, 3, 1, "", "set_line_interval"], [114, 3, 1, "", "set_readout_direction"], [114, 3, 1, "", "set_sensor_mode"]], "aslm.model.devices.camera.camera_synthetic": [[116, 2, 1, "", "SyntheticCamera"], [117, 2, 1, "", "SyntheticCameraController"]], "aslm.model.devices.camera.camera_synthetic.SyntheticCamera": [[116, 3, 1, "", "__init__"], [116, 3, 1, "", "calculate_light_sheet_exposure_time"], [116, 3, 1, "", "calculate_readout_time"], [116, 3, 1, "", "close_camera"], [116, 3, 1, "", "close_image_series"], [116, 3, 1, "", "generate_new_frame"], [116, 3, 1, "", "get_minimum_waiting_time"], [116, 3, 1, "", "get_new_frame"], [116, 3, 1, "", "initialize_image_series"], [116, 3, 1, "", "load_images"], [116, 3, 1, "", "report_settings"], [116, 3, 1, "", "set_ROI"], [116, 3, 1, "", "set_binning"], [116, 3, 1, "", "set_exposure_time"], [116, 3, 1, "", "set_line_interval"], [116, 3, 1, "", "set_readout_direction"], [116, 3, 1, "", "set_sensor_mode"]], "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController": [[117, 3, 1, "", "__init__"], [117, 3, 1, "", "get_property_value"]], "aslm.model.devices.daq": [[119, 0, 0, "-", "daq_base"], [121, 0, 0, "-", "daq_synthetic"]], "aslm.model.devices.daq.daq_base": [[120, 2, 1, "", "DAQBase"]], "aslm.model.devices.daq.daq_base.DAQBase": [[120, 3, 1, "", "__init__"], [120, 3, 1, "", "calculate_all_waveforms"], [120, 5, 1, "", "configuration"]], "aslm.model.devices.daq.daq_synthetic": [[122, 2, 1, "", "SyntheticDAQ"]], "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ": [[122, 3, 1, "", "__init__"], [122, 3, 1, "", "add_camera"], [122, 3, 1, "", "calculate_all_waveforms"], [122, 3, 1, "", "close_tasks"], [122, 5, 1, "", "configuration"], [122, 3, 1, "", "create_camera_task"], [122, 3, 1, "", "create_galvo_remote_focus_tasks"], [122, 3, 1, "", "create_master_trigger_task"], [122, 3, 1, "", "prepare_acquisition"], [122, 3, 1, "", "run_acquisition"], [122, 3, 1, "", "start_tasks"], [122, 3, 1, "", "stop_acquisition"], [122, 3, 1, "", "stop_tasks"], [122, 3, 1, "", "write_waveforms_to_tasks"]], "aslm.model.devices.filter_wheel": [[124, 0, 0, "-", "filter_wheel_asi"], [127, 0, 0, "-", "filter_wheel_base"], [129, 0, 0, "-", "filter_wheel_sutter"], [132, 0, 0, "-", "filter_wheel_synthetic"]], "aslm.model.devices.filter_wheel.filter_wheel_asi": [[125, 2, 1, "", "ASIFilterWheel"], [126, 5, 1, "", "baudrate"], [126, 1, 1, "", "build_filter_wheel_connection"]], "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel": [[125, 3, 1, "", "__init__"], [125, 3, 1, "", "check_if_filter_in_filter_dictionary"], [125, 3, 1, "", "close"], [125, 3, 1, "", "filter_change_delay"], [125, 3, 1, "", "set_filter"]], "aslm.model.devices.filter_wheel.filter_wheel_base": [[128, 2, 1, "", "FilterWheelBase"]], "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase": [[128, 3, 1, "", "__init__"], [128, 3, 1, "id0", "check_if_filter_in_filter_dictionary"], [128, 5, 1, "", "filter_dictionary"], [128, 5, 1, "", "wheel_position"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter": [[130, 2, 1, "", "SutterFilterWheel"], [131, 5, 1, "", "baudrate"], [131, 1, 1, "", "build_filter_wheel_connection"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel": [[130, 3, 1, "", "__init__"], [130, 3, 1, "id0", "check_if_filter_in_filter_dictionary"], [130, 3, 1, "id1", "close"], [130, 3, 1, "id2", "filter_change_delay"], [130, 5, 1, "", "filter_dictionary"], [130, 5, 1, "", "number_of_filter_wheels"], [130, 3, 1, "id3", "read"], [130, 3, 1, "", "set_filter"], [130, 5, 1, "", "wheel_position"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic": [[133, 2, 1, "", "SyntheticFilterWheel"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel": [[133, 3, 1, "", "__init__"], [133, 5, 1, "", "baudrate"], [133, 3, 1, "", "check_if_filter_in_filter_dictionary"], [133, 3, 1, "", "close"], [133, 5, 1, "", "comport"], [133, 3, 1, "", "filter_change_delay"], [133, 5, 1, "", "filter_dictionary"], [133, 5, 1, "", "number_of_filter_wheels"], [133, 3, 1, "", "read"], [133, 3, 1, "", "set_filter"], [133, 5, 1, "", "wheel_position"]], "aslm.model.devices.galvo": [[135, 0, 0, "-", "galvo_base"], [137, 0, 0, "-", "galvo_synthetic"]], "aslm.model.devices.galvo.galvo_base": [[136, 2, 1, "", "GalvoBase"]], "aslm.model.devices.galvo.galvo_base.GalvoBase": [[136, 3, 1, "", "__init__"], [136, 3, 1, "", "adjust"], [136, 5, 1, "", "camera_delay_percent"], [136, 3, 1, "id0", "close_task"], [136, 5, 1, "", "configuration"], [136, 5, 1, "", "device_config"], [136, 5, 1, "", "galvo_max_voltage"], [136, 5, 1, "", "galvo_min_voltage"], [136, 5, 1, "", "galvo_name"], [136, 5, 1, "", "microscope_name"], [136, 3, 1, "id1", "prepare_task"], [136, 5, 1, "", "remote_focus_ramp_falling"], [136, 5, 1, "", "sample_rate"], [136, 5, 1, "", "samples"], [136, 3, 1, "id2", "start_task"], [136, 3, 1, "id3", "stop_task"], [136, 5, 1, "", "sweep_time"], [136, 5, 1, "", "waveform_dict"]], "aslm.model.devices.galvo.galvo_synthetic": [[138, 2, 1, "", "SyntheticGalvo"]], "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo": [[138, 5, 1, "", "None"], [138, 3, 1, "", "__init__"], [138, 3, 1, "", "adjust"], [138, 3, 1, "id0", "close_task"], [138, 3, 1, "id1", "prepare_task"], [138, 3, 1, "id2", "start_task"], [138, 3, 1, "id3", "stop_task"]], "aslm.model.devices.joystick": [[140, 0, 0, "-", "joystick_base"], [142, 0, 0, "-", "joystick_synthetic"]], "aslm.model.devices.joystick.joystick_base": [[141, 2, 1, "", "JoystickBase"]], "aslm.model.devices.joystick.joystick_base.JoystickBase": [[141, 3, 1, "", "__init__"]], "aslm.model.devices.joystick.joystick_synthetic": [[143, 2, 1, "", "SyntheticJoystick"]], "aslm.model.devices.joystick.joystick_synthetic.SyntheticJoystick": [[143, 3, 1, "", "__init__"]], "aslm.model.devices.lasers": [[145, 0, 0, "-", "laser_base"], [147, 0, 0, "-", "laser_synthetic"], [149, 0, 0, "-", "laser_trigger_base"], [151, 0, 0, "-", "laser_trigger_synthetic"]], "aslm.model.devices.lasers.laser_base": [[146, 2, 1, "", "LaserBase"]], "aslm.model.devices.lasers.laser_base.LaserBase": [[146, 3, 1, "", "__init__"], [146, 3, 1, "", "close"], [146, 3, 1, "", "initialize_laser"]], "aslm.model.devices.lasers.laser_synthetic": [[148, 2, 1, "", "SyntheticLaser"]], "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser": [[148, 3, 1, "", "__init__"], [148, 3, 1, "", "close"], [148, 3, 1, "", "initialize_laser"]], "aslm.model.devices.lasers.laser_trigger_base": [[150, 2, 1, "", "LaserTriggerBase"]], "aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase": [[150, 3, 1, "", "__init__"], [150, 3, 1, "", "enable_high_resolution_laser"], [150, 3, 1, "", "enable_low_resolution_laser"], [150, 3, 1, "", "set_laser_analog_voltage"]], "aslm.model.devices.lasers.laser_trigger_synthetic": [[152, 2, 1, "", "SyntheticLaserTriggers"]], "aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers": [[152, 3, 1, "", "__init__"], [152, 3, 1, "", "enable_high_resolution_laser"], [152, 3, 1, "", "enable_low_resolution_laser"], [152, 3, 1, "", "set_laser_analog_voltage"]], "aslm.model.devices.objectives": [[154, 2, 1, "", "Objective"]], "aslm.model.devices.objectives.Objective": [[154, 3, 1, "", "__init__"], [154, 3, 1, "", "calculate_entrance_pupil"]], "aslm.model.devices.remote_focus": [[156, 0, 0, "-", "remote_focus_base"], [158, 0, 0, "-", "remote_focus_equipment_solutions"], [160, 0, 0, "-", "remote_focus_synthetic"]], "aslm.model.devices.remote_focus.remote_focus_base": [[157, 2, 1, "", "RemoteFocusBase"]], "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase": [[157, 3, 1, "", "__init__"], [157, 3, 1, "", "adjust"], [157, 5, 1, "", "camera_delay_percent"], [157, 3, 1, "", "close_task"], [157, 5, 1, "", "configuration"], [157, 5, 1, "", "device_config"], [157, 5, 1, "", "microscope_name"], [157, 3, 1, "id0", "prepare_task"], [157, 5, 1, "", "remote_focus_delay"], [157, 5, 1, "", "remote_focus_max_voltage"], [157, 5, 1, "", "remote_focus_min_voltage"], [157, 5, 1, "", "remote_focus_ramp_falling"], [157, 5, 1, "", "sample_rate"], [157, 5, 1, "", "samples"], [157, 3, 1, "id1", "start_task"], [157, 3, 1, "id2", "stop_task"], [157, 5, 1, "", "sweep_time"], [157, 5, 1, "", "waveform_dict"]], "aslm.model.devices.remote_focus.remote_focus_equipment_solutions": [[159, 2, 1, "", "RemoteFocusEquipmentSolutions"]], "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions": [[159, 3, 1, "", "__init__"], [159, 3, 1, "", "adjust"], [159, 5, 1, "", "baud_rate"], [159, 5, 1, "", "byte_size"], [159, 3, 1, "id0", "close_connection"], [159, 5, 1, "", "comport"], [159, 5, 1, "", "debug"], [159, 5, 1, "", "parity"], [159, 3, 1, "", "prepare_task"], [159, 3, 1, "id1", "read_bytes"], [159, 5, 1, "", "read_on_init"], [159, 3, 1, "id2", "send_command"], [159, 3, 1, "", "start_task"], [159, 5, 1, "", "stop_bits"], [159, 3, 1, "", "stop_task"], [159, 5, 1, "", "timeout"]], "aslm.model.devices.remote_focus.remote_focus_synthetic": [[161, 2, 1, "", "SyntheticRemoteFocus"]], "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus": [[161, 3, 1, "", "__init__"], [161, 3, 1, "", "adjust"], [161, 3, 1, "id0", "close_task"], [161, 5, 1, "", "configuration"], [161, 5, 1, "", "device_connection"], [161, 5, 1, "", "microscope_name"], [161, 3, 1, "id1", "prepare_task"], [161, 3, 1, "id2", "start_task"], [161, 3, 1, "id3", "stop_task"]], "aslm.model.devices.shutter": [[163, 0, 0, "-", "laser_shutter_base"], [165, 0, 0, "-", "laser_shutter_synthetic"]], "aslm.model.devices.shutter.laser_shutter_base": [[164, 2, 1, "", "ShutterBase"]], "aslm.model.devices.shutter.laser_shutter_base.ShutterBase": [[164, 3, 1, "", "__init__"], [164, 5, 1, "", "configuration"], [164, 5, 1, "", "device_connection"], [164, 5, 1, "", "microscope_name"]], "aslm.model.devices.shutter.laser_shutter_synthetic": [[166, 2, 1, "", "SyntheticShutter"]], "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter": [[166, 3, 1, "", "__init__"], [166, 3, 1, "", "close_shutters"], [166, 5, 1, "", "configuration"], [166, 5, 1, "", "device_connection"], [166, 5, 1, "", "microscope_name"], [166, 3, 1, "", "open_left"], [166, 3, 1, "", "open_right"], [166, 3, 1, "", "state"]], "aslm.model.devices.stages": [[168, 0, 0, "-", "stage_asi"], [171, 0, 0, "-", "stage_base"], [173, 0, 0, "-", "stage_galvo"], [175, 0, 0, "-", "stage_mcl"], [178, 0, 0, "-", "stage_pi"], [181, 0, 0, "-", "stage_sutter"], [184, 0, 0, "-", "stage_synthetic"], [186, 0, 0, "-", "stage_tl_kcube_inertial"]], "aslm.model.devices.stages.stage_asi": [[169, 2, 1, "", "ASIStage"], [170, 1, 1, "", "build_ASI_Stage_connection"]], "aslm.model.devices.stages.stage_asi.ASIStage": [[169, 3, 1, "", "__init__"], [169, 5, 1, "", "axes_mapping"], [169, 5, 1, "", "default_speed"], [169, 5, 1, "", "f_max"], [169, 5, 1, "", "f_min"], [169, 5, 1, "", "f_pos"], [169, 3, 1, "id0", "get_abs_position"], [169, 3, 1, "id1", "get_axis_position"], [169, 3, 1, "id2", "get_position_dict"], [169, 3, 1, "id3", "get_speed"], [169, 3, 1, "id4", "move_absolute"], [169, 3, 1, "id5", "move_axis_absolute"], [169, 5, 1, "", "position_dict"], [169, 3, 1, "id6", "report_position"], [169, 3, 1, "id7", "scanr"], [169, 3, 1, "id8", "set_speed"], [169, 3, 1, "id9", "start_scan"], [169, 3, 1, "id10", "stop"], [169, 3, 1, "id11", "stop_scan"], [169, 5, 1, "", "theta_max"], [169, 5, 1, "", "theta_min"], [169, 5, 1, "", "theta_pos"], [169, 3, 1, "id12", "verify_abs_position"], [169, 5, 1, "", "x_max"], [169, 5, 1, "", "x_min"], [169, 5, 1, "", "x_pos"], [169, 5, 1, "", "y_max"], [169, 5, 1, "", "y_min"], [169, 5, 1, "", "y_pos"], [169, 5, 1, "", "z_max"], [169, 5, 1, "", "z_min"], [169, 5, 1, "", "z_pos"]], "aslm.model.devices.stages.stage_base": [[172, 2, 1, "", "StageBase"]], "aslm.model.devices.stages.stage_base.StageBase": [[172, 3, 1, "", "__init__"], [172, 5, 1, "", "axes_mapping"], [172, 5, 1, "", "f_max"], [172, 5, 1, "", "f_min"], [172, 5, 1, "", "f_pos"], [172, 3, 1, "id0", "get_abs_position"], [172, 3, 1, "id1", "get_position_dict"], [172, 3, 1, "id2", "stop"], [172, 5, 1, "", "theta_max"], [172, 5, 1, "", "theta_min"], [172, 5, 1, "", "theta_pos"], [172, 3, 1, "id3", "verify_abs_position"], [172, 5, 1, "", "x_max"], [172, 5, 1, "", "x_min"], [172, 5, 1, "", "x_pos"], [172, 5, 1, "", "y_max"], [172, 5, 1, "", "y_min"], [172, 5, 1, "", "y_pos"], [172, 5, 1, "", "z_max"], [172, 5, 1, "", "z_min"], [172, 5, 1, "", "z_pos"]], "aslm.model.devices.stages.stage_galvo": [[174, 2, 1, "", "GalvoNIStage"]], "aslm.model.devices.stages.stage_galvo.GalvoNIStage": [[174, 3, 1, "", "__init__"], [174, 5, 1, "", "axes_mapping"], [174, 3, 1, "", "create_position_dict"], [174, 3, 1, "id0", "get_abs_position"], [174, 3, 1, "", "get_position_dict"], [174, 3, 1, "", "move_absolute"], [174, 3, 1, "", "move_axis_absolute"], [174, 3, 1, "", "report_position"], [174, 3, 1, "id1", "stop"], [174, 3, 1, "", "verify_abs_position"]], "aslm.model.devices.stages.stage_mcl": [[176, 2, 1, "", "MCLStage"], [177, 1, 1, "", "build_MCLStage_connection"]], "aslm.model.devices.stages.stage_mcl.MCLStage": [[176, 3, 1, "", "__init__"], [176, 5, 1, "", "axes_mapping"], [176, 3, 1, "", "get_abs_position"], [176, 3, 1, "", "get_position_dict"], [176, 3, 1, "", "move_absolute"], [176, 3, 1, "", "move_axis_absolute"], [176, 3, 1, "", "report_position"], [176, 3, 1, "", "stop"], [176, 3, 1, "", "verify_abs_position"]], "aslm.model.devices.stages.stage_pi": [[179, 2, 1, "", "PIStage"], [180, 1, 1, "", "build_PIStage_connection"]], "aslm.model.devices.stages.stage_pi.PIStage": [[179, 3, 1, "", "__init__"], [179, 5, 1, "", "axes_mapping"], [179, 3, 1, "id0", "get_abs_position"], [179, 3, 1, "id1", "get_position_dict"], [179, 3, 1, "id2", "move_absolute"], [179, 3, 1, "id3", "move_axis_absolute"], [179, 5, 1, "", "pi_axes"], [179, 5, 1, "", "pi_device"], [179, 5, 1, "", "pi_tools"], [179, 3, 1, "id4", "report_position"], [179, 3, 1, "id5", "stop"], [179, 3, 1, "", "verify_abs_position"], [179, 3, 1, "", "wait_on_target"]], "aslm.model.devices.stages.stage_sutter": [[182, 2, 1, "", "SutterStage"], [183, 1, 1, "", "build_MP285_connection"]], "aslm.model.devices.stages.stage_sutter.SutterStage": [[182, 3, 1, "", "__init__"], [182, 5, 1, "", "axes_mapping"], [182, 3, 1, "", "close"], [182, 3, 1, "", "get_abs_position"], [182, 3, 1, "", "get_position_dict"], [182, 3, 1, "", "move_absolute"], [182, 3, 1, "", "move_axis_absolute"], [182, 3, 1, "", "read"], [182, 3, 1, "", "report_position"], [182, 5, 1, "", "resolution"], [182, 5, 1, "", "speed"], [182, 5, 1, "", "stage"], [182, 3, 1, "", "stop"], [182, 5, 1, "", "sutter_axes"], [182, 3, 1, "", "verify_abs_position"]], "aslm.model.devices.stages.stage_synthetic": [[185, 2, 1, "", "SyntheticStage"]], "aslm.model.devices.stages.stage_synthetic.SyntheticStage": [[185, 3, 1, "", "__init__"], [185, 5, 1, "", "axes_mapping"], [185, 3, 1, "", "get_abs_position"], [185, 3, 1, "", "get_position_dict"], [185, 3, 1, "", "move_absolute"], [185, 3, 1, "", "move_axis_absolute"], [185, 3, 1, "", "stop"], [185, 3, 1, "", "verify_abs_position"]], "aslm.model.devices.stages.stage_tl_kcube_inertial": [[187, 2, 1, "", "TLKIMStage"], [188, 1, 1, "", "build_TLKIMStage_connection"]], "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage": [[187, 3, 1, "", "__init__"], [187, 5, 1, "", "axes_mapping"], [187, 3, 1, "", "get_abs_position"], [187, 3, 1, "", "get_position_dict"], [187, 3, 1, "", "move_absolute"], [187, 3, 1, "", "move_axis_absolute"], [187, 3, 1, "", "report_position"], [187, 3, 1, "", "stop"], [187, 3, 1, "", "verify_abs_position"]], "aslm.model.devices.zoom": [[190, 0, 0, "-", "zoom_base"], [192, 0, 0, "-", "zoom_synthetic"]], "aslm.model.devices.zoom.zoom_base": [[191, 2, 1, "", "ZoomBase"]], "aslm.model.devices.zoom.zoom_base.ZoomBase": [[191, 3, 1, "", "__init__"], [191, 3, 1, "", "build_stage_dict"], [191, 3, 1, "", "move"], [191, 3, 1, "", "read_position"], [191, 3, 1, "", "set_zoom"]], "aslm.model.devices.zoom.zoom_synthetic": [[193, 2, 1, "", "SyntheticZoom"]], "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom": [[193, 3, 1, "", "__init__"], [193, 3, 1, "", "build_stage_dict"], [193, 3, 1, "id0", "move"], [193, 3, 1, "id1", "read_position"], [193, 3, 1, "id2", "set_zoom"]], "aslm.model.dummy": [[195, 2, 1, "", "DummyController"], [196, 2, 1, "", "DummyDevice"], [197, 2, 1, "", "DummyMicroscope"], [198, 2, 1, "", "DummyModel"]], "aslm.model.dummy.DummyController": [[195, 3, 1, "", "__init__"], [195, 3, 1, "", "execute"], [195, 3, 1, "", "pop"]], "aslm.model.dummy.DummyDevice": [[196, 3, 1, "", "__init__"], [196, 3, 1, "", "clear"], [196, 5, 1, "", "data_pipe"], [196, 3, 1, "", "generate_message"], [196, 3, 1, "", "listen"], [196, 3, 1, "", "sendout"], [196, 3, 1, "id0", "setup"], [196, 3, 1, "", "shutdown"], [196, 5, 1, "", "signal_pipe"]], "aslm.model.dummy.DummyMicroscope": [[197, 3, 1, "", "__init__"], [197, 5, 1, "", "data_pipe"], [197, 3, 1, "", "setup"], [197, 3, 1, "", "shutdown"], [197, 5, 1, "", "signal_pipe"]], "aslm.model.dummy.DummyModel": [[198, 3, 1, "", "__init__"], [198, 5, 1, "", "configuration"], [198, 5, 1, "", "data"], [198, 5, 1, "", "data_container"], [198, 3, 1, "id0", "data_func"], [198, 5, 1, "", "data_pipe"], [198, 5, 1, "", "data_thread"], [198, 5, 1, "", "frame_id"], [198, 5, 1, "", "signal_container"], [198, 3, 1, "", "signal_func"], [198, 5, 1, "", "signal_pipe"], [198, 5, 1, "", "signal_thread"], [198, 3, 1, "", "start"], [198, 5, 1, "", "stop_flag"]], "aslm.model.features": [[200, 0, 0, "-", "auto_tile_scan"], [202, 0, 0, "-", "autofocus"], [205, 0, 0, "-", "common_features"], [216, 0, 0, "-", "constant_velocity_acquisition"], [218, 0, 0, "-", "dummy_detective"], [220, 0, 0, "-", "feature_container"], [231, 0, 0, "-", "image_writer"], [233, 0, 0, "-", "restful_features"], [236, 0, 0, "-", "volume_search"]], "aslm.model.features.auto_tile_scan": [[201, 2, 1, "", "CalculateFocusRange"]], "aslm.model.features.auto_tile_scan.CalculateFocusRange": [[201, 3, 1, "", "__init__"]], "aslm.model.features.autofocus": [[203, 2, 1, "", "Autofocus"], [204, 1, 1, "", "power_tent"]], "aslm.model.features.autofocus.Autofocus": [[203, 3, 1, "", "__init__"], [203, 5, 1, "", "autofocus_frame_queue"], [203, 5, 1, "", "autofocus_pos_queue"], [203, 5, 1, "", "coarse_step_size"], [203, 5, 1, "", "coarse_steps"], [203, 3, 1, "", "end_func_data"], [203, 3, 1, "", "end_func_signal"], [203, 5, 1, "", "f_frame_id"], [203, 5, 1, "", "f_pos"], [203, 5, 1, "", "fine_pos_offset"], [203, 5, 1, "", "fine_step_size"], [203, 5, 1, "", "focus_pos"], [203, 5, 1, "", "frame_num"], [203, 3, 1, "", "get_autofocus_frame_num"], [203, 5, 1, "", "get_frames_num"], [203, 3, 1, "", "get_steps"], [203, 3, 1, "", "in_func_data"], [203, 3, 1, "", "in_func_signal"], [203, 5, 1, "", "init_pos"], [203, 5, 1, "", "max_entropy"], [203, 5, 1, "", "plot_data"], [203, 3, 1, "", "pre_func_data"], [203, 3, 1, "", "pre_func_signal"], [203, 3, 1, "", "robust_autofocus"], [203, 3, 1, "id0", "run"], [203, 5, 1, "", "signal_id"], [203, 5, 1, "", "target_channel"], [203, 5, 1, "", "target_frame_id"], [203, 5, 1, "", "total_frame_num"]], "aslm.model.features.common_features": [[206, 2, 1, "", "ChangeResolution"], [207, 2, 1, "", "ConProAcquisition"], [208, 2, 1, "", "FindTissueSimple2D"], [209, 2, 1, "", "LoopByCount"], [210, 2, 1, "", "MoveToNextPositionInMultiPostionTable"], [211, 2, 1, "", "PrepareNextChannel"], [212, 2, 1, "", "Snap"], [213, 2, 1, "", "StackPause"], [214, 2, 1, "", "WaitToContinue"], [215, 2, 1, "", "ZStackAcquisition"]], "aslm.model.features.common_features.ChangeResolution": [[206, 3, 1, "", "__init__"]], "aslm.model.features.common_features.ConProAcquisition": [[207, 3, 1, "", "__init__"]], "aslm.model.features.common_features.FindTissueSimple2D": [[208, 3, 1, "", "__init__"]], "aslm.model.features.common_features.LoopByCount": [[209, 3, 1, "", "__init__"]], "aslm.model.features.common_features.MoveToNextPositionInMultiPostionTable": [[210, 3, 1, "", "__init__"]], "aslm.model.features.common_features.PrepareNextChannel": [[211, 3, 1, "", "__init__"]], "aslm.model.features.common_features.Snap": [[212, 3, 1, "", "__init__"]], "aslm.model.features.common_features.StackPause": [[213, 3, 1, "", "__init__"]], "aslm.model.features.common_features.WaitToContinue": [[214, 3, 1, "", "__init__"]], "aslm.model.features.common_features.ZStackAcquisition": [[215, 3, 1, "", "__init__"]], "aslm.model.features.constant_velocity_acquisition": [[217, 2, 1, "", "ConstantVelocityAcquisition"]], "aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition": [[217, 3, 1, "", "__init__"], [217, 3, 1, "", "cleanup"], [217, 3, 1, "", "pre_func_signal"]], "aslm.model.features.dummy_detective": [[219, 2, 1, "", "Dummy_Detective"]], "aslm.model.features.dummy_detective.Dummy_Detective": [[219, 3, 1, "", "__init__"]], "aslm.model.features.feature_container": [[221, 2, 1, "", "Container"], [222, 2, 1, "", "DataContainer"], [223, 2, 1, "", "DataNode"], [224, 2, 1, "", "SignalContainer"], [225, 2, 1, "", "SignalNode"], [226, 2, 1, "", "TreeNode"], [227, 1, 1, "", "dummy_True"], [228, 1, 1, "", "dummy_func"], [229, 1, 1, "", "get_registered_funcs"], [230, 1, 1, "", "load_features"]], "aslm.model.features.feature_container.Container": [[221, 3, 1, "", "__init__"]], "aslm.model.features.feature_container.DataContainer": [[222, 3, 1, "", "__init__"]], "aslm.model.features.feature_container.DataNode": [[223, 3, 1, "", "__init__"]], "aslm.model.features.feature_container.SignalContainer": [[224, 3, 1, "", "__init__"]], "aslm.model.features.feature_container.SignalNode": [[225, 3, 1, "", "__init__"]], "aslm.model.features.feature_container.TreeNode": [[226, 3, 1, "", "__init__"]], "aslm.model.features.image_writer": [[232, 2, 1, "", "ImageWriter"]], "aslm.model.features.image_writer.ImageWriter": [[232, 3, 1, "", "__init__"], [232, 3, 1, "", "close"], [232, 5, 1, "id4", "current_time_point"], [232, 5, 1, "id5", "data_bffer"], [232, 5, 1, "id1", "data_source"], [232, 3, 1, "", "generate_image_name"], [232, 3, 1, "", "generate_meta_data"], [232, 5, 1, "id3", "mip"], [232, 5, 1, "id2", "mip_directory"], [232, 5, 1, "id0", "model"], [232, 3, 1, "", "save_image"]], "aslm.model.features.restful_features": [[234, 2, 1, "", "IlastikSegmentation"], [235, 1, 1, "", "prepare_service"]], "aslm.model.features.restful_features.IlastikSegmentation": [[234, 3, 1, "", "__init__"]], "aslm.model.features.volume_search": [[237, 2, 1, "", "VolumeSearch"], [238, 1, 1, "", "draw_box"]], "aslm.model.features.volume_search.VolumeSearch": [[237, 3, 1, "", "__init__"]], "aslm.model.metadata_sources": [[240, 0, 0, "-", "bdv_metadata"], [242, 0, 0, "-", "metadata"], [245, 0, 0, "-", "ome_tiff_metadata"]], "aslm.model.metadata_sources.bdv_metadata": [[241, 2, 1, "", "BigDataViewerMetadata"]], "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata": [[241, 3, 1, "", "__init__"], [241, 3, 1, "", "parse_bdv_xml"], [241, 4, 1, "", "shape"], [241, 3, 1, "", "stage_positions_to_affine_matrix"], [241, 3, 1, "", "to_xml"], [241, 4, 1, "", "voxel_size"], [241, 3, 1, "", "write_xml"]], "aslm.model.metadata_sources.metadata": [[243, 2, 1, "", "Metadata"], [244, 2, 1, "", "XMLMetadata"]], "aslm.model.metadata_sources.metadata.Metadata": [[243, 3, 1, "", "__init__"], [243, 4, 1, "", "shape"], [243, 4, 1, "", "voxel_size"]], "aslm.model.metadata_sources.metadata.XMLMetadata": [[244, 3, 1, "", "__init__"], [244, 4, 1, "", "shape"], [244, 3, 1, "", "to_xml"], [244, 4, 1, "", "voxel_size"], [244, 3, 1, "", "write_xml"]], "aslm.model.metadata_sources.ome_tiff_metadata": [[246, 2, 1, "", "OMETIFFMetadata"]], "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata": [[246, 3, 1, "", "__init__"], [246, 3, 1, "", "ome_tiff_xml_dict"], [246, 4, 1, "", "shape"], [246, 3, 1, "", "to_xml"], [246, 4, 1, "", "voxel_size"], [246, 3, 1, "", "write_xml"]], "aslm.model.microscope": [[248, 2, 1, "", "Microscope"]], "aslm.model.microscope.Microscope": [[248, 3, 1, "", "__init__"], [248, 3, 1, "", "assemble_device_config_lists"], [248, 3, 1, "", "calculate_all_waveform"], [248, 5, 1, "", "configuration"], [248, 5, 1, "", "daq"], [248, 5, 1, "", "data_buffer"], [248, 3, 1, "id0", "end_acquisition"], [248, 3, 1, "id1", "get_readout_time"], [248, 3, 1, "", "get_stage_position"], [248, 3, 1, "", "load_and_start_devices"], [248, 5, 1, "", "microscope_name"], [248, 3, 1, "", "move_stage"], [248, 3, 1, "id2", "move_stage_offset"], [248, 5, 1, "", "number_of_frames"], [248, 3, 1, "", "prepare_acquisition"], [248, 3, 1, "", "prepare_next_channel"], [248, 3, 1, "", "stop_stage"], [248, 3, 1, "id3", "update_data_buffer"]], "aslm.model.model": [[250, 2, 1, "", "Model"]], "aslm.model.model.Model": [[250, 5, 1, "", "USE_GPU"], [250, 3, 1, "", "__init__"], [250, 5, 1, "", "args"], [250, 3, 1, "", "change_resolution"], [250, 5, 1, "", "configuration"], [250, 3, 1, "id0", "create_pipe"], [250, 3, 1, "id1", "end_acquisition"], [250, 5, 1, "", "event_queue"], [250, 3, 1, "", "get_active_microscope"], [250, 3, 1, "id2", "get_data_buffer"], [250, 3, 1, "", "get_microscope_info"], [250, 3, 1, "", "get_offset_variance_maps"], [250, 3, 1, "", "get_readout_time"], [250, 3, 1, "", "get_stage_position"], [250, 3, 1, "", "load_images"], [250, 3, 1, "id3", "move_stage"], [250, 3, 1, "", "pause_data_thread"], [250, 3, 1, "id4", "prepare_acquisition"], [250, 3, 1, "id5", "release_pipe"], [250, 3, 1, "", "resume_data_thread"], [250, 3, 1, "", "run_acquisition"], [250, 3, 1, "id6", "run_command"], [250, 3, 1, "id7", "run_data_process"], [250, 3, 1, "id8", "run_live_acquisition"], [250, 3, 1, "", "run_single_acquisition"], [250, 3, 1, "", "run_single_channel_acquisition"], [250, 3, 1, "", "run_single_channel_acquisition_with_features"], [250, 3, 1, "", "run_z_stack_acquisition"], [250, 3, 1, "id9", "snap_image"], [250, 3, 1, "", "stop_stage"], [250, 3, 1, "id10", "update_data_buffer"], [250, 3, 1, "", "update_ilastik_setting"]], "aslm.model.waveforms": [[252, 1, 1, "", "camera_exposure"], [253, 1, 1, "", "dc_value"], [254, 1, 1, "", "remote_focus_ramp"], [255, 1, 1, "", "sawtooth"], [256, 1, 1, "", "sine_wave"], [257, 1, 1, "", "single_pulse"], [258, 1, 1, "", "smooth_waveform"], [259, 1, 1, "", "square"]], "aslm.tools": [[261, 0, 0, "-", "beams"], [265, 0, 0, "-", "common_dict_tools"], [267, 0, 0, "-", "common_functions"], [271, 0, 0, "-", "decorators"], [273, 0, 0, "-", "file_functions"], [277, 0, 0, "-", "image"], [279, 0, 0, "-", "image_loaders"], [281, 0, 0, "-", "main_functions"], [285, 0, 0, "-", "multipos_table_tools"], [290, 0, 0, "-", "project_stats"], [292, 0, 0, "-", "sdf"], [296, 0, 0, "-", "waveform_template_funcs"], [298, 0, 0, "-", "xml_tools"]], "aslm.tools.beams": [[262, 1, 1, "", "fit_gaussian_beam_error"], [263, 1, 1, "", "fit_gaussian_beam_mse"], [264, 1, 1, "", "gaussian_beam"]], "aslm.tools.common_dict_tools": [[266, 1, 1, "", "update_stage_dict"]], "aslm.tools.common_functions": [[268, 1, 1, "", "build_ref_name"], [269, 1, 1, "", "combine_funcs"], [270, 1, 1, "", "copy_proxy_object"]], "aslm.tools.decorators": [[272, 1, 1, "", "function_timer"]], "aslm.tools.file_functions": [[274, 1, 1, "", "create_save_path"], [275, 1, 1, "", "delete_folder"], [276, 1, 1, "", "save_yaml_file"]], "aslm.tools.image": [[278, 1, 1, "", "text_array"]], "aslm.tools.image_loaders": [[280, 2, 1, "", "LazyTiff"]], "aslm.tools.image_loaders.LazyTiff": [[280, 3, 1, "", "__init__"], [280, 4, 1, "", "shape"]], "aslm.tools.main_functions": [[282, 1, 1, "", "create_parser"], [283, 1, 1, "", "evaluate_parser_input_arguments"], [284, 1, 1, "", "identify_gpu"]], "aslm.tools.multipos_table_tools": [[286, 1, 1, "", "calc_num_tiles"], [287, 1, 1, "", "compute_tiles_from_bounding_box"], [288, 1, 1, "", "sign"], [289, 1, 1, "", "update_table"]], "aslm.tools.project_stats": [[291, 1, 1, "", "countlines"]], "aslm.tools.sdf": [[293, 1, 1, "", "box"], [294, 1, 1, "", "sphere"], [295, 1, 1, "", "volume_from_sdf"]], "aslm.tools.waveform_template_funcs": [[297, 1, 1, "", "get_waveform_template_parameters"]], "aslm.tools.xml_tools": [[299, 1, 1, "", "dict_to_xml"], [300, 1, 1, "", "parse_xml"]], "aslm.view": [[302, 0, 0, "-", "main_window_content"], [303, 0, 0, "-", "popups"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:property", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"aslm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 307, 308, 311, 313], "config": [0, 1, 2, 3, 4, 5, 6], "build_nested_dict": 2, "get_aslm_path": 3, "get_configuration_path": 4, "load_config": 5, "update_config_dict": 6, "control": [7, 8, 9, 10, 11, 12, 13, 317], "configuration_control": [8, 9], "configurationcontrol": 9, "thread_pool": [10, 11, 12, 13], "selflockthread": 11, "synchronizedthreadpool": 12, "threadwaitlist": 13, "model": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 312], "analysi": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55], "boundary_detect": [16, 17, 18, 19, 20], "binary_detect": 17, "find_tissue_boundary_2d": 18, "has_tissu": 19, "map_boundari": 20, "camera": [21, 22, 23, 24, 25, 109, 110, 111, 112, 113, 114, 115, 116, 117, 315, 317], "compute_flatfield_map": 22, "compute_noise_sigma": 23, "compute_scmos_offset_and_variance_map": 24, "compute_signal_to_nois": 25, "detect": [26, 27, 28, 29, 30, 31, 32, 33, 34, 35], "add_median_bord": 27, "combine_imag": 28, "log_detect": 29, "make_inside_imag": 30, "make_normalized_imag": 31, "make_sphere_3d": 32, "multiscale_surface_filter_3d": 33, "surface_filter_gauss_3d": 34, "three_level_segment": 35, "image_contrast": [36, 37, 38, 39, 40, 41], "estimate_and_correct_flatfield": 37, "estimate_image_resolut": 38, "fast_normalized_dct_shannon_entropi": 39, "image_intens": 40, "normalized_dct_shannon_entropi": 41, "image_decorrel": [42, 43, 44, 45, 46, 47, 48, 49, 50], "apodize_imag": 43, "get_correlation_coeffici": 44, "get_decorrelation_local_maxima": 45, "get_image_decorrel": 46, "get_radial_averag": 47, "image_to_polar": 48, "linear_map": 49, "main_image_decorr": 50, "image_transform": [51, 52, 53], "deskew_imag": 52, "initiate_gpu": 53, "spectral_unmix": [54, 55], "to_do": 55, "concurr": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74], "concurrency_tool": [57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "custodythread": 58, "fancythread": 59, "mytestclass": 60, "objectinsubprocess": 61, "politethread": 62, "resultthread": 63, "sharedndarrai": 64, "testobjectinsubprocess": 65, "testresultthreadandcustodythread": 66, "testsharedndarrai": 67, "proxy_object": [68, 69, 70, 71, 72], "proxymanag": 69, "proxyobject": 70, "launch_custody_thread": 71, "launch_thread": 72, "write_paramet": [73, 74], "write_param": 74, "data_sourc": [75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "bdv_data_sourc": [76, 77], "bigdataviewerdatasourc": 77, "datasourc": 79, "get_data_sourc": 80, "tiff_data_sourc": [81, 82], "tiffdatasourc": 82, "zarr_data_sourc": [83, 84], "zarrdatasourc": 84, "device_startup_funct": [85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "dummydeviceconnect": 86, "auto_redi": 87, "device_not_found": 88, "load_camera_connect": 89, "load_devic": 90, "load_filter_wheel_connect": 91, "load_stag": 92, "load_zoom_connect": 93, "start_camera": 94, "start_daq": 95, "start_filter_wheel": 96, "start_galvo": 97, "start_las": 98, "start_remote_focus_devic": 99, "start_shutt": 100, "start_stag": 101, "start_zoom": 102, "devic": [103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193], "api": [104, 105, 106, 107, 108, 306, 315], "coher": [105, 317], "dynamixel": [106, 317], "logitech": 107, "omicron": [108, 317], "camera_bas": [110, 111], "camerabas": 111, "camera_hamamatsu": [112, 113, 114], "hamamatsuorca": 113, "hamamatsuorcalightn": 114, "camera_synthet": [115, 116, 117], "syntheticcamera": 116, "syntheticcameracontrol": 117, "daq": [118, 119, 120, 121, 122, 315], "daq_bas": [119, 120], "daqbas": 120, "daq_synthet": [121, 122], "syntheticdaq": 122, "filter_wheel": [123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133], "filter_wheel_asi": [124, 125, 126], "asifilterwheel": 125, "build_filter_wheel_connect": [126, 131], "filter_wheel_bas": [127, 128], "filterwheelbas": 128, "filter_wheel_sutt": [129, 130, 131], "sutterfilterwheel": 130, "filter_wheel_synthet": [132, 133], "syntheticfilterwheel": 133, "galvo": [134, 135, 136, 137, 138, 315, 317], "galvo_bas": [135, 136], "galvobas": 136, "galvo_synthet": [137, 138], "syntheticgalvo": 138, "joystick": [139, 140, 141, 142, 143], "joystick_bas": [140, 141], "joystickbas": 141, "joystick_synthet": [142, 143], "syntheticjoystick": 143, "laser": [144, 145, 146, 147, 148, 149, 150, 151, 152, 315, 317], "laser_bas": [145, 146], "laserbas": 146, "laser_synthet": [147, 148], "syntheticlas": 148, "laser_trigger_bas": [149, 150], "lasertriggerbas": 150, "laser_trigger_synthet": [151, 152], "syntheticlasertrigg": 152, "object": [153, 154, 308], "remote_focu": [155, 156, 157, 158, 159, 160, 161], "remote_focus_bas": [156, 157], "remotefocusbas": 157, "remote_focus_equipment_solut": [158, 159], "remotefocusequipmentsolut": 159, "remote_focus_synthet": [160, 161], "syntheticremotefocu": 161, "shutter": [162, 163, 164, 165, 166, 315, 317], "laser_shutter_bas": [163, 164], "shutterbas": 164, "laser_shutter_synthet": [165, 166], "syntheticshutt": 166, "stage": [167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 307, 315, 317], "stage_asi": [168, 169, 170], "asistag": 169, "build_asi_stage_connect": 170, "stage_bas": [171, 172], "stagebas": 172, "stage_galvo": [173, 174], "galvonistag": 174, "stage_mcl": [175, 176, 177], "mclstage": 176, "build_mclstage_connect": 177, "stage_pi": [178, 179, 180], "pistag": 179, "build_pistage_connect": 180, "stage_sutt": [181, 182, 183], "sutterstag": 182, "build_mp285_connect": 183, "stage_synthet": [184, 185], "syntheticstag": 185, "stage_tl_kcube_inerti": [186, 187, 188], "tlkimstag": 187, "build_tlkimstage_connect": 188, "zoom": [189, 190, 191, 192, 193, 315, 317], "zoom_bas": [190, 191], "zoombas": 191, "zoom_synthet": [192, 193], "syntheticzoom": 193, "dummi": [194, 195, 196, 197, 198], "dummycontrol": 195, "dummydevic": 196, "dummymicroscop": 197, "dummymodel": 198, "featur": [199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 308, 312], "auto_tile_scan": [200, 201], "calculatefocusrang": 201, "autofocu": [202, 203, 204], "power_t": 204, "common_featur": [205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215], "changeresolut": 206, "conproacquisit": 207, "findtissuesimple2d": 208, "loopbycount": 209, "movetonextpositioninmultipostiont": 210, "preparenextchannel": 211, "snap": 212, "stackpaus": 213, "waittocontinu": 214, "zstackacquisit": 215, "constant_velocity_acquisit": [216, 217], "constantvelocityacquisit": 217, "dummy_detect": [218, 219], "feature_contain": [220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230], "contain": [221, 308], "datacontain": 222, "datanod": 223, "signalcontain": 224, "signalnod": 225, "treenod": 226, "dummy_tru": 227, "dummy_func": 228, "get_registered_func": 229, "load_featur": 230, "image_writ": [231, 232], "imagewrit": 232, "restful_featur": [233, 234, 235], "ilastiksegment": 234, "prepare_servic": 235, "volume_search": [236, 237, 238], "volumesearch": 237, "draw_box": 238, "metadata_sourc": [239, 240, 241, 242, 243, 244, 245, 246], "bdv_metadata": [240, 241], "bigdataviewermetadata": 241, "metadata": [242, 243, 244], "xmlmetadata": 244, "ome_tiff_metadata": [245, 246], "ometiffmetadata": 246, "microscop": [247, 248, 307, 313, 315], "waveform": [251, 252, 253, 254, 255, 256, 257, 258, 259, 315], "camera_exposur": 252, "dc_valu": 253, "remote_focus_ramp": 254, "sawtooth": 255, "sine_wav": 256, "single_puls": 257, "smooth_waveform": 258, "squar": 259, "tool": [260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300], "beam": [261, 262, 263, 264], "fit_gaussian_beam_error": 262, "fit_gaussian_beam_ms": 263, "gaussian_beam": 264, "common_dict_tool": [265, 266], "update_stage_dict": 266, "common_funct": [267, 268, 269, 270], "build_ref_nam": 268, "combine_func": 269, "copy_proxy_object": 270, "decor": [271, 272], "function_tim": 272, "file_funct": [273, 274, 275, 276], "create_save_path": 274, "delete_fold": 275, "save_yaml_fil": 276, "imag": [277, 278], "text_arrai": 278, "image_load": [279, 280], "lazytiff": 280, "main_funct": [281, 282, 283, 284], "create_pars": 282, "evaluate_parser_input_argu": 283, "identify_gpu": 284, "multipos_table_tool": [285, 286, 287, 288, 289], "calc_num_til": 286, "compute_tiles_from_bounding_box": 287, "sign": 288, "update_t": 289, "project_stat": [290, 291], "countlin": 291, "sdf": [292, 293, 294, 295], "box": 293, "sphere": 294, "volume_from_sdf": 295, "waveform_template_func": [296, 297], "get_waveform_template_paramet": 297, "xml_tool": [298, 299, 300], "dict_to_xml": 299, "parse_xml": 300, "view": [301, 302, 303], "main_window_cont": 302, "popup": 303, "refer": 306, "configur": [307, 315], "yaml": 307, "hardwar": [307, 310, 315, 317], "section": [307, 315], "gui": [307, 315], "The": 308, "write": 308, "custom": 308, "contribut": [309, 311], "guidelin": 309, "gener": 309, "principl": 309, "code": 309, "style": 309, "dictionari": 309, "pars": 309, "unit": [309, 310], "test": 309, "develop": 309, "mac": 309, "ad": [310, 312], "new": [310, 312], "scientif": 310, "how": 310, "add": 310, "implement": 313, "multiscal": 313, "upright": 313, "ct": 313, "v2": 313, "opm": 313, "autonom": 314, "softwar": [314, 315, 316], "light": 314, "microscopi": 314, "project": 314, "philosophi": 314, "content": 314, "author": 314, "index": 314, "search": 314, "file": 315, "remot": 315, "focu": 315, "filter": [315, 317], "wheel": [315, 317], "ax": 315, "definit": 315, "constant": 315, "other": 315, "templat": 315, "rest": 315, "instal": 316, "download": 316, "git": 316, "setup": 316, "your": 316, "python": 316, "environ": 316, "gpu": 316, "depend": 316, "troubleshoot": 316, "support": 317, "data": 317, "acquisit": 317, "card": 317, "ni": 317, "hamamatsu": 317, "photometr": 317, "voicecoil": 317, "equip": 317, "solut": 317, "thorlab": 317, "blink": 317, "asi": 317, "sutter": 317, "physik": 317, "instrument": 317, "analog": 317, "piezo": 317, "etc": 317, "deform": 317, "mirror": 317, "imagin": 317, "optic": 317, "galvanomet": 317, "cambridg": 317, "technologi": 317, "novanta": 317, "scannermax": 317, "mechan": 317, "user": 318, "guid": 318}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"aslm.config": [[0, "module-aslm.config"]], "aslm.config.config": [[1, "module-aslm.config.config"]], "aslm.config.config.build_nested_dict": [[2, "aslm-config-config-build-nested-dict"]], "aslm.config.config.get_aslm_path": [[3, "aslm-config-config-get-aslm-path"]], "aslm.config.config.get_configuration_paths": [[4, "aslm-config-config-get-configuration-paths"]], "aslm.config.config.load_configs": [[5, "aslm-config-config-load-configs"]], "aslm.config.config.update_config_dict": [[6, "aslm-config-config-update-config-dict"]], "aslm.controller": [[7, "module-aslm.controller"]], "aslm.controller.configuration_controller": [[8, "module-aslm.controller.configuration_controller"]], "aslm.controller.configuration_controller.ConfigurationController": [[9, "aslm-controller-configuration-controller-configurationcontroller"]], "aslm.controller.thread_pool": [[10, "module-aslm.controller.thread_pool"]], "aslm.controller.thread_pool.SelfLockThread": [[11, "aslm-controller-thread-pool-selflockthread"]], "aslm.controller.thread_pool.SynchronizedThreadPool": [[12, "aslm-controller-thread-pool-synchronizedthreadpool"]], "aslm.controller.thread_pool.ThreadWaitlist": [[13, "aslm-controller-thread-pool-threadwaitlist"]], "aslm.model": [[14, "module-aslm.model"]], "aslm.model.analysis": [[15, "module-aslm.model.analysis"]], "aslm.model.analysis.boundary_detect": [[16, "module-aslm.model.analysis.boundary_detect"]], "aslm.model.analysis.boundary_detect.binary_detect": [[17, "aslm-model-analysis-boundary-detect-binary-detect"]], "aslm.model.analysis.boundary_detect.find_tissue_boundary_2d": [[18, "aslm-model-analysis-boundary-detect-find-tissue-boundary-2d"]], "aslm.model.analysis.boundary_detect.has_tissue": [[19, "aslm-model-analysis-boundary-detect-has-tissue"]], "aslm.model.analysis.boundary_detect.map_boundary": [[20, "aslm-model-analysis-boundary-detect-map-boundary"]], "aslm.model.analysis.camera": [[21, "module-aslm.model.analysis.camera"]], "aslm.model.analysis.camera.compute_flatfield_map": [[22, "aslm-model-analysis-camera-compute-flatfield-map"]], "aslm.model.analysis.camera.compute_noise_sigma": [[23, "aslm-model-analysis-camera-compute-noise-sigma"]], "aslm.model.analysis.camera.compute_scmos_offset_and_variance_map": [[24, "aslm-model-analysis-camera-compute-scmos-offset-and-variance-map"]], "aslm.model.analysis.camera.compute_signal_to_noise": [[25, "aslm-model-analysis-camera-compute-signal-to-noise"]], "aslm.model.analysis.detection": [[26, "module-aslm.model.analysis.detection"]], "aslm.model.analysis.detection.add_median_border": [[27, "aslm-model-analysis-detection-add-median-border"]], "aslm.model.analysis.detection.combine_images": [[28, "aslm-model-analysis-detection-combine-images"]], "aslm.model.analysis.detection.log_detection": [[29, "aslm-model-analysis-detection-log-detection"]], "aslm.model.analysis.detection.make_inside_image": [[30, "aslm-model-analysis-detection-make-inside-image"]], "aslm.model.analysis.detection.make_normalized_image": [[31, "aslm-model-analysis-detection-make-normalized-image"]], "aslm.model.analysis.detection.make_sphere_3D": [[32, "aslm-model-analysis-detection-make-sphere-3d"]], "aslm.model.analysis.detection.multiscale_surface_filter_3D": [[33, "aslm-model-analysis-detection-multiscale-surface-filter-3d"]], "aslm.model.analysis.detection.surface_filter_gauss_3D": [[34, "aslm-model-analysis-detection-surface-filter-gauss-3d"]], "aslm.model.analysis.detection.three_level_segmentation": [[35, "aslm-model-analysis-detection-three-level-segmentation"]], "aslm.model.analysis.image_contrast": [[36, "module-aslm.model.analysis.image_contrast"]], "aslm.model.analysis.image_contrast.estimate_and_correct_flatfield": [[37, "aslm-model-analysis-image-contrast-estimate-and-correct-flatfield"]], "aslm.model.analysis.image_contrast.estimate_image_resolution": [[38, "aslm-model-analysis-image-contrast-estimate-image-resolution"]], "aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy": [[39, "aslm-model-analysis-image-contrast-fast-normalized-dct-shannon-entropy"]], "aslm.model.analysis.image_contrast.image_intensity": [[40, "aslm-model-analysis-image-contrast-image-intensity"]], "aslm.model.analysis.image_contrast.normalized_dct_shannon_entropy": [[41, "aslm-model-analysis-image-contrast-normalized-dct-shannon-entropy"]], "aslm.model.analysis.image_decorrelation": [[42, "module-aslm.model.analysis.image_decorrelation"]], "aslm.model.analysis.image_decorrelation.apodize_image": [[43, "aslm-model-analysis-image-decorrelation-apodize-image"]], "aslm.model.analysis.image_decorrelation.get_correlation_coefficient": [[44, "aslm-model-analysis-image-decorrelation-get-correlation-coefficient"]], "aslm.model.analysis.image_decorrelation.get_decorrelation_local_maxima": [[45, "aslm-model-analysis-image-decorrelation-get-decorrelation-local-maxima"]], "aslm.model.analysis.image_decorrelation.get_image_decorrelation": [[46, "aslm-model-analysis-image-decorrelation-get-image-decorrelation"]], "aslm.model.analysis.image_decorrelation.get_radial_average": [[47, "aslm-model-analysis-image-decorrelation-get-radial-average"]], "aslm.model.analysis.image_decorrelation.image_to_polar": [[48, "aslm-model-analysis-image-decorrelation-image-to-polar"]], "aslm.model.analysis.image_decorrelation.linear_map": [[49, "aslm-model-analysis-image-decorrelation-linear-map"]], "aslm.model.analysis.image_decorrelation.main_image_decorr": [[50, "aslm-model-analysis-image-decorrelation-main-image-decorr"]], "aslm.model.analysis.image_transform": [[51, "module-aslm.model.analysis.image_transform"]], "aslm.model.analysis.image_transform.deskew_image": [[52, "aslm-model-analysis-image-transform-deskew-image"]], "aslm.model.analysis.image_transform.initiate_gpu": [[53, "aslm-model-analysis-image-transform-initiate-gpu"]], "aslm.model.analysis.spectral_unmixing": [[54, "module-aslm.model.analysis.spectral_unmixing"]], "aslm.model.analysis.spectral_unmixing.to_do": [[55, "aslm-model-analysis-spectral-unmixing-to-do"]], "aslm.model.concurrency": [[56, "module-aslm.model.concurrency"]], "aslm.model.concurrency.concurrency_tools": [[57, "module-aslm.model.concurrency.concurrency_tools"]], "aslm.model.concurrency.concurrency_tools.CustodyThread": [[58, "aslm-model-concurrency-concurrency-tools-custodythread"]], "aslm.model.concurrency.concurrency_tools.FancyThread": [[59, "aslm-model-concurrency-concurrency-tools-fancythread"]], "aslm.model.concurrency.concurrency_tools.MyTestClass": [[60, "aslm-model-concurrency-concurrency-tools-mytestclass"]], "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess": [[61, "aslm-model-concurrency-concurrency-tools-objectinsubprocess"]], "aslm.model.concurrency.concurrency_tools.PoliteThread": [[62, "aslm-model-concurrency-concurrency-tools-politethread"]], "aslm.model.concurrency.concurrency_tools.ResultThread": [[63, "aslm-model-concurrency-concurrency-tools-resultthread"]], "aslm.model.concurrency.concurrency_tools.SharedNDArray": [[64, "aslm-model-concurrency-concurrency-tools-sharedndarray"]], "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess": [[65, "aslm-model-concurrency-concurrency-tools-testobjectinsubprocess"]], "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread": [[66, "aslm-model-concurrency-concurrency-tools-testresultthreadandcustodythread"]], "aslm.model.concurrency.concurrency_tools.TestSharedNDArray": [[67, "aslm-model-concurrency-concurrency-tools-testsharedndarray"]], "aslm.model.concurrency.proxy_objects": [[68, "module-aslm.model.concurrency.proxy_objects"]], "aslm.model.concurrency.proxy_objects.ProxyManager": [[69, "aslm-model-concurrency-proxy-objects-proxymanager"]], "aslm.model.concurrency.proxy_objects.ProxyObject": [[70, "aslm-model-concurrency-proxy-objects-proxyobject"]], "aslm.model.concurrency.proxy_objects.launch_custody_thread": [[71, "aslm-model-concurrency-proxy-objects-launch-custody-thread"]], "aslm.model.concurrency.proxy_objects.launch_thread": [[72, "aslm-model-concurrency-proxy-objects-launch-thread"]], "aslm.model.concurrency.write_parameters": [[73, "module-aslm.model.concurrency.write_parameters"]], "aslm.model.concurrency.write_parameters.write_Params": [[74, "aslm-model-concurrency-write-parameters-write-params"]], "aslm.model.data_sources": [[75, "module-aslm.model.data_sources"]], "aslm.model.data_sources.bdv_data_source": [[76, "module-aslm.model.data_sources.bdv_data_source"]], "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource": [[77, "aslm-model-data-sources-bdv-data-source-bigdataviewerdatasource"]], "aslm.model.data_sources.data_source": [[78, "module-aslm.model.data_sources.data_source"]], "aslm.model.data_sources.data_source.DataSource": [[79, "aslm-model-data-sources-data-source-datasource"]], "aslm.model.data_sources.get_data_source": [[80, "aslm-model-data-sources-get-data-source"]], "aslm.model.data_sources.tiff_data_source": [[81, "module-aslm.model.data_sources.tiff_data_source"]], "aslm.model.data_sources.tiff_data_source.TiffDataSource": [[82, "aslm-model-data-sources-tiff-data-source-tiffdatasource"]], "aslm.model.data_sources.zarr_data_source": [[83, "module-aslm.model.data_sources.zarr_data_source"]], "aslm.model.data_sources.zarr_data_source.ZarrDataSource": [[84, "aslm-model-data-sources-zarr-data-source-zarrdatasource"]], "aslm.model.device_startup_functions": [[85, "module-aslm.model.device_startup_functions"]], "aslm.model.device_startup_functions.DummyDeviceConnection": [[86, "aslm-model-device-startup-functions-dummydeviceconnection"]], "aslm.model.device_startup_functions.auto_redial": [[87, "aslm-model-device-startup-functions-auto-redial"]], "aslm.model.device_startup_functions.device_not_found": [[88, "aslm-model-device-startup-functions-device-not-found"]], "aslm.model.device_startup_functions.load_camera_connection": [[89, "aslm-model-device-startup-functions-load-camera-connection"]], "aslm.model.device_startup_functions.load_devices": [[90, "aslm-model-device-startup-functions-load-devices"]], "aslm.model.device_startup_functions.load_filter_wheel_connection": [[91, "aslm-model-device-startup-functions-load-filter-wheel-connection"]], "aslm.model.device_startup_functions.load_stages": [[92, "aslm-model-device-startup-functions-load-stages"]], "aslm.model.device_startup_functions.load_zoom_connection": [[93, "aslm-model-device-startup-functions-load-zoom-connection"]], "aslm.model.device_startup_functions.start_camera": [[94, "aslm-model-device-startup-functions-start-camera"]], "aslm.model.device_startup_functions.start_daq": [[95, "aslm-model-device-startup-functions-start-daq"]], "aslm.model.device_startup_functions.start_filter_wheel": [[96, "aslm-model-device-startup-functions-start-filter-wheel"]], "aslm.model.device_startup_functions.start_galvo": [[97, "aslm-model-device-startup-functions-start-galvo"]], "aslm.model.device_startup_functions.start_lasers": [[98, "aslm-model-device-startup-functions-start-lasers"]], "aslm.model.device_startup_functions.start_remote_focus_device": [[99, "aslm-model-device-startup-functions-start-remote-focus-device"]], "aslm.model.device_startup_functions.start_shutter": [[100, "aslm-model-device-startup-functions-start-shutter"]], "aslm.model.device_startup_functions.start_stage": [[101, "aslm-model-device-startup-functions-start-stage"]], "aslm.model.device_startup_functions.start_zoom": [[102, "aslm-model-device-startup-functions-start-zoom"]], "aslm.model.devices": [[103, "module-aslm.model.devices"]], "aslm.model.devices.APIs": [[104, "module-aslm.model.devices.APIs"]], "aslm.model.devices.APIs.coherent": [[105, "module-aslm.model.devices.APIs.coherent"]], "aslm.model.devices.APIs.dynamixel": [[106, "module-aslm.model.devices.APIs.dynamixel"]], "aslm.model.devices.APIs.logitech": [[107, "module-aslm.model.devices.APIs.logitech"]], "aslm.model.devices.APIs.omicron": [[108, "module-aslm.model.devices.APIs.omicron"]], "aslm.model.devices.camera": [[109, "module-aslm.model.devices.camera"]], "aslm.model.devices.camera.camera_base": [[110, "module-aslm.model.devices.camera.camera_base"]], "aslm.model.devices.camera.camera_base.CameraBase": [[111, "aslm-model-devices-camera-camera-base-camerabase"]], "aslm.model.devices.camera.camera_hamamatsu": [[112, "module-aslm.model.devices.camera.camera_hamamatsu"]], "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca": [[113, "aslm-model-devices-camera-camera-hamamatsu-hamamatsuorca"]], "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning": [[114, "aslm-model-devices-camera-camera-hamamatsu-hamamatsuorcalightning"]], "aslm.model.devices.camera.camera_synthetic": [[115, "module-aslm.model.devices.camera.camera_synthetic"]], "aslm.model.devices.camera.camera_synthetic.SyntheticCamera": [[116, "aslm-model-devices-camera-camera-synthetic-syntheticcamera"]], "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController": [[117, "aslm-model-devices-camera-camera-synthetic-syntheticcameracontroller"]], "aslm.model.devices.daq": [[118, "module-aslm.model.devices.daq"]], "aslm.model.devices.daq.daq_base": [[119, "module-aslm.model.devices.daq.daq_base"]], "aslm.model.devices.daq.daq_base.DAQBase": [[120, "aslm-model-devices-daq-daq-base-daqbase"]], "aslm.model.devices.daq.daq_synthetic": [[121, "module-aslm.model.devices.daq.daq_synthetic"]], "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ": [[122, "aslm-model-devices-daq-daq-synthetic-syntheticdaq"]], "aslm.model.devices.filter_wheel": [[123, "module-aslm.model.devices.filter_wheel"]], "aslm.model.devices.filter_wheel.filter_wheel_asi": [[124, "module-aslm.model.devices.filter_wheel.filter_wheel_asi"]], "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel": [[125, "aslm-model-devices-filter-wheel-filter-wheel-asi-asifilterwheel"]], "aslm.model.devices.filter_wheel.filter_wheel_asi.build_filter_wheel_connection": [[126, "aslm-model-devices-filter-wheel-filter-wheel-asi-build-filter-wheel-connection"]], "aslm.model.devices.filter_wheel.filter_wheel_base": [[127, "module-aslm.model.devices.filter_wheel.filter_wheel_base"]], "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase": [[128, "aslm-model-devices-filter-wheel-filter-wheel-base-filterwheelbase"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter": [[129, "module-aslm.model.devices.filter_wheel.filter_wheel_sutter"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel": [[130, "aslm-model-devices-filter-wheel-filter-wheel-sutter-sutterfilterwheel"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection": [[131, "aslm-model-devices-filter-wheel-filter-wheel-sutter-build-filter-wheel-connection"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic": [[132, "module-aslm.model.devices.filter_wheel.filter_wheel_synthetic"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel": [[133, "aslm-model-devices-filter-wheel-filter-wheel-synthetic-syntheticfilterwheel"]], "aslm.model.devices.galvo": [[134, "module-aslm.model.devices.galvo"]], "aslm.model.devices.galvo.galvo_base": [[135, "module-aslm.model.devices.galvo.galvo_base"]], "aslm.model.devices.galvo.galvo_base.GalvoBase": [[136, "aslm-model-devices-galvo-galvo-base-galvobase"]], "aslm.model.devices.galvo.galvo_synthetic": [[137, "module-aslm.model.devices.galvo.galvo_synthetic"]], "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo": [[138, "aslm-model-devices-galvo-galvo-synthetic-syntheticgalvo"]], "aslm.model.devices.joystick": [[139, "module-aslm.model.devices.joystick"]], "aslm.model.devices.joystick.joystick_base": [[140, "module-aslm.model.devices.joystick.joystick_base"]], "aslm.model.devices.joystick.joystick_base.JoystickBase": [[141, "aslm-model-devices-joystick-joystick-base-joystickbase"]], "aslm.model.devices.joystick.joystick_synthetic": [[142, "module-aslm.model.devices.joystick.joystick_synthetic"]], "aslm.model.devices.joystick.joystick_synthetic.SyntheticJoystick": [[143, "aslm-model-devices-joystick-joystick-synthetic-syntheticjoystick"]], "aslm.model.devices.lasers": [[144, "module-aslm.model.devices.lasers"]], "aslm.model.devices.lasers.laser_base": [[145, "module-aslm.model.devices.lasers.laser_base"]], "aslm.model.devices.lasers.laser_base.LaserBase": [[146, "aslm-model-devices-lasers-laser-base-laserbase"]], "aslm.model.devices.lasers.laser_synthetic": [[147, "module-aslm.model.devices.lasers.laser_synthetic"]], "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser": [[148, "aslm-model-devices-lasers-laser-synthetic-syntheticlaser"]], "aslm.model.devices.lasers.laser_trigger_base": [[149, "module-aslm.model.devices.lasers.laser_trigger_base"]], "aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase": [[150, "aslm-model-devices-lasers-laser-trigger-base-lasertriggerbase"]], "aslm.model.devices.lasers.laser_trigger_synthetic": [[151, "module-aslm.model.devices.lasers.laser_trigger_synthetic"]], "aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers": [[152, "aslm-model-devices-lasers-laser-trigger-synthetic-syntheticlasertriggers"]], "aslm.model.devices.objectives": [[153, "module-aslm.model.devices.objectives"]], "aslm.model.devices.objectives.Objective": [[154, "aslm-model-devices-objectives-objective"]], "aslm.model.devices.remote_focus": [[155, "module-aslm.model.devices.remote_focus"]], "aslm.model.devices.remote_focus.remote_focus_base": [[156, "module-aslm.model.devices.remote_focus.remote_focus_base"]], "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase": [[157, "aslm-model-devices-remote-focus-remote-focus-base-remotefocusbase"]], "aslm.model.devices.remote_focus.remote_focus_equipment_solutions": [[158, "module-aslm.model.devices.remote_focus.remote_focus_equipment_solutions"]], "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions": [[159, "aslm-model-devices-remote-focus-remote-focus-equipment-solutions-remotefocusequipmentsolutions"]], "aslm.model.devices.remote_focus.remote_focus_synthetic": [[160, "module-aslm.model.devices.remote_focus.remote_focus_synthetic"]], "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus": [[161, "aslm-model-devices-remote-focus-remote-focus-synthetic-syntheticremotefocus"]], "aslm.model.devices.shutter": [[162, "module-aslm.model.devices.shutter"]], "aslm.model.devices.shutter.laser_shutter_base": [[163, "module-aslm.model.devices.shutter.laser_shutter_base"]], "aslm.model.devices.shutter.laser_shutter_base.ShutterBase": [[164, "aslm-model-devices-shutter-laser-shutter-base-shutterbase"]], "aslm.model.devices.shutter.laser_shutter_synthetic": [[165, "module-aslm.model.devices.shutter.laser_shutter_synthetic"]], "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter": [[166, "aslm-model-devices-shutter-laser-shutter-synthetic-syntheticshutter"]], "aslm.model.devices.stages": [[167, "module-aslm.model.devices.stages"]], "aslm.model.devices.stages.stage_asi": [[168, "module-aslm.model.devices.stages.stage_asi"]], "aslm.model.devices.stages.stage_asi.ASIStage": [[169, "aslm-model-devices-stages-stage-asi-asistage"]], "aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection": [[170, "aslm-model-devices-stages-stage-asi-build-asi-stage-connection"]], "aslm.model.devices.stages.stage_base": [[171, "module-aslm.model.devices.stages.stage_base"]], "aslm.model.devices.stages.stage_base.StageBase": [[172, "aslm-model-devices-stages-stage-base-stagebase"]], "aslm.model.devices.stages.stage_galvo": [[173, "module-aslm.model.devices.stages.stage_galvo"]], "aslm.model.devices.stages.stage_galvo.GalvoNIStage": [[174, "aslm-model-devices-stages-stage-galvo-galvonistage"]], "aslm.model.devices.stages.stage_mcl": [[175, "module-aslm.model.devices.stages.stage_mcl"]], "aslm.model.devices.stages.stage_mcl.MCLStage": [[176, "aslm-model-devices-stages-stage-mcl-mclstage"]], "aslm.model.devices.stages.stage_mcl.build_MCLStage_connection": [[177, "aslm-model-devices-stages-stage-mcl-build-mclstage-connection"]], "aslm.model.devices.stages.stage_pi": [[178, "module-aslm.model.devices.stages.stage_pi"]], "aslm.model.devices.stages.stage_pi.PIStage": [[179, "aslm-model-devices-stages-stage-pi-pistage"]], "aslm.model.devices.stages.stage_pi.build_PIStage_connection": [[180, "aslm-model-devices-stages-stage-pi-build-pistage-connection"]], "aslm.model.devices.stages.stage_sutter": [[181, "module-aslm.model.devices.stages.stage_sutter"]], "aslm.model.devices.stages.stage_sutter.SutterStage": [[182, "aslm-model-devices-stages-stage-sutter-sutterstage"]], "aslm.model.devices.stages.stage_sutter.build_MP285_connection": [[183, "aslm-model-devices-stages-stage-sutter-build-mp285-connection"]], "aslm.model.devices.stages.stage_synthetic": [[184, "module-aslm.model.devices.stages.stage_synthetic"]], "aslm.model.devices.stages.stage_synthetic.SyntheticStage": [[185, "aslm-model-devices-stages-stage-synthetic-syntheticstage"]], "aslm.model.devices.stages.stage_tl_kcube_inertial": [[186, "module-aslm.model.devices.stages.stage_tl_kcube_inertial"]], "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage": [[187, "aslm-model-devices-stages-stage-tl-kcube-inertial-tlkimstage"]], "aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection": [[188, "aslm-model-devices-stages-stage-tl-kcube-inertial-build-tlkimstage-connection"]], "aslm.model.devices.zoom": [[189, "module-aslm.model.devices.zoom"]], "aslm.model.devices.zoom.zoom_base": [[190, "module-aslm.model.devices.zoom.zoom_base"]], "aslm.model.devices.zoom.zoom_base.ZoomBase": [[191, "aslm-model-devices-zoom-zoom-base-zoombase"]], "aslm.model.devices.zoom.zoom_synthetic": [[192, "module-aslm.model.devices.zoom.zoom_synthetic"]], "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom": [[193, "aslm-model-devices-zoom-zoom-synthetic-syntheticzoom"]], "aslm.model.dummy": [[194, "module-aslm.model.dummy"]], "aslm.model.dummy.DummyController": [[195, "aslm-model-dummy-dummycontroller"]], "aslm.model.dummy.DummyDevice": [[196, "aslm-model-dummy-dummydevice"]], "aslm.model.dummy.DummyMicroscope": [[197, "aslm-model-dummy-dummymicroscope"]], "aslm.model.dummy.DummyModel": [[198, "aslm-model-dummy-dummymodel"]], "aslm.model.features": [[199, "module-aslm.model.features"]], "aslm.model.features.auto_tile_scan": [[200, "module-aslm.model.features.auto_tile_scan"]], "aslm.model.features.auto_tile_scan.CalculateFocusRange": [[201, "aslm-model-features-auto-tile-scan-calculatefocusrange"]], "aslm.model.features.autofocus": [[202, "module-aslm.model.features.autofocus"]], "aslm.model.features.autofocus.Autofocus": [[203, "aslm-model-features-autofocus-autofocus"]], "aslm.model.features.autofocus.power_tent": [[204, "aslm-model-features-autofocus-power-tent"]], "aslm.model.features.common_features": [[205, "module-aslm.model.features.common_features"]], "aslm.model.features.common_features.ChangeResolution": [[206, "aslm-model-features-common-features-changeresolution"]], "aslm.model.features.common_features.ConProAcquisition": [[207, "aslm-model-features-common-features-conproacquisition"]], "aslm.model.features.common_features.FindTissueSimple2D": [[208, "aslm-model-features-common-features-findtissuesimple2d"]], "aslm.model.features.common_features.LoopByCount": [[209, "aslm-model-features-common-features-loopbycount"]], "aslm.model.features.common_features.MoveToNextPositionInMultiPostionTable": [[210, "aslm-model-features-common-features-movetonextpositioninmultipostiontable"]], "aslm.model.features.common_features.PrepareNextChannel": [[211, "aslm-model-features-common-features-preparenextchannel"]], "aslm.model.features.common_features.Snap": [[212, "aslm-model-features-common-features-snap"]], "aslm.model.features.common_features.StackPause": [[213, "aslm-model-features-common-features-stackpause"]], "aslm.model.features.common_features.WaitToContinue": [[214, "aslm-model-features-common-features-waittocontinue"]], "aslm.model.features.common_features.ZStackAcquisition": [[215, "aslm-model-features-common-features-zstackacquisition"]], "aslm.model.features.constant_velocity_acquisition": [[216, "module-aslm.model.features.constant_velocity_acquisition"]], "aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition": [[217, "aslm-model-features-constant-velocity-acquisition-constantvelocityacquisition"]], "aslm.model.features.dummy_detective": [[218, "module-aslm.model.features.dummy_detective"]], "aslm.model.features.dummy_detective.Dummy_Detective": [[219, "aslm-model-features-dummy-detective-dummy-detective"]], "aslm.model.features.feature_container": [[220, "module-aslm.model.features.feature_container"]], "aslm.model.features.feature_container.Container": [[221, "aslm-model-features-feature-container-container"]], "aslm.model.features.feature_container.DataContainer": [[222, "aslm-model-features-feature-container-datacontainer"]], "aslm.model.features.feature_container.DataNode": [[223, "aslm-model-features-feature-container-datanode"]], "aslm.model.features.feature_container.SignalContainer": [[224, "aslm-model-features-feature-container-signalcontainer"]], "aslm.model.features.feature_container.SignalNode": [[225, "aslm-model-features-feature-container-signalnode"]], "aslm.model.features.feature_container.TreeNode": [[226, "aslm-model-features-feature-container-treenode"]], "aslm.model.features.feature_container.dummy_True": [[227, "aslm-model-features-feature-container-dummy-true"]], "aslm.model.features.feature_container.dummy_func": [[228, "aslm-model-features-feature-container-dummy-func"]], "aslm.model.features.feature_container.get_registered_funcs": [[229, "aslm-model-features-feature-container-get-registered-funcs"]], "aslm.model.features.feature_container.load_features": [[230, "aslm-model-features-feature-container-load-features"]], "aslm.model.features.image_writer": [[231, "module-aslm.model.features.image_writer"]], "aslm.model.features.image_writer.ImageWriter": [[232, "aslm-model-features-image-writer-imagewriter"]], "aslm.model.features.restful_features": [[233, "module-aslm.model.features.restful_features"]], "aslm.model.features.restful_features.IlastikSegmentation": [[234, "aslm-model-features-restful-features-ilastiksegmentation"]], "aslm.model.features.restful_features.prepare_service": [[235, "aslm-model-features-restful-features-prepare-service"]], "aslm.model.features.volume_search": [[236, "module-aslm.model.features.volume_search"]], "aslm.model.features.volume_search.VolumeSearch": [[237, "aslm-model-features-volume-search-volumesearch"]], "aslm.model.features.volume_search.draw_box": [[238, "aslm-model-features-volume-search-draw-box"]], "aslm.model.metadata_sources": [[239, "module-aslm.model.metadata_sources"]], "aslm.model.metadata_sources.bdv_metadata": [[240, "module-aslm.model.metadata_sources.bdv_metadata"]], "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata": [[241, "aslm-model-metadata-sources-bdv-metadata-bigdataviewermetadata"]], "aslm.model.metadata_sources.metadata": [[242, "module-aslm.model.metadata_sources.metadata"]], "aslm.model.metadata_sources.metadata.Metadata": [[243, "aslm-model-metadata-sources-metadata-metadata"]], "aslm.model.metadata_sources.metadata.XMLMetadata": [[244, "aslm-model-metadata-sources-metadata-xmlmetadata"]], "aslm.model.metadata_sources.ome_tiff_metadata": [[245, "module-aslm.model.metadata_sources.ome_tiff_metadata"]], "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata": [[246, "aslm-model-metadata-sources-ome-tiff-metadata-ometiffmetadata"]], "aslm.model.microscope": [[247, "module-aslm.model.microscope"]], "aslm.model.microscope.Microscope": [[248, "aslm-model-microscope-microscope"]], "aslm.model.model": [[249, "module-aslm.model.model"]], "aslm.model.model.Model": [[250, "aslm-model-model-model"]], "aslm.model.waveforms": [[251, "module-aslm.model.waveforms"]], "aslm.model.waveforms.camera_exposure": [[252, "aslm-model-waveforms-camera-exposure"]], "aslm.model.waveforms.dc_value": [[253, "aslm-model-waveforms-dc-value"]], "aslm.model.waveforms.remote_focus_ramp": [[254, "aslm-model-waveforms-remote-focus-ramp"]], "aslm.model.waveforms.sawtooth": [[255, "aslm-model-waveforms-sawtooth"]], "aslm.model.waveforms.sine_wave": [[256, "aslm-model-waveforms-sine-wave"]], "aslm.model.waveforms.single_pulse": [[257, "aslm-model-waveforms-single-pulse"]], "aslm.model.waveforms.smooth_waveform": [[258, "aslm-model-waveforms-smooth-waveform"]], "aslm.model.waveforms.square": [[259, "aslm-model-waveforms-square"]], "aslm.tools": [[260, "module-aslm.tools"]], "aslm.tools.beams": [[261, "module-aslm.tools.beams"]], "aslm.tools.beams.fit_gaussian_beam_error": [[262, "aslm-tools-beams-fit-gaussian-beam-error"]], "aslm.tools.beams.fit_gaussian_beam_mse": [[263, "aslm-tools-beams-fit-gaussian-beam-mse"]], "aslm.tools.beams.gaussian_beam": [[264, "aslm-tools-beams-gaussian-beam"]], "aslm.tools.common_dict_tools": [[265, "module-aslm.tools.common_dict_tools"]], "aslm.tools.common_dict_tools.update_stage_dict": [[266, "aslm-tools-common-dict-tools-update-stage-dict"]], "aslm.tools.common_functions": [[267, "module-aslm.tools.common_functions"]], "aslm.tools.common_functions.build_ref_name": [[268, "aslm-tools-common-functions-build-ref-name"]], "aslm.tools.common_functions.combine_funcs": [[269, "aslm-tools-common-functions-combine-funcs"]], "aslm.tools.common_functions.copy_proxy_object": [[270, "aslm-tools-common-functions-copy-proxy-object"]], "aslm.tools.decorators": [[271, "module-aslm.tools.decorators"]], "aslm.tools.decorators.function_timer": [[272, "aslm-tools-decorators-function-timer"]], "aslm.tools.file_functions": [[273, "module-aslm.tools.file_functions"]], "aslm.tools.file_functions.create_save_path": [[274, "aslm-tools-file-functions-create-save-path"]], "aslm.tools.file_functions.delete_folder": [[275, "aslm-tools-file-functions-delete-folder"]], "aslm.tools.file_functions.save_yaml_file": [[276, "aslm-tools-file-functions-save-yaml-file"]], "aslm.tools.image": [[277, "module-aslm.tools.image"]], "aslm.tools.image.text_array": [[278, "aslm-tools-image-text-array"]], "aslm.tools.image_loaders": [[279, "module-aslm.tools.image_loaders"]], "aslm.tools.image_loaders.LazyTiff": [[280, "aslm-tools-image-loaders-lazytiff"]], "aslm.tools.main_functions": [[281, "module-aslm.tools.main_functions"]], "aslm.tools.main_functions.create_parser": [[282, "aslm-tools-main-functions-create-parser"]], "aslm.tools.main_functions.evaluate_parser_input_arguments": [[283, "aslm-tools-main-functions-evaluate-parser-input-arguments"]], "aslm.tools.main_functions.identify_gpu": [[284, "aslm-tools-main-functions-identify-gpu"]], "aslm.tools.multipos_table_tools": [[285, "module-aslm.tools.multipos_table_tools"]], "aslm.tools.multipos_table_tools.calc_num_tiles": [[286, "aslm-tools-multipos-table-tools-calc-num-tiles"]], "aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box": [[287, "aslm-tools-multipos-table-tools-compute-tiles-from-bounding-box"]], "aslm.tools.multipos_table_tools.sign": [[288, "aslm-tools-multipos-table-tools-sign"]], "aslm.tools.multipos_table_tools.update_table": [[289, "aslm-tools-multipos-table-tools-update-table"]], "aslm.tools.project_stats": [[290, "module-aslm.tools.project_stats"]], "aslm.tools.project_stats.countlines": [[291, "aslm-tools-project-stats-countlines"]], "aslm.tools.sdf": [[292, "module-aslm.tools.sdf"]], "aslm.tools.sdf.box": [[293, "aslm-tools-sdf-box"]], "aslm.tools.sdf.sphere": [[294, "aslm-tools-sdf-sphere"]], "aslm.tools.sdf.volume_from_sdf": [[295, "aslm-tools-sdf-volume-from-sdf"]], "aslm.tools.waveform_template_funcs": [[296, "module-aslm.tools.waveform_template_funcs"]], "aslm.tools.waveform_template_funcs.get_waveform_template_parameters": [[297, "aslm-tools-waveform-template-funcs-get-waveform-template-parameters"]], "aslm.tools.xml_tools": [[298, "module-aslm.tools.xml_tools"]], "aslm.tools.xml_tools.dict_to_xml": [[299, "aslm-tools-xml-tools-dict-to-xml"]], "aslm.tools.xml_tools.parse_xml": [[300, "aslm-tools-xml-tools-parse-xml"]], "aslm.view": [[301, "module-aslm.view"]], "aslm.view.main_window_content": [[302, "module-aslm.view.main_window_content"]], "aslm.view.popups": [[303, "module-aslm.view.popups"]], "API Reference": [[306, "api-reference"]], "Configuring ASLM": [[307, "configuring-aslm"]], "Configuration.yaml": [[307, "configuration-yaml"]], "Hardware Section": [[307, "hardware-section"], [315, "hardware-section"]], "Microscope Section": [[307, "microscope-section"], [315, "microscope-section"]], "Configuring stages": [[307, "configuring-stages"]], "GUI Section": [[307, "gui-section"], [315, "gui-section"]], "ASLM Feature Container": [[308, "aslm-feature-container"]], "The feature object": [[308, "the-feature-object"]], "Writing custom features": [[308, "writing-custom-features"]], "Contributing Guidelines": [[309, "contributing-guidelines"]], "General principles": [[309, "general-principles"]], "Coding style": [[309, "coding-style"]], "Dictionary Parsing": [[309, "dictionary-parsing"]], "Unit tests": [[309, "unit-tests"]], "Developing with a Mac": [[309, "developing-with-a-mac"]], "Adding New Hardware": [[310, "adding-new-hardware"]], "Scientific Units": [[310, "scientific-units"]], "How to Add New Hardware": [[310, "how-to-add-new-hardware"]], "Contributing to ASLM": [[311, "contributing-to-aslm"]], "Adding New Model Features": [[312, "adding-new-model-features"]], "Microscope Implementations": [[313, "microscope-implementations"]], "Multiscale Microscope": [[313, "multiscale-microscope"]], "Upright CT-ASLM-V2": [[313, "upright-ct-aslm-v2"]], "OPM-V2": [[313, "opm-v2"]], "Autonomous Software for Light Microscopy": [[314, "autonomous-software-for-light-microscopy"]], "Project Philosophy": [[314, "project-philosophy"]], "Contents": [[314, "contents"]], "Authors": [[314, "authors"]], "Index and search": [[314, "index-and-search"]], "Software Configuration": [[315, "software-configuration"]], "Configuration File": [[315, "configuration-file"]], "DAQ Section": [[315, "daq-section"]], "Camera Section": [[315, "camera-section"]], "Remote Focus Section": [[315, "remote-focus-section"]], "Galvo Section": [[315, "galvo-section"]], "Filter Wheel Section": [[315, "filter-wheel-section"]], "Stage Section": [[315, "stage-section"]], "Stage Axes Definition": [[315, "stage-axes-definition"]], "Zoom Section": [[315, "zoom-section"]], "Shutter Section": [[315, "shutter-section"]], "Laser Section": [[315, "laser-section"]], "Waveform Constants File": [[315, "waveform-constants-file"]], "Remote Constants Section": [[315, "remote-constants-section"]], "Galvo Constants Section": [[315, "galvo-constants-section"]], "Other Constants Section": [[315, "other-constants-section"]], "Waveform Templates File": [[315, "waveform-templates-file"]], "Rest API Configuration File": [[315, "rest-api-configuration-file"]], "Software Installation": [[316, "software-installation"]], "Download Git": [[316, "download-git"]], "Setup your Python Environment": [[316, "setup-your-python-environment"]], "GPU Dependencies": [[316, "gpu-dependencies"]], "Troubleshooting": [[316, "troubleshooting"]], "Supported Hardware": [[317, "supported-hardware"]], "Data Acquisition Card": [[317, "data-acquisition-card"]], "NI": [[317, "ni"]], "Cameras": [[317, "cameras"]], "Hamamatsu": [[317, "hamamatsu"]], "Photometrics": [[317, "photometrics"]], "Voicecoil": [[317, "voicecoil"]], "Equipment Solutions": [[317, "equipment-solutions"]], "Thorlabs BLINK": [[317, "thorlabs-blink"]], "Stages": [[317, "stages"]], "ASI": [[317, "asi"], [317, "id2"]], "Sutter": [[317, "sutter"], [317, "id1"]], "Physik Instrumente": [[317, "physik-instrumente"]], "Thorlabs": [[317, "thorlabs"], [317, "id3"]], "Analog Controlled (Galvo/Piezo/etc.)": [[317, "analog-controlled-galvo-piezo-etc"]], "Deformable Mirrors": [[317, "deformable-mirrors"]], "Imagine Optics": [[317, "imagine-optics"]], "Filter Wheels": [[317, "filter-wheels"]], "Galvanometers": [[317, "galvanometers"]], "Cambridge Technologies/Novanta": [[317, "cambridge-technologies-novanta"]], "ScannerMAX": [[317, "scannermax"]], "Lasers": [[317, "lasers"]], "Coherent": [[317, "coherent"]], "Omicron": [[317, "omicron"]], "Shutters": [[317, "shutters"]], "Mechanical Zoom": [[317, "mechanical-zoom"]], "Dynamixel": [[317, "dynamixel"]], "User Guide": [[318, "user-guide"]]}, "indexentries": {"aslm.config": [[0, "module-aslm.config"]], "module": [[0, "module-aslm.config"], [1, "module-aslm.config.config"], [7, "module-aslm.controller"], [8, "module-aslm.controller.configuration_controller"], [10, "module-aslm.controller.thread_pool"], [14, "module-aslm.model"], [15, "module-aslm.model.analysis"], [16, "module-aslm.model.analysis.boundary_detect"], [21, "module-aslm.model.analysis.camera"], [26, "module-aslm.model.analysis.detection"], [36, "module-aslm.model.analysis.image_contrast"], [42, "module-aslm.model.analysis.image_decorrelation"], [51, "module-aslm.model.analysis.image_transform"], [54, "module-aslm.model.analysis.spectral_unmixing"], [56, "module-aslm.model.concurrency"], [57, "module-aslm.model.concurrency.concurrency_tools"], [68, "module-aslm.model.concurrency.proxy_objects"], [73, "module-aslm.model.concurrency.write_parameters"], [75, "module-aslm.model.data_sources"], [76, "module-aslm.model.data_sources.bdv_data_source"], [78, "module-aslm.model.data_sources.data_source"], [81, "module-aslm.model.data_sources.tiff_data_source"], [83, "module-aslm.model.data_sources.zarr_data_source"], [85, "module-aslm.model.device_startup_functions"], [103, "module-aslm.model.devices"], [104, "module-aslm.model.devices.APIs"], [105, "module-aslm.model.devices.APIs.coherent"], [106, "module-aslm.model.devices.APIs.dynamixel"], [107, "module-aslm.model.devices.APIs.logitech"], [108, "module-aslm.model.devices.APIs.omicron"], [109, "module-aslm.model.devices.camera"], [110, "module-aslm.model.devices.camera.camera_base"], [112, "module-aslm.model.devices.camera.camera_hamamatsu"], [115, "module-aslm.model.devices.camera.camera_synthetic"], [118, "module-aslm.model.devices.daq"], [119, "module-aslm.model.devices.daq.daq_base"], [121, "module-aslm.model.devices.daq.daq_synthetic"], [123, "module-aslm.model.devices.filter_wheel"], [124, "module-aslm.model.devices.filter_wheel.filter_wheel_asi"], [127, "module-aslm.model.devices.filter_wheel.filter_wheel_base"], [129, "module-aslm.model.devices.filter_wheel.filter_wheel_sutter"], [132, "module-aslm.model.devices.filter_wheel.filter_wheel_synthetic"], [134, "module-aslm.model.devices.galvo"], [135, "module-aslm.model.devices.galvo.galvo_base"], [137, "module-aslm.model.devices.galvo.galvo_synthetic"], [139, "module-aslm.model.devices.joystick"], [140, "module-aslm.model.devices.joystick.joystick_base"], [142, "module-aslm.model.devices.joystick.joystick_synthetic"], [144, "module-aslm.model.devices.lasers"], [145, "module-aslm.model.devices.lasers.laser_base"], [147, "module-aslm.model.devices.lasers.laser_synthetic"], [149, "module-aslm.model.devices.lasers.laser_trigger_base"], [151, "module-aslm.model.devices.lasers.laser_trigger_synthetic"], [153, "module-aslm.model.devices.objectives"], [155, "module-aslm.model.devices.remote_focus"], [156, "module-aslm.model.devices.remote_focus.remote_focus_base"], [158, "module-aslm.model.devices.remote_focus.remote_focus_equipment_solutions"], [160, "module-aslm.model.devices.remote_focus.remote_focus_synthetic"], [162, "module-aslm.model.devices.shutter"], [163, "module-aslm.model.devices.shutter.laser_shutter_base"], [165, "module-aslm.model.devices.shutter.laser_shutter_synthetic"], [167, "module-aslm.model.devices.stages"], [168, "module-aslm.model.devices.stages.stage_asi"], [171, "module-aslm.model.devices.stages.stage_base"], [173, "module-aslm.model.devices.stages.stage_galvo"], [175, "module-aslm.model.devices.stages.stage_mcl"], [178, "module-aslm.model.devices.stages.stage_pi"], [181, "module-aslm.model.devices.stages.stage_sutter"], [184, "module-aslm.model.devices.stages.stage_synthetic"], [186, "module-aslm.model.devices.stages.stage_tl_kcube_inertial"], [189, "module-aslm.model.devices.zoom"], [190, "module-aslm.model.devices.zoom.zoom_base"], [192, "module-aslm.model.devices.zoom.zoom_synthetic"], [194, "module-aslm.model.dummy"], [199, "module-aslm.model.features"], [200, "module-aslm.model.features.auto_tile_scan"], [202, "module-aslm.model.features.autofocus"], [205, "module-aslm.model.features.common_features"], [216, "module-aslm.model.features.constant_velocity_acquisition"], [218, "module-aslm.model.features.dummy_detective"], [220, "module-aslm.model.features.feature_container"], [231, "module-aslm.model.features.image_writer"], [233, "module-aslm.model.features.restful_features"], [236, "module-aslm.model.features.volume_search"], [239, "module-aslm.model.metadata_sources"], [240, "module-aslm.model.metadata_sources.bdv_metadata"], [242, "module-aslm.model.metadata_sources.metadata"], [245, "module-aslm.model.metadata_sources.ome_tiff_metadata"], [247, "module-aslm.model.microscope"], [249, "module-aslm.model.model"], [251, "module-aslm.model.waveforms"], [260, "module-aslm.tools"], [261, "module-aslm.tools.beams"], [265, "module-aslm.tools.common_dict_tools"], [267, "module-aslm.tools.common_functions"], [271, "module-aslm.tools.decorators"], [273, "module-aslm.tools.file_functions"], [277, "module-aslm.tools.image"], [279, "module-aslm.tools.image_loaders"], [281, "module-aslm.tools.main_functions"], [285, "module-aslm.tools.multipos_table_tools"], [290, "module-aslm.tools.project_stats"], [292, "module-aslm.tools.sdf"], [296, "module-aslm.tools.waveform_template_funcs"], [298, "module-aslm.tools.xml_tools"], [301, "module-aslm.view"], [302, "module-aslm.view.main_window_content"], [303, "module-aslm.view.popups"]], "aslm.config.config": [[1, "module-aslm.config.config"]], "build_nested_dict() (in module aslm.config.config)": [[2, "aslm.config.config.build_nested_dict"]], "get_aslm_path() (in module aslm.config.config)": [[3, "aslm.config.config.get_aslm_path"]], "get_configuration_paths() (in module aslm.config.config)": [[4, "aslm.config.config.get_configuration_paths"]], "load_configs() (in module aslm.config.config)": [[5, "aslm.config.config.load_configs"]], "update_config_dict() (in module aslm.config.config)": [[6, "aslm.config.config.update_config_dict"]], "aslm.controller": [[7, "module-aslm.controller"]], "aslm.controller.configuration_controller": [[8, "module-aslm.controller.configuration_controller"]], "configurationcontroller (class in aslm.controller.configuration_controller)": [[9, "aslm.controller.configuration_controller.ConfigurationController"]], "__init__() (aslm.controller.configuration_controller.configurationcontroller method)": [[9, "aslm.controller.configuration_controller.ConfigurationController.__init__"]], "camera_config_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[9, "aslm.controller.configuration_controller.ConfigurationController.camera_config_dict"]], "camera_pixels (aslm.controller.configuration_controller.configurationcontroller property)": [[9, "aslm.controller.configuration_controller.ConfigurationController.camera_pixels"]], "change_microscope() (aslm.controller.configuration_controller.configurationcontroller method)": [[9, "aslm.controller.configuration_controller.ConfigurationController.change_microscope"], [9, "id0"]], "channels_info (aslm.controller.configuration_controller.configurationcontroller property)": [[9, "aslm.controller.configuration_controller.ConfigurationController.channels_info"]], "daq_sample_rate (aslm.controller.configuration_controller.configurationcontroller property)": [[9, "aslm.controller.configuration_controller.ConfigurationController.daq_sample_rate"]], "filter_wheel_setting_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[9, "aslm.controller.configuration_controller.ConfigurationController.filter_wheel_setting_dict"]], "galvo_parameter_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[9, "aslm.controller.configuration_controller.ConfigurationController.galvo_parameter_dict"]], "get_microscope_configuration_dict() (aslm.controller.configuration_controller.configurationcontroller method)": [[9, "aslm.controller.configuration_controller.ConfigurationController.get_microscope_configuration_dict"], [9, "id1"]], "get_stage_position_limits() (aslm.controller.configuration_controller.configurationcontroller method)": [[9, "aslm.controller.configuration_controller.ConfigurationController.get_stage_position_limits"], [9, "id2"]], "lasers_info (aslm.controller.configuration_controller.configurationcontroller property)": [[9, "aslm.controller.configuration_controller.ConfigurationController.lasers_info"]], "number_of_channels (aslm.controller.configuration_controller.configurationcontroller property)": [[9, "aslm.controller.configuration_controller.ConfigurationController.number_of_channels"]], "remote_focus_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[9, "aslm.controller.configuration_controller.ConfigurationController.remote_focus_dict"]], "stage_default_position (aslm.controller.configuration_controller.configurationcontroller property)": [[9, "aslm.controller.configuration_controller.ConfigurationController.stage_default_position"]], "stage_setting_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[9, "aslm.controller.configuration_controller.ConfigurationController.stage_setting_dict"]], "stage_step (aslm.controller.configuration_controller.configurationcontroller property)": [[9, "aslm.controller.configuration_controller.ConfigurationController.stage_step"]], "aslm.controller.thread_pool": [[10, "module-aslm.controller.thread_pool"]], "selflockthread (class in aslm.controller.thread_pool)": [[11, "aslm.controller.thread_pool.SelfLockThread"]], "__init__() (aslm.controller.thread_pool.selflockthread method)": [[11, "aslm.controller.thread_pool.SelfLockThread.__init__"]], "daemon (aslm.controller.thread_pool.selflockthread property)": [[11, "aslm.controller.thread_pool.SelfLockThread.daemon"]], "getname() (aslm.controller.thread_pool.selflockthread method)": [[11, "aslm.controller.thread_pool.SelfLockThread.getName"]], "ident (aslm.controller.thread_pool.selflockthread property)": [[11, "aslm.controller.thread_pool.SelfLockThread.ident"]], "isdaemon() (aslm.controller.thread_pool.selflockthread method)": [[11, "aslm.controller.thread_pool.SelfLockThread.isDaemon"]], "islocked() (aslm.controller.thread_pool.selflockthread method)": [[11, "aslm.controller.thread_pool.SelfLockThread.isLocked"]], "is_alive() (aslm.controller.thread_pool.selflockthread method)": [[11, "aslm.controller.thread_pool.SelfLockThread.is_alive"]], "join() (aslm.controller.thread_pool.selflockthread method)": [[11, "aslm.controller.thread_pool.SelfLockThread.join"]], "name (aslm.controller.thread_pool.selflockthread property)": [[11, "aslm.controller.thread_pool.SelfLockThread.name"]], "native_id (aslm.controller.thread_pool.selflockthread property)": [[11, "aslm.controller.thread_pool.SelfLockThread.native_id"]], "run() (aslm.controller.thread_pool.selflockthread method)": [[11, "aslm.controller.thread_pool.SelfLockThread.run"]], "setdaemon() (aslm.controller.thread_pool.selflockthread method)": [[11, "aslm.controller.thread_pool.SelfLockThread.setDaemon"]], "setname() (aslm.controller.thread_pool.selflockthread method)": [[11, "aslm.controller.thread_pool.SelfLockThread.setName"]], "start() (aslm.controller.thread_pool.selflockthread method)": [[11, "aslm.controller.thread_pool.SelfLockThread.start"]], "unlock() (aslm.controller.thread_pool.selflockthread method)": [[11, "aslm.controller.thread_pool.SelfLockThread.unlock"]], "wait() (aslm.controller.thread_pool.selflockthread method)": [[11, "aslm.controller.thread_pool.SelfLockThread.wait"]], "synchronizedthreadpool (class in aslm.controller.thread_pool)": [[12, "aslm.controller.thread_pool.SynchronizedThreadPool"]], "__init__() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[12, "aslm.controller.thread_pool.SynchronizedThreadPool.__init__"]], "clear() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[12, "aslm.controller.thread_pool.SynchronizedThreadPool.clear"]], "createthread() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[12, "aslm.controller.thread_pool.SynchronizedThreadPool.createThread"]], "getrunningthread() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[12, "aslm.controller.thread_pool.SynchronizedThreadPool.getRunningThread"]], "globaltrace() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[12, "aslm.controller.thread_pool.SynchronizedThreadPool.globaltrace"]], "killthreadinlist() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[12, "aslm.controller.thread_pool.SynchronizedThreadPool.killThreadInList"]], "localtrace() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[12, "aslm.controller.thread_pool.SynchronizedThreadPool.localtrace"]], "movetodelete() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[12, "aslm.controller.thread_pool.SynchronizedThreadPool.moveToDelete"]], "registerresource() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[12, "aslm.controller.thread_pool.SynchronizedThreadPool.registerResource"]], "removethread() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[12, "aslm.controller.thread_pool.SynchronizedThreadPool.removeThread"]], "threadtaskwrapping() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[12, "aslm.controller.thread_pool.SynchronizedThreadPool.threadTaskWrapping"]], "threadwaitlist (class in aslm.controller.thread_pool)": [[13, "aslm.controller.thread_pool.ThreadWaitlist"]], "__init__() (aslm.controller.thread_pool.threadwaitlist method)": [[13, "aslm.controller.thread_pool.ThreadWaitlist.__init__"]], "aslm.model": [[14, "module-aslm.model"]], "aslm.model.analysis": [[15, "module-aslm.model.analysis"]], "aslm.model.analysis.boundary_detect": [[16, "module-aslm.model.analysis.boundary_detect"]], "binary_detect() (in module aslm.model.analysis.boundary_detect)": [[17, "aslm.model.analysis.boundary_detect.binary_detect"]], "find_tissue_boundary_2d() (in module aslm.model.analysis.boundary_detect)": [[18, "aslm.model.analysis.boundary_detect.find_tissue_boundary_2d"]], "has_tissue() (in module aslm.model.analysis.boundary_detect)": [[19, "aslm.model.analysis.boundary_detect.has_tissue"]], "map_boundary() (in module aslm.model.analysis.boundary_detect)": [[20, "aslm.model.analysis.boundary_detect.map_boundary"]], "aslm.model.analysis.camera": [[21, "module-aslm.model.analysis.camera"]], "compute_flatfield_map() (in module aslm.model.analysis.camera)": [[22, "aslm.model.analysis.camera.compute_flatfield_map"]], "compute_noise_sigma() (in module aslm.model.analysis.camera)": [[23, "aslm.model.analysis.camera.compute_noise_sigma"]], "compute_scmos_offset_and_variance_map() (in module aslm.model.analysis.camera)": [[24, "aslm.model.analysis.camera.compute_scmos_offset_and_variance_map"]], "compute_signal_to_noise() (in module aslm.model.analysis.camera)": [[25, "aslm.model.analysis.camera.compute_signal_to_noise"]], "aslm.model.analysis.detection": [[26, "module-aslm.model.analysis.detection"]], "add_median_border() (in module aslm.model.analysis.detection)": [[27, "aslm.model.analysis.detection.add_median_border"]], "combine_images() (in module aslm.model.analysis.detection)": [[28, "aslm.model.analysis.detection.combine_images"]], "log_detection() (in module aslm.model.analysis.detection)": [[29, "aslm.model.analysis.detection.log_detection"]], "make_inside_image() (in module aslm.model.analysis.detection)": [[30, "aslm.model.analysis.detection.make_inside_image"]], "make_normalized_image() (in module aslm.model.analysis.detection)": [[31, "aslm.model.analysis.detection.make_normalized_image"]], "make_sphere_3d() (in module aslm.model.analysis.detection)": [[32, "aslm.model.analysis.detection.make_sphere_3D"]], "multiscale_surface_filter_3d() (in module aslm.model.analysis.detection)": [[33, "aslm.model.analysis.detection.multiscale_surface_filter_3D"]], "surface_filter_gauss_3d() (in module aslm.model.analysis.detection)": [[34, "aslm.model.analysis.detection.surface_filter_gauss_3D"]], "three_level_segmentation() (in module aslm.model.analysis.detection)": [[35, "aslm.model.analysis.detection.three_level_segmentation"]], "aslm.model.analysis.image_contrast": [[36, "module-aslm.model.analysis.image_contrast"]], "estimate_and_correct_flatfield() (in module aslm.model.analysis.image_contrast)": [[37, "aslm.model.analysis.image_contrast.estimate_and_correct_flatfield"]], "estimate_image_resolution() (in module aslm.model.analysis.image_contrast)": [[38, "aslm.model.analysis.image_contrast.estimate_image_resolution"]], "fast_normalized_dct_shannon_entropy() (in module aslm.model.analysis.image_contrast)": [[39, "aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy"]], "image_intensity() (in module aslm.model.analysis.image_contrast)": [[40, "aslm.model.analysis.image_contrast.image_intensity"]], "normalized_dct_shannon_entropy() (in module aslm.model.analysis.image_contrast)": [[41, "aslm.model.analysis.image_contrast.normalized_dct_shannon_entropy"]], "aslm.model.analysis.image_decorrelation": [[42, "module-aslm.model.analysis.image_decorrelation"]], "apodize_image() (in module aslm.model.analysis.image_decorrelation)": [[43, "aslm.model.analysis.image_decorrelation.apodize_image"]], "get_correlation_coefficient() (in module aslm.model.analysis.image_decorrelation)": [[44, "aslm.model.analysis.image_decorrelation.get_correlation_coefficient"]], "get_decorrelation_local_maxima() (in module aslm.model.analysis.image_decorrelation)": [[45, "aslm.model.analysis.image_decorrelation.get_decorrelation_local_maxima"]], "get_image_decorrelation() (in module aslm.model.analysis.image_decorrelation)": [[46, "aslm.model.analysis.image_decorrelation.get_image_decorrelation"]], "get_radial_average() (in module aslm.model.analysis.image_decorrelation)": [[47, "aslm.model.analysis.image_decorrelation.get_radial_average"]], "image_to_polar() (in module aslm.model.analysis.image_decorrelation)": [[48, "aslm.model.analysis.image_decorrelation.image_to_polar"]], "linear_map() (in module aslm.model.analysis.image_decorrelation)": [[49, "aslm.model.analysis.image_decorrelation.linear_map"]], "main_image_decorr() (in module aslm.model.analysis.image_decorrelation)": [[50, "aslm.model.analysis.image_decorrelation.main_image_decorr"]], "aslm.model.analysis.image_transform": [[51, "module-aslm.model.analysis.image_transform"]], "deskew_image() (in module aslm.model.analysis.image_transform)": [[52, "aslm.model.analysis.image_transform.deskew_image"]], "initiate_gpu() (in module aslm.model.analysis.image_transform)": [[53, "aslm.model.analysis.image_transform.initiate_gpu"]], "aslm.model.analysis.spectral_unmixing": [[54, "module-aslm.model.analysis.spectral_unmixing"]], "to_do() (in module aslm.model.analysis.spectral_unmixing)": [[55, "aslm.model.analysis.spectral_unmixing.to_do"]], "aslm.model.concurrency": [[56, "module-aslm.model.concurrency"]], "aslm.model.concurrency.concurrency_tools": [[57, "module-aslm.model.concurrency.concurrency_tools"]], "custodythread (class in aslm.model.concurrency.concurrency_tools)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread"]], "__init__() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread.__init__"]], "daemon (aslm.model.concurrency.concurrency_tools.custodythread property)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread.daemon"]], "getname() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread.getName"]], "get_result() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread.get_result"]], "ident (aslm.model.concurrency.concurrency_tools.custodythread property)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread.ident"]], "isdaemon() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread.isDaemon"]], "is_alive() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread.is_alive"]], "join() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread.join"]], "name (aslm.model.concurrency.concurrency_tools.custodythread property)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread.name"]], "native_id (aslm.model.concurrency.concurrency_tools.custodythread property)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread.native_id"]], "run() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread.run"]], "setdaemon() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread.setDaemon"]], "setname() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread.setName"]], "start() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread.start"]], "fancythread (in module aslm.model.concurrency.concurrency_tools)": [[59, "aslm.model.concurrency.concurrency_tools.FancyThread"]], "mytestclass (class in aslm.model.concurrency.concurrency_tools)": [[60, "aslm.model.concurrency.concurrency_tools.MyTestClass"]], "__init__() (aslm.model.concurrency.concurrency_tools.mytestclass method)": [[60, "aslm.model.concurrency.concurrency_tools.MyTestClass.__init__"]], "run() (aslm.model.concurrency.concurrency_tools.mytestclass method)": [[60, "aslm.model.concurrency.concurrency_tools.MyTestClass.run"]], "time_it() (aslm.model.concurrency.concurrency_tools.mytestclass method)": [[60, "aslm.model.concurrency.concurrency_tools.MyTestClass.time_it"]], "objectinsubprocess (class in aslm.model.concurrency.concurrency_tools)": [[61, "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess"]], "__init__() (aslm.model.concurrency.concurrency_tools.objectinsubprocess method)": [[61, "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess.__init__"]], "politethread (in module aslm.model.concurrency.concurrency_tools)": [[62, "aslm.model.concurrency.concurrency_tools.PoliteThread"]], "resultthread (class in aslm.model.concurrency.concurrency_tools)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread"]], "__init__() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread.__init__"]], "daemon (aslm.model.concurrency.concurrency_tools.resultthread property)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread.daemon"]], "getname() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread.getName"]], "get_result() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread.get_result"]], "ident (aslm.model.concurrency.concurrency_tools.resultthread property)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread.ident"]], "isdaemon() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread.isDaemon"]], "is_alive() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread.is_alive"]], "join() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread.join"]], "name (aslm.model.concurrency.concurrency_tools.resultthread property)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread.name"]], "native_id (aslm.model.concurrency.concurrency_tools.resultthread property)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread.native_id"]], "run() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread.run"]], "setdaemon() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread.setDaemon"]], "setname() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread.setName"]], "start() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread.start"]], "aligned (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ALIGNED"]], "behaved (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.BEHAVED"]], "carray (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.CARRAY"]], "c_contiguous (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.C_CONTIGUOUS"]], "farray (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.FARRAY"]], "fnc (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.FNC"]], "forc (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.FORC"]], "f_contiguous (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.F_CONTIGUOUS"]], "owndata (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.OWNDATA"]], "sharedndarray (class in aslm.model.concurrency.concurrency_tools)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray"]], "t (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.T"]], "updateifcopy (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.UPDATEIFCOPY"]], "writeable (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.WRITEABLE"]], "writebackifcopy (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.WRITEBACKIFCOPY"]], "__init__() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.__init__"]], "all() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.all"]], "any() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.any"]], "argmax() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.argmax"]], "argmin() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.argmin"]], "argpartition() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.argpartition"]], "argsort() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.argsort"]], "astype() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.astype"]], "base (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.base"]], "byteswap() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.byteswap"]], "choose() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.choose"]], "clip() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.clip"]], "compress() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.compress"]], "conj() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.conj"]], "conjugate() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.conjugate"]], "copy() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.copy"]], "ctypes (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ctypes"]], "cumprod() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.cumprod"]], "cumsum() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.cumsum"]], "data (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.data"]], "diagonal() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.diagonal"]], "dtype (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.dtype"]], "dump() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.dump"]], "dumps() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.dumps"]], "fill() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.fill"]], "flags (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.flags"]], "flat (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.flat"]], "flatten() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.flatten"]], "getfield() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.getfield"]], "imag (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.imag"]], "item() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.item"]], "itemset() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.itemset"]], "itemsize (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.itemsize"]], "max() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.max"]], "mean() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.mean"]], "min() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.min"]], "nbytes (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.nbytes"]], "ndim (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ndim"]], "newbyteorder() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.newbyteorder"]], "nonzero() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.nonzero"]], "partition() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.partition"]], "prod() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.prod"]], "ptp() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ptp"]], "put() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.put"]], "ravel() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ravel"]], "real (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.real"]], "repeat() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.repeat"]], "reshape() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.reshape"]], "resize() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.resize"]], "round() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.round"]], "searchsorted() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.searchsorted"]], "setfield() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.setfield"]], "setflags() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.setflags"]], "shape (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.shape"]], "size (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.size"]], "sort() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.sort"]], "squeeze() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.squeeze"]], "std() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.std"]], "strides (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.strides"]], "sum() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.sum"]], "swapaxes() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.swapaxes"]], "take() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.take"]], "tobytes() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.tobytes"]], "tofile() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.tofile"]], "tolist() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.tolist"]], "tostring() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.tostring"]], "trace() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.trace"]], "transpose() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.transpose"]], "var() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.var"]], "view() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.view"]], "testobjectinsubprocess (class in aslm.model.concurrency.concurrency_tools)": [[65, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess"]], "testobjectinsubprocess.testclass (class in aslm.model.concurrency.concurrency_tools)": [[65, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.TestClass"]], "__init__() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[65, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.__init__"]], "run() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[65, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.run"]], "test_incorrect_thread_management() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[65, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.test_incorrect_thread_management"]], "test_lock_with_waitlist() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[65, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.test_lock_with_waitlist"]], "test_object_in_subprocess_overhead() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[65, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.test_object_in_subprocess_overhead"]], "test_sending_shared_arrays() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[65, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.test_sending_shared_arrays"]], "time_it() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[65, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.time_it"]], "testresultthreadandcustodythread (class in aslm.model.concurrency.concurrency_tools)": [[66, "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread"]], "__init__() (aslm.model.concurrency.concurrency_tools.testresultthreadandcustodythread method)": [[66, "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread.__init__"]], "run() (aslm.model.concurrency.concurrency_tools.testresultthreadandcustodythread method)": [[66, "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread.run"]], "time_it() (aslm.model.concurrency.concurrency_tools.testresultthreadandcustodythread method)": [[66, "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread.time_it"]], "testsharedndarray (class in aslm.model.concurrency.concurrency_tools)": [[67, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray"]], "__init__() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[67, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.__init__"]], "run() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[67, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.run"]], "test_ndarraylike_behavior() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[67, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.test_ndarraylike_behavior"]], "test_serialization() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[67, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.test_serialization"]], "test_serializing_and_deserializing() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[67, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.test_serializing_and_deserializing"]], "time_it() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[67, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.time_it"]], "aslm.model.concurrency.proxy_objects": [[68, "module-aslm.model.concurrency.proxy_objects"]], "proxymanager (class in aslm.model.concurrency.proxy_objects)": [[69, "aslm.model.concurrency.proxy_objects.ProxyManager"]], "__init__() (aslm.model.concurrency.proxy_objects.proxymanager method)": [[69, "aslm.model.concurrency.proxy_objects.ProxyManager.__init__"]], "proxy_object() (aslm.model.concurrency.proxy_objects.proxymanager method)": [[69, "aslm.model.concurrency.proxy_objects.ProxyManager.proxy_object"]], "shared_numpy_array() (aslm.model.concurrency.proxy_objects.proxymanager method)": [[69, "aslm.model.concurrency.proxy_objects.ProxyManager.shared_numpy_array"]], "proxyobject (class in aslm.model.concurrency.proxy_objects)": [[70, "aslm.model.concurrency.proxy_objects.ProxyObject"]], "__init__() (aslm.model.concurrency.proxy_objects.proxyobject method)": [[70, "aslm.model.concurrency.proxy_objects.ProxyObject.__init__"]], "launch_custody_thread() (in module aslm.model.concurrency.proxy_objects)": [[71, "aslm.model.concurrency.proxy_objects.launch_custody_thread"]], "launch_thread() (in module aslm.model.concurrency.proxy_objects)": [[72, "aslm.model.concurrency.proxy_objects.launch_thread"]], "aslm.model.concurrency.write_parameters": [[73, "module-aslm.model.concurrency.write_parameters"]], "__init__() (aslm.model.concurrency.write_parameters.write_params method)": [[74, "aslm.model.concurrency.write_parameters.write_Params.__init__"]], "write_params (class in aslm.model.concurrency.write_parameters)": [[74, "aslm.model.concurrency.write_parameters.write_Params"]], "aslm.model.data_sources": [[75, "module-aslm.model.data_sources"]], "aslm.model.data_sources.bdv_data_source": [[76, "module-aslm.model.data_sources.bdv_data_source"]], "bigdataviewerdatasource (class in aslm.model.data_sources.bdv_data_source)": [[77, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource"]], "__init__() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[77, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.__init__"]], "close() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[77, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.close"]], "data (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[77, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.data"], [77, "id1"]], "data (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[77, "id3"]], "file_name (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[77, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.file_name"], [77, "id0"]], "metadata (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[77, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.metadata"], [77, "id2"]], "mode (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[77, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.mode"]], "read() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[77, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.read"]], "resolutions (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[77, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.resolutions"]], "set_metadata_from_configuration_experiment() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[77, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.set_metadata_from_configuration_experiment"]], "shape (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[77, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.shape"]], "shapes (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[77, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.shapes"]], "subdivisions (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[77, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.subdivisions"]], "voxel_size (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[77, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.voxel_size"]], "write() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[77, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.write"]], "aslm.model.data_sources.data_source": [[78, "module-aslm.model.data_sources.data_source"]], "datasource (class in aslm.model.data_sources.data_source)": [[79, "aslm.model.data_sources.data_source.DataSource"]], "__init__() (aslm.model.data_sources.data_source.datasource method)": [[79, "aslm.model.data_sources.data_source.DataSource.__init__"]], "close() (aslm.model.data_sources.data_source.datasource method)": [[79, "aslm.model.data_sources.data_source.DataSource.close"]], "data (aslm.model.data_sources.data_source.datasource attribute)": [[79, "aslm.model.data_sources.data_source.DataSource.data"], [79, "id1"]], "data (aslm.model.data_sources.data_source.datasource property)": [[79, "id3"]], "file_name (aslm.model.data_sources.data_source.datasource attribute)": [[79, "aslm.model.data_sources.data_source.DataSource.file_name"], [79, "id0"]], "metadata (aslm.model.data_sources.data_source.datasource attribute)": [[79, "aslm.model.data_sources.data_source.DataSource.metadata"], [79, "id2"]], "mode (aslm.model.data_sources.data_source.datasource property)": [[79, "aslm.model.data_sources.data_source.DataSource.mode"]], "read() (aslm.model.data_sources.data_source.datasource method)": [[79, "aslm.model.data_sources.data_source.DataSource.read"]], "set_metadata_from_configuration_experiment() (aslm.model.data_sources.data_source.datasource method)": [[79, "aslm.model.data_sources.data_source.DataSource.set_metadata_from_configuration_experiment"]], "shape (aslm.model.data_sources.data_source.datasource property)": [[79, "aslm.model.data_sources.data_source.DataSource.shape"]], "voxel_size (aslm.model.data_sources.data_source.datasource property)": [[79, "aslm.model.data_sources.data_source.DataSource.voxel_size"]], "write() (aslm.model.data_sources.data_source.datasource method)": [[79, "aslm.model.data_sources.data_source.DataSource.write"]], "get_data_source() (in module aslm.model.data_sources)": [[80, "aslm.model.data_sources.get_data_source"]], "aslm.model.data_sources.tiff_data_source": [[81, "module-aslm.model.data_sources.tiff_data_source"]], "tiffdatasource (class in aslm.model.data_sources.tiff_data_source)": [[82, "aslm.model.data_sources.tiff_data_source.TiffDataSource"]], "__init__() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[82, "aslm.model.data_sources.tiff_data_source.TiffDataSource.__init__"]], "close() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[82, "aslm.model.data_sources.tiff_data_source.TiffDataSource.close"]], "data (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[82, "aslm.model.data_sources.tiff_data_source.TiffDataSource.data"], [82, "id1"]], "data (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[82, "id3"]], "file_name (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[82, "aslm.model.data_sources.tiff_data_source.TiffDataSource.file_name"], [82, "id0"]], "generate_image_name() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[82, "aslm.model.data_sources.tiff_data_source.TiffDataSource.generate_image_name"]], "metadata (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[82, "aslm.model.data_sources.tiff_data_source.TiffDataSource.metadata"], [82, "id2"]], "mode (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[82, "aslm.model.data_sources.tiff_data_source.TiffDataSource.mode"]], "read() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[82, "aslm.model.data_sources.tiff_data_source.TiffDataSource.read"]], "set_metadata_from_configuration_experiment() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[82, "aslm.model.data_sources.tiff_data_source.TiffDataSource.set_metadata_from_configuration_experiment"]], "shape (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[82, "aslm.model.data_sources.tiff_data_source.TiffDataSource.shape"]], "voxel_size (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[82, "aslm.model.data_sources.tiff_data_source.TiffDataSource.voxel_size"]], "write() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[82, "aslm.model.data_sources.tiff_data_source.TiffDataSource.write"]], "aslm.model.data_sources.zarr_data_source": [[83, "module-aslm.model.data_sources.zarr_data_source"]], "zarrdatasource (class in aslm.model.data_sources.zarr_data_source)": [[84, "aslm.model.data_sources.zarr_data_source.ZarrDataSource"]], "__init__() (aslm.model.data_sources.zarr_data_source.zarrdatasource method)": [[84, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.__init__"]], "close() (aslm.model.data_sources.zarr_data_source.zarrdatasource method)": [[84, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.close"]], "copy_to_zarr() (aslm.model.data_sources.zarr_data_source.zarrdatasource method)": [[84, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.copy_to_zarr"]], "data (aslm.model.data_sources.zarr_data_source.zarrdatasource attribute)": [[84, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.data"], [84, "id1"]], "data (aslm.model.data_sources.zarr_data_source.zarrdatasource property)": [[84, "id3"]], "file_name (aslm.model.data_sources.zarr_data_source.zarrdatasource attribute)": [[84, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.file_name"], [84, "id0"]], "metadata (aslm.model.data_sources.zarr_data_source.zarrdatasource attribute)": [[84, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.metadata"], [84, "id2"]], "mode (aslm.model.data_sources.zarr_data_source.zarrdatasource property)": [[84, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.mode"]], "read() (aslm.model.data_sources.zarr_data_source.zarrdatasource method)": [[84, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.read"]], "set_metadata_from_configuration_experiment() (aslm.model.data_sources.zarr_data_source.zarrdatasource method)": [[84, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.set_metadata_from_configuration_experiment"]], "shape (aslm.model.data_sources.zarr_data_source.zarrdatasource property)": [[84, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.shape"]], "voxel_size (aslm.model.data_sources.zarr_data_source.zarrdatasource property)": [[84, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.voxel_size"]], "write() (aslm.model.data_sources.zarr_data_source.zarrdatasource method)": [[84, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.write"]], "aslm.model.device_startup_functions": [[85, "module-aslm.model.device_startup_functions"]], "dummydeviceconnection (class in aslm.model.device_startup_functions)": [[86, "aslm.model.device_startup_functions.DummyDeviceConnection"]], "__init__() (aslm.model.device_startup_functions.dummydeviceconnection method)": [[86, "aslm.model.device_startup_functions.DummyDeviceConnection.__init__"]], "auto_redial() (in module aslm.model.device_startup_functions)": [[87, "aslm.model.device_startup_functions.auto_redial"]], "device_not_found() (in module aslm.model.device_startup_functions)": [[88, "aslm.model.device_startup_functions.device_not_found"]], "load_camera_connection() (in module aslm.model.device_startup_functions)": [[89, "aslm.model.device_startup_functions.load_camera_connection"]], "load_devices() (in module aslm.model.device_startup_functions)": [[90, "aslm.model.device_startup_functions.load_devices"]], "load_filter_wheel_connection() (in module aslm.model.device_startup_functions)": [[91, "aslm.model.device_startup_functions.load_filter_wheel_connection"]], "load_stages() (in module aslm.model.device_startup_functions)": [[92, "aslm.model.device_startup_functions.load_stages"]], "load_zoom_connection() (in module aslm.model.device_startup_functions)": [[93, "aslm.model.device_startup_functions.load_zoom_connection"]], "start_camera() (in module aslm.model.device_startup_functions)": [[94, "aslm.model.device_startup_functions.start_camera"]], "start_daq() (in module aslm.model.device_startup_functions)": [[95, "aslm.model.device_startup_functions.start_daq"]], "start_filter_wheel() (in module aslm.model.device_startup_functions)": [[96, "aslm.model.device_startup_functions.start_filter_wheel"]], "start_galvo() (in module aslm.model.device_startup_functions)": [[97, "aslm.model.device_startup_functions.start_galvo"]], "start_lasers() (in module aslm.model.device_startup_functions)": [[98, "aslm.model.device_startup_functions.start_lasers"]], "start_remote_focus_device() (in module aslm.model.device_startup_functions)": [[99, "aslm.model.device_startup_functions.start_remote_focus_device"]], "start_shutter() (in module aslm.model.device_startup_functions)": [[100, "aslm.model.device_startup_functions.start_shutter"]], "start_stage() (in module aslm.model.device_startup_functions)": [[101, "aslm.model.device_startup_functions.start_stage"]], "start_zoom() (in module aslm.model.device_startup_functions)": [[102, "aslm.model.device_startup_functions.start_zoom"]], "aslm.model.devices": [[103, "module-aslm.model.devices"]], "aslm.model.devices.apis": [[104, "module-aslm.model.devices.APIs"]], "aslm.model.devices.apis.coherent": [[105, "module-aslm.model.devices.APIs.coherent"]], "aslm.model.devices.apis.dynamixel": [[106, "module-aslm.model.devices.APIs.dynamixel"]], "aslm.model.devices.apis.logitech": [[107, "module-aslm.model.devices.APIs.logitech"]], "aslm.model.devices.apis.omicron": [[108, "module-aslm.model.devices.APIs.omicron"]], "aslm.model.devices.camera": [[109, "module-aslm.model.devices.camera"]], "aslm.model.devices.camera.camera_base": [[110, "module-aslm.model.devices.camera.camera_base"]], "camerabase (class in aslm.model.devices.camera.camera_base)": [[111, "aslm.model.devices.camera.camera_base.CameraBase"]], "__init__() (aslm.model.devices.camera.camera_base.camerabase method)": [[111, "aslm.model.devices.camera.camera_base.CameraBase.__init__"]], "calculate_light_sheet_exposure_time() (aslm.model.devices.camera.camera_base.camerabase method)": [[111, "aslm.model.devices.camera.camera_base.CameraBase.calculate_light_sheet_exposure_time"]], "set_readout_direction() (aslm.model.devices.camera.camera_base.camerabase method)": [[111, "aslm.model.devices.camera.camera_base.CameraBase.set_readout_direction"]], "aslm.model.devices.camera.camera_hamamatsu": [[112, "module-aslm.model.devices.camera.camera_hamamatsu"]], "hamamatsuorca (class in aslm.model.devices.camera.camera_hamamatsu)": [[113, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca"]], "__init__() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[113, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.__init__"]], "calculate_light_sheet_exposure_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[113, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.calculate_light_sheet_exposure_time"]], "calculate_readout_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[113, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.calculate_readout_time"]], "close_camera() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[113, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.close_camera"]], "close_image_series() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[113, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.close_image_series"]], "get_minimum_waiting_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[113, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.get_minimum_waiting_time"]], "get_new_frame() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[113, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.get_new_frame"]], "initialize_image_series() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[113, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.initialize_image_series"]], "report_settings() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[113, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.report_settings"]], "serial_number (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[113, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.serial_number"]], "set_roi() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[113, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_ROI"]], "set_binning() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[113, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_binning"]], "set_exposure_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[113, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_exposure_time"]], "set_line_interval() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[113, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_line_interval"]], "set_readout_direction() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[113, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_readout_direction"]], "set_sensor_mode() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[113, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_sensor_mode"]], "hamamatsuorcalightning (class in aslm.model.devices.camera.camera_hamamatsu)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning"]], "__init__() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.__init__"]], "calculate_light_sheet_exposure_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.calculate_light_sheet_exposure_time"]], "calculate_readout_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.calculate_readout_time"]], "close_camera() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.close_camera"]], "close_image_series() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.close_image_series"]], "get_minimum_waiting_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.get_minimum_waiting_time"]], "get_new_frame() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.get_new_frame"]], "initialize_image_series() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.initialize_image_series"]], "report_settings() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.report_settings"]], "serial_number (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning property)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.serial_number"]], "set_roi() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.set_ROI"]], "set_binning() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.set_binning"]], "set_exposure_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.set_exposure_time"]], "set_line_interval() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.set_line_interval"]], "set_readout_direction() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.set_readout_direction"]], "set_sensor_mode() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.set_sensor_mode"]], "aslm.model.devices.camera.camera_synthetic": [[115, "module-aslm.model.devices.camera.camera_synthetic"]], "syntheticcamera (class in aslm.model.devices.camera.camera_synthetic)": [[116, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera"]], "__init__() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[116, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.__init__"]], "calculate_light_sheet_exposure_time() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[116, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.calculate_light_sheet_exposure_time"]], "calculate_readout_time() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[116, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.calculate_readout_time"]], "close_camera() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[116, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.close_camera"]], "close_image_series() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[116, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.close_image_series"]], "generate_new_frame() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[116, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.generate_new_frame"]], "get_minimum_waiting_time() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[116, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.get_minimum_waiting_time"]], "get_new_frame() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[116, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.get_new_frame"]], "initialize_image_series() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[116, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.initialize_image_series"]], "load_images() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[116, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.load_images"]], "report_settings() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[116, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.report_settings"]], "set_roi() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[116, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_ROI"]], "set_binning() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[116, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_binning"]], "set_exposure_time() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[116, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_exposure_time"]], "set_line_interval() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[116, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_line_interval"]], "set_readout_direction() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[116, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_readout_direction"]], "set_sensor_mode() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[116, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_sensor_mode"]], "syntheticcameracontroller (class in aslm.model.devices.camera.camera_synthetic)": [[117, "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController"]], "__init__() (aslm.model.devices.camera.camera_synthetic.syntheticcameracontroller method)": [[117, "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController.__init__"]], "get_property_value() (aslm.model.devices.camera.camera_synthetic.syntheticcameracontroller method)": [[117, "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController.get_property_value"]], "aslm.model.devices.daq": [[118, "module-aslm.model.devices.daq"]], "aslm.model.devices.daq.daq_base": [[119, "module-aslm.model.devices.daq.daq_base"]], "daqbase (class in aslm.model.devices.daq.daq_base)": [[120, "aslm.model.devices.daq.daq_base.DAQBase"]], "__init__() (aslm.model.devices.daq.daq_base.daqbase method)": [[120, "aslm.model.devices.daq.daq_base.DAQBase.__init__"]], "calculate_all_waveforms() (aslm.model.devices.daq.daq_base.daqbase method)": [[120, "aslm.model.devices.daq.daq_base.DAQBase.calculate_all_waveforms"]], "configuration (aslm.model.devices.daq.daq_base.daqbase attribute)": [[120, "aslm.model.devices.daq.daq_base.DAQBase.configuration"]], "aslm.model.devices.daq.daq_synthetic": [[121, "module-aslm.model.devices.daq.daq_synthetic"]], "syntheticdaq (class in aslm.model.devices.daq.daq_synthetic)": [[122, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ"]], "__init__() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[122, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.__init__"]], "add_camera() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[122, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.add_camera"]], "calculate_all_waveforms() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[122, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.calculate_all_waveforms"]], "close_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[122, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.close_tasks"]], "configuration (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[122, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.configuration"]], "create_camera_task() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[122, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.create_camera_task"]], "create_galvo_remote_focus_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[122, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.create_galvo_remote_focus_tasks"]], "create_master_trigger_task() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[122, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.create_master_trigger_task"]], "prepare_acquisition() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[122, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.prepare_acquisition"]], "run_acquisition() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[122, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.run_acquisition"]], "start_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[122, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.start_tasks"]], "stop_acquisition() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[122, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.stop_acquisition"]], "stop_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[122, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.stop_tasks"]], "write_waveforms_to_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[122, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.write_waveforms_to_tasks"]], "aslm.model.devices.filter_wheel": [[123, "module-aslm.model.devices.filter_wheel"]], "aslm.model.devices.filter_wheel.filter_wheel_asi": [[124, "module-aslm.model.devices.filter_wheel.filter_wheel_asi"]], "asifilterwheel (class in aslm.model.devices.filter_wheel.filter_wheel_asi)": [[125, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel"]], "__init__() (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel method)": [[125, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.__init__"]], "check_if_filter_in_filter_dictionary() (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel method)": [[125, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.check_if_filter_in_filter_dictionary"]], "close() (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel method)": [[125, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.close"]], "filter_change_delay() (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel method)": [[125, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.filter_change_delay"]], "set_filter() (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel method)": [[125, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.set_filter"]], "baudrate (in module aslm.model.devices.filter_wheel.filter_wheel_asi)": [[126, "aslm.model.devices.filter_wheel.filter_wheel_asi.baudrate"]], "build_filter_wheel_connection() (in module aslm.model.devices.filter_wheel.filter_wheel_asi)": [[126, "aslm.model.devices.filter_wheel.filter_wheel_asi.build_filter_wheel_connection"]], "aslm.model.devices.filter_wheel.filter_wheel_base": [[127, "module-aslm.model.devices.filter_wheel.filter_wheel_base"]], "filterwheelbase (class in aslm.model.devices.filter_wheel.filter_wheel_base)": [[128, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase"]], "__init__() (aslm.model.devices.filter_wheel.filter_wheel_base.filterwheelbase method)": [[128, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.__init__"]], "check_if_filter_in_filter_dictionary() (aslm.model.devices.filter_wheel.filter_wheel_base.filterwheelbase method)": [[128, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.check_if_filter_in_filter_dictionary"], [128, "id0"]], "filter_dictionary (aslm.model.devices.filter_wheel.filter_wheel_base.filterwheelbase attribute)": [[128, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.filter_dictionary"]], "wheel_position (aslm.model.devices.filter_wheel.filter_wheel_base.filterwheelbase attribute)": [[128, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.wheel_position"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter": [[129, "module-aslm.model.devices.filter_wheel.filter_wheel_sutter"]], "sutterfilterwheel (class in aslm.model.devices.filter_wheel.filter_wheel_sutter)": [[130, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel"]], "__init__() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[130, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.__init__"]], "check_if_filter_in_filter_dictionary() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[130, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.check_if_filter_in_filter_dictionary"], [130, "id0"]], "close() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[130, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.close"], [130, "id1"]], "filter_change_delay() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[130, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.filter_change_delay"], [130, "id2"]], "filter_dictionary (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[130, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.filter_dictionary"]], "number_of_filter_wheels (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[130, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.number_of_filter_wheels"]], "read() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[130, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.read"], [130, "id3"]], "set_filter() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[130, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.set_filter"]], "wheel_position (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[130, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.wheel_position"]], "baudrate (in module aslm.model.devices.filter_wheel.filter_wheel_sutter)": [[131, "aslm.model.devices.filter_wheel.filter_wheel_sutter.baudrate"]], "build_filter_wheel_connection() (in module aslm.model.devices.filter_wheel.filter_wheel_sutter)": [[131, "aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic": [[132, "module-aslm.model.devices.filter_wheel.filter_wheel_synthetic"]], "syntheticfilterwheel (class in aslm.model.devices.filter_wheel.filter_wheel_synthetic)": [[133, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel"]], "__init__() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[133, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.__init__"]], "baudrate (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[133, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.baudrate"]], "check_if_filter_in_filter_dictionary() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[133, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.check_if_filter_in_filter_dictionary"]], "close() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[133, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.close"]], "comport (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[133, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.comport"]], "filter_change_delay() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[133, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.filter_change_delay"]], "filter_dictionary (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[133, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.filter_dictionary"]], "number_of_filter_wheels (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[133, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.number_of_filter_wheels"]], "read() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[133, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.read"]], "set_filter() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[133, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.set_filter"]], "wheel_position (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[133, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.wheel_position"]], "aslm.model.devices.galvo": [[134, "module-aslm.model.devices.galvo"]], "aslm.model.devices.galvo.galvo_base": [[135, "module-aslm.model.devices.galvo.galvo_base"]], "galvobase (class in aslm.model.devices.galvo.galvo_base)": [[136, "aslm.model.devices.galvo.galvo_base.GalvoBase"]], "__init__() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[136, "aslm.model.devices.galvo.galvo_base.GalvoBase.__init__"]], "adjust() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[136, "aslm.model.devices.galvo.galvo_base.GalvoBase.adjust"]], "camera_delay_percent (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[136, "aslm.model.devices.galvo.galvo_base.GalvoBase.camera_delay_percent"]], "close_task() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[136, "aslm.model.devices.galvo.galvo_base.GalvoBase.close_task"], [136, "id0"]], "configuration (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[136, "aslm.model.devices.galvo.galvo_base.GalvoBase.configuration"]], "device_config (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[136, "aslm.model.devices.galvo.galvo_base.GalvoBase.device_config"]], "galvo_max_voltage (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[136, "aslm.model.devices.galvo.galvo_base.GalvoBase.galvo_max_voltage"]], "galvo_min_voltage (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[136, "aslm.model.devices.galvo.galvo_base.GalvoBase.galvo_min_voltage"]], "galvo_name (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[136, "aslm.model.devices.galvo.galvo_base.GalvoBase.galvo_name"]], "microscope_name (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[136, "aslm.model.devices.galvo.galvo_base.GalvoBase.microscope_name"]], "prepare_task() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[136, "aslm.model.devices.galvo.galvo_base.GalvoBase.prepare_task"], [136, "id1"]], "remote_focus_ramp_falling (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[136, "aslm.model.devices.galvo.galvo_base.GalvoBase.remote_focus_ramp_falling"]], "sample_rate (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[136, "aslm.model.devices.galvo.galvo_base.GalvoBase.sample_rate"]], "samples (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[136, "aslm.model.devices.galvo.galvo_base.GalvoBase.samples"]], "start_task() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[136, "aslm.model.devices.galvo.galvo_base.GalvoBase.start_task"], [136, "id2"]], "stop_task() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[136, "aslm.model.devices.galvo.galvo_base.GalvoBase.stop_task"], [136, "id3"]], "sweep_time (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[136, "aslm.model.devices.galvo.galvo_base.GalvoBase.sweep_time"]], "waveform_dict (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[136, "aslm.model.devices.galvo.galvo_base.GalvoBase.waveform_dict"]], "aslm.model.devices.galvo.galvo_synthetic": [[137, "module-aslm.model.devices.galvo.galvo_synthetic"]], "none (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[138, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.None"]], "syntheticgalvo (class in aslm.model.devices.galvo.galvo_synthetic)": [[138, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo"]], "__init__() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[138, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.__init__"]], "adjust() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[138, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.adjust"]], "close_task() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[138, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.close_task"], [138, "id0"]], "prepare_task() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[138, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.prepare_task"], [138, "id1"]], "start_task() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[138, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.start_task"], [138, "id2"]], "stop_task() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[138, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.stop_task"], [138, "id3"]], "aslm.model.devices.joystick": [[139, "module-aslm.model.devices.joystick"]], "aslm.model.devices.joystick.joystick_base": [[140, "module-aslm.model.devices.joystick.joystick_base"]], "joystickbase (class in aslm.model.devices.joystick.joystick_base)": [[141, "aslm.model.devices.joystick.joystick_base.JoystickBase"]], "__init__() (aslm.model.devices.joystick.joystick_base.joystickbase method)": [[141, "aslm.model.devices.joystick.joystick_base.JoystickBase.__init__"]], "aslm.model.devices.joystick.joystick_synthetic": [[142, "module-aslm.model.devices.joystick.joystick_synthetic"]], "syntheticjoystick (class in aslm.model.devices.joystick.joystick_synthetic)": [[143, "aslm.model.devices.joystick.joystick_synthetic.SyntheticJoystick"]], "__init__() (aslm.model.devices.joystick.joystick_synthetic.syntheticjoystick method)": [[143, "aslm.model.devices.joystick.joystick_synthetic.SyntheticJoystick.__init__"]], "aslm.model.devices.lasers": [[144, "module-aslm.model.devices.lasers"]], "aslm.model.devices.lasers.laser_base": [[145, "module-aslm.model.devices.lasers.laser_base"]], "laserbase (class in aslm.model.devices.lasers.laser_base)": [[146, "aslm.model.devices.lasers.laser_base.LaserBase"]], "__init__() (aslm.model.devices.lasers.laser_base.laserbase method)": [[146, "aslm.model.devices.lasers.laser_base.LaserBase.__init__"]], "close() (aslm.model.devices.lasers.laser_base.laserbase method)": [[146, "aslm.model.devices.lasers.laser_base.LaserBase.close"]], "initialize_laser() (aslm.model.devices.lasers.laser_base.laserbase method)": [[146, "aslm.model.devices.lasers.laser_base.LaserBase.initialize_laser"]], "aslm.model.devices.lasers.laser_synthetic": [[147, "module-aslm.model.devices.lasers.laser_synthetic"]], "syntheticlaser (class in aslm.model.devices.lasers.laser_synthetic)": [[148, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser"]], "__init__() (aslm.model.devices.lasers.laser_synthetic.syntheticlaser method)": [[148, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.__init__"]], "close() (aslm.model.devices.lasers.laser_synthetic.syntheticlaser method)": [[148, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.close"]], "initialize_laser() (aslm.model.devices.lasers.laser_synthetic.syntheticlaser method)": [[148, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.initialize_laser"]], "aslm.model.devices.lasers.laser_trigger_base": [[149, "module-aslm.model.devices.lasers.laser_trigger_base"]], "lasertriggerbase (class in aslm.model.devices.lasers.laser_trigger_base)": [[150, "aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase"]], "__init__() (aslm.model.devices.lasers.laser_trigger_base.lasertriggerbase method)": [[150, "aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase.__init__"]], "enable_high_resolution_laser() (aslm.model.devices.lasers.laser_trigger_base.lasertriggerbase method)": [[150, "aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase.enable_high_resolution_laser"]], "enable_low_resolution_laser() (aslm.model.devices.lasers.laser_trigger_base.lasertriggerbase method)": [[150, "aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase.enable_low_resolution_laser"]], "set_laser_analog_voltage() (aslm.model.devices.lasers.laser_trigger_base.lasertriggerbase method)": [[150, "aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase.set_laser_analog_voltage"]], "aslm.model.devices.lasers.laser_trigger_synthetic": [[151, "module-aslm.model.devices.lasers.laser_trigger_synthetic"]], "syntheticlasertriggers (class in aslm.model.devices.lasers.laser_trigger_synthetic)": [[152, "aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers"]], "__init__() (aslm.model.devices.lasers.laser_trigger_synthetic.syntheticlasertriggers method)": [[152, "aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers.__init__"]], "enable_high_resolution_laser() (aslm.model.devices.lasers.laser_trigger_synthetic.syntheticlasertriggers method)": [[152, "aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers.enable_high_resolution_laser"]], "enable_low_resolution_laser() (aslm.model.devices.lasers.laser_trigger_synthetic.syntheticlasertriggers method)": [[152, "aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers.enable_low_resolution_laser"]], "set_laser_analog_voltage() (aslm.model.devices.lasers.laser_trigger_synthetic.syntheticlasertriggers method)": [[152, "aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers.set_laser_analog_voltage"]], "aslm.model.devices.objectives": [[153, "module-aslm.model.devices.objectives"]], "objective (class in aslm.model.devices.objectives)": [[154, "aslm.model.devices.objectives.Objective"]], "__init__() (aslm.model.devices.objectives.objective method)": [[154, "aslm.model.devices.objectives.Objective.__init__"]], "calculate_entrance_pupil() (aslm.model.devices.objectives.objective method)": [[154, "aslm.model.devices.objectives.Objective.calculate_entrance_pupil"]], "aslm.model.devices.remote_focus": [[155, "module-aslm.model.devices.remote_focus"]], "aslm.model.devices.remote_focus.remote_focus_base": [[156, "module-aslm.model.devices.remote_focus.remote_focus_base"]], "remotefocusbase (class in aslm.model.devices.remote_focus.remote_focus_base)": [[157, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase"]], "__init__() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[157, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.__init__"]], "adjust() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[157, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.adjust"]], "camera_delay_percent (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[157, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.camera_delay_percent"]], "close_task() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[157, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.close_task"]], "configuration (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[157, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.configuration"]], "device_config (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[157, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.device_config"]], "microscope_name (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[157, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.microscope_name"]], "prepare_task() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[157, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.prepare_task"], [157, "id0"]], "remote_focus_delay (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[157, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.remote_focus_delay"]], "remote_focus_max_voltage (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[157, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.remote_focus_max_voltage"]], "remote_focus_min_voltage (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[157, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.remote_focus_min_voltage"]], "remote_focus_ramp_falling (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[157, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.remote_focus_ramp_falling"]], "sample_rate (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[157, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.sample_rate"]], "samples (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[157, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.samples"]], "start_task() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[157, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.start_task"], [157, "id1"]], "stop_task() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[157, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.stop_task"], [157, "id2"]], "sweep_time (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[157, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.sweep_time"]], "waveform_dict (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[157, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.waveform_dict"]], "aslm.model.devices.remote_focus.remote_focus_equipment_solutions": [[158, "module-aslm.model.devices.remote_focus.remote_focus_equipment_solutions"]], "remotefocusequipmentsolutions (class in aslm.model.devices.remote_focus.remote_focus_equipment_solutions)": [[159, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions"]], "__init__() (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions method)": [[159, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.__init__"]], "adjust() (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions method)": [[159, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.adjust"]], "baud_rate (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions attribute)": [[159, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.baud_rate"]], "byte_size (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions attribute)": [[159, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.byte_size"]], "close_connection() (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions method)": [[159, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.close_connection"], [159, "id0"]], "comport (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions attribute)": [[159, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.comport"]], "debug (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions attribute)": [[159, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.debug"]], "parity (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions attribute)": [[159, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.parity"]], "prepare_task() (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions method)": [[159, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.prepare_task"]], "read_bytes() (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions method)": [[159, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.read_bytes"], [159, "id1"]], "read_on_init (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions attribute)": [[159, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.read_on_init"]], "send_command() (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions method)": [[159, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.send_command"], [159, "id2"]], "start_task() (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions method)": [[159, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.start_task"]], "stop_bits (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions attribute)": [[159, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.stop_bits"]], "stop_task() (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions method)": [[159, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.stop_task"]], "timeout (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions attribute)": [[159, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.timeout"]], "aslm.model.devices.remote_focus.remote_focus_synthetic": [[160, "module-aslm.model.devices.remote_focus.remote_focus_synthetic"]], "syntheticremotefocus (class in aslm.model.devices.remote_focus.remote_focus_synthetic)": [[161, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus"]], "__init__() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[161, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.__init__"]], "adjust() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[161, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.adjust"]], "close_task() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[161, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.close_task"], [161, "id0"]], "configuration (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[161, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.configuration"]], "device_connection (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[161, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.device_connection"]], "microscope_name (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[161, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.microscope_name"]], "prepare_task() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[161, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.prepare_task"], [161, "id1"]], "start_task() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[161, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.start_task"], [161, "id2"]], "stop_task() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[161, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.stop_task"], [161, "id3"]], "aslm.model.devices.shutter": [[162, "module-aslm.model.devices.shutter"]], "aslm.model.devices.shutter.laser_shutter_base": [[163, "module-aslm.model.devices.shutter.laser_shutter_base"]], "shutterbase (class in aslm.model.devices.shutter.laser_shutter_base)": [[164, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase"]], "__init__() (aslm.model.devices.shutter.laser_shutter_base.shutterbase method)": [[164, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.__init__"]], "configuration (aslm.model.devices.shutter.laser_shutter_base.shutterbase attribute)": [[164, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.configuration"]], "device_connection (aslm.model.devices.shutter.laser_shutter_base.shutterbase attribute)": [[164, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.device_connection"]], "microscope_name (aslm.model.devices.shutter.laser_shutter_base.shutterbase attribute)": [[164, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.microscope_name"]], "aslm.model.devices.shutter.laser_shutter_synthetic": [[165, "module-aslm.model.devices.shutter.laser_shutter_synthetic"]], "syntheticshutter (class in aslm.model.devices.shutter.laser_shutter_synthetic)": [[166, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter"]], "__init__() (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter method)": [[166, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.__init__"]], "close_shutters() (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter method)": [[166, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.close_shutters"]], "configuration (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter attribute)": [[166, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.configuration"]], "device_connection (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter attribute)": [[166, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.device_connection"]], "microscope_name (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter attribute)": [[166, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.microscope_name"]], "open_left() (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter method)": [[166, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.open_left"]], "open_right() (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter method)": [[166, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.open_right"]], "state() (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter method)": [[166, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.state"]], "aslm.model.devices.stages": [[167, "module-aslm.model.devices.stages"]], "aslm.model.devices.stages.stage_asi": [[168, "module-aslm.model.devices.stages.stage_asi"]], "asistage (class in aslm.model.devices.stages.stage_asi)": [[169, "aslm.model.devices.stages.stage_asi.ASIStage"]], "__init__() (aslm.model.devices.stages.stage_asi.asistage method)": [[169, "aslm.model.devices.stages.stage_asi.ASIStage.__init__"]], "axes_mapping (aslm.model.devices.stages.stage_asi.asistage attribute)": [[169, "aslm.model.devices.stages.stage_asi.ASIStage.axes_mapping"]], "default_speed (aslm.model.devices.stages.stage_asi.asistage attribute)": [[169, "aslm.model.devices.stages.stage_asi.ASIStage.default_speed"]], "f_max (aslm.model.devices.stages.stage_asi.asistage attribute)": [[169, "aslm.model.devices.stages.stage_asi.ASIStage.f_max"]], "f_min (aslm.model.devices.stages.stage_asi.asistage attribute)": [[169, "aslm.model.devices.stages.stage_asi.ASIStage.f_min"]], "f_pos (aslm.model.devices.stages.stage_asi.asistage attribute)": [[169, "aslm.model.devices.stages.stage_asi.ASIStage.f_pos"]], "get_abs_position() (aslm.model.devices.stages.stage_asi.asistage method)": [[169, "aslm.model.devices.stages.stage_asi.ASIStage.get_abs_position"], [169, "id0"]], "get_axis_position() (aslm.model.devices.stages.stage_asi.asistage method)": [[169, "aslm.model.devices.stages.stage_asi.ASIStage.get_axis_position"], [169, "id1"]], "get_position_dict() (aslm.model.devices.stages.stage_asi.asistage method)": [[169, "aslm.model.devices.stages.stage_asi.ASIStage.get_position_dict"], [169, "id2"]], "get_speed() (aslm.model.devices.stages.stage_asi.asistage method)": [[169, "aslm.model.devices.stages.stage_asi.ASIStage.get_speed"], [169, "id3"]], "move_absolute() (aslm.model.devices.stages.stage_asi.asistage method)": [[169, "aslm.model.devices.stages.stage_asi.ASIStage.move_absolute"], [169, "id4"]], "move_axis_absolute() (aslm.model.devices.stages.stage_asi.asistage method)": [[169, "aslm.model.devices.stages.stage_asi.ASIStage.move_axis_absolute"], [169, "id5"]], "position_dict (aslm.model.devices.stages.stage_asi.asistage attribute)": [[169, "aslm.model.devices.stages.stage_asi.ASIStage.position_dict"]], "report_position() (aslm.model.devices.stages.stage_asi.asistage method)": [[169, "aslm.model.devices.stages.stage_asi.ASIStage.report_position"], [169, "id6"]], "scanr() (aslm.model.devices.stages.stage_asi.asistage method)": [[169, "aslm.model.devices.stages.stage_asi.ASIStage.scanr"], [169, "id7"]], "set_speed() (aslm.model.devices.stages.stage_asi.asistage method)": [[169, "aslm.model.devices.stages.stage_asi.ASIStage.set_speed"], [169, "id8"]], "start_scan() (aslm.model.devices.stages.stage_asi.asistage method)": [[169, "aslm.model.devices.stages.stage_asi.ASIStage.start_scan"], [169, "id9"]], "stop() (aslm.model.devices.stages.stage_asi.asistage method)": [[169, "aslm.model.devices.stages.stage_asi.ASIStage.stop"], [169, "id10"]], "stop_scan() (aslm.model.devices.stages.stage_asi.asistage method)": [[169, "aslm.model.devices.stages.stage_asi.ASIStage.stop_scan"], [169, "id11"]], "theta_max (aslm.model.devices.stages.stage_asi.asistage attribute)": [[169, "aslm.model.devices.stages.stage_asi.ASIStage.theta_max"]], "theta_min (aslm.model.devices.stages.stage_asi.asistage attribute)": [[169, "aslm.model.devices.stages.stage_asi.ASIStage.theta_min"]], "theta_pos (aslm.model.devices.stages.stage_asi.asistage attribute)": [[169, "aslm.model.devices.stages.stage_asi.ASIStage.theta_pos"]], "verify_abs_position() (aslm.model.devices.stages.stage_asi.asistage method)": [[169, "aslm.model.devices.stages.stage_asi.ASIStage.verify_abs_position"], [169, "id12"]], "x_max (aslm.model.devices.stages.stage_asi.asistage attribute)": [[169, "aslm.model.devices.stages.stage_asi.ASIStage.x_max"]], "x_min (aslm.model.devices.stages.stage_asi.asistage attribute)": [[169, "aslm.model.devices.stages.stage_asi.ASIStage.x_min"]], "x_pos (aslm.model.devices.stages.stage_asi.asistage attribute)": [[169, "aslm.model.devices.stages.stage_asi.ASIStage.x_pos"]], "y_max (aslm.model.devices.stages.stage_asi.asistage attribute)": [[169, "aslm.model.devices.stages.stage_asi.ASIStage.y_max"]], "y_min (aslm.model.devices.stages.stage_asi.asistage attribute)": [[169, "aslm.model.devices.stages.stage_asi.ASIStage.y_min"]], "y_pos (aslm.model.devices.stages.stage_asi.asistage attribute)": [[169, "aslm.model.devices.stages.stage_asi.ASIStage.y_pos"]], "z_max (aslm.model.devices.stages.stage_asi.asistage attribute)": [[169, "aslm.model.devices.stages.stage_asi.ASIStage.z_max"]], "z_min (aslm.model.devices.stages.stage_asi.asistage attribute)": [[169, "aslm.model.devices.stages.stage_asi.ASIStage.z_min"]], "z_pos (aslm.model.devices.stages.stage_asi.asistage attribute)": [[169, "aslm.model.devices.stages.stage_asi.ASIStage.z_pos"]], "build_asi_stage_connection() (in module aslm.model.devices.stages.stage_asi)": [[170, "aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection"]], "aslm.model.devices.stages.stage_base": [[171, "module-aslm.model.devices.stages.stage_base"]], "stagebase (class in aslm.model.devices.stages.stage_base)": [[172, "aslm.model.devices.stages.stage_base.StageBase"]], "__init__() (aslm.model.devices.stages.stage_base.stagebase method)": [[172, "aslm.model.devices.stages.stage_base.StageBase.__init__"]], "axes_mapping (aslm.model.devices.stages.stage_base.stagebase attribute)": [[172, "aslm.model.devices.stages.stage_base.StageBase.axes_mapping"]], "f_max (aslm.model.devices.stages.stage_base.stagebase attribute)": [[172, "aslm.model.devices.stages.stage_base.StageBase.f_max"]], "f_min (aslm.model.devices.stages.stage_base.stagebase attribute)": [[172, "aslm.model.devices.stages.stage_base.StageBase.f_min"]], "f_pos (aslm.model.devices.stages.stage_base.stagebase attribute)": [[172, "aslm.model.devices.stages.stage_base.StageBase.f_pos"]], "get_abs_position() (aslm.model.devices.stages.stage_base.stagebase method)": [[172, "aslm.model.devices.stages.stage_base.StageBase.get_abs_position"], [172, "id0"]], "get_position_dict() (aslm.model.devices.stages.stage_base.stagebase method)": [[172, "aslm.model.devices.stages.stage_base.StageBase.get_position_dict"], [172, "id1"]], "stop() (aslm.model.devices.stages.stage_base.stagebase method)": [[172, "aslm.model.devices.stages.stage_base.StageBase.stop"], [172, "id2"]], "theta_max (aslm.model.devices.stages.stage_base.stagebase attribute)": [[172, "aslm.model.devices.stages.stage_base.StageBase.theta_max"]], "theta_min (aslm.model.devices.stages.stage_base.stagebase attribute)": [[172, "aslm.model.devices.stages.stage_base.StageBase.theta_min"]], "theta_pos (aslm.model.devices.stages.stage_base.stagebase attribute)": [[172, "aslm.model.devices.stages.stage_base.StageBase.theta_pos"]], "verify_abs_position() (aslm.model.devices.stages.stage_base.stagebase method)": [[172, "aslm.model.devices.stages.stage_base.StageBase.verify_abs_position"], [172, "id3"]], "x_max (aslm.model.devices.stages.stage_base.stagebase attribute)": [[172, "aslm.model.devices.stages.stage_base.StageBase.x_max"]], "x_min (aslm.model.devices.stages.stage_base.stagebase attribute)": [[172, "aslm.model.devices.stages.stage_base.StageBase.x_min"]], "x_pos (aslm.model.devices.stages.stage_base.stagebase attribute)": [[172, "aslm.model.devices.stages.stage_base.StageBase.x_pos"]], "y_max (aslm.model.devices.stages.stage_base.stagebase attribute)": [[172, "aslm.model.devices.stages.stage_base.StageBase.y_max"]], "y_min (aslm.model.devices.stages.stage_base.stagebase attribute)": [[172, "aslm.model.devices.stages.stage_base.StageBase.y_min"]], "y_pos (aslm.model.devices.stages.stage_base.stagebase attribute)": [[172, "aslm.model.devices.stages.stage_base.StageBase.y_pos"]], "z_max (aslm.model.devices.stages.stage_base.stagebase attribute)": [[172, "aslm.model.devices.stages.stage_base.StageBase.z_max"]], "z_min (aslm.model.devices.stages.stage_base.stagebase attribute)": [[172, "aslm.model.devices.stages.stage_base.StageBase.z_min"]], "z_pos (aslm.model.devices.stages.stage_base.stagebase attribute)": [[172, "aslm.model.devices.stages.stage_base.StageBase.z_pos"]], "aslm.model.devices.stages.stage_galvo": [[173, "module-aslm.model.devices.stages.stage_galvo"]], "galvonistage (class in aslm.model.devices.stages.stage_galvo)": [[174, "aslm.model.devices.stages.stage_galvo.GalvoNIStage"]], "__init__() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[174, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.__init__"]], "axes_mapping (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[174, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.axes_mapping"]], "create_position_dict() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[174, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.create_position_dict"]], "get_abs_position() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[174, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.get_abs_position"], [174, "id0"]], "get_position_dict() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[174, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.get_position_dict"]], "move_absolute() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[174, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[174, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.move_axis_absolute"]], "report_position() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[174, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.report_position"]], "stop() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[174, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.stop"], [174, "id1"]], "verify_abs_position() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[174, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.verify_abs_position"]], "aslm.model.devices.stages.stage_mcl": [[175, "module-aslm.model.devices.stages.stage_mcl"]], "mclstage (class in aslm.model.devices.stages.stage_mcl)": [[176, "aslm.model.devices.stages.stage_mcl.MCLStage"]], "__init__() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[176, "aslm.model.devices.stages.stage_mcl.MCLStage.__init__"]], "axes_mapping (aslm.model.devices.stages.stage_mcl.mclstage attribute)": [[176, "aslm.model.devices.stages.stage_mcl.MCLStage.axes_mapping"]], "get_abs_position() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[176, "aslm.model.devices.stages.stage_mcl.MCLStage.get_abs_position"]], "get_position_dict() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[176, "aslm.model.devices.stages.stage_mcl.MCLStage.get_position_dict"]], "move_absolute() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[176, "aslm.model.devices.stages.stage_mcl.MCLStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[176, "aslm.model.devices.stages.stage_mcl.MCLStage.move_axis_absolute"]], "report_position() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[176, "aslm.model.devices.stages.stage_mcl.MCLStage.report_position"]], "stop() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[176, "aslm.model.devices.stages.stage_mcl.MCLStage.stop"]], "verify_abs_position() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[176, "aslm.model.devices.stages.stage_mcl.MCLStage.verify_abs_position"]], "build_mclstage_connection() (in module aslm.model.devices.stages.stage_mcl)": [[177, "aslm.model.devices.stages.stage_mcl.build_MCLStage_connection"]], "aslm.model.devices.stages.stage_pi": [[178, "module-aslm.model.devices.stages.stage_pi"]], "pistage (class in aslm.model.devices.stages.stage_pi)": [[179, "aslm.model.devices.stages.stage_pi.PIStage"]], "__init__() (aslm.model.devices.stages.stage_pi.pistage method)": [[179, "aslm.model.devices.stages.stage_pi.PIStage.__init__"]], "axes_mapping (aslm.model.devices.stages.stage_pi.pistage attribute)": [[179, "aslm.model.devices.stages.stage_pi.PIStage.axes_mapping"]], "get_abs_position() (aslm.model.devices.stages.stage_pi.pistage method)": [[179, "aslm.model.devices.stages.stage_pi.PIStage.get_abs_position"], [179, "id0"]], "get_position_dict() (aslm.model.devices.stages.stage_pi.pistage method)": [[179, "aslm.model.devices.stages.stage_pi.PIStage.get_position_dict"], [179, "id1"]], "move_absolute() (aslm.model.devices.stages.stage_pi.pistage method)": [[179, "aslm.model.devices.stages.stage_pi.PIStage.move_absolute"], [179, "id2"]], "move_axis_absolute() (aslm.model.devices.stages.stage_pi.pistage method)": [[179, "aslm.model.devices.stages.stage_pi.PIStage.move_axis_absolute"], [179, "id3"]], "pi_axes (aslm.model.devices.stages.stage_pi.pistage attribute)": [[179, "aslm.model.devices.stages.stage_pi.PIStage.pi_axes"]], "pi_device (aslm.model.devices.stages.stage_pi.pistage attribute)": [[179, "aslm.model.devices.stages.stage_pi.PIStage.pi_device"]], "pi_tools (aslm.model.devices.stages.stage_pi.pistage attribute)": [[179, "aslm.model.devices.stages.stage_pi.PIStage.pi_tools"]], "report_position() (aslm.model.devices.stages.stage_pi.pistage method)": [[179, "aslm.model.devices.stages.stage_pi.PIStage.report_position"], [179, "id4"]], "stop() (aslm.model.devices.stages.stage_pi.pistage method)": [[179, "aslm.model.devices.stages.stage_pi.PIStage.stop"], [179, "id5"]], "verify_abs_position() (aslm.model.devices.stages.stage_pi.pistage method)": [[179, "aslm.model.devices.stages.stage_pi.PIStage.verify_abs_position"]], "wait_on_target() (aslm.model.devices.stages.stage_pi.pistage method)": [[179, "aslm.model.devices.stages.stage_pi.PIStage.wait_on_target"]], "build_pistage_connection() (in module aslm.model.devices.stages.stage_pi)": [[180, "aslm.model.devices.stages.stage_pi.build_PIStage_connection"]], "aslm.model.devices.stages.stage_sutter": [[181, "module-aslm.model.devices.stages.stage_sutter"]], "sutterstage (class in aslm.model.devices.stages.stage_sutter)": [[182, "aslm.model.devices.stages.stage_sutter.SutterStage"]], "__init__() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[182, "aslm.model.devices.stages.stage_sutter.SutterStage.__init__"]], "axes_mapping (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[182, "aslm.model.devices.stages.stage_sutter.SutterStage.axes_mapping"]], "close() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[182, "aslm.model.devices.stages.stage_sutter.SutterStage.close"]], "get_abs_position() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[182, "aslm.model.devices.stages.stage_sutter.SutterStage.get_abs_position"]], "get_position_dict() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[182, "aslm.model.devices.stages.stage_sutter.SutterStage.get_position_dict"]], "move_absolute() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[182, "aslm.model.devices.stages.stage_sutter.SutterStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[182, "aslm.model.devices.stages.stage_sutter.SutterStage.move_axis_absolute"]], "read() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[182, "aslm.model.devices.stages.stage_sutter.SutterStage.read"]], "report_position() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[182, "aslm.model.devices.stages.stage_sutter.SutterStage.report_position"]], "resolution (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[182, "aslm.model.devices.stages.stage_sutter.SutterStage.resolution"]], "speed (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[182, "aslm.model.devices.stages.stage_sutter.SutterStage.speed"]], "stage (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[182, "aslm.model.devices.stages.stage_sutter.SutterStage.stage"]], "stop() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[182, "aslm.model.devices.stages.stage_sutter.SutterStage.stop"]], "sutter_axes (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[182, "aslm.model.devices.stages.stage_sutter.SutterStage.sutter_axes"]], "verify_abs_position() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[182, "aslm.model.devices.stages.stage_sutter.SutterStage.verify_abs_position"]], "build_mp285_connection() (in module aslm.model.devices.stages.stage_sutter)": [[183, "aslm.model.devices.stages.stage_sutter.build_MP285_connection"]], "aslm.model.devices.stages.stage_synthetic": [[184, "module-aslm.model.devices.stages.stage_synthetic"]], "syntheticstage (class in aslm.model.devices.stages.stage_synthetic)": [[185, "aslm.model.devices.stages.stage_synthetic.SyntheticStage"]], "__init__() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[185, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.__init__"]], "axes_mapping (aslm.model.devices.stages.stage_synthetic.syntheticstage attribute)": [[185, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.axes_mapping"]], "get_abs_position() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[185, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.get_abs_position"]], "get_position_dict() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[185, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.get_position_dict"]], "move_absolute() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[185, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[185, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.move_axis_absolute"]], "stop() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[185, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.stop"]], "verify_abs_position() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[185, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.verify_abs_position"]], "aslm.model.devices.stages.stage_tl_kcube_inertial": [[186, "module-aslm.model.devices.stages.stage_tl_kcube_inertial"]], "tlkimstage (class in aslm.model.devices.stages.stage_tl_kcube_inertial)": [[187, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage"]], "__init__() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[187, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.__init__"]], "axes_mapping (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage attribute)": [[187, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.axes_mapping"]], "get_abs_position() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[187, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.get_abs_position"]], "get_position_dict() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[187, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.get_position_dict"]], "move_absolute() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[187, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[187, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.move_axis_absolute"]], "report_position() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[187, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.report_position"]], "stop() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[187, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.stop"]], "verify_abs_position() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[187, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.verify_abs_position"]], "build_tlkimstage_connection() (in module aslm.model.devices.stages.stage_tl_kcube_inertial)": [[188, "aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection"]], "aslm.model.devices.zoom": [[189, "module-aslm.model.devices.zoom"]], "aslm.model.devices.zoom.zoom_base": [[190, "module-aslm.model.devices.zoom.zoom_base"]], "zoombase (class in aslm.model.devices.zoom.zoom_base)": [[191, "aslm.model.devices.zoom.zoom_base.ZoomBase"]], "__init__() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[191, "aslm.model.devices.zoom.zoom_base.ZoomBase.__init__"]], "build_stage_dict() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[191, "aslm.model.devices.zoom.zoom_base.ZoomBase.build_stage_dict"]], "move() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[191, "aslm.model.devices.zoom.zoom_base.ZoomBase.move"]], "read_position() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[191, "aslm.model.devices.zoom.zoom_base.ZoomBase.read_position"]], "set_zoom() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[191, "aslm.model.devices.zoom.zoom_base.ZoomBase.set_zoom"]], "aslm.model.devices.zoom.zoom_synthetic": [[192, "module-aslm.model.devices.zoom.zoom_synthetic"]], "syntheticzoom (class in aslm.model.devices.zoom.zoom_synthetic)": [[193, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom"]], "__init__() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[193, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.__init__"]], "build_stage_dict() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[193, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.build_stage_dict"]], "move() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[193, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.move"], [193, "id0"]], "read_position() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[193, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.read_position"], [193, "id1"]], "set_zoom() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[193, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.set_zoom"], [193, "id2"]], "aslm.model.dummy": [[194, "module-aslm.model.dummy"]], "dummycontroller (class in aslm.model.dummy)": [[195, "aslm.model.dummy.DummyController"]], "__init__() (aslm.model.dummy.dummycontroller method)": [[195, "aslm.model.dummy.DummyController.__init__"]], "execute() (aslm.model.dummy.dummycontroller method)": [[195, "aslm.model.dummy.DummyController.execute"]], "pop() (aslm.model.dummy.dummycontroller method)": [[195, "aslm.model.dummy.DummyController.pop"]], "dummydevice (class in aslm.model.dummy)": [[196, "aslm.model.dummy.DummyDevice"]], "__init__() (aslm.model.dummy.dummydevice method)": [[196, "aslm.model.dummy.DummyDevice.__init__"]], "clear() (aslm.model.dummy.dummydevice method)": [[196, "aslm.model.dummy.DummyDevice.clear"]], "data_pipe (aslm.model.dummy.dummydevice attribute)": [[196, "aslm.model.dummy.DummyDevice.data_pipe"]], "generate_message() (aslm.model.dummy.dummydevice method)": [[196, "aslm.model.dummy.DummyDevice.generate_message"]], "listen() (aslm.model.dummy.dummydevice method)": [[196, "aslm.model.dummy.DummyDevice.listen"]], "sendout() (aslm.model.dummy.dummydevice method)": [[196, "aslm.model.dummy.DummyDevice.sendout"]], "setup() (aslm.model.dummy.dummydevice method)": [[196, "aslm.model.dummy.DummyDevice.setup"], [196, "id0"]], "shutdown() (aslm.model.dummy.dummydevice method)": [[196, "aslm.model.dummy.DummyDevice.shutdown"]], "signal_pipe (aslm.model.dummy.dummydevice attribute)": [[196, "aslm.model.dummy.DummyDevice.signal_pipe"]], "dummymicroscope (class in aslm.model.dummy)": [[197, "aslm.model.dummy.DummyMicroscope"]], "__init__() (aslm.model.dummy.dummymicroscope method)": [[197, "aslm.model.dummy.DummyMicroscope.__init__"]], "data_pipe (aslm.model.dummy.dummymicroscope attribute)": [[197, "aslm.model.dummy.DummyMicroscope.data_pipe"]], "setup() (aslm.model.dummy.dummymicroscope method)": [[197, "aslm.model.dummy.DummyMicroscope.setup"]], "shutdown() (aslm.model.dummy.dummymicroscope method)": [[197, "aslm.model.dummy.DummyMicroscope.shutdown"]], "signal_pipe (aslm.model.dummy.dummymicroscope attribute)": [[197, "aslm.model.dummy.DummyMicroscope.signal_pipe"]], "dummymodel (class in aslm.model.dummy)": [[198, "aslm.model.dummy.DummyModel"]], "__init__() (aslm.model.dummy.dummymodel method)": [[198, "aslm.model.dummy.DummyModel.__init__"]], "configuration (aslm.model.dummy.dummymodel attribute)": [[198, "aslm.model.dummy.DummyModel.configuration"]], "data (aslm.model.dummy.dummymodel attribute)": [[198, "aslm.model.dummy.DummyModel.data"]], "data_container (aslm.model.dummy.dummymodel attribute)": [[198, "aslm.model.dummy.DummyModel.data_container"]], "data_func() (aslm.model.dummy.dummymodel method)": [[198, "aslm.model.dummy.DummyModel.data_func"], [198, "id0"]], "data_pipe (aslm.model.dummy.dummymodel attribute)": [[198, "aslm.model.dummy.DummyModel.data_pipe"]], "data_thread (aslm.model.dummy.dummymodel attribute)": [[198, "aslm.model.dummy.DummyModel.data_thread"]], "frame_id (aslm.model.dummy.dummymodel attribute)": [[198, "aslm.model.dummy.DummyModel.frame_id"]], "signal_container (aslm.model.dummy.dummymodel attribute)": [[198, "aslm.model.dummy.DummyModel.signal_container"]], "signal_func() (aslm.model.dummy.dummymodel method)": [[198, "aslm.model.dummy.DummyModel.signal_func"]], "signal_pipe (aslm.model.dummy.dummymodel attribute)": [[198, "aslm.model.dummy.DummyModel.signal_pipe"]], "signal_thread (aslm.model.dummy.dummymodel attribute)": [[198, "aslm.model.dummy.DummyModel.signal_thread"]], "start() (aslm.model.dummy.dummymodel method)": [[198, "aslm.model.dummy.DummyModel.start"]], "stop_flag (aslm.model.dummy.dummymodel attribute)": [[198, "aslm.model.dummy.DummyModel.stop_flag"]], "aslm.model.features": [[199, "module-aslm.model.features"]], "aslm.model.features.auto_tile_scan": [[200, "module-aslm.model.features.auto_tile_scan"]], "calculatefocusrange (class in aslm.model.features.auto_tile_scan)": [[201, "aslm.model.features.auto_tile_scan.CalculateFocusRange"]], "__init__() (aslm.model.features.auto_tile_scan.calculatefocusrange method)": [[201, "aslm.model.features.auto_tile_scan.CalculateFocusRange.__init__"]], "aslm.model.features.autofocus": [[202, "module-aslm.model.features.autofocus"]], "autofocus (class in aslm.model.features.autofocus)": [[203, "aslm.model.features.autofocus.Autofocus"]], "__init__() (aslm.model.features.autofocus.autofocus method)": [[203, "aslm.model.features.autofocus.Autofocus.__init__"]], "autofocus_frame_queue (aslm.model.features.autofocus.autofocus attribute)": [[203, "aslm.model.features.autofocus.Autofocus.autofocus_frame_queue"]], "autofocus_pos_queue (aslm.model.features.autofocus.autofocus attribute)": [[203, "aslm.model.features.autofocus.Autofocus.autofocus_pos_queue"]], "coarse_step_size (aslm.model.features.autofocus.autofocus attribute)": [[203, "aslm.model.features.autofocus.Autofocus.coarse_step_size"]], "coarse_steps (aslm.model.features.autofocus.autofocus attribute)": [[203, "aslm.model.features.autofocus.Autofocus.coarse_steps"]], "end_func_data() (aslm.model.features.autofocus.autofocus method)": [[203, "aslm.model.features.autofocus.Autofocus.end_func_data"]], "end_func_signal() (aslm.model.features.autofocus.autofocus method)": [[203, "aslm.model.features.autofocus.Autofocus.end_func_signal"]], "f_frame_id (aslm.model.features.autofocus.autofocus attribute)": [[203, "aslm.model.features.autofocus.Autofocus.f_frame_id"]], "f_pos (aslm.model.features.autofocus.autofocus attribute)": [[203, "aslm.model.features.autofocus.Autofocus.f_pos"]], "fine_pos_offset (aslm.model.features.autofocus.autofocus attribute)": [[203, "aslm.model.features.autofocus.Autofocus.fine_pos_offset"]], "fine_step_size (aslm.model.features.autofocus.autofocus attribute)": [[203, "aslm.model.features.autofocus.Autofocus.fine_step_size"]], "focus_pos (aslm.model.features.autofocus.autofocus attribute)": [[203, "aslm.model.features.autofocus.Autofocus.focus_pos"]], "frame_num (aslm.model.features.autofocus.autofocus attribute)": [[203, "aslm.model.features.autofocus.Autofocus.frame_num"]], "get_autofocus_frame_num() (aslm.model.features.autofocus.autofocus method)": [[203, "aslm.model.features.autofocus.Autofocus.get_autofocus_frame_num"]], "get_frames_num (aslm.model.features.autofocus.autofocus attribute)": [[203, "aslm.model.features.autofocus.Autofocus.get_frames_num"]], "get_steps() (aslm.model.features.autofocus.autofocus static method)": [[203, "aslm.model.features.autofocus.Autofocus.get_steps"]], "in_func_data() (aslm.model.features.autofocus.autofocus method)": [[203, "aslm.model.features.autofocus.Autofocus.in_func_data"]], "in_func_signal() (aslm.model.features.autofocus.autofocus method)": [[203, "aslm.model.features.autofocus.Autofocus.in_func_signal"]], "init_pos (aslm.model.features.autofocus.autofocus attribute)": [[203, "aslm.model.features.autofocus.Autofocus.init_pos"]], "max_entropy (aslm.model.features.autofocus.autofocus attribute)": [[203, "aslm.model.features.autofocus.Autofocus.max_entropy"]], "plot_data (aslm.model.features.autofocus.autofocus attribute)": [[203, "aslm.model.features.autofocus.Autofocus.plot_data"]], "pre_func_data() (aslm.model.features.autofocus.autofocus method)": [[203, "aslm.model.features.autofocus.Autofocus.pre_func_data"]], "pre_func_signal() (aslm.model.features.autofocus.autofocus method)": [[203, "aslm.model.features.autofocus.Autofocus.pre_func_signal"]], "robust_autofocus() (aslm.model.features.autofocus.autofocus method)": [[203, "aslm.model.features.autofocus.Autofocus.robust_autofocus"]], "run() (aslm.model.features.autofocus.autofocus method)": [[203, "aslm.model.features.autofocus.Autofocus.run"], [203, "id0"]], "signal_id (aslm.model.features.autofocus.autofocus attribute)": [[203, "aslm.model.features.autofocus.Autofocus.signal_id"]], "target_channel (aslm.model.features.autofocus.autofocus attribute)": [[203, "aslm.model.features.autofocus.Autofocus.target_channel"]], "target_frame_id (aslm.model.features.autofocus.autofocus attribute)": [[203, "aslm.model.features.autofocus.Autofocus.target_frame_id"]], "total_frame_num (aslm.model.features.autofocus.autofocus attribute)": [[203, "aslm.model.features.autofocus.Autofocus.total_frame_num"]], "power_tent() (in module aslm.model.features.autofocus)": [[204, "aslm.model.features.autofocus.power_tent"]], "aslm.model.features.common_features": [[205, "module-aslm.model.features.common_features"]], "changeresolution (class in aslm.model.features.common_features)": [[206, "aslm.model.features.common_features.ChangeResolution"]], "__init__() (aslm.model.features.common_features.changeresolution method)": [[206, "aslm.model.features.common_features.ChangeResolution.__init__"]], "conproacquisition (class in aslm.model.features.common_features)": [[207, "aslm.model.features.common_features.ConProAcquisition"]], "__init__() (aslm.model.features.common_features.conproacquisition method)": [[207, "aslm.model.features.common_features.ConProAcquisition.__init__"]], "findtissuesimple2d (class in aslm.model.features.common_features)": [[208, "aslm.model.features.common_features.FindTissueSimple2D"]], "__init__() (aslm.model.features.common_features.findtissuesimple2d method)": [[208, "aslm.model.features.common_features.FindTissueSimple2D.__init__"]], "loopbycount (class in aslm.model.features.common_features)": [[209, "aslm.model.features.common_features.LoopByCount"]], "__init__() (aslm.model.features.common_features.loopbycount method)": [[209, "aslm.model.features.common_features.LoopByCount.__init__"]], "movetonextpositioninmultipostiontable (class in aslm.model.features.common_features)": [[210, "aslm.model.features.common_features.MoveToNextPositionInMultiPostionTable"]], "__init__() (aslm.model.features.common_features.movetonextpositioninmultipostiontable method)": [[210, "aslm.model.features.common_features.MoveToNextPositionInMultiPostionTable.__init__"]], "preparenextchannel (class in aslm.model.features.common_features)": [[211, "aslm.model.features.common_features.PrepareNextChannel"]], "__init__() (aslm.model.features.common_features.preparenextchannel method)": [[211, "aslm.model.features.common_features.PrepareNextChannel.__init__"]], "snap (class in aslm.model.features.common_features)": [[212, "aslm.model.features.common_features.Snap"]], "__init__() (aslm.model.features.common_features.snap method)": [[212, "aslm.model.features.common_features.Snap.__init__"]], "stackpause (class in aslm.model.features.common_features)": [[213, "aslm.model.features.common_features.StackPause"]], "__init__() (aslm.model.features.common_features.stackpause method)": [[213, "aslm.model.features.common_features.StackPause.__init__"]], "waittocontinue (class in aslm.model.features.common_features)": [[214, "aslm.model.features.common_features.WaitToContinue"]], "__init__() (aslm.model.features.common_features.waittocontinue method)": [[214, "aslm.model.features.common_features.WaitToContinue.__init__"]], "zstackacquisition (class in aslm.model.features.common_features)": [[215, "aslm.model.features.common_features.ZStackAcquisition"]], "__init__() (aslm.model.features.common_features.zstackacquisition method)": [[215, "aslm.model.features.common_features.ZStackAcquisition.__init__"]], "aslm.model.features.constant_velocity_acquisition": [[216, "module-aslm.model.features.constant_velocity_acquisition"]], "constantvelocityacquisition (class in aslm.model.features.constant_velocity_acquisition)": [[217, "aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition"]], "__init__() (aslm.model.features.constant_velocity_acquisition.constantvelocityacquisition method)": [[217, "aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition.__init__"]], "cleanup() (aslm.model.features.constant_velocity_acquisition.constantvelocityacquisition method)": [[217, "aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition.cleanup"]], "pre_func_signal() (aslm.model.features.constant_velocity_acquisition.constantvelocityacquisition method)": [[217, "aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition.pre_func_signal"]], "aslm.model.features.dummy_detective": [[218, "module-aslm.model.features.dummy_detective"]], "dummy_detective (class in aslm.model.features.dummy_detective)": [[219, "aslm.model.features.dummy_detective.Dummy_Detective"]], "__init__() (aslm.model.features.dummy_detective.dummy_detective method)": [[219, "aslm.model.features.dummy_detective.Dummy_Detective.__init__"]], "aslm.model.features.feature_container": [[220, "module-aslm.model.features.feature_container"]], "container (class in aslm.model.features.feature_container)": [[221, "aslm.model.features.feature_container.Container"]], "__init__() (aslm.model.features.feature_container.container method)": [[221, "aslm.model.features.feature_container.Container.__init__"]], "datacontainer (class in aslm.model.features.feature_container)": [[222, "aslm.model.features.feature_container.DataContainer"]], "__init__() (aslm.model.features.feature_container.datacontainer method)": [[222, "aslm.model.features.feature_container.DataContainer.__init__"]], "datanode (class in aslm.model.features.feature_container)": [[223, "aslm.model.features.feature_container.DataNode"]], "__init__() (aslm.model.features.feature_container.datanode method)": [[223, "aslm.model.features.feature_container.DataNode.__init__"]], "signalcontainer (class in aslm.model.features.feature_container)": [[224, "aslm.model.features.feature_container.SignalContainer"]], "__init__() (aslm.model.features.feature_container.signalcontainer method)": [[224, "aslm.model.features.feature_container.SignalContainer.__init__"]], "signalnode (class in aslm.model.features.feature_container)": [[225, "aslm.model.features.feature_container.SignalNode"]], "__init__() (aslm.model.features.feature_container.signalnode method)": [[225, "aslm.model.features.feature_container.SignalNode.__init__"]], "treenode (class in aslm.model.features.feature_container)": [[226, "aslm.model.features.feature_container.TreeNode"]], "__init__() (aslm.model.features.feature_container.treenode method)": [[226, "aslm.model.features.feature_container.TreeNode.__init__"]], "dummy_true() (in module aslm.model.features.feature_container)": [[227, "aslm.model.features.feature_container.dummy_True"]], "dummy_func() (in module aslm.model.features.feature_container)": [[228, "aslm.model.features.feature_container.dummy_func"]], "get_registered_funcs() (in module aslm.model.features.feature_container)": [[229, "aslm.model.features.feature_container.get_registered_funcs"]], "load_features() (in module aslm.model.features.feature_container)": [[230, "aslm.model.features.feature_container.load_features"]], "aslm.model.features.image_writer": [[231, "module-aslm.model.features.image_writer"]], "imagewriter (class in aslm.model.features.image_writer)": [[232, "aslm.model.features.image_writer.ImageWriter"]], "__init__() (aslm.model.features.image_writer.imagewriter method)": [[232, "aslm.model.features.image_writer.ImageWriter.__init__"]], "close() (aslm.model.features.image_writer.imagewriter method)": [[232, "aslm.model.features.image_writer.ImageWriter.close"]], "current_time_point (aslm.model.features.image_writer.imagewriter attribute)": [[232, "aslm.model.features.image_writer.ImageWriter.current_time_point"], [232, "id4"]], "data_bffer (aslm.model.features.image_writer.imagewriter attribute)": [[232, "aslm.model.features.image_writer.ImageWriter.data_bffer"], [232, "id5"]], "data_source (aslm.model.features.image_writer.imagewriter attribute)": [[232, "aslm.model.features.image_writer.ImageWriter.data_source"], [232, "id1"]], "generate_image_name() (aslm.model.features.image_writer.imagewriter method)": [[232, "aslm.model.features.image_writer.ImageWriter.generate_image_name"]], "generate_meta_data() (aslm.model.features.image_writer.imagewriter method)": [[232, "aslm.model.features.image_writer.ImageWriter.generate_meta_data"]], "mip (aslm.model.features.image_writer.imagewriter attribute)": [[232, "aslm.model.features.image_writer.ImageWriter.mip"], [232, "id3"]], "mip_directory (aslm.model.features.image_writer.imagewriter attribute)": [[232, "aslm.model.features.image_writer.ImageWriter.mip_directory"], [232, "id2"]], "model (aslm.model.features.image_writer.imagewriter attribute)": [[232, "aslm.model.features.image_writer.ImageWriter.model"], [232, "id0"]], "save_image() (aslm.model.features.image_writer.imagewriter method)": [[232, "aslm.model.features.image_writer.ImageWriter.save_image"]], "aslm.model.features.restful_features": [[233, "module-aslm.model.features.restful_features"]], "ilastiksegmentation (class in aslm.model.features.restful_features)": [[234, "aslm.model.features.restful_features.IlastikSegmentation"]], "__init__() (aslm.model.features.restful_features.ilastiksegmentation method)": [[234, "aslm.model.features.restful_features.IlastikSegmentation.__init__"]], "prepare_service() (in module aslm.model.features.restful_features)": [[235, "aslm.model.features.restful_features.prepare_service"]], "aslm.model.features.volume_search": [[236, "module-aslm.model.features.volume_search"]], "volumesearch (class in aslm.model.features.volume_search)": [[237, "aslm.model.features.volume_search.VolumeSearch"]], "__init__() (aslm.model.features.volume_search.volumesearch method)": [[237, "aslm.model.features.volume_search.VolumeSearch.__init__"]], "draw_box() (in module aslm.model.features.volume_search)": [[238, "aslm.model.features.volume_search.draw_box"]], "aslm.model.metadata_sources": [[239, "module-aslm.model.metadata_sources"]], "aslm.model.metadata_sources.bdv_metadata": [[240, "module-aslm.model.metadata_sources.bdv_metadata"]], "bigdataviewermetadata (class in aslm.model.metadata_sources.bdv_metadata)": [[241, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata"]], "__init__() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[241, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.__init__"]], "parse_bdv_xml() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[241, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.parse_bdv_xml"]], "shape (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata property)": [[241, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.shape"]], "stage_positions_to_affine_matrix() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[241, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.stage_positions_to_affine_matrix"]], "to_xml() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[241, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.to_xml"]], "voxel_size (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata property)": [[241, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.voxel_size"]], "write_xml() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[241, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.write_xml"]], "aslm.model.metadata_sources.metadata": [[242, "module-aslm.model.metadata_sources.metadata"]], "metadata (class in aslm.model.metadata_sources.metadata)": [[243, "aslm.model.metadata_sources.metadata.Metadata"]], "__init__() (aslm.model.metadata_sources.metadata.metadata method)": [[243, "aslm.model.metadata_sources.metadata.Metadata.__init__"]], "shape (aslm.model.metadata_sources.metadata.metadata property)": [[243, "aslm.model.metadata_sources.metadata.Metadata.shape"]], "voxel_size (aslm.model.metadata_sources.metadata.metadata property)": [[243, "aslm.model.metadata_sources.metadata.Metadata.voxel_size"]], "xmlmetadata (class in aslm.model.metadata_sources.metadata)": [[244, "aslm.model.metadata_sources.metadata.XMLMetadata"]], "__init__() (aslm.model.metadata_sources.metadata.xmlmetadata method)": [[244, "aslm.model.metadata_sources.metadata.XMLMetadata.__init__"]], "shape (aslm.model.metadata_sources.metadata.xmlmetadata property)": [[244, "aslm.model.metadata_sources.metadata.XMLMetadata.shape"]], "to_xml() (aslm.model.metadata_sources.metadata.xmlmetadata method)": [[244, "aslm.model.metadata_sources.metadata.XMLMetadata.to_xml"]], "voxel_size (aslm.model.metadata_sources.metadata.xmlmetadata property)": [[244, "aslm.model.metadata_sources.metadata.XMLMetadata.voxel_size"]], "write_xml() (aslm.model.metadata_sources.metadata.xmlmetadata method)": [[244, "aslm.model.metadata_sources.metadata.XMLMetadata.write_xml"]], "aslm.model.metadata_sources.ome_tiff_metadata": [[245, "module-aslm.model.metadata_sources.ome_tiff_metadata"]], "ometiffmetadata (class in aslm.model.metadata_sources.ome_tiff_metadata)": [[246, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata"]], "__init__() (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata method)": [[246, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.__init__"]], "ome_tiff_xml_dict() (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata method)": [[246, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.ome_tiff_xml_dict"]], "shape (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata property)": [[246, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.shape"]], "to_xml() (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata method)": [[246, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.to_xml"]], "voxel_size (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata property)": [[246, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.voxel_size"]], "write_xml() (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata method)": [[246, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.write_xml"]], "aslm.model.microscope": [[247, "module-aslm.model.microscope"]], "microscope (class in aslm.model.microscope)": [[248, "aslm.model.microscope.Microscope"]], "__init__() (aslm.model.microscope.microscope method)": [[248, "aslm.model.microscope.Microscope.__init__"]], "assemble_device_config_lists() (aslm.model.microscope.microscope method)": [[248, "aslm.model.microscope.Microscope.assemble_device_config_lists"]], "calculate_all_waveform() (aslm.model.microscope.microscope method)": [[248, "aslm.model.microscope.Microscope.calculate_all_waveform"]], "configuration (aslm.model.microscope.microscope attribute)": [[248, "aslm.model.microscope.Microscope.configuration"]], "daq (aslm.model.microscope.microscope attribute)": [[248, "aslm.model.microscope.Microscope.daq"]], "data_buffer (aslm.model.microscope.microscope attribute)": [[248, "aslm.model.microscope.Microscope.data_buffer"]], "end_acquisition() (aslm.model.microscope.microscope method)": [[248, "aslm.model.microscope.Microscope.end_acquisition"], [248, "id0"]], "get_readout_time() (aslm.model.microscope.microscope method)": [[248, "aslm.model.microscope.Microscope.get_readout_time"], [248, "id1"]], "get_stage_position() (aslm.model.microscope.microscope method)": [[248, "aslm.model.microscope.Microscope.get_stage_position"]], "load_and_start_devices() (aslm.model.microscope.microscope method)": [[248, "aslm.model.microscope.Microscope.load_and_start_devices"]], "microscope_name (aslm.model.microscope.microscope attribute)": [[248, "aslm.model.microscope.Microscope.microscope_name"]], "move_stage() (aslm.model.microscope.microscope method)": [[248, "aslm.model.microscope.Microscope.move_stage"]], "move_stage_offset() (aslm.model.microscope.microscope method)": [[248, "aslm.model.microscope.Microscope.move_stage_offset"], [248, "id2"]], "number_of_frames (aslm.model.microscope.microscope attribute)": [[248, "aslm.model.microscope.Microscope.number_of_frames"]], "prepare_acquisition() (aslm.model.microscope.microscope method)": [[248, "aslm.model.microscope.Microscope.prepare_acquisition"]], "prepare_next_channel() (aslm.model.microscope.microscope method)": [[248, "aslm.model.microscope.Microscope.prepare_next_channel"]], "stop_stage() (aslm.model.microscope.microscope method)": [[248, "aslm.model.microscope.Microscope.stop_stage"]], "update_data_buffer() (aslm.model.microscope.microscope method)": [[248, "aslm.model.microscope.Microscope.update_data_buffer"], [248, "id3"]], "aslm.model.model": [[249, "module-aslm.model.model"]], "model (class in aslm.model.model)": [[250, "aslm.model.model.Model"]], "use_gpu (aslm.model.model.model attribute)": [[250, "aslm.model.model.Model.USE_GPU"]], "__init__() (aslm.model.model.model method)": [[250, "aslm.model.model.Model.__init__"]], "args (aslm.model.model.model attribute)": [[250, "aslm.model.model.Model.args"]], "change_resolution() (aslm.model.model.model method)": [[250, "aslm.model.model.Model.change_resolution"]], "configuration (aslm.model.model.model attribute)": [[250, "aslm.model.model.Model.configuration"]], "create_pipe() (aslm.model.model.model method)": [[250, "aslm.model.model.Model.create_pipe"], [250, "id0"]], "end_acquisition() (aslm.model.model.model method)": [[250, "aslm.model.model.Model.end_acquisition"], [250, "id1"]], "event_queue (aslm.model.model.model attribute)": [[250, "aslm.model.model.Model.event_queue"]], "get_active_microscope() (aslm.model.model.model method)": [[250, "aslm.model.model.Model.get_active_microscope"]], "get_data_buffer() (aslm.model.model.model method)": [[250, "aslm.model.model.Model.get_data_buffer"], [250, "id2"]], "get_microscope_info() (aslm.model.model.model method)": [[250, "aslm.model.model.Model.get_microscope_info"]], "get_offset_variance_maps() (aslm.model.model.model method)": [[250, "aslm.model.model.Model.get_offset_variance_maps"]], "get_readout_time() (aslm.model.model.model method)": [[250, "aslm.model.model.Model.get_readout_time"]], "get_stage_position() (aslm.model.model.model method)": [[250, "aslm.model.model.Model.get_stage_position"]], "load_images() (aslm.model.model.model method)": [[250, "aslm.model.model.Model.load_images"]], "move_stage() (aslm.model.model.model method)": [[250, "aslm.model.model.Model.move_stage"], [250, "id3"]], "pause_data_thread() (aslm.model.model.model method)": [[250, "aslm.model.model.Model.pause_data_thread"]], "prepare_acquisition() (aslm.model.model.model method)": [[250, "aslm.model.model.Model.prepare_acquisition"], [250, "id4"]], "release_pipe() (aslm.model.model.model method)": [[250, "aslm.model.model.Model.release_pipe"], [250, "id5"]], "resume_data_thread() (aslm.model.model.model method)": [[250, "aslm.model.model.Model.resume_data_thread"]], "run_acquisition() (aslm.model.model.model method)": [[250, "aslm.model.model.Model.run_acquisition"]], "run_command() (aslm.model.model.model method)": [[250, "aslm.model.model.Model.run_command"], [250, "id6"]], "run_data_process() (aslm.model.model.model method)": [[250, "aslm.model.model.Model.run_data_process"], [250, "id7"]], "run_live_acquisition() (aslm.model.model.model method)": [[250, "aslm.model.model.Model.run_live_acquisition"], [250, "id8"]], "run_single_acquisition() (aslm.model.model.model method)": [[250, "aslm.model.model.Model.run_single_acquisition"]], "run_single_channel_acquisition() (aslm.model.model.model method)": [[250, "aslm.model.model.Model.run_single_channel_acquisition"]], "run_single_channel_acquisition_with_features() (aslm.model.model.model method)": [[250, "aslm.model.model.Model.run_single_channel_acquisition_with_features"]], "run_z_stack_acquisition() (aslm.model.model.model method)": [[250, "aslm.model.model.Model.run_z_stack_acquisition"]], "snap_image() (aslm.model.model.model method)": [[250, "aslm.model.model.Model.snap_image"], [250, "id9"]], "stop_stage() (aslm.model.model.model method)": [[250, "aslm.model.model.Model.stop_stage"]], "update_data_buffer() (aslm.model.model.model method)": [[250, "aslm.model.model.Model.update_data_buffer"], [250, "id10"]], "update_ilastik_setting() (aslm.model.model.model method)": [[250, "aslm.model.model.Model.update_ilastik_setting"]], "aslm.model.waveforms": [[251, "module-aslm.model.waveforms"]], "camera_exposure() (in module aslm.model.waveforms)": [[252, "aslm.model.waveforms.camera_exposure"]], "dc_value() (in module aslm.model.waveforms)": [[253, "aslm.model.waveforms.dc_value"]], "remote_focus_ramp() (in module aslm.model.waveforms)": [[254, "aslm.model.waveforms.remote_focus_ramp"]], "sawtooth() (in module aslm.model.waveforms)": [[255, "aslm.model.waveforms.sawtooth"]], "sine_wave() (in module aslm.model.waveforms)": [[256, "aslm.model.waveforms.sine_wave"]], "single_pulse() (in module aslm.model.waveforms)": [[257, "aslm.model.waveforms.single_pulse"]], "smooth_waveform() (in module aslm.model.waveforms)": [[258, "aslm.model.waveforms.smooth_waveform"]], "square() (in module aslm.model.waveforms)": [[259, "aslm.model.waveforms.square"]], "aslm.tools": [[260, "module-aslm.tools"]], "aslm.tools.beams": [[261, "module-aslm.tools.beams"]], "fit_gaussian_beam_error() (in module aslm.tools.beams)": [[262, "aslm.tools.beams.fit_gaussian_beam_error"]], "fit_gaussian_beam_mse() (in module aslm.tools.beams)": [[263, "aslm.tools.beams.fit_gaussian_beam_mse"]], "gaussian_beam() (in module aslm.tools.beams)": [[264, "aslm.tools.beams.gaussian_beam"]], "aslm.tools.common_dict_tools": [[265, "module-aslm.tools.common_dict_tools"]], "update_stage_dict() (in module aslm.tools.common_dict_tools)": [[266, "aslm.tools.common_dict_tools.update_stage_dict"]], "aslm.tools.common_functions": [[267, "module-aslm.tools.common_functions"]], "build_ref_name() (in module aslm.tools.common_functions)": [[268, "aslm.tools.common_functions.build_ref_name"]], "combine_funcs() (in module aslm.tools.common_functions)": [[269, "aslm.tools.common_functions.combine_funcs"]], "copy_proxy_object() (in module aslm.tools.common_functions)": [[270, "aslm.tools.common_functions.copy_proxy_object"]], "aslm.tools.decorators": [[271, "module-aslm.tools.decorators"]], "function_timer() (in module aslm.tools.decorators)": [[272, "aslm.tools.decorators.function_timer"]], "aslm.tools.file_functions": [[273, "module-aslm.tools.file_functions"]], "create_save_path() (in module aslm.tools.file_functions)": [[274, "aslm.tools.file_functions.create_save_path"]], "delete_folder() (in module aslm.tools.file_functions)": [[275, "aslm.tools.file_functions.delete_folder"]], "save_yaml_file() (in module aslm.tools.file_functions)": [[276, "aslm.tools.file_functions.save_yaml_file"]], "aslm.tools.image": [[277, "module-aslm.tools.image"]], "text_array() (in module aslm.tools.image)": [[278, "aslm.tools.image.text_array"]], "aslm.tools.image_loaders": [[279, "module-aslm.tools.image_loaders"]], "lazytiff (class in aslm.tools.image_loaders)": [[280, "aslm.tools.image_loaders.LazyTiff"]], "__init__() (aslm.tools.image_loaders.lazytiff method)": [[280, "aslm.tools.image_loaders.LazyTiff.__init__"]], "shape (aslm.tools.image_loaders.lazytiff property)": [[280, "aslm.tools.image_loaders.LazyTiff.shape"]], "aslm.tools.main_functions": [[281, "module-aslm.tools.main_functions"]], "create_parser() (in module aslm.tools.main_functions)": [[282, "aslm.tools.main_functions.create_parser"]], "evaluate_parser_input_arguments() (in module aslm.tools.main_functions)": [[283, "aslm.tools.main_functions.evaluate_parser_input_arguments"]], "identify_gpu() (in module aslm.tools.main_functions)": [[284, "aslm.tools.main_functions.identify_gpu"]], "aslm.tools.multipos_table_tools": [[285, "module-aslm.tools.multipos_table_tools"]], "calc_num_tiles() (in module aslm.tools.multipos_table_tools)": [[286, "aslm.tools.multipos_table_tools.calc_num_tiles"]], "compute_tiles_from_bounding_box() (in module aslm.tools.multipos_table_tools)": [[287, "aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box"]], "sign() (in module aslm.tools.multipos_table_tools)": [[288, "aslm.tools.multipos_table_tools.sign"]], "update_table() (in module aslm.tools.multipos_table_tools)": [[289, "aslm.tools.multipos_table_tools.update_table"]], "aslm.tools.project_stats": [[290, "module-aslm.tools.project_stats"]], "countlines() (in module aslm.tools.project_stats)": [[291, "aslm.tools.project_stats.countlines"]], "aslm.tools.sdf": [[292, "module-aslm.tools.sdf"]], "box() (in module aslm.tools.sdf)": [[293, "aslm.tools.sdf.box"]], "sphere() (in module aslm.tools.sdf)": [[294, "aslm.tools.sdf.sphere"]], "volume_from_sdf() (in module aslm.tools.sdf)": [[295, "aslm.tools.sdf.volume_from_sdf"]], "aslm.tools.waveform_template_funcs": [[296, "module-aslm.tools.waveform_template_funcs"]], "get_waveform_template_parameters() (in module aslm.tools.waveform_template_funcs)": [[297, "aslm.tools.waveform_template_funcs.get_waveform_template_parameters"]], "aslm.tools.xml_tools": [[298, "module-aslm.tools.xml_tools"]], "dict_to_xml() (in module aslm.tools.xml_tools)": [[299, "aslm.tools.xml_tools.dict_to_xml"]], "parse_xml() (in module aslm.tools.xml_tools)": [[300, "aslm.tools.xml_tools.parse_xml"]], "aslm.view": [[301, "module-aslm.view"]], "aslm.view.main_window_content": [[302, "module-aslm.view.main_window_content"]], "aslm.view.popups": [[303, "module-aslm.view.popups"]]}})