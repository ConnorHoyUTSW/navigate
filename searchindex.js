Search.setIndex({"docnames": ["_autosummary/aslm.config", "_autosummary/aslm.config.config", "_autosummary/aslm.config.config.build_nested_dict", "_autosummary/aslm.config.config.get_aslm_path", "_autosummary/aslm.config.config.get_configuration_paths", "_autosummary/aslm.config.config.load_configs", "_autosummary/aslm.config.config.update_config_dict", "_autosummary/aslm.controller", "_autosummary/aslm.controller.configuration_controller", "_autosummary/aslm.controller.configuration_controller.ConfigurationController", "_autosummary/aslm.controller.thread_pool", "_autosummary/aslm.controller.thread_pool.SelfLockThread", "_autosummary/aslm.controller.thread_pool.SynchronizedThreadPool", "_autosummary/aslm.controller.thread_pool.ThreadWaitlist", "_autosummary/aslm.model", "_autosummary/aslm.model.analysis", "_autosummary/aslm.model.analysis.boundary_detect", "_autosummary/aslm.model.analysis.boundary_detect.binary_detect", "_autosummary/aslm.model.analysis.boundary_detect.find_tissue_boundary_2d", "_autosummary/aslm.model.analysis.boundary_detect.has_tissue", "_autosummary/aslm.model.analysis.boundary_detect.map_boundary", "_autosummary/aslm.model.analysis.camera", "_autosummary/aslm.model.analysis.camera.compute_flatfield_map", "_autosummary/aslm.model.analysis.camera.compute_noise_sigma", "_autosummary/aslm.model.analysis.camera.compute_scmos_offset_and_variance_map", "_autosummary/aslm.model.analysis.camera.compute_signal_to_noise", "_autosummary/aslm.model.analysis.detection", "_autosummary/aslm.model.analysis.detection.add_median_border", "_autosummary/aslm.model.analysis.detection.combine_images", "_autosummary/aslm.model.analysis.detection.log_detection", "_autosummary/aslm.model.analysis.detection.make_inside_image", "_autosummary/aslm.model.analysis.detection.make_normalized_image", "_autosummary/aslm.model.analysis.detection.make_sphere_3D", "_autosummary/aslm.model.analysis.detection.multiscale_surface_filter_3D", "_autosummary/aslm.model.analysis.detection.surface_filter_gauss_3D", "_autosummary/aslm.model.analysis.detection.three_level_segmentation", "_autosummary/aslm.model.analysis.image_contrast", "_autosummary/aslm.model.analysis.image_contrast.estimate_and_correct_flatfield", "_autosummary/aslm.model.analysis.image_contrast.estimate_image_resolution", "_autosummary/aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy", "_autosummary/aslm.model.analysis.image_contrast.image_intensity", "_autosummary/aslm.model.analysis.image_contrast.normalized_dct_shannon_entropy", "_autosummary/aslm.model.analysis.image_decorrelation", "_autosummary/aslm.model.analysis.image_decorrelation.apodize_image", "_autosummary/aslm.model.analysis.image_decorrelation.get_correlation_coefficient", "_autosummary/aslm.model.analysis.image_decorrelation.get_decorrelation_local_maxima", "_autosummary/aslm.model.analysis.image_decorrelation.get_image_decorrelation", "_autosummary/aslm.model.analysis.image_decorrelation.get_radial_average", "_autosummary/aslm.model.analysis.image_decorrelation.image_to_polar", "_autosummary/aslm.model.analysis.image_decorrelation.linear_map", "_autosummary/aslm.model.analysis.image_decorrelation.main_image_decorr", "_autosummary/aslm.model.analysis.image_transform", "_autosummary/aslm.model.analysis.image_transform.deskew_image", "_autosummary/aslm.model.analysis.image_transform.initiate_gpu", "_autosummary/aslm.model.analysis.spectral_unmixing", "_autosummary/aslm.model.analysis.spectral_unmixing.to_do", "_autosummary/aslm.model.concurrency", "_autosummary/aslm.model.concurrency.concurrency_tools", "_autosummary/aslm.model.concurrency.concurrency_tools.CustodyThread", "_autosummary/aslm.model.concurrency.concurrency_tools.FancyThread", "_autosummary/aslm.model.concurrency.concurrency_tools.MyTestClass", "_autosummary/aslm.model.concurrency.concurrency_tools.ObjectInSubprocess", "_autosummary/aslm.model.concurrency.concurrency_tools.PoliteThread", "_autosummary/aslm.model.concurrency.concurrency_tools.ResultThread", "_autosummary/aslm.model.concurrency.concurrency_tools.SharedNDArray", "_autosummary/aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess", "_autosummary/aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread", "_autosummary/aslm.model.concurrency.concurrency_tools.TestSharedNDArray", "_autosummary/aslm.model.concurrency.proxy_objects", "_autosummary/aslm.model.concurrency.proxy_objects.ProxyManager", "_autosummary/aslm.model.concurrency.proxy_objects.ProxyObject", "_autosummary/aslm.model.concurrency.proxy_objects.launch_custody_thread", "_autosummary/aslm.model.concurrency.proxy_objects.launch_thread", "_autosummary/aslm.model.concurrency.shared_memory", "_autosummary/aslm.model.concurrency.write_parameters", "_autosummary/aslm.model.concurrency.write_parameters.write_Params", "_autosummary/aslm.model.data_sources", "_autosummary/aslm.model.data_sources.bdv_data_source", "_autosummary/aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource", "_autosummary/aslm.model.data_sources.data_source", "_autosummary/aslm.model.data_sources.data_source.DataSource", "_autosummary/aslm.model.data_sources.get_data_source", "_autosummary/aslm.model.data_sources.tiff_data_source", "_autosummary/aslm.model.data_sources.tiff_data_source.TiffDataSource", "_autosummary/aslm.model.data_sources.zarr_data_source", "_autosummary/aslm.model.data_sources.zarr_data_source.ZarrDataSource", "_autosummary/aslm.model.device_startup_functions", "_autosummary/aslm.model.device_startup_functions.DummyDeviceConnection", "_autosummary/aslm.model.device_startup_functions.auto_redial", "_autosummary/aslm.model.device_startup_functions.device_not_found", "_autosummary/aslm.model.device_startup_functions.load_camera_connection", "_autosummary/aslm.model.device_startup_functions.load_devices", "_autosummary/aslm.model.device_startup_functions.load_filter_wheel_connection", "_autosummary/aslm.model.device_startup_functions.load_stages", "_autosummary/aslm.model.device_startup_functions.load_zoom_connection", "_autosummary/aslm.model.device_startup_functions.start_camera", "_autosummary/aslm.model.device_startup_functions.start_daq", "_autosummary/aslm.model.device_startup_functions.start_filter_wheel", "_autosummary/aslm.model.device_startup_functions.start_galvo", "_autosummary/aslm.model.device_startup_functions.start_lasers", "_autosummary/aslm.model.device_startup_functions.start_remote_focus_device", "_autosummary/aslm.model.device_startup_functions.start_shutter", "_autosummary/aslm.model.device_startup_functions.start_stage", "_autosummary/aslm.model.device_startup_functions.start_zoom", "_autosummary/aslm.model.devices", "_autosummary/aslm.model.devices.APIs", "_autosummary/aslm.model.devices.APIs.coherent", "_autosummary/aslm.model.devices.APIs.dynamixel", "_autosummary/aslm.model.devices.APIs.logitech", "_autosummary/aslm.model.devices.APIs.omicron", "_autosummary/aslm.model.devices.camera", "_autosummary/aslm.model.devices.camera.camera_base", "_autosummary/aslm.model.devices.camera.camera_base.CameraBase", "_autosummary/aslm.model.devices.camera.camera_hamamatsu", "_autosummary/aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca", "_autosummary/aslm.model.devices.camera.camera_synthetic", "_autosummary/aslm.model.devices.camera.camera_synthetic.SyntheticCamera", "_autosummary/aslm.model.devices.camera.camera_synthetic.SyntheticCameraController", "_autosummary/aslm.model.devices.daq", "_autosummary/aslm.model.devices.daq.daq_base", "_autosummary/aslm.model.devices.daq.daq_base.DAQBase", "_autosummary/aslm.model.devices.daq.daq_synthetic", "_autosummary/aslm.model.devices.daq.daq_synthetic.SyntheticDAQ", "_autosummary/aslm.model.devices.filter_wheel", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_base", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_synthetic", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel", "_autosummary/aslm.model.devices.galvo", "_autosummary/aslm.model.devices.galvo.galvo_base", "_autosummary/aslm.model.devices.galvo.galvo_base.GalvoBase", "_autosummary/aslm.model.devices.joystick", "_autosummary/aslm.model.devices.joystick.joystick_base", "_autosummary/aslm.model.devices.joystick.joystick_base.JoystickBase", "_autosummary/aslm.model.devices.joystick.joystick_logitech", "_autosummary/aslm.model.devices.joystick.joystick_logitech.JoystickLogitech", "_autosummary/aslm.model.devices.joystick.joystick_synthetic", "_autosummary/aslm.model.devices.joystick.joystick_synthetic.SyntheticJoystick", "_autosummary/aslm.model.devices.lasers", "_autosummary/aslm.model.devices.lasers.laser_base", "_autosummary/aslm.model.devices.lasers.laser_base.LaserBase", "_autosummary/aslm.model.devices.lasers.laser_synthetic", "_autosummary/aslm.model.devices.lasers.laser_synthetic.SyntheticLaser", "_autosummary/aslm.model.devices.lasers.laser_trigger_base", "_autosummary/aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase", "_autosummary/aslm.model.devices.lasers.laser_trigger_synthetic", "_autosummary/aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers", "_autosummary/aslm.model.devices.objectives", "_autosummary/aslm.model.devices.objectives.Objective", "_autosummary/aslm.model.devices.remote_focus", "_autosummary/aslm.model.devices.remote_focus.remote_focus_base", "_autosummary/aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase", "_autosummary/aslm.model.devices.remote_focus.remote_focus_equipment_solutions", "_autosummary/aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions", "_autosummary/aslm.model.devices.shutter", "_autosummary/aslm.model.devices.shutter.laser_shutter_base", "_autosummary/aslm.model.devices.shutter.laser_shutter_base.ShutterBase", "_autosummary/aslm.model.devices.shutter.laser_shutter_synthetic", "_autosummary/aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter", "_autosummary/aslm.model.devices.stages", "_autosummary/aslm.model.devices.stages.stage_asi", "_autosummary/aslm.model.devices.stages.stage_asi.ASIStage", "_autosummary/aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection", "_autosummary/aslm.model.devices.stages.stage_base", "_autosummary/aslm.model.devices.stages.stage_base.StageBase", "_autosummary/aslm.model.devices.stages.stage_galvo", "_autosummary/aslm.model.devices.stages.stage_galvo.GalvoNIStage", "_autosummary/aslm.model.devices.stages.stage_mcl", "_autosummary/aslm.model.devices.stages.stage_mcl.MCLStage", "_autosummary/aslm.model.devices.stages.stage_mcl.build_MCLStage_connection", "_autosummary/aslm.model.devices.stages.stage_pi", "_autosummary/aslm.model.devices.stages.stage_pi.PIStage", "_autosummary/aslm.model.devices.stages.stage_pi.build_PIStage_connection", "_autosummary/aslm.model.devices.stages.stage_sutter", "_autosummary/aslm.model.devices.stages.stage_sutter.SutterStage", "_autosummary/aslm.model.devices.stages.stage_sutter.build_sutter_stage_connection", "_autosummary/aslm.model.devices.stages.stage_synthetic", "_autosummary/aslm.model.devices.stages.stage_synthetic.SyntheticStage", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection", "_autosummary/aslm.model.devices.zoom", "_autosummary/aslm.model.devices.zoom.zoom_base", "_autosummary/aslm.model.devices.zoom.zoom_base.ZoomBase", "_autosummary/aslm.model.devices.zoom.zoom_synthetic", "_autosummary/aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom", "_autosummary/aslm.model.dummy", "_autosummary/aslm.model.dummy.DummyDevice", "_autosummary/aslm.model.dummy.DummyModel", "_autosummary/aslm.model.features", "_autosummary/aslm.model.features.autofocus", "_autosummary/aslm.model.features.autofocus.Autofocus", "_autosummary/aslm.model.features.common_features", "_autosummary/aslm.model.features.common_features.ChangeResolution", "_autosummary/aslm.model.features.common_features.FindTissueSimple2D", "_autosummary/aslm.model.features.common_features.LoopByCount", "_autosummary/aslm.model.features.common_features.PrepareNextChannel", "_autosummary/aslm.model.features.common_features.Snap", "_autosummary/aslm.model.features.common_features.WaitToContinue", "_autosummary/aslm.model.features.common_features.ZStackAcquisition", "_autosummary/aslm.model.features.dummy_detective", "_autosummary/aslm.model.features.dummy_detective.Dummy_Detective", "_autosummary/aslm.model.features.feature_container", "_autosummary/aslm.model.features.feature_container.Container", "_autosummary/aslm.model.features.feature_container.DataContainer", "_autosummary/aslm.model.features.feature_container.DataNode", "_autosummary/aslm.model.features.feature_container.SignalContainer", "_autosummary/aslm.model.features.feature_container.SignalNode", "_autosummary/aslm.model.features.feature_container.TreeNode", "_autosummary/aslm.model.features.feature_container.dummy_True", "_autosummary/aslm.model.features.feature_container.dummy_func", "_autosummary/aslm.model.features.feature_container.get_registered_funcs", "_autosummary/aslm.model.features.feature_container.load_features", "_autosummary/aslm.model.features.image_writer", "_autosummary/aslm.model.features.image_writer.ImageWriter", "_autosummary/aslm.model.features.restful_features", "_autosummary/aslm.model.features.restful_features.IlastikSegmentation", "_autosummary/aslm.model.features.restful_features.prepare_service", "_autosummary/aslm.model.features.volume_search", "_autosummary/aslm.model.features.volume_search.VolumeSearch", "_autosummary/aslm.model.metadata_sources", "_autosummary/aslm.model.metadata_sources.bdv_metadata", "_autosummary/aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata", "_autosummary/aslm.model.metadata_sources.metadata", "_autosummary/aslm.model.metadata_sources.metadata.Metadata", "_autosummary/aslm.model.metadata_sources.metadata.XMLMetadata", "_autosummary/aslm.model.metadata_sources.ome_tiff_metadata", "_autosummary/aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata", "_autosummary/aslm.model.microscope", "_autosummary/aslm.model.microscope.Microscope", "_autosummary/aslm.model.model", "_autosummary/aslm.model.model.Model", "_autosummary/aslm.model.waveforms", "_autosummary/aslm.model.waveforms.camera_exposure", "_autosummary/aslm.model.waveforms.dc_value", "_autosummary/aslm.model.waveforms.sawtooth", "_autosummary/aslm.model.waveforms.sine_wave", "_autosummary/aslm.model.waveforms.single_pulse", "_autosummary/aslm.model.waveforms.smooth_waveform", "_autosummary/aslm.model.waveforms.square", "_autosummary/aslm.model.waveforms.tunable_lens_ramp", "_autosummary/aslm.tools", "_autosummary/aslm.tools.beams", "_autosummary/aslm.tools.beams.fit_gaussian_beam_error", "_autosummary/aslm.tools.beams.fit_gaussian_beam_mse", "_autosummary/aslm.tools.beams.gaussian_beam", "_autosummary/aslm.tools.common_dict_tools", "_autosummary/aslm.tools.common_dict_tools.update_settings_common", "_autosummary/aslm.tools.common_dict_tools.update_stage_dict", "_autosummary/aslm.tools.common_functions", "_autosummary/aslm.tools.common_functions.build_ref_name", "_autosummary/aslm.tools.common_functions.combine_funcs", "_autosummary/aslm.tools.common_functions.copy_proxy_object", "_autosummary/aslm.tools.decorators", "_autosummary/aslm.tools.decorators.function_timer", "_autosummary/aslm.tools.file_functions", "_autosummary/aslm.tools.file_functions.create_save_path", "_autosummary/aslm.tools.file_functions.save_yaml_file", "_autosummary/aslm.tools.image", "_autosummary/aslm.tools.image.text_array", "_autosummary/aslm.tools.image_loaders", "_autosummary/aslm.tools.image_loaders.LazyTiff", "_autosummary/aslm.tools.main_functions", "_autosummary/aslm.tools.main_functions.create_parser", "_autosummary/aslm.tools.main_functions.evaluate_parser_input_arguments", "_autosummary/aslm.tools.main_functions.identify_gpu", "_autosummary/aslm.tools.multipos_table_tools", "_autosummary/aslm.tools.multipos_table_tools.calc_num_tiles", "_autosummary/aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box", "_autosummary/aslm.tools.multipos_table_tools.sign", "_autosummary/aslm.tools.multipos_table_tools.update_table", "_autosummary/aslm.tools.project_stats", "_autosummary/aslm.tools.project_stats.countlines", "_autosummary/aslm.tools.xml_tools", "_autosummary/aslm.tools.xml_tools.dict_to_xml", "_autosummary/aslm.tools.xml_tools.parse_xml", "_autosummary/aslm.view", "_autosummary/aslm.view.main_window_content", "_autosummary/aslm.view.main_window_content.acquire_bar_frame", "_autosummary/aslm.view.main_window_content.channel_settings", "_autosummary/aslm.view.main_window_content.channel_settings.channel_settings_frames", "_autosummary/aslm.view.main_window_content.stage_control", "_autosummary/aslm.view.main_window_content.stage_control.stage_control_frames", "_autosummary/aslm.view.menus", "_templates/custom_class", "_templates/custom_module", "api", "config", "contributing", "features", "hacking", "hardware", "implementations", "index", "installation", "userguide"], "filenames": ["_autosummary/aslm.config.rst", "_autosummary/aslm.config.config.rst", "_autosummary/aslm.config.config.build_nested_dict.rst", "_autosummary/aslm.config.config.get_aslm_path.rst", "_autosummary/aslm.config.config.get_configuration_paths.rst", "_autosummary/aslm.config.config.load_configs.rst", "_autosummary/aslm.config.config.update_config_dict.rst", "_autosummary/aslm.controller.rst", "_autosummary/aslm.controller.configuration_controller.rst", "_autosummary/aslm.controller.configuration_controller.ConfigurationController.rst", "_autosummary/aslm.controller.thread_pool.rst", "_autosummary/aslm.controller.thread_pool.SelfLockThread.rst", "_autosummary/aslm.controller.thread_pool.SynchronizedThreadPool.rst", "_autosummary/aslm.controller.thread_pool.ThreadWaitlist.rst", "_autosummary/aslm.model.rst", "_autosummary/aslm.model.analysis.rst", "_autosummary/aslm.model.analysis.boundary_detect.rst", "_autosummary/aslm.model.analysis.boundary_detect.binary_detect.rst", "_autosummary/aslm.model.analysis.boundary_detect.find_tissue_boundary_2d.rst", "_autosummary/aslm.model.analysis.boundary_detect.has_tissue.rst", "_autosummary/aslm.model.analysis.boundary_detect.map_boundary.rst", "_autosummary/aslm.model.analysis.camera.rst", "_autosummary/aslm.model.analysis.camera.compute_flatfield_map.rst", "_autosummary/aslm.model.analysis.camera.compute_noise_sigma.rst", "_autosummary/aslm.model.analysis.camera.compute_scmos_offset_and_variance_map.rst", "_autosummary/aslm.model.analysis.camera.compute_signal_to_noise.rst", "_autosummary/aslm.model.analysis.detection.rst", "_autosummary/aslm.model.analysis.detection.add_median_border.rst", "_autosummary/aslm.model.analysis.detection.combine_images.rst", "_autosummary/aslm.model.analysis.detection.log_detection.rst", "_autosummary/aslm.model.analysis.detection.make_inside_image.rst", "_autosummary/aslm.model.analysis.detection.make_normalized_image.rst", "_autosummary/aslm.model.analysis.detection.make_sphere_3D.rst", "_autosummary/aslm.model.analysis.detection.multiscale_surface_filter_3D.rst", "_autosummary/aslm.model.analysis.detection.surface_filter_gauss_3D.rst", "_autosummary/aslm.model.analysis.detection.three_level_segmentation.rst", "_autosummary/aslm.model.analysis.image_contrast.rst", "_autosummary/aslm.model.analysis.image_contrast.estimate_and_correct_flatfield.rst", "_autosummary/aslm.model.analysis.image_contrast.estimate_image_resolution.rst", "_autosummary/aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy.rst", "_autosummary/aslm.model.analysis.image_contrast.image_intensity.rst", "_autosummary/aslm.model.analysis.image_contrast.normalized_dct_shannon_entropy.rst", "_autosummary/aslm.model.analysis.image_decorrelation.rst", "_autosummary/aslm.model.analysis.image_decorrelation.apodize_image.rst", "_autosummary/aslm.model.analysis.image_decorrelation.get_correlation_coefficient.rst", "_autosummary/aslm.model.analysis.image_decorrelation.get_decorrelation_local_maxima.rst", "_autosummary/aslm.model.analysis.image_decorrelation.get_image_decorrelation.rst", "_autosummary/aslm.model.analysis.image_decorrelation.get_radial_average.rst", "_autosummary/aslm.model.analysis.image_decorrelation.image_to_polar.rst", "_autosummary/aslm.model.analysis.image_decorrelation.linear_map.rst", "_autosummary/aslm.model.analysis.image_decorrelation.main_image_decorr.rst", "_autosummary/aslm.model.analysis.image_transform.rst", "_autosummary/aslm.model.analysis.image_transform.deskew_image.rst", "_autosummary/aslm.model.analysis.image_transform.initiate_gpu.rst", "_autosummary/aslm.model.analysis.spectral_unmixing.rst", "_autosummary/aslm.model.analysis.spectral_unmixing.to_do.rst", "_autosummary/aslm.model.concurrency.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.CustodyThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.FancyThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.MyTestClass.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.ObjectInSubprocess.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.PoliteThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.ResultThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.SharedNDArray.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.TestSharedNDArray.rst", "_autosummary/aslm.model.concurrency.proxy_objects.rst", "_autosummary/aslm.model.concurrency.proxy_objects.ProxyManager.rst", "_autosummary/aslm.model.concurrency.proxy_objects.ProxyObject.rst", "_autosummary/aslm.model.concurrency.proxy_objects.launch_custody_thread.rst", "_autosummary/aslm.model.concurrency.proxy_objects.launch_thread.rst", "_autosummary/aslm.model.concurrency.shared_memory.rst", "_autosummary/aslm.model.concurrency.write_parameters.rst", "_autosummary/aslm.model.concurrency.write_parameters.write_Params.rst", "_autosummary/aslm.model.data_sources.rst", "_autosummary/aslm.model.data_sources.bdv_data_source.rst", "_autosummary/aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.rst", "_autosummary/aslm.model.data_sources.data_source.rst", "_autosummary/aslm.model.data_sources.data_source.DataSource.rst", "_autosummary/aslm.model.data_sources.get_data_source.rst", "_autosummary/aslm.model.data_sources.tiff_data_source.rst", "_autosummary/aslm.model.data_sources.tiff_data_source.TiffDataSource.rst", "_autosummary/aslm.model.data_sources.zarr_data_source.rst", "_autosummary/aslm.model.data_sources.zarr_data_source.ZarrDataSource.rst", "_autosummary/aslm.model.device_startup_functions.rst", "_autosummary/aslm.model.device_startup_functions.DummyDeviceConnection.rst", "_autosummary/aslm.model.device_startup_functions.auto_redial.rst", "_autosummary/aslm.model.device_startup_functions.device_not_found.rst", "_autosummary/aslm.model.device_startup_functions.load_camera_connection.rst", "_autosummary/aslm.model.device_startup_functions.load_devices.rst", "_autosummary/aslm.model.device_startup_functions.load_filter_wheel_connection.rst", "_autosummary/aslm.model.device_startup_functions.load_stages.rst", "_autosummary/aslm.model.device_startup_functions.load_zoom_connection.rst", "_autosummary/aslm.model.device_startup_functions.start_camera.rst", "_autosummary/aslm.model.device_startup_functions.start_daq.rst", "_autosummary/aslm.model.device_startup_functions.start_filter_wheel.rst", "_autosummary/aslm.model.device_startup_functions.start_galvo.rst", "_autosummary/aslm.model.device_startup_functions.start_lasers.rst", "_autosummary/aslm.model.device_startup_functions.start_remote_focus_device.rst", "_autosummary/aslm.model.device_startup_functions.start_shutter.rst", "_autosummary/aslm.model.device_startup_functions.start_stage.rst", "_autosummary/aslm.model.device_startup_functions.start_zoom.rst", "_autosummary/aslm.model.devices.rst", "_autosummary/aslm.model.devices.APIs.rst", "_autosummary/aslm.model.devices.APIs.coherent.rst", "_autosummary/aslm.model.devices.APIs.dynamixel.rst", "_autosummary/aslm.model.devices.APIs.logitech.rst", "_autosummary/aslm.model.devices.APIs.omicron.rst", "_autosummary/aslm.model.devices.camera.rst", "_autosummary/aslm.model.devices.camera.camera_base.rst", "_autosummary/aslm.model.devices.camera.camera_base.CameraBase.rst", "_autosummary/aslm.model.devices.camera.camera_hamamatsu.rst", "_autosummary/aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.rst", "_autosummary/aslm.model.devices.camera.camera_synthetic.rst", "_autosummary/aslm.model.devices.camera.camera_synthetic.SyntheticCamera.rst", "_autosummary/aslm.model.devices.camera.camera_synthetic.SyntheticCameraController.rst", "_autosummary/aslm.model.devices.daq.rst", "_autosummary/aslm.model.devices.daq.daq_base.rst", "_autosummary/aslm.model.devices.daq.daq_base.DAQBase.rst", "_autosummary/aslm.model.devices.daq.daq_synthetic.rst", "_autosummary/aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.rst", "_autosummary/aslm.model.devices.filter_wheel.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_base.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_synthetic.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.rst", "_autosummary/aslm.model.devices.galvo.rst", "_autosummary/aslm.model.devices.galvo.galvo_base.rst", "_autosummary/aslm.model.devices.galvo.galvo_base.GalvoBase.rst", "_autosummary/aslm.model.devices.joystick.rst", "_autosummary/aslm.model.devices.joystick.joystick_base.rst", "_autosummary/aslm.model.devices.joystick.joystick_base.JoystickBase.rst", "_autosummary/aslm.model.devices.joystick.joystick_logitech.rst", "_autosummary/aslm.model.devices.joystick.joystick_logitech.JoystickLogitech.rst", "_autosummary/aslm.model.devices.joystick.joystick_synthetic.rst", "_autosummary/aslm.model.devices.joystick.joystick_synthetic.SyntheticJoystick.rst", "_autosummary/aslm.model.devices.lasers.rst", "_autosummary/aslm.model.devices.lasers.laser_base.rst", "_autosummary/aslm.model.devices.lasers.laser_base.LaserBase.rst", "_autosummary/aslm.model.devices.lasers.laser_synthetic.rst", "_autosummary/aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.rst", "_autosummary/aslm.model.devices.lasers.laser_trigger_base.rst", "_autosummary/aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase.rst", "_autosummary/aslm.model.devices.lasers.laser_trigger_synthetic.rst", "_autosummary/aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers.rst", "_autosummary/aslm.model.devices.objectives.rst", "_autosummary/aslm.model.devices.objectives.Objective.rst", "_autosummary/aslm.model.devices.remote_focus.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_base.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_equipment_solutions.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.rst", "_autosummary/aslm.model.devices.shutter.rst", "_autosummary/aslm.model.devices.shutter.laser_shutter_base.rst", "_autosummary/aslm.model.devices.shutter.laser_shutter_base.ShutterBase.rst", "_autosummary/aslm.model.devices.shutter.laser_shutter_synthetic.rst", "_autosummary/aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.rst", "_autosummary/aslm.model.devices.stages.rst", "_autosummary/aslm.model.devices.stages.stage_asi.rst", "_autosummary/aslm.model.devices.stages.stage_asi.ASIStage.rst", "_autosummary/aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection.rst", "_autosummary/aslm.model.devices.stages.stage_base.rst", "_autosummary/aslm.model.devices.stages.stage_base.StageBase.rst", "_autosummary/aslm.model.devices.stages.stage_galvo.rst", "_autosummary/aslm.model.devices.stages.stage_galvo.GalvoNIStage.rst", "_autosummary/aslm.model.devices.stages.stage_mcl.rst", "_autosummary/aslm.model.devices.stages.stage_mcl.MCLStage.rst", "_autosummary/aslm.model.devices.stages.stage_mcl.build_MCLStage_connection.rst", "_autosummary/aslm.model.devices.stages.stage_pi.rst", "_autosummary/aslm.model.devices.stages.stage_pi.PIStage.rst", "_autosummary/aslm.model.devices.stages.stage_pi.build_PIStage_connection.rst", "_autosummary/aslm.model.devices.stages.stage_sutter.rst", "_autosummary/aslm.model.devices.stages.stage_sutter.SutterStage.rst", "_autosummary/aslm.model.devices.stages.stage_sutter.build_sutter_stage_connection.rst", "_autosummary/aslm.model.devices.stages.stage_synthetic.rst", "_autosummary/aslm.model.devices.stages.stage_synthetic.SyntheticStage.rst", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.rst", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.rst", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection.rst", "_autosummary/aslm.model.devices.zoom.rst", "_autosummary/aslm.model.devices.zoom.zoom_base.rst", "_autosummary/aslm.model.devices.zoom.zoom_base.ZoomBase.rst", "_autosummary/aslm.model.devices.zoom.zoom_synthetic.rst", "_autosummary/aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.rst", "_autosummary/aslm.model.dummy.rst", "_autosummary/aslm.model.dummy.DummyDevice.rst", "_autosummary/aslm.model.dummy.DummyModel.rst", "_autosummary/aslm.model.features.rst", "_autosummary/aslm.model.features.autofocus.rst", "_autosummary/aslm.model.features.autofocus.Autofocus.rst", "_autosummary/aslm.model.features.common_features.rst", "_autosummary/aslm.model.features.common_features.ChangeResolution.rst", "_autosummary/aslm.model.features.common_features.FindTissueSimple2D.rst", "_autosummary/aslm.model.features.common_features.LoopByCount.rst", "_autosummary/aslm.model.features.common_features.PrepareNextChannel.rst", "_autosummary/aslm.model.features.common_features.Snap.rst", "_autosummary/aslm.model.features.common_features.WaitToContinue.rst", "_autosummary/aslm.model.features.common_features.ZStackAcquisition.rst", "_autosummary/aslm.model.features.dummy_detective.rst", "_autosummary/aslm.model.features.dummy_detective.Dummy_Detective.rst", "_autosummary/aslm.model.features.feature_container.rst", "_autosummary/aslm.model.features.feature_container.Container.rst", "_autosummary/aslm.model.features.feature_container.DataContainer.rst", "_autosummary/aslm.model.features.feature_container.DataNode.rst", "_autosummary/aslm.model.features.feature_container.SignalContainer.rst", "_autosummary/aslm.model.features.feature_container.SignalNode.rst", "_autosummary/aslm.model.features.feature_container.TreeNode.rst", "_autosummary/aslm.model.features.feature_container.dummy_True.rst", "_autosummary/aslm.model.features.feature_container.dummy_func.rst", "_autosummary/aslm.model.features.feature_container.get_registered_funcs.rst", "_autosummary/aslm.model.features.feature_container.load_features.rst", "_autosummary/aslm.model.features.image_writer.rst", "_autosummary/aslm.model.features.image_writer.ImageWriter.rst", "_autosummary/aslm.model.features.restful_features.rst", "_autosummary/aslm.model.features.restful_features.IlastikSegmentation.rst", "_autosummary/aslm.model.features.restful_features.prepare_service.rst", "_autosummary/aslm.model.features.volume_search.rst", "_autosummary/aslm.model.features.volume_search.VolumeSearch.rst", "_autosummary/aslm.model.metadata_sources.rst", "_autosummary/aslm.model.metadata_sources.bdv_metadata.rst", "_autosummary/aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.rst", "_autosummary/aslm.model.metadata_sources.metadata.rst", "_autosummary/aslm.model.metadata_sources.metadata.Metadata.rst", "_autosummary/aslm.model.metadata_sources.metadata.XMLMetadata.rst", "_autosummary/aslm.model.metadata_sources.ome_tiff_metadata.rst", "_autosummary/aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.rst", "_autosummary/aslm.model.microscope.rst", "_autosummary/aslm.model.microscope.Microscope.rst", "_autosummary/aslm.model.model.rst", "_autosummary/aslm.model.model.Model.rst", "_autosummary/aslm.model.waveforms.rst", "_autosummary/aslm.model.waveforms.camera_exposure.rst", "_autosummary/aslm.model.waveforms.dc_value.rst", "_autosummary/aslm.model.waveforms.sawtooth.rst", "_autosummary/aslm.model.waveforms.sine_wave.rst", "_autosummary/aslm.model.waveforms.single_pulse.rst", "_autosummary/aslm.model.waveforms.smooth_waveform.rst", "_autosummary/aslm.model.waveforms.square.rst", "_autosummary/aslm.model.waveforms.tunable_lens_ramp.rst", "_autosummary/aslm.tools.rst", "_autosummary/aslm.tools.beams.rst", "_autosummary/aslm.tools.beams.fit_gaussian_beam_error.rst", "_autosummary/aslm.tools.beams.fit_gaussian_beam_mse.rst", "_autosummary/aslm.tools.beams.gaussian_beam.rst", "_autosummary/aslm.tools.common_dict_tools.rst", "_autosummary/aslm.tools.common_dict_tools.update_settings_common.rst", "_autosummary/aslm.tools.common_dict_tools.update_stage_dict.rst", "_autosummary/aslm.tools.common_functions.rst", "_autosummary/aslm.tools.common_functions.build_ref_name.rst", "_autosummary/aslm.tools.common_functions.combine_funcs.rst", "_autosummary/aslm.tools.common_functions.copy_proxy_object.rst", "_autosummary/aslm.tools.decorators.rst", "_autosummary/aslm.tools.decorators.function_timer.rst", "_autosummary/aslm.tools.file_functions.rst", "_autosummary/aslm.tools.file_functions.create_save_path.rst", "_autosummary/aslm.tools.file_functions.save_yaml_file.rst", "_autosummary/aslm.tools.image.rst", "_autosummary/aslm.tools.image.text_array.rst", "_autosummary/aslm.tools.image_loaders.rst", "_autosummary/aslm.tools.image_loaders.LazyTiff.rst", "_autosummary/aslm.tools.main_functions.rst", "_autosummary/aslm.tools.main_functions.create_parser.rst", "_autosummary/aslm.tools.main_functions.evaluate_parser_input_arguments.rst", "_autosummary/aslm.tools.main_functions.identify_gpu.rst", "_autosummary/aslm.tools.multipos_table_tools.rst", "_autosummary/aslm.tools.multipos_table_tools.calc_num_tiles.rst", "_autosummary/aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box.rst", "_autosummary/aslm.tools.multipos_table_tools.sign.rst", "_autosummary/aslm.tools.multipos_table_tools.update_table.rst", "_autosummary/aslm.tools.project_stats.rst", "_autosummary/aslm.tools.project_stats.countlines.rst", "_autosummary/aslm.tools.xml_tools.rst", "_autosummary/aslm.tools.xml_tools.dict_to_xml.rst", "_autosummary/aslm.tools.xml_tools.parse_xml.rst", "_autosummary/aslm.view.rst", "_autosummary/aslm.view.main_window_content.rst", "_autosummary/aslm.view.main_window_content.acquire_bar_frame.rst", "_autosummary/aslm.view.main_window_content.channel_settings.rst", "_autosummary/aslm.view.main_window_content.channel_settings.channel_settings_frames.rst", "_autosummary/aslm.view.main_window_content.stage_control.rst", "_autosummary/aslm.view.main_window_content.stage_control.stage_control_frames.rst", "_autosummary/aslm.view.menus.rst", "_templates/custom_class.rst", "_templates/custom_module.rst", "api.rst", "config.rst", "contributing.rst", "features.rst", "hacking.rst", "hardware.rst", "implementations.rst", "index.rst", "installation.rst", "userguide.rst"], "titles": ["aslm.config", "aslm.config.config", "aslm.config.config.build_nested_dict", "aslm.config.config.get_aslm_path", "aslm.config.config.get_configuration_paths", "aslm.config.config.load_configs", "aslm.config.config.update_config_dict", "aslm.controller", "aslm.controller.configuration_controller", "aslm.controller.configuration_controller.ConfigurationController", "aslm.controller.thread_pool", "aslm.controller.thread_pool.SelfLockThread", "aslm.controller.thread_pool.SynchronizedThreadPool", "aslm.controller.thread_pool.ThreadWaitlist", "aslm.model", "aslm.model.analysis", "aslm.model.analysis.boundary_detect", "aslm.model.analysis.boundary_detect.binary_detect", "aslm.model.analysis.boundary_detect.find_tissue_boundary_2d", "aslm.model.analysis.boundary_detect.has_tissue", "aslm.model.analysis.boundary_detect.map_boundary", "aslm.model.analysis.camera", "aslm.model.analysis.camera.compute_flatfield_map", "aslm.model.analysis.camera.compute_noise_sigma", "aslm.model.analysis.camera.compute_scmos_offset_and_variance_map", "aslm.model.analysis.camera.compute_signal_to_noise", "aslm.model.analysis.detection", "aslm.model.analysis.detection.add_median_border", "aslm.model.analysis.detection.combine_images", "aslm.model.analysis.detection.log_detection", "aslm.model.analysis.detection.make_inside_image", "aslm.model.analysis.detection.make_normalized_image", "aslm.model.analysis.detection.make_sphere_3D", "aslm.model.analysis.detection.multiscale_surface_filter_3D", "aslm.model.analysis.detection.surface_filter_gauss_3D", "aslm.model.analysis.detection.three_level_segmentation", "aslm.model.analysis.image_contrast", "aslm.model.analysis.image_contrast.estimate_and_correct_flatfield", "aslm.model.analysis.image_contrast.estimate_image_resolution", "aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy", "aslm.model.analysis.image_contrast.image_intensity", "aslm.model.analysis.image_contrast.normalized_dct_shannon_entropy", "aslm.model.analysis.image_decorrelation", "aslm.model.analysis.image_decorrelation.apodize_image", "aslm.model.analysis.image_decorrelation.get_correlation_coefficient", "aslm.model.analysis.image_decorrelation.get_decorrelation_local_maxima", "aslm.model.analysis.image_decorrelation.get_image_decorrelation", "aslm.model.analysis.image_decorrelation.get_radial_average", "aslm.model.analysis.image_decorrelation.image_to_polar", "aslm.model.analysis.image_decorrelation.linear_map", "aslm.model.analysis.image_decorrelation.main_image_decorr", "aslm.model.analysis.image_transform", "aslm.model.analysis.image_transform.deskew_image", "aslm.model.analysis.image_transform.initiate_gpu", "aslm.model.analysis.spectral_unmixing", "aslm.model.analysis.spectral_unmixing.to_do", "aslm.model.concurrency", "aslm.model.concurrency.concurrency_tools", "aslm.model.concurrency.concurrency_tools.CustodyThread", "aslm.model.concurrency.concurrency_tools.FancyThread", "aslm.model.concurrency.concurrency_tools.MyTestClass", "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess", "aslm.model.concurrency.concurrency_tools.PoliteThread", "aslm.model.concurrency.concurrency_tools.ResultThread", "aslm.model.concurrency.concurrency_tools.SharedNDArray", "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess", "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread", "aslm.model.concurrency.concurrency_tools.TestSharedNDArray", "aslm.model.concurrency.proxy_objects", "aslm.model.concurrency.proxy_objects.ProxyManager", "aslm.model.concurrency.proxy_objects.ProxyObject", "aslm.model.concurrency.proxy_objects.launch_custody_thread", "aslm.model.concurrency.proxy_objects.launch_thread", "aslm.model.concurrency.shared_memory", "aslm.model.concurrency.write_parameters", "aslm.model.concurrency.write_parameters.write_Params", "aslm.model.data_sources", "aslm.model.data_sources.bdv_data_source", "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource", "aslm.model.data_sources.data_source", "aslm.model.data_sources.data_source.DataSource", "aslm.model.data_sources.get_data_source", "aslm.model.data_sources.tiff_data_source", "aslm.model.data_sources.tiff_data_source.TiffDataSource", "aslm.model.data_sources.zarr_data_source", "aslm.model.data_sources.zarr_data_source.ZarrDataSource", "aslm.model.device_startup_functions", "aslm.model.device_startup_functions.DummyDeviceConnection", "aslm.model.device_startup_functions.auto_redial", "aslm.model.device_startup_functions.device_not_found", "aslm.model.device_startup_functions.load_camera_connection", "aslm.model.device_startup_functions.load_devices", "aslm.model.device_startup_functions.load_filter_wheel_connection", "aslm.model.device_startup_functions.load_stages", "aslm.model.device_startup_functions.load_zoom_connection", "aslm.model.device_startup_functions.start_camera", "aslm.model.device_startup_functions.start_daq", "aslm.model.device_startup_functions.start_filter_wheel", "aslm.model.device_startup_functions.start_galvo", "aslm.model.device_startup_functions.start_lasers", "aslm.model.device_startup_functions.start_remote_focus_device", "aslm.model.device_startup_functions.start_shutter", "aslm.model.device_startup_functions.start_stage", "aslm.model.device_startup_functions.start_zoom", "aslm.model.devices", "aslm.model.devices.APIs", "aslm.model.devices.APIs.coherent", "aslm.model.devices.APIs.dynamixel", "aslm.model.devices.APIs.logitech", "aslm.model.devices.APIs.omicron", "aslm.model.devices.camera", "aslm.model.devices.camera.camera_base", "aslm.model.devices.camera.camera_base.CameraBase", "aslm.model.devices.camera.camera_hamamatsu", "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca", "aslm.model.devices.camera.camera_synthetic", "aslm.model.devices.camera.camera_synthetic.SyntheticCamera", "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController", "aslm.model.devices.daq", "aslm.model.devices.daq.daq_base", "aslm.model.devices.daq.daq_base.DAQBase", "aslm.model.devices.daq.daq_synthetic", "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ", "aslm.model.devices.filter_wheel", "aslm.model.devices.filter_wheel.filter_wheel_base", "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase", "aslm.model.devices.filter_wheel.filter_wheel_sutter", "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel", "aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection", "aslm.model.devices.filter_wheel.filter_wheel_synthetic", "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel", "aslm.model.devices.galvo", "aslm.model.devices.galvo.galvo_base", "aslm.model.devices.galvo.galvo_base.GalvoBase", "aslm.model.devices.joystick", "aslm.model.devices.joystick.joystick_base", "aslm.model.devices.joystick.joystick_base.JoystickBase", "aslm.model.devices.joystick.joystick_logitech", "aslm.model.devices.joystick.joystick_logitech.JoystickLogitech", "aslm.model.devices.joystick.joystick_synthetic", "aslm.model.devices.joystick.joystick_synthetic.SyntheticJoystick", "aslm.model.devices.lasers", "aslm.model.devices.lasers.laser_base", "aslm.model.devices.lasers.laser_base.LaserBase", "aslm.model.devices.lasers.laser_synthetic", "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser", "aslm.model.devices.lasers.laser_trigger_base", "aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase", "aslm.model.devices.lasers.laser_trigger_synthetic", "aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers", "aslm.model.devices.objectives", "aslm.model.devices.objectives.Objective", "aslm.model.devices.remote_focus", "aslm.model.devices.remote_focus.remote_focus_base", "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase", "aslm.model.devices.remote_focus.remote_focus_equipment_solutions", "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions", "aslm.model.devices.shutter", "aslm.model.devices.shutter.laser_shutter_base", "aslm.model.devices.shutter.laser_shutter_base.ShutterBase", "aslm.model.devices.shutter.laser_shutter_synthetic", "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter", "aslm.model.devices.stages", "aslm.model.devices.stages.stage_asi", "aslm.model.devices.stages.stage_asi.ASIStage", "aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection", "aslm.model.devices.stages.stage_base", "aslm.model.devices.stages.stage_base.StageBase", "aslm.model.devices.stages.stage_galvo", "aslm.model.devices.stages.stage_galvo.GalvoNIStage", "aslm.model.devices.stages.stage_mcl", "aslm.model.devices.stages.stage_mcl.MCLStage", "aslm.model.devices.stages.stage_mcl.build_MCLStage_connection", "aslm.model.devices.stages.stage_pi", "aslm.model.devices.stages.stage_pi.PIStage", "aslm.model.devices.stages.stage_pi.build_PIStage_connection", "aslm.model.devices.stages.stage_sutter", "aslm.model.devices.stages.stage_sutter.SutterStage", "aslm.model.devices.stages.stage_sutter.build_sutter_stage_connection", "aslm.model.devices.stages.stage_synthetic", "aslm.model.devices.stages.stage_synthetic.SyntheticStage", "aslm.model.devices.stages.stage_tl_kcube_inertial", "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage", "aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection", "aslm.model.devices.zoom", "aslm.model.devices.zoom.zoom_base", "aslm.model.devices.zoom.zoom_base.ZoomBase", "aslm.model.devices.zoom.zoom_synthetic", "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom", "aslm.model.dummy", "aslm.model.dummy.DummyDevice", "aslm.model.dummy.DummyModel", "aslm.model.features", "aslm.model.features.autofocus", "aslm.model.features.autofocus.Autofocus", "aslm.model.features.common_features", "aslm.model.features.common_features.ChangeResolution", "aslm.model.features.common_features.FindTissueSimple2D", "aslm.model.features.common_features.LoopByCount", "aslm.model.features.common_features.PrepareNextChannel", "aslm.model.features.common_features.Snap", "aslm.model.features.common_features.WaitToContinue", "aslm.model.features.common_features.ZStackAcquisition", "aslm.model.features.dummy_detective", "aslm.model.features.dummy_detective.Dummy_Detective", "aslm.model.features.feature_container", "aslm.model.features.feature_container.Container", "aslm.model.features.feature_container.DataContainer", "aslm.model.features.feature_container.DataNode", "aslm.model.features.feature_container.SignalContainer", "aslm.model.features.feature_container.SignalNode", "aslm.model.features.feature_container.TreeNode", "aslm.model.features.feature_container.dummy_True", "aslm.model.features.feature_container.dummy_func", "aslm.model.features.feature_container.get_registered_funcs", "aslm.model.features.feature_container.load_features", "aslm.model.features.image_writer", "aslm.model.features.image_writer.ImageWriter", "aslm.model.features.restful_features", "aslm.model.features.restful_features.IlastikSegmentation", "aslm.model.features.restful_features.prepare_service", "aslm.model.features.volume_search", "aslm.model.features.volume_search.VolumeSearch", "aslm.model.metadata_sources", "aslm.model.metadata_sources.bdv_metadata", "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata", "aslm.model.metadata_sources.metadata", "aslm.model.metadata_sources.metadata.Metadata", "aslm.model.metadata_sources.metadata.XMLMetadata", "aslm.model.metadata_sources.ome_tiff_metadata", "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata", "aslm.model.microscope", "aslm.model.microscope.Microscope", "aslm.model.model", "aslm.model.model.Model", "aslm.model.waveforms", "aslm.model.waveforms.camera_exposure", "aslm.model.waveforms.dc_value", "aslm.model.waveforms.sawtooth", "aslm.model.waveforms.sine_wave", "aslm.model.waveforms.single_pulse", "aslm.model.waveforms.smooth_waveform", "aslm.model.waveforms.square", "aslm.model.waveforms.tunable_lens_ramp", "aslm.tools", "aslm.tools.beams", "aslm.tools.beams.fit_gaussian_beam_error", "aslm.tools.beams.fit_gaussian_beam_mse", "aslm.tools.beams.gaussian_beam", "aslm.tools.common_dict_tools", "aslm.tools.common_dict_tools.update_settings_common", "aslm.tools.common_dict_tools.update_stage_dict", "aslm.tools.common_functions", "aslm.tools.common_functions.build_ref_name", "aslm.tools.common_functions.combine_funcs", "aslm.tools.common_functions.copy_proxy_object", "aslm.tools.decorators", "aslm.tools.decorators.function_timer", "aslm.tools.file_functions", "aslm.tools.file_functions.create_save_path", "aslm.tools.file_functions.save_yaml_file", "aslm.tools.image", "aslm.tools.image.text_array", "aslm.tools.image_loaders", "aslm.tools.image_loaders.LazyTiff", "aslm.tools.main_functions", "aslm.tools.main_functions.create_parser", "aslm.tools.main_functions.evaluate_parser_input_arguments", "aslm.tools.main_functions.identify_gpu", "aslm.tools.multipos_table_tools", "aslm.tools.multipos_table_tools.calc_num_tiles", "aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box", "aslm.tools.multipos_table_tools.sign", "aslm.tools.multipos_table_tools.update_table", "aslm.tools.project_stats", "aslm.tools.project_stats.countlines", "aslm.tools.xml_tools", "aslm.tools.xml_tools.dict_to_xml", "aslm.tools.xml_tools.parse_xml", "aslm.view", "aslm.view.main_window_content", "aslm.view.main_window_content.acquire_bar_frame", "aslm.view.main_window_content.channel_settings", "aslm.view.main_window_content.channel_settings.channel_settings_frames", "aslm.view.main_window_content.stage_control", "aslm.view.main_window_content.stage_control.stage_control_frames", "aslm.view.menus", "&lt;no title&gt;", "&lt;no title&gt;", "API Reference", "Configuring ASLM", "Contributing Guidelines", "ASLM feature container", "Extending ASLM", "Hardware Setup", "Microscope Implementations", "<strong>Autonomous Software for Light Microscopy</strong>", "Software Installation", "User Guide"], "terms": {"modul": [0, 7, 11, 14, 15, 56, 58, 63, 64, 71, 72, 76, 104, 105, 106, 107, 108, 109, 110, 118, 123, 131, 134, 141, 152, 157, 162, 184, 192, 223, 244, 279, 280, 281, 282, 283, 284, 285, 286, 288, 295], "function": [1, 11, 16, 21, 26, 28, 30, 33, 34, 36, 42, 45, 51, 52, 54, 55, 58, 60, 63, 64, 65, 66, 67, 68, 71, 72, 76, 86, 88, 114, 116, 126, 163, 170, 173, 176, 181, 205, 218, 234, 235, 238, 245, 249, 252, 254, 255, 256, 258, 259, 261, 265, 269, 274, 276, 291, 292, 294, 295], "manag": [2, 5, 6, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 112, 114, 116, 120, 122, 159, 161, 164, 167, 169, 174, 186, 294, 297], "parent_dict": [2, 6], "key_nam": 2, "dict_data": 2, "nest": [2, 64, 225, 228, 230], "dictionari": [2, 6, 9, 11, 58, 63, 64, 98, 99, 120, 122, 125, 127, 130, 164, 167, 169, 171, 174, 177, 180, 182, 186, 188, 225, 228, 230, 234, 249, 250, 259, 260, 267, 277, 278, 290, 292], "recurs": [2, 64], "paramet": [2, 4, 5, 6, 9, 22, 23, 24, 37, 60, 64, 65, 66, 67, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 112, 114, 116, 117, 120, 122, 125, 127, 130, 151, 156, 164, 165, 167, 169, 171, 174, 177, 180, 182, 186, 188, 194, 217, 234, 243, 248, 259, 260, 262, 264, 267, 268, 270, 271, 273, 277, 278, 290], "multiprocess": [2, 5, 6, 69, 90, 93, 95, 164, 167, 169, 174], "share": [2, 5, 6, 58, 64, 69, 70, 71, 122, 234], "object": [2, 5, 6, 9, 11, 12, 13, 58, 60, 61, 63, 64, 65, 69, 70, 71, 75, 80, 87, 88, 95, 97, 98, 99, 100, 101, 102, 103, 112, 114, 116, 117, 120, 125, 133, 136, 143, 147, 154, 159, 161, 164, 165, 167, 169, 174, 186, 190, 191, 194, 196, 197, 198, 199, 200, 201, 202, 204, 206, 211, 217, 219, 222, 227, 232, 234, 250, 264, 266, 267, 268, 273, 290, 295, 296], "e": [2, 4, 5, 6, 9, 23, 64, 83, 114, 116, 125, 127, 128, 130, 165, 177, 178, 217, 228, 264, 270, 292, 294, 297], "g": [2, 5, 6, 9, 64, 83, 114, 116, 125, 127, 128, 130, 151, 165, 177, 178, 217, 228, 264, 270, 292, 294, 297], "dict": [2, 5, 6, 9, 91, 120, 122, 125, 127, 130, 151, 164, 167, 169, 171, 174, 177, 180, 182, 186, 188, 194, 234, 255, 259, 260, 277, 278], "between": [2, 5, 6, 64, 270, 290, 294], "process": [2, 5, 6, 61, 64, 69, 70, 72, 156, 234, 291, 292], "we": [2, 6, 60, 61, 63, 64, 67, 70, 78, 80, 83, 85, 114, 120, 122, 127, 130, 217, 225, 228, 230, 232, 290, 291, 292, 294, 297], "ar": [2, 6, 9, 11, 58, 63, 64, 65, 83, 85, 101, 114, 116, 120, 122, 156, 164, 174, 194, 217, 228, 232, 234, 249, 264, 290, 291, 292, 294, 295, 297], "ad": [2, 6, 60, 63, 64, 164, 266, 273], "str": [2, 3, 4, 6, 9, 22, 24, 60, 64, 65, 66, 67, 78, 80, 83, 85, 95, 97, 98, 99, 100, 101, 102, 103, 112, 114, 116, 117, 120, 122, 125, 127, 128, 130, 138, 151, 156, 159, 161, 164, 165, 167, 169, 171, 174, 177, 178, 180, 182, 186, 217, 225, 228, 230, 234, 248, 259, 260, 262, 264, 267, 277], "name": [2, 6, 9, 11, 58, 60, 61, 63, 64, 65, 66, 67, 78, 80, 83, 85, 95, 97, 98, 99, 100, 101, 102, 103, 112, 114, 116, 117, 120, 122, 125, 127, 130, 151, 159, 161, 164, 167, 169, 174, 177, 186, 217, 232, 234, 260, 290, 291, 294], "insert": [2, 64, 294], "return": [2, 3, 4, 5, 6, 9, 11, 23, 34, 37, 41, 44, 45, 47, 52, 58, 60, 61, 63, 64, 70, 78, 80, 83, 85, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 112, 114, 116, 117, 120, 122, 125, 127, 130, 151, 156, 161, 164, 165, 167, 169, 171, 174, 177, 180, 182, 186, 188, 194, 225, 227, 228, 230, 232, 234, 237, 238, 239, 240, 242, 243, 248, 255, 259, 266, 267, 268, 270, 271, 273, 277, 278], "subdictionari": [2, 6], "type": [2, 3, 5, 6, 9, 23, 24, 37, 64, 78, 80, 83, 85, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 114, 117, 120, 122, 125, 127, 128, 130, 151, 156, 159, 161, 164, 165, 167, 169, 171, 174, 177, 178, 180, 182, 186, 188, 225, 227, 228, 230, 232, 234, 243, 248, 255, 259, 262, 266, 268, 270, 271, 273, 277, 278, 290, 296], "establish": [3, 156], "program": [3, 11, 58, 63], "home": 3, "directori": [3, 217, 228, 259, 260, 297], "appdata": [3, 290, 294], "local": [3, 22, 45, 46, 64, 290, 294, 297], "window": [3, 138, 259, 290, 294, 297], "mac": [3, 290, 294, 297], "linux": [3, 290, 294, 297], "path": [3, 4, 5, 64, 147, 149, 234, 259, 264, 267, 291, 297], "get": [4, 9, 63, 64, 114, 116, 164, 194, 232, 234, 297], "variou": [4, 66, 67, 290], "configur": [4, 5, 6, 9, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 112, 114, 116, 120, 122, 125, 127, 130, 133, 143, 145, 147, 149, 154, 159, 161, 164, 167, 169, 171, 174, 177, 180, 182, 186, 188, 217, 225, 227, 228, 230, 232, 234, 267, 291, 292, 296, 297, 298], "file": [4, 5, 6, 55, 64, 78, 80, 83, 85, 225, 227, 228, 230, 234, 260, 264, 267, 278, 290, 291, 296, 297], "us": [4, 11, 23, 37, 38, 55, 58, 60, 63, 64, 65, 66, 67, 69, 70, 71, 72, 117, 156, 228, 230, 234, 236, 237, 238, 240, 242, 243, 264, 269, 290, 291, 292, 294, 297], "configuration_path": [4, 234, 267], "contain": [4, 5, 64, 177, 207, 209, 234, 259, 264, 273, 290, 293, 296], "global": [4, 22, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 112, 114, 116, 120, 122, 159, 161, 164, 167, 169, 174, 186, 234], "microscop": [4, 9, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 112, 114, 116, 120, 122, 159, 161, 164, 167, 169, 174, 186, 188, 194, 234, 291, 292, 294, 296, 297], "i": [4, 11, 23, 27, 52, 55, 58, 60, 63, 64, 65, 67, 71, 72, 83, 85, 89, 90, 114, 116, 122, 138, 147, 149, 156, 164, 167, 169, 171, 174, 177, 180, 182, 186, 188, 228, 232, 234, 243, 248, 260, 264, 267, 268, 271, 273, 290, 291, 292, 294, 295, 296, 297], "hardwar": [4, 64, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 112, 114, 116, 159, 161, 164, 167, 169, 171, 174, 177, 180, 182, 186, 217, 291, 292, 296, 297, 298], "setup": [4, 290, 296, 298], "experiment_path": [4, 234, 267], "per": [4, 11, 58, 63, 64, 78, 85, 292, 294], "experi": [4, 147, 149, 217, 225, 227, 228, 230, 234, 260, 267, 291, 297], "etl_constants_path": [4, 267], "remot": [4, 9, 100, 243, 295], "focu": [4, 9, 100, 164, 167, 174, 194, 225, 271, 292, 294], "all": [4, 11, 58, 60, 63, 64, 65, 66, 67, 83, 114, 116, 120, 122, 164, 167, 169, 171, 174, 177, 180, 182, 234, 264, 270, 290, 291, 292, 294], "magnif": 4, "rest_api_path": [4, 267], "rest": [4, 267, 290], "api": [4, 64, 90, 114, 117, 164, 174, 267, 290, 293, 294, 296], "kwarg": [5, 11, 58, 60, 63, 64, 65, 66, 67, 71, 72, 88, 208, 210, 220, 234], "load": [5, 64, 234, 264], "list": [5, 9, 33, 64, 99, 215, 225, 230, 234, 254, 255, 273, 290, 296], "config_dict": 5, "ditionari": 5, "amalgam": 5, "input": [5, 33, 37, 43, 44, 45, 46, 47, 48, 49, 64, 156, 259, 266, 267, 294], "config_nam": 6, "new_config": 6, "bool": [6, 9, 22, 24, 60, 64, 65, 66, 67, 78, 80, 83, 85, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 114, 125, 127, 130, 156, 164, 169, 171, 174, 177, 180, 182, 186, 188, 225, 234, 248, 268, 273], "read": [6, 64, 78, 80, 83, 85, 127, 130, 156, 177, 186, 188], "new": [6, 9, 49, 64, 83, 164, 169, 171, 174, 177, 180, 182, 254, 259, 273, 291, 294, 297], "updat": [6, 64, 177, 234, 249, 250, 273, 290, 296, 297], "info": 6, "replac": [6, 64, 290], "valu": [6, 9, 11, 41, 49, 58, 63, 64, 114, 117, 138, 164, 167, 169, 171, 174, 177, 180, 182, 186, 188, 228, 237, 270, 290, 292, 297], "sub": [6, 64, 217], "class": [8, 9, 10, 11, 12, 13, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 124, 125, 126, 127, 129, 130, 132, 133, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 160, 161, 163, 164, 166, 167, 168, 169, 170, 171, 173, 174, 176, 177, 179, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 263, 264, 291], "base": [9, 11, 12, 13, 46, 58, 60, 61, 63, 64, 65, 66, 67, 69, 70, 75, 78, 80, 83, 85, 87, 112, 114, 116, 117, 120, 122, 125, 127, 130, 133, 136, 138, 140, 142, 143, 145, 147, 149, 151, 154, 156, 159, 161, 164, 167, 169, 171, 174, 177, 180, 182, 186, 188, 190, 191, 194, 196, 197, 198, 199, 200, 201, 202, 204, 206, 207, 208, 209, 210, 211, 217, 219, 222, 225, 227, 228, 230, 232, 234, 262, 264, 271, 273, 291, 294, 297], "__init__": [9, 11, 12, 13, 58, 60, 61, 63, 64, 65, 66, 67, 69, 70, 75, 78, 80, 83, 85, 87, 88, 112, 114, 116, 117, 120, 122, 125, 127, 130, 133, 136, 138, 140, 143, 145, 147, 149, 151, 154, 156, 159, 161, 164, 167, 169, 171, 174, 177, 180, 182, 186, 188, 190, 191, 194, 196, 197, 198, 199, 200, 201, 202, 204, 206, 207, 208, 209, 210, 211, 217, 219, 222, 225, 227, 228, 230, 232, 234, 264, 292], "method": [9, 11, 12, 13, 58, 60, 61, 63, 64, 65, 66, 67, 69, 70, 75, 78, 80, 83, 85, 87, 112, 114, 116, 117, 120, 122, 125, 127, 130, 133, 136, 138, 140, 143, 145, 147, 149, 151, 154, 156, 159, 161, 164, 167, 169, 171, 174, 177, 180, 182, 186, 188, 190, 191, 194, 196, 197, 198, 199, 200, 201, 202, 204, 206, 207, 208, 209, 210, 211, 217, 219, 222, 225, 227, 228, 230, 232, 234, 264, 292], "attribut": [9, 11, 58, 63, 64, 65, 78, 80, 83, 85, 112, 114, 116, 128, 138, 159, 161, 225, 227, 228, 230, 264], "change_microscop": 9, "accord": [9, 64, 114, 116, 147, 149], "result": [9, 63, 64, 72, 88, 114, 255], "get_microscope_configuration_dict": 9, "microscope_configuration_dict": 9, "get_stage_position_limit": 9, "suffix": 9, "posit": [9, 45, 64, 83, 125, 127, 130, 164, 167, 169, 171, 174, 177, 180, 182, 186, 188, 194, 225, 234, 270, 271, 273, 290], "limit": [9, 60, 64, 65, 66, 67, 164, 167, 169, 174], "stage": [9, 93, 102, 225, 234, 290, 292, 296], "_min": 9, "_max": 9, "position_limit": 9, "depend": [9, 64, 271, 292, 296], "min": [9, 64, 164, 167, 169, 174, 290], "max": [9, 64, 164, 167, 169, 174, 290, 294], "x": [9, 19, 41, 64, 164, 167, 169, 171, 174, 177, 180, 182, 225, 234, 246, 247, 262, 264, 270, 271, 272, 273, 290], "2000": [9, 64, 290], "y": [9, 19, 34, 41, 64, 164, 167, 174, 177, 225, 234, 262, 264, 271, 273, 290], "z": [9, 34, 64, 83, 151, 164, 167, 174, 177, 225, 234, 248, 271, 273, 290, 292], "theta": [9, 164, 167, 169, 171, 174, 177, 180, 182, 225, 271, 290], "0": [9, 23, 29, 46, 64, 90, 98, 99, 102, 114, 116, 125, 127, 128, 130, 133, 138, 164, 167, 169, 171, 174, 177, 180, 182, 186, 188, 190, 194, 197, 230, 234, 236, 237, 238, 239, 240, 242, 243, 248, 262, 270, 275, 290, 295], "f": [9, 63, 64, 164, 225, 271, 273, 290, 295], "properti": [9, 11, 58, 63, 64, 78, 80, 83, 85, 114, 116, 151, 225, 227, 228, 230, 292], "camera_config_dict": 9, "camera": [9, 64, 85, 90, 95, 120, 122, 232, 234, 236, 290, 295, 296], "camera_set": 9, "set": [9, 11, 22, 58, 60, 63, 64, 112, 114, 116, 122, 127, 130, 143, 145, 147, 149, 177, 234, 273, 290, 292, 297], "camera_pixel": 9, "default": [9, 11, 37, 46, 58, 60, 63, 64, 114, 116, 125, 127, 130, 234, 260, 262, 267, 294], "pixel": [9, 23, 43, 234, 248, 262], "from": [9, 11, 22, 25, 31, 37, 48, 49, 55, 58, 60, 63, 64, 65, 69, 71, 72, 78, 80, 83, 85, 88, 114, 116, 127, 130, 151, 156, 161, 174, 177, 225, 227, 228, 230, 232, 234, 243, 259, 262, 270, 277, 291, 294, 296, 297], "x_pixel": 9, "int": [9, 22, 24, 60, 64, 65, 66, 67, 78, 80, 83, 85, 88, 90, 98, 99, 102, 112, 114, 116, 117, 122, 125, 127, 128, 130, 156, 164, 165, 169, 171, 174, 177, 178, 180, 182, 186, 188, 217, 225, 230, 234, 248, 262, 270, 271], "number": [9, 11, 43, 46, 58, 63, 64, 88, 114, 116, 127, 130, 156, 164, 169, 171, 174, 177, 180, 182, 194, 234, 270, 271, 296], "y_pixel": 9, "channels_info": 9, "popul": 9, "channel": [9, 83, 85, 122, 217, 234, 290, 294], "combobox": 9, "avail": [9, 11, 58, 63, 64, 71, 186, 188, 262, 294, 297], "laser": [9, 99, 122, 159, 240, 242, 292, 295], "488nm": 9, "561nm": 9, "642nm": 9, "filter": [9, 46, 92, 97, 125, 127, 128, 130, 177, 178, 295], "empti": [9, 64, 127, 130, 177], "align": [9, 64, 127, 130, 264], "gfp": [9, 125, 127, 130, 177], "ff01": 9, "515": 9, "30": [9, 64, 290], "32": [9, 37, 64], "lasers_info": 9, "laser_list": 9, "remote_focus_dict": 9, "delay_perc": 9, "pulse_perc": 9, "remote_focus_paramet": 9, "percent": [9, 240, 243], "delai": [9, 186, 188, 240, 243], "puls": [9, 240, 294], "stage_default_posit": 9, "current": [9, 11, 58, 63, 64, 114, 116, 117, 161, 186, 188, 194, 234, 271, 290], "stage_step": 9, "step": [9, 64, 156, 177, 194, 198, 208, 210, 211, 290, 292, 297], "size": [9, 64, 78, 80, 83, 85, 114, 116, 194, 225, 227, 228, 230, 248, 262, 270, 290], "same": [9, 11, 58, 63, 64, 156, 230, 260, 264], "group": [11, 58, 63], "none": [11, 29, 44, 46, 49, 58, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 78, 80, 83, 85, 114, 116, 138, 140, 206, 207, 209, 217, 225, 227, 228, 230, 234, 273, 275, 277], "target": [11, 58, 63, 71, 72, 234, 250, 251], "arg": [11, 58, 60, 63, 64, 65, 66, 67, 71, 72, 88, 89, 194, 212, 213, 234, 250, 253, 267, 268], "daemon": [11, 58, 63], "thread": [11, 58, 61, 63, 65, 71, 72, 92, 93, 94, 96, 97, 99, 101, 103, 234], "thi": [11, 52, 55, 58, 60, 61, 63, 64, 65, 66, 67, 70, 71, 72, 78, 80, 83, 85, 114, 116, 122, 164, 167, 169, 171, 174, 177, 180, 182, 228, 232, 234, 248, 249, 250, 254, 255, 259, 269, 270, 271, 290, 291, 292, 294, 295, 296, 297], "constructor": [11, 58, 63], "should": [11, 58, 63, 64, 71, 72, 85, 114, 116, 156, 164, 270, 290, 291, 294, 297], "alwai": [11, 58, 63, 64], "call": [11, 58, 60, 61, 63, 64, 71, 72, 122, 169, 171, 180, 182, 290, 297], "keyword": [11, 58, 63, 64, 71], "argument": [11, 58, 60, 61, 63, 64, 65, 66, 67, 70, 71, 88, 127, 130, 266, 267, 292], "reserv": [11, 58, 63], "futur": [11, 58, 63, 64, 291, 296], "extens": [11, 58, 63, 291], "when": [11, 58, 61, 63, 64, 72, 138, 177, 232, 290, 292, 294, 297], "threadgroup": [11, 58, 63], "implement": [11, 58, 63, 64, 78, 80, 83, 85, 169, 171, 177, 180, 182, 228], "callabl": [11, 58, 60, 61, 63, 65, 66, 67, 70], "invok": [11, 58, 63, 64], "run": [11, 58, 60, 63, 65, 66, 67, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 122, 194, 234, 290, 292, 294, 297], "mean": [11, 23, 58, 63, 64], "noth": [11, 58, 63], "By": [11, 58, 60, 63, 64], "uniqu": [11, 58, 63], "construct": [11, 58, 63, 64], "form": [11, 58, 63, 64, 291, 294], "n": [11, 58, 63, 64, 83, 138, 196, 197, 222, 246, 247, 248, 297], "where": [11, 58, 63, 64, 217, 234, 291, 292, 297], "small": [11, 58, 63], "decim": [11, 58, 63, 64, 177], "tupl": [11, 24, 58, 63, 64, 78, 80, 83, 85, 88, 225, 227, 228, 230, 262], "invoc": [11, 58, 63], "If": [11, 41, 58, 60, 61, 63, 64, 65, 66, 67, 69, 70, 72, 85, 122, 156, 177, 234, 267, 290, 291, 297], "subclass": [11, 58, 60, 63, 64], "overrid": [11, 58, 63, 217], "must": [11, 58, 63, 64, 71, 127, 291, 292, 294], "make": [11, 32, 58, 61, 63, 64, 70, 85, 164, 167, 169, 174, 271, 290, 291], "sure": [11, 58, 63, 64, 164, 167, 169, 174, 290], "befor": [11, 58, 63, 64, 143, 145, 273, 292, 297], "do": [11, 55, 58, 63, 64, 114, 122, 164, 171, 182, 225, 228, 230, 290, 291, 297], "anyth": [11, 58, 63], "els": [11, 58, 63], "getnam": [11, 58, 63], "string": [11, 58, 60, 61, 63, 64, 83, 125, 127, 130, 217, 260, 277], "identif": [11, 58, 63], "purpos": [11, 58, 63, 64, 72, 120, 122, 297], "onli": [11, 58, 63, 64, 85, 122, 138, 164, 236, 290, 291, 297], "deprec": [11, 58, 63, 64], "instead": [11, 58, 63, 64, 72], "isdaemon": [11, 58, 63], "whether": [11, 58, 63, 64, 90, 234, 268], "is_al": [11, 58, 63], "aliv": [11, 58, 63], "true": [11, 20, 58, 60, 63, 64, 65, 66, 67, 127, 130, 164, 167, 174, 234, 246, 275, 292], "just": [11, 58, 63, 64, 65], "start": [11, 58, 60, 63, 64, 122, 138, 164, 234, 243, 271, 275, 291, 292, 294, 297], "until": [11, 58, 63, 71, 122, 164, 169, 171, 174, 177, 180, 182, 234], "after": [11, 58, 63, 64, 117, 177, 186, 188, 234, 294, 297], "termin": [11, 58, 63, 177, 294, 297], "see": [11, 58, 60, 63, 64, 71, 72, 125, 127, 228, 278, 291, 296, 297], "also": [11, 58, 63, 64, 294, 297], "enumer": [11, 58, 63], "join": [11, 58, 63, 72], "timeout": [11, 58, 63, 128, 156, 165], "wait": [11, 58, 63, 71, 114, 116, 122, 127, 130, 156, 165, 234, 292], "block": [11, 58, 63, 64, 164, 169, 171, 174, 177, 180, 182, 288], "whose": [11, 58, 63, 64], "either": [11, 58, 63, 64, 290], "normal": [11, 28, 31, 44, 46, 58, 63, 64, 112, 114, 116, 120, 122, 232], "through": [11, 41, 58, 63, 64, 250], "an": [11, 22, 24, 25, 38, 48, 52, 58, 60, 61, 63, 64, 65, 66, 67, 70, 71, 72, 88, 112, 114, 116, 164, 167, 169, 171, 174, 177, 180, 182, 225, 228, 234, 267, 270, 273, 278, 290, 292, 294], "unhandl": [11, 58, 63], "except": [11, 58, 60, 63, 64, 65, 66, 67, 72, 88, 164, 167, 169, 171, 174, 177, 180, 182], "option": [11, 58, 61, 63, 64, 217, 291, 292], "occur": [11, 58, 63, 64, 177, 291], "present": [11, 58, 63, 268], "float": [11, 22, 23, 24, 37, 58, 60, 63, 64, 65, 66, 67, 78, 80, 83, 85, 112, 114, 116, 120, 122, 127, 130, 151, 156, 164, 167, 169, 174, 177, 180, 194, 225, 232, 243, 248, 270, 271], "point": [11, 58, 60, 63, 64, 83], "specifi": [11, 58, 63, 64, 127, 130, 156, 259, 260, 290, 292], "oper": [11, 58, 61, 63, 67, 70, 120, 122, 164, 167, 169, 174, 292, 294, 295, 297], "second": [11, 58, 63, 64, 114, 116, 120, 122, 127, 232, 240, 243, 290], "fraction": [11, 58, 63, 270, 271], "thereof": [11, 58, 63], "As": [11, 58, 61, 63, 64, 70, 292], "you": [11, 58, 61, 63, 64, 69, 70, 71, 72, 290, 291, 294, 297], "decid": [11, 58, 63, 290], "happen": [11, 58, 63, 292], "still": [11, 58, 63, 64, 290, 292, 294, 297], "time": [11, 58, 63, 64, 83, 88, 112, 114, 116, 120, 122, 127, 130, 156, 165, 232, 234, 236, 257, 291, 294], "out": [11, 58, 60, 63, 64, 114, 138, 194, 197, 240, 270, 271, 290, 294], "A": [11, 58, 63, 64, 71, 72, 164, 167, 169, 171, 174, 177, 180, 182, 196, 197, 222, 270, 291, 292, 294], "can": [11, 58, 61, 63, 64, 65, 69, 72, 78, 80, 83, 85, 156, 228, 234, 291, 292, 296, 297], "ed": [11, 58, 63], "mani": [11, 58, 63, 64, 85, 194, 292], "rais": [11, 58, 60, 63, 64, 65, 66, 67, 72, 89], "runtimeerror": [11, 58, 63, 64, 65], "attempt": [11, 58, 63, 64, 88], "made": [11, 58, 63, 64, 294], "would": [11, 58, 60, 63, 64, 290, 294], "caus": [11, 58, 63, 64, 138], "deadlock": [11, 58, 63], "It": [11, 58, 63, 64, 259, 290, 294, 296, 297], "error": [11, 58, 63, 64, 72, 89, 297], "ha": [11, 58, 63, 64, 69, 138, 156, 164, 169, 171, 174, 177, 180, 182, 270, 290, 292, 295], "been": [11, 58, 63], "so": [11, 58, 63, 64, 72, 122, 294, 296, 297], "repres": [11, 58, 63, 290], "": [11, 23, 58, 61, 63, 64, 112, 114, 116, 291, 292, 297], "activ": [11, 58, 63, 114, 116, 120, 122, 234, 291, 294, 296, 297], "mai": [11, 58, 63, 64, 292, 294, 297], "The": [11, 58, 63, 64, 71, 72, 88, 122, 138, 156, 164, 169, 171, 174, 177, 180, 182, 243, 270, 290, 294, 296, 297], "standard": [11, 31, 58, 63, 64, 296], "pass": [11, 46, 58, 63, 64, 69, 70, 120, 122, 291], "ani": [11, 58, 60, 63, 64, 78, 80, 83, 85, 292], "sequenti": [11, 24, 58, 63], "taken": [11, 24, 58, 63, 156], "respect": [11, 58, 63, 64, 290], "setdaemon": [11, 58, 63], "setnam": [11, 58, 63], "most": [11, 58, 63, 64, 290, 291, 294], "onc": [11, 58, 63, 64, 156, 292, 294, 297], "arrang": [11, 58, 63], "separ": [11, 58, 63, 64, 228, 253, 291, 295], "more": [11, 58, 63, 64, 85, 164, 167, 169, 171, 174, 177, 180, 182, 290, 297], "than": [11, 58, 63, 64, 78, 85, 114, 116, 294], "boolean": [11, 58, 63, 64, 268], "indic": [11, 58, 63, 64, 177, 217, 232, 270, 292], "otherwis": [11, 58, 63, 64, 120, 122], "Its": [11, 58, 63], "initi": [11, 58, 61, 63, 64, 69, 70, 78, 80, 83, 85, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 114, 116, 122, 143, 145, 156, 165, 177, 234], "inherit": [11, 58, 63, 64, 88], "creat": [11, 58, 60, 63, 64, 72, 122, 164, 167, 169, 171, 174, 177, 180, 182, 234, 237, 238, 240, 242, 259, 262, 271, 291, 294, 297], "main": [11, 58, 63, 72, 291, 292], "therefor": [11, 58, 63, 64], "fals": [11, 22, 41, 58, 60, 61, 63, 64, 65, 66, 67, 83, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 114, 116, 164, 169, 171, 174, 177, 180, 182, 186, 188, 208, 210, 211, 232, 234, 273], "entir": [11, 58, 63], "python": [11, 58, 61, 63, 64, 70, 78, 80, 83, 85, 225, 227, 228, 230, 277, 290, 296], "exit": [11, 58, 61, 63, 143, 145, 292], "left": [11, 58, 63, 64, 161, 243, 262, 270, 297], "ident": [11, 58, 63], "identifi": [11, 33, 34, 58, 63, 127, 294], "nonzero": [11, 58, 63, 64], "integ": [11, 58, 63, 64, 240, 243], "get_id": [11, 58, 63], "recycl": [11, 58, 63], "anoth": [11, 58, 60, 63, 64, 72, 290, 291, 297], "even": [11, 22, 58, 63, 64], "semant": [11, 58, 63], "multipl": [11, 22, 24, 33, 58, 63, 64, 65, 177, 228, 294], "given": [11, 23, 58, 63, 64, 114, 116, 125, 127, 130, 273, 297], "native_id": [11, 58, 63], "nativ": [11, 58, 63, 64], "integr": [11, 58, 63], "id": [11, 58, 63, 89, 90, 98, 99, 102], "non": [11, 58, 63, 64, 267], "neg": [11, 58, 63], "get_native_id": [11, 58, 63], "report": [11, 58, 63, 164, 169, 171, 174, 177, 182, 234, 291], "kernel": [11, 58, 63], "img_data": 17, "boundari": [17, 20, 270], "width": [17, 19, 64, 112, 114, 116, 248], "1": [17, 23, 44, 46, 63, 64, 90, 117, 120, 122, 164, 177, 194, 197, 198, 209, 230, 232, 237, 238, 239, 240, 242, 243, 248, 270, 290, 294, 297], "image_data": [18, 19, 27, 29, 31, 34, 35, 37, 52], "mag_ratio": 18, "direct": [20, 34, 64, 112, 114, 116, 248, 291, 294, 297], "imag": [22, 24, 25, 27, 28, 31, 34, 37, 38, 41, 43, 44, 46, 47, 48, 52, 64, 114, 116, 122, 151, 197, 234, 246, 247, 248, 271, 292, 294, 295], "_supportsarrai": [22, 24, 78, 80, 83, 85, 225, 248], "dtype": [22, 24, 63, 64, 67, 69, 78, 80, 83, 85, 225, 248], "_nestedsequ": [22, 24, 78, 80, 83, 85, 225, 248], "complex": [22, 24, 44, 64, 78, 80, 83, 85, 225, 248], "byte": [22, 24, 64, 78, 80, 83, 85, 127, 130, 156, 177, 225, 248], "offset_map": [22, 25], "comput": [22, 24, 25, 177, 290, 294, 297], "flatfield": 22, "map": [22, 24, 25, 49, 64, 228], "evenli": 22, "illumin": 22, "frame": [22, 23, 24, 85, 114, 116, 194, 294, 295], "scmo": [22, 23, 24], "npt": [22, 24], "arraylik": [22, 24], "zyx": [22, 24, 78], "defocus": 22, "signal": [22, 23, 122, 214, 234, 238, 292], "np": [22, 23, 63, 64, 127, 238, 243, 248, 271, 273], "xy": 22, "offset": [22, 24, 25, 64, 238, 239, 240, 242, 243, 248, 262], "absenc": 22, "oppos": 22, "fn": 23, "qe": 23, "82": 23, "ib": 23, "nr": 23, "4": [23, 64, 151, 236, 237, 238, 239, 240, 242, 295, 297], "m": [23, 38, 112, 114, 116, 151, 177, 290, 297], "http": [23, 38, 78, 80, 83, 85, 127, 156, 164, 225, 227, 228, 230, 294, 297], "www": [23, 127, 294], "hamamatsu": [23, 114, 295], "com": [23, 38, 78, 80, 83, 85, 127, 156, 164, 225, 227, 228, 230, 294, 297], "content": [23, 64, 255, 260], "dam": 23, "photon": 23, "site": 23, "document": [23, 64, 114, 116, 164, 291, 296, 297], "99_sales_librari": 23, "sy": [23, 64], "scas0134e_c13440": 23, "20cu_tec": 23, "pdf": [23, 127], "nois": 23, "sigma": [23, 34], "excess": 23, "factor": [23, 164], "unitless": 23, "quantum": 23, "effici": 23, "arrai": [23, 64, 67, 69, 78, 80, 83, 85, 237, 238, 239, 240, 241, 242, 243, 248, 262, 271, 273], "background": [23, 248], "readout": [23, 112, 114, 116, 120, 122, 232], "rm": 23, "em": 23, "gain": 23, "estim": [23, 38, 46], "electron": 23, "union": 24, "numpi": [24, 64, 69, 237, 238, 239, 240, 241, 242, 243], "_array_lik": 24, "_nested_sequ": 24, "varianc": [24, 25, 64], "dark": 24, "variance_map": 25, "snr": 25, "add": [27, 60, 266, 267, 290, 297], "border": 27, "median": 27, "requir": [27, 55, 64, 101, 164, 167, 169, 171, 174, 177, 180, 182, 234, 295, 297], "3d": [27, 32, 41], "inside_imag": 28, "normalized_cel": 28, "surface_cel": 28, "combin": [28, 254], "insid": [28, 64, 297], "cell": [28, 30], "surfac": [28, 33, 34], "image_threshold": 29, "pixel_s": [29, 38, 246, 247, 248], "206": 29, "padded_image_data": 30, "insidegamma": 30, "insideblur": 30, "insidedilateradiu": 30, "insideeroderadiu": 30, "tri": [30, 88], "fill": [30, 64], "interior": 30, "gaussian": [30, 248], "blur": 30, "follow": [30, 177, 291, 292, 297], "otsu": [30, 31], "threshold": [30, 31], "dilat": 30, "hole": 30, "eros": 30, "subtract": 31, "deviat": [31, 64, 291], "radiu": 32, "structur": [32, 64, 230, 234], "element": [32, 64, 278], "shape": [32, 64, 67, 69, 78, 80, 83, 85, 225, 227, 228, 230], "sphere": 32, "scale": 33, "each": [34, 41, 64, 69, 78, 80, 83, 85, 88, 122, 164, 234, 250, 270, 271, 273, 290, 291, 292, 294], "ndarrai": [37, 64, 67, 127, 248], "calcul": [37, 64, 112, 114, 116, 120, 122, 127, 130, 151, 194, 234, 236, 270, 294], "flat": [37, 64], "dark_field": 37, "correct": [37, 64, 147, 149], "bit": [37, 64, 156, 228], "data": [37, 52, 64, 78, 80, 83, 85, 96, 114, 116, 120, 122, 156, 177, 217, 234, 259, 260, 273, 292, 295, 296], "16": [37, 64, 262], "param": 37, "flat_field": 37, "input_arrai": [38, 39, 40, 41], "number_high_pass_filt": 38, "10": [38, 46, 64, 88, 164, 177, 236, 238, 239, 240, 241, 242, 243, 290, 297], "fourier_sampl": [38, 46], "50": [38, 46, 177, 238, 242], "apodization_pixel": 38, "20": [38, 64], "resolut": [38, 78, 147, 149, 177, 234, 295], "decorrel": [38, 45, 46], "github": [38, 78, 80, 83, 85, 225, 227, 228, 230, 294, 296, 297], "ades91": 38, "imdecorr": 38, "blob": 38, "master": [38, 122], "main_imagedecorr": 38, "psf_support_diameter_xi": [39, 40, 41], "use_gpu": [41, 234, 268], "2d": [41, 43, 46, 64, 248], "iter": [41, 64], "plane": [41, 292], "otf_support_x": 41, "support": [41, 64], "otf": 41, "dimens": [41, 64, 234, 270, 271], "otf_support_i": 41, "entropi": 41, "input_imag": [43, 46, 47, 48], "number_pixel": 43, "apod": 43, "edg": 43, "output": [43, 44, 45, 46, 47, 48, 49, 60, 64, 99, 101, 122, 240, 294], "output_imag": 43, "image_1": 44, "image_2": 44, "c1": 44, "c2": 44, "correl": 44, "coeffici": 44, "express": 44, "fourier": [44, 46], "space": [44, 46, 64, 197, 270, 271], "transform": [44, 48, 292], "2": [44, 63, 64, 138, 177, 190, 225, 243, 290, 294, 295, 297], "correlation_coeffici": 44, "cross": 44, "decorrelation_funct": 45, "maxima": [45, 46], "max_index": 45, "max_amplitud": 45, "amplitud": [45, 46, 237, 238, 239, 240, 242, 243], "number_highpass_filt": 46, "cut": 46, "off": [46, 292], "frequenc": [46, 238, 239, 242], "analyz": 46, "sampl": [46, 240, 248, 292, 295], "linspac": 46, "high": [46, 177, 196, 234, 270, 295], "kcmax": 46, "a0": 46, "d0": 46, "radial": [47, 248], "averag": [47, 60, 64, 65, 66, 67], "squar": 47, "im": 47, "r": [47, 273], "imp": 48, "im2pol": 48, "imc": 48, "carthesian": 48, "polar": 48, "coordin": 48, "input_valu": 49, "minimum_valu": 49, "maximum_valu": 49, "mapped_minimum_valu": 49, "mapped_maximum_valu": 49, "perform": [49, 60, 65, 66, 67, 127, 292, 294, 296], "linear": [49, 294], "rang": [49, 194], "minimum": [49, 64, 114, 116, 290, 295], "maximum": [49, 64, 114, 116, 143, 145, 290, 296], "rescaled_valu": 49, "rescal": 49, "shear_angl": 52, "z_pixel_s": 52, "xy_pixel_s": 52, "design": [52, 125, 127, 130, 294], "deskew": 52, "uint16": [52, 64], "save": [52, 63, 217, 259, 260], "tiff": [52, 228, 230, 264], "spectral": 55, "unmix": 55, "need": [55, 64, 72, 114, 116, 127, 194, 232, 234, 270, 290, 292, 294, 297], "move": [55, 64, 85, 127, 130, 164, 167, 169, 171, 174, 177, 180, 182, 186, 188, 234, 290, 292], "repo": [55, 297], "here": [55, 114, 243, 290, 291], "signific": 55, "organ": [55, 120, 122], "overhaul": 55, "first_resourc": [58, 71], "resultthread": [58, 59, 66], "access": [58, 63, 64, 65, 69, 78, 80, 83, 85, 297], "resourc": [58, 65, 71], "order": [58, 64, 65, 177, 290], "thei": [58, 61, 64, 70, 122, 290, 297], "were": [58, 64, 297], "launch": [58, 63, 72], "docstr": [58, 71, 72, 291], "top": [58, 71, 72, 112, 114, 116, 290], "exampl": [58, 63, 64, 71, 72, 85, 164, 167, 169, 171, 174, 177, 180, 182, 238, 240, 290, 291, 292, 297], "get_result": [58, 63], "accept": [58, 63, 64, 71, 164, 267, 292], "timeouterror": [58, 60, 63, 65, 66, 67], "control": [58, 63, 64, 90, 125, 127, 156, 165, 177, 188, 217, 234, 249, 250, 290, 291, 292, 294, 296], "alia": [59, 62, 64], "homemad": 60, "test": [60, 64, 65, 66, 67, 296], "mostli": 60, "written": [60, 64, 291], "curios": 60, "what": [60, 64, 248, 270, 290, 292], "featur": [60, 63, 234, 291, 293, 296], "want": [60, 64, 69, 127, 130, 290, 297], "could": [60, 64, 291], "done": [60, 64, 234, 290, 294, 297], "easili": 60, "without": [60, 61, 63, 64, 65, 69, 70, 290, 291], "import": [60, 64, 294, 296], "Not": [60, 117, 164, 177, 228, 236, 262], "real": [60, 64, 234], "packag": [60, 297], "wasn": 60, "t": [60, 61, 63, 64, 70, 114, 122, 171, 182, 230], "To": [60, 64, 138, 156, 164, 228, 290, 291, 294], "test_": [60, 65, 66, 67], "expect": [60, 63, 65, 66, 71, 78, 80, 83, 85, 164, 167, 169, 171, 174, 177, 180, 182, 290, 291], "gener": [60, 64, 83, 116, 217, 230, 248, 292, 296], "specif": [60, 64, 65, 66, 67, 290], "print": [60, 63, 64, 114, 116, 156], "stdout": 60, "test_prefix": [60, 65, 66, 67], "fail": [60, 64, 65, 66, 67, 290, 292], "fail_fast": [60, 65, 66, 67], "begin": [60, 64, 65, 66, 67], "time_it": [60, 65, 66, 67], "n_loop": [60, 65, 66, 67], "func": [60, 65, 66, 67, 88, 257], "timeout_u": [60, 65, 66, 67], "allow": [60, 64, 65, 66, 67, 234, 290, 292, 296, 297], "durat": [60, 65, 66, 67, 112, 114, 116, 122, 127, 130, 156, 236, 257], "exce": [60, 65, 66, 67], "bar": [60, 65, 66, 67], "format": [60, 64, 65, 66, 67, 120, 122, 177, 228, 290, 291], "progress": [60, 65, 66, 67, 177], "initarg": [61, 69, 70], "custom_loop": [61, 69, 70], "close_method_nam": [61, 70], "closearg": [61, 70], "closekwarg": [61, 70], "with_lock": 61, "initkwarg": [61, 69, 70], "child": [61, 63, 70, 215], "act": [61, 64, 70, 296], "like": [61, 64, 70, 71, 72, 270, 290, 294, 297], "isn": [61, 70], "much": [61, 70], "possibl": [61, 64, 70, 243], "try": [61, 63, 70, 297], "instanc": [61, 64, 70, 71, 273, 290], "behav": [61, 64, 67, 70, 290, 291], "re": [61, 63, 70], "live": [61, 64, 70, 234, 291], "parent": [61, 63, 69, 70, 112, 120, 125, 133, 138, 140, 154, 159, 167, 186], "cours": [61, 70], "have": [61, 64, 70, 122, 228, 290, 291, 292, 294, 297], "spare": [61, 70], "core": [61, 64, 70], "your": [61, 64, 69, 70, 72, 290, 291, 294, 296], "machin": [61, 64, 70, 291, 294, 297], "turn": [61, 70, 215, 290, 292, 294], "cpu": [61, 64, 70], "bound": [61, 70, 164, 167, 169, 171, 174, 177, 180, 182, 290], "which": [61, 64, 71, 78, 80, 83, 85, 138, 147, 149, 164, 167, 169, 171, 174, 177, 180, 182, 234, 290, 292, 294, 295], "parallel": [61, 294], "io": [61, 70, 156], "too": [61, 70, 138, 295], "mental": [61, 70], "overhead": [61, 65, 70, 234], "coder": [61, 70, 291], "our": [61, 63, 64, 69, 114, 116, 225, 228, 230, 290, 291, 296, 297], "automat": 61, "close_method": 61, "custodythread": [62, 65, 66], "simpl": [63, 64], "wish": 63, "had": 63, "chang": [63, 64, 114, 116, 127, 130, 138, 164, 186, 188, 234, 250, 271, 294, 297], "self": [63, 64, 114, 120, 122, 127, 177, 217, 292], "trivial": 63, "u": [63, 64, 250, 294], "line": [63, 64, 71, 112, 114, 116, 275, 290, 291], "code": [63, 64, 78, 80, 83, 85, 117, 225, 227, 228, 230, 290, 296], "def": 63, "doe": [63, 64, 278, 290, 294, 297], "someth": [63, 64, 290, 291], "sum": [63, 64], "ones": 63, "uint8": [63, 64, 69], "problem": [63, 64, 297], "th": [63, 64, 138], "redefin": 63, "solut": 63, "res_th": 63, "assert": 63, "handl": [63, 138, 290], "idea": 63, "attributeerror": [63, 64], "wa": [63, 64, 164, 169, 171, 174, 177, 180, 182, 234, 262], "assertionerror": 63, "dure": [63, 78, 80, 83, 85, 194, 243], "evalu": [63, 64, 147, 149, 257, 268, 291], "rerais": 63, "traceback": [63, 64], "stderr": 63, "don": [63, 114, 171, 182], "affect": [63, 64], "yet": 63, "note": [63, 64, 164], "modifi": [63, 291, 292], "excepthook": 63, "copi": [63, 64, 250, 294], "past": 63, "definit": [63, 71, 72], "work": [63, 64, 122, 291, 297], "shared_memory_nam": 64, "stride": 64, "memori": [64, 69, 70, 234], "objectinsubprocess": [64, 65], "serial": [64, 67, 69, 114, 127, 128, 130, 177, 178, 255], "pretti": 64, "fast": 64, "larg": 64, "regularli": 64, "deal": [64, 138, 228], "sens": 64, "provid": [64, 117, 164, 267, 294], "wai": [64, 234, 270, 290, 291], "via": [64, 101, 122, 241], "avoid": [64, 138, 156, 294], "slow": [64, 69], "mayb": [64, 71, 72], "write": [64, 78, 80, 83, 85, 122, 156, 217, 225, 228, 230, 234, 291, 296], "look": [64, 117, 270, 290], "data_buf": 64, "zero": [64, 248], "400": 64, "display_buf": 64, "preprocessor": 64, "displai": [64, 89, 120, 122], "record": 64, "num_imag": 64, "show": [64, 294, 297], "payoff": 64, "its": [64, 164, 169, 171, 174, 177, 180, 182, 292], "own": 64, "AND": 64, "realli": 64, "memmap": 64, "templat": 64, "axi": [64, 138, 164, 167, 169, 171, 174, 177, 180, 182, 270], "keepdim": 64, "refer": [64, 243, 293, 296], "full": [64, 290, 294], "equival": [64, 294, 297], "argmax": 64, "along": [64, 71, 72, 164, 169, 171, 174, 177, 180, 182, 234, 270, 271], "argmin": 64, "detail": [64, 127, 164], "argpartit": 64, "kth": 64, "kind": 64, "introselect": 64, "partit": 64, "version": [64, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 295, 297], "8": [64, 127, 297], "argsort": 64, "sort": 64, "astyp": 64, "k": 64, "cast": 64, "unsaf": 64, "subok": 64, "typecod": 64, "c": [64, 230, 290, 297], "layout": 64, "fortran": 64, "contigu": 64, "close": [64, 78, 80, 83, 85, 114, 116, 122, 127, 130, 143, 145, 156, 161, 177, 217, 234, 270, 292], "appear": 64, "equiv": 64, "safe": 64, "same_kind": 64, "backward": 64, "compat": [64, 268, 297], "preserv": 64, "within": [64, 72, 164, 167, 169, 174, 177, 180, 294, 297], "float64": 64, "float32": 64, "convers": 64, "forc": 64, "newli": 64, "alloc": [64, 69], "satisfi": 64, "arr_t": 64, "unless": [64, 291], "other": [64, 69, 122, 151, 156, 290, 291], "condit": 64, "descript": 64, "17": 64, "one": [64, 71, 72, 83, 85, 164, 167, 169, 171, 174, 177, 180, 182, 208, 210, 211, 234, 292, 294], "field": [64, 290], "9": [64, 297], "numer": [64, 248], "mode": [64, 78, 80, 83, 85, 112, 114, 116, 120, 122, 138, 143, 145, 147, 149, 156, 232, 234, 294, 295], "length": [64, 270, 271], "long": 64, "enough": 64, "store": [64, 78, 80, 83, 85, 225, 227, 228, 230, 249, 291], "convert": [64, 112, 114, 116, 164, 174, 177, 225, 227, 228, 230, 262, 273], "complexwarn": 64, "5": [64, 138, 240, 243, 290, 294, 295], "byteswap": 64, "inplac": 64, "swap": 64, "toggl": 64, "low": [64, 177, 234, 270, 295], "endian": [64, 177], "big": 64, "represent": [64, 78, 80, 83, 85, 225, 227, 228, 230, 278], "place": [64, 290], "imaginari": 64, "part": [64, 291], "individu": 64, "view": [64, 69, 75, 225, 230, 234, 291, 296], "256": 64, "8755": 64, "int16": 64, "hex": 64, "0x1": 64, "0x100": 64, "0x2233": 64, "13090": 64, "0x3322": 64, "b": 64, "ceg": 64, "fac": 64, "s3": 64, "newbyteord": 64, "produc": [64, 138, 277], "differ": [64, 290, 291, 294, 296, 297], "3": [64, 85, 138, 225, 230, 238, 242, 297], "choos": 64, "choic": 64, "index": [64, 98, 99, 122, 147, 149, 217, 230, 248], "clip": 64, "One": [64, 83], "compress": 64, "select": [64, 85, 147, 149, 294], "slice": [64, 67, 264], "conj": 64, "conjug": 64, "wise": 64, "match": [64, 248], "veri": 64, "similar": [64, 290, 291], "behavior": [64, 66, 271, 291, 292, 294], "copyto": 64, "prefer": 64, "6": [64, 138, 230], "flag": [64, 114, 116, 125, 127, 130, 234, 271, 297], "c_contigu": 64, "cumprod": 64, "cumul": 64, "product": [64, 164, 294, 296], "cumsum": 64, "diagon": 64, "axis1": 64, "axis2": 64, "In": [64, 228, 290], "previou": 64, "restrict": 64, "remov": [64, 290], "dump": 64, "pickl": 64, "back": [64, 156, 177, 228, 243], "pathlib": 64, "now": [64, 225, 296, 297], "scalar": 64, "assign": 64, "flatten": 64, "collaps": 64, "row": [64, 273], "major": [64, 250], "style": [64, 294, 296], "column": 64, "ravel": [64, 246], "d": [64, 277, 278], "over": [64, 297], "getfield": 64, "certain": 64, "determin": 64, "fit": 64, "complex128": 64, "take": [64, 85, 271], "12": 64, "larger": 64, "itself": 64, "skip": 64, "diag": 64, "j": [64, 151], "item": [64, 288, 290], "variabl": [64, 151, 291, 297], "case": 64, "int_typ": 64, "interpret": [64, 177], "singl": [64, 85, 151, 156, 164, 169, 171, 174, 180, 182, 234, 240, 264, 270], "nd": 64, "suitabl": 64, "longdoubl": 64, "clongdoubl": 64, "becaus": 64, "lose": 64, "inform": [64, 114, 116, 127, 177, 259, 260, 270, 290, 291, 297], "void": 64, "buffer": [64, 114, 116, 156, 177, 234], "defin": [64, 88, 228], "speed": [64, 127, 177, 291, 295], "up": [64, 78, 80, 83, 85, 117, 122, 138, 290, 294, 296], "arithmet": 64, "optim": 64, "math": 64, "random": [64, 67], "seed": 64, "123": 64, "randint": 64, "7": [64, 243, 295, 297], "itemset": 64, "There": [64, 228, 294], "least": 64, "last": [64, 177, 270, 297], "Then": 64, "faster": 64, "two": [64, 234, 290], "first": [64, 69, 228, 270, 290, 294, 297], "locat": [64, 127, 186, 188, 290, 294, 297], "compar": 64, "syntax": 64, "some": [64, 69, 78, 80, 83, 85, 225, 227, 228, 230, 291, 292, 294, 297], "increas": 64, "particular": 64, "howev": [64, 291, 294], "discourag": 64, "among": 64, "complic": 64, "loop": 64, "amax": 64, "amin": 64, "new_ord": 64, "arr": 64, "newbytord": 64, "below": [64, 290, 291, 292, 295, 297], "opposit": 64, "littl": [64, 177], "byteord": 64, "ignor": [64, 225], "new_arr": 64, "reflect": [64, 290], "rearrang": 64, "smaller": 64, "equal": 64, "greater": 64, "behind": 64, "undefin": 64, "sequenc": [64, 177, 264, 292], "final": [64, 290], "them": [64, 291, 297], "sinc": [64, 271], "22": 64, "algorithm": 64, "etc": [64, 78, 80, 83, 85, 164, 167, 169, 171, 174, 177, 180, 182, 225, 227, 228, 230, 267, 270, 294, 296], "unspecifi": 64, "come": [64, 138], "break": [64, 291], "ti": 64, "paritit": 64, "indirect": 64, "prod": 64, "ptp": 64, "peak": [64, 243, 248], "put": [64, 65], "repeat": [64, 295], "reshap": 64, "unlik": 64, "free": 64, "For": [64, 85, 122, 164, 167, 169, 171, 174, 177, 180, 182, 290, 294], "11": [64, 297], "resiz": 64, "new_shap": 64, "refcheck": 64, "count": [64, 290], "check": [64, 88, 125, 127, 130, 156, 171, 182, 186, 188, 234], "valueerror": 64, "exist": [64, 125, 127, 130, 186, 188, 291, 292], "pypi": 64, "reliabl": 64, "systemerror": 64, "behaviour": 64, "bug": [64, 291], "realloc": 64, "area": 64, "necessari": [64, 120, 122, 127, 130, 156, 257, 259, 290, 291, 294], "consecut": 64, "shrink": 64, "enlarg": 64, "abov": [64, 290], "miss": 64, "entri": [64, 250, 290, 292], "doesn": 64, "referenc": 64, "prevent": 64, "recent": 64, "cannot": 64, "round": 64, "around": [64, 71, 72], "searchsort": 64, "v": [64, 151], "side": [64, 270], "sorter": 64, "find": [64, 290, 292, 294, 297], "maintain": 64, "setfield": 64, "val": [64, 88], "ey": 64, "int32": 64, "0e": 64, "000": 64, "5e": 64, "323": 64, "setflag": 64, "uic": 64, "writeabl": 64, "writebackifcopi": 64, "updateifcopi": 64, "These": [64, 294, 297], "how": [64, 67, 194, 290, 297], "actual": [64, 78, 80, 83, 85, 114, 236, 270], "never": 64, "ultim": 64, "owner": 64, "expos": 64, "interfac": 64, "unpickl": 64, "describ": [64, 292], "properli": [64, 290, 294], "about": [64, 260, 270], "four": [64, 177], "user": [64, 156, 259, 290, 294, 296, 297], "w": [64, 78, 80, 83, 85], "appropri": [64, 291, 297], "compil": 64, "pyarray_resolvewritebackifcopi": 64, "upper": [64, 262], "letter": 64, "well": [64, 296], "f_contigu": 64, "owndata": 64, "stdin": 64, "quicksort": 64, "mergesort": 64, "heapsort": 64, "stabl": 64, "both": [64, 101, 161, 164, 228, 292, 297], "timsort": 64, "under": [64, 290, 292, 294, 296], "cover": [64, 270], "vari": 64, "datatyp": 64, "retain": 64, "15": [64, 248, 297], "lexsort": 64, "kei": [64, 277], "partial": 64, "s1": 64, "i8": 64, "squeez": 64, "ax": [64, 138, 164, 167, 169, 171, 174, 177, 180, 182, 290], "std": 64, "ddof": 64, "swapax": 64, "interchang": 64, "tobyt": 64, "raw": 64, "short": 64, "exhibit": 64, "u2": 64, "x00": 64, "x01": 64, "x02": 64, "x03": 64, "tofil": 64, "fid": 64, "sep": 64, "text": [64, 262], "binari": [64, 262], "independ": 64, "recov": 64, "fromfil": 64, "open": [64, 78, 80, 83, 85, 161, 234, 294, 297], "filenam": [64, 83, 217, 234, 260], "closest": 64, "conveni": 64, "quick": [64, 164], "storag": 64, "precis": [64, 294], "lost": 64, "good": [64, 291], "intend": 64, "archiv": [64, 264], "transport": 64, "overcom": 64, "expens": 64, "directli": [64, 71, 72, 114], "bypass": 64, "gzipfil": 64, "fileno": 64, "bytesio": 64, "tolist": 64, "ndim": 64, "level": 64, "deep": 64, "nearest": 64, "builtin": 64, "depth": 64, "possibli": 64, "recreat": 64, "although": 64, "sometim": 64, "1d": 64, "almost": [64, 71], "uint32": 64, "a_list": 64, "a_tolist": 64, "addition": 64, "appli": 64, "0d": [64, 177], "typeerror": 64, "tostr": 64, "exactli": 64, "despit": 64, "19": 64, "trace": 64, "transpos": 64, "effect": [64, 248], "vector": 64, "simpli": 64, "addit": [64, 234], "atleast2d": 64, "achiev": 64, "newaxi": 64, "matrix": [64, 127, 225], "permut": 64, "revers": 64, "becom": 64, "altern": [64, 225, 227, 228, 230, 291], "give": 64, "var": 64, "omit": 64, "former": 64, "float_": 64, "descriptor": 64, "again": 64, "omiss": 64, "some_dtyp": 64, "reinterpret": 64, "ndarray_subclass": 64, "regular": [64, 291], "predict": 64, "superfici": 64, "shown": [64, 292, 297], "versu": 64, "int8": 64, "513": 64, "xv": 64, "underli": 64, "i1": 64, "recarrai": 64, "i2": 64, "ctype": 64, "simplifi": 64, "interact": [64, 269], "easier": 64, "librari": [64, 291, 296], "themselv": [64, 292], "possess": 64, "ctypeslib": 64, "public": 64, "guid": [64, 164, 291, 296], "undocu": 64, "privat": 64, "_ctype": 64, "pointer": [64, 78, 80, 83, 85, 292], "arbitrari": [64, 78, 80, 83, 85], "troubl": 64, "includ": [64, 164, 167, 169, 171, 174, 177, 180, 182, 225, 228, 230, 290, 292, 294, 297], "crash": 64, "bewar": 64, "_array_interface_": 64, "data_a": 64, "kept": 64, "c_void_p": 64, "dealloc": 64, "spelt": 64, "basetyp": 64, "correspond": [64, 164, 167, 169, 171, 174, 177, 180, 182, 294], "p": 64, "platform": 64, "c_intp": 64, "c_int": 64, "c_long": 64, "c_longlong": 64, "jump": 64, "next": [64, 156, 292, 294], "obj": 64, "_as_parameter_": 64, "perhap": 64, "c_doubl": 64, "keep": [64, 291], "shape_a": 64, "c_short": 64, "strides_a": 64, "as_paramet": 64, "31962608": 64, "c_uint32": 64, "__main__": 64, "lp_c_uint": 64, "0x7ff2fc1fc200": 64, "c_uint": 64, "c_uint64": 64, "c_ulong": 64, "4294967296": 64, "_intern": 64, "c_long_array_2": 64, "0x7ff2fc1fce60": 64, "0x7ff2fc1ff320": 64, "segment": 64, "o": [64, 177, 297], "borrow": [64, 78, 80, 83, 85, 225, 227, 228, 230], "lock": 64, "creation": 64, "subsequ": 64, "while": [64, 65, 156], "remain": [64, 164], "alreadi": [64, 291, 297], "circumst": 64, "alter": [64, 164], "previous": 64, "onto": [64, 294], "fnc": 64, "carrai": 64, "ca": 64, "farrai": 64, "fa": 64, "lowercas": 64, "arbitrarili": 64, "truli": 64, "simultan": [64, 83, 164], "clear": [64, 234], "dimension": 64, "higher": 64, "dim": [64, 264], "hold": [64, 260, 269], "items": 64, "flatit": 64, "similarli": [64, 228], "built": 64, "arang": 64, "sqrt": 64, "0j": 64, "1j": 64, "70710678": 64, "nbyte": 64, "total": [64, 270], "consum": 64, "480": 64, "usual": 64, "infer": 64, "unchang": 64, "incompat": 64, "modif": [64, 291], "desir": [64, 114, 116, 234, 267], "obtain": 64, "suggest": 64, "int_": 64, "relev": 64, "further": 64, "overflow": [64, 156], "fix": [64, 291], "travers": 64, "explan": 64, "found": [64, 89, 138, 291, 297], "rst": 64, "imagin": 64, "40": 64, "known": 64, "tell": 64, "lib": 64, "stride_trick": 64, "as_strid": 64, "13": [64, 177], "14": [64, 177], "18": 64, "21": 64, "23": 64, "48": 64, "224": 64, "1344": 64, "813": 64, "mytestclass": [65, 66, 67], "testclass": 65, "toi": 65, "subprocess": 65, "test_incorrect_thread_manag": 65, "custodi": [65, 71, 72], "test_lock_with_waitlist": 65, "stai": [65, 243], "objectsinsubprocess": 65, "mock": 65, "_waitinglist": [65, 71], "test_object_in_subprocess_overhead": 65, "test_sending_shared_arrai": 65, "send": [65, 156, 177], "sharedndarrai": [65, 67, 234], "test_ndarraylike_behavior": 67, "broke": 67, "suppos": 67, "test_seri": 67, "deseri": 67, "test_serializing_and_deseri": 67, "shared_memory_s": 69, "spawn": 69, "proxi": [69, 70, 255, 297], "proxyobject": [69, 71, 72], "shared_numpy_arrai": 69, "which_mp_arrai": 69, "shared_mp_arrai": 70, "proxymanag": [70, 71, 72], "thin": [71, 72], "wrapper": [71, 72], "few": [71, 72, 292], "usag": [71, 72, 264], "_custodi": 71, "switch_from": 71, "_wait_in_lin": 71, "immedi": 71, "acquir": [72, 217, 234, 292, 294], "releas": 72, "launch_custody_thread": 72, "feel": 72, "detect": [72, 197], "occour": 72, "file_nam": [78, 80, 83, 85, 225, 228, 230], "datasourc": [78, 83, 85], "sourc": [78, 80, 83, 85, 217, 294, 295], "metdata": [78, 80, 83, 85], "metadata": [78, 80, 83, 85, 225, 230], "concept": [78, 80, 83, 85, 225, 227, 228, 230], "microscopi": [78, 80, 83, 85, 151, 225, 227, 228, 230], "clean": [78, 80, 83, 85, 296], "leftov": [78, 80, 83, 85], "kw": [78, 80, 83, 85, 225, 228, 230], "xyz": [78, 164], "bdv": 78, "spec": [78, 225, 230], "xyczt": [78, 80, 83, 85, 225, 227, 228, 230], "rather": [78, 294], "subdivis": 78, "voxel_s": [78, 80, 83, 85, 225, 227, 228, 230], "voxel": [78, 80, 83, 85, 225, 227, 228, 230], "file_typ": [81, 225, 228, 230], "is_bigtiff": 83, "generate_image_nam": [83, 217], "current_channel": [83, 217], "current_time_point": 83, "ch00_000000": [83, 217], "tif": [83, 217, 264], "timepoint": [83, 290], "stack": [83, 194, 234, 292, 294], "At": 83, "copy_to_zarr": 85, "frame_id": [85, 217], "zarr": 85, "Will": [85, 228], "fom": 85, "sharednd": 85, "three": [85, 177], "assumpt": 85, "acquisit": [85, 96, 112, 114, 116, 120, 122, 234, 292, 295, 296], "dummi": 87, "devic": [87, 88, 89, 90, 95, 97, 98, 99, 100, 101, 102, 103, 262, 290, 294, 295, 297], "n_tri": 88, "retri": 88, "connect": [88, 95, 97, 98, 99, 100, 101, 102, 103, 112, 114, 116, 122, 128, 156, 159, 161, 164, 165, 167, 169, 174, 175, 178, 186, 234, 290, 294], "startup": [88, 290], "redial": 88, "baseexcept": 88, "messag": [89, 156], "incorrect": 89, "microscope_nam": [89, 95, 97, 98, 99, 100, 101, 102, 103, 112, 114, 116, 120, 122, 125, 127, 130, 133, 143, 145, 154, 159, 161, 164, 167, 169, 171, 174, 177, 180, 182, 186, 188], "camera_id": 90, "is_synthet": [90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 232], "dictproxi": [90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 112, 114, 116, 120, 122, 159, 161, 164, 167, 169, 174, 186], "synthet": [90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 116, 117, 144, 161, 234, 290], "wheel": [92, 97, 125, 127, 128, 130, 177, 178, 295], "dedic": [92, 93, 94, 96, 97, 99, 101, 103], "multiproces": [92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 112, 114, 116, 120, 122, 159, 161, 186], "zoom": [94, 103, 290], "device_connect": [95, 97, 98, 99, 100, 101, 102, 103, 112, 114, 116, 125, 127, 130, 133, 143, 145, 154, 159, 161, 164, 167, 169, 171, 174, 177, 180, 182, 186, 188], "daq": [96, 99, 101, 147, 149, 232, 234, 290], "filterwheel": 97, "galvo": [98, 120, 122, 237, 238], "scan": [98, 294, 295], "trigger": [99, 101, 122, 147, 149, 161, 236, 294], "switch": [99, 127, 234, 243, 262, 290, 294], "analog": [99, 122, 240, 242, 294, 295], "digit": [99, 101, 294], "focus": [100, 243, 295], "shutter": [101, 112, 114, 116, 234], "thorlabsshutt": 101, "syntheticshutt": 101, "ni": [101, 290, 294], "card": [101, 234, 296], "thu": 101, "enabl": [101, 127, 130, 156, 291, 295], "calculate_light_sheet_exposure_tim": [112, 114, 116], "full_chip_exposure_tim": [112, 114, 116], "shutter_width": [112, 114, 116], "exposur": [112, 114, 116, 122, 236], "light": [112, 114, 116], "sheet": [112, 114, 116], "roll": [112, 114, 116], "exposure_tim": [112, 114, 116, 122, 243, 290], "camera_line_interv": [112, 114, 116], "hamamatsuorca": [112, 116, 290], "interv": [112, 114, 116, 294], "set_readout_direct": [112, 114, 116], "bottom": [112, 114, 116], "bytrigg": [112, 114, 116], "diverg": [112, 114, 116], "camerabas": [114, 116], "calculate_readout_tim": [114, 116], "rate": [114, 116, 127, 128, 130, 156, 165, 177, 178], "assum": [114, 225, 228, 230, 264, 297], "c13440": 114, "link": 114, "commun": [114, 127, 128, 130, 156, 165, 177, 178, 290], "pull": [114, 291, 294], "readout_tim": [114, 116, 120, 122, 232], "max_frame_r": [114, 116], "framer": [114, 116], "todo": [114, 171, 182, 225, 228, 234, 271, 278], "think": 114, "camera_control": 114, "get_property_valu": [114, 117], "close_camera": [114, 116], "close_image_seri": [114, 116], "seri": [114, 116], "stop": [114, 116, 122, 156, 164, 167, 169, 171, 174, 177, 180, 182, 234], "is_acquir": [114, 116], "get_minimum_waiting_tim": [114, 116], "cyclic_trigger_period": [114, 116], "minimum_trigger_blank": [114, 116], "minimum_trigger_interv": [114, 116], "trigger_blank": [114, 116], "bigger": [114, 116], "trigger_interv": [114, 116], "get_new_fram": [114, 116], "initialize_image_seri": [114, 116], "data_buff": [114, 116, 217, 234], "number_of_fram": [114, 116], "100": [114, 116, 290, 295], "report_set": [114, 116], "set_roi": [114, 116], "roi_height": [114, 116], "2048": [114, 116], "roi_width": [114, 116], "region": [114, 116, 270], "height": [114, 116], "set_bin": [114, 116], "binning_str": [114, 116], "bin": [114, 116], "1x1": 114, "2x2": [114, 116], "4x4": [114, 116], "8x8": [114, 116], "16x16": 114, "1x2": 114, "2x4": 114, "set_exposure_tim": [114, 116], "unit": [114, 116, 164, 240, 243, 295, 296], "millisecond": [114, 116, 165, 291], "set_line_interv": [114, 116], "line_interval_tim": [114, 116], "set_sensor_mod": [114, 116], "sensor": [114, 116, 234], "serial_numb": [114, 175, 290], "generate_new_fram": 116, "idprop": 117, "property_dict": 117, "property_valu": 117, "hard": 117, "calculate_all_waveform": [120, 122, 232], "pre": [120, 122, 291, 292], "waveform": [120, 122, 234, 294], "waveform_dict": [120, 122], "etl": [120, 122, 243, 267], "plu": [120, 122], "daqbas": 122, "add_camera": 122, "close_task": 122, "task": [122, 177, 294], "counter": [122, 294], "create_camera_task": 122, "create_galvo_etl_task": 122, "create_master_trigger_task": 122, "prepare_acquisit": [122, 234], "channel_kei": 122, "prepar": [122, 234], "run_acquisit": [122, 234], "start_task": 122, "won": 122, "run_task": 122, "stop_acquisit": 122, "stop_task": 122, "write_waveforms_to_task": 122, "filter_dictionari": [125, 127, 130, 177], "instal": [125, 127, 130, 177, 291, 294, 296, 298], "wheel_posit": [125, 127, 130], "check_if_filter_in_filter_dictionari": [125, 127, 130], "filter_nam": [125, 127, 130], "filter_exist": [125, 127, 130], "filterwheelbas": [127, 130], "sutter": [127, 177], "lambda": 127, "manual": 127, "lb10": 127, "3_opman": 127, "comport": [127, 128, 130, 156, 177, 178], "com1": [127, 128, 130, 165, 177, 178], "baudrat": [127, 128, 130, 177, 178, 290], "baud": [127, 128, 130, 156, 165, 177, 178], "9600": [127, 128, 130, 165, 177, 178, 290], "number_of_filter_wheel": [127, 130], "wait_until_done_delai": [127, 130], "wait_until_don": [127, 130, 164, 169, 171, 174, 177, 180, 182, 186, 188, 234], "period": [127, 130, 243], "delay_matrix": 127, "movement": [127, 138, 164, 167, 169, 171, 174, 177, 180, 182, 290], "fastest": 127, "slowest": 127, "filter_change_delai": [127, 130], "occupi": 127, "num_byt": [127, 130, 156, 177], "port": [127, 128, 130, 143, 145, 156, 165, 177, 178, 290, 294], "retriev": [127, 259, 267], "page": [127, 151], "38": 127, "set_filt": [127, 130], "25": [128, 240], "build": [128, 178, 259], "sutterfilterwheel": [128, 290], "galvo_id": 133, "voic": [133, 154, 156], "coil": [133, 154, 156], "joystickbas": [138, 140], "axis_handl": 138, "axis_id": 138, "handler": 138, "farmsimulatorsidepanel": 138, "blue": 138, "led": 138, "grei": 138, "button": [138, 294], "red": 138, "unknown": [138, 294], "regist": [138, 294], "event": 138, "decrease_slid": 138, "slider": 138, "event_devid": 138, "quickli": 138, "everi": [138, 294], "mode_handl": 138, "helper": 138, "cfg": 138, "laser_id": [143, 145], "initialize_las": [143, 145], "power": [143, 145], "cw": [143, 145], "apc": [143, 145], "laserbas": 145, "enable_high_resolution_las": [147, 149], "enable_low_resolution_las": [147, 149], "set_laser_analog_voltag": [147, 149], "current_laser_index": [147, 149], "current_laser_intens": [147, 149], "constant": [147, 149, 267], "voltag": [147, 149, 237, 242, 243], "intens": [147, 149, 240, 248], "percentag": [147, 149], "lasertriggerbas": 149, "calculate_entrance_pupil": 151, "entranc": 151, "pupil": 151, "incid": 151, "angl": 151, "fluoresc": 151, "interfer": 151, "contrast": 151, "carolin": 151, "ajo": 151, "franklin": 151, "prasad": 151, "ganesan": 151, "steven": 151, "boxer": 151, "biophi": 151, "volum": 151, "89": 151, "issu": [151, 297], "octob": 151, "2005": 151, "2759": 151, "2769": 151, "entrance_pupil_diamet": 151, "diamet": 151, "millimet": [151, 174], "remotefocusbas": 156, "sca814": [156, 294], "charact": 156, "proper": [156, 294, 297], "echo": 156, "advis": 156, "verifi": 156, "receiv": [156, 177, 234], "sent": 156, "pyseri": 156, "readthedoc": 156, "en": 156, "latest": 156, "pyserial_api": 156, "html": [156, 230], "baud_rat": [156, 165, 178], "byte_s": 156, "pariti": 156, "stop_bit": 156, "read_on_init": 156, "upon": [156, 294, 297], "debug": [156, 234], "statement": [156, 257], "read_byt": 156, "send_command": 156, "command": [156, 164, 177, 186, 188, 234, 297], "close_connect": 156, "received_byt": 156, "bytearrai": 156, "shutdown": [156, 294], "shutterbas": 161, "deliv": [161, 294], "open_left": 161, "right": [161, 243, 270, 294], "open_right": 161, "close_shutt": 161, "state": [161, 194, 234, 290, 292], "device_id": [164, 167, 169, 171, 174, 177, 180, 182], "stagebas": [164, 169, 171, 174, 177, 180, 182], "asiimag": 164, "doc": [164, 230], "serial_command": 164, "command_quick_start": 164, "distanc": [164, 177, 194, 270, 291], "10th": 164, "micron": [164, 177, 295], "divis": 164, "ever": 164, "rel": 164, "ftp": 164, "stilt": 164, "strain": 164, "system": [164, 248, 290, 291, 294, 295, 297], "x_po": [164, 167, 174, 290], "y_po": [164, 167, 174, 290], "z_po": [164, 167, 174, 290], "f_po": [164, 167, 174, 290], "theta_po": [164, 167, 174, 290], "rotat": [164, 167, 174, 271], "position_dict": [164, 167, 174], "x_max": [164, 167, 174, 290], "y_max": [164, 167, 174, 290], "z_max": [164, 167, 174, 290], "f_max": [164, 167, 174, 290], "theta_max": [164, 167, 174, 290], "x_min": [164, 167, 169, 171, 174, 177, 180, 182, 290], "y_min": [164, 167, 174, 290], "z_min": [164, 167, 174, 290], "f_min": [164, 167, 174, 290], "theta_min": [164, 167, 174, 290], "create_position_dict": [164, 167, 169, 171, 174, 177, 180, 182], "get_abs_posit": [164, 167, 169, 171, 174, 177, 180, 182], "emerg": [164, 167, 169, 174], "halt": [164, 167, 169, 174], "move_dictionari": [164, 167, 169, 171, 174, 177, 180, 182], "ensur": [164, 167, 169, 174, 177, 180, 291], "request": [164, 167, 169, 174, 177, 180, 291], "prefix": [164, 167, 169, 171, 174, 177, 180, 182], "x_ab": [164, 167, 169, 171, 174, 177, 180, 182], "micromet": [164, 167, 169, 171, 174, 177, 180, 182, 291], "degre": [164, 167, 169, 171, 174, 177, 180, 182], "move_absolut": [164, 169, 171, 174, 177, 180, 182], "absolut": [164, 169, 174, 291], "asi": [164, 165, 177, 290], "spot": [164, 169, 171, 174, 177, 180, 182], "success": [164, 169, 171, 174, 177, 180, 182, 234], "move_axis_absolut": [164, 169, 171, 174, 177, 180, 182], "axis_num": [164, 169, 171, 174, 177, 180, 182], "pi": [164, 169, 171, 174, 177, 180, 182, 238, 290], "applic": [164, 177, 291], "report_posit": [164, 169, 171, 174, 177, 182], "abruptli": [164, 167, 169, 171, 174, 180, 182], "com_port": [165, 178], "1000": [165, 290], "tiger": 165, "asi_stag": 165, "successfulli": [165, 294], "positoin": 167, "physik": [169, 174, 175], "instrument": [169, 174, 175, 295], "logic": [169, 171, 177, 180, 182], "hack": [171, 182], "lack": [171, 182], "serialnum": [172, 183], "xyzf": 174, "controller_nam": 175, "reference_mod": 175, "mp": 177, "285": 177, "ascii": 177, "cr": 177, "carriag": 177, "hexadecim": 177, "associ": 177, "complet": [177, 292], "host": 177, "readi": 177, "check_byte_ord": 177, "confirm": [177, 186, 188, 292, 294], "respons": [177, 296], "static": [177, 194], "convert_microns_to_microstep": 177, "microstep": 177, "convert_microsteps_to_micron": 177, "flush_buff": 177, "flush": 177, "consist": [177, 291], "end": [177, 234, 292], "intern": [177, 225, 227, 228, 230], "set_stage_speed_and_resolut": 177, "3000": 177, "sec": 177, "1310": 177, "04": 177, "interrupt": 177, "origin": [177, 262, 297], "sutterstag": 178, "device_control": 186, "servo": [186, 188, 294], "read_posit": [186, 188], "cur_posit": [186, 188], "set_zoom": [186, 188], "tha": [186, 188], "zoomdict": [186, 188], "zoombas": 188, "dynamixelzoom": [188, 290], "timecost": 190, "get_autofocus_frame_num": 194, "best": [194, 291], "get_step": 194, "step_siz": [194, 290], "autofocus": 194, "routin": [194, 268, 296, 297], "travel": 194, "pos_offset": 194, "figur": 194, "resolution_mod": 196, "zoom_valu": 196, "overlap": [197, 270, 271], "target_resolut": [197, 222], "nanoscal": [197, 222], "target_zoom": [197, 222], "tissu": 197, "grid": [197, 271], "root": [206, 207, 209, 225, 228, 230, 277, 278], "cleanup_list": [206, 207, 209], "feature_nam": [208, 210, 211], "func_dict": [208, 210, 211], "node_typ": [208, 210, 211, 292], "device_rel": [208, 210, 211, 292], "need_respons": [208, 210, 211, 292], "treenod": [208, 210], "number_of_execut": 209, "feature_modul": 214, "func_typ": 214, "feature_list": 215, "sibl": 215, "tree": [215, 292], "sub_dir": 217, "image_nam": 217, "disk": [217, 260], "acqusit": [217, 292], "save_directori": [217, 259], "scheme": 217, "ext": 217, "microscopest": 217, "color": 217, "save_imag": 217, "service_url": 220, "xmlmetadata": [225, 230], "bigdataview": [225, 228], "xml": [225, 228, 230, 277, 278], "section": [225, 292, 297], "arxiv": 225, "org": [225, 230], "ab": 225, "1412": 225, "0488": 225, "parse_bdv_xml": 225, "pars": [225, 228, 267, 277, 278], "incomplet": 225, "stage_positions_to_affine_matrix": 225, "affin": 225, "to_xml": [225, 228, 230], "write_xml": [225, 228, 230], "header": [225, 228, 230, 275], "om": [228, 230, 278], "proprietari": 228, "address": [228, 297], "file_type_xml_dict": 228, "ome_tiff_xml_dict": [228, 230], "xml_tool": 228, "parse_xml": 228, "openmicroscopi": 230, "uid": 230, "heirarch": 230, "ome_dict": 230, "devices_dict": 232, "get_readout_tim": [232, 234], "event_queu": 234, "softwar": [234, 290, 291, 294, 295, 298], "architectur": [234, 291, 295, 296], "leverag": [234, 291], "cuda": [234, 268, 295, 297], "analysi": [234, 268, 292], "engin": 234, "update_data_buff": 234, "get_data_buff": 234, "create_pip": 234, "release_pip": 234, "run_command": 234, "move_stag": 234, "end_acquisit": 234, "run_data_process": 234, "run_single_channel_acquisit": 234, "run_single_acquisit": 234, "snap_imag": 234, "run_live_acquisit": 234, "run_z_stack_acquisit": 234, "run_single_channel_acquisition_with_featur": 234, "change_resolut": 234, "resolution_valu": 234, "pipe_nam": 234, "pipe": 234, "pair": 234, "duplex": 234, "end1": 234, "disconnect": 234, "img_width": 234, "512": 234, "img_height": 234, "get_stage_posit": 234, "ret_pos_dict": 234, "load_imag": 234, "unload": 234, "pos_dict": [234, 251], "turn_off_flag": 234, "project": [234, 296], "update_set": 234, "autofocu": [234, 292], "num_of_fram": 234, "data_func": 234, "stream": 234, "gui": [234, 269, 273], "recalcul": 234, "therebi": 234, "peopl": 234, "adjust": 234, "due": 234, "cleanup": [234, 292], "stop_stag": 234, "sample_r": [236, 237, 238, 239, 240, 242, 243], "100000": [236, 237, 238, 239, 240, 242, 243, 290], "sweep_tim": [236, 237, 238, 239, 240, 242, 243], "camera_delai": [236, 243], "meant": 236, "visual": [236, 297], "dc": 237, "reson": 237, "drive": [237, 242, 296], "duty_cycl": [238, 242], "phase": [238, 239, 242], "5707963267948966": 238, "galvosign": 238, "199": 238, "67": 238, "sine": 239, "pulse_width": 240, "ttl": 240, "volt": [240, 243, 294], "typical_ttl_puls": 240, "typical_laser_puls": 240, "80": [240, 297], "percent_smooth": 241, "smooth": 241, "convolut": 241, "141592653589793": 242, "24": 243, "etl_delai": 243, "fall": 243, "sawtooth": 243, "ramp": 243, "typic": 243, "rise": 243, "linearli": 243, "2x": [243, 295], "drop": 243, "down": 243, "exchang": 243, "hz": 243, "na": [246, 247, 248], "wvl": [246, 247, 248], "r0": [246, 248], "z0": [246, 248], "w0": [246, 248], "i0": [246, 248], "bg0": 246, "rl": 248, "zl": 248, "33": 248, "488": [248, 295], "bg": 248, "waist": 248, "nm": [248, 295], "apertur": 248, "optic": 248, "refract": 248, "wavelength": 248, "common": [249, 250, 294], "model": [249, 250, 291, 292, 296], "help": [250, 290, 291], "percol": 250, "funclist": 254, "execut": [257, 292], "saving_set": 259, "popup": 259, "file_directori": 260, "content_dict": 260, "yml": 260, "yaml": [260, 291, 296], "font_siz": 262, "piec": [262, 291], "font": 262, "arial": 262, "ttf": 262, "darwin": 262, "cambriab": 262, "fp": 264, "lazi": 264, "folder": [264, 291, 297], "pil": 264, "low_res_fp": 264, "endosom": 264, "mil": 264, "marin": 264, "zach": 264, "lung": 264, "antirfp": 264, "2022": 264, "07": 264, "02": [264, 297], "cell_001": 264, "low_r": 264, "imshow": 264, "500": [264, 290], "containt": 264, "parser": [266, 267], "argumentpars": [266, 267], "argumentparserobject": 266, "argpars": [267, 268], "namespac": [267, 268, 278], "gpu": [268, 295, 296], "statu": 268, "commonli": [269, 294], "multiposit": [269, 273], "panda": [269, 273], "tabl": [269, 273], "dist": 270, "roi_length": 270, "tile": [270, 271], "divid": 270, "roi": [270, 271], "watch": 270, "sign": [270, 271], "measur": 270, "num_til": 270, "x_start": 271, "x_tile": 271, "x_length": 271, "x_overlap": 271, "y_start": 271, "y_tile": 271, "y_length": 271, "y_overlap": 271, "z_start": 271, "z_tile": 271, "z_length": 271, "z_overlap": 271, "theta_start": 271, "theta_til": 271, "theta_length": 271, "theta_overlap": 271, "f_start": 271, "f_tile": 271, "f_length": 271, "f_overlap": 271, "fov": 271, "track": 271, "n_posit": 271, "po": 273, "append": 273, "redraw": 273, "datafram": 273, "multi_position_t": 273, "begin_start": 275, "tag": 277, "elementtre": 278, "account": 278, "etre": 278, "fullnam": [287, 288], "escap": [287, 288], "underlin": [287, 288], "rubric": 288, "endfor": 288, "endif": 288, "endblock": 288, "302158": 290, "302352": 290, "filter_wheel": 290, "com19": 290, "number_of_wheel": 290, "controllernam": 290, "884": 290, "l": [290, 295], "509": [290, 295], "20dg10": [290, 295], "40dg10": 290, "060": 290, "dg": 290, "406": 290, "4pd": 290, "nostag": 290, "refmod": 290, "frf": 290, "119060508": 290, "thorlab": [290, 295], "74000375": 290, "servo_id": 290, "com18": 290, "1000000": 290, "manufactur": [290, 294], "123456789": 290, "com7": 290, "115200": 290, "instanti": 290, "eg": 290, "emploi": 290, "syntheticstag": 290, "987654321": 290, "notic": 290, "syntheticzoom": 290, "abbrevi": 290, "y_unload_posit": 290, "10000": 290, "y_load_posit": 290, "90000": 290, "startfocu": 290, "75000": 290, "33500": 290, "16000": 290, "50000": 290, "25000": 290, "360": 290, "x_rot_posit": 290, "y_rot_posit": 290, "z_rot_posit": 290, "x_step": 290, "y_step": 290, "z_step": 290, "theta_step": 290, "f_step": 290, "25250": 290, "40000": 290, "70000": 290, "veloc": 290, "x_offset": 290, "y_offset": 290, "z_offset": 290, "f_offset": 290, "theta_offset": 290, "explicil": 290, "earlier": 290, "relat": 290, "physic": 290, "third": 290, "laser_pow": 290, "interval_tim": 290, "stack_acquisit": 290, "200": 290, "start_po": 290, "5000": 290, "end_po": 290, "stack_paus": 290, "widget": 290, "spinbox": 290, "develop": [290, 291, 292, 294, 296], "plan": 290, "go": [290, 297], "forward": 290, "manner": 290, "welcom": 291, "pleas": [291, 297], "fork": 291, "branch": 291, "review": 291, "practic": 291, "outlin": 291, "consid": 291, "refactor": 291, "reach": 291, "prior": [291, 294], "happi": 291, "bring": 291, "discuss": 291, "meet": 291, "strong": 291, "especi": 291, "disrupt": 291, "improv": 291, "clariti": 291, "team": 291, "advanc": 291, "merg": 291, "pep8": 291, "importantli": 291, "camelcas": 291, "lowercase_and_separated_by_underscor": 291, "numpydoc": 291, "commit": 291, "workflow": 291, "enforc": 291, "ruff": 291, "linter": 291, "black": 291, "formatt": 291, "vscode": 291, "whatev": 291, "conda": [291, 297], "aslm": [291, 294, 296, 297, 298], "pip": [291, 297], "cd": [291, 297], "ideal": [291, 292], "alert": 291, "pytest": 291, "reconfigur": 292, "snap": 292, "pictur": 292, "common_featur": 292, "zstackacquisit": 292, "discret": 292, "cosin": 292, "dictat": 292, "config_t": 292, "init": 292, "pre_func_sign": 292, "in_func_sign": 292, "end_func_sign": 292, "cleanup_func_sign": 292, "pre_func_data": 292, "in_func_data": 292, "end_func_data": 292, "cleanup_func_data": 292, "node": 292, "multi": [292, 294], "primari": 292, "failsaf": 292, "latter": 292, "inde": 292, "proceed": 292, "contribut": [293, 296], "guidelin": [293, 296], "usernam": [294, 297], "config": [294, 296, 297], "conflict": 294, "sever": 294, "pcie": 294, "6738": 294, "pxie": [294, 295], "6259": 294, "6733": 294, "daqmx": 294, "driver": [294, 295, 297], "recogn": 294, "visibl": 294, "pinout": 294, "click": 294, "aspect": 294, "queue": 294, "board": 294, "receipt": 294, "determinist": 294, "basi": 294, "jitter": 294, "anticip": 294, "dev1": 294, "dev2": 294, "master_trigger_out_lin": 294, "trigger_sourc": 294, "pxi6259": [294, 295], "port0": 294, "line1": 294, "pfi0": 294, "p0": 294, "pin": [294, 297], "pfio": 294, "gate": 294, "usb": 294, "came": 294, "hcimagel": 294, "prompt": [294, 297], "dcam": 294, "intal": 294, "silicon": 294, "firebird": 294, "framegrabb": [294, 295], "tool": [294, 296], "grabber": [294, 295], "apporpri": 294, "x16": 294, "slot": 294, "motherboard": 294, "excap": 294, "camera_trigger_out_lin": 294, "extern": 294, "ctr0": 294, "download": [294, 296], "pvcam": 294, "sdk": [294, 297], "agre": 294, "term": 294, "broadcom": 294, "pci": 294, "kit": 294, "bridg": 294, "dev": 294, "_": 294, "abl": 294, "pvcamtest": 294, "lfa": 294, "2010": 294, "actuat": 294, "continu": [294, 297], "sync": 294, "ignal": 294, "synchron": 294, "encod": 294, "less": 294, "perz": 294, "omicron": 295, "lighthub": 295, "ultra": 295, "acc": 295, "642": 295, "561": 295, "mix": 295, "obi": 295, "unidirect": 295, "bidirect": 295, "repeatablil": 295, "increment": 295, "motion": 295, "borderlin": 295, "coars": 295, "nvidia": [295, 297], "titan": 295, "rtx": 295, "456": 295, "71": 295, "flash": 295, "optotun": 295, "electrotun": 295, "len": 295, "blink": 295, "nation": 295, "1073": 295, "chassi": 295, "equip": 295, "pxi6733": 295, "32mm": 295, "position": 295, "mad": 295, "citi": 295, "lab": [295, 297], "nano": 295, "ut": 296, "southwestern": 296, "ecosystem": 296, "aim": 296, "abstract": 296, "custom": 296, "recip": 296, "maker": 296, "autom": 296, "repositori": [296, 297], "philosophi": 296, "minim": 296, "priorit": 296, "stabil": 296, "layer": 296, "brutal": 296, "obviou": 296, "understood": 296, "year": 296, "maxim": 296, "biolog": 296, "git": 296, "environ": 296, "troubleshoot": 296, "voicecoil": 296, "extend": 296, "principl": 296, "scientif": 296, "recommend": 297, "desktop": 297, "friendli": 297, "head": 297, "miniconda": 297, "websit": 297, "handi": 297, "cheatsheet": 297, "accustom": 297, "search": 297, "anaconda": 297, "frequent": 297, "taskbar": 297, "mycomput": 297, "firewal": 297, "utsw": 297, "campu": 297, "circumv": 297, "parenthes": 297, "far": 297, "activatin": 297, "upgrad": 297, "clone": 297, "easi": 297, "dean": 297, "mkdir": 297, "myfoldernam": 297, "advancedimagingutsw": 297, "sh": 297, "completet": 297, "feedback": 297, "acceler": 297, "tensorflow": 297, "pytorch": 297, "cupi": 297, "excel": 297, "cudnn": 297, "graphic": 297, "450": 297, "tensorrt": 297, "microsoft": 297, "redistribut": 297, "studio": 297, "2015": 297, "2017": 297, "2019": 297, "http_proxi": 297, "swmed": 297, "edu": 297, "3128": 297, "https_proxi": 297, "typo": 297, "perspect": 297, "onlin": 297, "usersuserprofil": 297, "condarc": 297, "usersuserprofilepippip": 297, "ini": 297, "password": 297, "8080": 297}, "objects": {"aslm": [[0, 0, 0, "-", "config"], [7, 0, 0, "-", "controller"], [14, 0, 0, "-", "model"], [244, 0, 0, "-", "tools"], [279, 0, 0, "-", "view"]], "aslm.config": [[1, 0, 0, "-", "config"]], "aslm.config.config": [[2, 1, 1, "", "build_nested_dict"], [3, 1, 1, "", "get_aslm_path"], [4, 1, 1, "", "get_configuration_paths"], [5, 1, 1, "", "load_configs"], [6, 1, 1, "", "update_config_dict"]], "aslm.controller": [[8, 0, 0, "-", "configuration_controller"], [10, 0, 0, "-", "thread_pool"]], "aslm.controller.configuration_controller": [[9, 2, 1, "", "ConfigurationController"]], "aslm.controller.configuration_controller.ConfigurationController": [[9, 3, 1, "", "__init__"], [9, 4, 1, "", "camera_config_dict"], [9, 4, 1, "", "camera_pixels"], [9, 3, 1, "", "change_microscope"], [9, 4, 1, "", "channels_info"], [9, 3, 1, "", "get_microscope_configuration_dict"], [9, 3, 1, "", "get_stage_position_limits"], [9, 4, 1, "", "lasers_info"], [9, 4, 1, "", "remote_focus_dict"], [9, 4, 1, "", "stage_default_position"], [9, 4, 1, "", "stage_step"]], "aslm.controller.thread_pool": [[11, 2, 1, "", "SelfLockThread"], [12, 2, 1, "", "SynchronizedThreadPool"], [13, 2, 1, "", "ThreadWaitlist"]], "aslm.controller.thread_pool.SelfLockThread": [[11, 3, 1, "", "__init__"], [11, 4, 1, "", "daemon"], [11, 3, 1, "", "getName"], [11, 4, 1, "", "ident"], [11, 3, 1, "", "isDaemon"], [11, 3, 1, "", "is_alive"], [11, 3, 1, "", "join"], [11, 4, 1, "", "name"], [11, 4, 1, "", "native_id"], [11, 3, 1, "", "run"], [11, 3, 1, "", "setDaemon"], [11, 3, 1, "", "setName"], [11, 3, 1, "", "start"]], "aslm.controller.thread_pool.SynchronizedThreadPool": [[12, 3, 1, "", "__init__"]], "aslm.controller.thread_pool.ThreadWaitlist": [[13, 3, 1, "", "__init__"]], "aslm.model": [[15, 0, 0, "-", "analysis"], [56, 0, 0, "-", "concurrency"], [76, 0, 0, "-", "data_sources"], [86, 0, 0, "-", "device_startup_functions"], [104, 0, 0, "-", "devices"], [189, 0, 0, "-", "dummy"], [192, 0, 0, "-", "features"], [223, 0, 0, "-", "metadata_sources"], [231, 0, 0, "-", "microscope"], [233, 0, 0, "-", "model"], [235, 0, 0, "-", "waveforms"]], "aslm.model.analysis": [[16, 0, 0, "-", "boundary_detect"], [21, 0, 0, "-", "camera"], [26, 0, 0, "-", "detection"], [36, 0, 0, "-", "image_contrast"], [42, 0, 0, "-", "image_decorrelation"], [51, 0, 0, "-", "image_transform"], [54, 0, 0, "-", "spectral_unmixing"]], "aslm.model.analysis.boundary_detect": [[17, 1, 1, "", "binary_detect"], [18, 1, 1, "", "find_tissue_boundary_2d"], [19, 1, 1, "", "has_tissue"], [20, 1, 1, "", "map_boundary"]], "aslm.model.analysis.camera": [[22, 1, 1, "", "compute_flatfield_map"], [23, 1, 1, "", "compute_noise_sigma"], [24, 1, 1, "", "compute_scmos_offset_and_variance_map"], [25, 1, 1, "", "compute_signal_to_noise"]], "aslm.model.analysis.detection": [[27, 1, 1, "", "add_median_border"], [28, 1, 1, "", "combine_images"], [29, 1, 1, "", "log_detection"], [30, 1, 1, "", "make_inside_image"], [31, 1, 1, "", "make_normalized_image"], [32, 1, 1, "", "make_sphere_3D"], [33, 1, 1, "", "multiscale_surface_filter_3D"], [34, 1, 1, "", "surface_filter_gauss_3D"], [35, 1, 1, "", "three_level_segmentation"]], "aslm.model.analysis.image_contrast": [[37, 1, 1, "", "estimate_and_correct_flatfield"], [38, 1, 1, "", "estimate_image_resolution"], [39, 1, 1, "", "fast_normalized_dct_shannon_entropy"], [40, 1, 1, "", "image_intensity"], [41, 1, 1, "", "normalized_dct_shannon_entropy"]], "aslm.model.analysis.image_decorrelation": [[43, 1, 1, "", "apodize_image"], [44, 1, 1, "", "get_correlation_coefficient"], [45, 1, 1, "", "get_decorrelation_local_maxima"], [46, 1, 1, "", "get_image_decorrelation"], [47, 1, 1, "", "get_radial_average"], [48, 1, 1, "", "image_to_polar"], [49, 1, 1, "", "linear_map"], [50, 1, 1, "", "main_image_decorr"]], "aslm.model.analysis.image_transform": [[52, 1, 1, "", "deskew_image"], [53, 1, 1, "", "initiate_gpu"]], "aslm.model.analysis.spectral_unmixing": [[55, 1, 1, "", "to_do"]], "aslm.model.concurrency": [[57, 0, 0, "-", "concurrency_tools"], [68, 0, 0, "-", "proxy_objects"], [73, 0, 0, "-", "shared_memory"], [74, 0, 0, "-", "write_parameters"]], "aslm.model.concurrency.concurrency_tools": [[58, 2, 1, "", "CustodyThread"], [59, 5, 1, "", "FancyThread"], [60, 2, 1, "", "MyTestClass"], [61, 2, 1, "", "ObjectInSubprocess"], [62, 5, 1, "", "PoliteThread"], [63, 2, 1, "", "ResultThread"], [64, 2, 1, "", "SharedNDArray"], [65, 2, 1, "", "TestObjectInSubprocess"], [66, 2, 1, "", "TestResultThreadAndCustodyThread"], [67, 2, 1, "", "TestSharedNDArray"]], "aslm.model.concurrency.concurrency_tools.CustodyThread": [[58, 3, 1, "", "__init__"], [58, 4, 1, "", "daemon"], [58, 3, 1, "", "getName"], [58, 3, 1, "", "get_result"], [58, 4, 1, "", "ident"], [58, 3, 1, "", "isDaemon"], [58, 3, 1, "", "is_alive"], [58, 3, 1, "", "join"], [58, 4, 1, "", "name"], [58, 4, 1, "", "native_id"], [58, 3, 1, "", "run"], [58, 3, 1, "", "setDaemon"], [58, 3, 1, "", "setName"], [58, 3, 1, "", "start"]], "aslm.model.concurrency.concurrency_tools.MyTestClass": [[60, 3, 1, "", "__init__"], [60, 3, 1, "", "run"], [60, 3, 1, "", "time_it"]], "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess": [[61, 3, 1, "", "__init__"]], "aslm.model.concurrency.concurrency_tools.ResultThread": [[63, 3, 1, "", "__init__"], [63, 4, 1, "", "daemon"], [63, 3, 1, "", "getName"], [63, 3, 1, "", "get_result"], [63, 4, 1, "", "ident"], [63, 3, 1, "", "isDaemon"], [63, 3, 1, "", "is_alive"], [63, 3, 1, "", "join"], [63, 4, 1, "", "name"], [63, 4, 1, "", "native_id"], [63, 3, 1, "", "run"], [63, 3, 1, "", "setDaemon"], [63, 3, 1, "", "setName"], [63, 3, 1, "", "start"]], "aslm.model.concurrency.concurrency_tools.SharedNDArray": [[64, 5, 1, "", "ALIGNED"], [64, 5, 1, "", "BEHAVED"], [64, 5, 1, "", "CARRAY"], [64, 5, 1, "", "C_CONTIGUOUS"], [64, 5, 1, "", "FARRAY"], [64, 5, 1, "", "FNC"], [64, 5, 1, "", "FORC"], [64, 5, 1, "", "F_CONTIGUOUS"], [64, 5, 1, "", "OWNDATA"], [64, 5, 1, "", "T"], [64, 5, 1, "", "UPDATEIFCOPY"], [64, 5, 1, "", "WRITEABLE"], [64, 5, 1, "", "WRITEBACKIFCOPY"], [64, 3, 1, "", "__init__"], [64, 3, 1, "", "all"], [64, 3, 1, "", "any"], [64, 3, 1, "", "argmax"], [64, 3, 1, "", "argmin"], [64, 3, 1, "", "argpartition"], [64, 3, 1, "", "argsort"], [64, 3, 1, "", "astype"], [64, 5, 1, "", "base"], [64, 3, 1, "", "byteswap"], [64, 3, 1, "", "choose"], [64, 3, 1, "", "clip"], [64, 3, 1, "", "compress"], [64, 3, 1, "", "conj"], [64, 3, 1, "", "conjugate"], [64, 3, 1, "", "copy"], [64, 5, 1, "", "ctypes"], [64, 3, 1, "", "cumprod"], [64, 3, 1, "", "cumsum"], [64, 5, 1, "", "data"], [64, 3, 1, "", "diagonal"], [64, 5, 1, "", "dtype"], [64, 3, 1, "", "dump"], [64, 3, 1, "", "dumps"], [64, 3, 1, "", "fill"], [64, 5, 1, "", "flags"], [64, 5, 1, "", "flat"], [64, 3, 1, "", "flatten"], [64, 3, 1, "", "getfield"], [64, 5, 1, "", "imag"], [64, 3, 1, "", "item"], [64, 3, 1, "", "itemset"], [64, 5, 1, "", "itemsize"], [64, 3, 1, "", "max"], [64, 3, 1, "", "mean"], [64, 3, 1, "", "min"], [64, 5, 1, "", "nbytes"], [64, 5, 1, "", "ndim"], [64, 3, 1, "", "newbyteorder"], [64, 3, 1, "", "nonzero"], [64, 3, 1, "", "partition"], [64, 3, 1, "", "prod"], [64, 3, 1, "", "ptp"], [64, 3, 1, "", "put"], [64, 3, 1, "", "ravel"], [64, 5, 1, "", "real"], [64, 3, 1, "", "repeat"], [64, 3, 1, "", "reshape"], [64, 3, 1, "", "resize"], [64, 3, 1, "", "round"], [64, 3, 1, "", "searchsorted"], [64, 3, 1, "", "setfield"], [64, 3, 1, "", "setflags"], [64, 5, 1, "", "shape"], [64, 5, 1, "", "size"], [64, 3, 1, "", "sort"], [64, 3, 1, "", "squeeze"], [64, 3, 1, "", "std"], [64, 5, 1, "", "strides"], [64, 3, 1, "", "sum"], [64, 3, 1, "", "swapaxes"], [64, 3, 1, "", "take"], [64, 3, 1, "", "tobytes"], [64, 3, 1, "", "tofile"], [64, 3, 1, "", "tolist"], [64, 3, 1, "", "tostring"], [64, 3, 1, "", "trace"], [64, 3, 1, "", "transpose"], [64, 3, 1, "", "var"], [64, 3, 1, "", "view"]], "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess": [[65, 2, 1, "", "TestClass"], [65, 3, 1, "", "__init__"], [65, 3, 1, "", "run"], [65, 3, 1, "", "test_incorrect_thread_management"], [65, 3, 1, "", "test_lock_with_waitlist"], [65, 3, 1, "", "test_object_in_subprocess_overhead"], [65, 3, 1, "", "test_sending_shared_arrays"], [65, 3, 1, "", "time_it"]], "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread": [[66, 3, 1, "", "__init__"], [66, 3, 1, "", "run"], [66, 3, 1, "", "time_it"]], "aslm.model.concurrency.concurrency_tools.TestSharedNDArray": [[67, 3, 1, "", "__init__"], [67, 3, 1, "", "run"], [67, 3, 1, "", "test_ndarraylike_behavior"], [67, 3, 1, "", "test_serialization"], [67, 3, 1, "", "test_serializing_and_deserializing"], [67, 3, 1, "", "time_it"]], "aslm.model.concurrency.proxy_objects": [[69, 2, 1, "", "ProxyManager"], [70, 2, 1, "", "ProxyObject"], [71, 1, 1, "", "launch_custody_thread"], [72, 1, 1, "", "launch_thread"]], "aslm.model.concurrency.proxy_objects.ProxyManager": [[69, 3, 1, "", "__init__"], [69, 3, 1, "", "proxy_object"], [69, 3, 1, "", "shared_numpy_array"]], "aslm.model.concurrency.proxy_objects.ProxyObject": [[70, 3, 1, "", "__init__"]], "aslm.model.concurrency.write_parameters": [[75, 2, 1, "", "write_Params"]], "aslm.model.concurrency.write_parameters.write_Params": [[75, 3, 1, "", "__init__"]], "aslm.model.data_sources": [[77, 0, 0, "-", "bdv_data_source"], [79, 0, 0, "-", "data_source"], [81, 1, 1, "", "get_data_source"], [82, 0, 0, "-", "tiff_data_source"], [84, 0, 0, "-", "zarr_data_source"]], "aslm.model.data_sources.bdv_data_source": [[78, 2, 1, "", "BigDataViewerDataSource"]], "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource": [[78, 3, 1, "", "__init__"], [78, 3, 1, "", "close"], [78, 4, 1, "", "data"], [78, 3, 1, "", "read"], [78, 4, 1, "", "resolutions"], [78, 4, 1, "", "shape"], [78, 4, 1, "", "shapes"], [78, 4, 1, "", "subdivisions"], [78, 4, 1, "", "voxel_size"], [78, 3, 1, "", "write"]], "aslm.model.data_sources.data_source": [[80, 2, 1, "", "DataSource"]], "aslm.model.data_sources.data_source.DataSource": [[80, 3, 1, "", "__init__"], [80, 3, 1, "", "close"], [80, 4, 1, "", "data"], [80, 3, 1, "", "read"], [80, 4, 1, "", "shape"], [80, 4, 1, "", "voxel_size"], [80, 3, 1, "", "write"]], "aslm.model.data_sources.tiff_data_source": [[83, 2, 1, "", "TiffDataSource"]], "aslm.model.data_sources.tiff_data_source.TiffDataSource": [[83, 3, 1, "", "__init__"], [83, 3, 1, "", "close"], [83, 4, 1, "", "data"], [83, 3, 1, "", "generate_image_name"], [83, 3, 1, "", "read"], [83, 4, 1, "", "shape"], [83, 4, 1, "", "voxel_size"], [83, 3, 1, "", "write"]], "aslm.model.data_sources.zarr_data_source": [[85, 2, 1, "", "ZarrDataSource"]], "aslm.model.data_sources.zarr_data_source.ZarrDataSource": [[85, 3, 1, "", "__init__"], [85, 3, 1, "", "close"], [85, 3, 1, "", "copy_to_zarr"], [85, 4, 1, "", "data"], [85, 3, 1, "", "read"], [85, 4, 1, "", "shape"], [85, 4, 1, "", "voxel_size"], [85, 3, 1, "", "write"]], "aslm.model.device_startup_functions": [[87, 2, 1, "", "DummyDeviceConnection"], [88, 1, 1, "", "auto_redial"], [89, 1, 1, "", "device_not_found"], [90, 1, 1, "", "load_camera_connection"], [91, 1, 1, "", "load_devices"], [92, 1, 1, "", "load_filter_wheel_connection"], [93, 1, 1, "", "load_stages"], [94, 1, 1, "", "load_zoom_connection"], [95, 1, 1, "", "start_camera"], [96, 1, 1, "", "start_daq"], [97, 1, 1, "", "start_filter_wheel"], [98, 1, 1, "", "start_galvo"], [99, 1, 1, "", "start_lasers"], [100, 1, 1, "", "start_remote_focus_device"], [101, 1, 1, "", "start_shutter"], [102, 1, 1, "", "start_stage"], [103, 1, 1, "", "start_zoom"]], "aslm.model.device_startup_functions.DummyDeviceConnection": [[87, 3, 1, "", "__init__"]], "aslm.model.devices": [[105, 0, 0, "-", "APIs"], [110, 0, 0, "-", "camera"], [118, 0, 0, "-", "daq"], [123, 0, 0, "-", "filter_wheel"], [131, 0, 0, "-", "galvo"], [134, 0, 0, "-", "joystick"], [141, 0, 0, "-", "lasers"], [150, 0, 0, "-", "objectives"], [152, 0, 0, "-", "remote_focus"], [157, 0, 0, "-", "shutter"], [162, 0, 0, "-", "stages"], [184, 0, 0, "-", "zoom"]], "aslm.model.devices.APIs": [[106, 0, 0, "-", "coherent"], [107, 0, 0, "-", "dynamixel"], [108, 0, 0, "-", "logitech"], [109, 0, 0, "-", "omicron"]], "aslm.model.devices.camera": [[111, 0, 0, "-", "camera_base"], [113, 0, 0, "-", "camera_hamamatsu"], [115, 0, 0, "-", "camera_synthetic"]], "aslm.model.devices.camera.camera_base": [[112, 2, 1, "", "CameraBase"]], "aslm.model.devices.camera.camera_base.CameraBase": [[112, 3, 1, "", "__init__"], [112, 3, 1, "", "calculate_light_sheet_exposure_time"], [112, 3, 1, "", "set_readout_direction"]], "aslm.model.devices.camera.camera_hamamatsu": [[114, 2, 1, "", "HamamatsuOrca"]], "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca": [[114, 3, 1, "", "__init__"], [114, 3, 1, "", "calculate_light_sheet_exposure_time"], [114, 3, 1, "", "calculate_readout_time"], [114, 3, 1, "", "close_camera"], [114, 3, 1, "", "close_image_series"], [114, 3, 1, "", "get_minimum_waiting_time"], [114, 3, 1, "", "get_new_frame"], [114, 3, 1, "", "initialize_image_series"], [114, 3, 1, "", "report_settings"], [114, 4, 1, "", "serial_number"], [114, 3, 1, "", "set_ROI"], [114, 3, 1, "", "set_binning"], [114, 3, 1, "", "set_exposure_time"], [114, 3, 1, "", "set_line_interval"], [114, 3, 1, "", "set_readout_direction"], [114, 3, 1, "", "set_sensor_mode"]], "aslm.model.devices.camera.camera_synthetic": [[116, 2, 1, "", "SyntheticCamera"], [117, 2, 1, "", "SyntheticCameraController"]], "aslm.model.devices.camera.camera_synthetic.SyntheticCamera": [[116, 3, 1, "", "__init__"], [116, 3, 1, "", "calculate_light_sheet_exposure_time"], [116, 3, 1, "", "calculate_readout_time"], [116, 3, 1, "", "close_camera"], [116, 3, 1, "", "close_image_series"], [116, 3, 1, "", "generate_new_frame"], [116, 3, 1, "", "get_minimum_waiting_time"], [116, 3, 1, "", "get_new_frame"], [116, 3, 1, "", "initialize_image_series"], [116, 3, 1, "", "report_settings"], [116, 3, 1, "", "set_ROI"], [116, 3, 1, "", "set_binning"], [116, 3, 1, "", "set_exposure_time"], [116, 3, 1, "", "set_line_interval"], [116, 3, 1, "", "set_readout_direction"], [116, 3, 1, "", "set_sensor_mode"]], "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController": [[117, 3, 1, "", "__init__"], [117, 3, 1, "", "get_property_value"]], "aslm.model.devices.daq": [[119, 0, 0, "-", "daq_base"], [121, 0, 0, "-", "daq_synthetic"]], "aslm.model.devices.daq.daq_base": [[120, 2, 1, "", "DAQBase"]], "aslm.model.devices.daq.daq_base.DAQBase": [[120, 3, 1, "", "__init__"], [120, 3, 1, "", "calculate_all_waveforms"], [120, 5, 1, "", "configuration"]], "aslm.model.devices.daq.daq_synthetic": [[122, 2, 1, "", "SyntheticDAQ"]], "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ": [[122, 3, 1, "", "__init__"], [122, 3, 1, "", "add_camera"], [122, 3, 1, "", "calculate_all_waveforms"], [122, 3, 1, "", "close_tasks"], [122, 5, 1, "", "configuration"], [122, 3, 1, "", "create_camera_task"], [122, 3, 1, "", "create_galvo_etl_task"], [122, 3, 1, "", "create_master_trigger_task"], [122, 3, 1, "", "prepare_acquisition"], [122, 3, 1, "", "run_acquisition"], [122, 3, 1, "", "start_tasks"], [122, 3, 1, "", "stop_acquisition"], [122, 3, 1, "", "stop_tasks"], [122, 3, 1, "", "write_waveforms_to_tasks"]], "aslm.model.devices.filter_wheel": [[124, 0, 0, "-", "filter_wheel_base"], [126, 0, 0, "-", "filter_wheel_sutter"], [129, 0, 0, "-", "filter_wheel_synthetic"]], "aslm.model.devices.filter_wheel.filter_wheel_base": [[125, 2, 1, "", "FilterWheelBase"]], "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase": [[125, 3, 1, "", "__init__"], [125, 3, 1, "id0", "check_if_filter_in_filter_dictionary"], [125, 5, 1, "", "filter_dictionary"], [125, 5, 1, "", "wheel_position"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter": [[127, 2, 1, "", "SutterFilterWheel"], [128, 5, 1, "", "baudrate"], [128, 1, 1, "", "build_filter_wheel_connection"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel": [[127, 3, 1, "", "__init__"], [127, 5, 1, "", "baudrate"], [127, 3, 1, "id0", "check_if_filter_in_filter_dictionary"], [127, 3, 1, "id1", "close"], [127, 5, 1, "", "comport"], [127, 3, 1, "id2", "filter_change_delay"], [127, 5, 1, "", "filter_dictionary"], [127, 5, 1, "", "number_of_filter_wheels"], [127, 3, 1, "id3", "read"], [127, 3, 1, "", "set_filter"], [127, 5, 1, "", "wheel_position"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic": [[130, 2, 1, "", "SyntheticFilterWheel"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel": [[130, 3, 1, "", "__init__"], [130, 5, 1, "", "baudrate"], [130, 3, 1, "", "check_if_filter_in_filter_dictionary"], [130, 3, 1, "", "close"], [130, 5, 1, "", "comport"], [130, 3, 1, "", "filter_change_delay"], [130, 5, 1, "", "filter_dictionary"], [130, 5, 1, "", "number_of_filter_wheels"], [130, 3, 1, "", "read"], [130, 3, 1, "", "set_filter"], [130, 5, 1, "", "wheel_position"]], "aslm.model.devices.galvo": [[132, 0, 0, "-", "galvo_base"]], "aslm.model.devices.galvo.galvo_base": [[133, 2, 1, "", "GalvoBase"]], "aslm.model.devices.galvo.galvo_base.GalvoBase": [[133, 3, 1, "", "__init__"]], "aslm.model.devices.joystick": [[135, 0, 0, "-", "joystick_base"], [137, 0, 0, "-", "joystick_logitech"], [139, 0, 0, "-", "joystick_synthetic"]], "aslm.model.devices.joystick.joystick_base": [[136, 2, 1, "", "JoystickBase"]], "aslm.model.devices.joystick.joystick_base.JoystickBase": [[136, 3, 1, "", "__init__"]], "aslm.model.devices.joystick.joystick_logitech": [[138, 2, 1, "", "JoystickLogitech"]], "aslm.model.devices.joystick.joystick_logitech.JoystickLogitech": [[138, 3, 1, "", "__init__"], [138, 3, 1, "", "axis_handler"], [138, 5, 1, "", "cfg"], [138, 3, 1, "", "decrease_slider"], [138, 3, 1, "", "mode_handler"]], "aslm.model.devices.joystick.joystick_synthetic": [[140, 2, 1, "", "SyntheticJoystick"]], "aslm.model.devices.joystick.joystick_synthetic.SyntheticJoystick": [[140, 3, 1, "", "__init__"]], "aslm.model.devices.lasers": [[142, 0, 0, "-", "laser_base"], [144, 0, 0, "-", "laser_synthetic"], [146, 0, 0, "-", "laser_trigger_base"], [148, 0, 0, "-", "laser_trigger_synthetic"]], "aslm.model.devices.lasers.laser_base": [[143, 2, 1, "", "LaserBase"]], "aslm.model.devices.lasers.laser_base.LaserBase": [[143, 3, 1, "", "__init__"], [143, 3, 1, "", "close"], [143, 3, 1, "", "initialize_laser"]], "aslm.model.devices.lasers.laser_synthetic": [[145, 2, 1, "", "SyntheticLaser"]], "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser": [[145, 3, 1, "", "__init__"], [145, 3, 1, "", "close"], [145, 3, 1, "", "initialize_laser"]], "aslm.model.devices.lasers.laser_trigger_base": [[147, 2, 1, "", "LaserTriggerBase"]], "aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase": [[147, 3, 1, "", "__init__"], [147, 3, 1, "", "enable_high_resolution_laser"], [147, 3, 1, "", "enable_low_resolution_laser"], [147, 3, 1, "", "set_laser_analog_voltage"]], "aslm.model.devices.lasers.laser_trigger_synthetic": [[149, 2, 1, "", "SyntheticLaserTriggers"]], "aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers": [[149, 3, 1, "", "__init__"], [149, 3, 1, "", "enable_high_resolution_laser"], [149, 3, 1, "", "enable_low_resolution_laser"], [149, 3, 1, "", "set_laser_analog_voltage"]], "aslm.model.devices.objectives": [[151, 2, 1, "", "Objective"]], "aslm.model.devices.objectives.Objective": [[151, 3, 1, "", "__init__"], [151, 3, 1, "", "calculate_entrance_pupil"]], "aslm.model.devices.remote_focus": [[153, 0, 0, "-", "remote_focus_base"], [155, 0, 0, "-", "remote_focus_equipment_solutions"]], "aslm.model.devices.remote_focus.remote_focus_base": [[154, 2, 1, "", "RemoteFocusBase"]], "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase": [[154, 3, 1, "", "__init__"]], "aslm.model.devices.remote_focus.remote_focus_equipment_solutions": [[156, 2, 1, "", "RemoteFocusEquipmentSolutions"]], "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions": [[156, 3, 1, "", "__init__"], [156, 5, 1, "", "baud_rate"], [156, 5, 1, "", "byte_size"], [156, 3, 1, "id0", "close_connection"], [156, 5, 1, "", "comport"], [156, 5, 1, "", "debug"], [156, 5, 1, "", "parity"], [156, 3, 1, "id1", "read_bytes"], [156, 5, 1, "", "read_on_init"], [156, 3, 1, "id2", "send_command"], [156, 5, 1, "", "stop_bits"], [156, 5, 1, "", "timeout"]], "aslm.model.devices.shutter": [[158, 0, 0, "-", "laser_shutter_base"], [160, 0, 0, "-", "laser_shutter_synthetic"]], "aslm.model.devices.shutter.laser_shutter_base": [[159, 2, 1, "", "ShutterBase"]], "aslm.model.devices.shutter.laser_shutter_base.ShutterBase": [[159, 3, 1, "", "__init__"], [159, 5, 1, "", "configuration"], [159, 5, 1, "", "device_connection"], [159, 5, 1, "", "microscope_name"]], "aslm.model.devices.shutter.laser_shutter_synthetic": [[161, 2, 1, "", "SyntheticShutter"]], "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter": [[161, 3, 1, "", "__init__"], [161, 3, 1, "", "close_shutters"], [161, 5, 1, "", "configuration"], [161, 5, 1, "", "device_connection"], [161, 5, 1, "", "microscope_name"], [161, 3, 1, "", "open_left"], [161, 3, 1, "", "open_right"], [161, 3, 1, "", "state"]], "aslm.model.devices.stages": [[163, 0, 0, "-", "stage_asi"], [166, 0, 0, "-", "stage_base"], [168, 0, 0, "-", "stage_galvo"], [170, 0, 0, "-", "stage_mcl"], [173, 0, 0, "-", "stage_pi"], [176, 0, 0, "-", "stage_sutter"], [179, 0, 0, "-", "stage_synthetic"], [181, 0, 0, "-", "stage_tl_kcube_inertial"]], "aslm.model.devices.stages.stage_asi": [[164, 2, 1, "", "ASIStage"], [165, 1, 1, "", "build_ASI_Stage_connection"]], "aslm.model.devices.stages.stage_asi.ASIStage": [[164, 3, 1, "", "__init__"], [164, 3, 1, "", "create_position_dict"], [164, 3, 1, "", "get_abs_position"], [164, 3, 1, "", "move_absolute"], [164, 3, 1, "", "move_axis_absolute"], [164, 3, 1, "", "report_position"], [164, 3, 1, "", "stop"]], "aslm.model.devices.stages.stage_base": [[167, 2, 1, "", "StageBase"]], "aslm.model.devices.stages.stage_base.StageBase": [[167, 3, 1, "", "__init__"], [167, 3, 1, "id0", "create_position_dict"], [167, 5, 1, "", "f_max"], [167, 5, 1, "", "f_min"], [167, 5, 1, "", "f_pos"], [167, 3, 1, "id1", "get_abs_position"], [167, 5, 1, "", "position_dict"], [167, 3, 1, "id2", "stop"], [167, 5, 1, "", "theta_max"], [167, 5, 1, "", "theta_min"], [167, 5, 1, "", "theta_pos"], [167, 5, 1, "", "x_max"], [167, 5, 1, "", "x_min"], [167, 5, 1, "", "x_pos"], [167, 5, 1, "", "y_max"], [167, 5, 1, "", "y_min"], [167, 5, 1, "", "y_pos"], [167, 5, 1, "", "z_max"], [167, 5, 1, "", "z_min"], [167, 5, 1, "", "z_pos"]], "aslm.model.devices.stages.stage_galvo": [[169, 2, 1, "", "GalvoNIStage"]], "aslm.model.devices.stages.stage_galvo.GalvoNIStage": [[169, 3, 1, "", "__init__"], [169, 3, 1, "id0", "create_position_dict"], [169, 3, 1, "id1", "get_abs_position"], [169, 3, 1, "", "move_absolute"], [169, 3, 1, "", "move_axis_absolute"], [169, 3, 1, "", "report_position"], [169, 3, 1, "id2", "stop"]], "aslm.model.devices.stages.stage_mcl": [[171, 2, 1, "", "MCLStage"], [172, 1, 1, "", "build_MCLStage_connection"]], "aslm.model.devices.stages.stage_mcl.MCLStage": [[171, 3, 1, "", "__init__"], [171, 3, 1, "", "create_position_dict"], [171, 3, 1, "", "get_abs_position"], [171, 3, 1, "", "move_absolute"], [171, 3, 1, "", "move_axis_absolute"], [171, 3, 1, "", "report_position"], [171, 3, 1, "", "stop"]], "aslm.model.devices.stages.stage_pi": [[174, 2, 1, "", "PIStage"], [175, 1, 1, "", "build_PIStage_connection"]], "aslm.model.devices.stages.stage_pi.PIStage": [[174, 3, 1, "", "__init__"], [174, 3, 1, "id0", "create_position_dict"], [174, 5, 1, "", "f_max"], [174, 5, 1, "", "f_min"], [174, 5, 1, "", "f_pos"], [174, 3, 1, "id1", "get_abs_position"], [174, 3, 1, "", "move_absolute"], [174, 3, 1, "", "move_axis_absolute"], [174, 5, 1, "", "position_dict"], [174, 3, 1, "", "report_position"], [174, 3, 1, "id2", "stop"], [174, 5, 1, "", "theta_max"], [174, 5, 1, "", "theta_min"], [174, 5, 1, "", "theta_pos"], [174, 5, 1, "", "x_max"], [174, 5, 1, "", "x_min"], [174, 5, 1, "", "x_pos"], [174, 5, 1, "", "y_max"], [174, 5, 1, "", "y_min"], [174, 5, 1, "", "y_pos"], [174, 5, 1, "", "z_max"], [174, 5, 1, "", "z_min"], [174, 5, 1, "", "z_pos"]], "aslm.model.devices.stages.stage_sutter": [[177, 2, 1, "", "SutterStage"], [178, 5, 1, "", "baudrate"], [178, 1, 1, "", "build_sutter_stage_connection"], [178, 5, 1, "", "comport"]], "aslm.model.devices.stages.stage_sutter.SutterStage": [[177, 3, 1, "", "__init__"], [177, 5, 1, "", "baudrate"], [177, 3, 1, "", "check_byte_order"], [177, 3, 1, "id0", "close"], [177, 5, 1, "", "comport"], [177, 3, 1, "", "convert_microns_to_microsteps"], [177, 3, 1, "", "convert_microsteps_to_microns"], [177, 3, 1, "", "create_position_dict"], [177, 5, 1, "", "filter_dictionary"], [177, 3, 1, "", "flush_buffers"], [177, 3, 1, "", "get_abs_position"], [177, 3, 1, "", "move_absolute"], [177, 3, 1, "", "move_axis_absolute"], [177, 3, 1, "", "read"], [177, 3, 1, "", "report_position"], [177, 3, 1, "", "set_stage_speed_and_resolution"], [177, 3, 1, "", "stop"]], "aslm.model.devices.stages.stage_synthetic": [[180, 2, 1, "", "SyntheticStage"]], "aslm.model.devices.stages.stage_synthetic.SyntheticStage": [[180, 3, 1, "", "__init__"], [180, 3, 1, "", "create_position_dict"], [180, 3, 1, "", "get_abs_position"], [180, 3, 1, "", "move_absolute"], [180, 3, 1, "", "move_axis_absolute"], [180, 3, 1, "", "stop"]], "aslm.model.devices.stages.stage_tl_kcube_inertial": [[182, 2, 1, "", "TLKIMStage"], [183, 1, 1, "", "build_TLKIMStage_connection"]], "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage": [[182, 3, 1, "", "__init__"], [182, 3, 1, "", "create_position_dict"], [182, 3, 1, "", "get_abs_position"], [182, 3, 1, "", "move_absolute"], [182, 3, 1, "", "move_axis_absolute"], [182, 3, 1, "", "report_position"], [182, 3, 1, "", "stop"]], "aslm.model.devices.zoom": [[185, 0, 0, "-", "zoom_base"], [187, 0, 0, "-", "zoom_synthetic"]], "aslm.model.devices.zoom.zoom_base": [[186, 2, 1, "", "ZoomBase"]], "aslm.model.devices.zoom.zoom_base.ZoomBase": [[186, 3, 1, "", "__init__"], [186, 3, 1, "", "move"], [186, 3, 1, "", "read_position"], [186, 3, 1, "", "set_zoom"]], "aslm.model.devices.zoom.zoom_synthetic": [[188, 2, 1, "", "SyntheticZoom"]], "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom": [[188, 3, 1, "", "__init__"], [188, 3, 1, "id0", "move"], [188, 3, 1, "id1", "read_position"], [188, 3, 1, "id2", "set_zoom"]], "aslm.model.dummy": [[190, 2, 1, "", "DummyDevice"], [191, 2, 1, "", "DummyModel"]], "aslm.model.dummy.DummyDevice": [[190, 3, 1, "", "__init__"]], "aslm.model.dummy.DummyModel": [[191, 3, 1, "", "__init__"]], "aslm.model.features": [[193, 0, 0, "-", "autofocus"], [195, 0, 0, "-", "common_features"], [203, 0, 0, "-", "dummy_detective"], [205, 0, 0, "-", "feature_container"], [216, 0, 0, "-", "image_writer"], [218, 0, 0, "-", "restful_features"], [221, 0, 0, "-", "volume_search"]], "aslm.model.features.autofocus": [[194, 2, 1, "", "Autofocus"]], "aslm.model.features.autofocus.Autofocus": [[194, 3, 1, "", "__init__"], [194, 3, 1, "", "get_autofocus_frame_num"], [194, 3, 1, "", "get_steps"], [194, 3, 1, "", "run"]], "aslm.model.features.common_features": [[196, 2, 1, "", "ChangeResolution"], [197, 2, 1, "", "FindTissueSimple2D"], [198, 2, 1, "", "LoopByCount"], [199, 2, 1, "", "PrepareNextChannel"], [200, 2, 1, "", "Snap"], [201, 2, 1, "", "WaitToContinue"], [202, 2, 1, "", "ZStackAcquisition"]], "aslm.model.features.common_features.ChangeResolution": [[196, 3, 1, "", "__init__"]], "aslm.model.features.common_features.FindTissueSimple2D": [[197, 3, 1, "", "__init__"]], "aslm.model.features.common_features.LoopByCount": [[198, 3, 1, "", "__init__"]], "aslm.model.features.common_features.PrepareNextChannel": [[199, 3, 1, "", "__init__"]], "aslm.model.features.common_features.Snap": [[200, 3, 1, "", "__init__"]], "aslm.model.features.common_features.WaitToContinue": [[201, 3, 1, "", "__init__"]], "aslm.model.features.common_features.ZStackAcquisition": [[202, 3, 1, "", "__init__"]], "aslm.model.features.dummy_detective": [[204, 2, 1, "", "Dummy_Detective"]], "aslm.model.features.dummy_detective.Dummy_Detective": [[204, 3, 1, "", "__init__"]], "aslm.model.features.feature_container": [[206, 2, 1, "", "Container"], [207, 2, 1, "", "DataContainer"], [208, 2, 1, "", "DataNode"], [209, 2, 1, "", "SignalContainer"], [210, 2, 1, "", "SignalNode"], [211, 2, 1, "", "TreeNode"], [212, 1, 1, "", "dummy_True"], [213, 1, 1, "", "dummy_func"], [214, 1, 1, "", "get_registered_funcs"], [215, 1, 1, "", "load_features"]], "aslm.model.features.feature_container.Container": [[206, 3, 1, "", "__init__"]], "aslm.model.features.feature_container.DataContainer": [[207, 3, 1, "", "__init__"]], "aslm.model.features.feature_container.DataNode": [[208, 3, 1, "", "__init__"]], "aslm.model.features.feature_container.SignalContainer": [[209, 3, 1, "", "__init__"]], "aslm.model.features.feature_container.SignalNode": [[210, 3, 1, "", "__init__"]], "aslm.model.features.feature_container.TreeNode": [[211, 3, 1, "", "__init__"]], "aslm.model.features.image_writer": [[217, 2, 1, "", "ImageWriter"]], "aslm.model.features.image_writer.ImageWriter": [[217, 3, 1, "", "__init__"], [217, 3, 1, "", "close"], [217, 3, 1, "", "generate_image_name"], [217, 3, 1, "", "save_image"]], "aslm.model.features.restful_features": [[219, 2, 1, "", "IlastikSegmentation"], [220, 1, 1, "", "prepare_service"]], "aslm.model.features.restful_features.IlastikSegmentation": [[219, 3, 1, "", "__init__"]], "aslm.model.features.volume_search": [[222, 2, 1, "", "VolumeSearch"]], "aslm.model.features.volume_search.VolumeSearch": [[222, 3, 1, "", "__init__"]], "aslm.model.metadata_sources": [[224, 0, 0, "-", "bdv_metadata"], [226, 0, 0, "-", "metadata"], [229, 0, 0, "-", "ome_tiff_metadata"]], "aslm.model.metadata_sources.bdv_metadata": [[225, 2, 1, "", "BigDataViewerMetadata"]], "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata": [[225, 3, 1, "", "__init__"], [225, 3, 1, "", "parse_bdv_xml"], [225, 4, 1, "", "shape"], [225, 3, 1, "", "stage_positions_to_affine_matrix"], [225, 3, 1, "", "to_xml"], [225, 4, 1, "", "voxel_size"], [225, 3, 1, "", "write_xml"]], "aslm.model.metadata_sources.metadata": [[227, 2, 1, "", "Metadata"], [228, 2, 1, "", "XMLMetadata"]], "aslm.model.metadata_sources.metadata.Metadata": [[227, 3, 1, "", "__init__"], [227, 4, 1, "", "shape"], [227, 4, 1, "", "voxel_size"]], "aslm.model.metadata_sources.metadata.XMLMetadata": [[228, 3, 1, "", "__init__"], [228, 4, 1, "", "shape"], [228, 3, 1, "", "to_xml"], [228, 4, 1, "", "voxel_size"], [228, 3, 1, "", "write_xml"]], "aslm.model.metadata_sources.ome_tiff_metadata": [[230, 2, 1, "", "OMETIFFMetadata"]], "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata": [[230, 3, 1, "", "__init__"], [230, 3, 1, "", "ome_tiff_xml_dict"], [230, 4, 1, "", "shape"], [230, 3, 1, "", "to_xml"], [230, 4, 1, "", "voxel_size"], [230, 3, 1, "", "write_xml"]], "aslm.model.microscope": [[232, 2, 1, "", "Microscope"]], "aslm.model.microscope.Microscope": [[232, 3, 1, "", "__init__"], [232, 3, 1, "", "get_readout_time"]], "aslm.model.model": [[234, 2, 1, "", "Model"]], "aslm.model.model.Model": [[234, 5, 1, "", "USE_GPU"], [234, 3, 1, "", "__init__"], [234, 5, 1, "", "args"], [234, 3, 1, "", "change_resolution"], [234, 5, 1, "", "configuration_path"], [234, 3, 1, "id0", "create_pipe"], [234, 3, 1, "id1", "end_acquisition"], [234, 5, 1, "", "event_queue"], [234, 5, 1, "", "experiment_path"], [234, 3, 1, "id2", "get_data_buffer"], [234, 3, 1, "", "get_readout_time"], [234, 3, 1, "", "get_stage_position"], [234, 3, 1, "", "load_images"], [234, 3, 1, "id3", "move_stage"], [234, 3, 1, "id4", "prepare_acquisition"], [234, 3, 1, "id5", "release_pipe"], [234, 3, 1, "", "run_acquisition"], [234, 3, 1, "id6", "run_command"], [234, 3, 1, "id7", "run_data_process"], [234, 3, 1, "id8", "run_live_acquisition"], [234, 3, 1, "", "run_single_acquisition"], [234, 3, 1, "", "run_single_channel_acquisition"], [234, 3, 1, "", "run_single_channel_acquisition_with_features"], [234, 3, 1, "", "run_z_stack_acquisition"], [234, 3, 1, "id9", "snap_image"], [234, 3, 1, "", "stop_stage"], [234, 3, 1, "id10", "update_data_buffer"]], "aslm.model.waveforms": [[236, 1, 1, "", "camera_exposure"], [237, 1, 1, "", "dc_value"], [238, 1, 1, "", "sawtooth"], [239, 1, 1, "", "sine_wave"], [240, 1, 1, "", "single_pulse"], [241, 1, 1, "", "smooth_waveform"], [242, 1, 1, "", "square"], [243, 1, 1, "", "tunable_lens_ramp"]], "aslm.tools": [[245, 0, 0, "-", "beams"], [249, 0, 0, "-", "common_dict_tools"], [252, 0, 0, "-", "common_functions"], [256, 0, 0, "-", "decorators"], [258, 0, 0, "-", "file_functions"], [261, 0, 0, "-", "image"], [263, 0, 0, "-", "image_loaders"], [265, 0, 0, "-", "main_functions"], [269, 0, 0, "-", "multipos_table_tools"], [274, 0, 0, "-", "project_stats"], [276, 0, 0, "-", "xml_tools"]], "aslm.tools.beams": [[246, 1, 1, "", "fit_gaussian_beam_error"], [247, 1, 1, "", "fit_gaussian_beam_mse"], [248, 1, 1, "", "gaussian_beam"]], "aslm.tools.common_dict_tools": [[250, 1, 1, "", "update_settings_common"], [251, 1, 1, "", "update_stage_dict"]], "aslm.tools.common_functions": [[253, 1, 1, "", "build_ref_name"], [254, 1, 1, "", "combine_funcs"], [255, 1, 1, "", "copy_proxy_object"]], "aslm.tools.decorators": [[257, 1, 1, "", "function_timer"]], "aslm.tools.file_functions": [[259, 1, 1, "", "create_save_path"], [260, 1, 1, "", "save_yaml_file"]], "aslm.tools.image": [[262, 1, 1, "", "text_array"]], "aslm.tools.image_loaders": [[264, 2, 1, "", "LazyTiff"]], "aslm.tools.image_loaders.LazyTiff": [[264, 3, 1, "", "__init__"]], "aslm.tools.main_functions": [[266, 1, 1, "", "create_parser"], [267, 1, 1, "", "evaluate_parser_input_arguments"], [268, 1, 1, "", "identify_gpu"]], "aslm.tools.multipos_table_tools": [[270, 1, 1, "", "calc_num_tiles"], [271, 1, 1, "", "compute_tiles_from_bounding_box"], [272, 1, 1, "", "sign"], [273, 1, 1, "", "update_table"]], "aslm.tools.project_stats": [[275, 1, 1, "", "countlines"]], "aslm.tools.xml_tools": [[277, 1, 1, "", "dict_to_xml"], [278, 1, 1, "", "parse_xml"]], "aslm.view": [[280, 0, 0, "-", "main_window_content"], [286, 0, 0, "-", "menus"]], "aslm.view.main_window_content": [[281, 0, 0, "-", "acquire_bar_frame"], [282, 0, 0, "-", "channel_settings"], [284, 0, 0, "-", "stage_control"]], "aslm.view.main_window_content.channel_settings": [[283, 0, 0, "-", "channel_settings_frames"]], "aslm.view.main_window_content.stage_control": [[285, 0, 0, "-", "stage_control_frames"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:property", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"aslm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 290, 292, 293, 295], "config": [0, 1, 2, 3, 4, 5, 6], "build_nested_dict": 2, "get_aslm_path": 3, "get_configuration_path": 4, "load_config": 5, "update_config_dict": 6, "control": [7, 8, 9, 10, 11, 12, 13], "configuration_control": [8, 9], "configurationcontrol": 9, "thread_pool": [10, 11, 12, 13], "selflockthread": 11, "synchronizedthreadpool": 12, "threadwaitlist": 13, "model": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "analysi": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55], "boundary_detect": [16, 17, 18, 19, 20], "binary_detect": 17, "find_tissue_boundary_2d": 18, "has_tissu": 19, "map_boundari": 20, "camera": [21, 22, 23, 24, 25, 110, 111, 112, 113, 114, 115, 116, 117, 294], "compute_flatfield_map": 22, "compute_noise_sigma": 23, "compute_scmos_offset_and_variance_map": 24, "compute_signal_to_nois": 25, "detect": [26, 27, 28, 29, 30, 31, 32, 33, 34, 35], "add_median_bord": 27, "combine_imag": 28, "log_detect": 29, "make_inside_imag": 30, "make_normalized_imag": 31, "make_sphere_3d": 32, "multiscale_surface_filter_3d": 33, "surface_filter_gauss_3d": 34, "three_level_segment": 35, "image_contrast": [36, 37, 38, 39, 40, 41], "estimate_and_correct_flatfield": 37, "estimate_image_resolut": 38, "fast_normalized_dct_shannon_entropi": 39, "image_intens": 40, "normalized_dct_shannon_entropi": 41, "image_decorrel": [42, 43, 44, 45, 46, 47, 48, 49, 50], "apodize_imag": 43, "get_correlation_coeffici": 44, "get_decorrelation_local_maxima": 45, "get_image_decorrel": 46, "get_radial_averag": 47, "image_to_polar": 48, "linear_map": 49, "main_image_decorr": 50, "image_transform": [51, 52, 53], "deskew_imag": 52, "initiate_gpu": 53, "spectral_unmix": [54, 55], "to_do": 55, "concurr": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "concurrency_tool": [57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "custodythread": 58, "fancythread": 59, "mytestclass": 60, "objectinsubprocess": 61, "politethread": 62, "resultthread": 63, "sharedndarrai": 64, "testobjectinsubprocess": 65, "testresultthreadandcustodythread": 66, "testsharedndarrai": 67, "proxy_object": [68, 69, 70, 71, 72], "proxymanag": 69, "proxyobject": 70, "launch_custody_thread": 71, "launch_thread": 72, "shared_memori": 73, "write_paramet": [74, 75], "write_param": 75, "data_sourc": [76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "bdv_data_sourc": [77, 78], "bigdataviewerdatasourc": 78, "datasourc": 80, "get_data_sourc": 81, "tiff_data_sourc": [82, 83], "tiffdatasourc": 83, "zarr_data_sourc": [84, 85], "zarrdatasourc": 85, "device_startup_funct": [86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "dummydeviceconnect": 87, "auto_redi": 88, "device_not_found": 89, "load_camera_connect": 90, "load_devic": 91, "load_filter_wheel_connect": 92, "load_stag": 93, "load_zoom_connect": 94, "start_camera": 95, "start_daq": 96, "start_filter_wheel": 97, "start_galvo": 98, "start_las": 99, "start_remote_focus_devic": 100, "start_shutt": 101, "start_stag": 102, "start_zoom": 103, "devic": [104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188], "api": [105, 106, 107, 108, 109, 289], "coher": 106, "dynamixel": 107, "logitech": 108, "omicron": 109, "camera_bas": [111, 112], "camerabas": 112, "camera_hamamatsu": [113, 114], "hamamatsuorca": 114, "camera_synthet": [115, 116, 117], "syntheticcamera": 116, "syntheticcameracontrol": 117, "daq": [118, 119, 120, 121, 122], "daq_bas": [119, 120], "daqbas": 120, "daq_synthet": [121, 122], "syntheticdaq": 122, "filter_wheel": [123, 124, 125, 126, 127, 128, 129, 130], "filter_wheel_bas": [124, 125], "filterwheelbas": 125, "filter_wheel_sutt": [126, 127, 128], "sutterfilterwheel": 127, "build_filter_wheel_connect": 128, "filter_wheel_synthet": [129, 130], "syntheticfilterwheel": 130, "galvo": [131, 132, 133], "galvo_bas": [132, 133], "galvobas": 133, "joystick": [134, 135, 136, 137, 138, 139, 140], "joystick_bas": [135, 136], "joystickbas": 136, "joystick_logitech": [137, 138], "joysticklogitech": 138, "joystick_synthet": [139, 140], "syntheticjoystick": 140, "laser": [141, 142, 143, 144, 145, 146, 147, 148, 149], "laser_bas": [142, 143], "laserbas": 143, "laser_synthet": [144, 145], "syntheticlas": 145, "laser_trigger_bas": [146, 147], "lasertriggerbas": 147, "laser_trigger_synthet": [148, 149], "syntheticlasertrigg": 149, "object": [150, 151, 292], "remote_focu": [152, 153, 154, 155, 156], "remote_focus_bas": [153, 154], "remotefocusbas": 154, "remote_focus_equipment_solut": [155, 156], "remotefocusequipmentsolut": 156, "shutter": [157, 158, 159, 160, 161], "laser_shutter_bas": [158, 159], "shutterbas": 159, "laser_shutter_synthet": [160, 161], "syntheticshutt": 161, "stage": [162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 294], "stage_asi": [163, 164, 165], "asistag": 164, "build_asi_stage_connect": 165, "stage_bas": [166, 167], "stagebas": 167, "stage_galvo": [168, 169], "galvonistag": 169, "stage_mcl": [170, 171, 172], "mclstage": 171, "build_mclstage_connect": 172, "stage_pi": [173, 174, 175], "pistag": 174, "build_pistage_connect": 175, "stage_sutt": [176, 177, 178], "sutterstag": 177, "build_sutter_stage_connect": 178, "stage_synthet": [179, 180], "syntheticstag": 180, "stage_tl_kcube_inerti": [181, 182, 183], "tlkimstag": 182, "build_tlkimstage_connect": 183, "zoom": [184, 185, 186, 187, 188], "zoom_bas": [185, 186], "zoombas": 186, "zoom_synthet": [187, 188], "syntheticzoom": 188, "dummi": [189, 190, 191], "dummydevic": 190, "dummymodel": 191, "featur": [192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 292], "autofocu": [193, 194], "common_featur": [195, 196, 197, 198, 199, 200, 201, 202], "changeresolut": 196, "findtissuesimple2d": 197, "loopbycount": 198, "preparenextchannel": 199, "snap": 200, "waittocontinu": 201, "zstackacquisit": 202, "dummy_detect": [203, 204], "feature_contain": [205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215], "contain": [206, 292], "datacontain": 207, "datanod": 208, "signalcontain": 209, "signalnod": 210, "treenod": 211, "dummy_tru": 212, "dummy_func": 213, "get_registered_func": 214, "load_featur": 215, "image_writ": [216, 217], "imagewrit": 217, "restful_featur": [218, 219, 220], "ilastiksegment": 219, "prepare_servic": 220, "volume_search": [221, 222], "volumesearch": 222, "metadata_sourc": [223, 224, 225, 226, 227, 228, 229, 230], "bdv_metadata": [224, 225], "bigdataviewermetadata": 225, "metadata": [226, 227, 228], "xmlmetadata": 228, "ome_tiff_metadata": [229, 230], "ometiffmetadata": 230, "microscop": [231, 232, 290, 295], "waveform": [235, 236, 237, 238, 239, 240, 241, 242, 243], "camera_exposur": 236, "dc_valu": 237, "sawtooth": 238, "sine_wav": 239, "single_puls": 240, "smooth_waveform": 241, "squar": 242, "tunable_lens_ramp": 243, "tool": [244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278], "beam": [245, 246, 247, 248], "fit_gaussian_beam_error": 246, "fit_gaussian_beam_ms": 247, "gaussian_beam": 248, "common_dict_tool": [249, 250, 251], "update_settings_common": 250, "update_stage_dict": 251, "common_funct": [252, 253, 254, 255], "build_ref_nam": 253, "combine_func": 254, "copy_proxy_object": 255, "decor": [256, 257], "function_tim": 257, "file_funct": [258, 259, 260], "create_save_path": 259, "save_yaml_fil": 260, "imag": [261, 262], "text_arrai": 262, "image_load": [263, 264], "lazytiff": 264, "main_funct": [265, 266, 267, 268], "create_pars": 266, "evaluate_parser_input_argu": 267, "identify_gpu": 268, "multipos_table_tool": [269, 270, 271, 272, 273], "calc_num_til": 270, "compute_tiles_from_bounding_box": 271, "sign": 272, "update_t": 273, "project_stat": [274, 275], "countlin": 275, "xml_tool": [276, 277, 278], "dict_to_xml": 277, "parse_xml": 278, "view": [279, 280, 281, 282, 283, 284, 285, 286], "main_window_cont": [280, 281, 282, 283, 284, 285], "acquire_bar_fram": 281, "channel_set": [282, 283], "channel_settings_fram": 283, "stage_control": [284, 285], "stage_control_fram": 285, "menu": 286, "refer": 289, "configur": [290, 294], "yaml": 290, "hardwar": [290, 294], "section": 290, "gui": 290, "contribut": 291, "guidelin": 291, "gener": 291, "principl": 291, "code": 291, "style": 291, "unit": 291, "test": 291, "scientif": 291, "The": 292, "write": 292, "custom": 292, "extend": 293, "setup": [294, 297], "file": 294, "data": 294, "acquisit": 294, "card": 294, "wire": 294, "hamamatsu": 294, "photometr": 294, "voicecoil": 294, "equip": 294, "solut": 294, "asi": 294, "implement": 295, "multiscal": 295, "upright": 295, "ct": 295, "v2": 295, "opm": 295, "autonom": 296, "softwar": [296, 297], "light": 296, "microscopi": 296, "content": 296, "index": 296, "search": 296, "instal": 297, "download": 297, "git": 297, "your": 297, "python": 297, "environ": 297, "gpu": 297, "depend": 297, "troubleshoot": 297, "user": 298, "guid": 298}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"aslm.config": [[0, "module-aslm.config"]], "aslm.config.config": [[1, "module-aslm.config.config"]], "aslm.config.config.build_nested_dict": [[2, "aslm-config-config-build-nested-dict"]], "aslm.config.config.get_aslm_path": [[3, "aslm-config-config-get-aslm-path"]], "aslm.config.config.get_configuration_paths": [[4, "aslm-config-config-get-configuration-paths"]], "aslm.config.config.load_configs": [[5, "aslm-config-config-load-configs"]], "aslm.config.config.update_config_dict": [[6, "aslm-config-config-update-config-dict"]], "aslm.controller": [[7, "module-aslm.controller"]], "aslm.controller.configuration_controller": [[8, "module-aslm.controller.configuration_controller"]], "aslm.controller.configuration_controller.ConfigurationController": [[9, "aslm-controller-configuration-controller-configurationcontroller"]], "aslm.controller.thread_pool": [[10, "module-aslm.controller.thread_pool"]], "aslm.controller.thread_pool.SelfLockThread": [[11, "aslm-controller-thread-pool-selflockthread"]], "aslm.controller.thread_pool.SynchronizedThreadPool": [[12, "aslm-controller-thread-pool-synchronizedthreadpool"]], "aslm.controller.thread_pool.ThreadWaitlist": [[13, "aslm-controller-thread-pool-threadwaitlist"]], "aslm.model": [[14, "module-aslm.model"]], "aslm.model.analysis": [[15, "module-aslm.model.analysis"]], "aslm.model.analysis.boundary_detect": [[16, "module-aslm.model.analysis.boundary_detect"]], "aslm.model.analysis.boundary_detect.binary_detect": [[17, "aslm-model-analysis-boundary-detect-binary-detect"]], "aslm.model.analysis.boundary_detect.find_tissue_boundary_2d": [[18, "aslm-model-analysis-boundary-detect-find-tissue-boundary-2d"]], "aslm.model.analysis.boundary_detect.has_tissue": [[19, "aslm-model-analysis-boundary-detect-has-tissue"]], "aslm.model.analysis.boundary_detect.map_boundary": [[20, "aslm-model-analysis-boundary-detect-map-boundary"]], "aslm.model.analysis.camera": [[21, "module-aslm.model.analysis.camera"]], "aslm.model.analysis.camera.compute_flatfield_map": [[22, "aslm-model-analysis-camera-compute-flatfield-map"]], "aslm.model.analysis.camera.compute_noise_sigma": [[23, "aslm-model-analysis-camera-compute-noise-sigma"]], "aslm.model.analysis.camera.compute_scmos_offset_and_variance_map": [[24, "aslm-model-analysis-camera-compute-scmos-offset-and-variance-map"]], "aslm.model.analysis.camera.compute_signal_to_noise": [[25, "aslm-model-analysis-camera-compute-signal-to-noise"]], "aslm.model.analysis.detection": [[26, "module-aslm.model.analysis.detection"]], "aslm.model.analysis.detection.add_median_border": [[27, "aslm-model-analysis-detection-add-median-border"]], "aslm.model.analysis.detection.combine_images": [[28, "aslm-model-analysis-detection-combine-images"]], "aslm.model.analysis.detection.log_detection": [[29, "aslm-model-analysis-detection-log-detection"]], "aslm.model.analysis.detection.make_inside_image": [[30, "aslm-model-analysis-detection-make-inside-image"]], "aslm.model.analysis.detection.make_normalized_image": [[31, "aslm-model-analysis-detection-make-normalized-image"]], "aslm.model.analysis.detection.make_sphere_3D": [[32, "aslm-model-analysis-detection-make-sphere-3d"]], "aslm.model.analysis.detection.multiscale_surface_filter_3D": [[33, "aslm-model-analysis-detection-multiscale-surface-filter-3d"]], "aslm.model.analysis.detection.surface_filter_gauss_3D": [[34, "aslm-model-analysis-detection-surface-filter-gauss-3d"]], "aslm.model.analysis.detection.three_level_segmentation": [[35, "aslm-model-analysis-detection-three-level-segmentation"]], "aslm.model.analysis.image_contrast": [[36, "module-aslm.model.analysis.image_contrast"]], "aslm.model.analysis.image_contrast.estimate_and_correct_flatfield": [[37, "aslm-model-analysis-image-contrast-estimate-and-correct-flatfield"]], "aslm.model.analysis.image_contrast.estimate_image_resolution": [[38, "aslm-model-analysis-image-contrast-estimate-image-resolution"]], "aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy": [[39, "aslm-model-analysis-image-contrast-fast-normalized-dct-shannon-entropy"]], "aslm.model.analysis.image_contrast.image_intensity": [[40, "aslm-model-analysis-image-contrast-image-intensity"]], "aslm.model.analysis.image_contrast.normalized_dct_shannon_entropy": [[41, "aslm-model-analysis-image-contrast-normalized-dct-shannon-entropy"]], "aslm.model.analysis.image_decorrelation": [[42, "module-aslm.model.analysis.image_decorrelation"]], "aslm.model.analysis.image_decorrelation.apodize_image": [[43, "aslm-model-analysis-image-decorrelation-apodize-image"]], "aslm.model.analysis.image_decorrelation.get_correlation_coefficient": [[44, "aslm-model-analysis-image-decorrelation-get-correlation-coefficient"]], "aslm.model.analysis.image_decorrelation.get_decorrelation_local_maxima": [[45, "aslm-model-analysis-image-decorrelation-get-decorrelation-local-maxima"]], "aslm.model.analysis.image_decorrelation.get_image_decorrelation": [[46, "aslm-model-analysis-image-decorrelation-get-image-decorrelation"]], "aslm.model.analysis.image_decorrelation.get_radial_average": [[47, "aslm-model-analysis-image-decorrelation-get-radial-average"]], "aslm.model.analysis.image_decorrelation.image_to_polar": [[48, "aslm-model-analysis-image-decorrelation-image-to-polar"]], "aslm.model.analysis.image_decorrelation.linear_map": [[49, "aslm-model-analysis-image-decorrelation-linear-map"]], "aslm.model.analysis.image_decorrelation.main_image_decorr": [[50, "aslm-model-analysis-image-decorrelation-main-image-decorr"]], "aslm.model.analysis.image_transform": [[51, "module-aslm.model.analysis.image_transform"]], "aslm.model.analysis.image_transform.deskew_image": [[52, "aslm-model-analysis-image-transform-deskew-image"]], "aslm.model.analysis.image_transform.initiate_gpu": [[53, "aslm-model-analysis-image-transform-initiate-gpu"]], "aslm.model.analysis.spectral_unmixing": [[54, "module-aslm.model.analysis.spectral_unmixing"]], "aslm.model.analysis.spectral_unmixing.to_do": [[55, "aslm-model-analysis-spectral-unmixing-to-do"]], "aslm.model.concurrency": [[56, "module-aslm.model.concurrency"]], "aslm.model.concurrency.concurrency_tools": [[57, "module-aslm.model.concurrency.concurrency_tools"]], "aslm.model.concurrency.concurrency_tools.CustodyThread": [[58, "aslm-model-concurrency-concurrency-tools-custodythread"]], "aslm.model.concurrency.concurrency_tools.FancyThread": [[59, "aslm-model-concurrency-concurrency-tools-fancythread"]], "aslm.model.concurrency.concurrency_tools.MyTestClass": [[60, "aslm-model-concurrency-concurrency-tools-mytestclass"]], "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess": [[61, "aslm-model-concurrency-concurrency-tools-objectinsubprocess"]], "aslm.model.concurrency.concurrency_tools.PoliteThread": [[62, "aslm-model-concurrency-concurrency-tools-politethread"]], "aslm.model.concurrency.concurrency_tools.ResultThread": [[63, "aslm-model-concurrency-concurrency-tools-resultthread"]], "aslm.model.concurrency.concurrency_tools.SharedNDArray": [[64, "aslm-model-concurrency-concurrency-tools-sharedndarray"]], "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess": [[65, "aslm-model-concurrency-concurrency-tools-testobjectinsubprocess"]], "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread": [[66, "aslm-model-concurrency-concurrency-tools-testresultthreadandcustodythread"]], "aslm.model.concurrency.concurrency_tools.TestSharedNDArray": [[67, "aslm-model-concurrency-concurrency-tools-testsharedndarray"]], "aslm.model.concurrency.proxy_objects": [[68, "module-aslm.model.concurrency.proxy_objects"]], "aslm.model.concurrency.proxy_objects.ProxyManager": [[69, "aslm-model-concurrency-proxy-objects-proxymanager"]], "aslm.model.concurrency.proxy_objects.ProxyObject": [[70, "aslm-model-concurrency-proxy-objects-proxyobject"]], "aslm.model.concurrency.proxy_objects.launch_custody_thread": [[71, "aslm-model-concurrency-proxy-objects-launch-custody-thread"]], "aslm.model.concurrency.proxy_objects.launch_thread": [[72, "aslm-model-concurrency-proxy-objects-launch-thread"]], "aslm.model.concurrency.shared_memory": [[73, "module-aslm.model.concurrency.shared_memory"]], "aslm.model.concurrency.write_parameters": [[74, "module-aslm.model.concurrency.write_parameters"]], "aslm.model.concurrency.write_parameters.write_Params": [[75, "aslm-model-concurrency-write-parameters-write-params"]], "aslm.model.data_sources": [[76, "module-aslm.model.data_sources"]], "aslm.model.data_sources.bdv_data_source": [[77, "module-aslm.model.data_sources.bdv_data_source"]], "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource": [[78, "aslm-model-data-sources-bdv-data-source-bigdataviewerdatasource"]], "aslm.model.data_sources.data_source": [[79, "module-aslm.model.data_sources.data_source"]], "aslm.model.data_sources.data_source.DataSource": [[80, "aslm-model-data-sources-data-source-datasource"]], "aslm.model.data_sources.get_data_source": [[81, "aslm-model-data-sources-get-data-source"]], "aslm.model.data_sources.tiff_data_source": [[82, "module-aslm.model.data_sources.tiff_data_source"]], "aslm.model.data_sources.tiff_data_source.TiffDataSource": [[83, "aslm-model-data-sources-tiff-data-source-tiffdatasource"]], "aslm.model.data_sources.zarr_data_source": [[84, "module-aslm.model.data_sources.zarr_data_source"]], "aslm.model.data_sources.zarr_data_source.ZarrDataSource": [[85, "aslm-model-data-sources-zarr-data-source-zarrdatasource"]], "aslm.model.device_startup_functions": [[86, "module-aslm.model.device_startup_functions"]], "aslm.model.device_startup_functions.DummyDeviceConnection": [[87, "aslm-model-device-startup-functions-dummydeviceconnection"]], "aslm.model.device_startup_functions.auto_redial": [[88, "aslm-model-device-startup-functions-auto-redial"]], "aslm.model.device_startup_functions.device_not_found": [[89, "aslm-model-device-startup-functions-device-not-found"]], "aslm.model.device_startup_functions.load_camera_connection": [[90, "aslm-model-device-startup-functions-load-camera-connection"]], "aslm.model.device_startup_functions.load_devices": [[91, "aslm-model-device-startup-functions-load-devices"]], "aslm.model.device_startup_functions.load_filter_wheel_connection": [[92, "aslm-model-device-startup-functions-load-filter-wheel-connection"]], "aslm.model.device_startup_functions.load_stages": [[93, "aslm-model-device-startup-functions-load-stages"]], "aslm.model.device_startup_functions.load_zoom_connection": [[94, "aslm-model-device-startup-functions-load-zoom-connection"]], "aslm.model.device_startup_functions.start_camera": [[95, "aslm-model-device-startup-functions-start-camera"]], "aslm.model.device_startup_functions.start_daq": [[96, "aslm-model-device-startup-functions-start-daq"]], "aslm.model.device_startup_functions.start_filter_wheel": [[97, "aslm-model-device-startup-functions-start-filter-wheel"]], "aslm.model.device_startup_functions.start_galvo": [[98, "aslm-model-device-startup-functions-start-galvo"]], "aslm.model.device_startup_functions.start_lasers": [[99, "aslm-model-device-startup-functions-start-lasers"]], "aslm.model.device_startup_functions.start_remote_focus_device": [[100, "aslm-model-device-startup-functions-start-remote-focus-device"]], "aslm.model.device_startup_functions.start_shutter": [[101, "aslm-model-device-startup-functions-start-shutter"]], "aslm.model.device_startup_functions.start_stage": [[102, "aslm-model-device-startup-functions-start-stage"]], "aslm.model.device_startup_functions.start_zoom": [[103, "aslm-model-device-startup-functions-start-zoom"]], "aslm.model.devices": [[104, "module-aslm.model.devices"]], "aslm.model.devices.APIs": [[105, "module-aslm.model.devices.APIs"]], "aslm.model.devices.APIs.coherent": [[106, "module-aslm.model.devices.APIs.coherent"]], "aslm.model.devices.APIs.dynamixel": [[107, "module-aslm.model.devices.APIs.dynamixel"]], "aslm.model.devices.APIs.logitech": [[108, "module-aslm.model.devices.APIs.logitech"]], "aslm.model.devices.APIs.omicron": [[109, "module-aslm.model.devices.APIs.omicron"]], "aslm.model.devices.camera": [[110, "module-aslm.model.devices.camera"]], "aslm.model.devices.camera.camera_base": [[111, "module-aslm.model.devices.camera.camera_base"]], "aslm.model.devices.camera.camera_base.CameraBase": [[112, "aslm-model-devices-camera-camera-base-camerabase"]], "aslm.model.devices.camera.camera_hamamatsu": [[113, "module-aslm.model.devices.camera.camera_hamamatsu"]], "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca": [[114, "aslm-model-devices-camera-camera-hamamatsu-hamamatsuorca"]], "aslm.model.devices.camera.camera_synthetic": [[115, "module-aslm.model.devices.camera.camera_synthetic"]], "aslm.model.devices.camera.camera_synthetic.SyntheticCamera": [[116, "aslm-model-devices-camera-camera-synthetic-syntheticcamera"]], "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController": [[117, "aslm-model-devices-camera-camera-synthetic-syntheticcameracontroller"]], "aslm.model.devices.daq": [[118, "module-aslm.model.devices.daq"]], "aslm.model.devices.daq.daq_base": [[119, "module-aslm.model.devices.daq.daq_base"]], "aslm.model.devices.daq.daq_base.DAQBase": [[120, "aslm-model-devices-daq-daq-base-daqbase"]], "aslm.model.devices.daq.daq_synthetic": [[121, "module-aslm.model.devices.daq.daq_synthetic"]], "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ": [[122, "aslm-model-devices-daq-daq-synthetic-syntheticdaq"]], "aslm.model.devices.filter_wheel": [[123, "module-aslm.model.devices.filter_wheel"]], "aslm.model.devices.filter_wheel.filter_wheel_base": [[124, "module-aslm.model.devices.filter_wheel.filter_wheel_base"]], "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase": [[125, "aslm-model-devices-filter-wheel-filter-wheel-base-filterwheelbase"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter": [[126, "module-aslm.model.devices.filter_wheel.filter_wheel_sutter"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel": [[127, "aslm-model-devices-filter-wheel-filter-wheel-sutter-sutterfilterwheel"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection": [[128, "aslm-model-devices-filter-wheel-filter-wheel-sutter-build-filter-wheel-connection"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic": [[129, "module-aslm.model.devices.filter_wheel.filter_wheel_synthetic"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel": [[130, "aslm-model-devices-filter-wheel-filter-wheel-synthetic-syntheticfilterwheel"]], "aslm.model.devices.galvo": [[131, "module-aslm.model.devices.galvo"]], "aslm.model.devices.galvo.galvo_base": [[132, "module-aslm.model.devices.galvo.galvo_base"]], "aslm.model.devices.galvo.galvo_base.GalvoBase": [[133, "aslm-model-devices-galvo-galvo-base-galvobase"]], "aslm.model.devices.joystick": [[134, "module-aslm.model.devices.joystick"]], "aslm.model.devices.joystick.joystick_base": [[135, "module-aslm.model.devices.joystick.joystick_base"]], "aslm.model.devices.joystick.joystick_base.JoystickBase": [[136, "aslm-model-devices-joystick-joystick-base-joystickbase"]], "aslm.model.devices.joystick.joystick_logitech": [[137, "module-aslm.model.devices.joystick.joystick_logitech"]], "aslm.model.devices.joystick.joystick_logitech.JoystickLogitech": [[138, "aslm-model-devices-joystick-joystick-logitech-joysticklogitech"]], "aslm.model.devices.joystick.joystick_synthetic": [[139, "module-aslm.model.devices.joystick.joystick_synthetic"]], "aslm.model.devices.joystick.joystick_synthetic.SyntheticJoystick": [[140, "aslm-model-devices-joystick-joystick-synthetic-syntheticjoystick"]], "aslm.model.devices.lasers": [[141, "module-aslm.model.devices.lasers"]], "aslm.model.devices.lasers.laser_base": [[142, "module-aslm.model.devices.lasers.laser_base"]], "aslm.model.devices.lasers.laser_base.LaserBase": [[143, "aslm-model-devices-lasers-laser-base-laserbase"]], "aslm.model.devices.lasers.laser_synthetic": [[144, "module-aslm.model.devices.lasers.laser_synthetic"]], "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser": [[145, "aslm-model-devices-lasers-laser-synthetic-syntheticlaser"]], "aslm.model.devices.lasers.laser_trigger_base": [[146, "module-aslm.model.devices.lasers.laser_trigger_base"]], "aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase": [[147, "aslm-model-devices-lasers-laser-trigger-base-lasertriggerbase"]], "aslm.model.devices.lasers.laser_trigger_synthetic": [[148, "module-aslm.model.devices.lasers.laser_trigger_synthetic"]], "aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers": [[149, "aslm-model-devices-lasers-laser-trigger-synthetic-syntheticlasertriggers"]], "aslm.model.devices.objectives": [[150, "module-aslm.model.devices.objectives"]], "aslm.model.devices.objectives.Objective": [[151, "aslm-model-devices-objectives-objective"]], "aslm.model.devices.remote_focus": [[152, "module-aslm.model.devices.remote_focus"]], "aslm.model.devices.remote_focus.remote_focus_base": [[153, "module-aslm.model.devices.remote_focus.remote_focus_base"]], "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase": [[154, "aslm-model-devices-remote-focus-remote-focus-base-remotefocusbase"]], "aslm.model.devices.remote_focus.remote_focus_equipment_solutions": [[155, "module-aslm.model.devices.remote_focus.remote_focus_equipment_solutions"]], "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions": [[156, "aslm-model-devices-remote-focus-remote-focus-equipment-solutions-remotefocusequipmentsolutions"]], "aslm.model.devices.shutter": [[157, "module-aslm.model.devices.shutter"]], "aslm.model.devices.shutter.laser_shutter_base": [[158, "module-aslm.model.devices.shutter.laser_shutter_base"]], "aslm.model.devices.shutter.laser_shutter_base.ShutterBase": [[159, "aslm-model-devices-shutter-laser-shutter-base-shutterbase"]], "aslm.model.devices.shutter.laser_shutter_synthetic": [[160, "module-aslm.model.devices.shutter.laser_shutter_synthetic"]], "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter": [[161, "aslm-model-devices-shutter-laser-shutter-synthetic-syntheticshutter"]], "aslm.model.devices.stages": [[162, "module-aslm.model.devices.stages"]], "aslm.model.devices.stages.stage_asi": [[163, "module-aslm.model.devices.stages.stage_asi"]], "aslm.model.devices.stages.stage_asi.ASIStage": [[164, "aslm-model-devices-stages-stage-asi-asistage"]], "aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection": [[165, "aslm-model-devices-stages-stage-asi-build-asi-stage-connection"]], "aslm.model.devices.stages.stage_base": [[166, "module-aslm.model.devices.stages.stage_base"]], "aslm.model.devices.stages.stage_base.StageBase": [[167, "aslm-model-devices-stages-stage-base-stagebase"]], "aslm.model.devices.stages.stage_galvo": [[168, "module-aslm.model.devices.stages.stage_galvo"]], "aslm.model.devices.stages.stage_galvo.GalvoNIStage": [[169, "aslm-model-devices-stages-stage-galvo-galvonistage"]], "aslm.model.devices.stages.stage_mcl": [[170, "module-aslm.model.devices.stages.stage_mcl"]], "aslm.model.devices.stages.stage_mcl.MCLStage": [[171, "aslm-model-devices-stages-stage-mcl-mclstage"]], "aslm.model.devices.stages.stage_mcl.build_MCLStage_connection": [[172, "aslm-model-devices-stages-stage-mcl-build-mclstage-connection"]], "aslm.model.devices.stages.stage_pi": [[173, "module-aslm.model.devices.stages.stage_pi"]], "aslm.model.devices.stages.stage_pi.PIStage": [[174, "aslm-model-devices-stages-stage-pi-pistage"]], "aslm.model.devices.stages.stage_pi.build_PIStage_connection": [[175, "aslm-model-devices-stages-stage-pi-build-pistage-connection"]], "aslm.model.devices.stages.stage_sutter": [[176, "module-aslm.model.devices.stages.stage_sutter"]], "aslm.model.devices.stages.stage_sutter.SutterStage": [[177, "aslm-model-devices-stages-stage-sutter-sutterstage"]], "aslm.model.devices.stages.stage_sutter.build_sutter_stage_connection": [[178, "aslm-model-devices-stages-stage-sutter-build-sutter-stage-connection"]], "aslm.model.devices.stages.stage_synthetic": [[179, "module-aslm.model.devices.stages.stage_synthetic"]], "aslm.model.devices.stages.stage_synthetic.SyntheticStage": [[180, "aslm-model-devices-stages-stage-synthetic-syntheticstage"]], "aslm.model.devices.stages.stage_tl_kcube_inertial": [[181, "module-aslm.model.devices.stages.stage_tl_kcube_inertial"]], "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage": [[182, "aslm-model-devices-stages-stage-tl-kcube-inertial-tlkimstage"]], "aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection": [[183, "aslm-model-devices-stages-stage-tl-kcube-inertial-build-tlkimstage-connection"]], "aslm.model.devices.zoom": [[184, "module-aslm.model.devices.zoom"]], "aslm.model.devices.zoom.zoom_base": [[185, "module-aslm.model.devices.zoom.zoom_base"]], "aslm.model.devices.zoom.zoom_base.ZoomBase": [[186, "aslm-model-devices-zoom-zoom-base-zoombase"]], "aslm.model.devices.zoom.zoom_synthetic": [[187, "module-aslm.model.devices.zoom.zoom_synthetic"]], "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom": [[188, "aslm-model-devices-zoom-zoom-synthetic-syntheticzoom"]], "aslm.model.dummy": [[189, "module-aslm.model.dummy"]], "aslm.model.dummy.DummyDevice": [[190, "aslm-model-dummy-dummydevice"]], "aslm.model.dummy.DummyModel": [[191, "aslm-model-dummy-dummymodel"]], "aslm.model.features": [[192, "module-aslm.model.features"]], "aslm.model.features.autofocus": [[193, "module-aslm.model.features.autofocus"]], "aslm.model.features.autofocus.Autofocus": [[194, "aslm-model-features-autofocus-autofocus"]], "aslm.model.features.common_features": [[195, "module-aslm.model.features.common_features"]], "aslm.model.features.common_features.ChangeResolution": [[196, "aslm-model-features-common-features-changeresolution"]], "aslm.model.features.common_features.FindTissueSimple2D": [[197, "aslm-model-features-common-features-findtissuesimple2d"]], "aslm.model.features.common_features.LoopByCount": [[198, "aslm-model-features-common-features-loopbycount"]], "aslm.model.features.common_features.PrepareNextChannel": [[199, "aslm-model-features-common-features-preparenextchannel"]], "aslm.model.features.common_features.Snap": [[200, "aslm-model-features-common-features-snap"]], "aslm.model.features.common_features.WaitToContinue": [[201, "aslm-model-features-common-features-waittocontinue"]], "aslm.model.features.common_features.ZStackAcquisition": [[202, "aslm-model-features-common-features-zstackacquisition"]], "aslm.model.features.dummy_detective": [[203, "module-aslm.model.features.dummy_detective"]], "aslm.model.features.dummy_detective.Dummy_Detective": [[204, "aslm-model-features-dummy-detective-dummy-detective"]], "aslm.model.features.feature_container": [[205, "module-aslm.model.features.feature_container"]], "aslm.model.features.feature_container.Container": [[206, "aslm-model-features-feature-container-container"]], "aslm.model.features.feature_container.DataContainer": [[207, "aslm-model-features-feature-container-datacontainer"]], "aslm.model.features.feature_container.DataNode": [[208, "aslm-model-features-feature-container-datanode"]], "aslm.model.features.feature_container.SignalContainer": [[209, "aslm-model-features-feature-container-signalcontainer"]], "aslm.model.features.feature_container.SignalNode": [[210, "aslm-model-features-feature-container-signalnode"]], "aslm.model.features.feature_container.TreeNode": [[211, "aslm-model-features-feature-container-treenode"]], "aslm.model.features.feature_container.dummy_True": [[212, "aslm-model-features-feature-container-dummy-true"]], "aslm.model.features.feature_container.dummy_func": [[213, "aslm-model-features-feature-container-dummy-func"]], "aslm.model.features.feature_container.get_registered_funcs": [[214, "aslm-model-features-feature-container-get-registered-funcs"]], "aslm.model.features.feature_container.load_features": [[215, "aslm-model-features-feature-container-load-features"]], "aslm.model.features.image_writer": [[216, "module-aslm.model.features.image_writer"]], "aslm.model.features.image_writer.ImageWriter": [[217, "aslm-model-features-image-writer-imagewriter"]], "aslm.model.features.restful_features": [[218, "module-aslm.model.features.restful_features"]], "aslm.model.features.restful_features.IlastikSegmentation": [[219, "aslm-model-features-restful-features-ilastiksegmentation"]], "aslm.model.features.restful_features.prepare_service": [[220, "aslm-model-features-restful-features-prepare-service"]], "aslm.model.features.volume_search": [[221, "module-aslm.model.features.volume_search"]], "aslm.model.features.volume_search.VolumeSearch": [[222, "aslm-model-features-volume-search-volumesearch"]], "aslm.model.metadata_sources": [[223, "module-aslm.model.metadata_sources"]], "aslm.model.metadata_sources.bdv_metadata": [[224, "module-aslm.model.metadata_sources.bdv_metadata"]], "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata": [[225, "aslm-model-metadata-sources-bdv-metadata-bigdataviewermetadata"]], "aslm.model.metadata_sources.metadata": [[226, "module-aslm.model.metadata_sources.metadata"]], "aslm.model.metadata_sources.metadata.Metadata": [[227, "aslm-model-metadata-sources-metadata-metadata"]], "aslm.model.metadata_sources.metadata.XMLMetadata": [[228, "aslm-model-metadata-sources-metadata-xmlmetadata"]], "aslm.model.metadata_sources.ome_tiff_metadata": [[229, "module-aslm.model.metadata_sources.ome_tiff_metadata"]], "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata": [[230, "aslm-model-metadata-sources-ome-tiff-metadata-ometiffmetadata"]], "aslm.model.microscope": [[231, "module-aslm.model.microscope"]], "aslm.model.microscope.Microscope": [[232, "aslm-model-microscope-microscope"]], "aslm.model.model": [[233, "module-aslm.model.model"]], "aslm.model.model.Model": [[234, "aslm-model-model-model"]], "aslm.model.waveforms": [[235, "module-aslm.model.waveforms"]], "aslm.model.waveforms.camera_exposure": [[236, "aslm-model-waveforms-camera-exposure"]], "aslm.model.waveforms.dc_value": [[237, "aslm-model-waveforms-dc-value"]], "aslm.model.waveforms.sawtooth": [[238, "aslm-model-waveforms-sawtooth"]], "aslm.model.waveforms.sine_wave": [[239, "aslm-model-waveforms-sine-wave"]], "aslm.model.waveforms.single_pulse": [[240, "aslm-model-waveforms-single-pulse"]], "aslm.model.waveforms.smooth_waveform": [[241, "aslm-model-waveforms-smooth-waveform"]], "aslm.model.waveforms.square": [[242, "aslm-model-waveforms-square"]], "aslm.model.waveforms.tunable_lens_ramp": [[243, "aslm-model-waveforms-tunable-lens-ramp"]], "aslm.tools": [[244, "module-aslm.tools"]], "aslm.tools.beams": [[245, "module-aslm.tools.beams"]], "aslm.tools.beams.fit_gaussian_beam_error": [[246, "aslm-tools-beams-fit-gaussian-beam-error"]], "aslm.tools.beams.fit_gaussian_beam_mse": [[247, "aslm-tools-beams-fit-gaussian-beam-mse"]], "aslm.tools.beams.gaussian_beam": [[248, "aslm-tools-beams-gaussian-beam"]], "aslm.tools.common_dict_tools": [[249, "module-aslm.tools.common_dict_tools"]], "aslm.tools.common_dict_tools.update_settings_common": [[250, "aslm-tools-common-dict-tools-update-settings-common"]], "aslm.tools.common_dict_tools.update_stage_dict": [[251, "aslm-tools-common-dict-tools-update-stage-dict"]], "aslm.tools.common_functions": [[252, "module-aslm.tools.common_functions"]], "aslm.tools.common_functions.build_ref_name": [[253, "aslm-tools-common-functions-build-ref-name"]], "aslm.tools.common_functions.combine_funcs": [[254, "aslm-tools-common-functions-combine-funcs"]], "aslm.tools.common_functions.copy_proxy_object": [[255, "aslm-tools-common-functions-copy-proxy-object"]], "aslm.tools.decorators": [[256, "module-aslm.tools.decorators"]], "aslm.tools.decorators.function_timer": [[257, "aslm-tools-decorators-function-timer"]], "aslm.tools.file_functions": [[258, "module-aslm.tools.file_functions"]], "aslm.tools.file_functions.create_save_path": [[259, "aslm-tools-file-functions-create-save-path"]], "aslm.tools.file_functions.save_yaml_file": [[260, "aslm-tools-file-functions-save-yaml-file"]], "aslm.tools.image": [[261, "module-aslm.tools.image"]], "aslm.tools.image.text_array": [[262, "aslm-tools-image-text-array"]], "aslm.tools.image_loaders": [[263, "module-aslm.tools.image_loaders"]], "aslm.tools.image_loaders.LazyTiff": [[264, "aslm-tools-image-loaders-lazytiff"]], "aslm.tools.main_functions": [[265, "module-aslm.tools.main_functions"]], "aslm.tools.main_functions.create_parser": [[266, "aslm-tools-main-functions-create-parser"]], "aslm.tools.main_functions.evaluate_parser_input_arguments": [[267, "aslm-tools-main-functions-evaluate-parser-input-arguments"]], "aslm.tools.main_functions.identify_gpu": [[268, "aslm-tools-main-functions-identify-gpu"]], "aslm.tools.multipos_table_tools": [[269, "module-aslm.tools.multipos_table_tools"]], "aslm.tools.multipos_table_tools.calc_num_tiles": [[270, "aslm-tools-multipos-table-tools-calc-num-tiles"]], "aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box": [[271, "aslm-tools-multipos-table-tools-compute-tiles-from-bounding-box"]], "aslm.tools.multipos_table_tools.sign": [[272, "aslm-tools-multipos-table-tools-sign"]], "aslm.tools.multipos_table_tools.update_table": [[273, "aslm-tools-multipos-table-tools-update-table"]], "aslm.tools.project_stats": [[274, "module-aslm.tools.project_stats"]], "aslm.tools.project_stats.countlines": [[275, "aslm-tools-project-stats-countlines"]], "aslm.tools.xml_tools": [[276, "module-aslm.tools.xml_tools"]], "aslm.tools.xml_tools.dict_to_xml": [[277, "aslm-tools-xml-tools-dict-to-xml"]], "aslm.tools.xml_tools.parse_xml": [[278, "aslm-tools-xml-tools-parse-xml"]], "aslm.view": [[279, "module-aslm.view"]], "aslm.view.main_window_content": [[280, "module-aslm.view.main_window_content"]], "aslm.view.main_window_content.acquire_bar_frame": [[281, "module-aslm.view.main_window_content.acquire_bar_frame"]], "aslm.view.main_window_content.channel_settings": [[282, "module-aslm.view.main_window_content.channel_settings"]], "aslm.view.main_window_content.channel_settings.channel_settings_frames": [[283, "module-aslm.view.main_window_content.channel_settings.channel_settings_frames"]], "aslm.view.main_window_content.stage_control": [[284, "module-aslm.view.main_window_content.stage_control"]], "aslm.view.main_window_content.stage_control.stage_control_frames": [[285, "module-aslm.view.main_window_content.stage_control.stage_control_frames"]], "aslm.view.menus": [[286, "module-aslm.view.menus"]], "API Reference": [[289, "api-reference"]], "Configuring ASLM": [[290, "configuring-aslm"]], "Configuration.yaml": [[290, "configuration-yaml"]], "Hardware Section": [[290, "hardware-section"]], "Microscope Section": [[290, "microscope-section"]], "GUI Section": [[290, "gui-section"]], "Contributing Guidelines": [[291, "contributing-guidelines"]], "General principles": [[291, "general-principles"]], "Coding style": [[291, "coding-style"]], "Unit tests": [[291, "unit-tests"]], "Scientific Units": [[291, "scientific-units"]], "ASLM feature container": [[292, "aslm-feature-container"]], "The feature object": [[292, "the-feature-object"]], "Writing custom features": [[292, "writing-custom-features"]], "Extending ASLM": [[293, "extending-aslm"]], "Hardware Setup": [[294, "hardware-setup"]], "Configuration File": [[294, "configuration-file"]], "Data Acquisition Card": [[294, "data-acquisition-card"]], "Wiring": [[294, "wiring"]], "Cameras": [[294, "cameras"]], "Hamamatsu": [[294, "hamamatsu"]], "Photometrics": [[294, "photometrics"]], "Voicecoil": [[294, "voicecoil"]], "Equipment Solutions": [[294, "equipment-solutions"]], "Stages": [[294, "stages"]], "ASI": [[294, "asi"]], "Microscope Implementations": [[295, "microscope-implementations"]], "Multiscale Microscope": [[295, "multiscale-microscope"]], "Upright CT-ASLM-V2": [[295, "upright-ct-aslm-v2"]], "OPM-V2": [[295, "opm-v2"]], "Autonomous Software for Light Microscopy": [[296, "autonomous-software-for-light-microscopy"]], "Contents": [[296, "contents"]], "Index and search": [[296, "index-and-search"]], "Software Installation": [[297, "software-installation"]], "Download Git": [[297, "download-git"]], "Setup your Python Environement.": [[297, "setup-your-python-environement"]], "GPU Dependencies": [[297, "gpu-dependencies"]], "Troubleshooting": [[297, "troubleshooting"]], "User Guide": [[298, "user-guide"]]}, "indexentries": {"aslm.config": [[0, "module-aslm.config"]], "module": [[0, "module-aslm.config"], [1, "module-aslm.config.config"], [7, "module-aslm.controller"], [8, "module-aslm.controller.configuration_controller"], [10, "module-aslm.controller.thread_pool"], [14, "module-aslm.model"], [15, "module-aslm.model.analysis"], [16, "module-aslm.model.analysis.boundary_detect"], [21, "module-aslm.model.analysis.camera"], [26, "module-aslm.model.analysis.detection"], [36, "module-aslm.model.analysis.image_contrast"], [42, "module-aslm.model.analysis.image_decorrelation"], [51, "module-aslm.model.analysis.image_transform"], [54, "module-aslm.model.analysis.spectral_unmixing"], [56, "module-aslm.model.concurrency"], [57, "module-aslm.model.concurrency.concurrency_tools"], [68, "module-aslm.model.concurrency.proxy_objects"], [73, "module-aslm.model.concurrency.shared_memory"], [74, "module-aslm.model.concurrency.write_parameters"], [76, "module-aslm.model.data_sources"], [77, "module-aslm.model.data_sources.bdv_data_source"], [79, "module-aslm.model.data_sources.data_source"], [82, "module-aslm.model.data_sources.tiff_data_source"], [84, "module-aslm.model.data_sources.zarr_data_source"], [86, "module-aslm.model.device_startup_functions"], [104, "module-aslm.model.devices"], [105, "module-aslm.model.devices.APIs"], [106, "module-aslm.model.devices.APIs.coherent"], [107, "module-aslm.model.devices.APIs.dynamixel"], [108, "module-aslm.model.devices.APIs.logitech"], [109, "module-aslm.model.devices.APIs.omicron"], [110, "module-aslm.model.devices.camera"], [111, "module-aslm.model.devices.camera.camera_base"], [113, "module-aslm.model.devices.camera.camera_hamamatsu"], [115, "module-aslm.model.devices.camera.camera_synthetic"], [118, "module-aslm.model.devices.daq"], [119, "module-aslm.model.devices.daq.daq_base"], [121, "module-aslm.model.devices.daq.daq_synthetic"], [123, "module-aslm.model.devices.filter_wheel"], [124, "module-aslm.model.devices.filter_wheel.filter_wheel_base"], [126, "module-aslm.model.devices.filter_wheel.filter_wheel_sutter"], [129, "module-aslm.model.devices.filter_wheel.filter_wheel_synthetic"], [131, "module-aslm.model.devices.galvo"], [132, "module-aslm.model.devices.galvo.galvo_base"], [134, "module-aslm.model.devices.joystick"], [135, "module-aslm.model.devices.joystick.joystick_base"], [137, "module-aslm.model.devices.joystick.joystick_logitech"], [139, "module-aslm.model.devices.joystick.joystick_synthetic"], [141, "module-aslm.model.devices.lasers"], [142, "module-aslm.model.devices.lasers.laser_base"], [144, "module-aslm.model.devices.lasers.laser_synthetic"], [146, "module-aslm.model.devices.lasers.laser_trigger_base"], [148, "module-aslm.model.devices.lasers.laser_trigger_synthetic"], [150, "module-aslm.model.devices.objectives"], [152, "module-aslm.model.devices.remote_focus"], [153, "module-aslm.model.devices.remote_focus.remote_focus_base"], [155, "module-aslm.model.devices.remote_focus.remote_focus_equipment_solutions"], [157, "module-aslm.model.devices.shutter"], [158, "module-aslm.model.devices.shutter.laser_shutter_base"], [160, "module-aslm.model.devices.shutter.laser_shutter_synthetic"], [162, "module-aslm.model.devices.stages"], [163, "module-aslm.model.devices.stages.stage_asi"], [166, "module-aslm.model.devices.stages.stage_base"], [168, "module-aslm.model.devices.stages.stage_galvo"], [170, "module-aslm.model.devices.stages.stage_mcl"], [173, "module-aslm.model.devices.stages.stage_pi"], [176, "module-aslm.model.devices.stages.stage_sutter"], [179, "module-aslm.model.devices.stages.stage_synthetic"], [181, "module-aslm.model.devices.stages.stage_tl_kcube_inertial"], [184, "module-aslm.model.devices.zoom"], [185, "module-aslm.model.devices.zoom.zoom_base"], [187, "module-aslm.model.devices.zoom.zoom_synthetic"], [189, "module-aslm.model.dummy"], [192, "module-aslm.model.features"], [193, "module-aslm.model.features.autofocus"], [195, "module-aslm.model.features.common_features"], [203, "module-aslm.model.features.dummy_detective"], [205, "module-aslm.model.features.feature_container"], [216, "module-aslm.model.features.image_writer"], [218, "module-aslm.model.features.restful_features"], [221, "module-aslm.model.features.volume_search"], [223, "module-aslm.model.metadata_sources"], [224, "module-aslm.model.metadata_sources.bdv_metadata"], [226, "module-aslm.model.metadata_sources.metadata"], [229, "module-aslm.model.metadata_sources.ome_tiff_metadata"], [231, "module-aslm.model.microscope"], [233, "module-aslm.model.model"], [235, "module-aslm.model.waveforms"], [244, "module-aslm.tools"], [245, "module-aslm.tools.beams"], [249, "module-aslm.tools.common_dict_tools"], [252, "module-aslm.tools.common_functions"], [256, "module-aslm.tools.decorators"], [258, "module-aslm.tools.file_functions"], [261, "module-aslm.tools.image"], [263, "module-aslm.tools.image_loaders"], [265, "module-aslm.tools.main_functions"], [269, "module-aslm.tools.multipos_table_tools"], [274, "module-aslm.tools.project_stats"], [276, "module-aslm.tools.xml_tools"], [279, "module-aslm.view"], [280, "module-aslm.view.main_window_content"], [281, "module-aslm.view.main_window_content.acquire_bar_frame"], [282, "module-aslm.view.main_window_content.channel_settings"], [283, "module-aslm.view.main_window_content.channel_settings.channel_settings_frames"], [284, "module-aslm.view.main_window_content.stage_control"], [285, "module-aslm.view.main_window_content.stage_control.stage_control_frames"], [286, "module-aslm.view.menus"]], "aslm.config.config": [[1, "module-aslm.config.config"]], "build_nested_dict() (in module aslm.config.config)": [[2, "aslm.config.config.build_nested_dict"]], "get_aslm_path() (in module aslm.config.config)": [[3, "aslm.config.config.get_aslm_path"]], "get_configuration_paths() (in module aslm.config.config)": [[4, "aslm.config.config.get_configuration_paths"]], "load_configs() (in module aslm.config.config)": [[5, "aslm.config.config.load_configs"]], "update_config_dict() (in module aslm.config.config)": [[6, "aslm.config.config.update_config_dict"]], "aslm.controller": [[7, "module-aslm.controller"]], "aslm.controller.configuration_controller": [[8, "module-aslm.controller.configuration_controller"]], "configurationcontroller (class in aslm.controller.configuration_controller)": [[9, "aslm.controller.configuration_controller.ConfigurationController"]], "__init__() (aslm.controller.configuration_controller.configurationcontroller method)": [[9, "aslm.controller.configuration_controller.ConfigurationController.__init__"]], "camera_config_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[9, "aslm.controller.configuration_controller.ConfigurationController.camera_config_dict"]], "camera_pixels (aslm.controller.configuration_controller.configurationcontroller property)": [[9, "aslm.controller.configuration_controller.ConfigurationController.camera_pixels"]], "change_microscope() (aslm.controller.configuration_controller.configurationcontroller method)": [[9, "aslm.controller.configuration_controller.ConfigurationController.change_microscope"]], "channels_info (aslm.controller.configuration_controller.configurationcontroller property)": [[9, "aslm.controller.configuration_controller.ConfigurationController.channels_info"]], "get_microscope_configuration_dict() (aslm.controller.configuration_controller.configurationcontroller method)": [[9, "aslm.controller.configuration_controller.ConfigurationController.get_microscope_configuration_dict"]], "get_stage_position_limits() (aslm.controller.configuration_controller.configurationcontroller method)": [[9, "aslm.controller.configuration_controller.ConfigurationController.get_stage_position_limits"]], "lasers_info (aslm.controller.configuration_controller.configurationcontroller property)": [[9, "aslm.controller.configuration_controller.ConfigurationController.lasers_info"]], "remote_focus_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[9, "aslm.controller.configuration_controller.ConfigurationController.remote_focus_dict"]], "stage_default_position (aslm.controller.configuration_controller.configurationcontroller property)": [[9, "aslm.controller.configuration_controller.ConfigurationController.stage_default_position"]], "stage_step (aslm.controller.configuration_controller.configurationcontroller property)": [[9, "aslm.controller.configuration_controller.ConfigurationController.stage_step"]], "aslm.controller.thread_pool": [[10, "module-aslm.controller.thread_pool"]], "selflockthread (class in aslm.controller.thread_pool)": [[11, "aslm.controller.thread_pool.SelfLockThread"]], "__init__() (aslm.controller.thread_pool.selflockthread method)": [[11, "aslm.controller.thread_pool.SelfLockThread.__init__"]], "daemon (aslm.controller.thread_pool.selflockthread property)": [[11, "aslm.controller.thread_pool.SelfLockThread.daemon"]], "getname() (aslm.controller.thread_pool.selflockthread method)": [[11, "aslm.controller.thread_pool.SelfLockThread.getName"]], "ident (aslm.controller.thread_pool.selflockthread property)": [[11, "aslm.controller.thread_pool.SelfLockThread.ident"]], "isdaemon() (aslm.controller.thread_pool.selflockthread method)": [[11, "aslm.controller.thread_pool.SelfLockThread.isDaemon"]], "is_alive() (aslm.controller.thread_pool.selflockthread method)": [[11, "aslm.controller.thread_pool.SelfLockThread.is_alive"]], "join() (aslm.controller.thread_pool.selflockthread method)": [[11, "aslm.controller.thread_pool.SelfLockThread.join"]], "name (aslm.controller.thread_pool.selflockthread property)": [[11, "aslm.controller.thread_pool.SelfLockThread.name"]], "native_id (aslm.controller.thread_pool.selflockthread property)": [[11, "aslm.controller.thread_pool.SelfLockThread.native_id"]], "run() (aslm.controller.thread_pool.selflockthread method)": [[11, "aslm.controller.thread_pool.SelfLockThread.run"]], "setdaemon() (aslm.controller.thread_pool.selflockthread method)": [[11, "aslm.controller.thread_pool.SelfLockThread.setDaemon"]], "setname() (aslm.controller.thread_pool.selflockthread method)": [[11, "aslm.controller.thread_pool.SelfLockThread.setName"]], "start() (aslm.controller.thread_pool.selflockthread method)": [[11, "aslm.controller.thread_pool.SelfLockThread.start"]], "synchronizedthreadpool (class in aslm.controller.thread_pool)": [[12, "aslm.controller.thread_pool.SynchronizedThreadPool"]], "__init__() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[12, "aslm.controller.thread_pool.SynchronizedThreadPool.__init__"]], "threadwaitlist (class in aslm.controller.thread_pool)": [[13, "aslm.controller.thread_pool.ThreadWaitlist"]], "__init__() (aslm.controller.thread_pool.threadwaitlist method)": [[13, "aslm.controller.thread_pool.ThreadWaitlist.__init__"]], "aslm.model": [[14, "module-aslm.model"]], "aslm.model.analysis": [[15, "module-aslm.model.analysis"]], "aslm.model.analysis.boundary_detect": [[16, "module-aslm.model.analysis.boundary_detect"]], "binary_detect() (in module aslm.model.analysis.boundary_detect)": [[17, "aslm.model.analysis.boundary_detect.binary_detect"]], "find_tissue_boundary_2d() (in module aslm.model.analysis.boundary_detect)": [[18, "aslm.model.analysis.boundary_detect.find_tissue_boundary_2d"]], "has_tissue() (in module aslm.model.analysis.boundary_detect)": [[19, "aslm.model.analysis.boundary_detect.has_tissue"]], "map_boundary() (in module aslm.model.analysis.boundary_detect)": [[20, "aslm.model.analysis.boundary_detect.map_boundary"]], "aslm.model.analysis.camera": [[21, "module-aslm.model.analysis.camera"]], "compute_flatfield_map() (in module aslm.model.analysis.camera)": [[22, "aslm.model.analysis.camera.compute_flatfield_map"]], "compute_noise_sigma() (in module aslm.model.analysis.camera)": [[23, "aslm.model.analysis.camera.compute_noise_sigma"]], "compute_scmos_offset_and_variance_map() (in module aslm.model.analysis.camera)": [[24, "aslm.model.analysis.camera.compute_scmos_offset_and_variance_map"]], "compute_signal_to_noise() (in module aslm.model.analysis.camera)": [[25, "aslm.model.analysis.camera.compute_signal_to_noise"]], "aslm.model.analysis.detection": [[26, "module-aslm.model.analysis.detection"]], "add_median_border() (in module aslm.model.analysis.detection)": [[27, "aslm.model.analysis.detection.add_median_border"]], "combine_images() (in module aslm.model.analysis.detection)": [[28, "aslm.model.analysis.detection.combine_images"]], "log_detection() (in module aslm.model.analysis.detection)": [[29, "aslm.model.analysis.detection.log_detection"]], "make_inside_image() (in module aslm.model.analysis.detection)": [[30, "aslm.model.analysis.detection.make_inside_image"]], "make_normalized_image() (in module aslm.model.analysis.detection)": [[31, "aslm.model.analysis.detection.make_normalized_image"]], "make_sphere_3d() (in module aslm.model.analysis.detection)": [[32, "aslm.model.analysis.detection.make_sphere_3D"]], "multiscale_surface_filter_3d() (in module aslm.model.analysis.detection)": [[33, "aslm.model.analysis.detection.multiscale_surface_filter_3D"]], "surface_filter_gauss_3d() (in module aslm.model.analysis.detection)": [[34, "aslm.model.analysis.detection.surface_filter_gauss_3D"]], "three_level_segmentation() (in module aslm.model.analysis.detection)": [[35, "aslm.model.analysis.detection.three_level_segmentation"]], "aslm.model.analysis.image_contrast": [[36, "module-aslm.model.analysis.image_contrast"]], "estimate_and_correct_flatfield() (in module aslm.model.analysis.image_contrast)": [[37, "aslm.model.analysis.image_contrast.estimate_and_correct_flatfield"]], "estimate_image_resolution() (in module aslm.model.analysis.image_contrast)": [[38, "aslm.model.analysis.image_contrast.estimate_image_resolution"]], "fast_normalized_dct_shannon_entropy() (in module aslm.model.analysis.image_contrast)": [[39, "aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy"]], "image_intensity() (in module aslm.model.analysis.image_contrast)": [[40, "aslm.model.analysis.image_contrast.image_intensity"]], "normalized_dct_shannon_entropy() (in module aslm.model.analysis.image_contrast)": [[41, "aslm.model.analysis.image_contrast.normalized_dct_shannon_entropy"]], "aslm.model.analysis.image_decorrelation": [[42, "module-aslm.model.analysis.image_decorrelation"]], "apodize_image() (in module aslm.model.analysis.image_decorrelation)": [[43, "aslm.model.analysis.image_decorrelation.apodize_image"]], "get_correlation_coefficient() (in module aslm.model.analysis.image_decorrelation)": [[44, "aslm.model.analysis.image_decorrelation.get_correlation_coefficient"]], "get_decorrelation_local_maxima() (in module aslm.model.analysis.image_decorrelation)": [[45, "aslm.model.analysis.image_decorrelation.get_decorrelation_local_maxima"]], "get_image_decorrelation() (in module aslm.model.analysis.image_decorrelation)": [[46, "aslm.model.analysis.image_decorrelation.get_image_decorrelation"]], "get_radial_average() (in module aslm.model.analysis.image_decorrelation)": [[47, "aslm.model.analysis.image_decorrelation.get_radial_average"]], "image_to_polar() (in module aslm.model.analysis.image_decorrelation)": [[48, "aslm.model.analysis.image_decorrelation.image_to_polar"]], "linear_map() (in module aslm.model.analysis.image_decorrelation)": [[49, "aslm.model.analysis.image_decorrelation.linear_map"]], "main_image_decorr() (in module aslm.model.analysis.image_decorrelation)": [[50, "aslm.model.analysis.image_decorrelation.main_image_decorr"]], "aslm.model.analysis.image_transform": [[51, "module-aslm.model.analysis.image_transform"]], "deskew_image() (in module aslm.model.analysis.image_transform)": [[52, "aslm.model.analysis.image_transform.deskew_image"]], "initiate_gpu() (in module aslm.model.analysis.image_transform)": [[53, "aslm.model.analysis.image_transform.initiate_gpu"]], "aslm.model.analysis.spectral_unmixing": [[54, "module-aslm.model.analysis.spectral_unmixing"]], "to_do() (in module aslm.model.analysis.spectral_unmixing)": [[55, "aslm.model.analysis.spectral_unmixing.to_do"]], "aslm.model.concurrency": [[56, "module-aslm.model.concurrency"]], "aslm.model.concurrency.concurrency_tools": [[57, "module-aslm.model.concurrency.concurrency_tools"]], "custodythread (class in aslm.model.concurrency.concurrency_tools)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread"]], "__init__() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread.__init__"]], "daemon (aslm.model.concurrency.concurrency_tools.custodythread property)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread.daemon"]], "getname() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread.getName"]], "get_result() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread.get_result"]], "ident (aslm.model.concurrency.concurrency_tools.custodythread property)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread.ident"]], "isdaemon() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread.isDaemon"]], "is_alive() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread.is_alive"]], "join() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread.join"]], "name (aslm.model.concurrency.concurrency_tools.custodythread property)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread.name"]], "native_id (aslm.model.concurrency.concurrency_tools.custodythread property)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread.native_id"]], "run() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread.run"]], "setdaemon() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread.setDaemon"]], "setname() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread.setName"]], "start() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread.start"]], "fancythread (in module aslm.model.concurrency.concurrency_tools)": [[59, "aslm.model.concurrency.concurrency_tools.FancyThread"]], "mytestclass (class in aslm.model.concurrency.concurrency_tools)": [[60, "aslm.model.concurrency.concurrency_tools.MyTestClass"]], "__init__() (aslm.model.concurrency.concurrency_tools.mytestclass method)": [[60, "aslm.model.concurrency.concurrency_tools.MyTestClass.__init__"]], "run() (aslm.model.concurrency.concurrency_tools.mytestclass method)": [[60, "aslm.model.concurrency.concurrency_tools.MyTestClass.run"]], "time_it() (aslm.model.concurrency.concurrency_tools.mytestclass method)": [[60, "aslm.model.concurrency.concurrency_tools.MyTestClass.time_it"]], "objectinsubprocess (class in aslm.model.concurrency.concurrency_tools)": [[61, "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess"]], "__init__() (aslm.model.concurrency.concurrency_tools.objectinsubprocess method)": [[61, "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess.__init__"]], "politethread (in module aslm.model.concurrency.concurrency_tools)": [[62, "aslm.model.concurrency.concurrency_tools.PoliteThread"]], "resultthread (class in aslm.model.concurrency.concurrency_tools)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread"]], "__init__() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread.__init__"]], "daemon (aslm.model.concurrency.concurrency_tools.resultthread property)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread.daemon"]], "getname() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread.getName"]], "get_result() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread.get_result"]], "ident (aslm.model.concurrency.concurrency_tools.resultthread property)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread.ident"]], "isdaemon() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread.isDaemon"]], "is_alive() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread.is_alive"]], "join() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread.join"]], "name (aslm.model.concurrency.concurrency_tools.resultthread property)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread.name"]], "native_id (aslm.model.concurrency.concurrency_tools.resultthread property)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread.native_id"]], "run() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread.run"]], "setdaemon() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread.setDaemon"]], "setname() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread.setName"]], "start() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread.start"]], "aligned (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ALIGNED"]], "behaved (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.BEHAVED"]], "carray (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.CARRAY"]], "c_contiguous (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.C_CONTIGUOUS"]], "farray (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.FARRAY"]], "fnc (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.FNC"]], "forc (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.FORC"]], "f_contiguous (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.F_CONTIGUOUS"]], "owndata (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.OWNDATA"]], "sharedndarray (class in aslm.model.concurrency.concurrency_tools)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray"]], "t (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.T"]], "updateifcopy (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.UPDATEIFCOPY"]], "writeable (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.WRITEABLE"]], "writebackifcopy (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.WRITEBACKIFCOPY"]], "__init__() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.__init__"]], "all() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.all"]], "any() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.any"]], "argmax() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.argmax"]], "argmin() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.argmin"]], "argpartition() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.argpartition"]], "argsort() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.argsort"]], "astype() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.astype"]], "base (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.base"]], "byteswap() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.byteswap"]], "choose() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.choose"]], "clip() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.clip"]], "compress() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.compress"]], "conj() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.conj"]], "conjugate() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.conjugate"]], "copy() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.copy"]], "ctypes (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ctypes"]], "cumprod() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.cumprod"]], "cumsum() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.cumsum"]], "data (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.data"]], "diagonal() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.diagonal"]], "dtype (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.dtype"]], "dump() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.dump"]], "dumps() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.dumps"]], "fill() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.fill"]], "flags (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.flags"]], "flat (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.flat"]], "flatten() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.flatten"]], "getfield() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.getfield"]], "imag (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.imag"]], "item() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.item"]], "itemset() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.itemset"]], "itemsize (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.itemsize"]], "max() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.max"]], "mean() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.mean"]], "min() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.min"]], "nbytes (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.nbytes"]], "ndim (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ndim"]], "newbyteorder() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.newbyteorder"]], "nonzero() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.nonzero"]], "partition() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.partition"]], "prod() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.prod"]], "ptp() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ptp"]], "put() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.put"]], "ravel() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ravel"]], "real (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.real"]], "repeat() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.repeat"]], "reshape() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.reshape"]], "resize() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.resize"]], "round() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.round"]], "searchsorted() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.searchsorted"]], "setfield() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.setfield"]], "setflags() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.setflags"]], "shape (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.shape"]], "size (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.size"]], "sort() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.sort"]], "squeeze() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.squeeze"]], "std() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.std"]], "strides (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.strides"]], "sum() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.sum"]], "swapaxes() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.swapaxes"]], "take() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.take"]], "tobytes() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.tobytes"]], "tofile() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.tofile"]], "tolist() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.tolist"]], "tostring() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.tostring"]], "trace() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.trace"]], "transpose() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.transpose"]], "var() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.var"]], "view() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.view"]], "testobjectinsubprocess (class in aslm.model.concurrency.concurrency_tools)": [[65, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess"]], "testobjectinsubprocess.testclass (class in aslm.model.concurrency.concurrency_tools)": [[65, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.TestClass"]], "__init__() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[65, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.__init__"]], "run() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[65, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.run"]], "test_incorrect_thread_management() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[65, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.test_incorrect_thread_management"]], "test_lock_with_waitlist() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[65, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.test_lock_with_waitlist"]], "test_object_in_subprocess_overhead() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[65, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.test_object_in_subprocess_overhead"]], "test_sending_shared_arrays() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[65, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.test_sending_shared_arrays"]], "time_it() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[65, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.time_it"]], "testresultthreadandcustodythread (class in aslm.model.concurrency.concurrency_tools)": [[66, "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread"]], "__init__() (aslm.model.concurrency.concurrency_tools.testresultthreadandcustodythread method)": [[66, "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread.__init__"]], "run() (aslm.model.concurrency.concurrency_tools.testresultthreadandcustodythread method)": [[66, "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread.run"]], "time_it() (aslm.model.concurrency.concurrency_tools.testresultthreadandcustodythread method)": [[66, "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread.time_it"]], "testsharedndarray (class in aslm.model.concurrency.concurrency_tools)": [[67, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray"]], "__init__() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[67, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.__init__"]], "run() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[67, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.run"]], "test_ndarraylike_behavior() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[67, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.test_ndarraylike_behavior"]], "test_serialization() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[67, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.test_serialization"]], "test_serializing_and_deserializing() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[67, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.test_serializing_and_deserializing"]], "time_it() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[67, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.time_it"]], "aslm.model.concurrency.proxy_objects": [[68, "module-aslm.model.concurrency.proxy_objects"]], "proxymanager (class in aslm.model.concurrency.proxy_objects)": [[69, "aslm.model.concurrency.proxy_objects.ProxyManager"]], "__init__() (aslm.model.concurrency.proxy_objects.proxymanager method)": [[69, "aslm.model.concurrency.proxy_objects.ProxyManager.__init__"]], "proxy_object() (aslm.model.concurrency.proxy_objects.proxymanager method)": [[69, "aslm.model.concurrency.proxy_objects.ProxyManager.proxy_object"]], "shared_numpy_array() (aslm.model.concurrency.proxy_objects.proxymanager method)": [[69, "aslm.model.concurrency.proxy_objects.ProxyManager.shared_numpy_array"]], "proxyobject (class in aslm.model.concurrency.proxy_objects)": [[70, "aslm.model.concurrency.proxy_objects.ProxyObject"]], "__init__() (aslm.model.concurrency.proxy_objects.proxyobject method)": [[70, "aslm.model.concurrency.proxy_objects.ProxyObject.__init__"]], "launch_custody_thread() (in module aslm.model.concurrency.proxy_objects)": [[71, "aslm.model.concurrency.proxy_objects.launch_custody_thread"]], "launch_thread() (in module aslm.model.concurrency.proxy_objects)": [[72, "aslm.model.concurrency.proxy_objects.launch_thread"]], "aslm.model.concurrency.shared_memory": [[73, "module-aslm.model.concurrency.shared_memory"]], "aslm.model.concurrency.write_parameters": [[74, "module-aslm.model.concurrency.write_parameters"]], "__init__() (aslm.model.concurrency.write_parameters.write_params method)": [[75, "aslm.model.concurrency.write_parameters.write_Params.__init__"]], "write_params (class in aslm.model.concurrency.write_parameters)": [[75, "aslm.model.concurrency.write_parameters.write_Params"]], "aslm.model.data_sources": [[76, "module-aslm.model.data_sources"]], "aslm.model.data_sources.bdv_data_source": [[77, "module-aslm.model.data_sources.bdv_data_source"]], "bigdataviewerdatasource (class in aslm.model.data_sources.bdv_data_source)": [[78, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource"]], "__init__() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[78, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.__init__"]], "close() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[78, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.close"]], "data (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[78, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.data"]], "read() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[78, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.read"]], "resolutions (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[78, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.resolutions"]], "shape (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[78, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.shape"]], "shapes (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[78, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.shapes"]], "subdivisions (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[78, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.subdivisions"]], "voxel_size (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[78, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.voxel_size"]], "write() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[78, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.write"]], "aslm.model.data_sources.data_source": [[79, "module-aslm.model.data_sources.data_source"]], "datasource (class in aslm.model.data_sources.data_source)": [[80, "aslm.model.data_sources.data_source.DataSource"]], "__init__() (aslm.model.data_sources.data_source.datasource method)": [[80, "aslm.model.data_sources.data_source.DataSource.__init__"]], "close() (aslm.model.data_sources.data_source.datasource method)": [[80, "aslm.model.data_sources.data_source.DataSource.close"]], "data (aslm.model.data_sources.data_source.datasource property)": [[80, "aslm.model.data_sources.data_source.DataSource.data"]], "read() (aslm.model.data_sources.data_source.datasource method)": [[80, "aslm.model.data_sources.data_source.DataSource.read"]], "shape (aslm.model.data_sources.data_source.datasource property)": [[80, "aslm.model.data_sources.data_source.DataSource.shape"]], "voxel_size (aslm.model.data_sources.data_source.datasource property)": [[80, "aslm.model.data_sources.data_source.DataSource.voxel_size"]], "write() (aslm.model.data_sources.data_source.datasource method)": [[80, "aslm.model.data_sources.data_source.DataSource.write"]], "get_data_source() (in module aslm.model.data_sources)": [[81, "aslm.model.data_sources.get_data_source"]], "aslm.model.data_sources.tiff_data_source": [[82, "module-aslm.model.data_sources.tiff_data_source"]], "tiffdatasource (class in aslm.model.data_sources.tiff_data_source)": [[83, "aslm.model.data_sources.tiff_data_source.TiffDataSource"]], "__init__() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[83, "aslm.model.data_sources.tiff_data_source.TiffDataSource.__init__"]], "close() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[83, "aslm.model.data_sources.tiff_data_source.TiffDataSource.close"]], "data (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[83, "aslm.model.data_sources.tiff_data_source.TiffDataSource.data"]], "generate_image_name() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[83, "aslm.model.data_sources.tiff_data_source.TiffDataSource.generate_image_name"]], "read() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[83, "aslm.model.data_sources.tiff_data_source.TiffDataSource.read"]], "shape (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[83, "aslm.model.data_sources.tiff_data_source.TiffDataSource.shape"]], "voxel_size (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[83, "aslm.model.data_sources.tiff_data_source.TiffDataSource.voxel_size"]], "write() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[83, "aslm.model.data_sources.tiff_data_source.TiffDataSource.write"]], "aslm.model.data_sources.zarr_data_source": [[84, "module-aslm.model.data_sources.zarr_data_source"]], "zarrdatasource (class in aslm.model.data_sources.zarr_data_source)": [[85, "aslm.model.data_sources.zarr_data_source.ZarrDataSource"]], "__init__() (aslm.model.data_sources.zarr_data_source.zarrdatasource method)": [[85, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.__init__"]], "close() (aslm.model.data_sources.zarr_data_source.zarrdatasource method)": [[85, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.close"]], "copy_to_zarr() (aslm.model.data_sources.zarr_data_source.zarrdatasource method)": [[85, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.copy_to_zarr"]], "data (aslm.model.data_sources.zarr_data_source.zarrdatasource property)": [[85, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.data"]], "read() (aslm.model.data_sources.zarr_data_source.zarrdatasource method)": [[85, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.read"]], "shape (aslm.model.data_sources.zarr_data_source.zarrdatasource property)": [[85, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.shape"]], "voxel_size (aslm.model.data_sources.zarr_data_source.zarrdatasource property)": [[85, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.voxel_size"]], "write() (aslm.model.data_sources.zarr_data_source.zarrdatasource method)": [[85, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.write"]], "aslm.model.device_startup_functions": [[86, "module-aslm.model.device_startup_functions"]], "dummydeviceconnection (class in aslm.model.device_startup_functions)": [[87, "aslm.model.device_startup_functions.DummyDeviceConnection"]], "__init__() (aslm.model.device_startup_functions.dummydeviceconnection method)": [[87, "aslm.model.device_startup_functions.DummyDeviceConnection.__init__"]], "auto_redial() (in module aslm.model.device_startup_functions)": [[88, "aslm.model.device_startup_functions.auto_redial"]], "device_not_found() (in module aslm.model.device_startup_functions)": [[89, "aslm.model.device_startup_functions.device_not_found"]], "load_camera_connection() (in module aslm.model.device_startup_functions)": [[90, "aslm.model.device_startup_functions.load_camera_connection"]], "load_devices() (in module aslm.model.device_startup_functions)": [[91, "aslm.model.device_startup_functions.load_devices"]], "load_filter_wheel_connection() (in module aslm.model.device_startup_functions)": [[92, "aslm.model.device_startup_functions.load_filter_wheel_connection"]], "load_stages() (in module aslm.model.device_startup_functions)": [[93, "aslm.model.device_startup_functions.load_stages"]], "load_zoom_connection() (in module aslm.model.device_startup_functions)": [[94, "aslm.model.device_startup_functions.load_zoom_connection"]], "start_camera() (in module aslm.model.device_startup_functions)": [[95, "aslm.model.device_startup_functions.start_camera"]], "start_daq() (in module aslm.model.device_startup_functions)": [[96, "aslm.model.device_startup_functions.start_daq"]], "start_filter_wheel() (in module aslm.model.device_startup_functions)": [[97, "aslm.model.device_startup_functions.start_filter_wheel"]], "start_galvo() (in module aslm.model.device_startup_functions)": [[98, "aslm.model.device_startup_functions.start_galvo"]], "start_lasers() (in module aslm.model.device_startup_functions)": [[99, "aslm.model.device_startup_functions.start_lasers"]], "start_remote_focus_device() (in module aslm.model.device_startup_functions)": [[100, "aslm.model.device_startup_functions.start_remote_focus_device"]], "start_shutter() (in module aslm.model.device_startup_functions)": [[101, "aslm.model.device_startup_functions.start_shutter"]], "start_stage() (in module aslm.model.device_startup_functions)": [[102, "aslm.model.device_startup_functions.start_stage"]], "start_zoom() (in module aslm.model.device_startup_functions)": [[103, "aslm.model.device_startup_functions.start_zoom"]], "aslm.model.devices": [[104, "module-aslm.model.devices"]], "aslm.model.devices.apis": [[105, "module-aslm.model.devices.APIs"]], "aslm.model.devices.apis.coherent": [[106, "module-aslm.model.devices.APIs.coherent"]], "aslm.model.devices.apis.dynamixel": [[107, "module-aslm.model.devices.APIs.dynamixel"]], "aslm.model.devices.apis.logitech": [[108, "module-aslm.model.devices.APIs.logitech"]], "aslm.model.devices.apis.omicron": [[109, "module-aslm.model.devices.APIs.omicron"]], "aslm.model.devices.camera": [[110, "module-aslm.model.devices.camera"]], "aslm.model.devices.camera.camera_base": [[111, "module-aslm.model.devices.camera.camera_base"]], "camerabase (class in aslm.model.devices.camera.camera_base)": [[112, "aslm.model.devices.camera.camera_base.CameraBase"]], "__init__() (aslm.model.devices.camera.camera_base.camerabase method)": [[112, "aslm.model.devices.camera.camera_base.CameraBase.__init__"]], "calculate_light_sheet_exposure_time() (aslm.model.devices.camera.camera_base.camerabase method)": [[112, "aslm.model.devices.camera.camera_base.CameraBase.calculate_light_sheet_exposure_time"]], "set_readout_direction() (aslm.model.devices.camera.camera_base.camerabase method)": [[112, "aslm.model.devices.camera.camera_base.CameraBase.set_readout_direction"]], "aslm.model.devices.camera.camera_hamamatsu": [[113, "module-aslm.model.devices.camera.camera_hamamatsu"]], "hamamatsuorca (class in aslm.model.devices.camera.camera_hamamatsu)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca"]], "__init__() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.__init__"]], "calculate_light_sheet_exposure_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.calculate_light_sheet_exposure_time"]], "calculate_readout_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.calculate_readout_time"]], "close_camera() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.close_camera"]], "close_image_series() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.close_image_series"]], "get_minimum_waiting_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.get_minimum_waiting_time"]], "get_new_frame() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.get_new_frame"]], "initialize_image_series() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.initialize_image_series"]], "report_settings() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.report_settings"]], "serial_number (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.serial_number"]], "set_roi() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_ROI"]], "set_binning() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_binning"]], "set_exposure_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_exposure_time"]], "set_line_interval() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_line_interval"]], "set_readout_direction() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_readout_direction"]], "set_sensor_mode() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_sensor_mode"]], "aslm.model.devices.camera.camera_synthetic": [[115, "module-aslm.model.devices.camera.camera_synthetic"]], "syntheticcamera (class in aslm.model.devices.camera.camera_synthetic)": [[116, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera"]], "__init__() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[116, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.__init__"]], "calculate_light_sheet_exposure_time() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[116, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.calculate_light_sheet_exposure_time"]], "calculate_readout_time() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[116, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.calculate_readout_time"]], "close_camera() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[116, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.close_camera"]], "close_image_series() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[116, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.close_image_series"]], "generate_new_frame() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[116, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.generate_new_frame"]], "get_minimum_waiting_time() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[116, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.get_minimum_waiting_time"]], "get_new_frame() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[116, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.get_new_frame"]], "initialize_image_series() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[116, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.initialize_image_series"]], "report_settings() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[116, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.report_settings"]], "set_roi() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[116, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_ROI"]], "set_binning() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[116, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_binning"]], "set_exposure_time() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[116, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_exposure_time"]], "set_line_interval() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[116, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_line_interval"]], "set_readout_direction() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[116, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_readout_direction"]], "set_sensor_mode() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[116, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_sensor_mode"]], "syntheticcameracontroller (class in aslm.model.devices.camera.camera_synthetic)": [[117, "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController"]], "__init__() (aslm.model.devices.camera.camera_synthetic.syntheticcameracontroller method)": [[117, "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController.__init__"]], "get_property_value() (aslm.model.devices.camera.camera_synthetic.syntheticcameracontroller method)": [[117, "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController.get_property_value"]], "aslm.model.devices.daq": [[118, "module-aslm.model.devices.daq"]], "aslm.model.devices.daq.daq_base": [[119, "module-aslm.model.devices.daq.daq_base"]], "daqbase (class in aslm.model.devices.daq.daq_base)": [[120, "aslm.model.devices.daq.daq_base.DAQBase"]], "__init__() (aslm.model.devices.daq.daq_base.daqbase method)": [[120, "aslm.model.devices.daq.daq_base.DAQBase.__init__"]], "calculate_all_waveforms() (aslm.model.devices.daq.daq_base.daqbase method)": [[120, "aslm.model.devices.daq.daq_base.DAQBase.calculate_all_waveforms"]], "configuration (aslm.model.devices.daq.daq_base.daqbase attribute)": [[120, "aslm.model.devices.daq.daq_base.DAQBase.configuration"]], "aslm.model.devices.daq.daq_synthetic": [[121, "module-aslm.model.devices.daq.daq_synthetic"]], "syntheticdaq (class in aslm.model.devices.daq.daq_synthetic)": [[122, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ"]], "__init__() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[122, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.__init__"]], "add_camera() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[122, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.add_camera"]], "calculate_all_waveforms() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[122, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.calculate_all_waveforms"]], "close_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[122, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.close_tasks"]], "configuration (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[122, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.configuration"]], "create_camera_task() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[122, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.create_camera_task"]], "create_galvo_etl_task() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[122, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.create_galvo_etl_task"]], "create_master_trigger_task() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[122, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.create_master_trigger_task"]], "prepare_acquisition() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[122, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.prepare_acquisition"]], "run_acquisition() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[122, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.run_acquisition"]], "start_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[122, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.start_tasks"]], "stop_acquisition() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[122, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.stop_acquisition"]], "stop_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[122, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.stop_tasks"]], "write_waveforms_to_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[122, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.write_waveforms_to_tasks"]], "aslm.model.devices.filter_wheel": [[123, "module-aslm.model.devices.filter_wheel"]], "aslm.model.devices.filter_wheel.filter_wheel_base": [[124, "module-aslm.model.devices.filter_wheel.filter_wheel_base"]], "filterwheelbase (class in aslm.model.devices.filter_wheel.filter_wheel_base)": [[125, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase"]], "__init__() (aslm.model.devices.filter_wheel.filter_wheel_base.filterwheelbase method)": [[125, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.__init__"]], "check_if_filter_in_filter_dictionary() (aslm.model.devices.filter_wheel.filter_wheel_base.filterwheelbase method)": [[125, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.check_if_filter_in_filter_dictionary"], [125, "id0"]], "filter_dictionary (aslm.model.devices.filter_wheel.filter_wheel_base.filterwheelbase attribute)": [[125, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.filter_dictionary"]], "wheel_position (aslm.model.devices.filter_wheel.filter_wheel_base.filterwheelbase attribute)": [[125, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.wheel_position"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter": [[126, "module-aslm.model.devices.filter_wheel.filter_wheel_sutter"]], "sutterfilterwheel (class in aslm.model.devices.filter_wheel.filter_wheel_sutter)": [[127, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel"]], "__init__() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[127, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.__init__"]], "baudrate (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[127, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.baudrate"]], "check_if_filter_in_filter_dictionary() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[127, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.check_if_filter_in_filter_dictionary"], [127, "id0"]], "close() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[127, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.close"], [127, "id1"]], "comport (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[127, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.comport"]], "filter_change_delay() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[127, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.filter_change_delay"], [127, "id2"]], "filter_dictionary (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[127, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.filter_dictionary"]], "number_of_filter_wheels (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[127, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.number_of_filter_wheels"]], "read() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[127, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.read"], [127, "id3"]], "set_filter() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[127, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.set_filter"]], "wheel_position (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[127, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.wheel_position"]], "baudrate (in module aslm.model.devices.filter_wheel.filter_wheel_sutter)": [[128, "aslm.model.devices.filter_wheel.filter_wheel_sutter.baudrate"]], "build_filter_wheel_connection() (in module aslm.model.devices.filter_wheel.filter_wheel_sutter)": [[128, "aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic": [[129, "module-aslm.model.devices.filter_wheel.filter_wheel_synthetic"]], "syntheticfilterwheel (class in aslm.model.devices.filter_wheel.filter_wheel_synthetic)": [[130, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel"]], "__init__() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[130, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.__init__"]], "baudrate (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[130, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.baudrate"]], "check_if_filter_in_filter_dictionary() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[130, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.check_if_filter_in_filter_dictionary"]], "close() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[130, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.close"]], "comport (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[130, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.comport"]], "filter_change_delay() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[130, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.filter_change_delay"]], "filter_dictionary (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[130, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.filter_dictionary"]], "number_of_filter_wheels (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[130, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.number_of_filter_wheels"]], "read() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[130, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.read"]], "set_filter() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[130, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.set_filter"]], "wheel_position (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[130, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.wheel_position"]], "aslm.model.devices.galvo": [[131, "module-aslm.model.devices.galvo"]], "aslm.model.devices.galvo.galvo_base": [[132, "module-aslm.model.devices.galvo.galvo_base"]], "galvobase (class in aslm.model.devices.galvo.galvo_base)": [[133, "aslm.model.devices.galvo.galvo_base.GalvoBase"]], "__init__() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[133, "aslm.model.devices.galvo.galvo_base.GalvoBase.__init__"]], "aslm.model.devices.joystick": [[134, "module-aslm.model.devices.joystick"]], "aslm.model.devices.joystick.joystick_base": [[135, "module-aslm.model.devices.joystick.joystick_base"]], "joystickbase (class in aslm.model.devices.joystick.joystick_base)": [[136, "aslm.model.devices.joystick.joystick_base.JoystickBase"]], "__init__() (aslm.model.devices.joystick.joystick_base.joystickbase method)": [[136, "aslm.model.devices.joystick.joystick_base.JoystickBase.__init__"]], "aslm.model.devices.joystick.joystick_logitech": [[137, "module-aslm.model.devices.joystick.joystick_logitech"]], "joysticklogitech (class in aslm.model.devices.joystick.joystick_logitech)": [[138, "aslm.model.devices.joystick.joystick_logitech.JoystickLogitech"]], "__init__() (aslm.model.devices.joystick.joystick_logitech.joysticklogitech method)": [[138, "aslm.model.devices.joystick.joystick_logitech.JoystickLogitech.__init__"]], "axis_handler() (aslm.model.devices.joystick.joystick_logitech.joysticklogitech method)": [[138, "aslm.model.devices.joystick.joystick_logitech.JoystickLogitech.axis_handler"]], "cfg (aslm.model.devices.joystick.joystick_logitech.joysticklogitech attribute)": [[138, "aslm.model.devices.joystick.joystick_logitech.JoystickLogitech.cfg"]], "decrease_slider() (aslm.model.devices.joystick.joystick_logitech.joysticklogitech method)": [[138, "aslm.model.devices.joystick.joystick_logitech.JoystickLogitech.decrease_slider"]], "mode_handler() (aslm.model.devices.joystick.joystick_logitech.joysticklogitech method)": [[138, "aslm.model.devices.joystick.joystick_logitech.JoystickLogitech.mode_handler"]], "aslm.model.devices.joystick.joystick_synthetic": [[139, "module-aslm.model.devices.joystick.joystick_synthetic"]], "syntheticjoystick (class in aslm.model.devices.joystick.joystick_synthetic)": [[140, "aslm.model.devices.joystick.joystick_synthetic.SyntheticJoystick"]], "__init__() (aslm.model.devices.joystick.joystick_synthetic.syntheticjoystick method)": [[140, "aslm.model.devices.joystick.joystick_synthetic.SyntheticJoystick.__init__"]], "aslm.model.devices.lasers": [[141, "module-aslm.model.devices.lasers"]], "aslm.model.devices.lasers.laser_base": [[142, "module-aslm.model.devices.lasers.laser_base"]], "laserbase (class in aslm.model.devices.lasers.laser_base)": [[143, "aslm.model.devices.lasers.laser_base.LaserBase"]], "__init__() (aslm.model.devices.lasers.laser_base.laserbase method)": [[143, "aslm.model.devices.lasers.laser_base.LaserBase.__init__"]], "close() (aslm.model.devices.lasers.laser_base.laserbase method)": [[143, "aslm.model.devices.lasers.laser_base.LaserBase.close"]], "initialize_laser() (aslm.model.devices.lasers.laser_base.laserbase method)": [[143, "aslm.model.devices.lasers.laser_base.LaserBase.initialize_laser"]], "aslm.model.devices.lasers.laser_synthetic": [[144, "module-aslm.model.devices.lasers.laser_synthetic"]], "syntheticlaser (class in aslm.model.devices.lasers.laser_synthetic)": [[145, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser"]], "__init__() (aslm.model.devices.lasers.laser_synthetic.syntheticlaser method)": [[145, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.__init__"]], "close() (aslm.model.devices.lasers.laser_synthetic.syntheticlaser method)": [[145, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.close"]], "initialize_laser() (aslm.model.devices.lasers.laser_synthetic.syntheticlaser method)": [[145, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.initialize_laser"]], "aslm.model.devices.lasers.laser_trigger_base": [[146, "module-aslm.model.devices.lasers.laser_trigger_base"]], "lasertriggerbase (class in aslm.model.devices.lasers.laser_trigger_base)": [[147, "aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase"]], "__init__() (aslm.model.devices.lasers.laser_trigger_base.lasertriggerbase method)": [[147, "aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase.__init__"]], "enable_high_resolution_laser() (aslm.model.devices.lasers.laser_trigger_base.lasertriggerbase method)": [[147, "aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase.enable_high_resolution_laser"]], "enable_low_resolution_laser() (aslm.model.devices.lasers.laser_trigger_base.lasertriggerbase method)": [[147, "aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase.enable_low_resolution_laser"]], "set_laser_analog_voltage() (aslm.model.devices.lasers.laser_trigger_base.lasertriggerbase method)": [[147, "aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase.set_laser_analog_voltage"]], "aslm.model.devices.lasers.laser_trigger_synthetic": [[148, "module-aslm.model.devices.lasers.laser_trigger_synthetic"]], "syntheticlasertriggers (class in aslm.model.devices.lasers.laser_trigger_synthetic)": [[149, "aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers"]], "__init__() (aslm.model.devices.lasers.laser_trigger_synthetic.syntheticlasertriggers method)": [[149, "aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers.__init__"]], "enable_high_resolution_laser() (aslm.model.devices.lasers.laser_trigger_synthetic.syntheticlasertriggers method)": [[149, "aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers.enable_high_resolution_laser"]], "enable_low_resolution_laser() (aslm.model.devices.lasers.laser_trigger_synthetic.syntheticlasertriggers method)": [[149, "aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers.enable_low_resolution_laser"]], "set_laser_analog_voltage() (aslm.model.devices.lasers.laser_trigger_synthetic.syntheticlasertriggers method)": [[149, "aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers.set_laser_analog_voltage"]], "aslm.model.devices.objectives": [[150, "module-aslm.model.devices.objectives"]], "objective (class in aslm.model.devices.objectives)": [[151, "aslm.model.devices.objectives.Objective"]], "__init__() (aslm.model.devices.objectives.objective method)": [[151, "aslm.model.devices.objectives.Objective.__init__"]], "calculate_entrance_pupil() (aslm.model.devices.objectives.objective method)": [[151, "aslm.model.devices.objectives.Objective.calculate_entrance_pupil"]], "aslm.model.devices.remote_focus": [[152, "module-aslm.model.devices.remote_focus"]], "aslm.model.devices.remote_focus.remote_focus_base": [[153, "module-aslm.model.devices.remote_focus.remote_focus_base"]], "remotefocusbase (class in aslm.model.devices.remote_focus.remote_focus_base)": [[154, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase"]], "__init__() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[154, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.__init__"]], "aslm.model.devices.remote_focus.remote_focus_equipment_solutions": [[155, "module-aslm.model.devices.remote_focus.remote_focus_equipment_solutions"]], "remotefocusequipmentsolutions (class in aslm.model.devices.remote_focus.remote_focus_equipment_solutions)": [[156, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions"]], "__init__() (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions method)": [[156, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.__init__"]], "baud_rate (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions attribute)": [[156, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.baud_rate"]], "byte_size (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions attribute)": [[156, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.byte_size"]], "close_connection() (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions method)": [[156, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.close_connection"], [156, "id0"]], "comport (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions attribute)": [[156, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.comport"]], "debug (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions attribute)": [[156, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.debug"]], "parity (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions attribute)": [[156, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.parity"]], "read_bytes() (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions method)": [[156, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.read_bytes"], [156, "id1"]], "read_on_init (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions attribute)": [[156, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.read_on_init"]], "send_command() (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions method)": [[156, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.send_command"], [156, "id2"]], "stop_bits (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions attribute)": [[156, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.stop_bits"]], "timeout (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions attribute)": [[156, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.timeout"]], "aslm.model.devices.shutter": [[157, "module-aslm.model.devices.shutter"]], "aslm.model.devices.shutter.laser_shutter_base": [[158, "module-aslm.model.devices.shutter.laser_shutter_base"]], "shutterbase (class in aslm.model.devices.shutter.laser_shutter_base)": [[159, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase"]], "__init__() (aslm.model.devices.shutter.laser_shutter_base.shutterbase method)": [[159, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.__init__"]], "configuration (aslm.model.devices.shutter.laser_shutter_base.shutterbase attribute)": [[159, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.configuration"]], "device_connection (aslm.model.devices.shutter.laser_shutter_base.shutterbase attribute)": [[159, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.device_connection"]], "microscope_name (aslm.model.devices.shutter.laser_shutter_base.shutterbase attribute)": [[159, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.microscope_name"]], "aslm.model.devices.shutter.laser_shutter_synthetic": [[160, "module-aslm.model.devices.shutter.laser_shutter_synthetic"]], "syntheticshutter (class in aslm.model.devices.shutter.laser_shutter_synthetic)": [[161, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter"]], "__init__() (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter method)": [[161, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.__init__"]], "close_shutters() (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter method)": [[161, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.close_shutters"]], "configuration (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter attribute)": [[161, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.configuration"]], "device_connection (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter attribute)": [[161, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.device_connection"]], "microscope_name (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter attribute)": [[161, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.microscope_name"]], "open_left() (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter method)": [[161, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.open_left"]], "open_right() (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter method)": [[161, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.open_right"]], "state() (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter method)": [[161, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.state"]], "aslm.model.devices.stages": [[162, "module-aslm.model.devices.stages"]], "aslm.model.devices.stages.stage_asi": [[163, "module-aslm.model.devices.stages.stage_asi"]], "asistage (class in aslm.model.devices.stages.stage_asi)": [[164, "aslm.model.devices.stages.stage_asi.ASIStage"]], "__init__() (aslm.model.devices.stages.stage_asi.asistage method)": [[164, "aslm.model.devices.stages.stage_asi.ASIStage.__init__"]], "create_position_dict() (aslm.model.devices.stages.stage_asi.asistage method)": [[164, "aslm.model.devices.stages.stage_asi.ASIStage.create_position_dict"]], "get_abs_position() (aslm.model.devices.stages.stage_asi.asistage method)": [[164, "aslm.model.devices.stages.stage_asi.ASIStage.get_abs_position"]], "move_absolute() (aslm.model.devices.stages.stage_asi.asistage method)": [[164, "aslm.model.devices.stages.stage_asi.ASIStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_asi.asistage method)": [[164, "aslm.model.devices.stages.stage_asi.ASIStage.move_axis_absolute"]], "report_position() (aslm.model.devices.stages.stage_asi.asistage method)": [[164, "aslm.model.devices.stages.stage_asi.ASIStage.report_position"]], "stop() (aslm.model.devices.stages.stage_asi.asistage method)": [[164, "aslm.model.devices.stages.stage_asi.ASIStage.stop"]], "build_asi_stage_connection() (in module aslm.model.devices.stages.stage_asi)": [[165, "aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection"]], "aslm.model.devices.stages.stage_base": [[166, "module-aslm.model.devices.stages.stage_base"]], "stagebase (class in aslm.model.devices.stages.stage_base)": [[167, "aslm.model.devices.stages.stage_base.StageBase"]], "__init__() (aslm.model.devices.stages.stage_base.stagebase method)": [[167, "aslm.model.devices.stages.stage_base.StageBase.__init__"]], "create_position_dict() (aslm.model.devices.stages.stage_base.stagebase method)": [[167, "aslm.model.devices.stages.stage_base.StageBase.create_position_dict"], [167, "id0"]], "f_max (aslm.model.devices.stages.stage_base.stagebase attribute)": [[167, "aslm.model.devices.stages.stage_base.StageBase.f_max"]], "f_min (aslm.model.devices.stages.stage_base.stagebase attribute)": [[167, "aslm.model.devices.stages.stage_base.StageBase.f_min"]], "f_pos (aslm.model.devices.stages.stage_base.stagebase attribute)": [[167, "aslm.model.devices.stages.stage_base.StageBase.f_pos"]], "get_abs_position() (aslm.model.devices.stages.stage_base.stagebase method)": [[167, "aslm.model.devices.stages.stage_base.StageBase.get_abs_position"], [167, "id1"]], "position_dict (aslm.model.devices.stages.stage_base.stagebase attribute)": [[167, "aslm.model.devices.stages.stage_base.StageBase.position_dict"]], "stop() (aslm.model.devices.stages.stage_base.stagebase method)": [[167, "aslm.model.devices.stages.stage_base.StageBase.stop"], [167, "id2"]], "theta_max (aslm.model.devices.stages.stage_base.stagebase attribute)": [[167, "aslm.model.devices.stages.stage_base.StageBase.theta_max"]], "theta_min (aslm.model.devices.stages.stage_base.stagebase attribute)": [[167, "aslm.model.devices.stages.stage_base.StageBase.theta_min"]], "theta_pos (aslm.model.devices.stages.stage_base.stagebase attribute)": [[167, "aslm.model.devices.stages.stage_base.StageBase.theta_pos"]], "x_max (aslm.model.devices.stages.stage_base.stagebase attribute)": [[167, "aslm.model.devices.stages.stage_base.StageBase.x_max"]], "x_min (aslm.model.devices.stages.stage_base.stagebase attribute)": [[167, "aslm.model.devices.stages.stage_base.StageBase.x_min"]], "x_pos (aslm.model.devices.stages.stage_base.stagebase attribute)": [[167, "aslm.model.devices.stages.stage_base.StageBase.x_pos"]], "y_max (aslm.model.devices.stages.stage_base.stagebase attribute)": [[167, "aslm.model.devices.stages.stage_base.StageBase.y_max"]], "y_min (aslm.model.devices.stages.stage_base.stagebase attribute)": [[167, "aslm.model.devices.stages.stage_base.StageBase.y_min"]], "y_pos (aslm.model.devices.stages.stage_base.stagebase attribute)": [[167, "aslm.model.devices.stages.stage_base.StageBase.y_pos"]], "z_max (aslm.model.devices.stages.stage_base.stagebase attribute)": [[167, "aslm.model.devices.stages.stage_base.StageBase.z_max"]], "z_min (aslm.model.devices.stages.stage_base.stagebase attribute)": [[167, "aslm.model.devices.stages.stage_base.StageBase.z_min"]], "z_pos (aslm.model.devices.stages.stage_base.stagebase attribute)": [[167, "aslm.model.devices.stages.stage_base.StageBase.z_pos"]], "aslm.model.devices.stages.stage_galvo": [[168, "module-aslm.model.devices.stages.stage_galvo"]], "galvonistage (class in aslm.model.devices.stages.stage_galvo)": [[169, "aslm.model.devices.stages.stage_galvo.GalvoNIStage"]], "__init__() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[169, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.__init__"]], "create_position_dict() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[169, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.create_position_dict"], [169, "id0"]], "get_abs_position() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[169, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.get_abs_position"], [169, "id1"]], "move_absolute() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[169, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[169, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.move_axis_absolute"]], "report_position() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[169, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.report_position"]], "stop() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[169, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.stop"], [169, "id2"]], "aslm.model.devices.stages.stage_mcl": [[170, "module-aslm.model.devices.stages.stage_mcl"]], "mclstage (class in aslm.model.devices.stages.stage_mcl)": [[171, "aslm.model.devices.stages.stage_mcl.MCLStage"]], "__init__() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[171, "aslm.model.devices.stages.stage_mcl.MCLStage.__init__"]], "create_position_dict() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[171, "aslm.model.devices.stages.stage_mcl.MCLStage.create_position_dict"]], "get_abs_position() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[171, "aslm.model.devices.stages.stage_mcl.MCLStage.get_abs_position"]], "move_absolute() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[171, "aslm.model.devices.stages.stage_mcl.MCLStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[171, "aslm.model.devices.stages.stage_mcl.MCLStage.move_axis_absolute"]], "report_position() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[171, "aslm.model.devices.stages.stage_mcl.MCLStage.report_position"]], "stop() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[171, "aslm.model.devices.stages.stage_mcl.MCLStage.stop"]], "build_mclstage_connection() (in module aslm.model.devices.stages.stage_mcl)": [[172, "aslm.model.devices.stages.stage_mcl.build_MCLStage_connection"]], "aslm.model.devices.stages.stage_pi": [[173, "module-aslm.model.devices.stages.stage_pi"]], "pistage (class in aslm.model.devices.stages.stage_pi)": [[174, "aslm.model.devices.stages.stage_pi.PIStage"]], "__init__() (aslm.model.devices.stages.stage_pi.pistage method)": [[174, "aslm.model.devices.stages.stage_pi.PIStage.__init__"]], "create_position_dict() (aslm.model.devices.stages.stage_pi.pistage method)": [[174, "aslm.model.devices.stages.stage_pi.PIStage.create_position_dict"], [174, "id0"]], "f_max (aslm.model.devices.stages.stage_pi.pistage attribute)": [[174, "aslm.model.devices.stages.stage_pi.PIStage.f_max"]], "f_min (aslm.model.devices.stages.stage_pi.pistage attribute)": [[174, "aslm.model.devices.stages.stage_pi.PIStage.f_min"]], "f_pos (aslm.model.devices.stages.stage_pi.pistage attribute)": [[174, "aslm.model.devices.stages.stage_pi.PIStage.f_pos"]], "get_abs_position() (aslm.model.devices.stages.stage_pi.pistage method)": [[174, "aslm.model.devices.stages.stage_pi.PIStage.get_abs_position"], [174, "id1"]], "move_absolute() (aslm.model.devices.stages.stage_pi.pistage method)": [[174, "aslm.model.devices.stages.stage_pi.PIStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_pi.pistage method)": [[174, "aslm.model.devices.stages.stage_pi.PIStage.move_axis_absolute"]], "position_dict (aslm.model.devices.stages.stage_pi.pistage attribute)": [[174, "aslm.model.devices.stages.stage_pi.PIStage.position_dict"]], "report_position() (aslm.model.devices.stages.stage_pi.pistage method)": [[174, "aslm.model.devices.stages.stage_pi.PIStage.report_position"]], "stop() (aslm.model.devices.stages.stage_pi.pistage method)": [[174, "aslm.model.devices.stages.stage_pi.PIStage.stop"], [174, "id2"]], "theta_max (aslm.model.devices.stages.stage_pi.pistage attribute)": [[174, "aslm.model.devices.stages.stage_pi.PIStage.theta_max"]], "theta_min (aslm.model.devices.stages.stage_pi.pistage attribute)": [[174, "aslm.model.devices.stages.stage_pi.PIStage.theta_min"]], "theta_pos (aslm.model.devices.stages.stage_pi.pistage attribute)": [[174, "aslm.model.devices.stages.stage_pi.PIStage.theta_pos"]], "x_max (aslm.model.devices.stages.stage_pi.pistage attribute)": [[174, "aslm.model.devices.stages.stage_pi.PIStage.x_max"]], "x_min (aslm.model.devices.stages.stage_pi.pistage attribute)": [[174, "aslm.model.devices.stages.stage_pi.PIStage.x_min"]], "x_pos (aslm.model.devices.stages.stage_pi.pistage attribute)": [[174, "aslm.model.devices.stages.stage_pi.PIStage.x_pos"]], "y_max (aslm.model.devices.stages.stage_pi.pistage attribute)": [[174, "aslm.model.devices.stages.stage_pi.PIStage.y_max"]], "y_min (aslm.model.devices.stages.stage_pi.pistage attribute)": [[174, "aslm.model.devices.stages.stage_pi.PIStage.y_min"]], "y_pos (aslm.model.devices.stages.stage_pi.pistage attribute)": [[174, "aslm.model.devices.stages.stage_pi.PIStage.y_pos"]], "z_max (aslm.model.devices.stages.stage_pi.pistage attribute)": [[174, "aslm.model.devices.stages.stage_pi.PIStage.z_max"]], "z_min (aslm.model.devices.stages.stage_pi.pistage attribute)": [[174, "aslm.model.devices.stages.stage_pi.PIStage.z_min"]], "z_pos (aslm.model.devices.stages.stage_pi.pistage attribute)": [[174, "aslm.model.devices.stages.stage_pi.PIStage.z_pos"]], "build_pistage_connection() (in module aslm.model.devices.stages.stage_pi)": [[175, "aslm.model.devices.stages.stage_pi.build_PIStage_connection"]], "aslm.model.devices.stages.stage_sutter": [[176, "module-aslm.model.devices.stages.stage_sutter"]], "sutterstage (class in aslm.model.devices.stages.stage_sutter)": [[177, "aslm.model.devices.stages.stage_sutter.SutterStage"]], "__init__() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[177, "aslm.model.devices.stages.stage_sutter.SutterStage.__init__"]], "baudrate (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[177, "aslm.model.devices.stages.stage_sutter.SutterStage.baudrate"]], "check_byte_order() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[177, "aslm.model.devices.stages.stage_sutter.SutterStage.check_byte_order"]], "close() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[177, "aslm.model.devices.stages.stage_sutter.SutterStage.close"], [177, "id0"]], "comport (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[177, "aslm.model.devices.stages.stage_sutter.SutterStage.comport"]], "convert_microns_to_microsteps() (aslm.model.devices.stages.stage_sutter.sutterstage static method)": [[177, "aslm.model.devices.stages.stage_sutter.SutterStage.convert_microns_to_microsteps"]], "convert_microsteps_to_microns() (aslm.model.devices.stages.stage_sutter.sutterstage static method)": [[177, "aslm.model.devices.stages.stage_sutter.SutterStage.convert_microsteps_to_microns"]], "create_position_dict() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[177, "aslm.model.devices.stages.stage_sutter.SutterStage.create_position_dict"]], "filter_dictionary (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[177, "aslm.model.devices.stages.stage_sutter.SutterStage.filter_dictionary"]], "flush_buffers() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[177, "aslm.model.devices.stages.stage_sutter.SutterStage.flush_buffers"]], "get_abs_position() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[177, "aslm.model.devices.stages.stage_sutter.SutterStage.get_abs_position"]], "move_absolute() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[177, "aslm.model.devices.stages.stage_sutter.SutterStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[177, "aslm.model.devices.stages.stage_sutter.SutterStage.move_axis_absolute"]], "read() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[177, "aslm.model.devices.stages.stage_sutter.SutterStage.read"]], "report_position() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[177, "aslm.model.devices.stages.stage_sutter.SutterStage.report_position"]], "set_stage_speed_and_resolution() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[177, "aslm.model.devices.stages.stage_sutter.SutterStage.set_stage_speed_and_resolution"]], "stop() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[177, "aslm.model.devices.stages.stage_sutter.SutterStage.stop"]], "baudrate (in module aslm.model.devices.stages.stage_sutter)": [[178, "aslm.model.devices.stages.stage_sutter.baudrate"]], "build_sutter_stage_connection() (in module aslm.model.devices.stages.stage_sutter)": [[178, "aslm.model.devices.stages.stage_sutter.build_sutter_stage_connection"]], "comport (in module aslm.model.devices.stages.stage_sutter)": [[178, "aslm.model.devices.stages.stage_sutter.comport"]], "aslm.model.devices.stages.stage_synthetic": [[179, "module-aslm.model.devices.stages.stage_synthetic"]], "syntheticstage (class in aslm.model.devices.stages.stage_synthetic)": [[180, "aslm.model.devices.stages.stage_synthetic.SyntheticStage"]], "__init__() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[180, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.__init__"]], "create_position_dict() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[180, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.create_position_dict"]], "get_abs_position() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[180, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.get_abs_position"]], "move_absolute() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[180, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[180, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.move_axis_absolute"]], "stop() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[180, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.stop"]], "aslm.model.devices.stages.stage_tl_kcube_inertial": [[181, "module-aslm.model.devices.stages.stage_tl_kcube_inertial"]], "tlkimstage (class in aslm.model.devices.stages.stage_tl_kcube_inertial)": [[182, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage"]], "__init__() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[182, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.__init__"]], "create_position_dict() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[182, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.create_position_dict"]], "get_abs_position() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[182, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.get_abs_position"]], "move_absolute() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[182, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[182, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.move_axis_absolute"]], "report_position() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[182, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.report_position"]], "stop() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[182, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.stop"]], "build_tlkimstage_connection() (in module aslm.model.devices.stages.stage_tl_kcube_inertial)": [[183, "aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection"]], "aslm.model.devices.zoom": [[184, "module-aslm.model.devices.zoom"]], "aslm.model.devices.zoom.zoom_base": [[185, "module-aslm.model.devices.zoom.zoom_base"]], "zoombase (class in aslm.model.devices.zoom.zoom_base)": [[186, "aslm.model.devices.zoom.zoom_base.ZoomBase"]], "__init__() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[186, "aslm.model.devices.zoom.zoom_base.ZoomBase.__init__"]], "move() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[186, "aslm.model.devices.zoom.zoom_base.ZoomBase.move"]], "read_position() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[186, "aslm.model.devices.zoom.zoom_base.ZoomBase.read_position"]], "set_zoom() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[186, "aslm.model.devices.zoom.zoom_base.ZoomBase.set_zoom"]], "aslm.model.devices.zoom.zoom_synthetic": [[187, "module-aslm.model.devices.zoom.zoom_synthetic"]], "syntheticzoom (class in aslm.model.devices.zoom.zoom_synthetic)": [[188, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom"]], "__init__() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[188, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.__init__"]], "move() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[188, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.move"], [188, "id0"]], "read_position() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[188, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.read_position"], [188, "id1"]], "set_zoom() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[188, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.set_zoom"], [188, "id2"]], "aslm.model.dummy": [[189, "module-aslm.model.dummy"]], "dummydevice (class in aslm.model.dummy)": [[190, "aslm.model.dummy.DummyDevice"]], "__init__() (aslm.model.dummy.dummydevice method)": [[190, "aslm.model.dummy.DummyDevice.__init__"]], "dummymodel (class in aslm.model.dummy)": [[191, "aslm.model.dummy.DummyModel"]], "__init__() (aslm.model.dummy.dummymodel method)": [[191, "aslm.model.dummy.DummyModel.__init__"]], "aslm.model.features": [[192, "module-aslm.model.features"]], "aslm.model.features.autofocus": [[193, "module-aslm.model.features.autofocus"]], "autofocus (class in aslm.model.features.autofocus)": [[194, "aslm.model.features.autofocus.Autofocus"]], "__init__() (aslm.model.features.autofocus.autofocus method)": [[194, "aslm.model.features.autofocus.Autofocus.__init__"]], "get_autofocus_frame_num() (aslm.model.features.autofocus.autofocus method)": [[194, "aslm.model.features.autofocus.Autofocus.get_autofocus_frame_num"]], "get_steps() (aslm.model.features.autofocus.autofocus static method)": [[194, "aslm.model.features.autofocus.Autofocus.get_steps"]], "run() (aslm.model.features.autofocus.autofocus method)": [[194, "aslm.model.features.autofocus.Autofocus.run"]], "aslm.model.features.common_features": [[195, "module-aslm.model.features.common_features"]], "changeresolution (class in aslm.model.features.common_features)": [[196, "aslm.model.features.common_features.ChangeResolution"]], "__init__() (aslm.model.features.common_features.changeresolution method)": [[196, "aslm.model.features.common_features.ChangeResolution.__init__"]], "findtissuesimple2d (class in aslm.model.features.common_features)": [[197, "aslm.model.features.common_features.FindTissueSimple2D"]], "__init__() (aslm.model.features.common_features.findtissuesimple2d method)": [[197, "aslm.model.features.common_features.FindTissueSimple2D.__init__"]], "loopbycount (class in aslm.model.features.common_features)": [[198, "aslm.model.features.common_features.LoopByCount"]], "__init__() (aslm.model.features.common_features.loopbycount method)": [[198, "aslm.model.features.common_features.LoopByCount.__init__"]], "preparenextchannel (class in aslm.model.features.common_features)": [[199, "aslm.model.features.common_features.PrepareNextChannel"]], "__init__() (aslm.model.features.common_features.preparenextchannel method)": [[199, "aslm.model.features.common_features.PrepareNextChannel.__init__"]], "snap (class in aslm.model.features.common_features)": [[200, "aslm.model.features.common_features.Snap"]], "__init__() (aslm.model.features.common_features.snap method)": [[200, "aslm.model.features.common_features.Snap.__init__"]], "waittocontinue (class in aslm.model.features.common_features)": [[201, "aslm.model.features.common_features.WaitToContinue"]], "__init__() (aslm.model.features.common_features.waittocontinue method)": [[201, "aslm.model.features.common_features.WaitToContinue.__init__"]], "zstackacquisition (class in aslm.model.features.common_features)": [[202, "aslm.model.features.common_features.ZStackAcquisition"]], "__init__() (aslm.model.features.common_features.zstackacquisition method)": [[202, "aslm.model.features.common_features.ZStackAcquisition.__init__"]], "aslm.model.features.dummy_detective": [[203, "module-aslm.model.features.dummy_detective"]], "dummy_detective (class in aslm.model.features.dummy_detective)": [[204, "aslm.model.features.dummy_detective.Dummy_Detective"]], "__init__() (aslm.model.features.dummy_detective.dummy_detective method)": [[204, "aslm.model.features.dummy_detective.Dummy_Detective.__init__"]], "aslm.model.features.feature_container": [[205, "module-aslm.model.features.feature_container"]], "container (class in aslm.model.features.feature_container)": [[206, "aslm.model.features.feature_container.Container"]], "__init__() (aslm.model.features.feature_container.container method)": [[206, "aslm.model.features.feature_container.Container.__init__"]], "datacontainer (class in aslm.model.features.feature_container)": [[207, "aslm.model.features.feature_container.DataContainer"]], "__init__() (aslm.model.features.feature_container.datacontainer method)": [[207, "aslm.model.features.feature_container.DataContainer.__init__"]], "datanode (class in aslm.model.features.feature_container)": [[208, "aslm.model.features.feature_container.DataNode"]], "__init__() (aslm.model.features.feature_container.datanode method)": [[208, "aslm.model.features.feature_container.DataNode.__init__"]], "signalcontainer (class in aslm.model.features.feature_container)": [[209, "aslm.model.features.feature_container.SignalContainer"]], "__init__() (aslm.model.features.feature_container.signalcontainer method)": [[209, "aslm.model.features.feature_container.SignalContainer.__init__"]], "signalnode (class in aslm.model.features.feature_container)": [[210, "aslm.model.features.feature_container.SignalNode"]], "__init__() (aslm.model.features.feature_container.signalnode method)": [[210, "aslm.model.features.feature_container.SignalNode.__init__"]], "treenode (class in aslm.model.features.feature_container)": [[211, "aslm.model.features.feature_container.TreeNode"]], "__init__() (aslm.model.features.feature_container.treenode method)": [[211, "aslm.model.features.feature_container.TreeNode.__init__"]], "dummy_true() (in module aslm.model.features.feature_container)": [[212, "aslm.model.features.feature_container.dummy_True"]], "dummy_func() (in module aslm.model.features.feature_container)": [[213, "aslm.model.features.feature_container.dummy_func"]], "get_registered_funcs() (in module aslm.model.features.feature_container)": [[214, "aslm.model.features.feature_container.get_registered_funcs"]], "load_features() (in module aslm.model.features.feature_container)": [[215, "aslm.model.features.feature_container.load_features"]], "aslm.model.features.image_writer": [[216, "module-aslm.model.features.image_writer"]], "imagewriter (class in aslm.model.features.image_writer)": [[217, "aslm.model.features.image_writer.ImageWriter"]], "__init__() (aslm.model.features.image_writer.imagewriter method)": [[217, "aslm.model.features.image_writer.ImageWriter.__init__"]], "close() (aslm.model.features.image_writer.imagewriter method)": [[217, "aslm.model.features.image_writer.ImageWriter.close"]], "generate_image_name() (aslm.model.features.image_writer.imagewriter method)": [[217, "aslm.model.features.image_writer.ImageWriter.generate_image_name"]], "save_image() (aslm.model.features.image_writer.imagewriter method)": [[217, "aslm.model.features.image_writer.ImageWriter.save_image"]], "aslm.model.features.restful_features": [[218, "module-aslm.model.features.restful_features"]], "ilastiksegmentation (class in aslm.model.features.restful_features)": [[219, "aslm.model.features.restful_features.IlastikSegmentation"]], "__init__() (aslm.model.features.restful_features.ilastiksegmentation method)": [[219, "aslm.model.features.restful_features.IlastikSegmentation.__init__"]], "prepare_service() (in module aslm.model.features.restful_features)": [[220, "aslm.model.features.restful_features.prepare_service"]], "aslm.model.features.volume_search": [[221, "module-aslm.model.features.volume_search"]], "volumesearch (class in aslm.model.features.volume_search)": [[222, "aslm.model.features.volume_search.VolumeSearch"]], "__init__() (aslm.model.features.volume_search.volumesearch method)": [[222, "aslm.model.features.volume_search.VolumeSearch.__init__"]], "aslm.model.metadata_sources": [[223, "module-aslm.model.metadata_sources"]], "aslm.model.metadata_sources.bdv_metadata": [[224, "module-aslm.model.metadata_sources.bdv_metadata"]], "bigdataviewermetadata (class in aslm.model.metadata_sources.bdv_metadata)": [[225, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata"]], "__init__() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[225, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.__init__"]], "parse_bdv_xml() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[225, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.parse_bdv_xml"]], "shape (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata property)": [[225, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.shape"]], "stage_positions_to_affine_matrix() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[225, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.stage_positions_to_affine_matrix"]], "to_xml() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[225, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.to_xml"]], "voxel_size (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata property)": [[225, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.voxel_size"]], "write_xml() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[225, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.write_xml"]], "aslm.model.metadata_sources.metadata": [[226, "module-aslm.model.metadata_sources.metadata"]], "metadata (class in aslm.model.metadata_sources.metadata)": [[227, "aslm.model.metadata_sources.metadata.Metadata"]], "__init__() (aslm.model.metadata_sources.metadata.metadata method)": [[227, "aslm.model.metadata_sources.metadata.Metadata.__init__"]], "shape (aslm.model.metadata_sources.metadata.metadata property)": [[227, "aslm.model.metadata_sources.metadata.Metadata.shape"]], "voxel_size (aslm.model.metadata_sources.metadata.metadata property)": [[227, "aslm.model.metadata_sources.metadata.Metadata.voxel_size"]], "xmlmetadata (class in aslm.model.metadata_sources.metadata)": [[228, "aslm.model.metadata_sources.metadata.XMLMetadata"]], "__init__() (aslm.model.metadata_sources.metadata.xmlmetadata method)": [[228, "aslm.model.metadata_sources.metadata.XMLMetadata.__init__"]], "shape (aslm.model.metadata_sources.metadata.xmlmetadata property)": [[228, "aslm.model.metadata_sources.metadata.XMLMetadata.shape"]], "to_xml() (aslm.model.metadata_sources.metadata.xmlmetadata method)": [[228, "aslm.model.metadata_sources.metadata.XMLMetadata.to_xml"]], "voxel_size (aslm.model.metadata_sources.metadata.xmlmetadata property)": [[228, "aslm.model.metadata_sources.metadata.XMLMetadata.voxel_size"]], "write_xml() (aslm.model.metadata_sources.metadata.xmlmetadata method)": [[228, "aslm.model.metadata_sources.metadata.XMLMetadata.write_xml"]], "aslm.model.metadata_sources.ome_tiff_metadata": [[229, "module-aslm.model.metadata_sources.ome_tiff_metadata"]], "ometiffmetadata (class in aslm.model.metadata_sources.ome_tiff_metadata)": [[230, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata"]], "__init__() (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata method)": [[230, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.__init__"]], "ome_tiff_xml_dict() (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata method)": [[230, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.ome_tiff_xml_dict"]], "shape (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata property)": [[230, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.shape"]], "to_xml() (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata method)": [[230, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.to_xml"]], "voxel_size (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata property)": [[230, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.voxel_size"]], "write_xml() (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata method)": [[230, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.write_xml"]], "aslm.model.microscope": [[231, "module-aslm.model.microscope"]], "microscope (class in aslm.model.microscope)": [[232, "aslm.model.microscope.Microscope"]], "__init__() (aslm.model.microscope.microscope method)": [[232, "aslm.model.microscope.Microscope.__init__"]], "get_readout_time() (aslm.model.microscope.microscope method)": [[232, "aslm.model.microscope.Microscope.get_readout_time"]], "aslm.model.model": [[233, "module-aslm.model.model"]], "model (class in aslm.model.model)": [[234, "aslm.model.model.Model"]], "use_gpu (aslm.model.model.model attribute)": [[234, "aslm.model.model.Model.USE_GPU"]], "__init__() (aslm.model.model.model method)": [[234, "aslm.model.model.Model.__init__"]], "args (aslm.model.model.model attribute)": [[234, "aslm.model.model.Model.args"]], "change_resolution() (aslm.model.model.model method)": [[234, "aslm.model.model.Model.change_resolution"]], "configuration_path (aslm.model.model.model attribute)": [[234, "aslm.model.model.Model.configuration_path"]], "create_pipe() (aslm.model.model.model method)": [[234, "aslm.model.model.Model.create_pipe"], [234, "id0"]], "end_acquisition() (aslm.model.model.model method)": [[234, "aslm.model.model.Model.end_acquisition"], [234, "id1"]], "event_queue (aslm.model.model.model attribute)": [[234, "aslm.model.model.Model.event_queue"]], "experiment_path (aslm.model.model.model attribute)": [[234, "aslm.model.model.Model.experiment_path"]], "get_data_buffer() (aslm.model.model.model method)": [[234, "aslm.model.model.Model.get_data_buffer"], [234, "id2"]], "get_readout_time() (aslm.model.model.model method)": [[234, "aslm.model.model.Model.get_readout_time"]], "get_stage_position() (aslm.model.model.model method)": [[234, "aslm.model.model.Model.get_stage_position"]], "load_images() (aslm.model.model.model method)": [[234, "aslm.model.model.Model.load_images"]], "move_stage() (aslm.model.model.model method)": [[234, "aslm.model.model.Model.move_stage"], [234, "id3"]], "prepare_acquisition() (aslm.model.model.model method)": [[234, "aslm.model.model.Model.prepare_acquisition"], [234, "id4"]], "release_pipe() (aslm.model.model.model method)": [[234, "aslm.model.model.Model.release_pipe"], [234, "id5"]], "run_acquisition() (aslm.model.model.model method)": [[234, "aslm.model.model.Model.run_acquisition"]], "run_command() (aslm.model.model.model method)": [[234, "aslm.model.model.Model.run_command"], [234, "id6"]], "run_data_process() (aslm.model.model.model method)": [[234, "aslm.model.model.Model.run_data_process"], [234, "id7"]], "run_live_acquisition() (aslm.model.model.model method)": [[234, "aslm.model.model.Model.run_live_acquisition"], [234, "id8"]], "run_single_acquisition() (aslm.model.model.model method)": [[234, "aslm.model.model.Model.run_single_acquisition"]], "run_single_channel_acquisition() (aslm.model.model.model method)": [[234, "aslm.model.model.Model.run_single_channel_acquisition"]], "run_single_channel_acquisition_with_features() (aslm.model.model.model method)": [[234, "aslm.model.model.Model.run_single_channel_acquisition_with_features"]], "run_z_stack_acquisition() (aslm.model.model.model method)": [[234, "aslm.model.model.Model.run_z_stack_acquisition"]], "snap_image() (aslm.model.model.model method)": [[234, "aslm.model.model.Model.snap_image"], [234, "id9"]], "stop_stage() (aslm.model.model.model method)": [[234, "aslm.model.model.Model.stop_stage"]], "update_data_buffer() (aslm.model.model.model method)": [[234, "aslm.model.model.Model.update_data_buffer"], [234, "id10"]], "aslm.model.waveforms": [[235, "module-aslm.model.waveforms"]], "camera_exposure() (in module aslm.model.waveforms)": [[236, "aslm.model.waveforms.camera_exposure"]], "dc_value() (in module aslm.model.waveforms)": [[237, "aslm.model.waveforms.dc_value"]], "sawtooth() (in module aslm.model.waveforms)": [[238, "aslm.model.waveforms.sawtooth"]], "sine_wave() (in module aslm.model.waveforms)": [[239, "aslm.model.waveforms.sine_wave"]], "single_pulse() (in module aslm.model.waveforms)": [[240, "aslm.model.waveforms.single_pulse"]], "smooth_waveform() (in module aslm.model.waveforms)": [[241, "aslm.model.waveforms.smooth_waveform"]], "square() (in module aslm.model.waveforms)": [[242, "aslm.model.waveforms.square"]], "tunable_lens_ramp() (in module aslm.model.waveforms)": [[243, "aslm.model.waveforms.tunable_lens_ramp"]], "aslm.tools": [[244, "module-aslm.tools"]], "aslm.tools.beams": [[245, "module-aslm.tools.beams"]], "fit_gaussian_beam_error() (in module aslm.tools.beams)": [[246, "aslm.tools.beams.fit_gaussian_beam_error"]], "fit_gaussian_beam_mse() (in module aslm.tools.beams)": [[247, "aslm.tools.beams.fit_gaussian_beam_mse"]], "gaussian_beam() (in module aslm.tools.beams)": [[248, "aslm.tools.beams.gaussian_beam"]], "aslm.tools.common_dict_tools": [[249, "module-aslm.tools.common_dict_tools"]], "update_settings_common() (in module aslm.tools.common_dict_tools)": [[250, "aslm.tools.common_dict_tools.update_settings_common"]], "update_stage_dict() (in module aslm.tools.common_dict_tools)": [[251, "aslm.tools.common_dict_tools.update_stage_dict"]], "aslm.tools.common_functions": [[252, "module-aslm.tools.common_functions"]], "build_ref_name() (in module aslm.tools.common_functions)": [[253, "aslm.tools.common_functions.build_ref_name"]], "combine_funcs() (in module aslm.tools.common_functions)": [[254, "aslm.tools.common_functions.combine_funcs"]], "copy_proxy_object() (in module aslm.tools.common_functions)": [[255, "aslm.tools.common_functions.copy_proxy_object"]], "aslm.tools.decorators": [[256, "module-aslm.tools.decorators"]], "function_timer() (in module aslm.tools.decorators)": [[257, "aslm.tools.decorators.function_timer"]], "aslm.tools.file_functions": [[258, "module-aslm.tools.file_functions"]], "create_save_path() (in module aslm.tools.file_functions)": [[259, "aslm.tools.file_functions.create_save_path"]], "save_yaml_file() (in module aslm.tools.file_functions)": [[260, "aslm.tools.file_functions.save_yaml_file"]], "aslm.tools.image": [[261, "module-aslm.tools.image"]], "text_array() (in module aslm.tools.image)": [[262, "aslm.tools.image.text_array"]], "aslm.tools.image_loaders": [[263, "module-aslm.tools.image_loaders"]], "lazytiff (class in aslm.tools.image_loaders)": [[264, "aslm.tools.image_loaders.LazyTiff"]], "__init__() (aslm.tools.image_loaders.lazytiff method)": [[264, "aslm.tools.image_loaders.LazyTiff.__init__"]], "aslm.tools.main_functions": [[265, "module-aslm.tools.main_functions"]], "create_parser() (in module aslm.tools.main_functions)": [[266, "aslm.tools.main_functions.create_parser"]], "evaluate_parser_input_arguments() (in module aslm.tools.main_functions)": [[267, "aslm.tools.main_functions.evaluate_parser_input_arguments"]], "identify_gpu() (in module aslm.tools.main_functions)": [[268, "aslm.tools.main_functions.identify_gpu"]], "aslm.tools.multipos_table_tools": [[269, "module-aslm.tools.multipos_table_tools"]], "calc_num_tiles() (in module aslm.tools.multipos_table_tools)": [[270, "aslm.tools.multipos_table_tools.calc_num_tiles"]], "compute_tiles_from_bounding_box() (in module aslm.tools.multipos_table_tools)": [[271, "aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box"]], "sign() (in module aslm.tools.multipos_table_tools)": [[272, "aslm.tools.multipos_table_tools.sign"]], "update_table() (in module aslm.tools.multipos_table_tools)": [[273, "aslm.tools.multipos_table_tools.update_table"]], "aslm.tools.project_stats": [[274, "module-aslm.tools.project_stats"]], "countlines() (in module aslm.tools.project_stats)": [[275, "aslm.tools.project_stats.countlines"]], "aslm.tools.xml_tools": [[276, "module-aslm.tools.xml_tools"]], "dict_to_xml() (in module aslm.tools.xml_tools)": [[277, "aslm.tools.xml_tools.dict_to_xml"]], "parse_xml() (in module aslm.tools.xml_tools)": [[278, "aslm.tools.xml_tools.parse_xml"]], "aslm.view": [[279, "module-aslm.view"]], "aslm.view.main_window_content": [[280, "module-aslm.view.main_window_content"]], "aslm.view.main_window_content.acquire_bar_frame": [[281, "module-aslm.view.main_window_content.acquire_bar_frame"]], "aslm.view.main_window_content.channel_settings": [[282, "module-aslm.view.main_window_content.channel_settings"]], "aslm.view.main_window_content.channel_settings.channel_settings_frames": [[283, "module-aslm.view.main_window_content.channel_settings.channel_settings_frames"]], "aslm.view.main_window_content.stage_control": [[284, "module-aslm.view.main_window_content.stage_control"]], "aslm.view.main_window_content.stage_control.stage_control_frames": [[285, "module-aslm.view.main_window_content.stage_control.stage_control_frames"]], "aslm.view.menus": [[286, "module-aslm.view.menus"]]}})