Search.setIndex({"docnames": ["_autosummary/aslm.config", "_autosummary/aslm.config.config", "_autosummary/aslm.config.config.build_nested_dict", "_autosummary/aslm.config.config.get_aslm_path", "_autosummary/aslm.config.config.get_configuration_paths", "_autosummary/aslm.config.config.load_configs", "_autosummary/aslm.config.config.update_config_dict", "_autosummary/aslm.controller", "_autosummary/aslm.controller.configuration_controller", "_autosummary/aslm.controller.configuration_controller.ConfigurationController", "_autosummary/aslm.controller.thread_pool", "_autosummary/aslm.controller.thread_pool.SelfLockThread", "_autosummary/aslm.controller.thread_pool.SynchronizedThreadPool", "_autosummary/aslm.controller.thread_pool.ThreadWaitlist", "_autosummary/aslm.model", "_autosummary/aslm.model.analysis", "_autosummary/aslm.model.analysis.boundary_detect", "_autosummary/aslm.model.analysis.boundary_detect.binary_detect", "_autosummary/aslm.model.analysis.boundary_detect.find_tissue_boundary_2d", "_autosummary/aslm.model.analysis.boundary_detect.has_tissue", "_autosummary/aslm.model.analysis.boundary_detect.map_boundary", "_autosummary/aslm.model.analysis.camera", "_autosummary/aslm.model.analysis.camera.compute_flatfield_map", "_autosummary/aslm.model.analysis.camera.compute_noise_sigma", "_autosummary/aslm.model.analysis.camera.compute_scmos_offset_and_variance_map", "_autosummary/aslm.model.analysis.camera.compute_signal_to_noise", "_autosummary/aslm.model.analysis.detection", "_autosummary/aslm.model.analysis.detection.add_median_border", "_autosummary/aslm.model.analysis.detection.combine_images", "_autosummary/aslm.model.analysis.detection.log_detection", "_autosummary/aslm.model.analysis.detection.make_inside_image", "_autosummary/aslm.model.analysis.detection.make_normalized_image", "_autosummary/aslm.model.analysis.detection.make_sphere_3D", "_autosummary/aslm.model.analysis.detection.multiscale_surface_filter_3D", "_autosummary/aslm.model.analysis.detection.surface_filter_gauss_3D", "_autosummary/aslm.model.analysis.detection.three_level_segmentation", "_autosummary/aslm.model.analysis.image_contrast", "_autosummary/aslm.model.analysis.image_contrast.estimate_and_correct_flatfield", "_autosummary/aslm.model.analysis.image_contrast.estimate_image_resolution", "_autosummary/aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy", "_autosummary/aslm.model.analysis.image_contrast.image_intensity", "_autosummary/aslm.model.analysis.image_contrast.normalized_dct_shannon_entropy", "_autosummary/aslm.model.analysis.image_decorrelation", "_autosummary/aslm.model.analysis.image_decorrelation.apodize_image", "_autosummary/aslm.model.analysis.image_decorrelation.get_correlation_coefficient", "_autosummary/aslm.model.analysis.image_decorrelation.get_decorrelation_local_maxima", "_autosummary/aslm.model.analysis.image_decorrelation.get_image_decorrelation", "_autosummary/aslm.model.analysis.image_decorrelation.get_radial_average", "_autosummary/aslm.model.analysis.image_decorrelation.image_to_polar", "_autosummary/aslm.model.analysis.image_decorrelation.linear_map", "_autosummary/aslm.model.analysis.image_decorrelation.main_image_decorr", "_autosummary/aslm.model.analysis.image_transform", "_autosummary/aslm.model.analysis.image_transform.deskew_image", "_autosummary/aslm.model.analysis.image_transform.initiate_gpu", "_autosummary/aslm.model.analysis.spectral_unmixing", "_autosummary/aslm.model.analysis.spectral_unmixing.to_do", "_autosummary/aslm.model.concurrency", "_autosummary/aslm.model.concurrency.concurrency_tools", "_autosummary/aslm.model.concurrency.concurrency_tools.CustodyThread", "_autosummary/aslm.model.concurrency.concurrency_tools.FancyThread", "_autosummary/aslm.model.concurrency.concurrency_tools.MyTestClass", "_autosummary/aslm.model.concurrency.concurrency_tools.ObjectInSubprocess", "_autosummary/aslm.model.concurrency.concurrency_tools.PoliteThread", "_autosummary/aslm.model.concurrency.concurrency_tools.ResultThread", "_autosummary/aslm.model.concurrency.concurrency_tools.SharedNDArray", "_autosummary/aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess", "_autosummary/aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread", "_autosummary/aslm.model.concurrency.concurrency_tools.TestSharedNDArray", "_autosummary/aslm.model.concurrency.proxy_objects", "_autosummary/aslm.model.concurrency.proxy_objects.ProxyManager", "_autosummary/aslm.model.concurrency.proxy_objects.ProxyObject", "_autosummary/aslm.model.concurrency.proxy_objects.launch_custody_thread", "_autosummary/aslm.model.concurrency.proxy_objects.launch_thread", "_autosummary/aslm.model.concurrency.write_parameters", "_autosummary/aslm.model.concurrency.write_parameters.write_Params", "_autosummary/aslm.model.data_sources", "_autosummary/aslm.model.data_sources.bdv_data_source", "_autosummary/aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource", "_autosummary/aslm.model.data_sources.data_source", "_autosummary/aslm.model.data_sources.data_source.DataSource", "_autosummary/aslm.model.data_sources.get_data_source", "_autosummary/aslm.model.data_sources.tiff_data_source", "_autosummary/aslm.model.data_sources.tiff_data_source.TiffDataSource", "_autosummary/aslm.model.data_sources.zarr_data_source", "_autosummary/aslm.model.data_sources.zarr_data_source.ZarrDataSource", "_autosummary/aslm.model.device_startup_functions", "_autosummary/aslm.model.device_startup_functions.DummyDeviceConnection", "_autosummary/aslm.model.device_startup_functions.auto_redial", "_autosummary/aslm.model.device_startup_functions.device_not_found", "_autosummary/aslm.model.device_startup_functions.load_camera_connection", "_autosummary/aslm.model.device_startup_functions.load_devices", "_autosummary/aslm.model.device_startup_functions.load_filter_wheel_connection", "_autosummary/aslm.model.device_startup_functions.load_stages", "_autosummary/aslm.model.device_startup_functions.load_zoom_connection", "_autosummary/aslm.model.device_startup_functions.start_camera", "_autosummary/aslm.model.device_startup_functions.start_daq", "_autosummary/aslm.model.device_startup_functions.start_filter_wheel", "_autosummary/aslm.model.device_startup_functions.start_galvo", "_autosummary/aslm.model.device_startup_functions.start_lasers", "_autosummary/aslm.model.device_startup_functions.start_remote_focus_device", "_autosummary/aslm.model.device_startup_functions.start_shutter", "_autosummary/aslm.model.device_startup_functions.start_stage", "_autosummary/aslm.model.device_startup_functions.start_zoom", "_autosummary/aslm.model.devices", "_autosummary/aslm.model.devices.APIs", "_autosummary/aslm.model.devices.APIs.coherent", "_autosummary/aslm.model.devices.APIs.dynamixel", "_autosummary/aslm.model.devices.APIs.logitech", "_autosummary/aslm.model.devices.APIs.omicron", "_autosummary/aslm.model.devices.camera", "_autosummary/aslm.model.devices.camera.camera_base", "_autosummary/aslm.model.devices.camera.camera_base.CameraBase", "_autosummary/aslm.model.devices.camera.camera_hamamatsu", "_autosummary/aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca", "_autosummary/aslm.model.devices.camera.camera_synthetic", "_autosummary/aslm.model.devices.camera.camera_synthetic.SyntheticCamera", "_autosummary/aslm.model.devices.camera.camera_synthetic.SyntheticCameraController", "_autosummary/aslm.model.devices.daq", "_autosummary/aslm.model.devices.daq.daq_base", "_autosummary/aslm.model.devices.daq.daq_base.DAQBase", "_autosummary/aslm.model.devices.daq.daq_synthetic", "_autosummary/aslm.model.devices.daq.daq_synthetic.SyntheticDAQ", "_autosummary/aslm.model.devices.filter_wheel", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_base", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_synthetic", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel", "_autosummary/aslm.model.devices.galvo", "_autosummary/aslm.model.devices.galvo.galvo_base", "_autosummary/aslm.model.devices.galvo.galvo_base.GalvoBase", "_autosummary/aslm.model.devices.galvo.galvo_synthetic", "_autosummary/aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo", "_autosummary/aslm.model.devices.joystick", "_autosummary/aslm.model.devices.joystick.joystick_base", "_autosummary/aslm.model.devices.joystick.joystick_base.JoystickBase", "_autosummary/aslm.model.devices.joystick.joystick_synthetic", "_autosummary/aslm.model.devices.joystick.joystick_synthetic.SyntheticJoystick", "_autosummary/aslm.model.devices.lasers", "_autosummary/aslm.model.devices.lasers.laser_base", "_autosummary/aslm.model.devices.lasers.laser_base.LaserBase", "_autosummary/aslm.model.devices.lasers.laser_synthetic", "_autosummary/aslm.model.devices.lasers.laser_synthetic.SyntheticLaser", "_autosummary/aslm.model.devices.lasers.laser_trigger_base", "_autosummary/aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase", "_autosummary/aslm.model.devices.lasers.laser_trigger_synthetic", "_autosummary/aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers", "_autosummary/aslm.model.devices.objectives", "_autosummary/aslm.model.devices.objectives.Objective", "_autosummary/aslm.model.devices.remote_focus", "_autosummary/aslm.model.devices.remote_focus.remote_focus_base", "_autosummary/aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase", "_autosummary/aslm.model.devices.remote_focus.remote_focus_equipment_solutions", "_autosummary/aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions", "_autosummary/aslm.model.devices.remote_focus.remote_focus_synthetic", "_autosummary/aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus", "_autosummary/aslm.model.devices.shutter", "_autosummary/aslm.model.devices.shutter.laser_shutter_base", "_autosummary/aslm.model.devices.shutter.laser_shutter_base.ShutterBase", "_autosummary/aslm.model.devices.shutter.laser_shutter_synthetic", "_autosummary/aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter", "_autosummary/aslm.model.devices.stages", "_autosummary/aslm.model.devices.stages.stage_asi", "_autosummary/aslm.model.devices.stages.stage_asi.ASIStage", "_autosummary/aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection", "_autosummary/aslm.model.devices.stages.stage_base", "_autosummary/aslm.model.devices.stages.stage_base.StageBase", "_autosummary/aslm.model.devices.stages.stage_galvo", "_autosummary/aslm.model.devices.stages.stage_galvo.GalvoNIStage", "_autosummary/aslm.model.devices.stages.stage_mcl", "_autosummary/aslm.model.devices.stages.stage_mcl.MCLStage", "_autosummary/aslm.model.devices.stages.stage_mcl.build_MCLStage_connection", "_autosummary/aslm.model.devices.stages.stage_pi", "_autosummary/aslm.model.devices.stages.stage_pi.PIStage", "_autosummary/aslm.model.devices.stages.stage_pi.build_PIStage_connection", "_autosummary/aslm.model.devices.stages.stage_sutter", "_autosummary/aslm.model.devices.stages.stage_sutter.SutterStage", "_autosummary/aslm.model.devices.stages.stage_sutter.build_sutter_stage_connection", "_autosummary/aslm.model.devices.stages.stage_synthetic", "_autosummary/aslm.model.devices.stages.stage_synthetic.SyntheticStage", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection", "_autosummary/aslm.model.devices.zoom", "_autosummary/aslm.model.devices.zoom.zoom_base", "_autosummary/aslm.model.devices.zoom.zoom_base.ZoomBase", "_autosummary/aslm.model.devices.zoom.zoom_synthetic", "_autosummary/aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom", "_autosummary/aslm.model.dummy", "_autosummary/aslm.model.dummy.DummyController", "_autosummary/aslm.model.dummy.DummyDevice", "_autosummary/aslm.model.dummy.DummyMicroscope", "_autosummary/aslm.model.dummy.DummyModel", "_autosummary/aslm.model.features", "_autosummary/aslm.model.features.autofocus", "_autosummary/aslm.model.features.autofocus.Autofocus", "_autosummary/aslm.model.features.common_features", "_autosummary/aslm.model.features.common_features.ChangeResolution", "_autosummary/aslm.model.features.common_features.ConProAcquisition", "_autosummary/aslm.model.features.common_features.FindTissueSimple2D", "_autosummary/aslm.model.features.common_features.LoopByCount", "_autosummary/aslm.model.features.common_features.PrepareNextChannel", "_autosummary/aslm.model.features.common_features.Snap", "_autosummary/aslm.model.features.common_features.WaitToContinue", "_autosummary/aslm.model.features.common_features.ZStackAcquisition", "_autosummary/aslm.model.features.dummy_detective", "_autosummary/aslm.model.features.dummy_detective.Dummy_Detective", "_autosummary/aslm.model.features.feature_container", "_autosummary/aslm.model.features.feature_container.Container", "_autosummary/aslm.model.features.feature_container.DataContainer", "_autosummary/aslm.model.features.feature_container.DataNode", "_autosummary/aslm.model.features.feature_container.SignalContainer", "_autosummary/aslm.model.features.feature_container.SignalNode", "_autosummary/aslm.model.features.feature_container.TreeNode", "_autosummary/aslm.model.features.feature_container.dummy_True", "_autosummary/aslm.model.features.feature_container.dummy_func", "_autosummary/aslm.model.features.feature_container.get_registered_funcs", "_autosummary/aslm.model.features.feature_container.load_features", "_autosummary/aslm.model.features.image_writer", "_autosummary/aslm.model.features.image_writer.ImageWriter", "_autosummary/aslm.model.features.restful_features", "_autosummary/aslm.model.features.restful_features.IlastikSegmentation", "_autosummary/aslm.model.features.restful_features.prepare_service", "_autosummary/aslm.model.features.volume_search", "_autosummary/aslm.model.features.volume_search.VolumeSearch", "_autosummary/aslm.model.metadata_sources", "_autosummary/aslm.model.metadata_sources.bdv_metadata", "_autosummary/aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata", "_autosummary/aslm.model.metadata_sources.metadata", "_autosummary/aslm.model.metadata_sources.metadata.Metadata", "_autosummary/aslm.model.metadata_sources.metadata.XMLMetadata", "_autosummary/aslm.model.metadata_sources.ome_tiff_metadata", "_autosummary/aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata", "_autosummary/aslm.model.microscope", "_autosummary/aslm.model.microscope.Microscope", "_autosummary/aslm.model.model", "_autosummary/aslm.model.model.Model", "_autosummary/aslm.model.waveforms", "_autosummary/aslm.model.waveforms.camera_exposure", "_autosummary/aslm.model.waveforms.dc_value", "_autosummary/aslm.model.waveforms.remote_focus_ramp", "_autosummary/aslm.model.waveforms.sawtooth", "_autosummary/aslm.model.waveforms.sine_wave", "_autosummary/aslm.model.waveforms.single_pulse", "_autosummary/aslm.model.waveforms.smooth_waveform", "_autosummary/aslm.model.waveforms.square", "_autosummary/aslm.tools", "_autosummary/aslm.tools.beams", "_autosummary/aslm.tools.beams.fit_gaussian_beam_error", "_autosummary/aslm.tools.beams.fit_gaussian_beam_mse", "_autosummary/aslm.tools.beams.gaussian_beam", "_autosummary/aslm.tools.common_dict_tools", "_autosummary/aslm.tools.common_dict_tools.update_settings_common", "_autosummary/aslm.tools.common_dict_tools.update_stage_dict", "_autosummary/aslm.tools.common_functions", "_autosummary/aslm.tools.common_functions.build_ref_name", "_autosummary/aslm.tools.common_functions.combine_funcs", "_autosummary/aslm.tools.common_functions.copy_proxy_object", "_autosummary/aslm.tools.decorators", "_autosummary/aslm.tools.decorators.function_timer", "_autosummary/aslm.tools.file_functions", "_autosummary/aslm.tools.file_functions.create_save_path", "_autosummary/aslm.tools.file_functions.save_yaml_file", "_autosummary/aslm.tools.image", "_autosummary/aslm.tools.image.text_array", "_autosummary/aslm.tools.image_loaders", "_autosummary/aslm.tools.image_loaders.LazyTiff", "_autosummary/aslm.tools.main_functions", "_autosummary/aslm.tools.main_functions.create_parser", "_autosummary/aslm.tools.main_functions.evaluate_parser_input_arguments", "_autosummary/aslm.tools.main_functions.identify_gpu", "_autosummary/aslm.tools.multipos_table_tools", "_autosummary/aslm.tools.multipos_table_tools.calc_num_tiles", "_autosummary/aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box", "_autosummary/aslm.tools.multipos_table_tools.sign", "_autosummary/aslm.tools.multipos_table_tools.update_table", "_autosummary/aslm.tools.project_stats", "_autosummary/aslm.tools.project_stats.countlines", "_autosummary/aslm.tools.sdf", "_autosummary/aslm.tools.sdf.box", "_autosummary/aslm.tools.sdf.sphere", "_autosummary/aslm.tools.sdf.volume_from_sdf", "_autosummary/aslm.tools.xml_tools", "_autosummary/aslm.tools.xml_tools.dict_to_xml", "_autosummary/aslm.tools.xml_tools.parse_xml", "_autosummary/aslm.view", "_autosummary/aslm.view.main_window_content", "_autosummary/aslm.view.main_window_content.acquire_bar_frame", "_autosummary/aslm.view.main_window_content.channel_settings", "_autosummary/aslm.view.main_window_content.channel_settings.channel_settings_frames", "_autosummary/aslm.view.main_window_content.stage_control", "_autosummary/aslm.view.main_window_content.stage_control.stage_control_frames", "_autosummary/aslm.view.menus", "_templates/custom_class", "_templates/custom_module", "api", "config", "contributing_feature_container", "contributing_guidelines", "contributing_hardware", "contributing_home", "contributing_model", "hardware", "implementations", "index", "installation", "userguide"], "filenames": ["_autosummary/aslm.config.rst", "_autosummary/aslm.config.config.rst", "_autosummary/aslm.config.config.build_nested_dict.rst", "_autosummary/aslm.config.config.get_aslm_path.rst", "_autosummary/aslm.config.config.get_configuration_paths.rst", "_autosummary/aslm.config.config.load_configs.rst", "_autosummary/aslm.config.config.update_config_dict.rst", "_autosummary/aslm.controller.rst", "_autosummary/aslm.controller.configuration_controller.rst", "_autosummary/aslm.controller.configuration_controller.ConfigurationController.rst", "_autosummary/aslm.controller.thread_pool.rst", "_autosummary/aslm.controller.thread_pool.SelfLockThread.rst", "_autosummary/aslm.controller.thread_pool.SynchronizedThreadPool.rst", "_autosummary/aslm.controller.thread_pool.ThreadWaitlist.rst", "_autosummary/aslm.model.rst", "_autosummary/aslm.model.analysis.rst", "_autosummary/aslm.model.analysis.boundary_detect.rst", "_autosummary/aslm.model.analysis.boundary_detect.binary_detect.rst", "_autosummary/aslm.model.analysis.boundary_detect.find_tissue_boundary_2d.rst", "_autosummary/aslm.model.analysis.boundary_detect.has_tissue.rst", "_autosummary/aslm.model.analysis.boundary_detect.map_boundary.rst", "_autosummary/aslm.model.analysis.camera.rst", "_autosummary/aslm.model.analysis.camera.compute_flatfield_map.rst", "_autosummary/aslm.model.analysis.camera.compute_noise_sigma.rst", "_autosummary/aslm.model.analysis.camera.compute_scmos_offset_and_variance_map.rst", "_autosummary/aslm.model.analysis.camera.compute_signal_to_noise.rst", "_autosummary/aslm.model.analysis.detection.rst", "_autosummary/aslm.model.analysis.detection.add_median_border.rst", "_autosummary/aslm.model.analysis.detection.combine_images.rst", "_autosummary/aslm.model.analysis.detection.log_detection.rst", "_autosummary/aslm.model.analysis.detection.make_inside_image.rst", "_autosummary/aslm.model.analysis.detection.make_normalized_image.rst", "_autosummary/aslm.model.analysis.detection.make_sphere_3D.rst", "_autosummary/aslm.model.analysis.detection.multiscale_surface_filter_3D.rst", "_autosummary/aslm.model.analysis.detection.surface_filter_gauss_3D.rst", "_autosummary/aslm.model.analysis.detection.three_level_segmentation.rst", "_autosummary/aslm.model.analysis.image_contrast.rst", "_autosummary/aslm.model.analysis.image_contrast.estimate_and_correct_flatfield.rst", "_autosummary/aslm.model.analysis.image_contrast.estimate_image_resolution.rst", "_autosummary/aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy.rst", "_autosummary/aslm.model.analysis.image_contrast.image_intensity.rst", "_autosummary/aslm.model.analysis.image_contrast.normalized_dct_shannon_entropy.rst", "_autosummary/aslm.model.analysis.image_decorrelation.rst", "_autosummary/aslm.model.analysis.image_decorrelation.apodize_image.rst", "_autosummary/aslm.model.analysis.image_decorrelation.get_correlation_coefficient.rst", "_autosummary/aslm.model.analysis.image_decorrelation.get_decorrelation_local_maxima.rst", "_autosummary/aslm.model.analysis.image_decorrelation.get_image_decorrelation.rst", "_autosummary/aslm.model.analysis.image_decorrelation.get_radial_average.rst", "_autosummary/aslm.model.analysis.image_decorrelation.image_to_polar.rst", "_autosummary/aslm.model.analysis.image_decorrelation.linear_map.rst", "_autosummary/aslm.model.analysis.image_decorrelation.main_image_decorr.rst", "_autosummary/aslm.model.analysis.image_transform.rst", "_autosummary/aslm.model.analysis.image_transform.deskew_image.rst", "_autosummary/aslm.model.analysis.image_transform.initiate_gpu.rst", "_autosummary/aslm.model.analysis.spectral_unmixing.rst", "_autosummary/aslm.model.analysis.spectral_unmixing.to_do.rst", "_autosummary/aslm.model.concurrency.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.CustodyThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.FancyThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.MyTestClass.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.ObjectInSubprocess.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.PoliteThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.ResultThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.SharedNDArray.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.TestSharedNDArray.rst", "_autosummary/aslm.model.concurrency.proxy_objects.rst", "_autosummary/aslm.model.concurrency.proxy_objects.ProxyManager.rst", "_autosummary/aslm.model.concurrency.proxy_objects.ProxyObject.rst", "_autosummary/aslm.model.concurrency.proxy_objects.launch_custody_thread.rst", "_autosummary/aslm.model.concurrency.proxy_objects.launch_thread.rst", "_autosummary/aslm.model.concurrency.write_parameters.rst", "_autosummary/aslm.model.concurrency.write_parameters.write_Params.rst", "_autosummary/aslm.model.data_sources.rst", "_autosummary/aslm.model.data_sources.bdv_data_source.rst", "_autosummary/aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.rst", "_autosummary/aslm.model.data_sources.data_source.rst", "_autosummary/aslm.model.data_sources.data_source.DataSource.rst", "_autosummary/aslm.model.data_sources.get_data_source.rst", "_autosummary/aslm.model.data_sources.tiff_data_source.rst", "_autosummary/aslm.model.data_sources.tiff_data_source.TiffDataSource.rst", "_autosummary/aslm.model.data_sources.zarr_data_source.rst", "_autosummary/aslm.model.data_sources.zarr_data_source.ZarrDataSource.rst", "_autosummary/aslm.model.device_startup_functions.rst", "_autosummary/aslm.model.device_startup_functions.DummyDeviceConnection.rst", "_autosummary/aslm.model.device_startup_functions.auto_redial.rst", "_autosummary/aslm.model.device_startup_functions.device_not_found.rst", "_autosummary/aslm.model.device_startup_functions.load_camera_connection.rst", "_autosummary/aslm.model.device_startup_functions.load_devices.rst", "_autosummary/aslm.model.device_startup_functions.load_filter_wheel_connection.rst", "_autosummary/aslm.model.device_startup_functions.load_stages.rst", "_autosummary/aslm.model.device_startup_functions.load_zoom_connection.rst", "_autosummary/aslm.model.device_startup_functions.start_camera.rst", "_autosummary/aslm.model.device_startup_functions.start_daq.rst", "_autosummary/aslm.model.device_startup_functions.start_filter_wheel.rst", "_autosummary/aslm.model.device_startup_functions.start_galvo.rst", "_autosummary/aslm.model.device_startup_functions.start_lasers.rst", "_autosummary/aslm.model.device_startup_functions.start_remote_focus_device.rst", "_autosummary/aslm.model.device_startup_functions.start_shutter.rst", "_autosummary/aslm.model.device_startup_functions.start_stage.rst", "_autosummary/aslm.model.device_startup_functions.start_zoom.rst", "_autosummary/aslm.model.devices.rst", "_autosummary/aslm.model.devices.APIs.rst", "_autosummary/aslm.model.devices.APIs.coherent.rst", "_autosummary/aslm.model.devices.APIs.dynamixel.rst", "_autosummary/aslm.model.devices.APIs.logitech.rst", "_autosummary/aslm.model.devices.APIs.omicron.rst", "_autosummary/aslm.model.devices.camera.rst", "_autosummary/aslm.model.devices.camera.camera_base.rst", "_autosummary/aslm.model.devices.camera.camera_base.CameraBase.rst", "_autosummary/aslm.model.devices.camera.camera_hamamatsu.rst", "_autosummary/aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.rst", "_autosummary/aslm.model.devices.camera.camera_synthetic.rst", "_autosummary/aslm.model.devices.camera.camera_synthetic.SyntheticCamera.rst", "_autosummary/aslm.model.devices.camera.camera_synthetic.SyntheticCameraController.rst", "_autosummary/aslm.model.devices.daq.rst", "_autosummary/aslm.model.devices.daq.daq_base.rst", "_autosummary/aslm.model.devices.daq.daq_base.DAQBase.rst", "_autosummary/aslm.model.devices.daq.daq_synthetic.rst", "_autosummary/aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.rst", "_autosummary/aslm.model.devices.filter_wheel.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_base.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_synthetic.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.rst", "_autosummary/aslm.model.devices.galvo.rst", "_autosummary/aslm.model.devices.galvo.galvo_base.rst", "_autosummary/aslm.model.devices.galvo.galvo_base.GalvoBase.rst", "_autosummary/aslm.model.devices.galvo.galvo_synthetic.rst", "_autosummary/aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.rst", "_autosummary/aslm.model.devices.joystick.rst", "_autosummary/aslm.model.devices.joystick.joystick_base.rst", "_autosummary/aslm.model.devices.joystick.joystick_base.JoystickBase.rst", "_autosummary/aslm.model.devices.joystick.joystick_synthetic.rst", "_autosummary/aslm.model.devices.joystick.joystick_synthetic.SyntheticJoystick.rst", "_autosummary/aslm.model.devices.lasers.rst", "_autosummary/aslm.model.devices.lasers.laser_base.rst", "_autosummary/aslm.model.devices.lasers.laser_base.LaserBase.rst", "_autosummary/aslm.model.devices.lasers.laser_synthetic.rst", "_autosummary/aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.rst", "_autosummary/aslm.model.devices.lasers.laser_trigger_base.rst", "_autosummary/aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase.rst", "_autosummary/aslm.model.devices.lasers.laser_trigger_synthetic.rst", "_autosummary/aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers.rst", "_autosummary/aslm.model.devices.objectives.rst", "_autosummary/aslm.model.devices.objectives.Objective.rst", "_autosummary/aslm.model.devices.remote_focus.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_base.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_equipment_solutions.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_synthetic.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.rst", "_autosummary/aslm.model.devices.shutter.rst", "_autosummary/aslm.model.devices.shutter.laser_shutter_base.rst", "_autosummary/aslm.model.devices.shutter.laser_shutter_base.ShutterBase.rst", "_autosummary/aslm.model.devices.shutter.laser_shutter_synthetic.rst", "_autosummary/aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.rst", "_autosummary/aslm.model.devices.stages.rst", "_autosummary/aslm.model.devices.stages.stage_asi.rst", "_autosummary/aslm.model.devices.stages.stage_asi.ASIStage.rst", "_autosummary/aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection.rst", "_autosummary/aslm.model.devices.stages.stage_base.rst", "_autosummary/aslm.model.devices.stages.stage_base.StageBase.rst", "_autosummary/aslm.model.devices.stages.stage_galvo.rst", "_autosummary/aslm.model.devices.stages.stage_galvo.GalvoNIStage.rst", "_autosummary/aslm.model.devices.stages.stage_mcl.rst", "_autosummary/aslm.model.devices.stages.stage_mcl.MCLStage.rst", "_autosummary/aslm.model.devices.stages.stage_mcl.build_MCLStage_connection.rst", "_autosummary/aslm.model.devices.stages.stage_pi.rst", "_autosummary/aslm.model.devices.stages.stage_pi.PIStage.rst", "_autosummary/aslm.model.devices.stages.stage_pi.build_PIStage_connection.rst", "_autosummary/aslm.model.devices.stages.stage_sutter.rst", "_autosummary/aslm.model.devices.stages.stage_sutter.SutterStage.rst", "_autosummary/aslm.model.devices.stages.stage_sutter.build_sutter_stage_connection.rst", "_autosummary/aslm.model.devices.stages.stage_synthetic.rst", "_autosummary/aslm.model.devices.stages.stage_synthetic.SyntheticStage.rst", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.rst", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.rst", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection.rst", "_autosummary/aslm.model.devices.zoom.rst", "_autosummary/aslm.model.devices.zoom.zoom_base.rst", "_autosummary/aslm.model.devices.zoom.zoom_base.ZoomBase.rst", "_autosummary/aslm.model.devices.zoom.zoom_synthetic.rst", "_autosummary/aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.rst", "_autosummary/aslm.model.dummy.rst", "_autosummary/aslm.model.dummy.DummyController.rst", "_autosummary/aslm.model.dummy.DummyDevice.rst", "_autosummary/aslm.model.dummy.DummyMicroscope.rst", "_autosummary/aslm.model.dummy.DummyModel.rst", "_autosummary/aslm.model.features.rst", "_autosummary/aslm.model.features.autofocus.rst", "_autosummary/aslm.model.features.autofocus.Autofocus.rst", "_autosummary/aslm.model.features.common_features.rst", "_autosummary/aslm.model.features.common_features.ChangeResolution.rst", "_autosummary/aslm.model.features.common_features.ConProAcquisition.rst", "_autosummary/aslm.model.features.common_features.FindTissueSimple2D.rst", "_autosummary/aslm.model.features.common_features.LoopByCount.rst", "_autosummary/aslm.model.features.common_features.PrepareNextChannel.rst", "_autosummary/aslm.model.features.common_features.Snap.rst", "_autosummary/aslm.model.features.common_features.WaitToContinue.rst", "_autosummary/aslm.model.features.common_features.ZStackAcquisition.rst", "_autosummary/aslm.model.features.dummy_detective.rst", "_autosummary/aslm.model.features.dummy_detective.Dummy_Detective.rst", "_autosummary/aslm.model.features.feature_container.rst", "_autosummary/aslm.model.features.feature_container.Container.rst", "_autosummary/aslm.model.features.feature_container.DataContainer.rst", "_autosummary/aslm.model.features.feature_container.DataNode.rst", "_autosummary/aslm.model.features.feature_container.SignalContainer.rst", "_autosummary/aslm.model.features.feature_container.SignalNode.rst", "_autosummary/aslm.model.features.feature_container.TreeNode.rst", "_autosummary/aslm.model.features.feature_container.dummy_True.rst", "_autosummary/aslm.model.features.feature_container.dummy_func.rst", "_autosummary/aslm.model.features.feature_container.get_registered_funcs.rst", "_autosummary/aslm.model.features.feature_container.load_features.rst", "_autosummary/aslm.model.features.image_writer.rst", "_autosummary/aslm.model.features.image_writer.ImageWriter.rst", "_autosummary/aslm.model.features.restful_features.rst", "_autosummary/aslm.model.features.restful_features.IlastikSegmentation.rst", "_autosummary/aslm.model.features.restful_features.prepare_service.rst", "_autosummary/aslm.model.features.volume_search.rst", "_autosummary/aslm.model.features.volume_search.VolumeSearch.rst", "_autosummary/aslm.model.metadata_sources.rst", "_autosummary/aslm.model.metadata_sources.bdv_metadata.rst", "_autosummary/aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.rst", "_autosummary/aslm.model.metadata_sources.metadata.rst", "_autosummary/aslm.model.metadata_sources.metadata.Metadata.rst", "_autosummary/aslm.model.metadata_sources.metadata.XMLMetadata.rst", "_autosummary/aslm.model.metadata_sources.ome_tiff_metadata.rst", "_autosummary/aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.rst", "_autosummary/aslm.model.microscope.rst", "_autosummary/aslm.model.microscope.Microscope.rst", "_autosummary/aslm.model.model.rst", "_autosummary/aslm.model.model.Model.rst", "_autosummary/aslm.model.waveforms.rst", "_autosummary/aslm.model.waveforms.camera_exposure.rst", "_autosummary/aslm.model.waveforms.dc_value.rst", "_autosummary/aslm.model.waveforms.remote_focus_ramp.rst", "_autosummary/aslm.model.waveforms.sawtooth.rst", "_autosummary/aslm.model.waveforms.sine_wave.rst", "_autosummary/aslm.model.waveforms.single_pulse.rst", "_autosummary/aslm.model.waveforms.smooth_waveform.rst", "_autosummary/aslm.model.waveforms.square.rst", "_autosummary/aslm.tools.rst", "_autosummary/aslm.tools.beams.rst", "_autosummary/aslm.tools.beams.fit_gaussian_beam_error.rst", "_autosummary/aslm.tools.beams.fit_gaussian_beam_mse.rst", "_autosummary/aslm.tools.beams.gaussian_beam.rst", "_autosummary/aslm.tools.common_dict_tools.rst", "_autosummary/aslm.tools.common_dict_tools.update_settings_common.rst", "_autosummary/aslm.tools.common_dict_tools.update_stage_dict.rst", "_autosummary/aslm.tools.common_functions.rst", "_autosummary/aslm.tools.common_functions.build_ref_name.rst", "_autosummary/aslm.tools.common_functions.combine_funcs.rst", "_autosummary/aslm.tools.common_functions.copy_proxy_object.rst", "_autosummary/aslm.tools.decorators.rst", "_autosummary/aslm.tools.decorators.function_timer.rst", "_autosummary/aslm.tools.file_functions.rst", "_autosummary/aslm.tools.file_functions.create_save_path.rst", "_autosummary/aslm.tools.file_functions.save_yaml_file.rst", "_autosummary/aslm.tools.image.rst", "_autosummary/aslm.tools.image.text_array.rst", "_autosummary/aslm.tools.image_loaders.rst", "_autosummary/aslm.tools.image_loaders.LazyTiff.rst", "_autosummary/aslm.tools.main_functions.rst", "_autosummary/aslm.tools.main_functions.create_parser.rst", "_autosummary/aslm.tools.main_functions.evaluate_parser_input_arguments.rst", "_autosummary/aslm.tools.main_functions.identify_gpu.rst", "_autosummary/aslm.tools.multipos_table_tools.rst", "_autosummary/aslm.tools.multipos_table_tools.calc_num_tiles.rst", "_autosummary/aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box.rst", "_autosummary/aslm.tools.multipos_table_tools.sign.rst", "_autosummary/aslm.tools.multipos_table_tools.update_table.rst", "_autosummary/aslm.tools.project_stats.rst", "_autosummary/aslm.tools.project_stats.countlines.rst", "_autosummary/aslm.tools.sdf.rst", "_autosummary/aslm.tools.sdf.box.rst", "_autosummary/aslm.tools.sdf.sphere.rst", "_autosummary/aslm.tools.sdf.volume_from_sdf.rst", "_autosummary/aslm.tools.xml_tools.rst", "_autosummary/aslm.tools.xml_tools.dict_to_xml.rst", "_autosummary/aslm.tools.xml_tools.parse_xml.rst", "_autosummary/aslm.view.rst", "_autosummary/aslm.view.main_window_content.rst", "_autosummary/aslm.view.main_window_content.acquire_bar_frame.rst", "_autosummary/aslm.view.main_window_content.channel_settings.rst", "_autosummary/aslm.view.main_window_content.channel_settings.channel_settings_frames.rst", "_autosummary/aslm.view.main_window_content.stage_control.rst", "_autosummary/aslm.view.main_window_content.stage_control.stage_control_frames.rst", "_autosummary/aslm.view.menus.rst", "_templates/custom_class.rst", "_templates/custom_module.rst", "api.rst", "config.rst", "contributing_feature_container.rst", "contributing_guidelines.rst", "contributing_hardware.rst", "contributing_home.rst", "contributing_model.rst", "hardware.rst", "implementations.rst", "index.rst", "installation.rst", "userguide.rst"], "titles": ["aslm.config", "aslm.config.config", "aslm.config.config.build_nested_dict", "aslm.config.config.get_aslm_path", "aslm.config.config.get_configuration_paths", "aslm.config.config.load_configs", "aslm.config.config.update_config_dict", "aslm.controller", "aslm.controller.configuration_controller", "aslm.controller.configuration_controller.ConfigurationController", "aslm.controller.thread_pool", "aslm.controller.thread_pool.SelfLockThread", "aslm.controller.thread_pool.SynchronizedThreadPool", "aslm.controller.thread_pool.ThreadWaitlist", "aslm.model", "aslm.model.analysis", "aslm.model.analysis.boundary_detect", "aslm.model.analysis.boundary_detect.binary_detect", "aslm.model.analysis.boundary_detect.find_tissue_boundary_2d", "aslm.model.analysis.boundary_detect.has_tissue", "aslm.model.analysis.boundary_detect.map_boundary", "aslm.model.analysis.camera", "aslm.model.analysis.camera.compute_flatfield_map", "aslm.model.analysis.camera.compute_noise_sigma", "aslm.model.analysis.camera.compute_scmos_offset_and_variance_map", "aslm.model.analysis.camera.compute_signal_to_noise", "aslm.model.analysis.detection", "aslm.model.analysis.detection.add_median_border", "aslm.model.analysis.detection.combine_images", "aslm.model.analysis.detection.log_detection", "aslm.model.analysis.detection.make_inside_image", "aslm.model.analysis.detection.make_normalized_image", "aslm.model.analysis.detection.make_sphere_3D", "aslm.model.analysis.detection.multiscale_surface_filter_3D", "aslm.model.analysis.detection.surface_filter_gauss_3D", "aslm.model.analysis.detection.three_level_segmentation", "aslm.model.analysis.image_contrast", "aslm.model.analysis.image_contrast.estimate_and_correct_flatfield", "aslm.model.analysis.image_contrast.estimate_image_resolution", "aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy", "aslm.model.analysis.image_contrast.image_intensity", "aslm.model.analysis.image_contrast.normalized_dct_shannon_entropy", "aslm.model.analysis.image_decorrelation", "aslm.model.analysis.image_decorrelation.apodize_image", "aslm.model.analysis.image_decorrelation.get_correlation_coefficient", "aslm.model.analysis.image_decorrelation.get_decorrelation_local_maxima", "aslm.model.analysis.image_decorrelation.get_image_decorrelation", "aslm.model.analysis.image_decorrelation.get_radial_average", "aslm.model.analysis.image_decorrelation.image_to_polar", "aslm.model.analysis.image_decorrelation.linear_map", "aslm.model.analysis.image_decorrelation.main_image_decorr", "aslm.model.analysis.image_transform", "aslm.model.analysis.image_transform.deskew_image", "aslm.model.analysis.image_transform.initiate_gpu", "aslm.model.analysis.spectral_unmixing", "aslm.model.analysis.spectral_unmixing.to_do", "aslm.model.concurrency", "aslm.model.concurrency.concurrency_tools", "aslm.model.concurrency.concurrency_tools.CustodyThread", "aslm.model.concurrency.concurrency_tools.FancyThread", "aslm.model.concurrency.concurrency_tools.MyTestClass", "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess", "aslm.model.concurrency.concurrency_tools.PoliteThread", "aslm.model.concurrency.concurrency_tools.ResultThread", "aslm.model.concurrency.concurrency_tools.SharedNDArray", "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess", "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread", "aslm.model.concurrency.concurrency_tools.TestSharedNDArray", "aslm.model.concurrency.proxy_objects", "aslm.model.concurrency.proxy_objects.ProxyManager", "aslm.model.concurrency.proxy_objects.ProxyObject", "aslm.model.concurrency.proxy_objects.launch_custody_thread", "aslm.model.concurrency.proxy_objects.launch_thread", "aslm.model.concurrency.write_parameters", "aslm.model.concurrency.write_parameters.write_Params", "aslm.model.data_sources", "aslm.model.data_sources.bdv_data_source", "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource", "aslm.model.data_sources.data_source", "aslm.model.data_sources.data_source.DataSource", "aslm.model.data_sources.get_data_source", "aslm.model.data_sources.tiff_data_source", "aslm.model.data_sources.tiff_data_source.TiffDataSource", "aslm.model.data_sources.zarr_data_source", "aslm.model.data_sources.zarr_data_source.ZarrDataSource", "aslm.model.device_startup_functions", "aslm.model.device_startup_functions.DummyDeviceConnection", "aslm.model.device_startup_functions.auto_redial", "aslm.model.device_startup_functions.device_not_found", "aslm.model.device_startup_functions.load_camera_connection", "aslm.model.device_startup_functions.load_devices", "aslm.model.device_startup_functions.load_filter_wheel_connection", "aslm.model.device_startup_functions.load_stages", "aslm.model.device_startup_functions.load_zoom_connection", "aslm.model.device_startup_functions.start_camera", "aslm.model.device_startup_functions.start_daq", "aslm.model.device_startup_functions.start_filter_wheel", "aslm.model.device_startup_functions.start_galvo", "aslm.model.device_startup_functions.start_lasers", "aslm.model.device_startup_functions.start_remote_focus_device", "aslm.model.device_startup_functions.start_shutter", "aslm.model.device_startup_functions.start_stage", "aslm.model.device_startup_functions.start_zoom", "aslm.model.devices", "aslm.model.devices.APIs", "aslm.model.devices.APIs.coherent", "aslm.model.devices.APIs.dynamixel", "aslm.model.devices.APIs.logitech", "aslm.model.devices.APIs.omicron", "aslm.model.devices.camera", "aslm.model.devices.camera.camera_base", "aslm.model.devices.camera.camera_base.CameraBase", "aslm.model.devices.camera.camera_hamamatsu", "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca", "aslm.model.devices.camera.camera_synthetic", "aslm.model.devices.camera.camera_synthetic.SyntheticCamera", "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController", "aslm.model.devices.daq", "aslm.model.devices.daq.daq_base", "aslm.model.devices.daq.daq_base.DAQBase", "aslm.model.devices.daq.daq_synthetic", "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ", "aslm.model.devices.filter_wheel", "aslm.model.devices.filter_wheel.filter_wheel_base", "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase", "aslm.model.devices.filter_wheel.filter_wheel_sutter", "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel", "aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection", "aslm.model.devices.filter_wheel.filter_wheel_synthetic", "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel", "aslm.model.devices.galvo", "aslm.model.devices.galvo.galvo_base", "aslm.model.devices.galvo.galvo_base.GalvoBase", "aslm.model.devices.galvo.galvo_synthetic", "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo", "aslm.model.devices.joystick", "aslm.model.devices.joystick.joystick_base", "aslm.model.devices.joystick.joystick_base.JoystickBase", "aslm.model.devices.joystick.joystick_synthetic", "aslm.model.devices.joystick.joystick_synthetic.SyntheticJoystick", "aslm.model.devices.lasers", "aslm.model.devices.lasers.laser_base", "aslm.model.devices.lasers.laser_base.LaserBase", "aslm.model.devices.lasers.laser_synthetic", "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser", "aslm.model.devices.lasers.laser_trigger_base", "aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase", "aslm.model.devices.lasers.laser_trigger_synthetic", "aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers", "aslm.model.devices.objectives", "aslm.model.devices.objectives.Objective", "aslm.model.devices.remote_focus", "aslm.model.devices.remote_focus.remote_focus_base", "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase", "aslm.model.devices.remote_focus.remote_focus_equipment_solutions", "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions", "aslm.model.devices.remote_focus.remote_focus_synthetic", "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus", "aslm.model.devices.shutter", "aslm.model.devices.shutter.laser_shutter_base", "aslm.model.devices.shutter.laser_shutter_base.ShutterBase", "aslm.model.devices.shutter.laser_shutter_synthetic", "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter", "aslm.model.devices.stages", "aslm.model.devices.stages.stage_asi", "aslm.model.devices.stages.stage_asi.ASIStage", "aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection", "aslm.model.devices.stages.stage_base", "aslm.model.devices.stages.stage_base.StageBase", "aslm.model.devices.stages.stage_galvo", "aslm.model.devices.stages.stage_galvo.GalvoNIStage", "aslm.model.devices.stages.stage_mcl", "aslm.model.devices.stages.stage_mcl.MCLStage", "aslm.model.devices.stages.stage_mcl.build_MCLStage_connection", "aslm.model.devices.stages.stage_pi", "aslm.model.devices.stages.stage_pi.PIStage", "aslm.model.devices.stages.stage_pi.build_PIStage_connection", "aslm.model.devices.stages.stage_sutter", "aslm.model.devices.stages.stage_sutter.SutterStage", "aslm.model.devices.stages.stage_sutter.build_sutter_stage_connection", "aslm.model.devices.stages.stage_synthetic", "aslm.model.devices.stages.stage_synthetic.SyntheticStage", "aslm.model.devices.stages.stage_tl_kcube_inertial", "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage", "aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection", "aslm.model.devices.zoom", "aslm.model.devices.zoom.zoom_base", "aslm.model.devices.zoom.zoom_base.ZoomBase", "aslm.model.devices.zoom.zoom_synthetic", "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom", "aslm.model.dummy", "aslm.model.dummy.DummyController", "aslm.model.dummy.DummyDevice", "aslm.model.dummy.DummyMicroscope", "aslm.model.dummy.DummyModel", "aslm.model.features", "aslm.model.features.autofocus", "aslm.model.features.autofocus.Autofocus", "aslm.model.features.common_features", "aslm.model.features.common_features.ChangeResolution", "aslm.model.features.common_features.ConProAcquisition", "aslm.model.features.common_features.FindTissueSimple2D", "aslm.model.features.common_features.LoopByCount", "aslm.model.features.common_features.PrepareNextChannel", "aslm.model.features.common_features.Snap", "aslm.model.features.common_features.WaitToContinue", "aslm.model.features.common_features.ZStackAcquisition", "aslm.model.features.dummy_detective", "aslm.model.features.dummy_detective.Dummy_Detective", "aslm.model.features.feature_container", "aslm.model.features.feature_container.Container", "aslm.model.features.feature_container.DataContainer", "aslm.model.features.feature_container.DataNode", "aslm.model.features.feature_container.SignalContainer", "aslm.model.features.feature_container.SignalNode", "aslm.model.features.feature_container.TreeNode", "aslm.model.features.feature_container.dummy_True", "aslm.model.features.feature_container.dummy_func", "aslm.model.features.feature_container.get_registered_funcs", "aslm.model.features.feature_container.load_features", "aslm.model.features.image_writer", "aslm.model.features.image_writer.ImageWriter", "aslm.model.features.restful_features", "aslm.model.features.restful_features.IlastikSegmentation", "aslm.model.features.restful_features.prepare_service", "aslm.model.features.volume_search", "aslm.model.features.volume_search.VolumeSearch", "aslm.model.metadata_sources", "aslm.model.metadata_sources.bdv_metadata", "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata", "aslm.model.metadata_sources.metadata", "aslm.model.metadata_sources.metadata.Metadata", "aslm.model.metadata_sources.metadata.XMLMetadata", "aslm.model.metadata_sources.ome_tiff_metadata", "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata", "aslm.model.microscope", "aslm.model.microscope.Microscope", "aslm.model.model", "aslm.model.model.Model", "aslm.model.waveforms", "aslm.model.waveforms.camera_exposure", "aslm.model.waveforms.dc_value", "aslm.model.waveforms.remote_focus_ramp", "aslm.model.waveforms.sawtooth", "aslm.model.waveforms.sine_wave", "aslm.model.waveforms.single_pulse", "aslm.model.waveforms.smooth_waveform", "aslm.model.waveforms.square", "aslm.tools", "aslm.tools.beams", "aslm.tools.beams.fit_gaussian_beam_error", "aslm.tools.beams.fit_gaussian_beam_mse", "aslm.tools.beams.gaussian_beam", "aslm.tools.common_dict_tools", "aslm.tools.common_dict_tools.update_settings_common", "aslm.tools.common_dict_tools.update_stage_dict", "aslm.tools.common_functions", "aslm.tools.common_functions.build_ref_name", "aslm.tools.common_functions.combine_funcs", "aslm.tools.common_functions.copy_proxy_object", "aslm.tools.decorators", "aslm.tools.decorators.function_timer", "aslm.tools.file_functions", "aslm.tools.file_functions.create_save_path", "aslm.tools.file_functions.save_yaml_file", "aslm.tools.image", "aslm.tools.image.text_array", "aslm.tools.image_loaders", "aslm.tools.image_loaders.LazyTiff", "aslm.tools.main_functions", "aslm.tools.main_functions.create_parser", "aslm.tools.main_functions.evaluate_parser_input_arguments", "aslm.tools.main_functions.identify_gpu", "aslm.tools.multipos_table_tools", "aslm.tools.multipos_table_tools.calc_num_tiles", "aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box", "aslm.tools.multipos_table_tools.sign", "aslm.tools.multipos_table_tools.update_table", "aslm.tools.project_stats", "aslm.tools.project_stats.countlines", "aslm.tools.sdf", "aslm.tools.sdf.box", "aslm.tools.sdf.sphere", "aslm.tools.sdf.volume_from_sdf", "aslm.tools.xml_tools", "aslm.tools.xml_tools.dict_to_xml", "aslm.tools.xml_tools.parse_xml", "aslm.view", "aslm.view.main_window_content", "aslm.view.main_window_content.acquire_bar_frame", "aslm.view.main_window_content.channel_settings", "aslm.view.main_window_content.channel_settings.channel_settings_frames", "aslm.view.main_window_content.stage_control", "aslm.view.main_window_content.stage_control.stage_control_frames", "aslm.view.menus", "&lt;no title&gt;", "&lt;no title&gt;", "API Reference", "Configuring ASLM", "ASLM Feature Container", "Contributing Guidelines", "Adding New Hardware", "Contributing to ASLM", "Adding New Model Features", "Hardware Setup", "Microscope Implementations", "<strong>Autonomous Software for Light Microscopy</strong>", "Software Installation", "User Guide"], "terms": {"modul": [0, 7, 11, 14, 15, 56, 58, 63, 64, 71, 72, 75, 103, 104, 105, 106, 107, 108, 109, 117, 122, 130, 135, 140, 151, 158, 163, 185, 195, 227, 248, 287, 288, 289, 290, 291, 292, 293, 294, 296, 305], "function": [1, 11, 12, 16, 21, 26, 28, 30, 33, 34, 36, 42, 45, 51, 52, 54, 55, 58, 60, 63, 64, 65, 66, 67, 68, 71, 72, 75, 85, 87, 113, 115, 125, 164, 171, 174, 177, 182, 194, 197, 209, 221, 222, 238, 239, 243, 247, 249, 250, 253, 256, 258, 259, 260, 262, 263, 265, 269, 273, 278, 280, 281, 282, 283, 284, 299, 300, 304, 305], "manag": [2, 5, 6, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 111, 113, 115, 119, 121, 160, 162, 165, 168, 170, 175, 187, 304, 307], "parent_dict": [2, 6], "key_nam": 2, "dict_data": 2, "nest": [2, 64, 229, 232, 234], "dictionari": [2, 5, 6, 9, 11, 58, 63, 64, 90, 97, 98, 119, 121, 124, 126, 129, 132, 134, 153, 165, 168, 170, 172, 175, 178, 181, 183, 187, 189, 229, 232, 234, 236, 238, 253, 254, 263, 264, 271, 285, 286, 298, 299, 306], "recurs": [2, 64], "paramet": [2, 4, 5, 6, 9, 12, 17, 18, 19, 22, 23, 24, 37, 60, 64, 65, 66, 67, 77, 79, 80, 82, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 111, 113, 115, 116, 119, 121, 124, 126, 129, 132, 134, 150, 153, 155, 157, 165, 166, 168, 170, 172, 175, 178, 181, 183, 187, 189, 191, 192, 194, 197, 221, 226, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 250, 252, 263, 264, 266, 268, 271, 272, 274, 275, 277, 281, 282, 283, 285, 286, 298], "multiprocess": [2, 5, 6, 69, 89, 92, 94, 165, 168, 170, 175], "share": [2, 5, 6, 58, 64, 69, 70, 71, 121, 238], "object": [2, 5, 6, 9, 11, 12, 13, 58, 60, 61, 63, 64, 65, 69, 70, 71, 74, 79, 86, 87, 94, 96, 97, 98, 99, 100, 101, 102, 111, 113, 115, 116, 119, 124, 132, 137, 142, 146, 153, 160, 162, 165, 166, 168, 170, 175, 187, 191, 192, 193, 194, 197, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 215, 221, 223, 226, 231, 236, 238, 254, 268, 270, 271, 272, 277, 283, 298, 300, 305, 306], "e": [2, 4, 5, 6, 9, 23, 64, 82, 113, 115, 124, 126, 127, 129, 166, 178, 179, 221, 232, 268, 274, 299, 304, 307], "g": [2, 5, 6, 9, 64, 82, 113, 115, 124, 126, 127, 129, 150, 166, 178, 179, 221, 232, 268, 274, 299, 304, 307], "dict": [2, 5, 6, 9, 12, 17, 77, 79, 82, 84, 90, 119, 121, 124, 126, 129, 132, 134, 150, 153, 157, 165, 168, 170, 172, 175, 178, 181, 183, 187, 189, 197, 221, 236, 238, 259, 263, 264, 285, 286], "between": [2, 5, 6, 18, 64, 250, 274, 298, 304], "process": [2, 5, 6, 61, 64, 69, 70, 72, 155, 197, 238, 299, 300], "we": [2, 6, 60, 61, 63, 64, 67, 70, 77, 79, 82, 84, 113, 119, 121, 126, 129, 221, 229, 232, 234, 236, 298, 299, 300, 301, 302, 304, 307], "ar": [2, 6, 9, 11, 58, 63, 64, 65, 82, 84, 100, 113, 115, 119, 121, 155, 165, 175, 197, 221, 232, 236, 238, 250, 253, 268, 298, 299, 300, 304, 305, 307], "ad": [2, 6, 60, 63, 64, 165, 270, 277, 302, 306], "str": [2, 3, 4, 6, 9, 12, 17, 18, 19, 22, 24, 60, 64, 65, 66, 67, 77, 79, 80, 82, 84, 94, 96, 97, 98, 99, 100, 101, 102, 111, 113, 115, 116, 119, 121, 124, 126, 127, 129, 132, 134, 150, 153, 155, 157, 160, 162, 165, 166, 168, 170, 172, 175, 178, 179, 181, 183, 187, 191, 221, 226, 229, 232, 234, 236, 238, 252, 263, 264, 266, 268, 271, 285], "name": [2, 6, 9, 11, 12, 58, 60, 61, 63, 64, 65, 66, 67, 77, 79, 82, 84, 94, 96, 97, 98, 99, 100, 101, 102, 111, 113, 115, 116, 119, 121, 124, 126, 129, 132, 134, 150, 153, 157, 160, 162, 165, 168, 170, 175, 178, 187, 193, 221, 226, 236, 238, 264, 298, 300, 304], "insert": [2, 64, 304], "return": [2, 3, 4, 5, 6, 9, 11, 17, 18, 19, 23, 34, 37, 41, 44, 45, 47, 52, 58, 60, 61, 63, 64, 70, 77, 79, 80, 82, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 111, 113, 115, 116, 119, 121, 124, 126, 129, 132, 134, 150, 153, 155, 157, 162, 165, 166, 168, 170, 172, 175, 178, 181, 183, 187, 189, 191, 192, 194, 197, 221, 229, 231, 232, 234, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 250, 252, 259, 263, 270, 271, 272, 274, 275, 277, 281, 282, 283, 285, 286, 300], "sub": [2, 6, 64, 221], "type": [2, 3, 5, 6, 9, 18, 19, 23, 24, 37, 64, 77, 79, 80, 82, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 113, 116, 119, 121, 124, 126, 127, 129, 132, 134, 150, 153, 155, 157, 160, 162, 165, 166, 168, 170, 172, 175, 178, 179, 181, 183, 187, 189, 191, 192, 193, 194, 197, 221, 229, 231, 232, 234, 236, 238, 241, 242, 243, 244, 245, 246, 247, 250, 252, 259, 263, 266, 270, 272, 274, 275, 277, 281, 282, 283, 285, 286, 298, 306], "exampl": [2, 3, 4, 6, 58, 63, 64, 71, 72, 77, 79, 80, 82, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 132, 134, 153, 155, 157, 165, 168, 170, 172, 175, 178, 181, 183, 191, 192, 193, 194, 197, 221, 236, 240, 241, 242, 243, 244, 245, 247, 250, 272, 283, 298, 299, 300, 301, 307], "establish": [3, 155], "program": [3, 11, 58, 63, 300], "home": 3, "directori": [3, 221, 232, 263, 264, 307], "appdata": [3, 4, 298, 304], "local": [3, 4, 12, 22, 45, 46, 64, 298, 304, 307], "window": [3, 263, 298, 304, 307], "mac": [3, 298, 304, 307], "linux": [3, 298, 304, 307], "path": [3, 4, 5, 64, 146, 148, 238, 263, 268, 271, 300, 307], "c": [3, 4, 64, 234, 298, 307], "user": [3, 4, 64, 155, 238, 263, 272, 298, 302, 304, 306, 307], "usernam": [3, 4, 304, 307], "get": [4, 9, 12, 63, 64, 77, 79, 80, 82, 84, 113, 115, 165, 197, 236, 238, 300, 307], "variou": [4, 66, 67, 298], "configur": [4, 5, 6, 9, 77, 79, 82, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 111, 113, 115, 119, 121, 124, 126, 129, 132, 134, 142, 144, 146, 148, 153, 157, 160, 162, 165, 168, 170, 172, 175, 178, 181, 183, 187, 189, 193, 194, 221, 226, 229, 231, 232, 234, 236, 238, 271, 299, 300, 306, 307, 308], "file": [4, 5, 6, 55, 64, 77, 79, 80, 82, 84, 115, 221, 229, 231, 232, 234, 238, 264, 268, 271, 286, 298, 300, 306, 307], "us": [4, 9, 11, 23, 37, 38, 55, 58, 60, 63, 64, 65, 66, 67, 69, 70, 71, 72, 116, 134, 155, 191, 192, 193, 194, 221, 226, 232, 234, 236, 238, 240, 241, 242, 243, 244, 245, 247, 268, 273, 298, 299, 300, 301, 304, 307], "configuration_path": [4, 238, 271], "contain": [4, 5, 17, 18, 19, 64, 178, 194, 197, 211, 213, 238, 263, 268, 277, 298, 302, 306], "global": [4, 12, 22, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 111, 113, 115, 119, 121, 160, 162, 165, 168, 170, 175, 187, 238], "microscop": [4, 9, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 111, 113, 115, 119, 121, 132, 134, 153, 157, 160, 162, 165, 168, 170, 175, 187, 189, 193, 197, 226, 238, 299, 300, 304, 306, 307], "i": [4, 9, 11, 19, 23, 27, 52, 55, 58, 60, 63, 64, 65, 67, 71, 72, 82, 84, 88, 89, 113, 115, 121, 134, 146, 148, 155, 165, 168, 170, 172, 175, 178, 181, 183, 187, 189, 191, 192, 193, 194, 197, 221, 226, 232, 236, 238, 242, 250, 252, 264, 268, 271, 272, 275, 277, 283, 298, 299, 300, 301, 304, 305, 306, 307], "hardwar": [4, 64, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 111, 113, 115, 160, 162, 165, 168, 170, 172, 175, 178, 181, 183, 187, 221, 299, 302, 306, 307, 308], "setup": [4, 192, 193, 298, 306, 308], "experiment_path": [4, 238, 271], "per": [4, 11, 58, 63, 64, 77, 84, 299, 304], "experi": [4, 77, 79, 82, 84, 146, 148, 221, 226, 229, 231, 232, 234, 238, 264, 271, 300, 307], "waveform_constants_path": [4, 271], "remot": [4, 9, 99, 121, 132, 153, 155, 157, 242, 271, 301, 305], "focu": [4, 9, 99, 121, 132, 153, 155, 157, 165, 168, 175, 197, 229, 242, 275, 299, 304], "all": [4, 11, 12, 18, 58, 60, 63, 64, 65, 66, 67, 82, 113, 115, 119, 121, 165, 168, 170, 172, 175, 178, 181, 183, 236, 238, 268, 274, 298, 299, 300, 304], "magnif": 4, "rest_api_path": [4, 271], "rest": [4, 271, 298], "api": [4, 64, 89, 113, 116, 165, 175, 271, 298, 302, 304, 306], "yaml": [4, 264, 300, 306], "etl_const": 4, "rest_api": 4, "kwarg": [5, 11, 12, 58, 60, 63, 64, 65, 66, 67, 71, 72, 87, 212, 214, 224, 238], "load": [5, 64, 90, 238, 268, 300], "list": [5, 9, 17, 18, 33, 64, 98, 194, 197, 219, 226, 229, 234, 238, 258, 259, 277, 298, 306], "config_dict": 5, "amalgam": 5, "input": [5, 33, 37, 43, 44, 45, 46, 47, 48, 49, 64, 155, 263, 270, 271, 283, 304], "config_nam": 6, "new_config": 6, "bool": [6, 9, 17, 18, 19, 22, 24, 60, 64, 65, 66, 67, 77, 79, 82, 84, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 113, 124, 126, 129, 155, 165, 170, 172, 175, 178, 181, 183, 187, 189, 194, 229, 236, 238, 250, 252, 272, 277], "read": [6, 64, 77, 79, 82, 84, 126, 129, 155, 178, 187, 189], "new": [6, 9, 49, 64, 82, 165, 170, 172, 175, 178, 181, 183, 258, 263, 277, 300, 302, 304, 306, 307], "updat": [6, 64, 178, 236, 238, 253, 254, 277, 298, 306, 307], "info": [6, 9], "subdictionari": 6, "replac": [6, 64, 298], "valu": [6, 9, 11, 17, 41, 49, 58, 63, 64, 113, 116, 165, 168, 170, 172, 175, 178, 181, 183, 187, 189, 232, 241, 274, 283, 298, 299, 300, 307], "class": [8, 9, 10, 11, 12, 13, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 128, 129, 131, 132, 133, 134, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 164, 165, 167, 168, 169, 170, 171, 172, 174, 175, 177, 178, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 267, 268, 300, 306], "base": [9, 11, 12, 13, 18, 46, 58, 60, 61, 63, 64, 65, 66, 67, 69, 70, 74, 77, 79, 82, 84, 86, 111, 113, 115, 116, 119, 121, 124, 126, 129, 132, 134, 137, 139, 141, 142, 144, 146, 148, 150, 153, 155, 157, 160, 162, 165, 168, 170, 172, 175, 178, 181, 183, 187, 189, 191, 192, 193, 194, 197, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 211, 212, 213, 214, 215, 221, 223, 226, 229, 231, 232, 234, 236, 238, 266, 268, 275, 277, 300, 301, 304, 307], "thi": [9, 11, 52, 55, 58, 60, 61, 63, 64, 65, 66, 67, 70, 71, 72, 77, 79, 82, 84, 113, 115, 121, 134, 165, 168, 170, 172, 175, 178, 181, 183, 191, 192, 193, 194, 197, 221, 232, 236, 238, 252, 253, 254, 258, 259, 263, 273, 274, 275, 298, 299, 300, 301, 304, 305, 306, 307], "The": [9, 11, 12, 58, 63, 64, 71, 72, 87, 121, 134, 155, 157, 165, 170, 172, 175, 178, 181, 183, 191, 192, 193, 194, 197, 221, 242, 246, 274, 283, 298, 300, 304, 306, 307], "microscope_nam": [9, 88, 94, 96, 97, 98, 99, 100, 101, 102, 111, 113, 115, 119, 121, 124, 126, 129, 132, 134, 142, 144, 153, 157, 160, 162, 165, 168, 170, 172, 175, 178, 181, 183, 187, 189, 236], "microscope_config": 9, "change_microscop": 9, "accord": [9, 64, 113, 115, 146, 148], "get_microscope_configuration_dict": 9, "get_stage_position_limit": 9, "suffix": 9, "posit": [9, 17, 19, 45, 64, 82, 124, 126, 129, 165, 168, 170, 172, 175, 178, 181, 183, 187, 189, 197, 226, 229, 236, 238, 274, 275, 277, 298, 304], "limit": [9, 60, 64, 65, 66, 67, 165, 168, 170, 175], "stage": [9, 92, 101, 197, 226, 229, 236, 238, 298, 299, 300, 301, 306], "__init__": [9, 11, 12, 13, 58, 60, 61, 63, 64, 65, 66, 67, 69, 70, 74, 77, 79, 82, 84, 86, 87, 111, 113, 115, 116, 119, 121, 124, 126, 129, 132, 134, 137, 139, 142, 144, 146, 148, 150, 153, 155, 157, 160, 162, 165, 168, 170, 172, 175, 178, 181, 183, 187, 189, 191, 192, 193, 194, 197, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 211, 212, 213, 214, 215, 221, 223, 226, 229, 231, 232, 234, 236, 238, 268, 299], "method": [9, 11, 12, 13, 58, 60, 61, 63, 64, 65, 66, 67, 69, 70, 74, 77, 79, 82, 84, 86, 111, 113, 115, 116, 119, 121, 124, 126, 129, 132, 134, 137, 139, 142, 144, 146, 148, 150, 153, 155, 157, 160, 162, 165, 168, 170, 172, 175, 178, 181, 183, 187, 189, 191, 192, 193, 194, 197, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 211, 212, 213, 214, 215, 221, 223, 226, 229, 231, 232, 234, 236, 238, 268, 299], "attribut": [9, 11, 58, 63, 64, 65, 77, 79, 82, 84, 111, 113, 115, 127, 160, 162, 229, 231, 232, 234, 268], "result": [9, 63, 64, 72, 87, 113, 259], "microscope_configuration_dict": 9, "_min": 9, "_max": 9, "position_limit": 9, "depend": [9, 64, 275, 299, 306], "min": [9, 17, 19, 64, 165, 168, 170, 175, 298], "max": [9, 64, 165, 168, 170, 175, 298, 304], "x": [9, 19, 41, 64, 77, 79, 82, 84, 165, 168, 170, 172, 175, 178, 181, 183, 226, 229, 238, 250, 251, 266, 268, 274, 275, 276, 277, 283, 298], "2000": [9, 64, 298, 304], "y": [9, 19, 34, 41, 64, 77, 79, 82, 84, 165, 168, 175, 178, 226, 229, 238, 266, 268, 275, 277, 283, 298], "z": [9, 34, 64, 77, 79, 82, 84, 150, 165, 168, 175, 178, 226, 229, 250, 252, 275, 277, 283, 298, 299], "theta": [9, 165, 168, 170, 172, 175, 178, 181, 183, 229, 275, 298], "0": [9, 18, 19, 23, 29, 46, 64, 87, 89, 97, 98, 101, 113, 115, 124, 126, 127, 129, 132, 134, 153, 155, 157, 165, 168, 170, 172, 175, 178, 181, 183, 187, 189, 192, 197, 201, 221, 234, 236, 238, 240, 241, 242, 243, 244, 245, 247, 250, 252, 266, 274, 279, 283, 298, 301, 305], "f": [9, 63, 64, 165, 229, 275, 277, 298, 300, 304, 305], "properti": [9, 11, 58, 63, 64, 77, 79, 82, 84, 113, 115, 150, 229, 231, 232, 234, 299, 300], "camera_config_dict": 9, "camera": [9, 17, 19, 64, 84, 89, 94, 119, 121, 132, 134, 153, 236, 238, 240, 298, 301, 305, 306], "camera_set": 9, "set": [9, 11, 22, 58, 60, 63, 64, 77, 79, 82, 84, 111, 113, 115, 121, 126, 129, 142, 144, 146, 148, 178, 192, 193, 238, 277, 298, 299, 301, 307], "camera_pixel": 9, "default": [9, 11, 12, 37, 46, 58, 60, 63, 64, 113, 115, 124, 126, 129, 132, 221, 236, 238, 244, 264, 266, 271, 300, 304], "pixel": [9, 17, 18, 19, 23, 43, 238, 250, 252, 266, 283], "from": [9, 11, 12, 22, 25, 31, 37, 48, 49, 55, 58, 60, 63, 64, 65, 69, 71, 72, 77, 79, 82, 84, 87, 90, 113, 115, 126, 129, 134, 150, 155, 162, 175, 178, 197, 229, 231, 232, 234, 236, 238, 242, 263, 266, 274, 281, 282, 283, 285, 300, 301, 304, 306, 307], "x_pixel": 9, "int": [9, 17, 18, 19, 22, 24, 60, 64, 65, 66, 67, 77, 79, 82, 84, 87, 89, 97, 98, 101, 111, 113, 115, 116, 121, 124, 126, 127, 129, 132, 134, 153, 155, 165, 166, 170, 172, 175, 178, 179, 181, 183, 187, 189, 194, 197, 221, 229, 234, 236, 238, 244, 246, 252, 266, 274, 275, 283], "number": [9, 11, 43, 46, 58, 63, 64, 87, 113, 115, 126, 129, 132, 153, 155, 165, 170, 172, 175, 178, 181, 183, 197, 236, 238, 274, 275, 306], "y_pixel": 9, "channels_info": 9, "channel": [9, 82, 84, 121, 132, 134, 153, 155, 157, 197, 221, 236, 238, 298, 304], "popul": [9, 115], "combobox": 9, "avail": [9, 11, 58, 63, 64, 71, 187, 189, 266, 272, 300, 304, 307], "laser": [9, 98, 121, 160, 244, 245, 247, 299, 301, 305], "488nm": 9, "561nm": 9, "642nm": 9, "filter": [9, 46, 91, 96, 124, 126, 127, 129, 178, 179, 301, 305], "empti": [9, 64, 126, 129, 178, 197], "align": [9, 64, 126, 129, 268], "gfp": [9, 124, 126, 129, 178], "ff01": 9, "515": 9, "30": [9, 64, 283, 298], "32": [9, 37, 64], "daq_sample_r": 9, "daq": [9, 95, 98, 100, 146, 148, 236, 238, 298], "sampl": [9, 46, 132, 153, 250, 252, 299, 305], "rate": [9, 113, 115, 126, 127, 129, 132, 153, 155, 166, 178, 179], "float": [9, 11, 17, 18, 19, 22, 23, 24, 37, 58, 60, 63, 64, 65, 66, 67, 77, 79, 82, 84, 111, 113, 115, 119, 121, 126, 129, 132, 134, 150, 153, 155, 157, 165, 168, 170, 175, 178, 181, 191, 197, 229, 236, 240, 241, 242, 243, 244, 245, 247, 250, 252, 274, 275, 282, 283], "filter_wheel_setting_dict": 9, "wheel": [9, 91, 96, 124, 126, 127, 129, 178, 179, 301, 305], "galvo_parameter_dict": 9, "galvo": [9, 88, 97, 119, 121, 241, 243, 271, 300, 301], "lasers_info": 9, "laser_list": 9, "number_of_channel": 9, "remote_focus_dict": 9, "delay_perc": 9, "pulse_perc": 9, "remote_focus_paramet": 9, "percent": [9, 132, 153, 240, 242, 243, 245, 247], "delai": [9, 132, 153, 187, 189, 242, 245], "puls": [9, 245, 304], "stage_default_posit": 9, "current": [9, 11, 18, 58, 63, 64, 113, 115, 116, 162, 187, 189, 197, 221, 226, 238, 275, 298], "stage_setting_dict": 9, "stage_step": 9, "step": [9, 64, 155, 178, 197, 202, 212, 214, 215, 298, 299, 307], "size": [9, 17, 18, 19, 64, 77, 79, 82, 84, 113, 115, 197, 229, 231, 232, 234, 238, 250, 252, 266, 274, 298], "same": [9, 11, 17, 19, 58, 63, 64, 155, 234, 264, 268], "group": [11, 58, 63], "none": [11, 12, 17, 18, 19, 29, 44, 46, 49, 58, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 77, 79, 82, 84, 113, 115, 132, 134, 139, 153, 155, 157, 191, 192, 194, 197, 210, 211, 213, 221, 229, 231, 232, 234, 236, 238, 277, 279, 285], "target": [11, 12, 18, 58, 63, 71, 72, 238, 254, 255], "arg": [11, 12, 58, 60, 63, 64, 65, 66, 67, 71, 72, 87, 88, 197, 216, 217, 238, 254, 257, 271, 272], "daemon": [11, 58, 63], "thread": [11, 12, 58, 61, 63, 65, 71, 72, 91, 92, 93, 95, 96, 98, 100, 102, 194, 197, 238], "constructor": [11, 58, 63], "should": [11, 58, 63, 64, 71, 72, 84, 113, 115, 155, 165, 274, 298, 300, 304, 307], "alwai": [11, 58, 63, 64], "call": [11, 58, 60, 61, 63, 64, 71, 72, 121, 170, 172, 181, 183, 197, 238, 298, 307], "keyword": [11, 12, 58, 63, 64, 71, 77, 79, 82, 84, 238], "argument": [11, 12, 58, 60, 61, 63, 64, 65, 66, 67, 70, 71, 77, 79, 82, 84, 87, 126, 129, 238, 270, 271, 299], "reserv": [11, 58, 63], "futur": [11, 58, 63, 64, 300, 306], "extens": [11, 58, 63, 221, 300], "when": [11, 58, 61, 63, 64, 72, 178, 236, 238, 298, 299, 300, 304, 307], "threadgroup": [11, 58, 63], "implement": [11, 58, 63, 64, 77, 79, 82, 84, 170, 172, 178, 181, 183, 232], "callabl": [11, 12, 58, 60, 61, 63, 65, 66, 67, 70], "invok": [11, 58, 63, 64], "run": [11, 12, 58, 60, 63, 65, 66, 67, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 121, 197, 238, 298, 299, 304, 307], "mean": [11, 23, 58, 63, 64], "noth": [11, 58, 63], "By": [11, 58, 60, 63, 64], "uniqu": [11, 58, 63], "construct": [11, 58, 63, 64, 226], "form": [11, 58, 63, 64, 300, 304], "n": [11, 58, 63, 64, 82, 199, 201, 226, 250, 251, 252, 281, 282, 283, 307], "where": [11, 58, 63, 64, 221, 238, 299, 301, 307], "small": [11, 58, 63, 300], "decim": [11, 58, 63, 64, 178], "tupl": [11, 12, 24, 58, 63, 64, 77, 79, 82, 84, 87, 229, 231, 232, 234, 266, 281], "invoc": [11, 58, 63], "If": [11, 41, 58, 60, 61, 63, 64, 65, 66, 67, 69, 70, 72, 84, 121, 155, 178, 197, 238, 250, 271, 298, 300, 307], "subclass": [11, 58, 60, 63, 64], "overrid": [11, 58, 63, 221], "must": [11, 17, 19, 58, 63, 64, 71, 126, 283, 299, 300, 304], "make": [11, 32, 58, 61, 63, 64, 70, 84, 165, 168, 170, 175, 275, 298, 300, 302], "sure": [11, 58, 63, 64, 165, 168, 170, 175, 298], "befor": [11, 58, 63, 64, 142, 144, 191, 277, 299, 307], "do": [11, 55, 58, 63, 64, 113, 121, 165, 172, 183, 229, 232, 234, 298, 300, 304, 307], "anyth": [11, 58, 63], "els": [11, 58, 63], "getnam": [11, 58, 63], "string": [11, 58, 60, 61, 63, 64, 82, 124, 126, 129, 134, 221, 264, 285], "identif": [11, 58, 63], "purpos": [11, 58, 63, 64, 72, 119, 121, 134, 307], "onli": [11, 58, 63, 64, 84, 121, 165, 240, 283, 298, 300, 307], "deprec": [11, 58, 63, 64], "instead": [11, 58, 63, 64, 72], "isdaemon": [11, 58, 63], "whether": [11, 58, 63, 64, 89, 238], "islock": 11, "check": [11, 64, 87, 124, 126, 129, 155, 172, 183, 187, 189, 238], "lock": [11, 64], "is_al": [11, 58, 63], "aliv": [11, 58, 63], "true": [11, 20, 58, 60, 63, 64, 65, 66, 67, 126, 129, 165, 168, 175, 238, 250, 272, 279, 299], "just": [11, 58, 63, 64, 65], "start": [11, 19, 58, 60, 63, 64, 121, 132, 134, 153, 155, 157, 165, 194, 238, 242, 275, 279, 299, 300, 304, 307], "until": [11, 58, 63, 71, 121, 165, 170, 172, 175, 178, 181, 183, 236, 238], "after": [11, 58, 63, 64, 116, 178, 187, 189, 238, 304, 307], "termin": [11, 58, 63, 178, 304, 307], "see": [11, 58, 60, 63, 64, 71, 72, 124, 126, 232, 286, 300, 306, 307], "also": [11, 58, 63, 64, 300, 304, 307], "enumer": [11, 58, 63], "join": [11, 58, 63, 72], "timeout": [11, 58, 63, 127, 155, 166, 192], "wait": [11, 58, 63, 71, 113, 115, 121, 126, 129, 155, 166, 191, 236, 238, 299], "block": [11, 58, 63, 64, 165, 170, 172, 175, 178, 181, 183, 296], "whose": [11, 58, 63, 64], "either": [11, 58, 63, 64, 115, 298], "normal": [11, 28, 31, 44, 46, 58, 63, 64, 111, 113, 115, 119, 121, 236], "through": [11, 41, 58, 63, 64, 226, 254], "an": [11, 17, 18, 19, 22, 24, 25, 38, 48, 52, 58, 60, 61, 63, 64, 65, 66, 67, 70, 71, 72, 87, 111, 113, 115, 165, 168, 170, 172, 175, 178, 181, 183, 229, 232, 238, 271, 274, 277, 283, 286, 298, 299, 300, 301, 304], "unhandl": [11, 58, 63], "except": [11, 58, 60, 63, 64, 65, 66, 67, 72, 87, 165, 168, 170, 172, 175, 178, 181, 183], "option": [11, 12, 18, 58, 61, 63, 64, 132, 221, 236, 244, 299, 300], "occur": [11, 58, 63, 64, 178, 301], "present": [11, 19, 58, 63], "point": [11, 58, 60, 63, 64, 82, 221, 281, 282, 283], "specifi": [11, 58, 63, 64, 126, 129, 155, 221, 263, 264, 298, 299], "oper": [11, 58, 61, 63, 67, 70, 119, 121, 165, 168, 170, 175, 299, 301, 304, 305, 307], "second": [11, 58, 63, 64, 113, 115, 119, 121, 126, 132, 134, 153, 155, 157, 236, 240, 241, 242, 243, 244, 245, 247, 298], "fraction": [11, 58, 63, 274, 275], "thereof": [11, 58, 63], "As": [11, 58, 61, 63, 64, 70, 299], "you": [11, 58, 61, 63, 64, 69, 70, 71, 72, 298, 300, 304, 307], "decid": [11, 58, 63, 298], "happen": [11, 58, 63, 299], "still": [11, 58, 63, 64, 298, 299, 304, 307], "time": [11, 58, 63, 64, 82, 87, 111, 113, 115, 119, 121, 126, 129, 132, 134, 153, 155, 157, 166, 191, 221, 236, 238, 240, 261, 301, 304], "out": [11, 58, 60, 63, 64, 113, 192, 197, 201, 226, 245, 274, 275, 298, 304], "A": [11, 58, 63, 64, 71, 72, 165, 168, 170, 172, 175, 178, 181, 183, 199, 201, 226, 274, 283, 299, 300, 304], "can": [11, 58, 61, 63, 64, 65, 69, 72, 77, 79, 82, 84, 115, 155, 232, 238, 299, 300, 301, 306, 307], "ed": [11, 58, 63], "mani": [11, 58, 63, 64, 84, 197, 299], "rais": [11, 58, 60, 63, 64, 65, 66, 67, 72, 88], "runtimeerror": [11, 58, 63, 64, 65], "attempt": [11, 58, 63, 64, 87], "made": [11, 58, 63, 64, 304], "would": [11, 58, 60, 63, 64, 298, 304], "caus": [11, 58, 63, 64], "deadlock": [11, 58, 63], "It": [11, 58, 63, 64, 197, 263, 298, 304, 306, 307], "error": [11, 58, 63, 64, 72, 88, 250, 300, 307], "ha": [11, 58, 63, 64, 69, 155, 165, 170, 172, 175, 178, 181, 183, 272, 274, 298, 299, 305], "been": [11, 58, 63], "so": [11, 58, 63, 64, 72, 121, 304, 306, 307], "setdaemon": [11, 58, 63], "setnam": [11, 58, 63], "": [11, 23, 58, 61, 63, 64, 111, 113, 115, 221, 299, 300, 307], "activ": [11, 58, 63, 113, 115, 119, 121, 238, 300, 304, 306, 307], "most": [11, 58, 63, 64, 298, 300, 304], "onc": [11, 58, 63, 64, 155, 299, 304, 307], "arrang": [11, 58, 63], "separ": [11, 58, 63, 64, 232, 257, 300, 305], "more": [11, 58, 63, 64, 84, 165, 168, 170, 172, 175, 178, 181, 183, 298, 307], "than": [11, 17, 19, 58, 63, 64, 77, 84, 113, 115, 304], "unlock": 11, "finish": [11, 197], "boolean": [11, 58, 63, 64], "indic": [11, 17, 58, 63, 64, 178, 221, 236, 274, 299], "otherwis": [11, 58, 63, 64, 119, 121], "Its": [11, 58, 63], "initi": [11, 13, 58, 61, 63, 64, 69, 70, 77, 79, 82, 84, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 113, 115, 121, 142, 144, 155, 166, 178, 191, 197, 238], "inherit": [11, 58, 63, 64, 87], "creat": [11, 12, 58, 60, 63, 64, 72, 121, 165, 168, 170, 172, 175, 178, 181, 183, 238, 241, 243, 244, 245, 247, 263, 266, 275, 300, 304, 307], "main": [11, 58, 63, 72, 299, 300], "therefor": [11, 58, 63, 64], "fals": [11, 22, 41, 58, 60, 61, 63, 64, 65, 66, 67, 82, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 113, 115, 165, 170, 172, 175, 178, 181, 183, 187, 189, 193, 212, 214, 215, 236, 238, 250, 277], "entir": [11, 58, 63, 226], "python": [11, 58, 61, 63, 64, 70, 77, 79, 82, 84, 229, 231, 232, 234, 285, 298, 306], "exit": [11, 58, 61, 63, 142, 144, 299], "left": [11, 58, 63, 64, 162, 242, 266, 274, 307], "ident": [11, 58, 63], "identifi": [11, 33, 34, 58, 63, 126, 304], "nonzero": [11, 58, 63, 64], "integ": [11, 58, 63, 64, 240, 241, 242, 243, 245, 247], "get_id": [11, 58, 63], "mai": [11, 58, 63, 64, 299, 300, 304, 307], "recycl": [11, 58, 63], "anoth": [11, 58, 60, 63, 64, 72, 298, 300, 307], "even": [11, 22, 58, 63, 64], "semant": [11, 58, 63], "multipl": [11, 22, 24, 33, 58, 63, 64, 65, 178, 232, 304], "given": [11, 23, 58, 63, 64, 80, 113, 115, 124, 126, 129, 132, 134, 157, 277, 307], "native_id": [11, 58, 63], "nativ": [11, 58, 63, 64], "integr": [11, 58, 63], "id": [11, 58, 63, 88, 89, 97, 98, 101, 132, 134, 194, 197], "non": [11, 58, 63, 64, 271], "neg": [11, 58, 63], "get_native_id": [11, 58, 63], "repres": [11, 58, 63, 298], "report": [11, 58, 63, 165, 170, 172, 175, 178, 183, 238, 300], "kernel": [11, 58, 63], "clear": [12, 64, 192, 238], "pool": 12, "createthread": 12, "resourcenam": 12, "callback": 12, "cbarg": 12, "cbkarg": 12, "add": [12, 27, 60, 270, 271, 298, 300, 306, 307], "waitlist": 12, "resourc": [12, 58, 65, 71], "getrunningthread": 12, "globaltrac": 12, "frame": [12, 22, 23, 24, 84, 113, 115, 194, 197, 226, 236, 238, 304, 305], "event": 12, "trace": [12, 64], "ani": [12, 58, 60, 63, 64, 77, 79, 82, 84, 299], "killthreadinlist": 12, "threadlist": 12, "kill": 12, "localtrac": 12, "movetodelet": 12, "taskthread": 12, "move": [12, 55, 64, 84, 126, 129, 165, 168, 170, 172, 175, 178, 181, 183, 187, 189, 197, 226, 236, 238, 298, 299], "todeletelist": 12, "selflockthread": 12, "registerresourc": 12, "regist": [12, 304], "removethread": 12, "remov": [12, 64, 298], "threadtaskwrap": 12, "wrap": 12, "img_data": 17, "_supportsarrai": [17, 18, 19, 22, 24, 77, 79, 82, 84, 229, 252], "dtype": [17, 18, 19, 22, 24, 63, 64, 67, 69, 77, 79, 82, 84, 229, 252], "_nestedsequ": [17, 18, 19, 22, 24, 77, 79, 82, 84, 229, 252], "complex": [17, 18, 19, 22, 24, 44, 64, 77, 79, 82, 84, 229, 252], "byte": [17, 18, 19, 22, 24, 64, 77, 79, 82, 84, 126, 129, 155, 178, 229, 252], "boundari": [17, 18, 20, 226, 274], "width": [17, 19, 64, 111, 113, 115, 236, 250, 252, 281], "1": [17, 18, 19, 23, 44, 46, 63, 64, 77, 79, 82, 84, 89, 116, 119, 121, 132, 134, 153, 155, 157, 165, 178, 191, 197, 201, 202, 213, 234, 236, 238, 241, 242, 243, 244, 245, 247, 250, 252, 274, 283, 298, 304, 307], "offset": [17, 19, 22, 24, 25, 64, 197, 236, 238, 242, 243, 244, 245, 247, 250, 252, 266], "varianc": [17, 19, 24, 25, 64, 238], "perform": [17, 49, 60, 65, 66, 67, 126, 299, 304, 306], "binari": [17, 64, 266], "search": [17, 307], "tissu": [17, 18, 19, 201, 226], "imag": [17, 18, 19, 22, 24, 25, 27, 28, 31, 34, 37, 38, 41, 43, 44, 46, 47, 48, 52, 64, 113, 115, 121, 150, 197, 201, 221, 226, 236, 238, 250, 251, 252, 275, 283, 299, 304, 305], "locat": [17, 64, 126, 187, 189, 271, 298, 304, 307], "image_data": [17, 18, 19, 27, 29, 31, 34, 35, 37, 52], "npt": [17, 18, 19, 22, 24, 77, 79, 82, 84, 281, 282, 283], "arraylik": [17, 18, 19, 22, 24, 77, 79, 82, 84, 281, 282, 283], "xy": [17, 22], "presenc": 17, "subimag": [17, 19], "smaller": [17, 19, 64], "shape": [17, 19, 32, 64, 67, 69, 77, 79, 82, 84, 229, 231, 232, 234], "map": [17, 19, 22, 24, 25, 49, 64, 232, 238], "mag_ratio": 18, "find": [18, 64, 226, 298, 299, 304, 307], "otsu": [18, 30, 31], "threshold": [18, 30, 31], "space": [18, 44, 46, 64, 201, 274, 275], "resampl": 18, "ratio": 18, "over": [18, 64, 307], "tile": [18, 226, 274, 275], "row": [18, 64, 277], "downsampl": 18, "determin": [19, 64], "direct": [20, 34, 64, 111, 113, 115, 226, 250, 252, 300, 304, 307], "offset_map": [22, 25], "comput": [22, 24, 25, 178, 298, 304, 307], "flatfield": 22, "evenli": 22, "illumin": 22, "scmo": [22, 23, 24], "zyx": [22, 24, 77], "defocus": 22, "signal": [22, 23, 121, 192, 193, 194, 218, 238, 243, 299], "np": [22, 23, 63, 64, 126, 221, 241, 242, 243, 244, 245, 246, 247, 250, 252, 275, 277], "absenc": 22, "oppos": 22, "fn": 23, "qe": 23, "82": 23, "ib": 23, "nr": 23, "4": [23, 64, 150, 240, 241, 243, 244, 245, 247, 250, 301, 305, 307], "m": [23, 38, 111, 113, 115, 150, 178, 298, 307], "http": [23, 38, 77, 79, 82, 84, 126, 155, 165, 229, 231, 232, 234, 304, 307], "www": [23, 126, 304], "hamamatsu": [23, 113, 301, 305], "com": [23, 38, 77, 79, 82, 84, 126, 155, 165, 229, 231, 232, 234, 304, 307], "content": [23, 64, 259, 264], "dam": 23, "photon": 23, "site": 23, "document": [23, 64, 113, 115, 165, 300, 306, 307], "99_sales_librari": 23, "sy": [23, 64], "scas0134e_c13440": 23, "20cu_tec": 23, "pdf": [23, 126], "nois": 23, "sigma": [23, 34], "excess": 23, "factor": [23, 165], "unitless": 23, "quantum": 23, "effici": 23, "arrai": [23, 64, 67, 69, 77, 79, 82, 84, 241, 242, 243, 244, 245, 246, 247, 250, 252, 266, 275, 277, 281, 282], "background": [23, 250, 252], "readout": [23, 111, 113, 115, 119, 121, 132, 134, 153, 155, 157, 236], "rm": 23, "em": 23, "gain": 23, "estim": [23, 38, 46], "electron": 23, "union": 24, "numpi": [24, 64, 69, 115, 153, 155, 157, 236, 241, 242, 243, 244, 245, 246, 247], "_array_lik": 24, "_nested_sequ": 24, "dark": 24, "taken": [24, 58, 63, 155], "sequenti": [24, 58, 63], "variance_map": 25, "snr": 25, "border": 27, "median": 27, "requir": [27, 55, 64, 100, 165, 168, 170, 172, 175, 178, 181, 183, 238, 305, 307], "3d": [27, 32, 41], "inside_imag": 28, "normalized_cel": 28, "surface_cel": 28, "combin": [28, 258], "insid": [28, 64, 307], "cell": [28, 30], "surfac": [28, 33, 34], "image_threshold": 29, "pixel_s": [29, 38, 250, 251, 252, 283], "206": 29, "padded_image_data": 30, "insidegamma": 30, "insideblur": 30, "insidedilateradiu": 30, "insideeroderadiu": 30, "tri": [30, 87], "fill": [30, 64, 197], "interior": 30, "gaussian": [30, 250, 252], "blur": 30, "follow": [30, 178, 299, 300, 307], "dilat": 30, "hole": 30, "eros": 30, "subtract": 31, "standard": [31, 58, 63, 64, 306], "deviat": [31, 64, 301], "radiu": [32, 282], "structur": [32, 64, 234, 238], "element": [32, 64, 191, 286], "sphere": 32, "scale": [33, 283], "each": [34, 41, 64, 69, 77, 79, 82, 84, 87, 121, 165, 197, 238, 254, 274, 275, 277, 283, 298, 299, 300, 301, 304], "ndarrai": [37, 64, 67, 126, 153, 155, 157, 221, 236, 250, 252], "calcul": [37, 64, 111, 113, 115, 119, 121, 126, 129, 150, 197, 236, 238, 240, 274, 304], "flat": [37, 64], "dark_field": 37, "correct": [37, 64, 146, 148], "bit": [37, 64, 155, 232], "data": [37, 52, 64, 77, 79, 80, 82, 84, 95, 113, 115, 119, 121, 155, 178, 192, 193, 194, 197, 221, 236, 238, 263, 264, 277, 299, 301, 305, 306], "16": [37, 64, 266], "param": 37, "flat_field": 37, "input_arrai": [38, 39, 40, 41], "number_high_pass_filt": 38, "10": [38, 46, 64, 87, 165, 178, 240, 242, 243, 244, 245, 246, 247, 298, 307], "fourier_sampl": [38, 46], "50": [38, 46, 178, 243, 247], "apodization_pixel": 38, "20": [38, 64], "resolut": [38, 77, 146, 148, 178, 226, 238, 305], "decorrel": [38, 45, 46], "github": [38, 77, 79, 82, 84, 229, 231, 232, 234, 304, 306, 307], "ades91": 38, "imdecorr": 38, "blob": 38, "master": [38, 121], "main_imagedecorr": 38, "psf_support_diameter_xi": [39, 40, 41], "use_gpu": [41, 238, 272], "2d": [41, 43, 46, 64, 250, 252], "iter": [41, 64], "plane": [41, 299], "otf_support_x": 41, "support": [41, 64], "otf": 41, "dimens": [41, 64, 77, 79, 82, 84, 238, 274, 275], "otf_support_i": 41, "entropi": [41, 197], "input_imag": [43, 46, 47, 48], "number_pixel": 43, "apod": 43, "edg": 43, "output": [43, 44, 45, 46, 47, 48, 49, 60, 64, 98, 100, 121, 245, 304], "output_imag": 43, "image_1": 44, "image_2": 44, "c1": 44, "c2": 44, "correl": 44, "coeffici": 44, "express": 44, "fourier": [44, 46], "transform": [44, 48, 299], "2": [44, 63, 64, 178, 192, 229, 242, 243, 250, 283, 298, 304, 305, 307], "correlation_coeffici": 44, "cross": 44, "decorrelation_funct": 45, "maxima": [45, 46], "max_index": 45, "max_amplitud": 45, "amplitud": [45, 46, 241, 242, 243, 244, 245, 247], "number_highpass_filt": 46, "cut": 46, "off": [46, 191, 238, 299], "frequenc": [46, 243, 244, 247], "analyz": 46, "linspac": 46, "high": [46, 178, 199, 274, 305], "pass": [46, 58, 63, 64, 69, 70, 82, 119, 121, 238, 301], "kcmax": 46, "a0": 46, "d0": [46, 155], "radial": [47, 250, 252], "averag": [47, 60, 64, 65, 66, 67], "squar": 47, "im": 47, "r": [47, 77, 79, 82, 84, 277, 282], "imp": 48, "im2pol": 48, "imc": 48, "carthesian": 48, "polar": 48, "coordin": 48, "input_valu": 49, "minimum_valu": 49, "maximum_valu": 49, "mapped_minimum_valu": 49, "mapped_maximum_valu": 49, "linear": [49, 304], "rang": [49, 197], "minimum": [49, 64, 113, 115, 132, 153, 298, 305], "maximum": [49, 64, 113, 115, 132, 142, 144, 153, 197, 221, 298, 306], "rescaled_valu": 49, "rescal": [49, 283], "shear_angl": 52, "z_pixel_s": 52, "xy_pixel_s": 52, "design": [52, 124, 126, 129, 304], "deskew": 52, "uint16": [52, 64], "save": [52, 63, 197, 221, 263, 264], "tiff": [52, 82, 115, 232, 234, 268], "spectral": 55, "unmix": 55, "need": [55, 64, 72, 113, 115, 126, 197, 236, 238, 274, 298, 299, 304, 307], "repo": [55, 307], "here": [55, 113, 242, 298, 300, 301], "signific": 55, "organ": [55, 119, 121], "overhaul": 55, "first_resourc": [58, 71], "resultthread": [58, 59, 66], "access": [58, 63, 64, 65, 69, 77, 79, 82, 84, 307], "order": [58, 64, 65, 178, 298], "thei": [58, 61, 64, 70, 121, 298, 307], "were": [58, 64, 307], "launch": [58, 63, 72], "docstr": [58, 71, 72, 300], "top": [58, 71, 72, 111, 113, 115, 298], "get_result": [58, 63], "accept": [58, 63, 64, 71, 165, 271, 283, 299], "timeouterror": [58, 60, 63, 65, 66, 67], "respect": [58, 63, 64, 298], "control": [58, 63, 64, 89, 124, 126, 155, 166, 178, 189, 191, 192, 193, 194, 221, 236, 238, 253, 254, 298, 299, 300, 304, 306], "alia": [59, 62, 64], "homemad": 60, "test": [60, 64, 65, 66, 67, 134, 191, 192, 193, 194, 306], "mostli": 60, "written": [60, 64, 300], "curios": 60, "what": [60, 64, 252, 274, 298, 299], "featur": [60, 63, 194, 238, 300, 302, 306], "want": [60, 64, 69, 126, 129, 298, 302, 307], "could": [60, 64, 300], "done": [60, 64, 236, 238, 298, 304, 307], "easili": 60, "without": [60, 61, 63, 64, 65, 69, 70, 298, 300], "import": [60, 64, 134, 300, 304, 306], "Not": [60, 116, 165, 178, 232, 240, 266], "real": [60, 64, 238], "packag": [60, 307], "wasn": 60, "t": [60, 61, 63, 64, 70, 113, 121, 172, 183, 234, 304], "To": [60, 64, 155, 165, 232, 298, 300, 302, 304], "test_": [60, 65, 66, 67], "expect": [60, 63, 65, 66, 71, 77, 79, 82, 84, 165, 168, 170, 172, 175, 178, 181, 183, 298, 300], "gener": [60, 64, 82, 115, 192, 221, 234, 250, 252, 283, 299, 306], "specif": [60, 64, 65, 66, 67, 298], "print": [60, 63, 64, 113, 115, 155], "stdout": 60, "test_prefix": [60, 65, 66, 67], "fail": [60, 64, 65, 66, 67, 298, 299], "fail_fast": [60, 65, 66, 67], "begin": [60, 64, 65, 66, 67], "time_it": [60, 65, 66, 67], "n_loop": [60, 65, 66, 67], "func": [60, 65, 66, 67, 87, 261], "timeout_u": [60, 65, 66, 67], "allow": [60, 64, 65, 66, 67, 238, 298, 299, 306, 307], "durat": [60, 65, 66, 67, 111, 113, 115, 121, 126, 129, 155, 240, 261], "exce": [60, 65, 66, 67], "bar": [60, 65, 66, 67], "format": [60, 64, 65, 66, 67, 77, 79, 82, 84, 119, 121, 178, 232, 298, 300], "progress": [60, 65, 66, 67, 178, 301], "initarg": [61, 69, 70], "custom_loop": [61, 69, 70], "close_method_nam": [61, 70], "closearg": [61, 70], "closekwarg": [61, 70], "with_lock": 61, "initkwarg": [61, 69, 70], "child": [61, 63, 70, 219], "act": [61, 64, 70, 306], "like": [61, 64, 70, 71, 72, 274, 298, 304, 307], "isn": [61, 70], "much": [61, 70], "possibl": [61, 64, 70, 242, 302], "try": [61, 63, 70, 300, 307], "instanc": [61, 64, 70, 71, 277, 298], "behav": [61, 64, 67, 70, 298, 300], "re": [61, 63, 70], "live": [61, 64, 70, 238, 300], "parent": [61, 63, 69, 70, 111, 119, 124, 132, 139, 153, 160, 168, 187], "cours": [61, 70], "have": [61, 64, 70, 121, 232, 298, 299, 300, 304, 307], "spare": [61, 70], "core": [61, 64, 70], "your": [61, 64, 69, 70, 72, 298, 300, 304, 306], "machin": [61, 64, 70, 300, 304, 307], "turn": [61, 70, 219, 238, 298, 299, 304], "cpu": [61, 64, 70], "bound": [61, 70, 165, 168, 170, 172, 175, 178, 181, 183, 298], "which": [61, 64, 71, 77, 79, 82, 84, 146, 148, 165, 168, 170, 172, 175, 178, 181, 183, 238, 281, 282, 298, 299, 300, 304, 305], "parallel": [61, 304], "io": [61, 70, 155], "too": [61, 70, 305], "mental": [61, 70], "overhead": [61, 65, 70, 238], "coder": [61, 70, 300], "our": [61, 63, 64, 69, 113, 115, 229, 232, 234, 298, 300, 306, 307], "automat": 61, "close_method": 61, "custodythread": [62, 65, 66], "simpl": [63, 64], "wish": 63, "had": 63, "chang": [63, 64, 113, 115, 126, 129, 165, 187, 189, 238, 254, 275, 304, 307], "self": [63, 64, 113, 119, 121, 126, 178, 221, 226, 299, 300], "trivial": 63, "u": [63, 64, 254, 304], "line": [63, 64, 71, 111, 113, 115, 279, 298, 300], "code": [63, 64, 77, 79, 82, 84, 116, 191, 229, 231, 232, 234, 298, 302, 306], "def": 63, "doe": [63, 64, 134, 286, 298, 304, 307], "someth": [63, 64, 298, 300], "sum": [63, 64], "ones": 63, "uint8": [63, 64, 69], "problem": [63, 64, 307], "th": [63, 64], "redefin": 63, "solut": [63, 301], "res_th": 63, "assert": 63, "handl": [63, 298], "idea": 63, "attributeerror": [63, 64], "wa": [63, 64, 165, 170, 172, 175, 178, 181, 183, 238, 266], "assertionerror": 63, "dure": [63, 77, 79, 82, 84, 197, 242], "evalu": [63, 64, 146, 148, 261, 272, 281, 282, 283, 300], "rerais": 63, "traceback": [63, 64], "stderr": 63, "don": [63, 113, 172, 183, 304], "affect": [63, 64], "yet": 63, "note": [63, 64, 165], "modifi": [63, 299, 300], "excepthook": 63, "copi": [63, 64, 254, 304], "past": 63, "definit": [63, 71, 72], "work": [63, 64, 121, 300, 307], "shared_memory_nam": 64, "stride": 64, "memori": [64, 69, 70, 238], "objectinsubprocess": [64, 65], "serial": [64, 67, 69, 113, 126, 127, 129, 178, 179, 259], "pretti": 64, "fast": 64, "larg": [64, 300], "regularli": 64, "deal": [64, 232], "sens": 64, "provid": [64, 116, 165, 271, 300, 301, 304], "wai": [64, 238, 274, 298, 300], "via": [64, 100, 121, 191, 246], "avoid": [64, 155, 300, 304], "slow": [64, 69], "mayb": [64, 71, 72], "write": [64, 77, 79, 82, 84, 121, 155, 221, 229, 232, 234, 238, 300, 306], "look": [64, 116, 274, 298, 304], "data_buf": 64, "zero": [64, 252], "400": 64, "display_buf": 64, "preprocessor": 64, "displai": [64, 88, 119, 121, 238], "record": 64, "num_imag": 64, "show": [64, 304, 307], "payoff": 64, "its": [64, 165, 170, 172, 175, 178, 181, 183, 299], "own": 64, "AND": 64, "realli": 64, "memmap": 64, "templat": 64, "axi": [64, 165, 168, 170, 172, 175, 178, 181, 183, 274, 283], "keepdim": 64, "refer": [64, 242, 302, 306], "full": [64, 298, 304], "equival": [64, 304, 307], "argmax": 64, "along": [64, 71, 72, 165, 170, 172, 175, 178, 181, 183, 238, 274, 275], "argmin": 64, "detail": [64, 126, 165], "argpartit": 64, "kth": 64, "kind": 64, "introselect": 64, "partit": 64, "version": [64, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 305, 307], "8": [64, 126, 307], "argsort": 64, "sort": 64, "astyp": 64, "k": 64, "cast": 64, "unsaf": 64, "subok": 64, "typecod": 64, "layout": 64, "fortran": 64, "contigu": 64, "close": [64, 77, 79, 82, 84, 113, 115, 121, 126, 129, 132, 134, 142, 144, 153, 155, 157, 162, 178, 221, 238, 274, 299], "appear": 64, "equiv": 64, "safe": 64, "same_kind": 64, "backward": 64, "compat": [64, 307], "preserv": 64, "within": [64, 72, 165, 168, 170, 175, 178, 181, 283, 304, 307], "float64": 64, "float32": 64, "convers": 64, "forc": 64, "newli": [64, 238], "alloc": [64, 69], "satisfi": 64, "arr_t": 64, "unless": [64, 300], "other": [64, 69, 121, 150, 155, 298, 300], "condit": 64, "descript": 64, "17": 64, "one": [64, 71, 72, 82, 84, 165, 168, 170, 172, 175, 178, 181, 183, 212, 214, 215, 238, 299, 304], "field": [64, 298], "9": [64, 307], "numer": [64, 250, 252], "mode": [64, 77, 79, 82, 84, 111, 113, 115, 119, 121, 142, 144, 146, 148, 155, 236, 238, 304, 305], "length": [64, 274, 275, 283], "long": 64, "enough": 64, "store": [64, 77, 79, 82, 84, 229, 231, 232, 234, 253, 300], "convert": [64, 111, 113, 115, 165, 175, 178, 229, 231, 232, 234, 266, 277], "complexwarn": 64, "5": [64, 242, 298, 304, 305], "byteswap": 64, "inplac": 64, "swap": 64, "toggl": 64, "low": [64, 178, 274, 305], "endian": [64, 178], "big": 64, "represent": [64, 77, 79, 82, 84, 229, 231, 232, 234, 286], "place": [64, 298], "imaginari": 64, "part": [64, 300], "individu": 64, "view": [64, 69, 74, 191, 192, 193, 194, 229, 234, 238, 300, 306], "256": 64, "8755": 64, "int16": 64, "hex": 64, "0x1": 64, "0x100": 64, "0x2233": 64, "13090": 64, "0x3322": 64, "b": 64, "ceg": 64, "fac": 64, "s3": 64, "newbyteord": 64, "produc": [64, 285], "differ": [64, 298, 301, 304, 306, 307], "3": [64, 84, 229, 234, 247, 250, 281, 282, 283, 307], "choos": 64, "choic": 64, "index": [64, 97, 98, 121, 146, 148, 221, 234, 250, 252], "clip": 64, "One": [64, 82], "compress": 64, "select": [64, 84, 146, 148, 304], "slice": [64, 67, 268, 283], "conj": 64, "conjug": 64, "wise": 64, "match": [64, 252, 283], "veri": 64, "similar": [64, 298, 300], "behavior": [64, 66, 275, 299, 300, 304], "copyto": 64, "prefer": 64, "6": [64, 234], "flag": [64, 113, 115, 124, 126, 129, 194, 238, 275, 307], "c_contigu": 64, "cumprod": 64, "cumul": 64, "product": [64, 165, 304, 306], "cumsum": 64, "diagon": 64, "axis1": 64, "axis2": 64, "In": [64, 232, 298, 300, 301], "previou": 64, "restrict": 64, "dump": 64, "pickl": 64, "back": [64, 155, 178, 232, 242, 304], "pathlib": 64, "now": [64, 229, 306, 307], "scalar": 64, "assign": 64, "flatten": [64, 250], "collaps": 64, "major": [64, 254], "style": [64, 304, 306], "column": 64, "ravel": [64, 250], "d": [64, 115, 285, 286], "getfield": 64, "certain": 64, "fit": [64, 250], "complex128": 64, "take": [64, 84, 275], "12": 64, "larger": 64, "itself": 64, "skip": 64, "diag": 64, "j": [64, 150], "item": [64, 296, 298], "variabl": [64, 150, 300, 307], "case": [64, 300], "int_typ": 64, "interpret": [64, 178], "singl": [64, 84, 150, 155, 165, 170, 172, 175, 181, 183, 245, 268, 274], "nd": 64, "suitabl": 64, "longdoubl": 64, "clongdoubl": 64, "becaus": 64, "lose": 64, "inform": [64, 113, 115, 126, 178, 238, 263, 264, 274, 298, 300, 307], "void": 64, "buffer": [64, 113, 115, 155, 178, 236, 238], "defin": [64, 87, 232, 283], "speed": [64, 126, 178, 300, 305], "up": [64, 77, 79, 82, 84, 116, 121, 192, 193, 298, 304, 306], "arithmet": 64, "optim": 64, "math": 64, "random": [64, 67], "seed": 64, "123": 64, "randint": 64, "7": [64, 242, 305, 307], "itemset": 64, "There": [64, 232, 304], "least": 64, "last": [64, 178, 274, 307], "Then": 64, "faster": 64, "two": [64, 238, 298], "first": [64, 69, 191, 232, 274, 298, 304, 307], "compar": [64, 197], "syntax": 64, "some": [64, 69, 77, 79, 82, 84, 229, 231, 232, 234, 299, 300, 304, 307], "increas": 64, "particular": 64, "howev": [64, 300, 304], "discourag": 64, "among": 64, "complic": 64, "loop": 64, "amax": 64, "amin": 64, "new_ord": 64, "arr": 64, "newbytord": 64, "below": [64, 298, 299, 300, 305, 307], "opposit": 64, "littl": [64, 178], "byteord": 64, "ignor": [64, 229, 300], "new_arr": 64, "reflect": [64, 298], "rearrang": 64, "equal": 64, "greater": 64, "behind": 64, "undefin": 64, "sequenc": [64, 178, 268, 299], "final": [64, 298], "them": [64, 300, 307], "sinc": [64, 275], "22": 64, "algorithm": 64, "etc": [64, 77, 79, 82, 84, 165, 168, 170, 172, 175, 178, 181, 183, 229, 231, 232, 234, 271, 274, 301, 304, 306], "unspecifi": 64, "come": [64, 115], "break": [64, 300], "ti": 64, "paritit": 64, "indirect": 64, "prod": 64, "ptp": 64, "peak": [64, 242, 250, 252], "put": [64, 65], "repeat": [64, 305], "reshap": 64, "unlik": 64, "free": 64, "For": [64, 84, 121, 165, 168, 170, 172, 175, 178, 181, 183, 298, 300, 304], "11": [64, 307], "resiz": 64, "new_shap": 64, "refcheck": 64, "count": [64, 298], "valueerror": 64, "exist": [64, 124, 126, 129, 187, 189, 299, 300], "pypi": 64, "reliabl": 64, "systemerror": 64, "behaviour": 64, "bug": [64, 300], "realloc": 64, "area": 64, "necessari": [64, 119, 121, 126, 129, 155, 261, 263, 298, 300, 301, 304], "consecut": 64, "shrink": 64, "enlarg": 64, "abov": [64, 298], "miss": 64, "entri": [64, 254, 298, 299], "doesn": 64, "referenc": 64, "prevent": 64, "recent": 64, "cannot": 64, "round": 64, "around": [64, 71, 72], "searchsort": 64, "v": [64, 150], "side": [64, 274], "sorter": 64, "maintain": 64, "setfield": 64, "val": [64, 87], "ey": 64, "int32": 64, "0e": 64, "000": 64, "5e": 64, "323": 64, "setflag": 64, "uic": 64, "writeabl": 64, "writebackifcopi": 64, "updateifcopi": 64, "These": [64, 304, 307], "how": [64, 67, 197, 298, 306, 307], "actual": [64, 77, 79, 82, 84, 113, 240, 274, 300], "never": 64, "ultim": [64, 300], "owner": 64, "expos": 64, "interfac": 64, "unpickl": 64, "describ": [64, 299], "properli": [64, 298, 304], "about": [64, 264, 274, 300], "four": [64, 178], "w": [64, 77, 79, 82, 84, 281], "appropri": [64, 300, 307], "compil": 64, "pyarray_resolvewritebackifcopi": 64, "upper": [64, 266], "letter": 64, "well": [64, 306], "f_contigu": 64, "owndata": 64, "stdin": 64, "quicksort": 64, "mergesort": 64, "heapsort": 64, "stabl": 64, "both": [64, 100, 162, 165, 232, 299, 307], "timsort": 64, "under": [64, 298, 299, 304, 306], "cover": [64, 274, 304], "vari": 64, "datatyp": 64, "retain": 64, "15": [64, 252, 283, 307], "lexsort": 64, "kei": [64, 132, 134, 153, 155, 157, 285, 300], "partial": 64, "s1": 64, "i8": 64, "squeez": 64, "ax": [64, 165, 168, 170, 172, 175, 178, 181, 183, 298], "std": 64, "ddof": 64, "swapax": 64, "interchang": 64, "tobyt": 64, "raw": 64, "short": 64, "exhibit": 64, "u2": 64, "x00": 64, "x01": 64, "x02": 64, "x03": 64, "tofil": 64, "fid": 64, "sep": 64, "text": [64, 266], "independ": 64, "recov": 64, "fromfil": 64, "open": [64, 77, 79, 82, 84, 162, 238, 304, 307], "filenam": [64, 82, 115, 221, 238, 264], "closest": 64, "conveni": 64, "quick": [64, 165], "storag": 64, "precis": [64, 304], "lost": 64, "good": [64, 300], "intend": 64, "archiv": [64, 268], "transport": 64, "overcom": 64, "expens": 64, "directli": [64, 71, 72, 113], "bypass": 64, "gzipfil": 64, "fileno": 64, "bytesio": 64, "tolist": 64, "ndim": 64, "level": 64, "deep": 64, "nearest": 64, "builtin": 64, "depth": 64, "possibli": 64, "recreat": 64, "although": 64, "sometim": 64, "1d": 64, "almost": [64, 71], "uint32": 64, "a_list": 64, "a_tolist": 64, "addition": 64, "appli": 64, "0d": [64, 178], "typeerror": 64, "tostr": 64, "exactli": 64, "despit": 64, "19": 64, "transpos": 64, "effect": [64, 250, 252], "vector": 64, "simpli": 64, "addit": [64, 77, 79, 84, 238], "atleast2d": 64, "achiev": 64, "newaxi": 64, "matrix": [64, 126, 229], "permut": 64, "revers": 64, "becom": 64, "altern": [64, 229, 231, 232, 234, 300], "give": 64, "var": 64, "omit": 64, "former": [64, 236], "float_": 64, "descriptor": 64, "again": 64, "omiss": 64, "some_dtyp": 64, "reinterpret": 64, "ndarray_subclass": 64, "regular": [64, 300], "predict": 64, "superfici": 64, "shown": [64, 299, 307], "versu": 64, "int8": 64, "513": 64, "xv": 64, "underli": 64, "i1": 64, "recarrai": 64, "i2": 64, "ctype": 64, "simplifi": 64, "interact": [64, 273], "easier": 64, "librari": [64, 300, 306], "themselv": [64, 299], "possess": 64, "ctypeslib": 64, "public": 64, "guid": [64, 165, 300, 306], "undocu": 64, "privat": 64, "_ctype": 64, "pointer": [64, 77, 79, 82, 84, 299], "arbitrari": [64, 77, 79, 82, 84], "troubl": 64, "includ": [64, 165, 168, 170, 172, 175, 178, 181, 183, 229, 232, 234, 298, 299, 304, 307], "crash": [64, 300], "bewar": 64, "_array_interface_": 64, "data_a": 64, "kept": 64, "c_void_p": 64, "dealloc": 64, "spelt": 64, "basetyp": 64, "correspond": [64, 165, 168, 170, 172, 175, 178, 181, 183, 304], "p": [64, 281, 282, 283], "platform": 64, "c_intp": 64, "c_int": 64, "c_long": 64, "c_longlong": 64, "jump": 64, "next": [64, 155, 191, 197, 236, 299, 304], "obj": 64, "_as_parameter_": 64, "perhap": 64, "c_doubl": 64, "keep": [64, 300], "shape_a": 64, "c_short": 64, "strides_a": 64, "as_paramet": 64, "31962608": 64, "c_uint32": 64, "__main__": 64, "lp_c_uint": 64, "0x7ff2fc1fc200": 64, "c_uint": 64, "c_uint64": 64, "c_ulong": 64, "4294967296": 64, "_intern": 64, "c_long_array_2": 64, "0x7ff2fc1fce60": 64, "0x7ff2fc1ff320": 64, "segment": [64, 238], "o": [64, 178, 307], "borrow": [64, 77, 79, 82, 84, 229, 231, 232, 234], "creation": 64, "subsequ": 64, "while": [64, 65, 155], "remain": [64, 165], "alreadi": [64, 300, 307], "circumst": 64, "alter": [64, 165], "previous": 64, "onto": [64, 304], "fnc": 64, "carrai": 64, "ca": 64, "farrai": 64, "fa": 64, "lowercas": 64, "arbitrarili": 64, "truli": 64, "simultan": [64, 82, 165], "dimension": 64, "higher": [64, 197], "dim": [64, 268], "hold": [64, 264, 273], "items": 64, "flatit": 64, "similarli": [64, 232], "built": [64, 301], "arang": 64, "sqrt": 64, "0j": 64, "1j": 64, "70710678": 64, "nbyte": 64, "total": [64, 197, 274], "consum": 64, "480": 64, "usual": 64, "infer": 64, "unchang": 64, "incompat": 64, "modif": [64, 300], "desir": [64, 113, 115, 238, 271], "obtain": 64, "suggest": 64, "int_": 64, "relev": 64, "further": 64, "overflow": [64, 155], "fix": [64, 300], "travers": 64, "explan": 64, "found": [64, 88, 300, 307], "rst": 64, "imagin": [64, 301], "40": 64, "known": 64, "tell": [64, 300], "lib": 64, "stride_trick": 64, "as_strid": 64, "13": [64, 178], "14": [64, 178, 283], "18": 64, "21": 64, "23": 64, "48": 64, "224": 64, "1344": 64, "813": 64, "mytestclass": [65, 66, 67], "testclass": 65, "toi": 65, "subprocess": 65, "test_incorrect_thread_manag": 65, "custodi": [65, 71, 72], "test_lock_with_waitlist": 65, "stai": [65, 242], "objectsinsubprocess": 65, "mock": 65, "_waitinglist": [65, 71], "test_object_in_subprocess_overhead": 65, "test_sending_shared_arrai": 65, "send": [65, 155, 178, 192, 193, 194], "sharedndarrai": [65, 67, 221, 238], "test_ndarraylike_behavior": 67, "broke": 67, "suppos": 67, "test_seri": 67, "deseri": 67, "test_serializing_and_deseri": 67, "shared_memory_s": 69, "spawn": 69, "proxi": [69, 70, 259, 307], "proxyobject": [69, 71, 72], "shared_numpy_arrai": 69, "which_mp_arrai": 69, "shared_mp_arrai": 70, "proxymanag": [70, 71, 72], "thin": [71, 72], "wrapper": [71, 72], "few": [71, 72, 299], "usag": [71, 72, 268], "_custodi": 71, "switch_from": 71, "_wait_in_lin": 71, "immedi": 71, "acquir": [72, 221, 236, 238, 299, 304], "releas": 72, "launch_custody_thread": 72, "feel": 72, "detect": [72, 201], "occour": 72, "file_nam": [77, 79, 82, 84, 229, 232, 234], "datasourc": [77, 80, 82, 84, 221], "sourc": [77, 79, 80, 82, 84, 221, 304, 305], "metdata": [77, 79, 82, 84], "metadata": [77, 79, 82, 84, 229, 234], "concept": [77, 79, 82, 84, 229, 231, 232, 234], "microscopi": [77, 79, 82, 84, 150, 229, 231, 232, 234], "clean": [77, 79, 82, 84, 306], "leftov": [77, 79, 82, 84], "set_metadata_from_configuration_experi": [77, 79, 82, 84], "dictproxi": [77, 79, 82, 84, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 111, 113, 115, 119, 121, 160, 162, 165, 168, 170, 175, 187], "kw": [77, 79, 82, 84, 229, 232, 234], "xyz": [77, 165], "bdv": 77, "spec": [77, 229, 234], "xyczt": [77, 79, 82, 84, 229, 231, 232, 234], "rather": [77, 304], "subdivis": 77, "voxel_s": [77, 79, 82, 84, 229, 231, 232, 234], "voxel": [77, 79, 82, 84, 229, 231, 232, 234], "file_typ": [80, 229, 232, 234], "tif": [80, 82, 221, 268], "tifdatasourc": 80, "is_bigtiff": 82, "generate_image_nam": [82, 221], "current_channel": [82, 221], "current_time_point": [82, 221], "ch00_000000": [82, 221], "timepoint": [82, 298], "stack": [82, 115, 197, 299, 304], "At": 82, "tifffil": 82, "imsav": 82, "copy_to_zarr": 84, "frame_id": [84, 194, 197, 221], "zarr": 84, "Will": [84, 232, 301], "fom": 84, "sharednd": 84, "three": [84, 178], "assumpt": 84, "acquisit": [84, 95, 111, 113, 115, 119, 121, 221, 236, 238, 299, 301, 305, 306], "dummi": 86, "devic": [86, 87, 88, 89, 90, 94, 96, 97, 98, 99, 100, 101, 102, 192, 193, 238, 266, 298, 301, 304, 305, 307], "n_tri": 87, "retri": 87, "connect": [87, 94, 96, 97, 98, 99, 100, 101, 102, 111, 113, 115, 121, 127, 132, 134, 155, 157, 160, 162, 165, 166, 168, 170, 175, 176, 179, 187, 238, 298, 304], "startup": [87, 298], "redial": 87, "baseexcept": 87, "dcam": [87, 304], "messag": [88, 155, 192], "incorrect": 88, "device_typ": 88, "camera_id": 89, "is_synthet": [89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 193, 236, 300], "synthet": [89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 115, 116, 134, 143, 162, 238, 298, 301], "dedic": [91, 92, 93, 95, 96, 98, 100, 102], "multiproces": [91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 111, 113, 115, 119, 121, 160, 162, 187], "zoom": [93, 102, 226, 298, 301], "device_connect": [94, 96, 97, 98, 99, 100, 101, 102, 111, 113, 115, 124, 126, 129, 132, 134, 142, 144, 153, 157, 160, 162, 165, 168, 170, 172, 175, 178, 181, 183, 187, 189, 300], "filterwheel": 96, "scan": [97, 301, 304, 305], "trigger": [98, 100, 121, 146, 148, 162, 240, 304], "switch": [98, 126, 238, 242, 266, 298, 304], "analog": [98, 121, 244, 245, 247, 304, 305], "digit": [98, 100, 304], "focus": [99, 153, 242, 271, 301, 305], "shutter": [100, 111, 113, 115, 238, 301], "thorlabsshutt": 100, "syntheticshutt": 100, "ni": [100, 298, 304], "card": [100, 238, 301, 306], "thu": 100, "enabl": [100, 126, 129, 155, 300, 301, 305], "calculate_light_sheet_exposure_tim": [111, 113, 115], "full_chip_exposure_tim": [111, 113, 115], "shutter_width": [111, 113, 115], "exposur": [111, 113, 115, 121, 240], "light": [111, 113, 115], "sheet": [111, 113, 115], "roll": [111, 113, 115], "exposure_tim": [111, 113, 115, 121, 242, 298], "camera_line_interv": [111, 113, 115], "hamamatsuorca": [111, 115, 298], "interv": [111, 113, 115, 304], "set_readout_direct": [111, 113, 115], "bottom": [111, 113, 115], "bytrigg": [111, 113, 115], "diverg": [111, 113, 115], "camerabas": [113, 115], "calculate_readout_tim": [113, 115], "assum": [113, 226, 229, 232, 234, 268, 307], "c13440": 113, "link": 113, "commun": [113, 126, 127, 129, 155, 166, 178, 179, 298], "pull": [113, 300, 304], "readout_tim": [113, 115, 119, 121, 132, 134, 153, 155, 157, 236], "max_frame_r": [113, 115], "framer": [113, 115], "todo": [113, 172, 183, 221, 229, 232, 238, 275, 286, 303], "think": 113, "camera_control": 113, "get_property_valu": [113, 116], "close_camera": [113, 115], "close_image_seri": [113, 115], "seri": [113, 115], "stop": [113, 115, 121, 132, 134, 153, 155, 157, 165, 168, 170, 172, 175, 178, 181, 183, 194, 236, 238], "is_acquir": [113, 115], "get_minimum_waiting_tim": [113, 115], "cyclic_trigger_period": [113, 115], "minimum_trigger_blank": [113, 115], "minimum_trigger_interv": [113, 115], "trigger_blank": [113, 115], "bigger": [113, 115], "trigger_interv": [113, 115], "get_new_fram": [113, 115], "initialize_image_seri": [113, 115], "data_buff": [113, 115, 221, 236, 238], "number_of_fram": [113, 115, 236], "100": [113, 115, 192, 298, 305], "report_set": [113, 115], "set_roi": [113, 115], "roi_height": [113, 115], "2048": [113, 115], "roi_width": [113, 115], "region": [113, 115, 274], "height": [113, 115, 236], "set_bin": [113, 115], "binning_str": [113, 115], "bin": [113, 115], "1x1": 113, "2x2": [113, 115], "4x4": [113, 115], "8x8": [113, 115], "16x16": 113, "1x2": 113, "2x4": 113, "set_exposure_tim": [113, 115], "unit": [113, 115, 165, 240, 241, 242, 243, 244, 245, 247, 305, 306], "millisecond": [113, 115, 166, 301], "set_line_interv": [113, 115], "line_interval_tim": [113, 115], "set_sensor_mod": [113, 115], "sensor": [113, 115, 238], "serial_numb": [113, 176, 298], "generate_new_fram": 115, "load_imag": [115, 238], "pre": [115, 119, 121, 299, 300], "idprop": 116, "property_dict": 116, "property_valu": 116, "hard": 116, "calculate_all_waveform": [119, 121, 236], "waveform": [119, 121, 132, 134, 153, 155, 157, 236, 238, 271, 300, 304], "waveform_dict": [119, 121, 132, 153], "etl": [119, 121, 271], "plu": [119, 121], "daqbas": 121, "add_camera": 121, "close_task": [121, 132, 134, 153, 157], "task": [121, 132, 134, 153, 155, 157, 178, 304], "counter": [121, 304], "create_camera_task": 121, "create_galvo_remote_focus_task": 121, "create_master_trigger_task": 121, "prepare_acquisit": [121, 236, 238], "channel_kei": [121, 132, 134, 153, 155, 157], "prepar": [121, 132, 134, 153, 155, 157, 197, 236, 238], "run_acquisit": [121, 238], "start_task": [121, 132, 134, 153, 155, 157], "won": 121, "run_task": 121, "stop_acquisit": 121, "stop_task": [121, 132, 134, 153, 155, 157], "write_waveforms_to_task": 121, "filter_dictionari": [124, 126, 129, 178], "instal": [124, 126, 129, 178, 300, 304, 306, 308], "wheel_posit": [124, 126, 129], "check_if_filter_in_filter_dictionari": [124, 126, 129], "filter_nam": [124, 126, 129], "filter_exist": [124, 126, 129], "filterwheelbas": [126, 129], "sutter": [126, 178, 301], "lambda": [126, 283], "manual": 126, "lb10": 126, "3_opman": 126, "comport": [126, 127, 129, 155, 178, 179], "com1": [126, 127, 129, 166, 178, 179], "baudrat": [126, 127, 129, 155, 178, 179, 298], "baud": [126, 127, 129, 155, 166, 178, 179], "9600": [126, 127, 129, 166, 178, 179, 298], "number_of_filter_wheel": [126, 129], "wait_until_done_delai": [126, 129], "wait_until_don": [126, 129, 165, 170, 172, 175, 178, 181, 183, 187, 189, 236, 238], "period": [126, 129, 242], "delay_matrix": 126, "movement": [126, 165, 168, 170, 172, 175, 178, 181, 183, 298], "fastest": 126, "slowest": 126, "filter_change_delai": [126, 129], "occupi": 126, "num_byt": [126, 129, 155, 178], "port": [126, 127, 129, 142, 144, 155, 166, 178, 179, 298, 304], "retriev": [126, 263, 271, 300], "page": [126, 150], "38": 126, "set_filt": [126, 129], "25": 127, "build": [127, 179, 263], "sutterfilterwheel": [127, 298], "galvo_id": [132, 134], "galvanomet": [132, 301], "galvo_nam": 132, "device_config": [132, 153, 300], "sample_r": [132, 153, 240, 241, 242, 243, 244, 245, 247], "sweep_tim": [132, 153, 240, 241, 242, 243, 244, 245, 247], "sweep": [132, 153], "camera_delay_perc": [132, 153], "galvo_max_voltag": 132, "voltag": [132, 146, 148, 153, 241, 242, 244, 247], "galvo_min_voltag": 132, "remote_focus_ramp_fal": [132, 153], "ramp": [132, 153, 242], "fall": [132, 153, 242], "prepare_task": [132, 134, 153, 155, 157], "adjust": [132, 134, 153, 155, 157, 238], "account": [132, 134, 286], "488": [132, 134, 153, 155, 252, 305], "galvobas": 134, "joystickbas": 139, "laser_id": [142, 144], "initialize_las": [142, 144], "power": [142, 144, 302], "cw": [142, 144], "apc": [142, 144], "laserbas": 144, "enable_high_resolution_las": [146, 148], "enable_low_resolution_las": [146, 148], "set_laser_analog_voltag": [146, 148], "current_laser_index": [146, 148], "current_laser_intens": [146, 148], "constant": [146, 148, 271], "intens": [146, 148, 221, 245, 250, 252], "percentag": [146, 148, 246], "lasertriggerbas": 148, "calculate_entrance_pupil": 150, "entranc": 150, "pupil": 150, "incid": 150, "angl": 150, "fluoresc": 150, "interfer": 150, "contrast": 150, "carolin": 150, "ajo": 150, "franklin": 150, "prasad": 150, "ganesan": 150, "steven": 150, "boxer": 150, "biophi": 150, "volum": [150, 283], "89": 150, "issu": [150, 307], "octob": 150, "2005": 150, "2759": 150, "2769": 150, "entrance_pupil_diamet": 150, "diamet": 150, "millimet": [150, 175], "remote_focus_delai": [153, 242], "remote_focus_max_voltag": 153, "remote_focus_min_voltag": 153, "nidaqmx": [153, 155, 157], "remotefocusbas": [155, 157], "sca814": [155, 304], "charact": 155, "proper": [155, 304, 307], "echo": 155, "advis": 155, "verifi": 155, "receiv": [155, 178, 238], "sent": [155, 191], "pyseri": 155, "readthedoc": 155, "en": 155, "latest": 155, "pyserial_api": 155, "html": [155, 234], "debug": 155, "voic": 155, "coil": 155, "baud_rat": [155, 166, 179], "byte_s": 155, "pariti": 155, "stop_bit": 155, "read_on_init": 155, "upon": [155, 304, 307], "statement": [155, 261, 300], "read_byt": 155, "send_command": 155, "command": [155, 165, 178, 187, 189, 191, 238, 300, 307], "close_connect": 155, "received_byt": 155, "bytearrai": 155, "shutdown": [155, 192, 193, 304], "deviceconnect": 157, "shutterbas": 162, "deliv": [162, 304], "open_left": 162, "right": [162, 242, 274, 304], "open_right": 162, "close_shutt": 162, "state": [162, 197, 238, 298, 299], "device_id": [165, 168, 170, 172, 175, 178, 181, 183], "stagebas": [165, 170, 172, 175, 178, 181, 183], "asiimag": 165, "doc": [165, 234], "serial_command": 165, "command_quick_start": 165, "distanc": [165, 178, 197, 274, 281, 282, 283, 301], "10th": 165, "micron": [165, 178, 305], "divis": 165, "ever": 165, "rel": 165, "ftp": [165, 304], "stilt": 165, "strain": 165, "system": [165, 250, 252, 298, 300, 304, 305, 307], "x_po": [165, 168, 175, 298], "y_po": [165, 168, 175, 298], "z_po": [165, 168, 175, 298], "f_po": [165, 168, 175, 197, 298], "theta_po": [165, 168, 175, 298], "rotat": [165, 168, 175, 275], "position_dict": [165, 168, 175], "x_max": [165, 168, 175, 298], "y_max": [165, 168, 175, 298], "z_max": [165, 168, 175, 298], "f_max": [165, 168, 175, 298], "theta_max": [165, 168, 175, 298], "x_min": [165, 168, 170, 172, 175, 178, 181, 183, 298], "y_min": [165, 168, 175, 298], "z_min": [165, 168, 175, 298], "f_min": [165, 168, 175, 298], "theta_min": [165, 168, 175, 298], "create_position_dict": [165, 168, 170, 172, 175, 178, 181, 183], "get_abs_posit": [165, 168, 170, 172, 175, 178, 181, 183], "emerg": [165, 168, 170, 175], "halt": [165, 168, 170, 175], "move_dictionari": [165, 168, 170, 172, 175, 178, 181, 183], "ensur": [165, 168, 170, 175, 178, 181, 300], "request": [165, 168, 170, 175, 178, 181, 272, 300], "prefix": [165, 168, 170, 172, 175, 178, 181, 183], "x_ab": [165, 168, 170, 172, 175, 178, 181, 183, 236], "micromet": [165, 168, 170, 172, 175, 178, 181, 183, 301], "degre": [165, 168, 170, 172, 175, 178, 181, 183], "move_absolut": [165, 170, 172, 175, 178, 181, 183], "absolut": [165, 170, 175, 300], "asi": [165, 166, 178, 298], "spot": [165, 170, 172, 175, 178, 181, 183], "success": [165, 170, 172, 175, 178, 181, 183, 238], "move_axis_absolut": [165, 170, 172, 175, 178, 181, 183], "axis_num": [165, 170, 172, 175, 178, 181, 183], "pi": [165, 170, 172, 175, 178, 181, 183, 243, 247, 298], "applic": [165, 178, 300], "report_posit": [165, 170, 172, 175, 178, 183], "abruptli": [165, 168, 170, 172, 175, 181, 183], "com_port": [166, 179], "1000": [166, 298], "tiger": 166, "asi_stag": 166, "successfulli": [166, 304], "positoin": 168, "physik": [170, 175, 176, 301], "instrument": [170, 175, 176, 301, 305], "logic": [170, 172, 178, 181, 183], "hack": [172, 183], "lack": [172, 183], "serialnum": [173, 184], "xyzf": 175, "controller_nam": 176, "reference_mod": 176, "mp": [178, 301], "285": [178, 301], "ascii": 178, "cr": 178, "carriag": 178, "hexadecim": 178, "associ": [178, 300], "complet": [178, 299], "host": 178, "readi": 178, "check_byte_ord": 178, "confirm": [178, 187, 189, 299, 304], "respons": [178, 306], "static": [178, 197], "convert_microns_to_microstep": 178, "microstep": 178, "convert_microsteps_to_micron": 178, "flush_buff": 178, "flush": 178, "consist": [178, 300], "end": [178, 197, 236, 238, 299, 300], "intern": [178, 229, 231, 232, 234], "set_stage_speed_and_resolut": 178, "3000": 178, "sec": [178, 191], "1310": 178, "04": 178, "interrupt": 178, "origin": [178, 266, 307], "sutterstag": 179, "device_control": 187, "servo": [187, 189, 304], "read_posit": [187, 189], "cur_posit": [187, 189], "set_zoom": [187, 189], "tha": [187, 189], "zoomdict": [187, 189], "zoombas": 189, "dynamixelzoom": [189, 298], "dummyview": 191, "execut": [191, 261, 299], "append": [191, 277], "oldest": 191, "pop": 191, "move_stag": [191, 236, 238], "grab": 191, "timecost": 192, "signal_pip": [192, 193, 194], "pipe": [192, 193, 194, 238], "data_pip": [192, 193, 194], "generate_messag": 192, "listen": 192, "sendout": 192, "devices_dict": [193, 236], "signal_contain": 194, "signalcontain": 194, "data_contain": 194, "datacontain": 194, "signal_thread": 194, "data_thread": 194, "stop_flag": 194, "signal_func": 194, "data_func": [194, 238], "feature_list": [194, 219], "autofocus_frame_queu": 197, "autofocus_pos_queu": 197, "queue": [197, 304], "max_entropi": 197, "f_frame_id": 197, "frame_num": 197, "init_po": 197, "focus_po": 197, "target_frame_id": 197, "get_frames_num": 197, "plot_data": 197, "total_frame_num": 197, "fine_step_s": 197, "fine": [197, 300], "fine_pos_offset": 197, "coarse_step_s": 197, "coars": [197, 305], "coarse_step": 197, "signal_id": 197, "target_channel": 197, "end_func_data": [197, 299], "routin": [197, 272, 306, 307], "end_func_sign": [197, 299], "get_autofocus_frame_num": 197, "best": [197, 300], "get_step": 197, "step_siz": [197, 298], "autofocus": 197, "travel": 197, "pos_offset": 197, "figur": 197, "in_func_data": [197, 299], "in_func_sign": [197, 299], "pre_func_data": [197, 299], "pre_func_sign": [197, 299], "microscope_st": 197, "autofocus_param": 197, "resolution_mod": 199, "zoom_valu": 199, "overlap": [201, 274, 275], "target_resolut": [201, 226], "nanoscal": [201, 226], "target_zoom": [201, 226], "grid": [201, 275], "root": [210, 211, 213, 229, 232, 234, 285, 286], "cleanup_list": [210, 211, 213], "feature_nam": [212, 214, 215], "func_dict": [212, 214, 215], "node_typ": [212, 214, 215, 299], "device_rel": [212, 214, 215, 299], "need_respons": [212, 214, 215, 299], "treenod": [212, 214], "number_of_execut": 213, "feature_modul": 218, "func_typ": 218, "sibl": 219, "tree": [219, 299], "sub_dir": 221, "image_nam": 221, "disk": [221, 264], "save_directori": [221, 263], "scheme": 221, "data_sourc": 221, "mip_directori": 221, "project": [221, 306], "mip": 221, "data_bff": 221, "ext": 221, "microscopest": [221, 226], "color": 221, "generate_meta_data": 221, "meta": 221, "vestigi": 221, "delet": 221, "save_imag": 221, "service_url": 224, "outer": 226, "active_microscope_nam": 226, "xmlmetadata": [229, 234], "bigdataview": [229, 232], "xml": [229, 232, 234, 285, 286], "section": [229, 299, 307], "arxiv": 229, "org": [229, 234], "ab": 229, "1412": 229, "0488": 229, "parse_bdv_xml": 229, "pars": [229, 232, 271, 285, 286, 306], "incomplet": 229, "stage_positions_to_affine_matrix": 229, "affin": 229, "to_xml": [229, 232, 234], "write_xml": [229, 232, 234], "header": [229, 232, 234, 279], "om": [232, 234, 286], "proprietari": 232, "address": [232, 307], "file_type_xml_dict": 232, "ome_tiff_xml_dict": [232, 234], "xml_tool": 232, "parse_xml": 232, "openmicroscopi": 234, "uid": 234, "heirarch": 234, "ome_dict": 234, "is_virtu": 236, "listproxi": 236, "update_data_buff": [236, 238], "img_width": [236, 238], "img_height": [236, 238], "move_stage_offset": 236, "former_microscop": 236, "end_acquisit": [236, 238], "get_readout_tim": [236, 238], "get_stage_posit": [236, 238], "stage_posit": 236, "pos_dict": [236, 238, 255], "y_ab": 236, "z_ab": 236, "f_ab": 236, "microscope1": 236, "prepare_next_channel": 236, "stop_stag": [236, 238], "512": [236, 238], "event_queu": 238, "softwar": [238, 298, 300, 302, 304, 305, 308], "architectur": [238, 300, 305, 306], "leverag": [238, 300], "cuda": [238, 272, 305, 307], "analysi": [238, 272, 299], "engin": 238, "get_data_buff": 238, "create_pip": 238, "release_pip": 238, "run_command": 238, "run_data_process": 238, "run_single_channel_acquisit": 238, "run_single_acquisit": 238, "snap_imag": 238, "run_live_acquisit": 238, "run_z_stack_acquisit": 238, "run_single_channel_acquisition_with_featur": 238, "change_resolut": 238, "resolution_valu": 238, "pipe_nam": 238, "pair": 238, "duplex": 238, "end1": 238, "disconnect": 238, "get_active_microscop": 238, "get_microscope_info": 238, "get_offset_variance_map": 238, "offset_variance_map": 238, "ret_pos_dict": 238, "unload": 238, "pause_data_thread": 238, "paus": 238, "turn_off_flag": 238, "resume_data_thread": 238, "resum": 238, "num_of_fram": 238, "stream": 238, "gui": [238, 273, 277], "recalcul": 238, "therebi": 238, "peopl": 238, "due": 238, "cleanup": [238, 299], "update_ilastik_set": 238, "display_segment": 238, "mark_posit": 238, "target_label": 238, "ilastik": 238, "mark": 238, "label": 238, "100000": [240, 241, 242, 243, 244, 245, 247, 298], "camera_delai": [240, 242], "meant": 240, "visual": [240, 307], "hz": [240, 241, 242, 243, 244, 245, 247], "exposure_start": 240, "exposure_end": 240, "dc": 241, "reson": 241, "drive": [241, 244, 247, 306], "volt": [241, 242, 243, 244, 245, 247, 304], "typical_galvo": [241, 243], "24": 242, "sawtooth": [242, 300], "typic": 242, "rise": 242, "linearli": 242, "2x": [242, 305], "drop": 242, "down": 242, "exchang": 242, "etl_ramp": 242, "tunable_lens_ramp": 242, "etl_delai": 242, "duty_cycl": [243, 247], "phase": [243, 244, 247], "5707963267948966": 243, "radian": [243, 244, 247], "sine": 244, "typical_las": [244, 247], "pulse_width": 245, "ttl": 245, "typical_ttl_puls": 245, "percent_smooth": 246, "smooth": 246, "convolut": 246, "smoothed_waveform": 246, "141592653589793": 247, "na": [250, 251, 252], "wvl": [250, 251, 252], "waist": [250, 252], "nm": [250, 252, 305], "apertur": [250, 252], "optic": [250, 252, 301], "refract": [250, 252], "wavelength": [250, 252], "r0": [250, 252], "z0": [250, 252], "w0": [250, 252], "i0": [250, 252], "bg0": 250, "rl": 252, "zl": 252, "33": 252, "bg": 252, "common": [253, 254, 304], "model": [253, 254, 299, 300, 302, 306], "help": [254, 298, 300], "percol": 254, "funclist": 258, "saving_set": 263, "popup": 263, "file_directori": 264, "content_dict": 264, "yml": 264, "font_siz": 266, "piec": [266, 301], "font": 266, "arial": 266, "ttf": 266, "darwin": 266, "cambriab": 266, "fp": 268, "lazi": 268, "folder": [268, 300, 307], "pil": 268, "low_res_fp": 268, "endosom": 268, "mil": 268, "marin": 268, "zach": 268, "lung": 268, "antirfp": 268, "2022": 268, "07": 268, "02": [268, 307], "cell_001": 268, "low_r": 268, "imshow": 268, "500": [268, 298], "containt": 268, "parser": [270, 271], "argumentpars": [270, 271], "argumentparserobject": 270, "argpars": [271, 272], "namespac": [271, 272, 286], "logging_path": 271, "log": 271, "gpu": [272, 305, 306], "statu": 272, "commonli": [273, 304], "multiposit": [273, 277], "panda": [273, 277], "tabl": [273, 277], "dist": 274, "roi_length": 274, "divid": 274, "roi": [274, 275], "watch": 274, "sign": [274, 275, 281, 282], "measur": 274, "num_til": 274, "x_start": 275, "x_tile": 275, "x_length": 275, "x_overlap": 275, "y_start": 275, "y_tile": 275, "y_length": 275, "y_overlap": 275, "z_start": 275, "z_tile": 275, "z_length": 275, "z_overlap": 275, "theta_start": 275, "theta_til": 275, "theta_length": 275, "theta_overlap": 275, "f_start": 275, "f_tile": 275, "f_length": 275, "f_overlap": 275, "fov": 275, "track": 275, "n_posit": 275, "po": 277, "redraw": 277, "datafram": 277, "multi_position_t": 277, "begin_start": 279, "half": 281, "subsample_z": 283, "nxnxn": 283, "euclidean": 283, "everi": [283, 304], "subsampl": 283, "box": [283, 304], "128": 283, "29": 283, "tag": 285, "elementtre": 286, "etre": 286, "fullnam": [295, 296], "escap": [295, 296], "underlin": [295, 296], "rubric": 296, "endfor": 296, "endif": 296, "endblock": 296, "302158": 298, "302352": 298, "filter_wheel": 298, "com19": 298, "number_of_wheel": 298, "controllernam": 298, "884": 298, "l": [298, 305], "509": [298, 305], "20dg10": [298, 305], "40dg10": 298, "060": 298, "dg": 298, "406": 298, "4pd": 298, "nostag": 298, "refmod": 298, "frf": 298, "119060508": 298, "thorlab": [298, 305], "74000375": 298, "servo_id": 298, "com18": 298, "1000000": 298, "manufactur": [298, 301, 304], "123456789": 298, "com7": 298, "115200": 298, "instanti": 298, "eg": 298, "emploi": 298, "syntheticstag": 298, "987654321": 298, "notic": 298, "syntheticzoom": 298, "abbrevi": 298, "y_unload_posit": 298, "10000": 298, "y_load_posit": 298, "90000": 298, "startfocu": 298, "75000": 298, "33500": 298, "16000": 298, "50000": 298, "25000": 298, "360": 298, "x_rot_posit": 298, "y_rot_posit": 298, "z_rot_posit": 298, "x_step": 298, "y_step": 298, "z_step": 298, "theta_step": 298, "f_step": 298, "25250": 298, "40000": 298, "70000": 298, "veloc": 298, "x_offset": 298, "y_offset": 298, "z_offset": 298, "f_offset": 298, "theta_offset": 298, "explicil": 298, "earlier": 298, "relat": 298, "physic": 298, "third": 298, "laser_pow": 298, "interval_tim": 298, "stack_acquisit": 298, "200": 298, "start_po": 298, "5000": 298, "end_po": 298, "stack_paus": 298, "widget": 298, "spinbox": 298, "develop": [298, 299, 300, 304, 306], "plan": 298, "go": [298, 307], "forward": 298, "manner": 298, "reconfigur": 299, "snap": 299, "pictur": 299, "common_featur": 299, "zstackacquisit": 299, "autofocu": 299, "ideal": [299, 300], "discret": 299, "cosin": 299, "dictat": 299, "config_t": 299, "init": 299, "cleanup_func_sign": 299, "cleanup_func_data": 299, "node": 299, "multi": [299, 304], "primari": 299, "acqusit": 299, "failsaf": 299, "latter": 299, "inde": 299, "proceed": 299, "welcom": 300, "pleas": [300, 307], "fork": 300, "branch": 300, "review": 300, "practic": 300, "outlin": 300, "consid": 300, "refactor": 300, "reach": 300, "prior": [300, 304], "happi": 300, "bring": 300, "discuss": 300, "meet": 300, "strong": 300, "especi": 300, "disrupt": 300, "improv": 300, "clariti": 300, "team": 300, "advanc": 300, "merg": 300, "pep8": 300, "importantli": 300, "camelcas": 300, "lowercase_and_separated_by_underscor": 300, "numpydoc": 300, "commit": 300, "workflow": 300, "enforc": 300, "ruff": 300, "linter": 300, "black": 300, "formatt": 300, "vscode": 300, "whatev": [300, 304], "conda": [300, 307], "aslm": [300, 301, 304, 306, 307, 308], "pip": [300, 307], "cd": [300, 307], "rare": 300, "complain": 300, "start_stag": 300, "exec": 300, "device_startup_funct": 300, "device_nam": 300, "start_": 300, "noqa": 300, "comment": 300, "easi": [300, 307], "opportun": 300, "galvo_waveform": 300, "alert": 300, "pytest": 300, "abstract": [301, 306], "layer": [301, 306], "divers": 301, "equip": [301, 305], "flash": [301, 305], "fusion": 301, "photometr": 301, "deform": 301, "mirror": 301, "nation": [301, 305], "coher": 301, "obi": [301, 305], "omicron": [301, 305], "luxx": 301, "dynamixel": 301, "accompani": 301, "contribut": [301, 306], "encourag": 302, "engag": 302, "collabor": 302, "guidelin": [302, 306], "config": [304, 306, 307], "conflict": 304, "sever": 304, "pcie": 304, "6738": 304, "pxie": [304, 305], "6259": 304, "6733": 304, "daqmx": 304, "driver": [304, 305, 307], "recogn": 304, "visibl": 304, "pinout": 304, "click": 304, "scb": 304, "68a": 304, "breakout": 304, "mislead": 304, "aspect": 304, "board": 304, "receipt": 304, "determinist": 304, "basi": 304, "jitter": 304, "anticip": 304, "dev1": 304, "dev2": 304, "master_trigger_out_lin": 304, "trigger_sourc": 304, "pxi6259": [304, 305], "port0": 304, "line1": 304, "pfi0": 304, "p0": 304, "pin": [304, 307], "pfio": 304, "gate": 304, "usb": 304, "came": 304, "hcimagel": 304, "prompt": [304, 307], "intal": 304, "silicon": 304, "firebird": 304, "framegrabb": [304, 305], "tool": [304, 306], "button": 304, "grabber": [304, 305], "apporpri": 304, "x16": 304, "slot": 304, "motherboard": 304, "excap": 304, "camera_trigger_out_lin": 304, "extern": 304, "ctr0": 304, "download": [304, 306], "pvcam": 304, "sdk": [304, 307], "agre": 304, "term": 304, "unknown": 304, "broadcom": 304, "pci": 304, "kit": 304, "bridg": 304, "dev": 304, "_": 304, "abl": 304, "pvcamtest": 304, "lfa": 304, "2010": 304, "actuat": 304, "continu": [304, 307], "sync": 304, "ignal": 304, "synchron": 304, "encod": 304, "less": 304, "perz": 304, "lighthub": 305, "ultra": 305, "acc": 305, "642": 305, "561": 305, "mix": 305, "unidirect": 305, "bidirect": 305, "repeatablil": 305, "increment": 305, "motion": 305, "borderlin": 305, "nvidia": [305, 307], "titan": 305, "rtx": 305, "456": 305, "71": 305, "optotun": 305, "electrotun": 305, "len": 305, "blink": 305, "1073": 305, "chassi": 305, "pxi6733": 305, "32mm": 305, "position": 305, "mad": 305, "citi": 305, "lab": [305, 307], "nano": 305, "ut": 306, "southwestern": 306, "ecosystem": 306, "aim": 306, "custom": 306, "recip": 306, "maker": 306, "autom": 306, "repositori": [306, 307], "philosophi": 306, "minim": 306, "priorit": 306, "stabil": 306, "brutal": 306, "obviou": 306, "understood": 306, "year": 306, "maxim": 306, "biolog": 306, "git": 306, "environ": 306, "troubleshoot": 306, "voicecoil": 306, "principl": 306, "scientif": 306, "recommend": 307, "desktop": 307, "friendli": 307, "head": 307, "miniconda": 307, "websit": 307, "handi": 307, "cheatsheet": 307, "accustom": 307, "anaconda": 307, "frequent": 307, "taskbar": 307, "mycomput": 307, "firewal": 307, "utsw": 307, "campu": 307, "circumv": 307, "parenthes": 307, "far": 307, "activatin": 307, "upgrad": 307, "clone": 307, "dean": 307, "mkdir": 307, "myfoldernam": 307, "thedeanlab": 307, "sh": 307, "completet": 307, "feedback": 307, "acceler": 307, "tensorflow": 307, "pytorch": 307, "cupi": 307, "excel": 307, "cudnn": 307, "graphic": 307, "450": 307, "80": 307, "tensorrt": 307, "microsoft": 307, "redistribut": 307, "studio": 307, "2015": 307, "2017": 307, "2019": 307, "http_proxi": 307, "swmed": 307, "edu": 307, "3128": 307, "https_proxi": 307, "typo": 307, "perspect": 307, "onlin": 307, "usersuserprofil": 307, "condarc": 307, "usersuserprofilepippip": 307, "ini": 307, "password": 307, "8080": 307}, "objects": {"aslm": [[0, 0, 0, "-", "config"], [7, 0, 0, "-", "controller"], [14, 0, 0, "-", "model"], [248, 0, 0, "-", "tools"], [287, 0, 0, "-", "view"]], "aslm.config": [[1, 0, 0, "-", "config"]], "aslm.config.config": [[2, 1, 1, "", "build_nested_dict"], [3, 1, 1, "", "get_aslm_path"], [4, 1, 1, "", "get_configuration_paths"], [5, 1, 1, "", "load_configs"], [6, 1, 1, "", "update_config_dict"]], "aslm.controller": [[8, 0, 0, "-", "configuration_controller"], [10, 0, 0, "-", "thread_pool"]], "aslm.controller.configuration_controller": [[9, 2, 1, "", "ConfigurationController"]], "aslm.controller.configuration_controller.ConfigurationController": [[9, 3, 1, "", "__init__"], [9, 4, 1, "", "camera_config_dict"], [9, 4, 1, "", "camera_pixels"], [9, 3, 1, "id0", "change_microscope"], [9, 4, 1, "", "channels_info"], [9, 4, 1, "", "daq_sample_rate"], [9, 4, 1, "", "filter_wheel_setting_dict"], [9, 4, 1, "", "galvo_parameter_dict"], [9, 3, 1, "id1", "get_microscope_configuration_dict"], [9, 3, 1, "id2", "get_stage_position_limits"], [9, 4, 1, "", "lasers_info"], [9, 4, 1, "", "number_of_channels"], [9, 4, 1, "", "remote_focus_dict"], [9, 4, 1, "", "stage_default_position"], [9, 4, 1, "", "stage_setting_dict"], [9, 4, 1, "", "stage_step"]], "aslm.controller.thread_pool": [[11, 2, 1, "", "SelfLockThread"], [12, 2, 1, "", "SynchronizedThreadPool"], [13, 2, 1, "", "ThreadWaitlist"]], "aslm.controller.thread_pool.SelfLockThread": [[11, 3, 1, "", "__init__"], [11, 4, 1, "", "daemon"], [11, 3, 1, "", "getName"], [11, 4, 1, "", "ident"], [11, 3, 1, "", "isDaemon"], [11, 3, 1, "", "isLocked"], [11, 3, 1, "", "is_alive"], [11, 3, 1, "", "join"], [11, 4, 1, "", "name"], [11, 4, 1, "", "native_id"], [11, 3, 1, "", "run"], [11, 3, 1, "", "setDaemon"], [11, 3, 1, "", "setName"], [11, 3, 1, "", "start"], [11, 3, 1, "", "unlock"], [11, 3, 1, "", "wait"]], "aslm.controller.thread_pool.SynchronizedThreadPool": [[12, 3, 1, "", "__init__"], [12, 3, 1, "", "clear"], [12, 3, 1, "", "createThread"], [12, 3, 1, "", "getRunningThread"], [12, 3, 1, "", "globaltrace"], [12, 3, 1, "", "killThreadInList"], [12, 3, 1, "", "localtrace"], [12, 3, 1, "", "moveToDelete"], [12, 3, 1, "", "registerResource"], [12, 3, 1, "", "removeThread"], [12, 3, 1, "", "threadTaskWrapping"]], "aslm.controller.thread_pool.ThreadWaitlist": [[13, 3, 1, "", "__init__"]], "aslm.model": [[15, 0, 0, "-", "analysis"], [56, 0, 0, "-", "concurrency"], [75, 0, 0, "-", "data_sources"], [85, 0, 0, "-", "device_startup_functions"], [103, 0, 0, "-", "devices"], [190, 0, 0, "-", "dummy"], [195, 0, 0, "-", "features"], [227, 0, 0, "-", "metadata_sources"], [235, 0, 0, "-", "microscope"], [237, 0, 0, "-", "model"], [239, 0, 0, "-", "waveforms"]], "aslm.model.analysis": [[16, 0, 0, "-", "boundary_detect"], [21, 0, 0, "-", "camera"], [26, 0, 0, "-", "detection"], [36, 0, 0, "-", "image_contrast"], [42, 0, 0, "-", "image_decorrelation"], [51, 0, 0, "-", "image_transform"], [54, 0, 0, "-", "spectral_unmixing"]], "aslm.model.analysis.boundary_detect": [[17, 1, 1, "", "binary_detect"], [18, 1, 1, "", "find_tissue_boundary_2d"], [19, 1, 1, "", "has_tissue"], [20, 1, 1, "", "map_boundary"]], "aslm.model.analysis.camera": [[22, 1, 1, "", "compute_flatfield_map"], [23, 1, 1, "", "compute_noise_sigma"], [24, 1, 1, "", "compute_scmos_offset_and_variance_map"], [25, 1, 1, "", "compute_signal_to_noise"]], "aslm.model.analysis.detection": [[27, 1, 1, "", "add_median_border"], [28, 1, 1, "", "combine_images"], [29, 1, 1, "", "log_detection"], [30, 1, 1, "", "make_inside_image"], [31, 1, 1, "", "make_normalized_image"], [32, 1, 1, "", "make_sphere_3D"], [33, 1, 1, "", "multiscale_surface_filter_3D"], [34, 1, 1, "", "surface_filter_gauss_3D"], [35, 1, 1, "", "three_level_segmentation"]], "aslm.model.analysis.image_contrast": [[37, 1, 1, "", "estimate_and_correct_flatfield"], [38, 1, 1, "", "estimate_image_resolution"], [39, 1, 1, "", "fast_normalized_dct_shannon_entropy"], [40, 1, 1, "", "image_intensity"], [41, 1, 1, "", "normalized_dct_shannon_entropy"]], "aslm.model.analysis.image_decorrelation": [[43, 1, 1, "", "apodize_image"], [44, 1, 1, "", "get_correlation_coefficient"], [45, 1, 1, "", "get_decorrelation_local_maxima"], [46, 1, 1, "", "get_image_decorrelation"], [47, 1, 1, "", "get_radial_average"], [48, 1, 1, "", "image_to_polar"], [49, 1, 1, "", "linear_map"], [50, 1, 1, "", "main_image_decorr"]], "aslm.model.analysis.image_transform": [[52, 1, 1, "", "deskew_image"], [53, 1, 1, "", "initiate_gpu"]], "aslm.model.analysis.spectral_unmixing": [[55, 1, 1, "", "to_do"]], "aslm.model.concurrency": [[57, 0, 0, "-", "concurrency_tools"], [68, 0, 0, "-", "proxy_objects"], [73, 0, 0, "-", "write_parameters"]], "aslm.model.concurrency.concurrency_tools": [[58, 2, 1, "", "CustodyThread"], [59, 5, 1, "", "FancyThread"], [60, 2, 1, "", "MyTestClass"], [61, 2, 1, "", "ObjectInSubprocess"], [62, 5, 1, "", "PoliteThread"], [63, 2, 1, "", "ResultThread"], [64, 2, 1, "", "SharedNDArray"], [65, 2, 1, "", "TestObjectInSubprocess"], [66, 2, 1, "", "TestResultThreadAndCustodyThread"], [67, 2, 1, "", "TestSharedNDArray"]], "aslm.model.concurrency.concurrency_tools.CustodyThread": [[58, 3, 1, "", "__init__"], [58, 4, 1, "", "daemon"], [58, 3, 1, "", "getName"], [58, 3, 1, "", "get_result"], [58, 4, 1, "", "ident"], [58, 3, 1, "", "isDaemon"], [58, 3, 1, "", "is_alive"], [58, 3, 1, "", "join"], [58, 4, 1, "", "name"], [58, 4, 1, "", "native_id"], [58, 3, 1, "", "run"], [58, 3, 1, "", "setDaemon"], [58, 3, 1, "", "setName"], [58, 3, 1, "", "start"]], "aslm.model.concurrency.concurrency_tools.MyTestClass": [[60, 3, 1, "", "__init__"], [60, 3, 1, "", "run"], [60, 3, 1, "", "time_it"]], "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess": [[61, 3, 1, "", "__init__"]], "aslm.model.concurrency.concurrency_tools.ResultThread": [[63, 3, 1, "", "__init__"], [63, 4, 1, "", "daemon"], [63, 3, 1, "", "getName"], [63, 3, 1, "", "get_result"], [63, 4, 1, "", "ident"], [63, 3, 1, "", "isDaemon"], [63, 3, 1, "", "is_alive"], [63, 3, 1, "", "join"], [63, 4, 1, "", "name"], [63, 4, 1, "", "native_id"], [63, 3, 1, "", "run"], [63, 3, 1, "", "setDaemon"], [63, 3, 1, "", "setName"], [63, 3, 1, "", "start"]], "aslm.model.concurrency.concurrency_tools.SharedNDArray": [[64, 5, 1, "", "ALIGNED"], [64, 5, 1, "", "BEHAVED"], [64, 5, 1, "", "CARRAY"], [64, 5, 1, "", "C_CONTIGUOUS"], [64, 5, 1, "", "FARRAY"], [64, 5, 1, "", "FNC"], [64, 5, 1, "", "FORC"], [64, 5, 1, "", "F_CONTIGUOUS"], [64, 5, 1, "", "OWNDATA"], [64, 5, 1, "", "T"], [64, 5, 1, "", "UPDATEIFCOPY"], [64, 5, 1, "", "WRITEABLE"], [64, 5, 1, "", "WRITEBACKIFCOPY"], [64, 3, 1, "", "__init__"], [64, 3, 1, "", "all"], [64, 3, 1, "", "any"], [64, 3, 1, "", "argmax"], [64, 3, 1, "", "argmin"], [64, 3, 1, "", "argpartition"], [64, 3, 1, "", "argsort"], [64, 3, 1, "", "astype"], [64, 5, 1, "", "base"], [64, 3, 1, "", "byteswap"], [64, 3, 1, "", "choose"], [64, 3, 1, "", "clip"], [64, 3, 1, "", "compress"], [64, 3, 1, "", "conj"], [64, 3, 1, "", "conjugate"], [64, 3, 1, "", "copy"], [64, 5, 1, "", "ctypes"], [64, 3, 1, "", "cumprod"], [64, 3, 1, "", "cumsum"], [64, 5, 1, "", "data"], [64, 3, 1, "", "diagonal"], [64, 5, 1, "", "dtype"], [64, 3, 1, "", "dump"], [64, 3, 1, "", "dumps"], [64, 3, 1, "", "fill"], [64, 5, 1, "", "flags"], [64, 5, 1, "", "flat"], [64, 3, 1, "", "flatten"], [64, 3, 1, "", "getfield"], [64, 5, 1, "", "imag"], [64, 3, 1, "", "item"], [64, 3, 1, "", "itemset"], [64, 5, 1, "", "itemsize"], [64, 3, 1, "", "max"], [64, 3, 1, "", "mean"], [64, 3, 1, "", "min"], [64, 5, 1, "", "nbytes"], [64, 5, 1, "", "ndim"], [64, 3, 1, "", "newbyteorder"], [64, 3, 1, "", "nonzero"], [64, 3, 1, "", "partition"], [64, 3, 1, "", "prod"], [64, 3, 1, "", "ptp"], [64, 3, 1, "", "put"], [64, 3, 1, "", "ravel"], [64, 5, 1, "", "real"], [64, 3, 1, "", "repeat"], [64, 3, 1, "", "reshape"], [64, 3, 1, "", "resize"], [64, 3, 1, "", "round"], [64, 3, 1, "", "searchsorted"], [64, 3, 1, "", "setfield"], [64, 3, 1, "", "setflags"], [64, 5, 1, "", "shape"], [64, 5, 1, "", "size"], [64, 3, 1, "", "sort"], [64, 3, 1, "", "squeeze"], [64, 3, 1, "", "std"], [64, 5, 1, "", "strides"], [64, 3, 1, "", "sum"], [64, 3, 1, "", "swapaxes"], [64, 3, 1, "", "take"], [64, 3, 1, "", "tobytes"], [64, 3, 1, "", "tofile"], [64, 3, 1, "", "tolist"], [64, 3, 1, "", "tostring"], [64, 3, 1, "", "trace"], [64, 3, 1, "", "transpose"], [64, 3, 1, "", "var"], [64, 3, 1, "", "view"]], "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess": [[65, 2, 1, "", "TestClass"], [65, 3, 1, "", "__init__"], [65, 3, 1, "", "run"], [65, 3, 1, "", "test_incorrect_thread_management"], [65, 3, 1, "", "test_lock_with_waitlist"], [65, 3, 1, "", "test_object_in_subprocess_overhead"], [65, 3, 1, "", "test_sending_shared_arrays"], [65, 3, 1, "", "time_it"]], "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread": [[66, 3, 1, "", "__init__"], [66, 3, 1, "", "run"], [66, 3, 1, "", "time_it"]], "aslm.model.concurrency.concurrency_tools.TestSharedNDArray": [[67, 3, 1, "", "__init__"], [67, 3, 1, "", "run"], [67, 3, 1, "", "test_ndarraylike_behavior"], [67, 3, 1, "", "test_serialization"], [67, 3, 1, "", "test_serializing_and_deserializing"], [67, 3, 1, "", "time_it"]], "aslm.model.concurrency.proxy_objects": [[69, 2, 1, "", "ProxyManager"], [70, 2, 1, "", "ProxyObject"], [71, 1, 1, "", "launch_custody_thread"], [72, 1, 1, "", "launch_thread"]], "aslm.model.concurrency.proxy_objects.ProxyManager": [[69, 3, 1, "", "__init__"], [69, 3, 1, "", "proxy_object"], [69, 3, 1, "", "shared_numpy_array"]], "aslm.model.concurrency.proxy_objects.ProxyObject": [[70, 3, 1, "", "__init__"]], "aslm.model.concurrency.write_parameters": [[74, 2, 1, "", "write_Params"]], "aslm.model.concurrency.write_parameters.write_Params": [[74, 3, 1, "", "__init__"]], "aslm.model.data_sources": [[76, 0, 0, "-", "bdv_data_source"], [78, 0, 0, "-", "data_source"], [80, 1, 1, "", "get_data_source"], [81, 0, 0, "-", "tiff_data_source"], [83, 0, 0, "-", "zarr_data_source"]], "aslm.model.data_sources.bdv_data_source": [[77, 2, 1, "", "BigDataViewerDataSource"]], "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource": [[77, 3, 1, "", "__init__"], [77, 3, 1, "", "close"], [77, 4, 1, "id3", "data"], [77, 5, 1, "id0", "file_name"], [77, 5, 1, "id2", "metadata"], [77, 4, 1, "", "mode"], [77, 3, 1, "", "read"], [77, 4, 1, "", "resolutions"], [77, 3, 1, "", "set_metadata_from_configuration_experiment"], [77, 4, 1, "", "shape"], [77, 4, 1, "", "shapes"], [77, 4, 1, "", "subdivisions"], [77, 4, 1, "", "voxel_size"], [77, 3, 1, "", "write"]], "aslm.model.data_sources.data_source": [[79, 2, 1, "", "DataSource"]], "aslm.model.data_sources.data_source.DataSource": [[79, 3, 1, "", "__init__"], [79, 3, 1, "", "close"], [79, 4, 1, "id3", "data"], [79, 5, 1, "id0", "file_name"], [79, 5, 1, "id2", "metadata"], [79, 4, 1, "", "mode"], [79, 3, 1, "", "read"], [79, 3, 1, "", "set_metadata_from_configuration_experiment"], [79, 4, 1, "", "shape"], [79, 4, 1, "", "voxel_size"], [79, 3, 1, "", "write"]], "aslm.model.data_sources.tiff_data_source": [[82, 2, 1, "", "TiffDataSource"]], "aslm.model.data_sources.tiff_data_source.TiffDataSource": [[82, 3, 1, "", "__init__"], [82, 3, 1, "", "close"], [82, 4, 1, "id3", "data"], [82, 5, 1, "id0", "file_name"], [82, 3, 1, "", "generate_image_name"], [82, 5, 1, "id2", "metadata"], [82, 4, 1, "", "mode"], [82, 3, 1, "", "read"], [82, 3, 1, "", "set_metadata_from_configuration_experiment"], [82, 4, 1, "", "shape"], [82, 4, 1, "", "voxel_size"], [82, 3, 1, "", "write"]], "aslm.model.data_sources.zarr_data_source": [[84, 2, 1, "", "ZarrDataSource"]], "aslm.model.data_sources.zarr_data_source.ZarrDataSource": [[84, 3, 1, "", "__init__"], [84, 3, 1, "", "close"], [84, 3, 1, "", "copy_to_zarr"], [84, 4, 1, "id3", "data"], [84, 5, 1, "id0", "file_name"], [84, 5, 1, "id2", "metadata"], [84, 4, 1, "", "mode"], [84, 3, 1, "", "read"], [84, 3, 1, "", "set_metadata_from_configuration_experiment"], [84, 4, 1, "", "shape"], [84, 4, 1, "", "voxel_size"], [84, 3, 1, "", "write"]], "aslm.model.device_startup_functions": [[86, 2, 1, "", "DummyDeviceConnection"], [87, 1, 1, "", "auto_redial"], [88, 1, 1, "", "device_not_found"], [89, 1, 1, "", "load_camera_connection"], [90, 1, 1, "", "load_devices"], [91, 1, 1, "", "load_filter_wheel_connection"], [92, 1, 1, "", "load_stages"], [93, 1, 1, "", "load_zoom_connection"], [94, 1, 1, "", "start_camera"], [95, 1, 1, "", "start_daq"], [96, 1, 1, "", "start_filter_wheel"], [97, 1, 1, "", "start_galvo"], [98, 1, 1, "", "start_lasers"], [99, 1, 1, "", "start_remote_focus_device"], [100, 1, 1, "", "start_shutter"], [101, 1, 1, "", "start_stage"], [102, 1, 1, "", "start_zoom"]], "aslm.model.device_startup_functions.DummyDeviceConnection": [[86, 3, 1, "", "__init__"]], "aslm.model.devices": [[104, 0, 0, "-", "APIs"], [109, 0, 0, "-", "camera"], [117, 0, 0, "-", "daq"], [122, 0, 0, "-", "filter_wheel"], [130, 0, 0, "-", "galvo"], [135, 0, 0, "-", "joystick"], [140, 0, 0, "-", "lasers"], [149, 0, 0, "-", "objectives"], [151, 0, 0, "-", "remote_focus"], [158, 0, 0, "-", "shutter"], [163, 0, 0, "-", "stages"], [185, 0, 0, "-", "zoom"]], "aslm.model.devices.APIs": [[105, 0, 0, "-", "coherent"], [106, 0, 0, "-", "dynamixel"], [107, 0, 0, "-", "logitech"], [108, 0, 0, "-", "omicron"]], "aslm.model.devices.camera": [[110, 0, 0, "-", "camera_base"], [112, 0, 0, "-", "camera_hamamatsu"], [114, 0, 0, "-", "camera_synthetic"]], "aslm.model.devices.camera.camera_base": [[111, 2, 1, "", "CameraBase"]], "aslm.model.devices.camera.camera_base.CameraBase": [[111, 3, 1, "", "__init__"], [111, 3, 1, "", "calculate_light_sheet_exposure_time"], [111, 3, 1, "", "set_readout_direction"]], "aslm.model.devices.camera.camera_hamamatsu": [[113, 2, 1, "", "HamamatsuOrca"]], "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca": [[113, 3, 1, "", "__init__"], [113, 3, 1, "", "calculate_light_sheet_exposure_time"], [113, 3, 1, "", "calculate_readout_time"], [113, 3, 1, "", "close_camera"], [113, 3, 1, "", "close_image_series"], [113, 3, 1, "", "get_minimum_waiting_time"], [113, 3, 1, "", "get_new_frame"], [113, 3, 1, "", "initialize_image_series"], [113, 3, 1, "", "report_settings"], [113, 4, 1, "", "serial_number"], [113, 3, 1, "", "set_ROI"], [113, 3, 1, "", "set_binning"], [113, 3, 1, "", "set_exposure_time"], [113, 3, 1, "", "set_line_interval"], [113, 3, 1, "", "set_readout_direction"], [113, 3, 1, "", "set_sensor_mode"]], "aslm.model.devices.camera.camera_synthetic": [[115, 2, 1, "", "SyntheticCamera"], [116, 2, 1, "", "SyntheticCameraController"]], "aslm.model.devices.camera.camera_synthetic.SyntheticCamera": [[115, 3, 1, "", "__init__"], [115, 3, 1, "", "calculate_light_sheet_exposure_time"], [115, 3, 1, "", "calculate_readout_time"], [115, 3, 1, "", "close_camera"], [115, 3, 1, "", "close_image_series"], [115, 3, 1, "", "generate_new_frame"], [115, 3, 1, "", "get_minimum_waiting_time"], [115, 3, 1, "", "get_new_frame"], [115, 3, 1, "", "initialize_image_series"], [115, 3, 1, "", "load_images"], [115, 3, 1, "", "report_settings"], [115, 3, 1, "", "set_ROI"], [115, 3, 1, "", "set_binning"], [115, 3, 1, "", "set_exposure_time"], [115, 3, 1, "", "set_line_interval"], [115, 3, 1, "", "set_readout_direction"], [115, 3, 1, "", "set_sensor_mode"]], "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController": [[116, 3, 1, "", "__init__"], [116, 3, 1, "", "get_property_value"]], "aslm.model.devices.daq": [[118, 0, 0, "-", "daq_base"], [120, 0, 0, "-", "daq_synthetic"]], "aslm.model.devices.daq.daq_base": [[119, 2, 1, "", "DAQBase"]], "aslm.model.devices.daq.daq_base.DAQBase": [[119, 3, 1, "", "__init__"], [119, 3, 1, "", "calculate_all_waveforms"], [119, 5, 1, "", "configuration"]], "aslm.model.devices.daq.daq_synthetic": [[121, 2, 1, "", "SyntheticDAQ"]], "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ": [[121, 3, 1, "", "__init__"], [121, 3, 1, "", "add_camera"], [121, 3, 1, "", "calculate_all_waveforms"], [121, 3, 1, "", "close_tasks"], [121, 5, 1, "", "configuration"], [121, 3, 1, "", "create_camera_task"], [121, 3, 1, "", "create_galvo_remote_focus_tasks"], [121, 3, 1, "", "create_master_trigger_task"], [121, 3, 1, "", "prepare_acquisition"], [121, 3, 1, "", "run_acquisition"], [121, 3, 1, "", "start_tasks"], [121, 3, 1, "", "stop_acquisition"], [121, 3, 1, "", "stop_tasks"], [121, 3, 1, "", "write_waveforms_to_tasks"]], "aslm.model.devices.filter_wheel": [[123, 0, 0, "-", "filter_wheel_base"], [125, 0, 0, "-", "filter_wheel_sutter"], [128, 0, 0, "-", "filter_wheel_synthetic"]], "aslm.model.devices.filter_wheel.filter_wheel_base": [[124, 2, 1, "", "FilterWheelBase"]], "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase": [[124, 3, 1, "", "__init__"], [124, 3, 1, "id0", "check_if_filter_in_filter_dictionary"], [124, 5, 1, "", "filter_dictionary"], [124, 5, 1, "", "wheel_position"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter": [[126, 2, 1, "", "SutterFilterWheel"], [127, 5, 1, "", "baudrate"], [127, 1, 1, "", "build_filter_wheel_connection"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel": [[126, 3, 1, "", "__init__"], [126, 5, 1, "", "baudrate"], [126, 3, 1, "id0", "check_if_filter_in_filter_dictionary"], [126, 3, 1, "id1", "close"], [126, 5, 1, "", "comport"], [126, 3, 1, "id2", "filter_change_delay"], [126, 5, 1, "", "filter_dictionary"], [126, 5, 1, "", "number_of_filter_wheels"], [126, 3, 1, "id3", "read"], [126, 3, 1, "", "set_filter"], [126, 5, 1, "", "wheel_position"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic": [[129, 2, 1, "", "SyntheticFilterWheel"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel": [[129, 3, 1, "", "__init__"], [129, 5, 1, "", "baudrate"], [129, 3, 1, "", "check_if_filter_in_filter_dictionary"], [129, 3, 1, "", "close"], [129, 5, 1, "", "comport"], [129, 3, 1, "", "filter_change_delay"], [129, 5, 1, "", "filter_dictionary"], [129, 5, 1, "", "number_of_filter_wheels"], [129, 3, 1, "", "read"], [129, 3, 1, "", "set_filter"], [129, 5, 1, "", "wheel_position"]], "aslm.model.devices.galvo": [[131, 0, 0, "-", "galvo_base"], [133, 0, 0, "-", "galvo_synthetic"]], "aslm.model.devices.galvo.galvo_base": [[132, 2, 1, "", "GalvoBase"]], "aslm.model.devices.galvo.galvo_base.GalvoBase": [[132, 3, 1, "", "__init__"], [132, 3, 1, "", "adjust"], [132, 5, 1, "", "camera_delay_percent"], [132, 3, 1, "id0", "close_task"], [132, 5, 1, "", "configuration"], [132, 5, 1, "", "device_config"], [132, 5, 1, "", "galvo_max_voltage"], [132, 5, 1, "", "galvo_min_voltage"], [132, 5, 1, "", "galvo_name"], [132, 5, 1, "", "microscope_name"], [132, 3, 1, "id1", "prepare_task"], [132, 5, 1, "", "remote_focus_ramp_falling"], [132, 5, 1, "", "sample_rate"], [132, 5, 1, "", "samples"], [132, 3, 1, "id2", "start_task"], [132, 3, 1, "id3", "stop_task"], [132, 5, 1, "", "sweep_time"], [132, 5, 1, "", "waveform_dict"]], "aslm.model.devices.galvo.galvo_synthetic": [[134, 2, 1, "", "SyntheticGalvo"]], "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo": [[134, 5, 1, "", "None"], [134, 3, 1, "", "__init__"], [134, 3, 1, "", "adjust"], [134, 3, 1, "id0", "close_task"], [134, 3, 1, "id1", "prepare_task"], [134, 3, 1, "id2", "start_task"], [134, 3, 1, "id3", "stop_task"]], "aslm.model.devices.joystick": [[136, 0, 0, "-", "joystick_base"], [138, 0, 0, "-", "joystick_synthetic"]], "aslm.model.devices.joystick.joystick_base": [[137, 2, 1, "", "JoystickBase"]], "aslm.model.devices.joystick.joystick_base.JoystickBase": [[137, 3, 1, "", "__init__"]], "aslm.model.devices.joystick.joystick_synthetic": [[139, 2, 1, "", "SyntheticJoystick"]], "aslm.model.devices.joystick.joystick_synthetic.SyntheticJoystick": [[139, 3, 1, "", "__init__"]], "aslm.model.devices.lasers": [[141, 0, 0, "-", "laser_base"], [143, 0, 0, "-", "laser_synthetic"], [145, 0, 0, "-", "laser_trigger_base"], [147, 0, 0, "-", "laser_trigger_synthetic"]], "aslm.model.devices.lasers.laser_base": [[142, 2, 1, "", "LaserBase"]], "aslm.model.devices.lasers.laser_base.LaserBase": [[142, 3, 1, "", "__init__"], [142, 3, 1, "", "close"], [142, 3, 1, "", "initialize_laser"]], "aslm.model.devices.lasers.laser_synthetic": [[144, 2, 1, "", "SyntheticLaser"]], "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser": [[144, 3, 1, "", "__init__"], [144, 3, 1, "", "close"], [144, 3, 1, "", "initialize_laser"]], "aslm.model.devices.lasers.laser_trigger_base": [[146, 2, 1, "", "LaserTriggerBase"]], "aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase": [[146, 3, 1, "", "__init__"], [146, 3, 1, "", "enable_high_resolution_laser"], [146, 3, 1, "", "enable_low_resolution_laser"], [146, 3, 1, "", "set_laser_analog_voltage"]], "aslm.model.devices.lasers.laser_trigger_synthetic": [[148, 2, 1, "", "SyntheticLaserTriggers"]], "aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers": [[148, 3, 1, "", "__init__"], [148, 3, 1, "", "enable_high_resolution_laser"], [148, 3, 1, "", "enable_low_resolution_laser"], [148, 3, 1, "", "set_laser_analog_voltage"]], "aslm.model.devices.objectives": [[150, 2, 1, "", "Objective"]], "aslm.model.devices.objectives.Objective": [[150, 3, 1, "", "__init__"], [150, 3, 1, "", "calculate_entrance_pupil"]], "aslm.model.devices.remote_focus": [[152, 0, 0, "-", "remote_focus_base"], [154, 0, 0, "-", "remote_focus_equipment_solutions"], [156, 0, 0, "-", "remote_focus_synthetic"]], "aslm.model.devices.remote_focus.remote_focus_base": [[153, 2, 1, "", "RemoteFocusBase"]], "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase": [[153, 3, 1, "", "__init__"], [153, 3, 1, "", "adjust"], [153, 5, 1, "", "camera_delay_percent"], [153, 3, 1, "", "close_task"], [153, 5, 1, "", "configuration"], [153, 5, 1, "", "device_config"], [153, 5, 1, "", "microscope_name"], [153, 3, 1, "id0", "prepare_task"], [153, 5, 1, "", "remote_focus_delay"], [153, 5, 1, "", "remote_focus_max_voltage"], [153, 5, 1, "", "remote_focus_min_voltage"], [153, 5, 1, "", "remote_focus_ramp_falling"], [153, 5, 1, "", "sample_rate"], [153, 5, 1, "", "samples"], [153, 3, 1, "id1", "start_task"], [153, 3, 1, "id2", "stop_task"], [153, 5, 1, "", "sweep_time"], [153, 5, 1, "", "waveform_dict"]], "aslm.model.devices.remote_focus.remote_focus_equipment_solutions": [[155, 2, 1, "", "RemoteFocusEquipmentSolutions"]], "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions": [[155, 3, 1, "", "__init__"], [155, 3, 1, "", "adjust"], [155, 5, 1, "", "baud_rate"], [155, 5, 1, "", "byte_size"], [155, 3, 1, "id0", "close_connection"], [155, 5, 1, "", "comport"], [155, 5, 1, "", "debug"], [155, 5, 1, "", "parity"], [155, 3, 1, "", "prepare_task"], [155, 3, 1, "id1", "read_bytes"], [155, 5, 1, "", "read_on_init"], [155, 3, 1, "id2", "send_command"], [155, 3, 1, "", "start_task"], [155, 5, 1, "", "stop_bits"], [155, 3, 1, "", "stop_task"], [155, 5, 1, "", "timeout"]], "aslm.model.devices.remote_focus.remote_focus_synthetic": [[157, 2, 1, "", "SyntheticRemoteFocus"]], "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus": [[157, 3, 1, "", "__init__"], [157, 3, 1, "", "adjust"], [157, 3, 1, "id0", "close_task"], [157, 5, 1, "", "configuration"], [157, 5, 1, "", "device_connection"], [157, 5, 1, "", "microscope_name"], [157, 3, 1, "id1", "prepare_task"], [157, 3, 1, "id2", "start_task"], [157, 3, 1, "id3", "stop_task"]], "aslm.model.devices.shutter": [[159, 0, 0, "-", "laser_shutter_base"], [161, 0, 0, "-", "laser_shutter_synthetic"]], "aslm.model.devices.shutter.laser_shutter_base": [[160, 2, 1, "", "ShutterBase"]], "aslm.model.devices.shutter.laser_shutter_base.ShutterBase": [[160, 3, 1, "", "__init__"], [160, 5, 1, "", "configuration"], [160, 5, 1, "", "device_connection"], [160, 5, 1, "", "microscope_name"]], "aslm.model.devices.shutter.laser_shutter_synthetic": [[162, 2, 1, "", "SyntheticShutter"]], "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter": [[162, 3, 1, "", "__init__"], [162, 3, 1, "", "close_shutters"], [162, 5, 1, "", "configuration"], [162, 5, 1, "", "device_connection"], [162, 5, 1, "", "microscope_name"], [162, 3, 1, "", "open_left"], [162, 3, 1, "", "open_right"], [162, 3, 1, "", "state"]], "aslm.model.devices.stages": [[164, 0, 0, "-", "stage_asi"], [167, 0, 0, "-", "stage_base"], [169, 0, 0, "-", "stage_galvo"], [171, 0, 0, "-", "stage_mcl"], [174, 0, 0, "-", "stage_pi"], [177, 0, 0, "-", "stage_sutter"], [180, 0, 0, "-", "stage_synthetic"], [182, 0, 0, "-", "stage_tl_kcube_inertial"]], "aslm.model.devices.stages.stage_asi": [[165, 2, 1, "", "ASIStage"], [166, 1, 1, "", "build_ASI_Stage_connection"]], "aslm.model.devices.stages.stage_asi.ASIStage": [[165, 3, 1, "", "__init__"], [165, 3, 1, "", "create_position_dict"], [165, 3, 1, "", "get_abs_position"], [165, 3, 1, "", "move_absolute"], [165, 3, 1, "", "move_axis_absolute"], [165, 3, 1, "", "report_position"], [165, 3, 1, "", "stop"]], "aslm.model.devices.stages.stage_base": [[168, 2, 1, "", "StageBase"]], "aslm.model.devices.stages.stage_base.StageBase": [[168, 3, 1, "", "__init__"], [168, 3, 1, "id0", "create_position_dict"], [168, 5, 1, "", "f_max"], [168, 5, 1, "", "f_min"], [168, 5, 1, "", "f_pos"], [168, 3, 1, "id1", "get_abs_position"], [168, 5, 1, "", "position_dict"], [168, 3, 1, "id2", "stop"], [168, 5, 1, "", "theta_max"], [168, 5, 1, "", "theta_min"], [168, 5, 1, "", "theta_pos"], [168, 5, 1, "", "x_max"], [168, 5, 1, "", "x_min"], [168, 5, 1, "", "x_pos"], [168, 5, 1, "", "y_max"], [168, 5, 1, "", "y_min"], [168, 5, 1, "", "y_pos"], [168, 5, 1, "", "z_max"], [168, 5, 1, "", "z_min"], [168, 5, 1, "", "z_pos"]], "aslm.model.devices.stages.stage_galvo": [[170, 2, 1, "", "GalvoNIStage"]], "aslm.model.devices.stages.stage_galvo.GalvoNIStage": [[170, 3, 1, "", "__init__"], [170, 3, 1, "id0", "create_position_dict"], [170, 3, 1, "id1", "get_abs_position"], [170, 3, 1, "", "move_absolute"], [170, 3, 1, "", "move_axis_absolute"], [170, 3, 1, "", "report_position"], [170, 3, 1, "id2", "stop"]], "aslm.model.devices.stages.stage_mcl": [[172, 2, 1, "", "MCLStage"], [173, 1, 1, "", "build_MCLStage_connection"]], "aslm.model.devices.stages.stage_mcl.MCLStage": [[172, 3, 1, "", "__init__"], [172, 3, 1, "", "create_position_dict"], [172, 3, 1, "", "get_abs_position"], [172, 3, 1, "", "move_absolute"], [172, 3, 1, "", "move_axis_absolute"], [172, 3, 1, "", "report_position"], [172, 3, 1, "", "stop"]], "aslm.model.devices.stages.stage_pi": [[175, 2, 1, "", "PIStage"], [176, 1, 1, "", "build_PIStage_connection"]], "aslm.model.devices.stages.stage_pi.PIStage": [[175, 3, 1, "", "__init__"], [175, 3, 1, "id0", "create_position_dict"], [175, 5, 1, "", "f_max"], [175, 5, 1, "", "f_min"], [175, 5, 1, "", "f_pos"], [175, 3, 1, "id1", "get_abs_position"], [175, 3, 1, "", "move_absolute"], [175, 3, 1, "", "move_axis_absolute"], [175, 5, 1, "", "position_dict"], [175, 3, 1, "", "report_position"], [175, 3, 1, "id2", "stop"], [175, 5, 1, "", "theta_max"], [175, 5, 1, "", "theta_min"], [175, 5, 1, "", "theta_pos"], [175, 5, 1, "", "x_max"], [175, 5, 1, "", "x_min"], [175, 5, 1, "", "x_pos"], [175, 5, 1, "", "y_max"], [175, 5, 1, "", "y_min"], [175, 5, 1, "", "y_pos"], [175, 5, 1, "", "z_max"], [175, 5, 1, "", "z_min"], [175, 5, 1, "", "z_pos"]], "aslm.model.devices.stages.stage_sutter": [[178, 2, 1, "", "SutterStage"], [179, 5, 1, "", "baudrate"], [179, 1, 1, "", "build_sutter_stage_connection"], [179, 5, 1, "", "comport"]], "aslm.model.devices.stages.stage_sutter.SutterStage": [[178, 3, 1, "", "__init__"], [178, 5, 1, "", "baudrate"], [178, 3, 1, "", "check_byte_order"], [178, 3, 1, "id0", "close"], [178, 5, 1, "", "comport"], [178, 3, 1, "", "convert_microns_to_microsteps"], [178, 3, 1, "", "convert_microsteps_to_microns"], [178, 3, 1, "", "create_position_dict"], [178, 5, 1, "", "filter_dictionary"], [178, 3, 1, "", "flush_buffers"], [178, 3, 1, "", "get_abs_position"], [178, 3, 1, "", "move_absolute"], [178, 3, 1, "", "move_axis_absolute"], [178, 3, 1, "", "read"], [178, 3, 1, "", "report_position"], [178, 3, 1, "", "set_stage_speed_and_resolution"], [178, 3, 1, "", "stop"]], "aslm.model.devices.stages.stage_synthetic": [[181, 2, 1, "", "SyntheticStage"]], "aslm.model.devices.stages.stage_synthetic.SyntheticStage": [[181, 3, 1, "", "__init__"], [181, 3, 1, "", "create_position_dict"], [181, 3, 1, "", "get_abs_position"], [181, 3, 1, "", "move_absolute"], [181, 3, 1, "", "move_axis_absolute"], [181, 3, 1, "", "stop"]], "aslm.model.devices.stages.stage_tl_kcube_inertial": [[183, 2, 1, "", "TLKIMStage"], [184, 1, 1, "", "build_TLKIMStage_connection"]], "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage": [[183, 3, 1, "", "__init__"], [183, 3, 1, "", "create_position_dict"], [183, 3, 1, "", "get_abs_position"], [183, 3, 1, "", "move_absolute"], [183, 3, 1, "", "move_axis_absolute"], [183, 3, 1, "", "report_position"], [183, 3, 1, "", "stop"]], "aslm.model.devices.zoom": [[186, 0, 0, "-", "zoom_base"], [188, 0, 0, "-", "zoom_synthetic"]], "aslm.model.devices.zoom.zoom_base": [[187, 2, 1, "", "ZoomBase"]], "aslm.model.devices.zoom.zoom_base.ZoomBase": [[187, 3, 1, "", "__init__"], [187, 3, 1, "", "move"], [187, 3, 1, "", "read_position"], [187, 3, 1, "", "set_zoom"]], "aslm.model.devices.zoom.zoom_synthetic": [[189, 2, 1, "", "SyntheticZoom"]], "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom": [[189, 3, 1, "", "__init__"], [189, 3, 1, "id0", "move"], [189, 3, 1, "id1", "read_position"], [189, 3, 1, "id2", "set_zoom"]], "aslm.model.dummy": [[191, 2, 1, "", "DummyController"], [192, 2, 1, "", "DummyDevice"], [193, 2, 1, "", "DummyMicroscope"], [194, 2, 1, "", "DummyModel"]], "aslm.model.dummy.DummyController": [[191, 3, 1, "", "__init__"], [191, 3, 1, "", "execute"], [191, 3, 1, "", "pop"]], "aslm.model.dummy.DummyDevice": [[192, 3, 1, "", "__init__"], [192, 3, 1, "", "clear"], [192, 5, 1, "", "data_pipe"], [192, 3, 1, "", "generate_message"], [192, 3, 1, "", "listen"], [192, 3, 1, "", "sendout"], [192, 3, 1, "id0", "setup"], [192, 3, 1, "", "shutdown"], [192, 5, 1, "", "signal_pipe"]], "aslm.model.dummy.DummyMicroscope": [[193, 3, 1, "", "__init__"], [193, 5, 1, "", "data_pipe"], [193, 3, 1, "", "setup"], [193, 3, 1, "", "shutdown"], [193, 5, 1, "", "signal_pipe"]], "aslm.model.dummy.DummyModel": [[194, 3, 1, "", "__init__"], [194, 5, 1, "", "configuration"], [194, 5, 1, "", "data"], [194, 5, 1, "", "data_container"], [194, 3, 1, "id0", "data_func"], [194, 5, 1, "", "data_pipe"], [194, 5, 1, "", "data_thread"], [194, 5, 1, "", "frame_id"], [194, 5, 1, "", "signal_container"], [194, 3, 1, "", "signal_func"], [194, 5, 1, "", "signal_pipe"], [194, 5, 1, "", "signal_thread"], [194, 3, 1, "", "start"], [194, 5, 1, "", "stop_flag"]], "aslm.model.features": [[196, 0, 0, "-", "autofocus"], [198, 0, 0, "-", "common_features"], [207, 0, 0, "-", "dummy_detective"], [209, 0, 0, "-", "feature_container"], [220, 0, 0, "-", "image_writer"], [222, 0, 0, "-", "restful_features"], [225, 0, 0, "-", "volume_search"]], "aslm.model.features.autofocus": [[197, 2, 1, "", "Autofocus"]], "aslm.model.features.autofocus.Autofocus": [[197, 3, 1, "", "__init__"], [197, 5, 1, "", "autofocus_frame_queue"], [197, 5, 1, "", "autofocus_pos_queue"], [197, 5, 1, "", "coarse_step_size"], [197, 5, 1, "", "coarse_steps"], [197, 3, 1, "", "end_func_data"], [197, 3, 1, "", "end_func_signal"], [197, 5, 1, "", "f_frame_id"], [197, 5, 1, "", "f_pos"], [197, 5, 1, "", "fine_pos_offset"], [197, 5, 1, "", "fine_step_size"], [197, 5, 1, "", "focus_pos"], [197, 5, 1, "", "frame_num"], [197, 3, 1, "", "get_autofocus_frame_num"], [197, 5, 1, "", "get_frames_num"], [197, 3, 1, "", "get_steps"], [197, 3, 1, "", "in_func_data"], [197, 3, 1, "", "in_func_signal"], [197, 5, 1, "", "init_pos"], [197, 5, 1, "", "max_entropy"], [197, 5, 1, "", "plot_data"], [197, 3, 1, "", "pre_func_data"], [197, 3, 1, "", "pre_func_signal"], [197, 3, 1, "id0", "run"], [197, 5, 1, "", "signal_id"], [197, 5, 1, "", "target_channel"], [197, 5, 1, "", "target_frame_id"], [197, 5, 1, "", "total_frame_num"]], "aslm.model.features.common_features": [[199, 2, 1, "", "ChangeResolution"], [200, 2, 1, "", "ConProAcquisition"], [201, 2, 1, "", "FindTissueSimple2D"], [202, 2, 1, "", "LoopByCount"], [203, 2, 1, "", "PrepareNextChannel"], [204, 2, 1, "", "Snap"], [205, 2, 1, "", "WaitToContinue"], [206, 2, 1, "", "ZStackAcquisition"]], "aslm.model.features.common_features.ChangeResolution": [[199, 3, 1, "", "__init__"]], "aslm.model.features.common_features.ConProAcquisition": [[200, 3, 1, "", "__init__"]], "aslm.model.features.common_features.FindTissueSimple2D": [[201, 3, 1, "", "__init__"]], "aslm.model.features.common_features.LoopByCount": [[202, 3, 1, "", "__init__"]], "aslm.model.features.common_features.PrepareNextChannel": [[203, 3, 1, "", "__init__"]], "aslm.model.features.common_features.Snap": [[204, 3, 1, "", "__init__"]], "aslm.model.features.common_features.WaitToContinue": [[205, 3, 1, "", "__init__"]], "aslm.model.features.common_features.ZStackAcquisition": [[206, 3, 1, "", "__init__"]], "aslm.model.features.dummy_detective": [[208, 2, 1, "", "Dummy_Detective"]], "aslm.model.features.dummy_detective.Dummy_Detective": [[208, 3, 1, "", "__init__"]], "aslm.model.features.feature_container": [[210, 2, 1, "", "Container"], [211, 2, 1, "", "DataContainer"], [212, 2, 1, "", "DataNode"], [213, 2, 1, "", "SignalContainer"], [214, 2, 1, "", "SignalNode"], [215, 2, 1, "", "TreeNode"], [216, 1, 1, "", "dummy_True"], [217, 1, 1, "", "dummy_func"], [218, 1, 1, "", "get_registered_funcs"], [219, 1, 1, "", "load_features"]], "aslm.model.features.feature_container.Container": [[210, 3, 1, "", "__init__"]], "aslm.model.features.feature_container.DataContainer": [[211, 3, 1, "", "__init__"]], "aslm.model.features.feature_container.DataNode": [[212, 3, 1, "", "__init__"]], "aslm.model.features.feature_container.SignalContainer": [[213, 3, 1, "", "__init__"]], "aslm.model.features.feature_container.SignalNode": [[214, 3, 1, "", "__init__"]], "aslm.model.features.feature_container.TreeNode": [[215, 3, 1, "", "__init__"]], "aslm.model.features.image_writer": [[221, 2, 1, "", "ImageWriter"]], "aslm.model.features.image_writer.ImageWriter": [[221, 3, 1, "", "__init__"], [221, 3, 1, "", "close"], [221, 5, 1, "id4", "current_time_point"], [221, 5, 1, "id5", "data_bffer"], [221, 5, 1, "id1", "data_source"], [221, 3, 1, "", "generate_image_name"], [221, 3, 1, "", "generate_meta_data"], [221, 5, 1, "id3", "mip"], [221, 5, 1, "id2", "mip_directory"], [221, 5, 1, "id0", "model"], [221, 3, 1, "", "save_image"]], "aslm.model.features.restful_features": [[223, 2, 1, "", "IlastikSegmentation"], [224, 1, 1, "", "prepare_service"]], "aslm.model.features.restful_features.IlastikSegmentation": [[223, 3, 1, "", "__init__"]], "aslm.model.features.volume_search": [[226, 2, 1, "", "VolumeSearch"]], "aslm.model.features.volume_search.VolumeSearch": [[226, 3, 1, "", "__init__"]], "aslm.model.metadata_sources": [[228, 0, 0, "-", "bdv_metadata"], [230, 0, 0, "-", "metadata"], [233, 0, 0, "-", "ome_tiff_metadata"]], "aslm.model.metadata_sources.bdv_metadata": [[229, 2, 1, "", "BigDataViewerMetadata"]], "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata": [[229, 3, 1, "", "__init__"], [229, 3, 1, "", "parse_bdv_xml"], [229, 4, 1, "", "shape"], [229, 3, 1, "", "stage_positions_to_affine_matrix"], [229, 3, 1, "", "to_xml"], [229, 4, 1, "", "voxel_size"], [229, 3, 1, "", "write_xml"]], "aslm.model.metadata_sources.metadata": [[231, 2, 1, "", "Metadata"], [232, 2, 1, "", "XMLMetadata"]], "aslm.model.metadata_sources.metadata.Metadata": [[231, 3, 1, "", "__init__"], [231, 4, 1, "", "shape"], [231, 4, 1, "", "voxel_size"]], "aslm.model.metadata_sources.metadata.XMLMetadata": [[232, 3, 1, "", "__init__"], [232, 4, 1, "", "shape"], [232, 3, 1, "", "to_xml"], [232, 4, 1, "", "voxel_size"], [232, 3, 1, "", "write_xml"]], "aslm.model.metadata_sources.ome_tiff_metadata": [[234, 2, 1, "", "OMETIFFMetadata"]], "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata": [[234, 3, 1, "", "__init__"], [234, 3, 1, "", "ome_tiff_xml_dict"], [234, 4, 1, "", "shape"], [234, 3, 1, "", "to_xml"], [234, 4, 1, "", "voxel_size"], [234, 3, 1, "", "write_xml"]], "aslm.model.microscope": [[236, 2, 1, "", "Microscope"]], "aslm.model.microscope.Microscope": [[236, 3, 1, "", "__init__"], [236, 3, 1, "", "calculate_all_waveform"], [236, 5, 1, "", "configuration"], [236, 5, 1, "", "daq"], [236, 5, 1, "", "data_buffer"], [236, 3, 1, "id0", "end_acquisition"], [236, 3, 1, "id1", "get_readout_time"], [236, 3, 1, "", "get_stage_position"], [236, 5, 1, "", "microscope_name"], [236, 3, 1, "", "move_stage"], [236, 3, 1, "id2", "move_stage_offset"], [236, 5, 1, "", "number_of_frames"], [236, 3, 1, "", "prepare_acquisition"], [236, 3, 1, "", "prepare_next_channel"], [236, 3, 1, "", "stop_stage"], [236, 3, 1, "id3", "update_data_buffer"]], "aslm.model.model": [[238, 2, 1, "", "Model"]], "aslm.model.model.Model": [[238, 5, 1, "", "USE_GPU"], [238, 3, 1, "", "__init__"], [238, 5, 1, "", "args"], [238, 3, 1, "", "change_resolution"], [238, 5, 1, "", "configuration_path"], [238, 3, 1, "id0", "create_pipe"], [238, 3, 1, "id1", "end_acquisition"], [238, 5, 1, "", "event_queue"], [238, 5, 1, "", "experiment_path"], [238, 3, 1, "", "get_active_microscope"], [238, 3, 1, "id2", "get_data_buffer"], [238, 3, 1, "", "get_microscope_info"], [238, 3, 1, "", "get_offset_variance_maps"], [238, 3, 1, "", "get_readout_time"], [238, 3, 1, "", "get_stage_position"], [238, 3, 1, "", "load_images"], [238, 3, 1, "id3", "move_stage"], [238, 3, 1, "", "pause_data_thread"], [238, 3, 1, "id4", "prepare_acquisition"], [238, 3, 1, "id5", "release_pipe"], [238, 3, 1, "", "resume_data_thread"], [238, 3, 1, "", "run_acquisition"], [238, 3, 1, "id6", "run_command"], [238, 3, 1, "id7", "run_data_process"], [238, 3, 1, "id8", "run_live_acquisition"], [238, 3, 1, "", "run_single_acquisition"], [238, 3, 1, "", "run_single_channel_acquisition"], [238, 3, 1, "", "run_single_channel_acquisition_with_features"], [238, 3, 1, "", "run_z_stack_acquisition"], [238, 3, 1, "id9", "snap_image"], [238, 3, 1, "", "stop_stage"], [238, 3, 1, "id10", "update_data_buffer"], [238, 3, 1, "", "update_ilastik_setting"]], "aslm.model.waveforms": [[240, 1, 1, "", "camera_exposure"], [241, 1, 1, "", "dc_value"], [242, 1, 1, "", "remote_focus_ramp"], [243, 1, 1, "", "sawtooth"], [244, 1, 1, "", "sine_wave"], [245, 1, 1, "", "single_pulse"], [246, 1, 1, "", "smooth_waveform"], [247, 1, 1, "", "square"]], "aslm.tools": [[249, 0, 0, "-", "beams"], [253, 0, 0, "-", "common_dict_tools"], [256, 0, 0, "-", "common_functions"], [260, 0, 0, "-", "decorators"], [262, 0, 0, "-", "file_functions"], [265, 0, 0, "-", "image"], [267, 0, 0, "-", "image_loaders"], [269, 0, 0, "-", "main_functions"], [273, 0, 0, "-", "multipos_table_tools"], [278, 0, 0, "-", "project_stats"], [280, 0, 0, "-", "sdf"], [284, 0, 0, "-", "xml_tools"]], "aslm.tools.beams": [[250, 1, 1, "", "fit_gaussian_beam_error"], [251, 1, 1, "", "fit_gaussian_beam_mse"], [252, 1, 1, "", "gaussian_beam"]], "aslm.tools.common_dict_tools": [[254, 1, 1, "", "update_settings_common"], [255, 1, 1, "", "update_stage_dict"]], "aslm.tools.common_functions": [[257, 1, 1, "", "build_ref_name"], [258, 1, 1, "", "combine_funcs"], [259, 1, 1, "", "copy_proxy_object"]], "aslm.tools.decorators": [[261, 1, 1, "", "function_timer"]], "aslm.tools.file_functions": [[263, 1, 1, "", "create_save_path"], [264, 1, 1, "", "save_yaml_file"]], "aslm.tools.image": [[266, 1, 1, "", "text_array"]], "aslm.tools.image_loaders": [[268, 2, 1, "", "LazyTiff"]], "aslm.tools.image_loaders.LazyTiff": [[268, 3, 1, "", "__init__"]], "aslm.tools.main_functions": [[270, 1, 1, "", "create_parser"], [271, 1, 1, "", "evaluate_parser_input_arguments"], [272, 1, 1, "", "identify_gpu"]], "aslm.tools.multipos_table_tools": [[274, 1, 1, "", "calc_num_tiles"], [275, 1, 1, "", "compute_tiles_from_bounding_box"], [276, 1, 1, "", "sign"], [277, 1, 1, "", "update_table"]], "aslm.tools.project_stats": [[279, 1, 1, "", "countlines"]], "aslm.tools.sdf": [[281, 1, 1, "", "box"], [282, 1, 1, "", "sphere"], [283, 1, 1, "", "volume_from_sdf"]], "aslm.tools.xml_tools": [[285, 1, 1, "", "dict_to_xml"], [286, 1, 1, "", "parse_xml"]], "aslm.view": [[288, 0, 0, "-", "main_window_content"], [294, 0, 0, "-", "menus"]], "aslm.view.main_window_content": [[289, 0, 0, "-", "acquire_bar_frame"], [290, 0, 0, "-", "channel_settings"], [292, 0, 0, "-", "stage_control"]], "aslm.view.main_window_content.channel_settings": [[291, 0, 0, "-", "channel_settings_frames"]], "aslm.view.main_window_content.stage_control": [[293, 0, 0, "-", "stage_control_frames"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:property", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"aslm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 298, 299, 302, 305], "config": [0, 1, 2, 3, 4, 5, 6], "build_nested_dict": 2, "get_aslm_path": 3, "get_configuration_path": 4, "load_config": 5, "update_config_dict": 6, "control": [7, 8, 9, 10, 11, 12, 13], "configuration_control": [8, 9], "configurationcontrol": 9, "thread_pool": [10, 11, 12, 13], "selflockthread": 11, "synchronizedthreadpool": 12, "threadwaitlist": 13, "model": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 303], "analysi": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55], "boundary_detect": [16, 17, 18, 19, 20], "binary_detect": 17, "find_tissue_boundary_2d": 18, "has_tissu": 19, "map_boundari": 20, "camera": [21, 22, 23, 24, 25, 109, 110, 111, 112, 113, 114, 115, 116, 304], "compute_flatfield_map": 22, "compute_noise_sigma": 23, "compute_scmos_offset_and_variance_map": 24, "compute_signal_to_nois": 25, "detect": [26, 27, 28, 29, 30, 31, 32, 33, 34, 35], "add_median_bord": 27, "combine_imag": 28, "log_detect": 29, "make_inside_imag": 30, "make_normalized_imag": 31, "make_sphere_3d": 32, "multiscale_surface_filter_3d": 33, "surface_filter_gauss_3d": 34, "three_level_segment": 35, "image_contrast": [36, 37, 38, 39, 40, 41], "estimate_and_correct_flatfield": 37, "estimate_image_resolut": 38, "fast_normalized_dct_shannon_entropi": 39, "image_intens": 40, "normalized_dct_shannon_entropi": 41, "image_decorrel": [42, 43, 44, 45, 46, 47, 48, 49, 50], "apodize_imag": 43, "get_correlation_coeffici": 44, "get_decorrelation_local_maxima": 45, "get_image_decorrel": 46, "get_radial_averag": 47, "image_to_polar": 48, "linear_map": 49, "main_image_decorr": 50, "image_transform": [51, 52, 53], "deskew_imag": 52, "initiate_gpu": 53, "spectral_unmix": [54, 55], "to_do": 55, "concurr": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74], "concurrency_tool": [57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "custodythread": 58, "fancythread": 59, "mytestclass": 60, "objectinsubprocess": 61, "politethread": 62, "resultthread": 63, "sharedndarrai": 64, "testobjectinsubprocess": 65, "testresultthreadandcustodythread": 66, "testsharedndarrai": 67, "proxy_object": [68, 69, 70, 71, 72], "proxymanag": 69, "proxyobject": 70, "launch_custody_thread": 71, "launch_thread": 72, "write_paramet": [73, 74], "write_param": 74, "data_sourc": [75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "bdv_data_sourc": [76, 77], "bigdataviewerdatasourc": 77, "datasourc": 79, "get_data_sourc": 80, "tiff_data_sourc": [81, 82], "tiffdatasourc": 82, "zarr_data_sourc": [83, 84], "zarrdatasourc": 84, "device_startup_funct": [85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "dummydeviceconnect": 86, "auto_redi": 87, "device_not_found": 88, "load_camera_connect": 89, "load_devic": 90, "load_filter_wheel_connect": 91, "load_stag": 92, "load_zoom_connect": 93, "start_camera": 94, "start_daq": 95, "start_filter_wheel": 96, "start_galvo": 97, "start_las": 98, "start_remote_focus_devic": 99, "start_shutt": 100, "start_stag": 101, "start_zoom": 102, "devic": [103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189], "api": [104, 105, 106, 107, 108, 297], "coher": 105, "dynamixel": 106, "logitech": 107, "omicron": 108, "camera_bas": [110, 111], "camerabas": 111, "camera_hamamatsu": [112, 113], "hamamatsuorca": 113, "camera_synthet": [114, 115, 116], "syntheticcamera": 115, "syntheticcameracontrol": 116, "daq": [117, 118, 119, 120, 121], "daq_bas": [118, 119], "daqbas": 119, "daq_synthet": [120, 121], "syntheticdaq": 121, "filter_wheel": [122, 123, 124, 125, 126, 127, 128, 129], "filter_wheel_bas": [123, 124], "filterwheelbas": 124, "filter_wheel_sutt": [125, 126, 127], "sutterfilterwheel": 126, "build_filter_wheel_connect": 127, "filter_wheel_synthet": [128, 129], "syntheticfilterwheel": 129, "galvo": [130, 131, 132, 133, 134], "galvo_bas": [131, 132], "galvobas": 132, "galvo_synthet": [133, 134], "syntheticgalvo": 134, "joystick": [135, 136, 137, 138, 139], "joystick_bas": [136, 137], "joystickbas": 137, "joystick_synthet": [138, 139], "syntheticjoystick": 139, "laser": [140, 141, 142, 143, 144, 145, 146, 147, 148], "laser_bas": [141, 142], "laserbas": 142, "laser_synthet": [143, 144], "syntheticlas": 144, "laser_trigger_bas": [145, 146], "lasertriggerbas": 146, "laser_trigger_synthet": [147, 148], "syntheticlasertrigg": 148, "object": [149, 150, 299], "remote_focu": [151, 152, 153, 154, 155, 156, 157], "remote_focus_bas": [152, 153], "remotefocusbas": 153, "remote_focus_equipment_solut": [154, 155], "remotefocusequipmentsolut": 155, "remote_focus_synthet": [156, 157], "syntheticremotefocu": 157, "shutter": [158, 159, 160, 161, 162], "laser_shutter_bas": [159, 160], "shutterbas": 160, "laser_shutter_synthet": [161, 162], "syntheticshutt": 162, "stage": [163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 304], "stage_asi": [164, 165, 166], "asistag": 165, "build_asi_stage_connect": 166, "stage_bas": [167, 168], "stagebas": 168, "stage_galvo": [169, 170], "galvonistag": 170, "stage_mcl": [171, 172, 173], "mclstage": 172, "build_mclstage_connect": 173, "stage_pi": [174, 175, 176], "pistag": 175, "build_pistage_connect": 176, "stage_sutt": [177, 178, 179], "sutterstag": 178, "build_sutter_stage_connect": 179, "stage_synthet": [180, 181], "syntheticstag": 181, "stage_tl_kcube_inerti": [182, 183, 184], "tlkimstag": 183, "build_tlkimstage_connect": 184, "zoom": [185, 186, 187, 188, 189], "zoom_bas": [186, 187], "zoombas": 187, "zoom_synthet": [188, 189], "syntheticzoom": 189, "dummi": [190, 191, 192, 193, 194], "dummycontrol": 191, "dummydevic": 192, "dummymicroscop": 193, "dummymodel": 194, "featur": [195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 299, 303], "autofocu": [196, 197], "common_featur": [198, 199, 200, 201, 202, 203, 204, 205, 206], "changeresolut": 199, "conproacquisit": 200, "findtissuesimple2d": 201, "loopbycount": 202, "preparenextchannel": 203, "snap": 204, "waittocontinu": 205, "zstackacquisit": 206, "dummy_detect": [207, 208], "feature_contain": [209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219], "contain": [210, 299], "datacontain": 211, "datanod": 212, "signalcontain": 213, "signalnod": 214, "treenod": 215, "dummy_tru": 216, "dummy_func": 217, "get_registered_func": 218, "load_featur": 219, "image_writ": [220, 221], "imagewrit": 221, "restful_featur": [222, 223, 224], "ilastiksegment": 223, "prepare_servic": 224, "volume_search": [225, 226], "volumesearch": 226, "metadata_sourc": [227, 228, 229, 230, 231, 232, 233, 234], "bdv_metadata": [228, 229], "bigdataviewermetadata": 229, "metadata": [230, 231, 232], "xmlmetadata": 232, "ome_tiff_metadata": [233, 234], "ometiffmetadata": 234, "microscop": [235, 236, 298, 305], "waveform": [239, 240, 241, 242, 243, 244, 245, 246, 247], "camera_exposur": 240, "dc_valu": 241, "remote_focus_ramp": 242, "sawtooth": 243, "sine_wav": 244, "single_puls": 245, "smooth_waveform": 246, "squar": 247, "tool": [248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286], "beam": [249, 250, 251, 252], "fit_gaussian_beam_error": 250, "fit_gaussian_beam_ms": 251, "gaussian_beam": 252, "common_dict_tool": [253, 254, 255], "update_settings_common": 254, "update_stage_dict": 255, "common_funct": [256, 257, 258, 259], "build_ref_nam": 257, "combine_func": 258, "copy_proxy_object": 259, "decor": [260, 261], "function_tim": 261, "file_funct": [262, 263, 264], "create_save_path": 263, "save_yaml_fil": 264, "imag": [265, 266], "text_arrai": 266, "image_load": [267, 268], "lazytiff": 268, "main_funct": [269, 270, 271, 272], "create_pars": 270, "evaluate_parser_input_argu": 271, "identify_gpu": 272, "multipos_table_tool": [273, 274, 275, 276, 277], "calc_num_til": 274, "compute_tiles_from_bounding_box": 275, "sign": 276, "update_t": 277, "project_stat": [278, 279], "countlin": 279, "sdf": [280, 281, 282, 283], "box": 281, "sphere": 282, "volume_from_sdf": 283, "xml_tool": [284, 285, 286], "dict_to_xml": 285, "parse_xml": 286, "view": [287, 288, 289, 290, 291, 292, 293, 294], "main_window_cont": [288, 289, 290, 291, 292, 293], "acquire_bar_fram": 289, "channel_set": [290, 291], "channel_settings_fram": 291, "stage_control": [292, 293], "stage_control_fram": 293, "menu": 294, "refer": 297, "configur": [298, 304], "yaml": 298, "hardwar": [298, 301, 304], "section": 298, "gui": 298, "The": 299, "write": 299, "custom": 299, "contribut": [300, 302], "guidelin": 300, "gener": 300, "principl": 300, "code": 300, "style": 300, "dictionari": 300, "pars": 300, "unit": [300, 301], "test": 300, "ad": [301, 303], "new": [301, 303], "class": 301, "scientif": 301, "how": 301, "add": 301, "setup": [304, 307], "file": 304, "data": 304, "acquisit": 304, "card": 304, "wire": 304, "hamamatsu": 304, "photometr": 304, "voicecoil": 304, "equip": 304, "solut": 304, "asi": 304, "implement": 305, "multiscal": 305, "upright": 305, "ct": 305, "v2": 305, "opm": 305, "autonom": 306, "softwar": [306, 307], "light": 306, "microscopi": 306, "content": 306, "index": 306, "search": 306, "instal": 307, "download": 307, "git": 307, "your": 307, "python": 307, "environ": 307, "gpu": 307, "depend": 307, "troubleshoot": 307, "user": 308, "guid": 308}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"aslm.config": [[0, "module-aslm.config"]], "aslm.config.config": [[1, "module-aslm.config.config"]], "aslm.config.config.build_nested_dict": [[2, "aslm-config-config-build-nested-dict"]], "aslm.config.config.get_aslm_path": [[3, "aslm-config-config-get-aslm-path"]], "aslm.config.config.get_configuration_paths": [[4, "aslm-config-config-get-configuration-paths"]], "aslm.config.config.load_configs": [[5, "aslm-config-config-load-configs"]], "aslm.config.config.update_config_dict": [[6, "aslm-config-config-update-config-dict"]], "aslm.controller": [[7, "module-aslm.controller"]], "aslm.controller.configuration_controller": [[8, "module-aslm.controller.configuration_controller"]], "aslm.controller.configuration_controller.ConfigurationController": [[9, "aslm-controller-configuration-controller-configurationcontroller"]], "aslm.controller.thread_pool": [[10, "module-aslm.controller.thread_pool"]], "aslm.controller.thread_pool.SelfLockThread": [[11, "aslm-controller-thread-pool-selflockthread"]], "aslm.controller.thread_pool.SynchronizedThreadPool": [[12, "aslm-controller-thread-pool-synchronizedthreadpool"]], "aslm.controller.thread_pool.ThreadWaitlist": [[13, "aslm-controller-thread-pool-threadwaitlist"]], "aslm.model": [[14, "module-aslm.model"]], "aslm.model.analysis": [[15, "module-aslm.model.analysis"]], "aslm.model.analysis.boundary_detect": [[16, "module-aslm.model.analysis.boundary_detect"]], "aslm.model.analysis.boundary_detect.binary_detect": [[17, "aslm-model-analysis-boundary-detect-binary-detect"]], "aslm.model.analysis.boundary_detect.find_tissue_boundary_2d": [[18, "aslm-model-analysis-boundary-detect-find-tissue-boundary-2d"]], "aslm.model.analysis.boundary_detect.has_tissue": [[19, "aslm-model-analysis-boundary-detect-has-tissue"]], "aslm.model.analysis.boundary_detect.map_boundary": [[20, "aslm-model-analysis-boundary-detect-map-boundary"]], "aslm.model.analysis.camera": [[21, "module-aslm.model.analysis.camera"]], "aslm.model.analysis.camera.compute_flatfield_map": [[22, "aslm-model-analysis-camera-compute-flatfield-map"]], "aslm.model.analysis.camera.compute_noise_sigma": [[23, "aslm-model-analysis-camera-compute-noise-sigma"]], "aslm.model.analysis.camera.compute_scmos_offset_and_variance_map": [[24, "aslm-model-analysis-camera-compute-scmos-offset-and-variance-map"]], "aslm.model.analysis.camera.compute_signal_to_noise": [[25, "aslm-model-analysis-camera-compute-signal-to-noise"]], "aslm.model.analysis.detection": [[26, "module-aslm.model.analysis.detection"]], "aslm.model.analysis.detection.add_median_border": [[27, "aslm-model-analysis-detection-add-median-border"]], "aslm.model.analysis.detection.combine_images": [[28, "aslm-model-analysis-detection-combine-images"]], "aslm.model.analysis.detection.log_detection": [[29, "aslm-model-analysis-detection-log-detection"]], "aslm.model.analysis.detection.make_inside_image": [[30, "aslm-model-analysis-detection-make-inside-image"]], "aslm.model.analysis.detection.make_normalized_image": [[31, "aslm-model-analysis-detection-make-normalized-image"]], "aslm.model.analysis.detection.make_sphere_3D": [[32, "aslm-model-analysis-detection-make-sphere-3d"]], "aslm.model.analysis.detection.multiscale_surface_filter_3D": [[33, "aslm-model-analysis-detection-multiscale-surface-filter-3d"]], "aslm.model.analysis.detection.surface_filter_gauss_3D": [[34, "aslm-model-analysis-detection-surface-filter-gauss-3d"]], "aslm.model.analysis.detection.three_level_segmentation": [[35, "aslm-model-analysis-detection-three-level-segmentation"]], "aslm.model.analysis.image_contrast": [[36, "module-aslm.model.analysis.image_contrast"]], "aslm.model.analysis.image_contrast.estimate_and_correct_flatfield": [[37, "aslm-model-analysis-image-contrast-estimate-and-correct-flatfield"]], "aslm.model.analysis.image_contrast.estimate_image_resolution": [[38, "aslm-model-analysis-image-contrast-estimate-image-resolution"]], "aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy": [[39, "aslm-model-analysis-image-contrast-fast-normalized-dct-shannon-entropy"]], "aslm.model.analysis.image_contrast.image_intensity": [[40, "aslm-model-analysis-image-contrast-image-intensity"]], "aslm.model.analysis.image_contrast.normalized_dct_shannon_entropy": [[41, "aslm-model-analysis-image-contrast-normalized-dct-shannon-entropy"]], "aslm.model.analysis.image_decorrelation": [[42, "module-aslm.model.analysis.image_decorrelation"]], "aslm.model.analysis.image_decorrelation.apodize_image": [[43, "aslm-model-analysis-image-decorrelation-apodize-image"]], "aslm.model.analysis.image_decorrelation.get_correlation_coefficient": [[44, "aslm-model-analysis-image-decorrelation-get-correlation-coefficient"]], "aslm.model.analysis.image_decorrelation.get_decorrelation_local_maxima": [[45, "aslm-model-analysis-image-decorrelation-get-decorrelation-local-maxima"]], "aslm.model.analysis.image_decorrelation.get_image_decorrelation": [[46, "aslm-model-analysis-image-decorrelation-get-image-decorrelation"]], "aslm.model.analysis.image_decorrelation.get_radial_average": [[47, "aslm-model-analysis-image-decorrelation-get-radial-average"]], "aslm.model.analysis.image_decorrelation.image_to_polar": [[48, "aslm-model-analysis-image-decorrelation-image-to-polar"]], "aslm.model.analysis.image_decorrelation.linear_map": [[49, "aslm-model-analysis-image-decorrelation-linear-map"]], "aslm.model.analysis.image_decorrelation.main_image_decorr": [[50, "aslm-model-analysis-image-decorrelation-main-image-decorr"]], "aslm.model.analysis.image_transform": [[51, "module-aslm.model.analysis.image_transform"]], "aslm.model.analysis.image_transform.deskew_image": [[52, "aslm-model-analysis-image-transform-deskew-image"]], "aslm.model.analysis.image_transform.initiate_gpu": [[53, "aslm-model-analysis-image-transform-initiate-gpu"]], "aslm.model.analysis.spectral_unmixing": [[54, "module-aslm.model.analysis.spectral_unmixing"]], "aslm.model.analysis.spectral_unmixing.to_do": [[55, "aslm-model-analysis-spectral-unmixing-to-do"]], "aslm.model.concurrency": [[56, "module-aslm.model.concurrency"]], "aslm.model.concurrency.concurrency_tools": [[57, "module-aslm.model.concurrency.concurrency_tools"]], "aslm.model.concurrency.concurrency_tools.CustodyThread": [[58, "aslm-model-concurrency-concurrency-tools-custodythread"]], "aslm.model.concurrency.concurrency_tools.FancyThread": [[59, "aslm-model-concurrency-concurrency-tools-fancythread"]], "aslm.model.concurrency.concurrency_tools.MyTestClass": [[60, "aslm-model-concurrency-concurrency-tools-mytestclass"]], "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess": [[61, "aslm-model-concurrency-concurrency-tools-objectinsubprocess"]], "aslm.model.concurrency.concurrency_tools.PoliteThread": [[62, "aslm-model-concurrency-concurrency-tools-politethread"]], "aslm.model.concurrency.concurrency_tools.ResultThread": [[63, "aslm-model-concurrency-concurrency-tools-resultthread"]], "aslm.model.concurrency.concurrency_tools.SharedNDArray": [[64, "aslm-model-concurrency-concurrency-tools-sharedndarray"]], "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess": [[65, "aslm-model-concurrency-concurrency-tools-testobjectinsubprocess"]], "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread": [[66, "aslm-model-concurrency-concurrency-tools-testresultthreadandcustodythread"]], "aslm.model.concurrency.concurrency_tools.TestSharedNDArray": [[67, "aslm-model-concurrency-concurrency-tools-testsharedndarray"]], "aslm.model.concurrency.proxy_objects": [[68, "module-aslm.model.concurrency.proxy_objects"]], "aslm.model.concurrency.proxy_objects.ProxyManager": [[69, "aslm-model-concurrency-proxy-objects-proxymanager"]], "aslm.model.concurrency.proxy_objects.ProxyObject": [[70, "aslm-model-concurrency-proxy-objects-proxyobject"]], "aslm.model.concurrency.proxy_objects.launch_custody_thread": [[71, "aslm-model-concurrency-proxy-objects-launch-custody-thread"]], "aslm.model.concurrency.proxy_objects.launch_thread": [[72, "aslm-model-concurrency-proxy-objects-launch-thread"]], "aslm.model.concurrency.write_parameters": [[73, "module-aslm.model.concurrency.write_parameters"]], "aslm.model.concurrency.write_parameters.write_Params": [[74, "aslm-model-concurrency-write-parameters-write-params"]], "aslm.model.data_sources": [[75, "module-aslm.model.data_sources"]], "aslm.model.data_sources.bdv_data_source": [[76, "module-aslm.model.data_sources.bdv_data_source"]], "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource": [[77, "aslm-model-data-sources-bdv-data-source-bigdataviewerdatasource"]], "aslm.model.data_sources.data_source": [[78, "module-aslm.model.data_sources.data_source"]], "aslm.model.data_sources.data_source.DataSource": [[79, "aslm-model-data-sources-data-source-datasource"]], "aslm.model.data_sources.get_data_source": [[80, "aslm-model-data-sources-get-data-source"]], "aslm.model.data_sources.tiff_data_source": [[81, "module-aslm.model.data_sources.tiff_data_source"]], "aslm.model.data_sources.tiff_data_source.TiffDataSource": [[82, "aslm-model-data-sources-tiff-data-source-tiffdatasource"]], "aslm.model.data_sources.zarr_data_source": [[83, "module-aslm.model.data_sources.zarr_data_source"]], "aslm.model.data_sources.zarr_data_source.ZarrDataSource": [[84, "aslm-model-data-sources-zarr-data-source-zarrdatasource"]], "aslm.model.device_startup_functions": [[85, "module-aslm.model.device_startup_functions"]], "aslm.model.device_startup_functions.DummyDeviceConnection": [[86, "aslm-model-device-startup-functions-dummydeviceconnection"]], "aslm.model.device_startup_functions.auto_redial": [[87, "aslm-model-device-startup-functions-auto-redial"]], "aslm.model.device_startup_functions.device_not_found": [[88, "aslm-model-device-startup-functions-device-not-found"]], "aslm.model.device_startup_functions.load_camera_connection": [[89, "aslm-model-device-startup-functions-load-camera-connection"]], "aslm.model.device_startup_functions.load_devices": [[90, "aslm-model-device-startup-functions-load-devices"]], "aslm.model.device_startup_functions.load_filter_wheel_connection": [[91, "aslm-model-device-startup-functions-load-filter-wheel-connection"]], "aslm.model.device_startup_functions.load_stages": [[92, "aslm-model-device-startup-functions-load-stages"]], "aslm.model.device_startup_functions.load_zoom_connection": [[93, "aslm-model-device-startup-functions-load-zoom-connection"]], "aslm.model.device_startup_functions.start_camera": [[94, "aslm-model-device-startup-functions-start-camera"]], "aslm.model.device_startup_functions.start_daq": [[95, "aslm-model-device-startup-functions-start-daq"]], "aslm.model.device_startup_functions.start_filter_wheel": [[96, "aslm-model-device-startup-functions-start-filter-wheel"]], "aslm.model.device_startup_functions.start_galvo": [[97, "aslm-model-device-startup-functions-start-galvo"]], "aslm.model.device_startup_functions.start_lasers": [[98, "aslm-model-device-startup-functions-start-lasers"]], "aslm.model.device_startup_functions.start_remote_focus_device": [[99, "aslm-model-device-startup-functions-start-remote-focus-device"]], "aslm.model.device_startup_functions.start_shutter": [[100, "aslm-model-device-startup-functions-start-shutter"]], "aslm.model.device_startup_functions.start_stage": [[101, "aslm-model-device-startup-functions-start-stage"]], "aslm.model.device_startup_functions.start_zoom": [[102, "aslm-model-device-startup-functions-start-zoom"]], "aslm.model.devices": [[103, "module-aslm.model.devices"]], "aslm.model.devices.APIs": [[104, "module-aslm.model.devices.APIs"]], "aslm.model.devices.APIs.coherent": [[105, "module-aslm.model.devices.APIs.coherent"]], "aslm.model.devices.APIs.dynamixel": [[106, "module-aslm.model.devices.APIs.dynamixel"]], "aslm.model.devices.APIs.logitech": [[107, "module-aslm.model.devices.APIs.logitech"]], "aslm.model.devices.APIs.omicron": [[108, "module-aslm.model.devices.APIs.omicron"]], "aslm.model.devices.camera": [[109, "module-aslm.model.devices.camera"]], "aslm.model.devices.camera.camera_base": [[110, "module-aslm.model.devices.camera.camera_base"]], "aslm.model.devices.camera.camera_base.CameraBase": [[111, "aslm-model-devices-camera-camera-base-camerabase"]], "aslm.model.devices.camera.camera_hamamatsu": [[112, "module-aslm.model.devices.camera.camera_hamamatsu"]], "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca": [[113, "aslm-model-devices-camera-camera-hamamatsu-hamamatsuorca"]], "aslm.model.devices.camera.camera_synthetic": [[114, "module-aslm.model.devices.camera.camera_synthetic"]], "aslm.model.devices.camera.camera_synthetic.SyntheticCamera": [[115, "aslm-model-devices-camera-camera-synthetic-syntheticcamera"]], "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController": [[116, "aslm-model-devices-camera-camera-synthetic-syntheticcameracontroller"]], "aslm.model.devices.daq": [[117, "module-aslm.model.devices.daq"]], "aslm.model.devices.daq.daq_base": [[118, "module-aslm.model.devices.daq.daq_base"]], "aslm.model.devices.daq.daq_base.DAQBase": [[119, "aslm-model-devices-daq-daq-base-daqbase"]], "aslm.model.devices.daq.daq_synthetic": [[120, "module-aslm.model.devices.daq.daq_synthetic"]], "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ": [[121, "aslm-model-devices-daq-daq-synthetic-syntheticdaq"]], "aslm.model.devices.filter_wheel": [[122, "module-aslm.model.devices.filter_wheel"]], "aslm.model.devices.filter_wheel.filter_wheel_base": [[123, "module-aslm.model.devices.filter_wheel.filter_wheel_base"]], "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase": [[124, "aslm-model-devices-filter-wheel-filter-wheel-base-filterwheelbase"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter": [[125, "module-aslm.model.devices.filter_wheel.filter_wheel_sutter"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel": [[126, "aslm-model-devices-filter-wheel-filter-wheel-sutter-sutterfilterwheel"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection": [[127, "aslm-model-devices-filter-wheel-filter-wheel-sutter-build-filter-wheel-connection"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic": [[128, "module-aslm.model.devices.filter_wheel.filter_wheel_synthetic"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel": [[129, "aslm-model-devices-filter-wheel-filter-wheel-synthetic-syntheticfilterwheel"]], "aslm.model.devices.galvo": [[130, "module-aslm.model.devices.galvo"]], "aslm.model.devices.galvo.galvo_base": [[131, "module-aslm.model.devices.galvo.galvo_base"]], "aslm.model.devices.galvo.galvo_base.GalvoBase": [[132, "aslm-model-devices-galvo-galvo-base-galvobase"]], "aslm.model.devices.galvo.galvo_synthetic": [[133, "module-aslm.model.devices.galvo.galvo_synthetic"]], "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo": [[134, "aslm-model-devices-galvo-galvo-synthetic-syntheticgalvo"]], "aslm.model.devices.joystick": [[135, "module-aslm.model.devices.joystick"]], "aslm.model.devices.joystick.joystick_base": [[136, "module-aslm.model.devices.joystick.joystick_base"]], "aslm.model.devices.joystick.joystick_base.JoystickBase": [[137, "aslm-model-devices-joystick-joystick-base-joystickbase"]], "aslm.model.devices.joystick.joystick_synthetic": [[138, "module-aslm.model.devices.joystick.joystick_synthetic"]], "aslm.model.devices.joystick.joystick_synthetic.SyntheticJoystick": [[139, "aslm-model-devices-joystick-joystick-synthetic-syntheticjoystick"]], "aslm.model.devices.lasers": [[140, "module-aslm.model.devices.lasers"]], "aslm.model.devices.lasers.laser_base": [[141, "module-aslm.model.devices.lasers.laser_base"]], "aslm.model.devices.lasers.laser_base.LaserBase": [[142, "aslm-model-devices-lasers-laser-base-laserbase"]], "aslm.model.devices.lasers.laser_synthetic": [[143, "module-aslm.model.devices.lasers.laser_synthetic"]], "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser": [[144, "aslm-model-devices-lasers-laser-synthetic-syntheticlaser"]], "aslm.model.devices.lasers.laser_trigger_base": [[145, "module-aslm.model.devices.lasers.laser_trigger_base"]], "aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase": [[146, "aslm-model-devices-lasers-laser-trigger-base-lasertriggerbase"]], "aslm.model.devices.lasers.laser_trigger_synthetic": [[147, "module-aslm.model.devices.lasers.laser_trigger_synthetic"]], "aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers": [[148, "aslm-model-devices-lasers-laser-trigger-synthetic-syntheticlasertriggers"]], "aslm.model.devices.objectives": [[149, "module-aslm.model.devices.objectives"]], "aslm.model.devices.objectives.Objective": [[150, "aslm-model-devices-objectives-objective"]], "aslm.model.devices.remote_focus": [[151, "module-aslm.model.devices.remote_focus"]], "aslm.model.devices.remote_focus.remote_focus_base": [[152, "module-aslm.model.devices.remote_focus.remote_focus_base"]], "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase": [[153, "aslm-model-devices-remote-focus-remote-focus-base-remotefocusbase"]], "aslm.model.devices.remote_focus.remote_focus_equipment_solutions": [[154, "module-aslm.model.devices.remote_focus.remote_focus_equipment_solutions"]], "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions": [[155, "aslm-model-devices-remote-focus-remote-focus-equipment-solutions-remotefocusequipmentsolutions"]], "aslm.model.devices.remote_focus.remote_focus_synthetic": [[156, "module-aslm.model.devices.remote_focus.remote_focus_synthetic"]], "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus": [[157, "aslm-model-devices-remote-focus-remote-focus-synthetic-syntheticremotefocus"]], "aslm.model.devices.shutter": [[158, "module-aslm.model.devices.shutter"]], "aslm.model.devices.shutter.laser_shutter_base": [[159, "module-aslm.model.devices.shutter.laser_shutter_base"]], "aslm.model.devices.shutter.laser_shutter_base.ShutterBase": [[160, "aslm-model-devices-shutter-laser-shutter-base-shutterbase"]], "aslm.model.devices.shutter.laser_shutter_synthetic": [[161, "module-aslm.model.devices.shutter.laser_shutter_synthetic"]], "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter": [[162, "aslm-model-devices-shutter-laser-shutter-synthetic-syntheticshutter"]], "aslm.model.devices.stages": [[163, "module-aslm.model.devices.stages"]], "aslm.model.devices.stages.stage_asi": [[164, "module-aslm.model.devices.stages.stage_asi"]], "aslm.model.devices.stages.stage_asi.ASIStage": [[165, "aslm-model-devices-stages-stage-asi-asistage"]], "aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection": [[166, "aslm-model-devices-stages-stage-asi-build-asi-stage-connection"]], "aslm.model.devices.stages.stage_base": [[167, "module-aslm.model.devices.stages.stage_base"]], "aslm.model.devices.stages.stage_base.StageBase": [[168, "aslm-model-devices-stages-stage-base-stagebase"]], "aslm.model.devices.stages.stage_galvo": [[169, "module-aslm.model.devices.stages.stage_galvo"]], "aslm.model.devices.stages.stage_galvo.GalvoNIStage": [[170, "aslm-model-devices-stages-stage-galvo-galvonistage"]], "aslm.model.devices.stages.stage_mcl": [[171, "module-aslm.model.devices.stages.stage_mcl"]], "aslm.model.devices.stages.stage_mcl.MCLStage": [[172, "aslm-model-devices-stages-stage-mcl-mclstage"]], "aslm.model.devices.stages.stage_mcl.build_MCLStage_connection": [[173, "aslm-model-devices-stages-stage-mcl-build-mclstage-connection"]], "aslm.model.devices.stages.stage_pi": [[174, "module-aslm.model.devices.stages.stage_pi"]], "aslm.model.devices.stages.stage_pi.PIStage": [[175, "aslm-model-devices-stages-stage-pi-pistage"]], "aslm.model.devices.stages.stage_pi.build_PIStage_connection": [[176, "aslm-model-devices-stages-stage-pi-build-pistage-connection"]], "aslm.model.devices.stages.stage_sutter": [[177, "module-aslm.model.devices.stages.stage_sutter"]], "aslm.model.devices.stages.stage_sutter.SutterStage": [[178, "aslm-model-devices-stages-stage-sutter-sutterstage"]], "aslm.model.devices.stages.stage_sutter.build_sutter_stage_connection": [[179, "aslm-model-devices-stages-stage-sutter-build-sutter-stage-connection"]], "aslm.model.devices.stages.stage_synthetic": [[180, "module-aslm.model.devices.stages.stage_synthetic"]], "aslm.model.devices.stages.stage_synthetic.SyntheticStage": [[181, "aslm-model-devices-stages-stage-synthetic-syntheticstage"]], "aslm.model.devices.stages.stage_tl_kcube_inertial": [[182, "module-aslm.model.devices.stages.stage_tl_kcube_inertial"]], "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage": [[183, "aslm-model-devices-stages-stage-tl-kcube-inertial-tlkimstage"]], "aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection": [[184, "aslm-model-devices-stages-stage-tl-kcube-inertial-build-tlkimstage-connection"]], "aslm.model.devices.zoom": [[185, "module-aslm.model.devices.zoom"]], "aslm.model.devices.zoom.zoom_base": [[186, "module-aslm.model.devices.zoom.zoom_base"]], "aslm.model.devices.zoom.zoom_base.ZoomBase": [[187, "aslm-model-devices-zoom-zoom-base-zoombase"]], "aslm.model.devices.zoom.zoom_synthetic": [[188, "module-aslm.model.devices.zoom.zoom_synthetic"]], "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom": [[189, "aslm-model-devices-zoom-zoom-synthetic-syntheticzoom"]], "aslm.model.dummy": [[190, "module-aslm.model.dummy"]], "aslm.model.dummy.DummyController": [[191, "aslm-model-dummy-dummycontroller"]], "aslm.model.dummy.DummyDevice": [[192, "aslm-model-dummy-dummydevice"]], "aslm.model.dummy.DummyMicroscope": [[193, "aslm-model-dummy-dummymicroscope"]], "aslm.model.dummy.DummyModel": [[194, "aslm-model-dummy-dummymodel"]], "aslm.model.features": [[195, "module-aslm.model.features"]], "aslm.model.features.autofocus": [[196, "module-aslm.model.features.autofocus"]], "aslm.model.features.autofocus.Autofocus": [[197, "aslm-model-features-autofocus-autofocus"]], "aslm.model.features.common_features": [[198, "module-aslm.model.features.common_features"]], "aslm.model.features.common_features.ChangeResolution": [[199, "aslm-model-features-common-features-changeresolution"]], "aslm.model.features.common_features.ConProAcquisition": [[200, "aslm-model-features-common-features-conproacquisition"]], "aslm.model.features.common_features.FindTissueSimple2D": [[201, "aslm-model-features-common-features-findtissuesimple2d"]], "aslm.model.features.common_features.LoopByCount": [[202, "aslm-model-features-common-features-loopbycount"]], "aslm.model.features.common_features.PrepareNextChannel": [[203, "aslm-model-features-common-features-preparenextchannel"]], "aslm.model.features.common_features.Snap": [[204, "aslm-model-features-common-features-snap"]], "aslm.model.features.common_features.WaitToContinue": [[205, "aslm-model-features-common-features-waittocontinue"]], "aslm.model.features.common_features.ZStackAcquisition": [[206, "aslm-model-features-common-features-zstackacquisition"]], "aslm.model.features.dummy_detective": [[207, "module-aslm.model.features.dummy_detective"]], "aslm.model.features.dummy_detective.Dummy_Detective": [[208, "aslm-model-features-dummy-detective-dummy-detective"]], "aslm.model.features.feature_container": [[209, "module-aslm.model.features.feature_container"]], "aslm.model.features.feature_container.Container": [[210, "aslm-model-features-feature-container-container"]], "aslm.model.features.feature_container.DataContainer": [[211, "aslm-model-features-feature-container-datacontainer"]], "aslm.model.features.feature_container.DataNode": [[212, "aslm-model-features-feature-container-datanode"]], "aslm.model.features.feature_container.SignalContainer": [[213, "aslm-model-features-feature-container-signalcontainer"]], "aslm.model.features.feature_container.SignalNode": [[214, "aslm-model-features-feature-container-signalnode"]], "aslm.model.features.feature_container.TreeNode": [[215, "aslm-model-features-feature-container-treenode"]], "aslm.model.features.feature_container.dummy_True": [[216, "aslm-model-features-feature-container-dummy-true"]], "aslm.model.features.feature_container.dummy_func": [[217, "aslm-model-features-feature-container-dummy-func"]], "aslm.model.features.feature_container.get_registered_funcs": [[218, "aslm-model-features-feature-container-get-registered-funcs"]], "aslm.model.features.feature_container.load_features": [[219, "aslm-model-features-feature-container-load-features"]], "aslm.model.features.image_writer": [[220, "module-aslm.model.features.image_writer"]], "aslm.model.features.image_writer.ImageWriter": [[221, "aslm-model-features-image-writer-imagewriter"]], "aslm.model.features.restful_features": [[222, "module-aslm.model.features.restful_features"]], "aslm.model.features.restful_features.IlastikSegmentation": [[223, "aslm-model-features-restful-features-ilastiksegmentation"]], "aslm.model.features.restful_features.prepare_service": [[224, "aslm-model-features-restful-features-prepare-service"]], "aslm.model.features.volume_search": [[225, "module-aslm.model.features.volume_search"]], "aslm.model.features.volume_search.VolumeSearch": [[226, "aslm-model-features-volume-search-volumesearch"]], "aslm.model.metadata_sources": [[227, "module-aslm.model.metadata_sources"]], "aslm.model.metadata_sources.bdv_metadata": [[228, "module-aslm.model.metadata_sources.bdv_metadata"]], "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata": [[229, "aslm-model-metadata-sources-bdv-metadata-bigdataviewermetadata"]], "aslm.model.metadata_sources.metadata": [[230, "module-aslm.model.metadata_sources.metadata"]], "aslm.model.metadata_sources.metadata.Metadata": [[231, "aslm-model-metadata-sources-metadata-metadata"]], "aslm.model.metadata_sources.metadata.XMLMetadata": [[232, "aslm-model-metadata-sources-metadata-xmlmetadata"]], "aslm.model.metadata_sources.ome_tiff_metadata": [[233, "module-aslm.model.metadata_sources.ome_tiff_metadata"]], "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata": [[234, "aslm-model-metadata-sources-ome-tiff-metadata-ometiffmetadata"]], "aslm.model.microscope": [[235, "module-aslm.model.microscope"]], "aslm.model.microscope.Microscope": [[236, "aslm-model-microscope-microscope"]], "aslm.model.model": [[237, "module-aslm.model.model"]], "aslm.model.model.Model": [[238, "aslm-model-model-model"]], "aslm.model.waveforms": [[239, "module-aslm.model.waveforms"]], "aslm.model.waveforms.camera_exposure": [[240, "aslm-model-waveforms-camera-exposure"]], "aslm.model.waveforms.dc_value": [[241, "aslm-model-waveforms-dc-value"]], "aslm.model.waveforms.remote_focus_ramp": [[242, "aslm-model-waveforms-remote-focus-ramp"]], "aslm.model.waveforms.sawtooth": [[243, "aslm-model-waveforms-sawtooth"]], "aslm.model.waveforms.sine_wave": [[244, "aslm-model-waveforms-sine-wave"]], "aslm.model.waveforms.single_pulse": [[245, "aslm-model-waveforms-single-pulse"]], "aslm.model.waveforms.smooth_waveform": [[246, "aslm-model-waveforms-smooth-waveform"]], "aslm.model.waveforms.square": [[247, "aslm-model-waveforms-square"]], "aslm.tools": [[248, "module-aslm.tools"]], "aslm.tools.beams": [[249, "module-aslm.tools.beams"]], "aslm.tools.beams.fit_gaussian_beam_error": [[250, "aslm-tools-beams-fit-gaussian-beam-error"]], "aslm.tools.beams.fit_gaussian_beam_mse": [[251, "aslm-tools-beams-fit-gaussian-beam-mse"]], "aslm.tools.beams.gaussian_beam": [[252, "aslm-tools-beams-gaussian-beam"]], "aslm.tools.common_dict_tools": [[253, "module-aslm.tools.common_dict_tools"]], "aslm.tools.common_dict_tools.update_settings_common": [[254, "aslm-tools-common-dict-tools-update-settings-common"]], "aslm.tools.common_dict_tools.update_stage_dict": [[255, "aslm-tools-common-dict-tools-update-stage-dict"]], "aslm.tools.common_functions": [[256, "module-aslm.tools.common_functions"]], "aslm.tools.common_functions.build_ref_name": [[257, "aslm-tools-common-functions-build-ref-name"]], "aslm.tools.common_functions.combine_funcs": [[258, "aslm-tools-common-functions-combine-funcs"]], "aslm.tools.common_functions.copy_proxy_object": [[259, "aslm-tools-common-functions-copy-proxy-object"]], "aslm.tools.decorators": [[260, "module-aslm.tools.decorators"]], "aslm.tools.decorators.function_timer": [[261, "aslm-tools-decorators-function-timer"]], "aslm.tools.file_functions": [[262, "module-aslm.tools.file_functions"]], "aslm.tools.file_functions.create_save_path": [[263, "aslm-tools-file-functions-create-save-path"]], "aslm.tools.file_functions.save_yaml_file": [[264, "aslm-tools-file-functions-save-yaml-file"]], "aslm.tools.image": [[265, "module-aslm.tools.image"]], "aslm.tools.image.text_array": [[266, "aslm-tools-image-text-array"]], "aslm.tools.image_loaders": [[267, "module-aslm.tools.image_loaders"]], "aslm.tools.image_loaders.LazyTiff": [[268, "aslm-tools-image-loaders-lazytiff"]], "aslm.tools.main_functions": [[269, "module-aslm.tools.main_functions"]], "aslm.tools.main_functions.create_parser": [[270, "aslm-tools-main-functions-create-parser"]], "aslm.tools.main_functions.evaluate_parser_input_arguments": [[271, "aslm-tools-main-functions-evaluate-parser-input-arguments"]], "aslm.tools.main_functions.identify_gpu": [[272, "aslm-tools-main-functions-identify-gpu"]], "aslm.tools.multipos_table_tools": [[273, "module-aslm.tools.multipos_table_tools"]], "aslm.tools.multipos_table_tools.calc_num_tiles": [[274, "aslm-tools-multipos-table-tools-calc-num-tiles"]], "aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box": [[275, "aslm-tools-multipos-table-tools-compute-tiles-from-bounding-box"]], "aslm.tools.multipos_table_tools.sign": [[276, "aslm-tools-multipos-table-tools-sign"]], "aslm.tools.multipos_table_tools.update_table": [[277, "aslm-tools-multipos-table-tools-update-table"]], "aslm.tools.project_stats": [[278, "module-aslm.tools.project_stats"]], "aslm.tools.project_stats.countlines": [[279, "aslm-tools-project-stats-countlines"]], "aslm.tools.sdf": [[280, "module-aslm.tools.sdf"]], "aslm.tools.sdf.box": [[281, "aslm-tools-sdf-box"]], "aslm.tools.sdf.sphere": [[282, "aslm-tools-sdf-sphere"]], "aslm.tools.sdf.volume_from_sdf": [[283, "aslm-tools-sdf-volume-from-sdf"]], "aslm.tools.xml_tools": [[284, "module-aslm.tools.xml_tools"]], "aslm.tools.xml_tools.dict_to_xml": [[285, "aslm-tools-xml-tools-dict-to-xml"]], "aslm.tools.xml_tools.parse_xml": [[286, "aslm-tools-xml-tools-parse-xml"]], "aslm.view": [[287, "module-aslm.view"]], "aslm.view.main_window_content": [[288, "module-aslm.view.main_window_content"]], "aslm.view.main_window_content.acquire_bar_frame": [[289, "module-aslm.view.main_window_content.acquire_bar_frame"]], "aslm.view.main_window_content.channel_settings": [[290, "module-aslm.view.main_window_content.channel_settings"]], "aslm.view.main_window_content.channel_settings.channel_settings_frames": [[291, "module-aslm.view.main_window_content.channel_settings.channel_settings_frames"]], "aslm.view.main_window_content.stage_control": [[292, "module-aslm.view.main_window_content.stage_control"]], "aslm.view.main_window_content.stage_control.stage_control_frames": [[293, "module-aslm.view.main_window_content.stage_control.stage_control_frames"]], "aslm.view.menus": [[294, "module-aslm.view.menus"]], "API Reference": [[297, "api-reference"]], "Configuring ASLM": [[298, "configuring-aslm"]], "Configuration.yaml": [[298, "configuration-yaml"]], "Hardware Section": [[298, "hardware-section"]], "Microscope Section": [[298, "microscope-section"]], "GUI Section": [[298, "gui-section"]], "ASLM Feature Container": [[299, "aslm-feature-container"]], "The feature object": [[299, "the-feature-object"]], "Writing custom features": [[299, "writing-custom-features"]], "Contributing Guidelines": [[300, "contributing-guidelines"]], "General principles": [[300, "general-principles"]], "Coding style": [[300, "coding-style"]], "Dictionary Parsing": [[300, "dictionary-parsing"]], "Unit tests": [[300, "unit-tests"]], "Adding New Hardware": [[301, "adding-new-hardware"]], "Hardware Classes": [[301, "hardware-classes"]], "Scientific Units": [[301, "scientific-units"]], "How to Add New Hardware": [[301, "how-to-add-new-hardware"]], "Contributing to ASLM": [[302, "contributing-to-aslm"]], "Adding New Model Features": [[303, "adding-new-model-features"]], "Hardware Setup": [[304, "hardware-setup"]], "Configuration File": [[304, "configuration-file"]], "Data Acquisition Card": [[304, "data-acquisition-card"]], "Wiring": [[304, "wiring"]], "Cameras": [[304, "cameras"]], "Hamamatsu": [[304, "hamamatsu"]], "Photometrics": [[304, "photometrics"]], "Voicecoil": [[304, "voicecoil"]], "Equipment Solutions": [[304, "equipment-solutions"]], "Stages": [[304, "stages"]], "ASI": [[304, "asi"]], "Microscope Implementations": [[305, "microscope-implementations"]], "Multiscale Microscope": [[305, "multiscale-microscope"]], "Upright CT-ASLM-V2": [[305, "upright-ct-aslm-v2"]], "OPM-V2": [[305, "opm-v2"]], "Autonomous Software for Light Microscopy": [[306, "autonomous-software-for-light-microscopy"]], "Contents": [[306, "contents"]], "Index and search": [[306, "index-and-search"]], "Software Installation": [[307, "software-installation"]], "Download Git": [[307, "download-git"]], "Setup your Python Environment.": [[307, "setup-your-python-environment"]], "GPU Dependencies": [[307, "gpu-dependencies"]], "Troubleshooting": [[307, "troubleshooting"]], "User Guide": [[308, "user-guide"]]}, "indexentries": {"aslm.config": [[0, "module-aslm.config"]], "module": [[0, "module-aslm.config"], [1, "module-aslm.config.config"], [7, "module-aslm.controller"], [8, "module-aslm.controller.configuration_controller"], [10, "module-aslm.controller.thread_pool"], [14, "module-aslm.model"], [15, "module-aslm.model.analysis"], [16, "module-aslm.model.analysis.boundary_detect"], [21, "module-aslm.model.analysis.camera"], [26, "module-aslm.model.analysis.detection"], [36, "module-aslm.model.analysis.image_contrast"], [42, "module-aslm.model.analysis.image_decorrelation"], [51, "module-aslm.model.analysis.image_transform"], [54, "module-aslm.model.analysis.spectral_unmixing"], [56, "module-aslm.model.concurrency"], [57, "module-aslm.model.concurrency.concurrency_tools"], [68, "module-aslm.model.concurrency.proxy_objects"], [73, "module-aslm.model.concurrency.write_parameters"], [75, "module-aslm.model.data_sources"], [76, "module-aslm.model.data_sources.bdv_data_source"], [78, "module-aslm.model.data_sources.data_source"], [81, "module-aslm.model.data_sources.tiff_data_source"], [83, "module-aslm.model.data_sources.zarr_data_source"], [85, "module-aslm.model.device_startup_functions"], [103, "module-aslm.model.devices"], [104, "module-aslm.model.devices.APIs"], [105, "module-aslm.model.devices.APIs.coherent"], [106, "module-aslm.model.devices.APIs.dynamixel"], [107, "module-aslm.model.devices.APIs.logitech"], [108, "module-aslm.model.devices.APIs.omicron"], [109, "module-aslm.model.devices.camera"], [110, "module-aslm.model.devices.camera.camera_base"], [112, "module-aslm.model.devices.camera.camera_hamamatsu"], [114, "module-aslm.model.devices.camera.camera_synthetic"], [117, "module-aslm.model.devices.daq"], [118, "module-aslm.model.devices.daq.daq_base"], [120, "module-aslm.model.devices.daq.daq_synthetic"], [122, "module-aslm.model.devices.filter_wheel"], [123, "module-aslm.model.devices.filter_wheel.filter_wheel_base"], [125, "module-aslm.model.devices.filter_wheel.filter_wheel_sutter"], [128, "module-aslm.model.devices.filter_wheel.filter_wheel_synthetic"], [130, "module-aslm.model.devices.galvo"], [131, "module-aslm.model.devices.galvo.galvo_base"], [133, "module-aslm.model.devices.galvo.galvo_synthetic"], [135, "module-aslm.model.devices.joystick"], [136, "module-aslm.model.devices.joystick.joystick_base"], [138, "module-aslm.model.devices.joystick.joystick_synthetic"], [140, "module-aslm.model.devices.lasers"], [141, "module-aslm.model.devices.lasers.laser_base"], [143, "module-aslm.model.devices.lasers.laser_synthetic"], [145, "module-aslm.model.devices.lasers.laser_trigger_base"], [147, "module-aslm.model.devices.lasers.laser_trigger_synthetic"], [149, "module-aslm.model.devices.objectives"], [151, "module-aslm.model.devices.remote_focus"], [152, "module-aslm.model.devices.remote_focus.remote_focus_base"], [154, "module-aslm.model.devices.remote_focus.remote_focus_equipment_solutions"], [156, "module-aslm.model.devices.remote_focus.remote_focus_synthetic"], [158, "module-aslm.model.devices.shutter"], [159, "module-aslm.model.devices.shutter.laser_shutter_base"], [161, "module-aslm.model.devices.shutter.laser_shutter_synthetic"], [163, "module-aslm.model.devices.stages"], [164, "module-aslm.model.devices.stages.stage_asi"], [167, "module-aslm.model.devices.stages.stage_base"], [169, "module-aslm.model.devices.stages.stage_galvo"], [171, "module-aslm.model.devices.stages.stage_mcl"], [174, "module-aslm.model.devices.stages.stage_pi"], [177, "module-aslm.model.devices.stages.stage_sutter"], [180, "module-aslm.model.devices.stages.stage_synthetic"], [182, "module-aslm.model.devices.stages.stage_tl_kcube_inertial"], [185, "module-aslm.model.devices.zoom"], [186, "module-aslm.model.devices.zoom.zoom_base"], [188, "module-aslm.model.devices.zoom.zoom_synthetic"], [190, "module-aslm.model.dummy"], [195, "module-aslm.model.features"], [196, "module-aslm.model.features.autofocus"], [198, "module-aslm.model.features.common_features"], [207, "module-aslm.model.features.dummy_detective"], [209, "module-aslm.model.features.feature_container"], [220, "module-aslm.model.features.image_writer"], [222, "module-aslm.model.features.restful_features"], [225, "module-aslm.model.features.volume_search"], [227, "module-aslm.model.metadata_sources"], [228, "module-aslm.model.metadata_sources.bdv_metadata"], [230, "module-aslm.model.metadata_sources.metadata"], [233, "module-aslm.model.metadata_sources.ome_tiff_metadata"], [235, "module-aslm.model.microscope"], [237, "module-aslm.model.model"], [239, "module-aslm.model.waveforms"], [248, "module-aslm.tools"], [249, "module-aslm.tools.beams"], [253, "module-aslm.tools.common_dict_tools"], [256, "module-aslm.tools.common_functions"], [260, "module-aslm.tools.decorators"], [262, "module-aslm.tools.file_functions"], [265, "module-aslm.tools.image"], [267, "module-aslm.tools.image_loaders"], [269, "module-aslm.tools.main_functions"], [273, "module-aslm.tools.multipos_table_tools"], [278, "module-aslm.tools.project_stats"], [280, "module-aslm.tools.sdf"], [284, "module-aslm.tools.xml_tools"], [287, "module-aslm.view"], [288, "module-aslm.view.main_window_content"], [289, "module-aslm.view.main_window_content.acquire_bar_frame"], [290, "module-aslm.view.main_window_content.channel_settings"], [291, "module-aslm.view.main_window_content.channel_settings.channel_settings_frames"], [292, "module-aslm.view.main_window_content.stage_control"], [293, "module-aslm.view.main_window_content.stage_control.stage_control_frames"], [294, "module-aslm.view.menus"]], "aslm.config.config": [[1, "module-aslm.config.config"]], "build_nested_dict() (in module aslm.config.config)": [[2, "aslm.config.config.build_nested_dict"]], "get_aslm_path() (in module aslm.config.config)": [[3, "aslm.config.config.get_aslm_path"]], "get_configuration_paths() (in module aslm.config.config)": [[4, "aslm.config.config.get_configuration_paths"]], "load_configs() (in module aslm.config.config)": [[5, "aslm.config.config.load_configs"]], "update_config_dict() (in module aslm.config.config)": [[6, "aslm.config.config.update_config_dict"]], "aslm.controller": [[7, "module-aslm.controller"]], "aslm.controller.configuration_controller": [[8, "module-aslm.controller.configuration_controller"]], "configurationcontroller (class in aslm.controller.configuration_controller)": [[9, "aslm.controller.configuration_controller.ConfigurationController"]], "__init__() (aslm.controller.configuration_controller.configurationcontroller method)": [[9, "aslm.controller.configuration_controller.ConfigurationController.__init__"]], "camera_config_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[9, "aslm.controller.configuration_controller.ConfigurationController.camera_config_dict"]], "camera_pixels (aslm.controller.configuration_controller.configurationcontroller property)": [[9, "aslm.controller.configuration_controller.ConfigurationController.camera_pixels"]], "change_microscope() (aslm.controller.configuration_controller.configurationcontroller method)": [[9, "aslm.controller.configuration_controller.ConfigurationController.change_microscope"], [9, "id0"]], "channels_info (aslm.controller.configuration_controller.configurationcontroller property)": [[9, "aslm.controller.configuration_controller.ConfigurationController.channels_info"]], "daq_sample_rate (aslm.controller.configuration_controller.configurationcontroller property)": [[9, "aslm.controller.configuration_controller.ConfigurationController.daq_sample_rate"]], "filter_wheel_setting_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[9, "aslm.controller.configuration_controller.ConfigurationController.filter_wheel_setting_dict"]], "galvo_parameter_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[9, "aslm.controller.configuration_controller.ConfigurationController.galvo_parameter_dict"]], "get_microscope_configuration_dict() (aslm.controller.configuration_controller.configurationcontroller method)": [[9, "aslm.controller.configuration_controller.ConfigurationController.get_microscope_configuration_dict"], [9, "id1"]], "get_stage_position_limits() (aslm.controller.configuration_controller.configurationcontroller method)": [[9, "aslm.controller.configuration_controller.ConfigurationController.get_stage_position_limits"], [9, "id2"]], "lasers_info (aslm.controller.configuration_controller.configurationcontroller property)": [[9, "aslm.controller.configuration_controller.ConfigurationController.lasers_info"]], "number_of_channels (aslm.controller.configuration_controller.configurationcontroller property)": [[9, "aslm.controller.configuration_controller.ConfigurationController.number_of_channels"]], "remote_focus_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[9, "aslm.controller.configuration_controller.ConfigurationController.remote_focus_dict"]], "stage_default_position (aslm.controller.configuration_controller.configurationcontroller property)": [[9, "aslm.controller.configuration_controller.ConfigurationController.stage_default_position"]], "stage_setting_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[9, "aslm.controller.configuration_controller.ConfigurationController.stage_setting_dict"]], "stage_step (aslm.controller.configuration_controller.configurationcontroller property)": [[9, "aslm.controller.configuration_controller.ConfigurationController.stage_step"]], "aslm.controller.thread_pool": [[10, "module-aslm.controller.thread_pool"]], "selflockthread (class in aslm.controller.thread_pool)": [[11, "aslm.controller.thread_pool.SelfLockThread"]], "__init__() (aslm.controller.thread_pool.selflockthread method)": [[11, "aslm.controller.thread_pool.SelfLockThread.__init__"]], "daemon (aslm.controller.thread_pool.selflockthread property)": [[11, "aslm.controller.thread_pool.SelfLockThread.daemon"]], "getname() (aslm.controller.thread_pool.selflockthread method)": [[11, "aslm.controller.thread_pool.SelfLockThread.getName"]], "ident (aslm.controller.thread_pool.selflockthread property)": [[11, "aslm.controller.thread_pool.SelfLockThread.ident"]], "isdaemon() (aslm.controller.thread_pool.selflockthread method)": [[11, "aslm.controller.thread_pool.SelfLockThread.isDaemon"]], "islocked() (aslm.controller.thread_pool.selflockthread method)": [[11, "aslm.controller.thread_pool.SelfLockThread.isLocked"]], "is_alive() (aslm.controller.thread_pool.selflockthread method)": [[11, "aslm.controller.thread_pool.SelfLockThread.is_alive"]], "join() (aslm.controller.thread_pool.selflockthread method)": [[11, "aslm.controller.thread_pool.SelfLockThread.join"]], "name (aslm.controller.thread_pool.selflockthread property)": [[11, "aslm.controller.thread_pool.SelfLockThread.name"]], "native_id (aslm.controller.thread_pool.selflockthread property)": [[11, "aslm.controller.thread_pool.SelfLockThread.native_id"]], "run() (aslm.controller.thread_pool.selflockthread method)": [[11, "aslm.controller.thread_pool.SelfLockThread.run"]], "setdaemon() (aslm.controller.thread_pool.selflockthread method)": [[11, "aslm.controller.thread_pool.SelfLockThread.setDaemon"]], "setname() (aslm.controller.thread_pool.selflockthread method)": [[11, "aslm.controller.thread_pool.SelfLockThread.setName"]], "start() (aslm.controller.thread_pool.selflockthread method)": [[11, "aslm.controller.thread_pool.SelfLockThread.start"]], "unlock() (aslm.controller.thread_pool.selflockthread method)": [[11, "aslm.controller.thread_pool.SelfLockThread.unlock"]], "wait() (aslm.controller.thread_pool.selflockthread method)": [[11, "aslm.controller.thread_pool.SelfLockThread.wait"]], "synchronizedthreadpool (class in aslm.controller.thread_pool)": [[12, "aslm.controller.thread_pool.SynchronizedThreadPool"]], "__init__() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[12, "aslm.controller.thread_pool.SynchronizedThreadPool.__init__"]], "clear() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[12, "aslm.controller.thread_pool.SynchronizedThreadPool.clear"]], "createthread() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[12, "aslm.controller.thread_pool.SynchronizedThreadPool.createThread"]], "getrunningthread() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[12, "aslm.controller.thread_pool.SynchronizedThreadPool.getRunningThread"]], "globaltrace() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[12, "aslm.controller.thread_pool.SynchronizedThreadPool.globaltrace"]], "killthreadinlist() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[12, "aslm.controller.thread_pool.SynchronizedThreadPool.killThreadInList"]], "localtrace() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[12, "aslm.controller.thread_pool.SynchronizedThreadPool.localtrace"]], "movetodelete() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[12, "aslm.controller.thread_pool.SynchronizedThreadPool.moveToDelete"]], "registerresource() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[12, "aslm.controller.thread_pool.SynchronizedThreadPool.registerResource"]], "removethread() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[12, "aslm.controller.thread_pool.SynchronizedThreadPool.removeThread"]], "threadtaskwrapping() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[12, "aslm.controller.thread_pool.SynchronizedThreadPool.threadTaskWrapping"]], "threadwaitlist (class in aslm.controller.thread_pool)": [[13, "aslm.controller.thread_pool.ThreadWaitlist"]], "__init__() (aslm.controller.thread_pool.threadwaitlist method)": [[13, "aslm.controller.thread_pool.ThreadWaitlist.__init__"]], "aslm.model": [[14, "module-aslm.model"]], "aslm.model.analysis": [[15, "module-aslm.model.analysis"]], "aslm.model.analysis.boundary_detect": [[16, "module-aslm.model.analysis.boundary_detect"]], "binary_detect() (in module aslm.model.analysis.boundary_detect)": [[17, "aslm.model.analysis.boundary_detect.binary_detect"]], "find_tissue_boundary_2d() (in module aslm.model.analysis.boundary_detect)": [[18, "aslm.model.analysis.boundary_detect.find_tissue_boundary_2d"]], "has_tissue() (in module aslm.model.analysis.boundary_detect)": [[19, "aslm.model.analysis.boundary_detect.has_tissue"]], "map_boundary() (in module aslm.model.analysis.boundary_detect)": [[20, "aslm.model.analysis.boundary_detect.map_boundary"]], "aslm.model.analysis.camera": [[21, "module-aslm.model.analysis.camera"]], "compute_flatfield_map() (in module aslm.model.analysis.camera)": [[22, "aslm.model.analysis.camera.compute_flatfield_map"]], "compute_noise_sigma() (in module aslm.model.analysis.camera)": [[23, "aslm.model.analysis.camera.compute_noise_sigma"]], "compute_scmos_offset_and_variance_map() (in module aslm.model.analysis.camera)": [[24, "aslm.model.analysis.camera.compute_scmos_offset_and_variance_map"]], "compute_signal_to_noise() (in module aslm.model.analysis.camera)": [[25, "aslm.model.analysis.camera.compute_signal_to_noise"]], "aslm.model.analysis.detection": [[26, "module-aslm.model.analysis.detection"]], "add_median_border() (in module aslm.model.analysis.detection)": [[27, "aslm.model.analysis.detection.add_median_border"]], "combine_images() (in module aslm.model.analysis.detection)": [[28, "aslm.model.analysis.detection.combine_images"]], "log_detection() (in module aslm.model.analysis.detection)": [[29, "aslm.model.analysis.detection.log_detection"]], "make_inside_image() (in module aslm.model.analysis.detection)": [[30, "aslm.model.analysis.detection.make_inside_image"]], "make_normalized_image() (in module aslm.model.analysis.detection)": [[31, "aslm.model.analysis.detection.make_normalized_image"]], "make_sphere_3d() (in module aslm.model.analysis.detection)": [[32, "aslm.model.analysis.detection.make_sphere_3D"]], "multiscale_surface_filter_3d() (in module aslm.model.analysis.detection)": [[33, "aslm.model.analysis.detection.multiscale_surface_filter_3D"]], "surface_filter_gauss_3d() (in module aslm.model.analysis.detection)": [[34, "aslm.model.analysis.detection.surface_filter_gauss_3D"]], "three_level_segmentation() (in module aslm.model.analysis.detection)": [[35, "aslm.model.analysis.detection.three_level_segmentation"]], "aslm.model.analysis.image_contrast": [[36, "module-aslm.model.analysis.image_contrast"]], "estimate_and_correct_flatfield() (in module aslm.model.analysis.image_contrast)": [[37, "aslm.model.analysis.image_contrast.estimate_and_correct_flatfield"]], "estimate_image_resolution() (in module aslm.model.analysis.image_contrast)": [[38, "aslm.model.analysis.image_contrast.estimate_image_resolution"]], "fast_normalized_dct_shannon_entropy() (in module aslm.model.analysis.image_contrast)": [[39, "aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy"]], "image_intensity() (in module aslm.model.analysis.image_contrast)": [[40, "aslm.model.analysis.image_contrast.image_intensity"]], "normalized_dct_shannon_entropy() (in module aslm.model.analysis.image_contrast)": [[41, "aslm.model.analysis.image_contrast.normalized_dct_shannon_entropy"]], "aslm.model.analysis.image_decorrelation": [[42, "module-aslm.model.analysis.image_decorrelation"]], "apodize_image() (in module aslm.model.analysis.image_decorrelation)": [[43, "aslm.model.analysis.image_decorrelation.apodize_image"]], "get_correlation_coefficient() (in module aslm.model.analysis.image_decorrelation)": [[44, "aslm.model.analysis.image_decorrelation.get_correlation_coefficient"]], "get_decorrelation_local_maxima() (in module aslm.model.analysis.image_decorrelation)": [[45, "aslm.model.analysis.image_decorrelation.get_decorrelation_local_maxima"]], "get_image_decorrelation() (in module aslm.model.analysis.image_decorrelation)": [[46, "aslm.model.analysis.image_decorrelation.get_image_decorrelation"]], "get_radial_average() (in module aslm.model.analysis.image_decorrelation)": [[47, "aslm.model.analysis.image_decorrelation.get_radial_average"]], "image_to_polar() (in module aslm.model.analysis.image_decorrelation)": [[48, "aslm.model.analysis.image_decorrelation.image_to_polar"]], "linear_map() (in module aslm.model.analysis.image_decorrelation)": [[49, "aslm.model.analysis.image_decorrelation.linear_map"]], "main_image_decorr() (in module aslm.model.analysis.image_decorrelation)": [[50, "aslm.model.analysis.image_decorrelation.main_image_decorr"]], "aslm.model.analysis.image_transform": [[51, "module-aslm.model.analysis.image_transform"]], "deskew_image() (in module aslm.model.analysis.image_transform)": [[52, "aslm.model.analysis.image_transform.deskew_image"]], "initiate_gpu() (in module aslm.model.analysis.image_transform)": [[53, "aslm.model.analysis.image_transform.initiate_gpu"]], "aslm.model.analysis.spectral_unmixing": [[54, "module-aslm.model.analysis.spectral_unmixing"]], "to_do() (in module aslm.model.analysis.spectral_unmixing)": [[55, "aslm.model.analysis.spectral_unmixing.to_do"]], "aslm.model.concurrency": [[56, "module-aslm.model.concurrency"]], "aslm.model.concurrency.concurrency_tools": [[57, "module-aslm.model.concurrency.concurrency_tools"]], "custodythread (class in aslm.model.concurrency.concurrency_tools)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread"]], "__init__() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread.__init__"]], "daemon (aslm.model.concurrency.concurrency_tools.custodythread property)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread.daemon"]], "getname() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread.getName"]], "get_result() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread.get_result"]], "ident (aslm.model.concurrency.concurrency_tools.custodythread property)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread.ident"]], "isdaemon() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread.isDaemon"]], "is_alive() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread.is_alive"]], "join() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread.join"]], "name (aslm.model.concurrency.concurrency_tools.custodythread property)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread.name"]], "native_id (aslm.model.concurrency.concurrency_tools.custodythread property)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread.native_id"]], "run() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread.run"]], "setdaemon() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread.setDaemon"]], "setname() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread.setName"]], "start() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[58, "aslm.model.concurrency.concurrency_tools.CustodyThread.start"]], "fancythread (in module aslm.model.concurrency.concurrency_tools)": [[59, "aslm.model.concurrency.concurrency_tools.FancyThread"]], "mytestclass (class in aslm.model.concurrency.concurrency_tools)": [[60, "aslm.model.concurrency.concurrency_tools.MyTestClass"]], "__init__() (aslm.model.concurrency.concurrency_tools.mytestclass method)": [[60, "aslm.model.concurrency.concurrency_tools.MyTestClass.__init__"]], "run() (aslm.model.concurrency.concurrency_tools.mytestclass method)": [[60, "aslm.model.concurrency.concurrency_tools.MyTestClass.run"]], "time_it() (aslm.model.concurrency.concurrency_tools.mytestclass method)": [[60, "aslm.model.concurrency.concurrency_tools.MyTestClass.time_it"]], "objectinsubprocess (class in aslm.model.concurrency.concurrency_tools)": [[61, "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess"]], "__init__() (aslm.model.concurrency.concurrency_tools.objectinsubprocess method)": [[61, "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess.__init__"]], "politethread (in module aslm.model.concurrency.concurrency_tools)": [[62, "aslm.model.concurrency.concurrency_tools.PoliteThread"]], "resultthread (class in aslm.model.concurrency.concurrency_tools)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread"]], "__init__() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread.__init__"]], "daemon (aslm.model.concurrency.concurrency_tools.resultthread property)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread.daemon"]], "getname() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread.getName"]], "get_result() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread.get_result"]], "ident (aslm.model.concurrency.concurrency_tools.resultthread property)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread.ident"]], "isdaemon() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread.isDaemon"]], "is_alive() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread.is_alive"]], "join() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread.join"]], "name (aslm.model.concurrency.concurrency_tools.resultthread property)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread.name"]], "native_id (aslm.model.concurrency.concurrency_tools.resultthread property)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread.native_id"]], "run() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread.run"]], "setdaemon() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread.setDaemon"]], "setname() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread.setName"]], "start() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[63, "aslm.model.concurrency.concurrency_tools.ResultThread.start"]], "aligned (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ALIGNED"]], "behaved (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.BEHAVED"]], "carray (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.CARRAY"]], "c_contiguous (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.C_CONTIGUOUS"]], "farray (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.FARRAY"]], "fnc (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.FNC"]], "forc (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.FORC"]], "f_contiguous (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.F_CONTIGUOUS"]], "owndata (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.OWNDATA"]], "sharedndarray (class in aslm.model.concurrency.concurrency_tools)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray"]], "t (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.T"]], "updateifcopy (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.UPDATEIFCOPY"]], "writeable (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.WRITEABLE"]], "writebackifcopy (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.WRITEBACKIFCOPY"]], "__init__() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.__init__"]], "all() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.all"]], "any() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.any"]], "argmax() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.argmax"]], "argmin() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.argmin"]], "argpartition() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.argpartition"]], "argsort() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.argsort"]], "astype() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.astype"]], "base (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.base"]], "byteswap() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.byteswap"]], "choose() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.choose"]], "clip() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.clip"]], "compress() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.compress"]], "conj() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.conj"]], "conjugate() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.conjugate"]], "copy() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.copy"]], "ctypes (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ctypes"]], "cumprod() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.cumprod"]], "cumsum() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.cumsum"]], "data (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.data"]], "diagonal() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.diagonal"]], "dtype (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.dtype"]], "dump() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.dump"]], "dumps() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.dumps"]], "fill() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.fill"]], "flags (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.flags"]], "flat (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.flat"]], "flatten() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.flatten"]], "getfield() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.getfield"]], "imag (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.imag"]], "item() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.item"]], "itemset() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.itemset"]], "itemsize (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.itemsize"]], "max() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.max"]], "mean() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.mean"]], "min() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.min"]], "nbytes (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.nbytes"]], "ndim (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ndim"]], "newbyteorder() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.newbyteorder"]], "nonzero() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.nonzero"]], "partition() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.partition"]], "prod() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.prod"]], "ptp() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ptp"]], "put() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.put"]], "ravel() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ravel"]], "real (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.real"]], "repeat() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.repeat"]], "reshape() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.reshape"]], "resize() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.resize"]], "round() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.round"]], "searchsorted() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.searchsorted"]], "setfield() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.setfield"]], "setflags() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.setflags"]], "shape (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.shape"]], "size (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.size"]], "sort() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.sort"]], "squeeze() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.squeeze"]], "std() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.std"]], "strides (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.strides"]], "sum() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.sum"]], "swapaxes() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.swapaxes"]], "take() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.take"]], "tobytes() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.tobytes"]], "tofile() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.tofile"]], "tolist() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.tolist"]], "tostring() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.tostring"]], "trace() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.trace"]], "transpose() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.transpose"]], "var() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.var"]], "view() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[64, "aslm.model.concurrency.concurrency_tools.SharedNDArray.view"]], "testobjectinsubprocess (class in aslm.model.concurrency.concurrency_tools)": [[65, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess"]], "testobjectinsubprocess.testclass (class in aslm.model.concurrency.concurrency_tools)": [[65, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.TestClass"]], "__init__() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[65, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.__init__"]], "run() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[65, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.run"]], "test_incorrect_thread_management() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[65, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.test_incorrect_thread_management"]], "test_lock_with_waitlist() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[65, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.test_lock_with_waitlist"]], "test_object_in_subprocess_overhead() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[65, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.test_object_in_subprocess_overhead"]], "test_sending_shared_arrays() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[65, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.test_sending_shared_arrays"]], "time_it() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[65, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.time_it"]], "testresultthreadandcustodythread (class in aslm.model.concurrency.concurrency_tools)": [[66, "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread"]], "__init__() (aslm.model.concurrency.concurrency_tools.testresultthreadandcustodythread method)": [[66, "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread.__init__"]], "run() (aslm.model.concurrency.concurrency_tools.testresultthreadandcustodythread method)": [[66, "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread.run"]], "time_it() (aslm.model.concurrency.concurrency_tools.testresultthreadandcustodythread method)": [[66, "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread.time_it"]], "testsharedndarray (class in aslm.model.concurrency.concurrency_tools)": [[67, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray"]], "__init__() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[67, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.__init__"]], "run() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[67, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.run"]], "test_ndarraylike_behavior() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[67, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.test_ndarraylike_behavior"]], "test_serialization() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[67, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.test_serialization"]], "test_serializing_and_deserializing() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[67, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.test_serializing_and_deserializing"]], "time_it() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[67, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.time_it"]], "aslm.model.concurrency.proxy_objects": [[68, "module-aslm.model.concurrency.proxy_objects"]], "proxymanager (class in aslm.model.concurrency.proxy_objects)": [[69, "aslm.model.concurrency.proxy_objects.ProxyManager"]], "__init__() (aslm.model.concurrency.proxy_objects.proxymanager method)": [[69, "aslm.model.concurrency.proxy_objects.ProxyManager.__init__"]], "proxy_object() (aslm.model.concurrency.proxy_objects.proxymanager method)": [[69, "aslm.model.concurrency.proxy_objects.ProxyManager.proxy_object"]], "shared_numpy_array() (aslm.model.concurrency.proxy_objects.proxymanager method)": [[69, "aslm.model.concurrency.proxy_objects.ProxyManager.shared_numpy_array"]], "proxyobject (class in aslm.model.concurrency.proxy_objects)": [[70, "aslm.model.concurrency.proxy_objects.ProxyObject"]], "__init__() (aslm.model.concurrency.proxy_objects.proxyobject method)": [[70, "aslm.model.concurrency.proxy_objects.ProxyObject.__init__"]], "launch_custody_thread() (in module aslm.model.concurrency.proxy_objects)": [[71, "aslm.model.concurrency.proxy_objects.launch_custody_thread"]], "launch_thread() (in module aslm.model.concurrency.proxy_objects)": [[72, "aslm.model.concurrency.proxy_objects.launch_thread"]], "aslm.model.concurrency.write_parameters": [[73, "module-aslm.model.concurrency.write_parameters"]], "__init__() (aslm.model.concurrency.write_parameters.write_params method)": [[74, "aslm.model.concurrency.write_parameters.write_Params.__init__"]], "write_params (class in aslm.model.concurrency.write_parameters)": [[74, "aslm.model.concurrency.write_parameters.write_Params"]], "aslm.model.data_sources": [[75, "module-aslm.model.data_sources"]], "aslm.model.data_sources.bdv_data_source": [[76, "module-aslm.model.data_sources.bdv_data_source"]], "bigdataviewerdatasource (class in aslm.model.data_sources.bdv_data_source)": [[77, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource"]], "__init__() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[77, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.__init__"]], "close() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[77, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.close"]], "data (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[77, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.data"], [77, "id1"]], "data (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[77, "id3"]], "file_name (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[77, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.file_name"], [77, "id0"]], "metadata (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[77, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.metadata"], [77, "id2"]], "mode (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[77, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.mode"]], "read() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[77, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.read"]], "resolutions (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[77, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.resolutions"]], "set_metadata_from_configuration_experiment() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[77, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.set_metadata_from_configuration_experiment"]], "shape (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[77, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.shape"]], "shapes (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[77, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.shapes"]], "subdivisions (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[77, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.subdivisions"]], "voxel_size (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[77, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.voxel_size"]], "write() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[77, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.write"]], "aslm.model.data_sources.data_source": [[78, "module-aslm.model.data_sources.data_source"]], "datasource (class in aslm.model.data_sources.data_source)": [[79, "aslm.model.data_sources.data_source.DataSource"]], "__init__() (aslm.model.data_sources.data_source.datasource method)": [[79, "aslm.model.data_sources.data_source.DataSource.__init__"]], "close() (aslm.model.data_sources.data_source.datasource method)": [[79, "aslm.model.data_sources.data_source.DataSource.close"]], "data (aslm.model.data_sources.data_source.datasource attribute)": [[79, "aslm.model.data_sources.data_source.DataSource.data"], [79, "id1"]], "data (aslm.model.data_sources.data_source.datasource property)": [[79, "id3"]], "file_name (aslm.model.data_sources.data_source.datasource attribute)": [[79, "aslm.model.data_sources.data_source.DataSource.file_name"], [79, "id0"]], "metadata (aslm.model.data_sources.data_source.datasource attribute)": [[79, "aslm.model.data_sources.data_source.DataSource.metadata"], [79, "id2"]], "mode (aslm.model.data_sources.data_source.datasource property)": [[79, "aslm.model.data_sources.data_source.DataSource.mode"]], "read() (aslm.model.data_sources.data_source.datasource method)": [[79, "aslm.model.data_sources.data_source.DataSource.read"]], "set_metadata_from_configuration_experiment() (aslm.model.data_sources.data_source.datasource method)": [[79, "aslm.model.data_sources.data_source.DataSource.set_metadata_from_configuration_experiment"]], "shape (aslm.model.data_sources.data_source.datasource property)": [[79, "aslm.model.data_sources.data_source.DataSource.shape"]], "voxel_size (aslm.model.data_sources.data_source.datasource property)": [[79, "aslm.model.data_sources.data_source.DataSource.voxel_size"]], "write() (aslm.model.data_sources.data_source.datasource method)": [[79, "aslm.model.data_sources.data_source.DataSource.write"]], "get_data_source() (in module aslm.model.data_sources)": [[80, "aslm.model.data_sources.get_data_source"]], "aslm.model.data_sources.tiff_data_source": [[81, "module-aslm.model.data_sources.tiff_data_source"]], "tiffdatasource (class in aslm.model.data_sources.tiff_data_source)": [[82, "aslm.model.data_sources.tiff_data_source.TiffDataSource"]], "__init__() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[82, "aslm.model.data_sources.tiff_data_source.TiffDataSource.__init__"]], "close() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[82, "aslm.model.data_sources.tiff_data_source.TiffDataSource.close"]], "data (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[82, "aslm.model.data_sources.tiff_data_source.TiffDataSource.data"], [82, "id1"]], "data (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[82, "id3"]], "file_name (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[82, "aslm.model.data_sources.tiff_data_source.TiffDataSource.file_name"], [82, "id0"]], "generate_image_name() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[82, "aslm.model.data_sources.tiff_data_source.TiffDataSource.generate_image_name"]], "metadata (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[82, "aslm.model.data_sources.tiff_data_source.TiffDataSource.metadata"], [82, "id2"]], "mode (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[82, "aslm.model.data_sources.tiff_data_source.TiffDataSource.mode"]], "read() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[82, "aslm.model.data_sources.tiff_data_source.TiffDataSource.read"]], "set_metadata_from_configuration_experiment() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[82, "aslm.model.data_sources.tiff_data_source.TiffDataSource.set_metadata_from_configuration_experiment"]], "shape (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[82, "aslm.model.data_sources.tiff_data_source.TiffDataSource.shape"]], "voxel_size (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[82, "aslm.model.data_sources.tiff_data_source.TiffDataSource.voxel_size"]], "write() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[82, "aslm.model.data_sources.tiff_data_source.TiffDataSource.write"]], "aslm.model.data_sources.zarr_data_source": [[83, "module-aslm.model.data_sources.zarr_data_source"]], "zarrdatasource (class in aslm.model.data_sources.zarr_data_source)": [[84, "aslm.model.data_sources.zarr_data_source.ZarrDataSource"]], "__init__() (aslm.model.data_sources.zarr_data_source.zarrdatasource method)": [[84, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.__init__"]], "close() (aslm.model.data_sources.zarr_data_source.zarrdatasource method)": [[84, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.close"]], "copy_to_zarr() (aslm.model.data_sources.zarr_data_source.zarrdatasource method)": [[84, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.copy_to_zarr"]], "data (aslm.model.data_sources.zarr_data_source.zarrdatasource attribute)": [[84, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.data"], [84, "id1"]], "data (aslm.model.data_sources.zarr_data_source.zarrdatasource property)": [[84, "id3"]], "file_name (aslm.model.data_sources.zarr_data_source.zarrdatasource attribute)": [[84, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.file_name"], [84, "id0"]], "metadata (aslm.model.data_sources.zarr_data_source.zarrdatasource attribute)": [[84, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.metadata"], [84, "id2"]], "mode (aslm.model.data_sources.zarr_data_source.zarrdatasource property)": [[84, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.mode"]], "read() (aslm.model.data_sources.zarr_data_source.zarrdatasource method)": [[84, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.read"]], "set_metadata_from_configuration_experiment() (aslm.model.data_sources.zarr_data_source.zarrdatasource method)": [[84, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.set_metadata_from_configuration_experiment"]], "shape (aslm.model.data_sources.zarr_data_source.zarrdatasource property)": [[84, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.shape"]], "voxel_size (aslm.model.data_sources.zarr_data_source.zarrdatasource property)": [[84, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.voxel_size"]], "write() (aslm.model.data_sources.zarr_data_source.zarrdatasource method)": [[84, "aslm.model.data_sources.zarr_data_source.ZarrDataSource.write"]], "aslm.model.device_startup_functions": [[85, "module-aslm.model.device_startup_functions"]], "dummydeviceconnection (class in aslm.model.device_startup_functions)": [[86, "aslm.model.device_startup_functions.DummyDeviceConnection"]], "__init__() (aslm.model.device_startup_functions.dummydeviceconnection method)": [[86, "aslm.model.device_startup_functions.DummyDeviceConnection.__init__"]], "auto_redial() (in module aslm.model.device_startup_functions)": [[87, "aslm.model.device_startup_functions.auto_redial"]], "device_not_found() (in module aslm.model.device_startup_functions)": [[88, "aslm.model.device_startup_functions.device_not_found"]], "load_camera_connection() (in module aslm.model.device_startup_functions)": [[89, "aslm.model.device_startup_functions.load_camera_connection"]], "load_devices() (in module aslm.model.device_startup_functions)": [[90, "aslm.model.device_startup_functions.load_devices"]], "load_filter_wheel_connection() (in module aslm.model.device_startup_functions)": [[91, "aslm.model.device_startup_functions.load_filter_wheel_connection"]], "load_stages() (in module aslm.model.device_startup_functions)": [[92, "aslm.model.device_startup_functions.load_stages"]], "load_zoom_connection() (in module aslm.model.device_startup_functions)": [[93, "aslm.model.device_startup_functions.load_zoom_connection"]], "start_camera() (in module aslm.model.device_startup_functions)": [[94, "aslm.model.device_startup_functions.start_camera"]], "start_daq() (in module aslm.model.device_startup_functions)": [[95, "aslm.model.device_startup_functions.start_daq"]], "start_filter_wheel() (in module aslm.model.device_startup_functions)": [[96, "aslm.model.device_startup_functions.start_filter_wheel"]], "start_galvo() (in module aslm.model.device_startup_functions)": [[97, "aslm.model.device_startup_functions.start_galvo"]], "start_lasers() (in module aslm.model.device_startup_functions)": [[98, "aslm.model.device_startup_functions.start_lasers"]], "start_remote_focus_device() (in module aslm.model.device_startup_functions)": [[99, "aslm.model.device_startup_functions.start_remote_focus_device"]], "start_shutter() (in module aslm.model.device_startup_functions)": [[100, "aslm.model.device_startup_functions.start_shutter"]], "start_stage() (in module aslm.model.device_startup_functions)": [[101, "aslm.model.device_startup_functions.start_stage"]], "start_zoom() (in module aslm.model.device_startup_functions)": [[102, "aslm.model.device_startup_functions.start_zoom"]], "aslm.model.devices": [[103, "module-aslm.model.devices"]], "aslm.model.devices.apis": [[104, "module-aslm.model.devices.APIs"]], "aslm.model.devices.apis.coherent": [[105, "module-aslm.model.devices.APIs.coherent"]], "aslm.model.devices.apis.dynamixel": [[106, "module-aslm.model.devices.APIs.dynamixel"]], "aslm.model.devices.apis.logitech": [[107, "module-aslm.model.devices.APIs.logitech"]], "aslm.model.devices.apis.omicron": [[108, "module-aslm.model.devices.APIs.omicron"]], "aslm.model.devices.camera": [[109, "module-aslm.model.devices.camera"]], "aslm.model.devices.camera.camera_base": [[110, "module-aslm.model.devices.camera.camera_base"]], "camerabase (class in aslm.model.devices.camera.camera_base)": [[111, "aslm.model.devices.camera.camera_base.CameraBase"]], "__init__() (aslm.model.devices.camera.camera_base.camerabase method)": [[111, "aslm.model.devices.camera.camera_base.CameraBase.__init__"]], "calculate_light_sheet_exposure_time() (aslm.model.devices.camera.camera_base.camerabase method)": [[111, "aslm.model.devices.camera.camera_base.CameraBase.calculate_light_sheet_exposure_time"]], "set_readout_direction() (aslm.model.devices.camera.camera_base.camerabase method)": [[111, "aslm.model.devices.camera.camera_base.CameraBase.set_readout_direction"]], "aslm.model.devices.camera.camera_hamamatsu": [[112, "module-aslm.model.devices.camera.camera_hamamatsu"]], "hamamatsuorca (class in aslm.model.devices.camera.camera_hamamatsu)": [[113, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca"]], "__init__() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[113, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.__init__"]], "calculate_light_sheet_exposure_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[113, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.calculate_light_sheet_exposure_time"]], "calculate_readout_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[113, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.calculate_readout_time"]], "close_camera() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[113, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.close_camera"]], "close_image_series() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[113, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.close_image_series"]], "get_minimum_waiting_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[113, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.get_minimum_waiting_time"]], "get_new_frame() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[113, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.get_new_frame"]], "initialize_image_series() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[113, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.initialize_image_series"]], "report_settings() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[113, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.report_settings"]], "serial_number (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[113, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.serial_number"]], "set_roi() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[113, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_ROI"]], "set_binning() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[113, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_binning"]], "set_exposure_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[113, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_exposure_time"]], "set_line_interval() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[113, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_line_interval"]], "set_readout_direction() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[113, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_readout_direction"]], "set_sensor_mode() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[113, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_sensor_mode"]], "aslm.model.devices.camera.camera_synthetic": [[114, "module-aslm.model.devices.camera.camera_synthetic"]], "syntheticcamera (class in aslm.model.devices.camera.camera_synthetic)": [[115, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera"]], "__init__() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[115, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.__init__"]], "calculate_light_sheet_exposure_time() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[115, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.calculate_light_sheet_exposure_time"]], "calculate_readout_time() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[115, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.calculate_readout_time"]], "close_camera() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[115, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.close_camera"]], "close_image_series() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[115, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.close_image_series"]], "generate_new_frame() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[115, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.generate_new_frame"]], "get_minimum_waiting_time() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[115, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.get_minimum_waiting_time"]], "get_new_frame() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[115, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.get_new_frame"]], "initialize_image_series() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[115, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.initialize_image_series"]], "load_images() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[115, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.load_images"]], "report_settings() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[115, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.report_settings"]], "set_roi() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[115, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_ROI"]], "set_binning() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[115, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_binning"]], "set_exposure_time() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[115, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_exposure_time"]], "set_line_interval() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[115, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_line_interval"]], "set_readout_direction() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[115, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_readout_direction"]], "set_sensor_mode() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[115, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_sensor_mode"]], "syntheticcameracontroller (class in aslm.model.devices.camera.camera_synthetic)": [[116, "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController"]], "__init__() (aslm.model.devices.camera.camera_synthetic.syntheticcameracontroller method)": [[116, "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController.__init__"]], "get_property_value() (aslm.model.devices.camera.camera_synthetic.syntheticcameracontroller method)": [[116, "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController.get_property_value"]], "aslm.model.devices.daq": [[117, "module-aslm.model.devices.daq"]], "aslm.model.devices.daq.daq_base": [[118, "module-aslm.model.devices.daq.daq_base"]], "daqbase (class in aslm.model.devices.daq.daq_base)": [[119, "aslm.model.devices.daq.daq_base.DAQBase"]], "__init__() (aslm.model.devices.daq.daq_base.daqbase method)": [[119, "aslm.model.devices.daq.daq_base.DAQBase.__init__"]], "calculate_all_waveforms() (aslm.model.devices.daq.daq_base.daqbase method)": [[119, "aslm.model.devices.daq.daq_base.DAQBase.calculate_all_waveforms"]], "configuration (aslm.model.devices.daq.daq_base.daqbase attribute)": [[119, "aslm.model.devices.daq.daq_base.DAQBase.configuration"]], "aslm.model.devices.daq.daq_synthetic": [[120, "module-aslm.model.devices.daq.daq_synthetic"]], "syntheticdaq (class in aslm.model.devices.daq.daq_synthetic)": [[121, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ"]], "__init__() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[121, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.__init__"]], "add_camera() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[121, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.add_camera"]], "calculate_all_waveforms() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[121, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.calculate_all_waveforms"]], "close_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[121, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.close_tasks"]], "configuration (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[121, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.configuration"]], "create_camera_task() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[121, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.create_camera_task"]], "create_galvo_remote_focus_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[121, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.create_galvo_remote_focus_tasks"]], "create_master_trigger_task() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[121, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.create_master_trigger_task"]], "prepare_acquisition() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[121, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.prepare_acquisition"]], "run_acquisition() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[121, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.run_acquisition"]], "start_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[121, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.start_tasks"]], "stop_acquisition() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[121, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.stop_acquisition"]], "stop_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[121, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.stop_tasks"]], "write_waveforms_to_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[121, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.write_waveforms_to_tasks"]], "aslm.model.devices.filter_wheel": [[122, "module-aslm.model.devices.filter_wheel"]], "aslm.model.devices.filter_wheel.filter_wheel_base": [[123, "module-aslm.model.devices.filter_wheel.filter_wheel_base"]], "filterwheelbase (class in aslm.model.devices.filter_wheel.filter_wheel_base)": [[124, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase"]], "__init__() (aslm.model.devices.filter_wheel.filter_wheel_base.filterwheelbase method)": [[124, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.__init__"]], "check_if_filter_in_filter_dictionary() (aslm.model.devices.filter_wheel.filter_wheel_base.filterwheelbase method)": [[124, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.check_if_filter_in_filter_dictionary"], [124, "id0"]], "filter_dictionary (aslm.model.devices.filter_wheel.filter_wheel_base.filterwheelbase attribute)": [[124, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.filter_dictionary"]], "wheel_position (aslm.model.devices.filter_wheel.filter_wheel_base.filterwheelbase attribute)": [[124, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.wheel_position"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter": [[125, "module-aslm.model.devices.filter_wheel.filter_wheel_sutter"]], "sutterfilterwheel (class in aslm.model.devices.filter_wheel.filter_wheel_sutter)": [[126, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel"]], "__init__() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[126, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.__init__"]], "baudrate (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[126, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.baudrate"]], "check_if_filter_in_filter_dictionary() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[126, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.check_if_filter_in_filter_dictionary"], [126, "id0"]], "close() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[126, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.close"], [126, "id1"]], "comport (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[126, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.comport"]], "filter_change_delay() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[126, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.filter_change_delay"], [126, "id2"]], "filter_dictionary (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[126, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.filter_dictionary"]], "number_of_filter_wheels (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[126, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.number_of_filter_wheels"]], "read() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[126, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.read"], [126, "id3"]], "set_filter() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[126, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.set_filter"]], "wheel_position (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[126, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.wheel_position"]], "baudrate (in module aslm.model.devices.filter_wheel.filter_wheel_sutter)": [[127, "aslm.model.devices.filter_wheel.filter_wheel_sutter.baudrate"]], "build_filter_wheel_connection() (in module aslm.model.devices.filter_wheel.filter_wheel_sutter)": [[127, "aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic": [[128, "module-aslm.model.devices.filter_wheel.filter_wheel_synthetic"]], "syntheticfilterwheel (class in aslm.model.devices.filter_wheel.filter_wheel_synthetic)": [[129, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel"]], "__init__() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[129, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.__init__"]], "baudrate (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[129, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.baudrate"]], "check_if_filter_in_filter_dictionary() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[129, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.check_if_filter_in_filter_dictionary"]], "close() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[129, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.close"]], "comport (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[129, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.comport"]], "filter_change_delay() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[129, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.filter_change_delay"]], "filter_dictionary (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[129, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.filter_dictionary"]], "number_of_filter_wheels (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[129, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.number_of_filter_wheels"]], "read() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[129, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.read"]], "set_filter() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[129, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.set_filter"]], "wheel_position (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[129, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.wheel_position"]], "aslm.model.devices.galvo": [[130, "module-aslm.model.devices.galvo"]], "aslm.model.devices.galvo.galvo_base": [[131, "module-aslm.model.devices.galvo.galvo_base"]], "galvobase (class in aslm.model.devices.galvo.galvo_base)": [[132, "aslm.model.devices.galvo.galvo_base.GalvoBase"]], "__init__() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[132, "aslm.model.devices.galvo.galvo_base.GalvoBase.__init__"]], "adjust() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[132, "aslm.model.devices.galvo.galvo_base.GalvoBase.adjust"]], "camera_delay_percent (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[132, "aslm.model.devices.galvo.galvo_base.GalvoBase.camera_delay_percent"]], "close_task() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[132, "aslm.model.devices.galvo.galvo_base.GalvoBase.close_task"], [132, "id0"]], "configuration (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[132, "aslm.model.devices.galvo.galvo_base.GalvoBase.configuration"]], "device_config (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[132, "aslm.model.devices.galvo.galvo_base.GalvoBase.device_config"]], "galvo_max_voltage (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[132, "aslm.model.devices.galvo.galvo_base.GalvoBase.galvo_max_voltage"]], "galvo_min_voltage (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[132, "aslm.model.devices.galvo.galvo_base.GalvoBase.galvo_min_voltage"]], "galvo_name (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[132, "aslm.model.devices.galvo.galvo_base.GalvoBase.galvo_name"]], "microscope_name (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[132, "aslm.model.devices.galvo.galvo_base.GalvoBase.microscope_name"]], "prepare_task() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[132, "aslm.model.devices.galvo.galvo_base.GalvoBase.prepare_task"], [132, "id1"]], "remote_focus_ramp_falling (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[132, "aslm.model.devices.galvo.galvo_base.GalvoBase.remote_focus_ramp_falling"]], "sample_rate (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[132, "aslm.model.devices.galvo.galvo_base.GalvoBase.sample_rate"]], "samples (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[132, "aslm.model.devices.galvo.galvo_base.GalvoBase.samples"]], "start_task() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[132, "aslm.model.devices.galvo.galvo_base.GalvoBase.start_task"], [132, "id2"]], "stop_task() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[132, "aslm.model.devices.galvo.galvo_base.GalvoBase.stop_task"], [132, "id3"]], "sweep_time (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[132, "aslm.model.devices.galvo.galvo_base.GalvoBase.sweep_time"]], "waveform_dict (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[132, "aslm.model.devices.galvo.galvo_base.GalvoBase.waveform_dict"]], "aslm.model.devices.galvo.galvo_synthetic": [[133, "module-aslm.model.devices.galvo.galvo_synthetic"]], "none (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[134, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.None"]], "syntheticgalvo (class in aslm.model.devices.galvo.galvo_synthetic)": [[134, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo"]], "__init__() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[134, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.__init__"]], "adjust() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[134, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.adjust"]], "close_task() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[134, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.close_task"], [134, "id0"]], "prepare_task() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[134, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.prepare_task"], [134, "id1"]], "start_task() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[134, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.start_task"], [134, "id2"]], "stop_task() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[134, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.stop_task"], [134, "id3"]], "aslm.model.devices.joystick": [[135, "module-aslm.model.devices.joystick"]], "aslm.model.devices.joystick.joystick_base": [[136, "module-aslm.model.devices.joystick.joystick_base"]], "joystickbase (class in aslm.model.devices.joystick.joystick_base)": [[137, "aslm.model.devices.joystick.joystick_base.JoystickBase"]], "__init__() (aslm.model.devices.joystick.joystick_base.joystickbase method)": [[137, "aslm.model.devices.joystick.joystick_base.JoystickBase.__init__"]], "aslm.model.devices.joystick.joystick_synthetic": [[138, "module-aslm.model.devices.joystick.joystick_synthetic"]], "syntheticjoystick (class in aslm.model.devices.joystick.joystick_synthetic)": [[139, "aslm.model.devices.joystick.joystick_synthetic.SyntheticJoystick"]], "__init__() (aslm.model.devices.joystick.joystick_synthetic.syntheticjoystick method)": [[139, "aslm.model.devices.joystick.joystick_synthetic.SyntheticJoystick.__init__"]], "aslm.model.devices.lasers": [[140, "module-aslm.model.devices.lasers"]], "aslm.model.devices.lasers.laser_base": [[141, "module-aslm.model.devices.lasers.laser_base"]], "laserbase (class in aslm.model.devices.lasers.laser_base)": [[142, "aslm.model.devices.lasers.laser_base.LaserBase"]], "__init__() (aslm.model.devices.lasers.laser_base.laserbase method)": [[142, "aslm.model.devices.lasers.laser_base.LaserBase.__init__"]], "close() (aslm.model.devices.lasers.laser_base.laserbase method)": [[142, "aslm.model.devices.lasers.laser_base.LaserBase.close"]], "initialize_laser() (aslm.model.devices.lasers.laser_base.laserbase method)": [[142, "aslm.model.devices.lasers.laser_base.LaserBase.initialize_laser"]], "aslm.model.devices.lasers.laser_synthetic": [[143, "module-aslm.model.devices.lasers.laser_synthetic"]], "syntheticlaser (class in aslm.model.devices.lasers.laser_synthetic)": [[144, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser"]], "__init__() (aslm.model.devices.lasers.laser_synthetic.syntheticlaser method)": [[144, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.__init__"]], "close() (aslm.model.devices.lasers.laser_synthetic.syntheticlaser method)": [[144, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.close"]], "initialize_laser() (aslm.model.devices.lasers.laser_synthetic.syntheticlaser method)": [[144, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.initialize_laser"]], "aslm.model.devices.lasers.laser_trigger_base": [[145, "module-aslm.model.devices.lasers.laser_trigger_base"]], "lasertriggerbase (class in aslm.model.devices.lasers.laser_trigger_base)": [[146, "aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase"]], "__init__() (aslm.model.devices.lasers.laser_trigger_base.lasertriggerbase method)": [[146, "aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase.__init__"]], "enable_high_resolution_laser() (aslm.model.devices.lasers.laser_trigger_base.lasertriggerbase method)": [[146, "aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase.enable_high_resolution_laser"]], "enable_low_resolution_laser() (aslm.model.devices.lasers.laser_trigger_base.lasertriggerbase method)": [[146, "aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase.enable_low_resolution_laser"]], "set_laser_analog_voltage() (aslm.model.devices.lasers.laser_trigger_base.lasertriggerbase method)": [[146, "aslm.model.devices.lasers.laser_trigger_base.LaserTriggerBase.set_laser_analog_voltage"]], "aslm.model.devices.lasers.laser_trigger_synthetic": [[147, "module-aslm.model.devices.lasers.laser_trigger_synthetic"]], "syntheticlasertriggers (class in aslm.model.devices.lasers.laser_trigger_synthetic)": [[148, "aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers"]], "__init__() (aslm.model.devices.lasers.laser_trigger_synthetic.syntheticlasertriggers method)": [[148, "aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers.__init__"]], "enable_high_resolution_laser() (aslm.model.devices.lasers.laser_trigger_synthetic.syntheticlasertriggers method)": [[148, "aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers.enable_high_resolution_laser"]], "enable_low_resolution_laser() (aslm.model.devices.lasers.laser_trigger_synthetic.syntheticlasertriggers method)": [[148, "aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers.enable_low_resolution_laser"]], "set_laser_analog_voltage() (aslm.model.devices.lasers.laser_trigger_synthetic.syntheticlasertriggers method)": [[148, "aslm.model.devices.lasers.laser_trigger_synthetic.SyntheticLaserTriggers.set_laser_analog_voltage"]], "aslm.model.devices.objectives": [[149, "module-aslm.model.devices.objectives"]], "objective (class in aslm.model.devices.objectives)": [[150, "aslm.model.devices.objectives.Objective"]], "__init__() (aslm.model.devices.objectives.objective method)": [[150, "aslm.model.devices.objectives.Objective.__init__"]], "calculate_entrance_pupil() (aslm.model.devices.objectives.objective method)": [[150, "aslm.model.devices.objectives.Objective.calculate_entrance_pupil"]], "aslm.model.devices.remote_focus": [[151, "module-aslm.model.devices.remote_focus"]], "aslm.model.devices.remote_focus.remote_focus_base": [[152, "module-aslm.model.devices.remote_focus.remote_focus_base"]], "remotefocusbase (class in aslm.model.devices.remote_focus.remote_focus_base)": [[153, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase"]], "__init__() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[153, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.__init__"]], "adjust() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[153, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.adjust"]], "camera_delay_percent (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[153, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.camera_delay_percent"]], "close_task() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[153, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.close_task"]], "configuration (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[153, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.configuration"]], "device_config (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[153, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.device_config"]], "microscope_name (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[153, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.microscope_name"]], "prepare_task() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[153, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.prepare_task"], [153, "id0"]], "remote_focus_delay (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[153, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.remote_focus_delay"]], "remote_focus_max_voltage (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[153, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.remote_focus_max_voltage"]], "remote_focus_min_voltage (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[153, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.remote_focus_min_voltage"]], "remote_focus_ramp_falling (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[153, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.remote_focus_ramp_falling"]], "sample_rate (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[153, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.sample_rate"]], "samples (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[153, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.samples"]], "start_task() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[153, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.start_task"], [153, "id1"]], "stop_task() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[153, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.stop_task"], [153, "id2"]], "sweep_time (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[153, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.sweep_time"]], "waveform_dict (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[153, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.waveform_dict"]], "aslm.model.devices.remote_focus.remote_focus_equipment_solutions": [[154, "module-aslm.model.devices.remote_focus.remote_focus_equipment_solutions"]], "remotefocusequipmentsolutions (class in aslm.model.devices.remote_focus.remote_focus_equipment_solutions)": [[155, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions"]], "__init__() (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions method)": [[155, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.__init__"]], "adjust() (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions method)": [[155, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.adjust"]], "baud_rate (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions attribute)": [[155, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.baud_rate"]], "byte_size (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions attribute)": [[155, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.byte_size"]], "close_connection() (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions method)": [[155, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.close_connection"], [155, "id0"]], "comport (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions attribute)": [[155, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.comport"]], "debug (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions attribute)": [[155, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.debug"]], "parity (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions attribute)": [[155, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.parity"]], "prepare_task() (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions method)": [[155, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.prepare_task"]], "read_bytes() (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions method)": [[155, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.read_bytes"], [155, "id1"]], "read_on_init (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions attribute)": [[155, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.read_on_init"]], "send_command() (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions method)": [[155, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.send_command"], [155, "id2"]], "start_task() (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions method)": [[155, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.start_task"]], "stop_bits (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions attribute)": [[155, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.stop_bits"]], "stop_task() (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions method)": [[155, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.stop_task"]], "timeout (aslm.model.devices.remote_focus.remote_focus_equipment_solutions.remotefocusequipmentsolutions attribute)": [[155, "aslm.model.devices.remote_focus.remote_focus_equipment_solutions.RemoteFocusEquipmentSolutions.timeout"]], "aslm.model.devices.remote_focus.remote_focus_synthetic": [[156, "module-aslm.model.devices.remote_focus.remote_focus_synthetic"]], "syntheticremotefocus (class in aslm.model.devices.remote_focus.remote_focus_synthetic)": [[157, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus"]], "__init__() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[157, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.__init__"]], "adjust() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[157, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.adjust"]], "close_task() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[157, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.close_task"], [157, "id0"]], "configuration (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[157, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.configuration"]], "device_connection (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[157, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.device_connection"]], "microscope_name (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[157, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.microscope_name"]], "prepare_task() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[157, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.prepare_task"], [157, "id1"]], "start_task() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[157, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.start_task"], [157, "id2"]], "stop_task() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[157, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.stop_task"], [157, "id3"]], "aslm.model.devices.shutter": [[158, "module-aslm.model.devices.shutter"]], "aslm.model.devices.shutter.laser_shutter_base": [[159, "module-aslm.model.devices.shutter.laser_shutter_base"]], "shutterbase (class in aslm.model.devices.shutter.laser_shutter_base)": [[160, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase"]], "__init__() (aslm.model.devices.shutter.laser_shutter_base.shutterbase method)": [[160, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.__init__"]], "configuration (aslm.model.devices.shutter.laser_shutter_base.shutterbase attribute)": [[160, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.configuration"]], "device_connection (aslm.model.devices.shutter.laser_shutter_base.shutterbase attribute)": [[160, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.device_connection"]], "microscope_name (aslm.model.devices.shutter.laser_shutter_base.shutterbase attribute)": [[160, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.microscope_name"]], "aslm.model.devices.shutter.laser_shutter_synthetic": [[161, "module-aslm.model.devices.shutter.laser_shutter_synthetic"]], "syntheticshutter (class in aslm.model.devices.shutter.laser_shutter_synthetic)": [[162, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter"]], "__init__() (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter method)": [[162, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.__init__"]], "close_shutters() (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter method)": [[162, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.close_shutters"]], "configuration (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter attribute)": [[162, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.configuration"]], "device_connection (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter attribute)": [[162, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.device_connection"]], "microscope_name (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter attribute)": [[162, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.microscope_name"]], "open_left() (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter method)": [[162, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.open_left"]], "open_right() (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter method)": [[162, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.open_right"]], "state() (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter method)": [[162, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.state"]], "aslm.model.devices.stages": [[163, "module-aslm.model.devices.stages"]], "aslm.model.devices.stages.stage_asi": [[164, "module-aslm.model.devices.stages.stage_asi"]], "asistage (class in aslm.model.devices.stages.stage_asi)": [[165, "aslm.model.devices.stages.stage_asi.ASIStage"]], "__init__() (aslm.model.devices.stages.stage_asi.asistage method)": [[165, "aslm.model.devices.stages.stage_asi.ASIStage.__init__"]], "create_position_dict() (aslm.model.devices.stages.stage_asi.asistage method)": [[165, "aslm.model.devices.stages.stage_asi.ASIStage.create_position_dict"]], "get_abs_position() (aslm.model.devices.stages.stage_asi.asistage method)": [[165, "aslm.model.devices.stages.stage_asi.ASIStage.get_abs_position"]], "move_absolute() (aslm.model.devices.stages.stage_asi.asistage method)": [[165, "aslm.model.devices.stages.stage_asi.ASIStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_asi.asistage method)": [[165, "aslm.model.devices.stages.stage_asi.ASIStage.move_axis_absolute"]], "report_position() (aslm.model.devices.stages.stage_asi.asistage method)": [[165, "aslm.model.devices.stages.stage_asi.ASIStage.report_position"]], "stop() (aslm.model.devices.stages.stage_asi.asistage method)": [[165, "aslm.model.devices.stages.stage_asi.ASIStage.stop"]], "build_asi_stage_connection() (in module aslm.model.devices.stages.stage_asi)": [[166, "aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection"]], "aslm.model.devices.stages.stage_base": [[167, "module-aslm.model.devices.stages.stage_base"]], "stagebase (class in aslm.model.devices.stages.stage_base)": [[168, "aslm.model.devices.stages.stage_base.StageBase"]], "__init__() (aslm.model.devices.stages.stage_base.stagebase method)": [[168, "aslm.model.devices.stages.stage_base.StageBase.__init__"]], "create_position_dict() (aslm.model.devices.stages.stage_base.stagebase method)": [[168, "aslm.model.devices.stages.stage_base.StageBase.create_position_dict"], [168, "id0"]], "f_max (aslm.model.devices.stages.stage_base.stagebase attribute)": [[168, "aslm.model.devices.stages.stage_base.StageBase.f_max"]], "f_min (aslm.model.devices.stages.stage_base.stagebase attribute)": [[168, "aslm.model.devices.stages.stage_base.StageBase.f_min"]], "f_pos (aslm.model.devices.stages.stage_base.stagebase attribute)": [[168, "aslm.model.devices.stages.stage_base.StageBase.f_pos"]], "get_abs_position() (aslm.model.devices.stages.stage_base.stagebase method)": [[168, "aslm.model.devices.stages.stage_base.StageBase.get_abs_position"], [168, "id1"]], "position_dict (aslm.model.devices.stages.stage_base.stagebase attribute)": [[168, "aslm.model.devices.stages.stage_base.StageBase.position_dict"]], "stop() (aslm.model.devices.stages.stage_base.stagebase method)": [[168, "aslm.model.devices.stages.stage_base.StageBase.stop"], [168, "id2"]], "theta_max (aslm.model.devices.stages.stage_base.stagebase attribute)": [[168, "aslm.model.devices.stages.stage_base.StageBase.theta_max"]], "theta_min (aslm.model.devices.stages.stage_base.stagebase attribute)": [[168, "aslm.model.devices.stages.stage_base.StageBase.theta_min"]], "theta_pos (aslm.model.devices.stages.stage_base.stagebase attribute)": [[168, "aslm.model.devices.stages.stage_base.StageBase.theta_pos"]], "x_max (aslm.model.devices.stages.stage_base.stagebase attribute)": [[168, "aslm.model.devices.stages.stage_base.StageBase.x_max"]], "x_min (aslm.model.devices.stages.stage_base.stagebase attribute)": [[168, "aslm.model.devices.stages.stage_base.StageBase.x_min"]], "x_pos (aslm.model.devices.stages.stage_base.stagebase attribute)": [[168, "aslm.model.devices.stages.stage_base.StageBase.x_pos"]], "y_max (aslm.model.devices.stages.stage_base.stagebase attribute)": [[168, "aslm.model.devices.stages.stage_base.StageBase.y_max"]], "y_min (aslm.model.devices.stages.stage_base.stagebase attribute)": [[168, "aslm.model.devices.stages.stage_base.StageBase.y_min"]], "y_pos (aslm.model.devices.stages.stage_base.stagebase attribute)": [[168, "aslm.model.devices.stages.stage_base.StageBase.y_pos"]], "z_max (aslm.model.devices.stages.stage_base.stagebase attribute)": [[168, "aslm.model.devices.stages.stage_base.StageBase.z_max"]], "z_min (aslm.model.devices.stages.stage_base.stagebase attribute)": [[168, "aslm.model.devices.stages.stage_base.StageBase.z_min"]], "z_pos (aslm.model.devices.stages.stage_base.stagebase attribute)": [[168, "aslm.model.devices.stages.stage_base.StageBase.z_pos"]], "aslm.model.devices.stages.stage_galvo": [[169, "module-aslm.model.devices.stages.stage_galvo"]], "galvonistage (class in aslm.model.devices.stages.stage_galvo)": [[170, "aslm.model.devices.stages.stage_galvo.GalvoNIStage"]], "__init__() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[170, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.__init__"]], "create_position_dict() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[170, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.create_position_dict"], [170, "id0"]], "get_abs_position() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[170, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.get_abs_position"], [170, "id1"]], "move_absolute() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[170, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[170, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.move_axis_absolute"]], "report_position() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[170, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.report_position"]], "stop() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[170, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.stop"], [170, "id2"]], "aslm.model.devices.stages.stage_mcl": [[171, "module-aslm.model.devices.stages.stage_mcl"]], "mclstage (class in aslm.model.devices.stages.stage_mcl)": [[172, "aslm.model.devices.stages.stage_mcl.MCLStage"]], "__init__() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[172, "aslm.model.devices.stages.stage_mcl.MCLStage.__init__"]], "create_position_dict() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[172, "aslm.model.devices.stages.stage_mcl.MCLStage.create_position_dict"]], "get_abs_position() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[172, "aslm.model.devices.stages.stage_mcl.MCLStage.get_abs_position"]], "move_absolute() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[172, "aslm.model.devices.stages.stage_mcl.MCLStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[172, "aslm.model.devices.stages.stage_mcl.MCLStage.move_axis_absolute"]], "report_position() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[172, "aslm.model.devices.stages.stage_mcl.MCLStage.report_position"]], "stop() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[172, "aslm.model.devices.stages.stage_mcl.MCLStage.stop"]], "build_mclstage_connection() (in module aslm.model.devices.stages.stage_mcl)": [[173, "aslm.model.devices.stages.stage_mcl.build_MCLStage_connection"]], "aslm.model.devices.stages.stage_pi": [[174, "module-aslm.model.devices.stages.stage_pi"]], "pistage (class in aslm.model.devices.stages.stage_pi)": [[175, "aslm.model.devices.stages.stage_pi.PIStage"]], "__init__() (aslm.model.devices.stages.stage_pi.pistage method)": [[175, "aslm.model.devices.stages.stage_pi.PIStage.__init__"]], "create_position_dict() (aslm.model.devices.stages.stage_pi.pistage method)": [[175, "aslm.model.devices.stages.stage_pi.PIStage.create_position_dict"], [175, "id0"]], "f_max (aslm.model.devices.stages.stage_pi.pistage attribute)": [[175, "aslm.model.devices.stages.stage_pi.PIStage.f_max"]], "f_min (aslm.model.devices.stages.stage_pi.pistage attribute)": [[175, "aslm.model.devices.stages.stage_pi.PIStage.f_min"]], "f_pos (aslm.model.devices.stages.stage_pi.pistage attribute)": [[175, "aslm.model.devices.stages.stage_pi.PIStage.f_pos"]], "get_abs_position() (aslm.model.devices.stages.stage_pi.pistage method)": [[175, "aslm.model.devices.stages.stage_pi.PIStage.get_abs_position"], [175, "id1"]], "move_absolute() (aslm.model.devices.stages.stage_pi.pistage method)": [[175, "aslm.model.devices.stages.stage_pi.PIStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_pi.pistage method)": [[175, "aslm.model.devices.stages.stage_pi.PIStage.move_axis_absolute"]], "position_dict (aslm.model.devices.stages.stage_pi.pistage attribute)": [[175, "aslm.model.devices.stages.stage_pi.PIStage.position_dict"]], "report_position() (aslm.model.devices.stages.stage_pi.pistage method)": [[175, "aslm.model.devices.stages.stage_pi.PIStage.report_position"]], "stop() (aslm.model.devices.stages.stage_pi.pistage method)": [[175, "aslm.model.devices.stages.stage_pi.PIStage.stop"], [175, "id2"]], "theta_max (aslm.model.devices.stages.stage_pi.pistage attribute)": [[175, "aslm.model.devices.stages.stage_pi.PIStage.theta_max"]], "theta_min (aslm.model.devices.stages.stage_pi.pistage attribute)": [[175, "aslm.model.devices.stages.stage_pi.PIStage.theta_min"]], "theta_pos (aslm.model.devices.stages.stage_pi.pistage attribute)": [[175, "aslm.model.devices.stages.stage_pi.PIStage.theta_pos"]], "x_max (aslm.model.devices.stages.stage_pi.pistage attribute)": [[175, "aslm.model.devices.stages.stage_pi.PIStage.x_max"]], "x_min (aslm.model.devices.stages.stage_pi.pistage attribute)": [[175, "aslm.model.devices.stages.stage_pi.PIStage.x_min"]], "x_pos (aslm.model.devices.stages.stage_pi.pistage attribute)": [[175, "aslm.model.devices.stages.stage_pi.PIStage.x_pos"]], "y_max (aslm.model.devices.stages.stage_pi.pistage attribute)": [[175, "aslm.model.devices.stages.stage_pi.PIStage.y_max"]], "y_min (aslm.model.devices.stages.stage_pi.pistage attribute)": [[175, "aslm.model.devices.stages.stage_pi.PIStage.y_min"]], "y_pos (aslm.model.devices.stages.stage_pi.pistage attribute)": [[175, "aslm.model.devices.stages.stage_pi.PIStage.y_pos"]], "z_max (aslm.model.devices.stages.stage_pi.pistage attribute)": [[175, "aslm.model.devices.stages.stage_pi.PIStage.z_max"]], "z_min (aslm.model.devices.stages.stage_pi.pistage attribute)": [[175, "aslm.model.devices.stages.stage_pi.PIStage.z_min"]], "z_pos (aslm.model.devices.stages.stage_pi.pistage attribute)": [[175, "aslm.model.devices.stages.stage_pi.PIStage.z_pos"]], "build_pistage_connection() (in module aslm.model.devices.stages.stage_pi)": [[176, "aslm.model.devices.stages.stage_pi.build_PIStage_connection"]], "aslm.model.devices.stages.stage_sutter": [[177, "module-aslm.model.devices.stages.stage_sutter"]], "sutterstage (class in aslm.model.devices.stages.stage_sutter)": [[178, "aslm.model.devices.stages.stage_sutter.SutterStage"]], "__init__() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[178, "aslm.model.devices.stages.stage_sutter.SutterStage.__init__"]], "baudrate (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[178, "aslm.model.devices.stages.stage_sutter.SutterStage.baudrate"]], "check_byte_order() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[178, "aslm.model.devices.stages.stage_sutter.SutterStage.check_byte_order"]], "close() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[178, "aslm.model.devices.stages.stage_sutter.SutterStage.close"], [178, "id0"]], "comport (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[178, "aslm.model.devices.stages.stage_sutter.SutterStage.comport"]], "convert_microns_to_microsteps() (aslm.model.devices.stages.stage_sutter.sutterstage static method)": [[178, "aslm.model.devices.stages.stage_sutter.SutterStage.convert_microns_to_microsteps"]], "convert_microsteps_to_microns() (aslm.model.devices.stages.stage_sutter.sutterstage static method)": [[178, "aslm.model.devices.stages.stage_sutter.SutterStage.convert_microsteps_to_microns"]], "create_position_dict() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[178, "aslm.model.devices.stages.stage_sutter.SutterStage.create_position_dict"]], "filter_dictionary (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[178, "aslm.model.devices.stages.stage_sutter.SutterStage.filter_dictionary"]], "flush_buffers() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[178, "aslm.model.devices.stages.stage_sutter.SutterStage.flush_buffers"]], "get_abs_position() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[178, "aslm.model.devices.stages.stage_sutter.SutterStage.get_abs_position"]], "move_absolute() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[178, "aslm.model.devices.stages.stage_sutter.SutterStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[178, "aslm.model.devices.stages.stage_sutter.SutterStage.move_axis_absolute"]], "read() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[178, "aslm.model.devices.stages.stage_sutter.SutterStage.read"]], "report_position() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[178, "aslm.model.devices.stages.stage_sutter.SutterStage.report_position"]], "set_stage_speed_and_resolution() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[178, "aslm.model.devices.stages.stage_sutter.SutterStage.set_stage_speed_and_resolution"]], "stop() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[178, "aslm.model.devices.stages.stage_sutter.SutterStage.stop"]], "baudrate (in module aslm.model.devices.stages.stage_sutter)": [[179, "aslm.model.devices.stages.stage_sutter.baudrate"]], "build_sutter_stage_connection() (in module aslm.model.devices.stages.stage_sutter)": [[179, "aslm.model.devices.stages.stage_sutter.build_sutter_stage_connection"]], "comport (in module aslm.model.devices.stages.stage_sutter)": [[179, "aslm.model.devices.stages.stage_sutter.comport"]], "aslm.model.devices.stages.stage_synthetic": [[180, "module-aslm.model.devices.stages.stage_synthetic"]], "syntheticstage (class in aslm.model.devices.stages.stage_synthetic)": [[181, "aslm.model.devices.stages.stage_synthetic.SyntheticStage"]], "__init__() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[181, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.__init__"]], "create_position_dict() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[181, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.create_position_dict"]], "get_abs_position() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[181, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.get_abs_position"]], "move_absolute() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[181, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[181, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.move_axis_absolute"]], "stop() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[181, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.stop"]], "aslm.model.devices.stages.stage_tl_kcube_inertial": [[182, "module-aslm.model.devices.stages.stage_tl_kcube_inertial"]], "tlkimstage (class in aslm.model.devices.stages.stage_tl_kcube_inertial)": [[183, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage"]], "__init__() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[183, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.__init__"]], "create_position_dict() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[183, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.create_position_dict"]], "get_abs_position() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[183, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.get_abs_position"]], "move_absolute() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[183, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[183, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.move_axis_absolute"]], "report_position() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[183, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.report_position"]], "stop() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[183, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.stop"]], "build_tlkimstage_connection() (in module aslm.model.devices.stages.stage_tl_kcube_inertial)": [[184, "aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection"]], "aslm.model.devices.zoom": [[185, "module-aslm.model.devices.zoom"]], "aslm.model.devices.zoom.zoom_base": [[186, "module-aslm.model.devices.zoom.zoom_base"]], "zoombase (class in aslm.model.devices.zoom.zoom_base)": [[187, "aslm.model.devices.zoom.zoom_base.ZoomBase"]], "__init__() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[187, "aslm.model.devices.zoom.zoom_base.ZoomBase.__init__"]], "move() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[187, "aslm.model.devices.zoom.zoom_base.ZoomBase.move"]], "read_position() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[187, "aslm.model.devices.zoom.zoom_base.ZoomBase.read_position"]], "set_zoom() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[187, "aslm.model.devices.zoom.zoom_base.ZoomBase.set_zoom"]], "aslm.model.devices.zoom.zoom_synthetic": [[188, "module-aslm.model.devices.zoom.zoom_synthetic"]], "syntheticzoom (class in aslm.model.devices.zoom.zoom_synthetic)": [[189, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom"]], "__init__() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[189, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.__init__"]], "move() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[189, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.move"], [189, "id0"]], "read_position() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[189, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.read_position"], [189, "id1"]], "set_zoom() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[189, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.set_zoom"], [189, "id2"]], "aslm.model.dummy": [[190, "module-aslm.model.dummy"]], "dummycontroller (class in aslm.model.dummy)": [[191, "aslm.model.dummy.DummyController"]], "__init__() (aslm.model.dummy.dummycontroller method)": [[191, "aslm.model.dummy.DummyController.__init__"]], "execute() (aslm.model.dummy.dummycontroller method)": [[191, "aslm.model.dummy.DummyController.execute"]], "pop() (aslm.model.dummy.dummycontroller method)": [[191, "aslm.model.dummy.DummyController.pop"]], "dummydevice (class in aslm.model.dummy)": [[192, "aslm.model.dummy.DummyDevice"]], "__init__() (aslm.model.dummy.dummydevice method)": [[192, "aslm.model.dummy.DummyDevice.__init__"]], "clear() (aslm.model.dummy.dummydevice method)": [[192, "aslm.model.dummy.DummyDevice.clear"]], "data_pipe (aslm.model.dummy.dummydevice attribute)": [[192, "aslm.model.dummy.DummyDevice.data_pipe"]], "generate_message() (aslm.model.dummy.dummydevice method)": [[192, "aslm.model.dummy.DummyDevice.generate_message"]], "listen() (aslm.model.dummy.dummydevice method)": [[192, "aslm.model.dummy.DummyDevice.listen"]], "sendout() (aslm.model.dummy.dummydevice method)": [[192, "aslm.model.dummy.DummyDevice.sendout"]], "setup() (aslm.model.dummy.dummydevice method)": [[192, "aslm.model.dummy.DummyDevice.setup"], [192, "id0"]], "shutdown() (aslm.model.dummy.dummydevice method)": [[192, "aslm.model.dummy.DummyDevice.shutdown"]], "signal_pipe (aslm.model.dummy.dummydevice attribute)": [[192, "aslm.model.dummy.DummyDevice.signal_pipe"]], "dummymicroscope (class in aslm.model.dummy)": [[193, "aslm.model.dummy.DummyMicroscope"]], "__init__() (aslm.model.dummy.dummymicroscope method)": [[193, "aslm.model.dummy.DummyMicroscope.__init__"]], "data_pipe (aslm.model.dummy.dummymicroscope attribute)": [[193, "aslm.model.dummy.DummyMicroscope.data_pipe"]], "setup() (aslm.model.dummy.dummymicroscope method)": [[193, "aslm.model.dummy.DummyMicroscope.setup"]], "shutdown() (aslm.model.dummy.dummymicroscope method)": [[193, "aslm.model.dummy.DummyMicroscope.shutdown"]], "signal_pipe (aslm.model.dummy.dummymicroscope attribute)": [[193, "aslm.model.dummy.DummyMicroscope.signal_pipe"]], "dummymodel (class in aslm.model.dummy)": [[194, "aslm.model.dummy.DummyModel"]], "__init__() (aslm.model.dummy.dummymodel method)": [[194, "aslm.model.dummy.DummyModel.__init__"]], "configuration (aslm.model.dummy.dummymodel attribute)": [[194, "aslm.model.dummy.DummyModel.configuration"]], "data (aslm.model.dummy.dummymodel attribute)": [[194, "aslm.model.dummy.DummyModel.data"]], "data_container (aslm.model.dummy.dummymodel attribute)": [[194, "aslm.model.dummy.DummyModel.data_container"]], "data_func() (aslm.model.dummy.dummymodel method)": [[194, "aslm.model.dummy.DummyModel.data_func"], [194, "id0"]], "data_pipe (aslm.model.dummy.dummymodel attribute)": [[194, "aslm.model.dummy.DummyModel.data_pipe"]], "data_thread (aslm.model.dummy.dummymodel attribute)": [[194, "aslm.model.dummy.DummyModel.data_thread"]], "frame_id (aslm.model.dummy.dummymodel attribute)": [[194, "aslm.model.dummy.DummyModel.frame_id"]], "signal_container (aslm.model.dummy.dummymodel attribute)": [[194, "aslm.model.dummy.DummyModel.signal_container"]], "signal_func() (aslm.model.dummy.dummymodel method)": [[194, "aslm.model.dummy.DummyModel.signal_func"]], "signal_pipe (aslm.model.dummy.dummymodel attribute)": [[194, "aslm.model.dummy.DummyModel.signal_pipe"]], "signal_thread (aslm.model.dummy.dummymodel attribute)": [[194, "aslm.model.dummy.DummyModel.signal_thread"]], "start() (aslm.model.dummy.dummymodel method)": [[194, "aslm.model.dummy.DummyModel.start"]], "stop_flag (aslm.model.dummy.dummymodel attribute)": [[194, "aslm.model.dummy.DummyModel.stop_flag"]], "aslm.model.features": [[195, "module-aslm.model.features"]], "aslm.model.features.autofocus": [[196, "module-aslm.model.features.autofocus"]], "autofocus (class in aslm.model.features.autofocus)": [[197, "aslm.model.features.autofocus.Autofocus"]], "__init__() (aslm.model.features.autofocus.autofocus method)": [[197, "aslm.model.features.autofocus.Autofocus.__init__"]], "autofocus_frame_queue (aslm.model.features.autofocus.autofocus attribute)": [[197, "aslm.model.features.autofocus.Autofocus.autofocus_frame_queue"]], "autofocus_pos_queue (aslm.model.features.autofocus.autofocus attribute)": [[197, "aslm.model.features.autofocus.Autofocus.autofocus_pos_queue"]], "coarse_step_size (aslm.model.features.autofocus.autofocus attribute)": [[197, "aslm.model.features.autofocus.Autofocus.coarse_step_size"]], "coarse_steps (aslm.model.features.autofocus.autofocus attribute)": [[197, "aslm.model.features.autofocus.Autofocus.coarse_steps"]], "end_func_data() (aslm.model.features.autofocus.autofocus method)": [[197, "aslm.model.features.autofocus.Autofocus.end_func_data"]], "end_func_signal() (aslm.model.features.autofocus.autofocus method)": [[197, "aslm.model.features.autofocus.Autofocus.end_func_signal"]], "f_frame_id (aslm.model.features.autofocus.autofocus attribute)": [[197, "aslm.model.features.autofocus.Autofocus.f_frame_id"]], "f_pos (aslm.model.features.autofocus.autofocus attribute)": [[197, "aslm.model.features.autofocus.Autofocus.f_pos"]], "fine_pos_offset (aslm.model.features.autofocus.autofocus attribute)": [[197, "aslm.model.features.autofocus.Autofocus.fine_pos_offset"]], "fine_step_size (aslm.model.features.autofocus.autofocus attribute)": [[197, "aslm.model.features.autofocus.Autofocus.fine_step_size"]], "focus_pos (aslm.model.features.autofocus.autofocus attribute)": [[197, "aslm.model.features.autofocus.Autofocus.focus_pos"]], "frame_num (aslm.model.features.autofocus.autofocus attribute)": [[197, "aslm.model.features.autofocus.Autofocus.frame_num"]], "get_autofocus_frame_num() (aslm.model.features.autofocus.autofocus method)": [[197, "aslm.model.features.autofocus.Autofocus.get_autofocus_frame_num"]], "get_frames_num (aslm.model.features.autofocus.autofocus attribute)": [[197, "aslm.model.features.autofocus.Autofocus.get_frames_num"]], "get_steps() (aslm.model.features.autofocus.autofocus static method)": [[197, "aslm.model.features.autofocus.Autofocus.get_steps"]], "in_func_data() (aslm.model.features.autofocus.autofocus method)": [[197, "aslm.model.features.autofocus.Autofocus.in_func_data"]], "in_func_signal() (aslm.model.features.autofocus.autofocus method)": [[197, "aslm.model.features.autofocus.Autofocus.in_func_signal"]], "init_pos (aslm.model.features.autofocus.autofocus attribute)": [[197, "aslm.model.features.autofocus.Autofocus.init_pos"]], "max_entropy (aslm.model.features.autofocus.autofocus attribute)": [[197, "aslm.model.features.autofocus.Autofocus.max_entropy"]], "plot_data (aslm.model.features.autofocus.autofocus attribute)": [[197, "aslm.model.features.autofocus.Autofocus.plot_data"]], "pre_func_data() (aslm.model.features.autofocus.autofocus method)": [[197, "aslm.model.features.autofocus.Autofocus.pre_func_data"]], "pre_func_signal() (aslm.model.features.autofocus.autofocus method)": [[197, "aslm.model.features.autofocus.Autofocus.pre_func_signal"]], "run() (aslm.model.features.autofocus.autofocus method)": [[197, "aslm.model.features.autofocus.Autofocus.run"], [197, "id0"]], "signal_id (aslm.model.features.autofocus.autofocus attribute)": [[197, "aslm.model.features.autofocus.Autofocus.signal_id"]], "target_channel (aslm.model.features.autofocus.autofocus attribute)": [[197, "aslm.model.features.autofocus.Autofocus.target_channel"]], "target_frame_id (aslm.model.features.autofocus.autofocus attribute)": [[197, "aslm.model.features.autofocus.Autofocus.target_frame_id"]], "total_frame_num (aslm.model.features.autofocus.autofocus attribute)": [[197, "aslm.model.features.autofocus.Autofocus.total_frame_num"]], "aslm.model.features.common_features": [[198, "module-aslm.model.features.common_features"]], "changeresolution (class in aslm.model.features.common_features)": [[199, "aslm.model.features.common_features.ChangeResolution"]], "__init__() (aslm.model.features.common_features.changeresolution method)": [[199, "aslm.model.features.common_features.ChangeResolution.__init__"]], "conproacquisition (class in aslm.model.features.common_features)": [[200, "aslm.model.features.common_features.ConProAcquisition"]], "__init__() (aslm.model.features.common_features.conproacquisition method)": [[200, "aslm.model.features.common_features.ConProAcquisition.__init__"]], "findtissuesimple2d (class in aslm.model.features.common_features)": [[201, "aslm.model.features.common_features.FindTissueSimple2D"]], "__init__() (aslm.model.features.common_features.findtissuesimple2d method)": [[201, "aslm.model.features.common_features.FindTissueSimple2D.__init__"]], "loopbycount (class in aslm.model.features.common_features)": [[202, "aslm.model.features.common_features.LoopByCount"]], "__init__() (aslm.model.features.common_features.loopbycount method)": [[202, "aslm.model.features.common_features.LoopByCount.__init__"]], "preparenextchannel (class in aslm.model.features.common_features)": [[203, "aslm.model.features.common_features.PrepareNextChannel"]], "__init__() (aslm.model.features.common_features.preparenextchannel method)": [[203, "aslm.model.features.common_features.PrepareNextChannel.__init__"]], "snap (class in aslm.model.features.common_features)": [[204, "aslm.model.features.common_features.Snap"]], "__init__() (aslm.model.features.common_features.snap method)": [[204, "aslm.model.features.common_features.Snap.__init__"]], "waittocontinue (class in aslm.model.features.common_features)": [[205, "aslm.model.features.common_features.WaitToContinue"]], "__init__() (aslm.model.features.common_features.waittocontinue method)": [[205, "aslm.model.features.common_features.WaitToContinue.__init__"]], "zstackacquisition (class in aslm.model.features.common_features)": [[206, "aslm.model.features.common_features.ZStackAcquisition"]], "__init__() (aslm.model.features.common_features.zstackacquisition method)": [[206, "aslm.model.features.common_features.ZStackAcquisition.__init__"]], "aslm.model.features.dummy_detective": [[207, "module-aslm.model.features.dummy_detective"]], "dummy_detective (class in aslm.model.features.dummy_detective)": [[208, "aslm.model.features.dummy_detective.Dummy_Detective"]], "__init__() (aslm.model.features.dummy_detective.dummy_detective method)": [[208, "aslm.model.features.dummy_detective.Dummy_Detective.__init__"]], "aslm.model.features.feature_container": [[209, "module-aslm.model.features.feature_container"]], "container (class in aslm.model.features.feature_container)": [[210, "aslm.model.features.feature_container.Container"]], "__init__() (aslm.model.features.feature_container.container method)": [[210, "aslm.model.features.feature_container.Container.__init__"]], "datacontainer (class in aslm.model.features.feature_container)": [[211, "aslm.model.features.feature_container.DataContainer"]], "__init__() (aslm.model.features.feature_container.datacontainer method)": [[211, "aslm.model.features.feature_container.DataContainer.__init__"]], "datanode (class in aslm.model.features.feature_container)": [[212, "aslm.model.features.feature_container.DataNode"]], "__init__() (aslm.model.features.feature_container.datanode method)": [[212, "aslm.model.features.feature_container.DataNode.__init__"]], "signalcontainer (class in aslm.model.features.feature_container)": [[213, "aslm.model.features.feature_container.SignalContainer"]], "__init__() (aslm.model.features.feature_container.signalcontainer method)": [[213, "aslm.model.features.feature_container.SignalContainer.__init__"]], "signalnode (class in aslm.model.features.feature_container)": [[214, "aslm.model.features.feature_container.SignalNode"]], "__init__() (aslm.model.features.feature_container.signalnode method)": [[214, "aslm.model.features.feature_container.SignalNode.__init__"]], "treenode (class in aslm.model.features.feature_container)": [[215, "aslm.model.features.feature_container.TreeNode"]], "__init__() (aslm.model.features.feature_container.treenode method)": [[215, "aslm.model.features.feature_container.TreeNode.__init__"]], "dummy_true() (in module aslm.model.features.feature_container)": [[216, "aslm.model.features.feature_container.dummy_True"]], "dummy_func() (in module aslm.model.features.feature_container)": [[217, "aslm.model.features.feature_container.dummy_func"]], "get_registered_funcs() (in module aslm.model.features.feature_container)": [[218, "aslm.model.features.feature_container.get_registered_funcs"]], "load_features() (in module aslm.model.features.feature_container)": [[219, "aslm.model.features.feature_container.load_features"]], "aslm.model.features.image_writer": [[220, "module-aslm.model.features.image_writer"]], "imagewriter (class in aslm.model.features.image_writer)": [[221, "aslm.model.features.image_writer.ImageWriter"]], "__init__() (aslm.model.features.image_writer.imagewriter method)": [[221, "aslm.model.features.image_writer.ImageWriter.__init__"]], "close() (aslm.model.features.image_writer.imagewriter method)": [[221, "aslm.model.features.image_writer.ImageWriter.close"]], "current_time_point (aslm.model.features.image_writer.imagewriter attribute)": [[221, "aslm.model.features.image_writer.ImageWriter.current_time_point"], [221, "id4"]], "data_bffer (aslm.model.features.image_writer.imagewriter attribute)": [[221, "aslm.model.features.image_writer.ImageWriter.data_bffer"], [221, "id5"]], "data_source (aslm.model.features.image_writer.imagewriter attribute)": [[221, "aslm.model.features.image_writer.ImageWriter.data_source"], [221, "id1"]], "generate_image_name() (aslm.model.features.image_writer.imagewriter method)": [[221, "aslm.model.features.image_writer.ImageWriter.generate_image_name"]], "generate_meta_data() (aslm.model.features.image_writer.imagewriter method)": [[221, "aslm.model.features.image_writer.ImageWriter.generate_meta_data"]], "mip (aslm.model.features.image_writer.imagewriter attribute)": [[221, "aslm.model.features.image_writer.ImageWriter.mip"], [221, "id3"]], "mip_directory (aslm.model.features.image_writer.imagewriter attribute)": [[221, "aslm.model.features.image_writer.ImageWriter.mip_directory"], [221, "id2"]], "model (aslm.model.features.image_writer.imagewriter attribute)": [[221, "aslm.model.features.image_writer.ImageWriter.model"], [221, "id0"]], "save_image() (aslm.model.features.image_writer.imagewriter method)": [[221, "aslm.model.features.image_writer.ImageWriter.save_image"]], "aslm.model.features.restful_features": [[222, "module-aslm.model.features.restful_features"]], "ilastiksegmentation (class in aslm.model.features.restful_features)": [[223, "aslm.model.features.restful_features.IlastikSegmentation"]], "__init__() (aslm.model.features.restful_features.ilastiksegmentation method)": [[223, "aslm.model.features.restful_features.IlastikSegmentation.__init__"]], "prepare_service() (in module aslm.model.features.restful_features)": [[224, "aslm.model.features.restful_features.prepare_service"]], "aslm.model.features.volume_search": [[225, "module-aslm.model.features.volume_search"]], "volumesearch (class in aslm.model.features.volume_search)": [[226, "aslm.model.features.volume_search.VolumeSearch"]], "__init__() (aslm.model.features.volume_search.volumesearch method)": [[226, "aslm.model.features.volume_search.VolumeSearch.__init__"]], "aslm.model.metadata_sources": [[227, "module-aslm.model.metadata_sources"]], "aslm.model.metadata_sources.bdv_metadata": [[228, "module-aslm.model.metadata_sources.bdv_metadata"]], "bigdataviewermetadata (class in aslm.model.metadata_sources.bdv_metadata)": [[229, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata"]], "__init__() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[229, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.__init__"]], "parse_bdv_xml() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[229, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.parse_bdv_xml"]], "shape (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata property)": [[229, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.shape"]], "stage_positions_to_affine_matrix() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[229, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.stage_positions_to_affine_matrix"]], "to_xml() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[229, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.to_xml"]], "voxel_size (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata property)": [[229, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.voxel_size"]], "write_xml() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[229, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.write_xml"]], "aslm.model.metadata_sources.metadata": [[230, "module-aslm.model.metadata_sources.metadata"]], "metadata (class in aslm.model.metadata_sources.metadata)": [[231, "aslm.model.metadata_sources.metadata.Metadata"]], "__init__() (aslm.model.metadata_sources.metadata.metadata method)": [[231, "aslm.model.metadata_sources.metadata.Metadata.__init__"]], "shape (aslm.model.metadata_sources.metadata.metadata property)": [[231, "aslm.model.metadata_sources.metadata.Metadata.shape"]], "voxel_size (aslm.model.metadata_sources.metadata.metadata property)": [[231, "aslm.model.metadata_sources.metadata.Metadata.voxel_size"]], "xmlmetadata (class in aslm.model.metadata_sources.metadata)": [[232, "aslm.model.metadata_sources.metadata.XMLMetadata"]], "__init__() (aslm.model.metadata_sources.metadata.xmlmetadata method)": [[232, "aslm.model.metadata_sources.metadata.XMLMetadata.__init__"]], "shape (aslm.model.metadata_sources.metadata.xmlmetadata property)": [[232, "aslm.model.metadata_sources.metadata.XMLMetadata.shape"]], "to_xml() (aslm.model.metadata_sources.metadata.xmlmetadata method)": [[232, "aslm.model.metadata_sources.metadata.XMLMetadata.to_xml"]], "voxel_size (aslm.model.metadata_sources.metadata.xmlmetadata property)": [[232, "aslm.model.metadata_sources.metadata.XMLMetadata.voxel_size"]], "write_xml() (aslm.model.metadata_sources.metadata.xmlmetadata method)": [[232, "aslm.model.metadata_sources.metadata.XMLMetadata.write_xml"]], "aslm.model.metadata_sources.ome_tiff_metadata": [[233, "module-aslm.model.metadata_sources.ome_tiff_metadata"]], "ometiffmetadata (class in aslm.model.metadata_sources.ome_tiff_metadata)": [[234, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata"]], "__init__() (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata method)": [[234, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.__init__"]], "ome_tiff_xml_dict() (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata method)": [[234, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.ome_tiff_xml_dict"]], "shape (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata property)": [[234, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.shape"]], "to_xml() (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata method)": [[234, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.to_xml"]], "voxel_size (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata property)": [[234, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.voxel_size"]], "write_xml() (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata method)": [[234, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.write_xml"]], "aslm.model.microscope": [[235, "module-aslm.model.microscope"]], "microscope (class in aslm.model.microscope)": [[236, "aslm.model.microscope.Microscope"]], "__init__() (aslm.model.microscope.microscope method)": [[236, "aslm.model.microscope.Microscope.__init__"]], "calculate_all_waveform() (aslm.model.microscope.microscope method)": [[236, "aslm.model.microscope.Microscope.calculate_all_waveform"]], "configuration (aslm.model.microscope.microscope attribute)": [[236, "aslm.model.microscope.Microscope.configuration"]], "daq (aslm.model.microscope.microscope attribute)": [[236, "aslm.model.microscope.Microscope.daq"]], "data_buffer (aslm.model.microscope.microscope attribute)": [[236, "aslm.model.microscope.Microscope.data_buffer"]], "end_acquisition() (aslm.model.microscope.microscope method)": [[236, "aslm.model.microscope.Microscope.end_acquisition"], [236, "id0"]], "get_readout_time() (aslm.model.microscope.microscope method)": [[236, "aslm.model.microscope.Microscope.get_readout_time"], [236, "id1"]], "get_stage_position() (aslm.model.microscope.microscope method)": [[236, "aslm.model.microscope.Microscope.get_stage_position"]], "microscope_name (aslm.model.microscope.microscope attribute)": [[236, "aslm.model.microscope.Microscope.microscope_name"]], "move_stage() (aslm.model.microscope.microscope method)": [[236, "aslm.model.microscope.Microscope.move_stage"]], "move_stage_offset() (aslm.model.microscope.microscope method)": [[236, "aslm.model.microscope.Microscope.move_stage_offset"], [236, "id2"]], "number_of_frames (aslm.model.microscope.microscope attribute)": [[236, "aslm.model.microscope.Microscope.number_of_frames"]], "prepare_acquisition() (aslm.model.microscope.microscope method)": [[236, "aslm.model.microscope.Microscope.prepare_acquisition"]], "prepare_next_channel() (aslm.model.microscope.microscope method)": [[236, "aslm.model.microscope.Microscope.prepare_next_channel"]], "stop_stage() (aslm.model.microscope.microscope method)": [[236, "aslm.model.microscope.Microscope.stop_stage"]], "update_data_buffer() (aslm.model.microscope.microscope method)": [[236, "aslm.model.microscope.Microscope.update_data_buffer"], [236, "id3"]], "aslm.model.model": [[237, "module-aslm.model.model"]], "model (class in aslm.model.model)": [[238, "aslm.model.model.Model"]], "use_gpu (aslm.model.model.model attribute)": [[238, "aslm.model.model.Model.USE_GPU"]], "__init__() (aslm.model.model.model method)": [[238, "aslm.model.model.Model.__init__"]], "args (aslm.model.model.model attribute)": [[238, "aslm.model.model.Model.args"]], "change_resolution() (aslm.model.model.model method)": [[238, "aslm.model.model.Model.change_resolution"]], "configuration_path (aslm.model.model.model attribute)": [[238, "aslm.model.model.Model.configuration_path"]], "create_pipe() (aslm.model.model.model method)": [[238, "aslm.model.model.Model.create_pipe"], [238, "id0"]], "end_acquisition() (aslm.model.model.model method)": [[238, "aslm.model.model.Model.end_acquisition"], [238, "id1"]], "event_queue (aslm.model.model.model attribute)": [[238, "aslm.model.model.Model.event_queue"]], "experiment_path (aslm.model.model.model attribute)": [[238, "aslm.model.model.Model.experiment_path"]], "get_active_microscope() (aslm.model.model.model method)": [[238, "aslm.model.model.Model.get_active_microscope"]], "get_data_buffer() (aslm.model.model.model method)": [[238, "aslm.model.model.Model.get_data_buffer"], [238, "id2"]], "get_microscope_info() (aslm.model.model.model method)": [[238, "aslm.model.model.Model.get_microscope_info"]], "get_offset_variance_maps() (aslm.model.model.model method)": [[238, "aslm.model.model.Model.get_offset_variance_maps"]], "get_readout_time() (aslm.model.model.model method)": [[238, "aslm.model.model.Model.get_readout_time"]], "get_stage_position() (aslm.model.model.model method)": [[238, "aslm.model.model.Model.get_stage_position"]], "load_images() (aslm.model.model.model method)": [[238, "aslm.model.model.Model.load_images"]], "move_stage() (aslm.model.model.model method)": [[238, "aslm.model.model.Model.move_stage"], [238, "id3"]], "pause_data_thread() (aslm.model.model.model method)": [[238, "aslm.model.model.Model.pause_data_thread"]], "prepare_acquisition() (aslm.model.model.model method)": [[238, "aslm.model.model.Model.prepare_acquisition"], [238, "id4"]], "release_pipe() (aslm.model.model.model method)": [[238, "aslm.model.model.Model.release_pipe"], [238, "id5"]], "resume_data_thread() (aslm.model.model.model method)": [[238, "aslm.model.model.Model.resume_data_thread"]], "run_acquisition() (aslm.model.model.model method)": [[238, "aslm.model.model.Model.run_acquisition"]], "run_command() (aslm.model.model.model method)": [[238, "aslm.model.model.Model.run_command"], [238, "id6"]], "run_data_process() (aslm.model.model.model method)": [[238, "aslm.model.model.Model.run_data_process"], [238, "id7"]], "run_live_acquisition() (aslm.model.model.model method)": [[238, "aslm.model.model.Model.run_live_acquisition"], [238, "id8"]], "run_single_acquisition() (aslm.model.model.model method)": [[238, "aslm.model.model.Model.run_single_acquisition"]], "run_single_channel_acquisition() (aslm.model.model.model method)": [[238, "aslm.model.model.Model.run_single_channel_acquisition"]], "run_single_channel_acquisition_with_features() (aslm.model.model.model method)": [[238, "aslm.model.model.Model.run_single_channel_acquisition_with_features"]], "run_z_stack_acquisition() (aslm.model.model.model method)": [[238, "aslm.model.model.Model.run_z_stack_acquisition"]], "snap_image() (aslm.model.model.model method)": [[238, "aslm.model.model.Model.snap_image"], [238, "id9"]], "stop_stage() (aslm.model.model.model method)": [[238, "aslm.model.model.Model.stop_stage"]], "update_data_buffer() (aslm.model.model.model method)": [[238, "aslm.model.model.Model.update_data_buffer"], [238, "id10"]], "update_ilastik_setting() (aslm.model.model.model method)": [[238, "aslm.model.model.Model.update_ilastik_setting"]], "aslm.model.waveforms": [[239, "module-aslm.model.waveforms"]], "camera_exposure() (in module aslm.model.waveforms)": [[240, "aslm.model.waveforms.camera_exposure"]], "dc_value() (in module aslm.model.waveforms)": [[241, "aslm.model.waveforms.dc_value"]], "remote_focus_ramp() (in module aslm.model.waveforms)": [[242, "aslm.model.waveforms.remote_focus_ramp"]], "sawtooth() (in module aslm.model.waveforms)": [[243, "aslm.model.waveforms.sawtooth"]], "sine_wave() (in module aslm.model.waveforms)": [[244, "aslm.model.waveforms.sine_wave"]], "single_pulse() (in module aslm.model.waveforms)": [[245, "aslm.model.waveforms.single_pulse"]], "smooth_waveform() (in module aslm.model.waveforms)": [[246, "aslm.model.waveforms.smooth_waveform"]], "square() (in module aslm.model.waveforms)": [[247, "aslm.model.waveforms.square"]], "aslm.tools": [[248, "module-aslm.tools"]], "aslm.tools.beams": [[249, "module-aslm.tools.beams"]], "fit_gaussian_beam_error() (in module aslm.tools.beams)": [[250, "aslm.tools.beams.fit_gaussian_beam_error"]], "fit_gaussian_beam_mse() (in module aslm.tools.beams)": [[251, "aslm.tools.beams.fit_gaussian_beam_mse"]], "gaussian_beam() (in module aslm.tools.beams)": [[252, "aslm.tools.beams.gaussian_beam"]], "aslm.tools.common_dict_tools": [[253, "module-aslm.tools.common_dict_tools"]], "update_settings_common() (in module aslm.tools.common_dict_tools)": [[254, "aslm.tools.common_dict_tools.update_settings_common"]], "update_stage_dict() (in module aslm.tools.common_dict_tools)": [[255, "aslm.tools.common_dict_tools.update_stage_dict"]], "aslm.tools.common_functions": [[256, "module-aslm.tools.common_functions"]], "build_ref_name() (in module aslm.tools.common_functions)": [[257, "aslm.tools.common_functions.build_ref_name"]], "combine_funcs() (in module aslm.tools.common_functions)": [[258, "aslm.tools.common_functions.combine_funcs"]], "copy_proxy_object() (in module aslm.tools.common_functions)": [[259, "aslm.tools.common_functions.copy_proxy_object"]], "aslm.tools.decorators": [[260, "module-aslm.tools.decorators"]], "function_timer() (in module aslm.tools.decorators)": [[261, "aslm.tools.decorators.function_timer"]], "aslm.tools.file_functions": [[262, "module-aslm.tools.file_functions"]], "create_save_path() (in module aslm.tools.file_functions)": [[263, "aslm.tools.file_functions.create_save_path"]], "save_yaml_file() (in module aslm.tools.file_functions)": [[264, "aslm.tools.file_functions.save_yaml_file"]], "aslm.tools.image": [[265, "module-aslm.tools.image"]], "text_array() (in module aslm.tools.image)": [[266, "aslm.tools.image.text_array"]], "aslm.tools.image_loaders": [[267, "module-aslm.tools.image_loaders"]], "lazytiff (class in aslm.tools.image_loaders)": [[268, "aslm.tools.image_loaders.LazyTiff"]], "__init__() (aslm.tools.image_loaders.lazytiff method)": [[268, "aslm.tools.image_loaders.LazyTiff.__init__"]], "aslm.tools.main_functions": [[269, "module-aslm.tools.main_functions"]], "create_parser() (in module aslm.tools.main_functions)": [[270, "aslm.tools.main_functions.create_parser"]], "evaluate_parser_input_arguments() (in module aslm.tools.main_functions)": [[271, "aslm.tools.main_functions.evaluate_parser_input_arguments"]], "identify_gpu() (in module aslm.tools.main_functions)": [[272, "aslm.tools.main_functions.identify_gpu"]], "aslm.tools.multipos_table_tools": [[273, "module-aslm.tools.multipos_table_tools"]], "calc_num_tiles() (in module aslm.tools.multipos_table_tools)": [[274, "aslm.tools.multipos_table_tools.calc_num_tiles"]], "compute_tiles_from_bounding_box() (in module aslm.tools.multipos_table_tools)": [[275, "aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box"]], "sign() (in module aslm.tools.multipos_table_tools)": [[276, "aslm.tools.multipos_table_tools.sign"]], "update_table() (in module aslm.tools.multipos_table_tools)": [[277, "aslm.tools.multipos_table_tools.update_table"]], "aslm.tools.project_stats": [[278, "module-aslm.tools.project_stats"]], "countlines() (in module aslm.tools.project_stats)": [[279, "aslm.tools.project_stats.countlines"]], "aslm.tools.sdf": [[280, "module-aslm.tools.sdf"]], "box() (in module aslm.tools.sdf)": [[281, "aslm.tools.sdf.box"]], "sphere() (in module aslm.tools.sdf)": [[282, "aslm.tools.sdf.sphere"]], "volume_from_sdf() (in module aslm.tools.sdf)": [[283, "aslm.tools.sdf.volume_from_sdf"]], "aslm.tools.xml_tools": [[284, "module-aslm.tools.xml_tools"]], "dict_to_xml() (in module aslm.tools.xml_tools)": [[285, "aslm.tools.xml_tools.dict_to_xml"]], "parse_xml() (in module aslm.tools.xml_tools)": [[286, "aslm.tools.xml_tools.parse_xml"]], "aslm.view": [[287, "module-aslm.view"]], "aslm.view.main_window_content": [[288, "module-aslm.view.main_window_content"]], "aslm.view.main_window_content.acquire_bar_frame": [[289, "module-aslm.view.main_window_content.acquire_bar_frame"]], "aslm.view.main_window_content.channel_settings": [[290, "module-aslm.view.main_window_content.channel_settings"]], "aslm.view.main_window_content.channel_settings.channel_settings_frames": [[291, "module-aslm.view.main_window_content.channel_settings.channel_settings_frames"]], "aslm.view.main_window_content.stage_control": [[292, "module-aslm.view.main_window_content.stage_control"]], "aslm.view.main_window_content.stage_control.stage_control_frames": [[293, "module-aslm.view.main_window_content.stage_control.stage_control_frames"]], "aslm.view.menus": [[294, "module-aslm.view.menus"]]}})