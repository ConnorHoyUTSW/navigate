from cProfile import label
import tkinter as tk
from tkinter import *
from tkinter import ttk
from tkinter.font import Font
from turtle import st

from view.custom_widgets.LabelInputWidgetFactory import LabelInput

class camera_mode(ttk.Labelframe):
    '''
    # This class generates the camera mode label frame. 
    Widgets can be adjusted below. Dropdown values need to be set in the controller.
    The function widget.set_values(values) allows this. It can be found in the LabelInput class.
    The widgets can be found in the dictionary by using the first word in the label, after using get_widgets
    The variables tied to each widget can be accessed via the widget directly or with the dictionary generated by get_variables.
    '''
    def __init__(self, settings_tab, *args, **kwargs):

        #Init Frame
        text_label = 'Camera Modes'
        ttk.Labelframe.__init__(self, settings_tab, text=text_label, *args, **kwargs)

        #Holds dropdowns, this is done in case more widgets are to be added in a different frame, these can be grouped together
        content_frame = ttk.Frame(self)
        content_frame.grid(row=0, column=0, sticky=(NSEW))
        

        #Dictionary for all the variables, this will be used by the controller
        self.inputs = {}
        self.labels = ['Sensor Mode', 'Readout Direction', 'Number of Pixels']
        self.names = ['Sensor', 'Readout', 'Pixels']

        #Dropdown loop
        for i in range(len(self.labels)):
            if i < len(self.labels) - 1:
                self.inputs[self.names[i]] = LabelInput(parent=content_frame,
                                                        label=self.labels[i],
                                                        input_class=ttk.Combobox,
                                                        input_var=tk.StringVar()                                          
                                                        )
                self.inputs[self.names[i]].grid(row=i, column=0, pady=1)
            else:
                self.inputs[self.names[i]] = LabelInput(parent=content_frame,
                                                        label=self.labels[i],
                                                        input_class=ttk.Spinbox,
                                                        input_var=tk.StringVar()   ,
                                                        input_args={"from_": 0, "to": 10000, "increment": 1}                                       
                                                        )
                self.inputs[self.names[i]].grid(row=i, column=0, pady=1)
        
        # Additional widget settings
       
        

    def get_variables(self):
        '''
        # This function returns a dictionary of all the variables that are tied to each widget name.
        The key is the widget name, value is the variable associated.
        '''
        variables = {}
        for key, widget in self.inputs.items():
            variables[key] = widget.get()
        return variables
    
    def get_widgets(self):
        '''
        # This function returns the dictionary that holds the widgets.
        The key is the widget name, value is the LabelInput class that has all the data.
        '''
        return self.inputs



if __name__ == '__main__':
    root = tk.Tk()
    camera_mode(root).grid(row=0, column=0, sticky=(NSEW))
    root.mainloop()